

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Jul 24 21:49:28 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og9 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	nvBANK4,global,class=BANK4,space=1,delta=1,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    35                           	psect	cinit,global,class=CODE,merge=1,delta=2
    36                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    37                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    38                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    39                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    40                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    41                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    42                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    43                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    44                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    45                           	psect	inittext,global,class=CODE,delta=2
    46                           	psect	clrtext,global,class=CODE,delta=2
    47                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,noexec
    48                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    49                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    50                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    51                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    52                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    53                           	psect	text1,local,class=CODE,merge=1,delta=2
    54                           	psect	text2,local,class=CODE,merge=1,delta=2
    55                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text5,local,class=CODE,merge=1,delta=2
    58                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    59                           	psect	text7,local,class=CODE,merge=1,delta=2
    60                           	psect	text8,local,class=CODE,merge=1,delta=2
    61                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    68                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    69                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    71                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    73                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    74                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    75                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    76                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    77                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    78                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    79                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    80                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    81                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    82                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    83                           	psect	text31,local,class=CODE,merge=1,delta=2
    84                           	psect	text32,local,class=CODE,merge=1,delta=2
    85                           	psect	text33,local,class=CODE,merge=1,delta=2
    86                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text35,local,class=CODE,merge=1,delta=2
    88                           	psect	text36,local,class=CODE,merge=1,delta=2
    89                           	psect	text37,local,class=CODE,merge=1,delta=2
    90                           	psect	text38,local,class=CODE,merge=1,delta=2
    91                           	psect	text39,local,class=CODE,merge=1,delta=2
    92                           	psect	text40,local,class=CODE,merge=1,delta=2
    93                           	psect	text41,local,class=CODE,merge=1,delta=2
    94                           	psect	text42,local,class=CODE,merge=1,delta=2
    95                           	psect	text43,local,class=CODE,merge=1,delta=2
    96                           	psect	text44,local,class=CODE,merge=1,delta=2
    97                           	psect	text45,local,class=CODE,merge=1,delta=2
    98                           	psect	text46,local,class=CODE,merge=1,delta=2
    99                           	psect	text47,local,class=CODE,merge=1,delta=2
   100                           	psect	text48,local,class=CODE,merge=1,delta=2
   101                           	psect	text49,local,class=CODE,merge=1,delta=2
   102                           	psect	text50,local,class=CODE,merge=1,delta=2
   103                           	psect	text51,local,class=CODE,merge=1,delta=2
   104                           	psect	text52,local,class=CODE,merge=1,delta=2
   105                           	psect	text53,local,class=CODE,merge=1,delta=2
   106                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
   107                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
   108                           	psect	text56,local,class=CODE,merge=1,delta=2
   109                           	psect	text57,local,class=CODE,merge=1,delta=2
   110                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text59,local,class=CODE,merge=1,delta=2
   112                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
   114                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
   115                           	psect	text63,local,class=CODE,merge=1,delta=2
   116                           	psect	text64,local,class=CODE,merge=1,delta=2
   117                           	psect	text65,local,class=CODE,merge=1,delta=2
   118                           	psect	text66,local,class=CODE,merge=1,delta=2
   119                           	psect	text67,local,class=CODE,merge=1,delta=2
   120                           	psect	text68,local,class=CODE,merge=1,delta=2
   121                           	psect	text69,local,class=CODE,merge=1,delta=2
   122                           	psect	text70,local,class=CODE,merge=1,delta=2
   123                           	psect	text71,local,class=CODE,merge=1,delta=2
   124                           	psect	text72,local,class=CODE,merge=1,delta=2
   125                           	psect	intentry,global,class=CODE,delta=2
   126                           	psect	text74,local,class=CODE,merge=1,delta=2
   127                           	psect	text75,local,class=CODE,merge=1,delta=2
   128                           	psect	text76,local,class=CODE,merge=1,delta=2
   129                           	psect	text77,local,class=CODE,merge=1,delta=2
   130                           	psect	text78,local,class=CODE,merge=1,delta=2
   131                           	psect	text79,local,class=CODE,merge=1,delta=2
   132                           	psect	text80,local,class=CODE,merge=1,inline,delta=2
   133                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   134                           	psect	text82,local,class=CODE,merge=1,delta=2
   135                           	psect	text83,local,class=CODE,merge=1,delta=2
   136                           	psect	text84,local,class=CODE,merge=1,delta=2
   137                           	psect	text85,local,class=CODE,merge=1,delta=2
   138                           	psect	text86,local,class=CODE,merge=1,delta=2
   139                           	psect	text87,local,class=CODE,merge=1,delta=2
   140                           	psect	text88,local,class=CODE,merge=1,delta=2
   141                           	psect	text89,local,class=CODE,merge=1,delta=2
   142                           	psect	text90,local,class=CODE,merge=1,delta=2
   143                           	psect	text91,local,class=CODE,merge=1,delta=2
   144                           	psect	text92,local,class=CODE,merge=1,delta=2
   145                           	psect	text93,local,class=CODE,merge=1,delta=2
   146                           	psect	text94,local,class=CODE,merge=1,delta=2
   147                           	psect	text95,local,class=CODE,merge=1,delta=2
   148                           	psect	text96,local,class=CODE,merge=1,delta=2
   149                           	psect	text97,local,class=CODE,merge=1,delta=2
   150                           	psect	text98,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text100,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text101,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   156                           	psect	text104,local,class=CODE,merge=1,inline,delta=2
   157                           	psect	text105,local,class=CODE,merge=1,delta=2
   158                           	psect	text106,local,class=CODE,merge=1,delta=2
   159                           	psect	text107,local,class=CODE,merge=1,delta=2
   160                           	psect	text108,local,class=CODE,merge=1,delta=2
   161                           	psect	text109,local,class=CODE,merge=1,delta=2
   162                           	psect	text110,local,class=CODE,merge=1,delta=2
   163                           	psect	text111,local,class=CODE,merge=1,delta=2
   164                           	psect	text112,local,class=CODE,merge=1,delta=2
   165                           	psect	text113,local,class=CODE,merge=1,delta=2
   166                           	psect	text114,local,class=CODE,merge=1,delta=2
   167                           	psect	text115,local,class=CODE,merge=1,delta=2
   168                           	psect	text116,local,class=CODE,merge=1,delta=2
   169                           	psect	text117,local,class=CODE,merge=1,delta=2
   170                           	psect	text118,local,class=CODE,merge=1,delta=2
   171                           	psect	text119,local,class=CODE,merge=1,delta=2
   172                           	psect	text120,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   174                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   175                           	dabs	1,0x7E,2
   176  0000                     
   177                           ; Version 2.20
   178                           ; Generated 12/02/2020 GMT
   179                           ; 
   180                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   181                           ; All rights reserved.
   182                           ; 
   183                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   184                           ; 
   185                           ; Redistribution and use in source and binary forms, with or without modification, are
   186                           ; permitted provided that the following conditions are met:
   187                           ; 
   188                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   189                           ;        conditions and the following disclaimer.
   190                           ; 
   191                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   192                           ;        of conditions and the following disclaimer in the documentation and/or other
   193                           ;        materials provided with the distribution.
   194                           ; 
   195                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   196                           ;        software without specific prior written permission.
   197                           ; 
   198                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   199                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   200                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   201                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   202                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   203                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   204                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   205                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   206                           ; 
   207                           ; 
   208                           ; Code-generator required, PIC16F1829 Definitions
   209                           ; 
   210                           ; SFR Addresses
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0016                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001C                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0094                     	;# 
   248  0095                     	;# 
   249  0096                     	;# 
   250  0097                     	;# 
   251  0098                     	;# 
   252  0099                     	;# 
   253  009A                     	;# 
   254  009B                     	;# 
   255  009B                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0113                     	;# 
   265  0114                     	;# 
   266  0115                     	;# 
   267  0116                     	;# 
   268  0117                     	;# 
   269  0118                     	;# 
   270  0119                     	;# 
   271  011A                     	;# 
   272  011B                     	;# 
   273  011D                     	;# 
   274  011E                     	;# 
   275  018C                     	;# 
   276  018D                     	;# 
   277  018E                     	;# 
   278  0191                     	;# 
   279  0191                     	;# 
   280  0192                     	;# 
   281  0193                     	;# 
   282  0193                     	;# 
   283  0193                     	;# 
   284  0194                     	;# 
   285  0195                     	;# 
   286  0196                     	;# 
   287  0199                     	;# 
   288  019A                     	;# 
   289  019B                     	;# 
   290  019B                     	;# 
   291  019C                     	;# 
   292  019D                     	;# 
   293  019E                     	;# 
   294  019F                     	;# 
   295  020C                     	;# 
   296  020D                     	;# 
   297  020E                     	;# 
   298  0211                     	;# 
   299  0211                     	;# 
   300  0212                     	;# 
   301  0212                     	;# 
   302  0213                     	;# 
   303  0213                     	;# 
   304  0214                     	;# 
   305  0214                     	;# 
   306  0215                     	;# 
   307  0215                     	;# 
   308  0215                     	;# 
   309  0216                     	;# 
   310  0216                     	;# 
   311  0217                     	;# 
   312  0217                     	;# 
   313  0219                     	;# 
   314  021A                     	;# 
   315  021B                     	;# 
   316  021C                     	;# 
   317  021D                     	;# 
   318  021E                     	;# 
   319  021F                     	;# 
   320  0291                     	;# 
   321  0291                     	;# 
   322  0292                     	;# 
   323  0293                     	;# 
   324  0294                     	;# 
   325  0295                     	;# 
   326  0295                     	;# 
   327  0296                     	;# 
   328  0298                     	;# 
   329  0298                     	;# 
   330  0299                     	;# 
   331  029A                     	;# 
   332  029B                     	;# 
   333  029C                     	;# 
   334  029D                     	;# 
   335  029E                     	;# 
   336  0311                     	;# 
   337  0311                     	;# 
   338  0312                     	;# 
   339  0313                     	;# 
   340  0318                     	;# 
   341  0318                     	;# 
   342  0319                     	;# 
   343  031A                     	;# 
   344  038C                     	;# 
   345  038D                     	;# 
   346  038E                     	;# 
   347  0391                     	;# 
   348  0392                     	;# 
   349  0393                     	;# 
   350  0394                     	;# 
   351  0395                     	;# 
   352  0396                     	;# 
   353  039A                     	;# 
   354  039C                     	;# 
   355  039D                     	;# 
   356  039E                     	;# 
   357  039F                     	;# 
   358  0415                     	;# 
   359  0416                     	;# 
   360  0417                     	;# 
   361  041C                     	;# 
   362  041D                     	;# 
   363  041E                     	;# 
   364  0FE4                     	;# 
   365  0FE5                     	;# 
   366  0FE6                     	;# 
   367  0FE7                     	;# 
   368  0FE8                     	;# 
   369  0FE9                     	;# 
   370  0FEA                     	;# 
   371  0FEB                     	;# 
   372  0FED                     	;# 
   373  0FEE                     	;# 
   374  0FEF                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001E                     	;# 
   404  001F                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0093                     	;# 
   411  0094                     	;# 
   412  0095                     	;# 
   413  0096                     	;# 
   414  0097                     	;# 
   415  0098                     	;# 
   416  0099                     	;# 
   417  009A                     	;# 
   418  009B                     	;# 
   419  009B                     	;# 
   420  009C                     	;# 
   421  009D                     	;# 
   422  009E                     	;# 
   423  010C                     	;# 
   424  010D                     	;# 
   425  010E                     	;# 
   426  0111                     	;# 
   427  0112                     	;# 
   428  0113                     	;# 
   429  0114                     	;# 
   430  0115                     	;# 
   431  0116                     	;# 
   432  0117                     	;# 
   433  0118                     	;# 
   434  0119                     	;# 
   435  011A                     	;# 
   436  011B                     	;# 
   437  011D                     	;# 
   438  011E                     	;# 
   439  018C                     	;# 
   440  018D                     	;# 
   441  018E                     	;# 
   442  0191                     	;# 
   443  0191                     	;# 
   444  0192                     	;# 
   445  0193                     	;# 
   446  0193                     	;# 
   447  0193                     	;# 
   448  0194                     	;# 
   449  0195                     	;# 
   450  0196                     	;# 
   451  0199                     	;# 
   452  019A                     	;# 
   453  019B                     	;# 
   454  019B                     	;# 
   455  019C                     	;# 
   456  019D                     	;# 
   457  019E                     	;# 
   458  019F                     	;# 
   459  020C                     	;# 
   460  020D                     	;# 
   461  020E                     	;# 
   462  0211                     	;# 
   463  0211                     	;# 
   464  0212                     	;# 
   465  0212                     	;# 
   466  0213                     	;# 
   467  0213                     	;# 
   468  0214                     	;# 
   469  0214                     	;# 
   470  0215                     	;# 
   471  0215                     	;# 
   472  0215                     	;# 
   473  0216                     	;# 
   474  0216                     	;# 
   475  0217                     	;# 
   476  0217                     	;# 
   477  0219                     	;# 
   478  021A                     	;# 
   479  021B                     	;# 
   480  021C                     	;# 
   481  021D                     	;# 
   482  021E                     	;# 
   483  021F                     	;# 
   484  0291                     	;# 
   485  0291                     	;# 
   486  0292                     	;# 
   487  0293                     	;# 
   488  0294                     	;# 
   489  0295                     	;# 
   490  0295                     	;# 
   491  0296                     	;# 
   492  0298                     	;# 
   493  0298                     	;# 
   494  0299                     	;# 
   495  029A                     	;# 
   496  029B                     	;# 
   497  029C                     	;# 
   498  029D                     	;# 
   499  029E                     	;# 
   500  0311                     	;# 
   501  0311                     	;# 
   502  0312                     	;# 
   503  0313                     	;# 
   504  0318                     	;# 
   505  0318                     	;# 
   506  0319                     	;# 
   507  031A                     	;# 
   508  038C                     	;# 
   509  038D                     	;# 
   510  038E                     	;# 
   511  0391                     	;# 
   512  0392                     	;# 
   513  0393                     	;# 
   514  0394                     	;# 
   515  0395                     	;# 
   516  0396                     	;# 
   517  039A                     	;# 
   518  039C                     	;# 
   519  039D                     	;# 
   520  039E                     	;# 
   521  039F                     	;# 
   522  0415                     	;# 
   523  0416                     	;# 
   524  0417                     	;# 
   525  041C                     	;# 
   526  041D                     	;# 
   527  041E                     	;# 
   528  0FE4                     	;# 
   529  0FE5                     	;# 
   530  0FE6                     	;# 
   531  0FE7                     	;# 
   532  0FE8                     	;# 
   533  0FE9                     	;# 
   534  0FEA                     	;# 
   535  0FEB                     	;# 
   536  0FED                     	;# 
   537  0FEE                     	;# 
   538  0FEF                     	;# 
   539  0000                     	;# 
   540  0001                     	;# 
   541  0002                     	;# 
   542  0003                     	;# 
   543  0004                     	;# 
   544  0005                     	;# 
   545  0006                     	;# 
   546  0007                     	;# 
   547  0008                     	;# 
   548  0009                     	;# 
   549  000A                     	;# 
   550  000B                     	;# 
   551  000C                     	;# 
   552  000D                     	;# 
   553  000E                     	;# 
   554  0011                     	;# 
   555  0012                     	;# 
   556  0013                     	;# 
   557  0014                     	;# 
   558  0015                     	;# 
   559  0016                     	;# 
   560  0016                     	;# 
   561  0017                     	;# 
   562  0018                     	;# 
   563  0019                     	;# 
   564  001A                     	;# 
   565  001B                     	;# 
   566  001C                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  008E                     	;# 
   572  0091                     	;# 
   573  0092                     	;# 
   574  0093                     	;# 
   575  0094                     	;# 
   576  0095                     	;# 
   577  0096                     	;# 
   578  0097                     	;# 
   579  0098                     	;# 
   580  0099                     	;# 
   581  009A                     	;# 
   582  009B                     	;# 
   583  009B                     	;# 
   584  009C                     	;# 
   585  009D                     	;# 
   586  009E                     	;# 
   587  010C                     	;# 
   588  010D                     	;# 
   589  010E                     	;# 
   590  0111                     	;# 
   591  0112                     	;# 
   592  0113                     	;# 
   593  0114                     	;# 
   594  0115                     	;# 
   595  0116                     	;# 
   596  0117                     	;# 
   597  0118                     	;# 
   598  0119                     	;# 
   599  011A                     	;# 
   600  011B                     	;# 
   601  011D                     	;# 
   602  011E                     	;# 
   603  018C                     	;# 
   604  018D                     	;# 
   605  018E                     	;# 
   606  0191                     	;# 
   607  0191                     	;# 
   608  0192                     	;# 
   609  0193                     	;# 
   610  0193                     	;# 
   611  0193                     	;# 
   612  0194                     	;# 
   613  0195                     	;# 
   614  0196                     	;# 
   615  0199                     	;# 
   616  019A                     	;# 
   617  019B                     	;# 
   618  019B                     	;# 
   619  019C                     	;# 
   620  019D                     	;# 
   621  019E                     	;# 
   622  019F                     	;# 
   623  020C                     	;# 
   624  020D                     	;# 
   625  020E                     	;# 
   626  0211                     	;# 
   627  0211                     	;# 
   628  0212                     	;# 
   629  0212                     	;# 
   630  0213                     	;# 
   631  0213                     	;# 
   632  0214                     	;# 
   633  0214                     	;# 
   634  0215                     	;# 
   635  0215                     	;# 
   636  0215                     	;# 
   637  0216                     	;# 
   638  0216                     	;# 
   639  0217                     	;# 
   640  0217                     	;# 
   641  0219                     	;# 
   642  021A                     	;# 
   643  021B                     	;# 
   644  021C                     	;# 
   645  021D                     	;# 
   646  021E                     	;# 
   647  021F                     	;# 
   648  0291                     	;# 
   649  0291                     	;# 
   650  0292                     	;# 
   651  0293                     	;# 
   652  0294                     	;# 
   653  0295                     	;# 
   654  0295                     	;# 
   655  0296                     	;# 
   656  0298                     	;# 
   657  0298                     	;# 
   658  0299                     	;# 
   659  029A                     	;# 
   660  029B                     	;# 
   661  029C                     	;# 
   662  029D                     	;# 
   663  029E                     	;# 
   664  0311                     	;# 
   665  0311                     	;# 
   666  0312                     	;# 
   667  0313                     	;# 
   668  0318                     	;# 
   669  0318                     	;# 
   670  0319                     	;# 
   671  031A                     	;# 
   672  038C                     	;# 
   673  038D                     	;# 
   674  038E                     	;# 
   675  0391                     	;# 
   676  0392                     	;# 
   677  0393                     	;# 
   678  0394                     	;# 
   679  0395                     	;# 
   680  0396                     	;# 
   681  039A                     	;# 
   682  039C                     	;# 
   683  039D                     	;# 
   684  039E                     	;# 
   685  039F                     	;# 
   686  0415                     	;# 
   687  0416                     	;# 
   688  0417                     	;# 
   689  041C                     	;# 
   690  041D                     	;# 
   691  041E                     	;# 
   692  0FE4                     	;# 
   693  0FE5                     	;# 
   694  0FE6                     	;# 
   695  0FE7                     	;# 
   696  0FE8                     	;# 
   697  0FE9                     	;# 
   698  0FEA                     	;# 
   699  0FEB                     	;# 
   700  0FED                     	;# 
   701  0FEE                     	;# 
   702  0FEF                     	;# 
   703  0000                     	;# 
   704  0001                     	;# 
   705  0002                     	;# 
   706  0003                     	;# 
   707  0004                     	;# 
   708  0005                     	;# 
   709  0006                     	;# 
   710  0007                     	;# 
   711  0008                     	;# 
   712  0009                     	;# 
   713  000A                     	;# 
   714  000B                     	;# 
   715  000C                     	;# 
   716  000D                     	;# 
   717  000E                     	;# 
   718  0011                     	;# 
   719  0012                     	;# 
   720  0013                     	;# 
   721  0014                     	;# 
   722  0015                     	;# 
   723  0016                     	;# 
   724  0016                     	;# 
   725  0017                     	;# 
   726  0018                     	;# 
   727  0019                     	;# 
   728  001A                     	;# 
   729  001B                     	;# 
   730  001C                     	;# 
   731  001E                     	;# 
   732  001F                     	;# 
   733  008C                     	;# 
   734  008D                     	;# 
   735  008E                     	;# 
   736  0091                     	;# 
   737  0092                     	;# 
   738  0093                     	;# 
   739  0094                     	;# 
   740  0095                     	;# 
   741  0096                     	;# 
   742  0097                     	;# 
   743  0098                     	;# 
   744  0099                     	;# 
   745  009A                     	;# 
   746  009B                     	;# 
   747  009B                     	;# 
   748  009C                     	;# 
   749  009D                     	;# 
   750  009E                     	;# 
   751  010C                     	;# 
   752  010D                     	;# 
   753  010E                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0117                     	;# 
   761  0118                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011D                     	;# 
   766  011E                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  018E                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019C                     	;# 
   784  019D                     	;# 
   785  019E                     	;# 
   786  019F                     	;# 
   787  020C                     	;# 
   788  020D                     	;# 
   789  020E                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  0212                     	;# 
   793  0212                     	;# 
   794  0213                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0214                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0216                     	;# 
   803  0217                     	;# 
   804  0217                     	;# 
   805  0219                     	;# 
   806  021A                     	;# 
   807  021B                     	;# 
   808  021C                     	;# 
   809  021D                     	;# 
   810  021E                     	;# 
   811  021F                     	;# 
   812  0291                     	;# 
   813  0291                     	;# 
   814  0292                     	;# 
   815  0293                     	;# 
   816  0294                     	;# 
   817  0295                     	;# 
   818  0295                     	;# 
   819  0296                     	;# 
   820  0298                     	;# 
   821  0298                     	;# 
   822  0299                     	;# 
   823  029A                     	;# 
   824  029B                     	;# 
   825  029C                     	;# 
   826  029D                     	;# 
   827  029E                     	;# 
   828  0311                     	;# 
   829  0311                     	;# 
   830  0312                     	;# 
   831  0313                     	;# 
   832  0318                     	;# 
   833  0318                     	;# 
   834  0319                     	;# 
   835  031A                     	;# 
   836  038C                     	;# 
   837  038D                     	;# 
   838  038E                     	;# 
   839  0391                     	;# 
   840  0392                     	;# 
   841  0393                     	;# 
   842  0394                     	;# 
   843  0395                     	;# 
   844  0396                     	;# 
   845  039A                     	;# 
   846  039C                     	;# 
   847  039D                     	;# 
   848  039E                     	;# 
   849  039F                     	;# 
   850  0415                     	;# 
   851  0416                     	;# 
   852  0417                     	;# 
   853  041C                     	;# 
   854  041D                     	;# 
   855  041E                     	;# 
   856  0FE4                     	;# 
   857  0FE5                     	;# 
   858  0FE6                     	;# 
   859  0FE7                     	;# 
   860  0FE8                     	;# 
   861  0FE9                     	;# 
   862  0FEA                     	;# 
   863  0FEB                     	;# 
   864  0FED                     	;# 
   865  0FEE                     	;# 
   866  0FEF                     	;# 
   867  0000                     	;# 
   868  0001                     	;# 
   869  0002                     	;# 
   870  0003                     	;# 
   871  0004                     	;# 
   872  0005                     	;# 
   873  0006                     	;# 
   874  0007                     	;# 
   875  0008                     	;# 
   876  0009                     	;# 
   877  000A                     	;# 
   878  000B                     	;# 
   879  000C                     	;# 
   880  000D                     	;# 
   881  000E                     	;# 
   882  0011                     	;# 
   883  0012                     	;# 
   884  0013                     	;# 
   885  0014                     	;# 
   886  0015                     	;# 
   887  0016                     	;# 
   888  0016                     	;# 
   889  0017                     	;# 
   890  0018                     	;# 
   891  0019                     	;# 
   892  001A                     	;# 
   893  001B                     	;# 
   894  001C                     	;# 
   895  001E                     	;# 
   896  001F                     	;# 
   897  008C                     	;# 
   898  008D                     	;# 
   899  008E                     	;# 
   900  0091                     	;# 
   901  0092                     	;# 
   902  0093                     	;# 
   903  0094                     	;# 
   904  0095                     	;# 
   905  0096                     	;# 
   906  0097                     	;# 
   907  0098                     	;# 
   908  0099                     	;# 
   909  009A                     	;# 
   910  009B                     	;# 
   911  009B                     	;# 
   912  009C                     	;# 
   913  009D                     	;# 
   914  009E                     	;# 
   915  010C                     	;# 
   916  010D                     	;# 
   917  010E                     	;# 
   918  0111                     	;# 
   919  0112                     	;# 
   920  0113                     	;# 
   921  0114                     	;# 
   922  0115                     	;# 
   923  0116                     	;# 
   924  0117                     	;# 
   925  0118                     	;# 
   926  0119                     	;# 
   927  011A                     	;# 
   928  011B                     	;# 
   929  011D                     	;# 
   930  011E                     	;# 
   931  018C                     	;# 
   932  018D                     	;# 
   933  018E                     	;# 
   934  0191                     	;# 
   935  0191                     	;# 
   936  0192                     	;# 
   937  0193                     	;# 
   938  0193                     	;# 
   939  0193                     	;# 
   940  0194                     	;# 
   941  0195                     	;# 
   942  0196                     	;# 
   943  0199                     	;# 
   944  019A                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019C                     	;# 
   948  019D                     	;# 
   949  019E                     	;# 
   950  019F                     	;# 
   951  020C                     	;# 
   952  020D                     	;# 
   953  020E                     	;# 
   954  0211                     	;# 
   955  0211                     	;# 
   956  0212                     	;# 
   957  0212                     	;# 
   958  0213                     	;# 
   959  0213                     	;# 
   960  0214                     	;# 
   961  0214                     	;# 
   962  0215                     	;# 
   963  0215                     	;# 
   964  0215                     	;# 
   965  0216                     	;# 
   966  0216                     	;# 
   967  0217                     	;# 
   968  0217                     	;# 
   969  0219                     	;# 
   970  021A                     	;# 
   971  021B                     	;# 
   972  021C                     	;# 
   973  021D                     	;# 
   974  021E                     	;# 
   975  021F                     	;# 
   976  0291                     	;# 
   977  0291                     	;# 
   978  0292                     	;# 
   979  0293                     	;# 
   980  0294                     	;# 
   981  0295                     	;# 
   982  0295                     	;# 
   983  0296                     	;# 
   984  0298                     	;# 
   985  0298                     	;# 
   986  0299                     	;# 
   987  029A                     	;# 
   988  029B                     	;# 
   989  029C                     	;# 
   990  029D                     	;# 
   991  029E                     	;# 
   992  0311                     	;# 
   993  0311                     	;# 
   994  0312                     	;# 
   995  0313                     	;# 
   996  0318                     	;# 
   997  0318                     	;# 
   998  0319                     	;# 
   999  031A                     	;# 
  1000  038C                     	;# 
  1001  038D                     	;# 
  1002  038E                     	;# 
  1003  0391                     	;# 
  1004  0392                     	;# 
  1005  0393                     	;# 
  1006  0394                     	;# 
  1007  0395                     	;# 
  1008  0396                     	;# 
  1009  039A                     	;# 
  1010  039C                     	;# 
  1011  039D                     	;# 
  1012  039E                     	;# 
  1013  039F                     	;# 
  1014  0415                     	;# 
  1015  0416                     	;# 
  1016  0417                     	;# 
  1017  041C                     	;# 
  1018  041D                     	;# 
  1019  041E                     	;# 
  1020  0FE4                     	;# 
  1021  0FE5                     	;# 
  1022  0FE6                     	;# 
  1023  0FE7                     	;# 
  1024  0FE8                     	;# 
  1025  0FE9                     	;# 
  1026  0FEA                     	;# 
  1027  0FEB                     	;# 
  1028  0FED                     	;# 
  1029  0FEE                     	;# 
  1030  0FEF                     	;# 
  1031  0000                     	;# 
  1032  0001                     	;# 
  1033  0002                     	;# 
  1034  0003                     	;# 
  1035  0004                     	;# 
  1036  0005                     	;# 
  1037  0006                     	;# 
  1038  0007                     	;# 
  1039  0008                     	;# 
  1040  0009                     	;# 
  1041  000A                     	;# 
  1042  000B                     	;# 
  1043  000C                     	;# 
  1044  000D                     	;# 
  1045  000E                     	;# 
  1046  0011                     	;# 
  1047  0012                     	;# 
  1048  0013                     	;# 
  1049  0014                     	;# 
  1050  0015                     	;# 
  1051  0016                     	;# 
  1052  0016                     	;# 
  1053  0017                     	;# 
  1054  0018                     	;# 
  1055  0019                     	;# 
  1056  001A                     	;# 
  1057  001B                     	;# 
  1058  001C                     	;# 
  1059  001E                     	;# 
  1060  001F                     	;# 
  1061  008C                     	;# 
  1062  008D                     	;# 
  1063  008E                     	;# 
  1064  0091                     	;# 
  1065  0092                     	;# 
  1066  0093                     	;# 
  1067  0094                     	;# 
  1068  0095                     	;# 
  1069  0096                     	;# 
  1070  0097                     	;# 
  1071  0098                     	;# 
  1072  0099                     	;# 
  1073  009A                     	;# 
  1074  009B                     	;# 
  1075  009B                     	;# 
  1076  009C                     	;# 
  1077  009D                     	;# 
  1078  009E                     	;# 
  1079  010C                     	;# 
  1080  010D                     	;# 
  1081  010E                     	;# 
  1082  0111                     	;# 
  1083  0112                     	;# 
  1084  0113                     	;# 
  1085  0114                     	;# 
  1086  0115                     	;# 
  1087  0116                     	;# 
  1088  0117                     	;# 
  1089  0118                     	;# 
  1090  0119                     	;# 
  1091  011A                     	;# 
  1092  011B                     	;# 
  1093  011D                     	;# 
  1094  011E                     	;# 
  1095  018C                     	;# 
  1096  018D                     	;# 
  1097  018E                     	;# 
  1098  0191                     	;# 
  1099  0191                     	;# 
  1100  0192                     	;# 
  1101  0193                     	;# 
  1102  0193                     	;# 
  1103  0193                     	;# 
  1104  0194                     	;# 
  1105  0195                     	;# 
  1106  0196                     	;# 
  1107  0199                     	;# 
  1108  019A                     	;# 
  1109  019B                     	;# 
  1110  019B                     	;# 
  1111  019C                     	;# 
  1112  019D                     	;# 
  1113  019E                     	;# 
  1114  019F                     	;# 
  1115  020C                     	;# 
  1116  020D                     	;# 
  1117  020E                     	;# 
  1118  0211                     	;# 
  1119  0211                     	;# 
  1120  0212                     	;# 
  1121  0212                     	;# 
  1122  0213                     	;# 
  1123  0213                     	;# 
  1124  0214                     	;# 
  1125  0214                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0216                     	;# 
  1130  0216                     	;# 
  1131  0217                     	;# 
  1132  0217                     	;# 
  1133  0219                     	;# 
  1134  021A                     	;# 
  1135  021B                     	;# 
  1136  021C                     	;# 
  1137  021D                     	;# 
  1138  021E                     	;# 
  1139  021F                     	;# 
  1140  0291                     	;# 
  1141  0291                     	;# 
  1142  0292                     	;# 
  1143  0293                     	;# 
  1144  0294                     	;# 
  1145  0295                     	;# 
  1146  0295                     	;# 
  1147  0296                     	;# 
  1148  0298                     	;# 
  1149  0298                     	;# 
  1150  0299                     	;# 
  1151  029A                     	;# 
  1152  029B                     	;# 
  1153  029C                     	;# 
  1154  029D                     	;# 
  1155  029E                     	;# 
  1156  0311                     	;# 
  1157  0311                     	;# 
  1158  0312                     	;# 
  1159  0313                     	;# 
  1160  0318                     	;# 
  1161  0318                     	;# 
  1162  0319                     	;# 
  1163  031A                     	;# 
  1164  038C                     	;# 
  1165  038D                     	;# 
  1166  038E                     	;# 
  1167  0391                     	;# 
  1168  0392                     	;# 
  1169  0393                     	;# 
  1170  0394                     	;# 
  1171  0395                     	;# 
  1172  0396                     	;# 
  1173  039A                     	;# 
  1174  039C                     	;# 
  1175  039D                     	;# 
  1176  039E                     	;# 
  1177  039F                     	;# 
  1178  0415                     	;# 
  1179  0416                     	;# 
  1180  0417                     	;# 
  1181  041C                     	;# 
  1182  041D                     	;# 
  1183  041E                     	;# 
  1184  0FE4                     	;# 
  1185  0FE5                     	;# 
  1186  0FE6                     	;# 
  1187  0FE7                     	;# 
  1188  0FE8                     	;# 
  1189  0FE9                     	;# 
  1190  0FEA                     	;# 
  1191  0FEB                     	;# 
  1192  0FED                     	;# 
  1193  0FEE                     	;# 
  1194  0FEF                     	;# 
  1195  0000                     	;# 
  1196  0001                     	;# 
  1197  0002                     	;# 
  1198  0003                     	;# 
  1199  0004                     	;# 
  1200  0005                     	;# 
  1201  0006                     	;# 
  1202  0007                     	;# 
  1203  0008                     	;# 
  1204  0009                     	;# 
  1205  000A                     	;# 
  1206  000B                     	;# 
  1207  000C                     	;# 
  1208  000D                     	;# 
  1209  000E                     	;# 
  1210  0011                     	;# 
  1211  0012                     	;# 
  1212  0013                     	;# 
  1213  0014                     	;# 
  1214  0015                     	;# 
  1215  0016                     	;# 
  1216  0016                     	;# 
  1217  0017                     	;# 
  1218  0018                     	;# 
  1219  0019                     	;# 
  1220  001A                     	;# 
  1221  001B                     	;# 
  1222  001C                     	;# 
  1223  001E                     	;# 
  1224  001F                     	;# 
  1225  008C                     	;# 
  1226  008D                     	;# 
  1227  008E                     	;# 
  1228  0091                     	;# 
  1229  0092                     	;# 
  1230  0093                     	;# 
  1231  0094                     	;# 
  1232  0095                     	;# 
  1233  0096                     	;# 
  1234  0097                     	;# 
  1235  0098                     	;# 
  1236  0099                     	;# 
  1237  009A                     	;# 
  1238  009B                     	;# 
  1239  009B                     	;# 
  1240  009C                     	;# 
  1241  009D                     	;# 
  1242  009E                     	;# 
  1243  010C                     	;# 
  1244  010D                     	;# 
  1245  010E                     	;# 
  1246  0111                     	;# 
  1247  0112                     	;# 
  1248  0113                     	;# 
  1249  0114                     	;# 
  1250  0115                     	;# 
  1251  0116                     	;# 
  1252  0117                     	;# 
  1253  0118                     	;# 
  1254  0119                     	;# 
  1255  011A                     	;# 
  1256  011B                     	;# 
  1257  011D                     	;# 
  1258  011E                     	;# 
  1259  018C                     	;# 
  1260  018D                     	;# 
  1261  018E                     	;# 
  1262  0191                     	;# 
  1263  0191                     	;# 
  1264  0192                     	;# 
  1265  0193                     	;# 
  1266  0193                     	;# 
  1267  0193                     	;# 
  1268  0194                     	;# 
  1269  0195                     	;# 
  1270  0196                     	;# 
  1271  0199                     	;# 
  1272  019A                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019C                     	;# 
  1276  019D                     	;# 
  1277  019E                     	;# 
  1278  019F                     	;# 
  1279  020C                     	;# 
  1280  020D                     	;# 
  1281  020E                     	;# 
  1282  0211                     	;# 
  1283  0211                     	;# 
  1284  0212                     	;# 
  1285  0212                     	;# 
  1286  0213                     	;# 
  1287  0213                     	;# 
  1288  0214                     	;# 
  1289  0214                     	;# 
  1290  0215                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0216                     	;# 
  1294  0216                     	;# 
  1295  0217                     	;# 
  1296  0217                     	;# 
  1297  0219                     	;# 
  1298  021A                     	;# 
  1299  021B                     	;# 
  1300  021C                     	;# 
  1301  021D                     	;# 
  1302  021E                     	;# 
  1303  021F                     	;# 
  1304  0291                     	;# 
  1305  0291                     	;# 
  1306  0292                     	;# 
  1307  0293                     	;# 
  1308  0294                     	;# 
  1309  0295                     	;# 
  1310  0295                     	;# 
  1311  0296                     	;# 
  1312  0298                     	;# 
  1313  0298                     	;# 
  1314  0299                     	;# 
  1315  029A                     	;# 
  1316  029B                     	;# 
  1317  029C                     	;# 
  1318  029D                     	;# 
  1319  029E                     	;# 
  1320  0311                     	;# 
  1321  0311                     	;# 
  1322  0312                     	;# 
  1323  0313                     	;# 
  1324  0318                     	;# 
  1325  0318                     	;# 
  1326  0319                     	;# 
  1327  031A                     	;# 
  1328  038C                     	;# 
  1329  038D                     	;# 
  1330  038E                     	;# 
  1331  0391                     	;# 
  1332  0392                     	;# 
  1333  0393                     	;# 
  1334  0394                     	;# 
  1335  0395                     	;# 
  1336  0396                     	;# 
  1337  039A                     	;# 
  1338  039C                     	;# 
  1339  039D                     	;# 
  1340  039E                     	;# 
  1341  039F                     	;# 
  1342  0415                     	;# 
  1343  0416                     	;# 
  1344  0417                     	;# 
  1345  041C                     	;# 
  1346  041D                     	;# 
  1347  041E                     	;# 
  1348  0FE4                     	;# 
  1349  0FE5                     	;# 
  1350  0FE6                     	;# 
  1351  0FE7                     	;# 
  1352  0FE8                     	;# 
  1353  0FE9                     	;# 
  1354  0FEA                     	;# 
  1355  0FEB                     	;# 
  1356  0FED                     	;# 
  1357  0FEE                     	;# 
  1358  0FEF                     	;# 
  1359  0000                     	;# 
  1360  0001                     	;# 
  1361  0002                     	;# 
  1362  0003                     	;# 
  1363  0004                     	;# 
  1364  0005                     	;# 
  1365  0006                     	;# 
  1366  0007                     	;# 
  1367  0008                     	;# 
  1368  0009                     	;# 
  1369  000A                     	;# 
  1370  000B                     	;# 
  1371  000C                     	;# 
  1372  000D                     	;# 
  1373  000E                     	;# 
  1374  0011                     	;# 
  1375  0012                     	;# 
  1376  0013                     	;# 
  1377  0014                     	;# 
  1378  0015                     	;# 
  1379  0016                     	;# 
  1380  0016                     	;# 
  1381  0017                     	;# 
  1382  0018                     	;# 
  1383  0019                     	;# 
  1384  001A                     	;# 
  1385  001B                     	;# 
  1386  001C                     	;# 
  1387  001E                     	;# 
  1388  001F                     	;# 
  1389  008C                     	;# 
  1390  008D                     	;# 
  1391  008E                     	;# 
  1392  0091                     	;# 
  1393  0092                     	;# 
  1394  0093                     	;# 
  1395  0094                     	;# 
  1396  0095                     	;# 
  1397  0096                     	;# 
  1398  0097                     	;# 
  1399  0098                     	;# 
  1400  0099                     	;# 
  1401  009A                     	;# 
  1402  009B                     	;# 
  1403  009B                     	;# 
  1404  009C                     	;# 
  1405  009D                     	;# 
  1406  009E                     	;# 
  1407  010C                     	;# 
  1408  010D                     	;# 
  1409  010E                     	;# 
  1410  0111                     	;# 
  1411  0112                     	;# 
  1412  0113                     	;# 
  1413  0114                     	;# 
  1414  0115                     	;# 
  1415  0116                     	;# 
  1416  0117                     	;# 
  1417  0118                     	;# 
  1418  0119                     	;# 
  1419  011A                     	;# 
  1420  011B                     	;# 
  1421  011D                     	;# 
  1422  011E                     	;# 
  1423  018C                     	;# 
  1424  018D                     	;# 
  1425  018E                     	;# 
  1426  0191                     	;# 
  1427  0191                     	;# 
  1428  0192                     	;# 
  1429  0193                     	;# 
  1430  0193                     	;# 
  1431  0193                     	;# 
  1432  0194                     	;# 
  1433  0195                     	;# 
  1434  0196                     	;# 
  1435  0199                     	;# 
  1436  019A                     	;# 
  1437  019B                     	;# 
  1438  019B                     	;# 
  1439  019C                     	;# 
  1440  019D                     	;# 
  1441  019E                     	;# 
  1442  019F                     	;# 
  1443  020C                     	;# 
  1444  020D                     	;# 
  1445  020E                     	;# 
  1446  0211                     	;# 
  1447  0211                     	;# 
  1448  0212                     	;# 
  1449  0212                     	;# 
  1450  0213                     	;# 
  1451  0213                     	;# 
  1452  0214                     	;# 
  1453  0214                     	;# 
  1454  0215                     	;# 
  1455  0215                     	;# 
  1456  0215                     	;# 
  1457  0216                     	;# 
  1458  0216                     	;# 
  1459  0217                     	;# 
  1460  0217                     	;# 
  1461  0219                     	;# 
  1462  021A                     	;# 
  1463  021B                     	;# 
  1464  021C                     	;# 
  1465  021D                     	;# 
  1466  021E                     	;# 
  1467  021F                     	;# 
  1468  0291                     	;# 
  1469  0291                     	;# 
  1470  0292                     	;# 
  1471  0293                     	;# 
  1472  0294                     	;# 
  1473  0295                     	;# 
  1474  0295                     	;# 
  1475  0296                     	;# 
  1476  0298                     	;# 
  1477  0298                     	;# 
  1478  0299                     	;# 
  1479  029A                     	;# 
  1480  029B                     	;# 
  1481  029C                     	;# 
  1482  029D                     	;# 
  1483  029E                     	;# 
  1484  0311                     	;# 
  1485  0311                     	;# 
  1486  0312                     	;# 
  1487  0313                     	;# 
  1488  0318                     	;# 
  1489  0318                     	;# 
  1490  0319                     	;# 
  1491  031A                     	;# 
  1492  038C                     	;# 
  1493  038D                     	;# 
  1494  038E                     	;# 
  1495  0391                     	;# 
  1496  0392                     	;# 
  1497  0393                     	;# 
  1498  0394                     	;# 
  1499  0395                     	;# 
  1500  0396                     	;# 
  1501  039A                     	;# 
  1502  039C                     	;# 
  1503  039D                     	;# 
  1504  039E                     	;# 
  1505  039F                     	;# 
  1506  0415                     	;# 
  1507  0416                     	;# 
  1508  0417                     	;# 
  1509  041C                     	;# 
  1510  041D                     	;# 
  1511  041E                     	;# 
  1512  0FE4                     	;# 
  1513  0FE5                     	;# 
  1514  0FE6                     	;# 
  1515  0FE7                     	;# 
  1516  0FE8                     	;# 
  1517  0FE9                     	;# 
  1518  0FEA                     	;# 
  1519  0FEB                     	;# 
  1520  0FED                     	;# 
  1521  0FEE                     	;# 
  1522  0FEF                     	;# 
  1523  0000                     	;# 
  1524  0001                     	;# 
  1525  0002                     	;# 
  1526  0003                     	;# 
  1527  0004                     	;# 
  1528  0005                     	;# 
  1529  0006                     	;# 
  1530  0007                     	;# 
  1531  0008                     	;# 
  1532  0009                     	;# 
  1533  000A                     	;# 
  1534  000B                     	;# 
  1535  000C                     	;# 
  1536  000D                     	;# 
  1537  000E                     	;# 
  1538  0011                     	;# 
  1539  0012                     	;# 
  1540  0013                     	;# 
  1541  0014                     	;# 
  1542  0015                     	;# 
  1543  0016                     	;# 
  1544  0016                     	;# 
  1545  0017                     	;# 
  1546  0018                     	;# 
  1547  0019                     	;# 
  1548  001A                     	;# 
  1549  001B                     	;# 
  1550  001C                     	;# 
  1551  001E                     	;# 
  1552  001F                     	;# 
  1553  008C                     	;# 
  1554  008D                     	;# 
  1555  008E                     	;# 
  1556  0091                     	;# 
  1557  0092                     	;# 
  1558  0093                     	;# 
  1559  0094                     	;# 
  1560  0095                     	;# 
  1561  0096                     	;# 
  1562  0097                     	;# 
  1563  0098                     	;# 
  1564  0099                     	;# 
  1565  009A                     	;# 
  1566  009B                     	;# 
  1567  009B                     	;# 
  1568  009C                     	;# 
  1569  009D                     	;# 
  1570  009E                     	;# 
  1571  010C                     	;# 
  1572  010D                     	;# 
  1573  010E                     	;# 
  1574  0111                     	;# 
  1575  0112                     	;# 
  1576  0113                     	;# 
  1577  0114                     	;# 
  1578  0115                     	;# 
  1579  0116                     	;# 
  1580  0117                     	;# 
  1581  0118                     	;# 
  1582  0119                     	;# 
  1583  011A                     	;# 
  1584  011B                     	;# 
  1585  011D                     	;# 
  1586  011E                     	;# 
  1587  018C                     	;# 
  1588  018D                     	;# 
  1589  018E                     	;# 
  1590  0191                     	;# 
  1591  0191                     	;# 
  1592  0192                     	;# 
  1593  0193                     	;# 
  1594  0193                     	;# 
  1595  0193                     	;# 
  1596  0194                     	;# 
  1597  0195                     	;# 
  1598  0196                     	;# 
  1599  0199                     	;# 
  1600  019A                     	;# 
  1601  019B                     	;# 
  1602  019B                     	;# 
  1603  019C                     	;# 
  1604  019D                     	;# 
  1605  019E                     	;# 
  1606  019F                     	;# 
  1607  020C                     	;# 
  1608  020D                     	;# 
  1609  020E                     	;# 
  1610  0211                     	;# 
  1611  0211                     	;# 
  1612  0212                     	;# 
  1613  0212                     	;# 
  1614  0213                     	;# 
  1615  0213                     	;# 
  1616  0214                     	;# 
  1617  0214                     	;# 
  1618  0215                     	;# 
  1619  0215                     	;# 
  1620  0215                     	;# 
  1621  0216                     	;# 
  1622  0216                     	;# 
  1623  0217                     	;# 
  1624  0217                     	;# 
  1625  0219                     	;# 
  1626  021A                     	;# 
  1627  021B                     	;# 
  1628  021C                     	;# 
  1629  021D                     	;# 
  1630  021E                     	;# 
  1631  021F                     	;# 
  1632  0291                     	;# 
  1633  0291                     	;# 
  1634  0292                     	;# 
  1635  0293                     	;# 
  1636  0294                     	;# 
  1637  0295                     	;# 
  1638  0295                     	;# 
  1639  0296                     	;# 
  1640  0298                     	;# 
  1641  0298                     	;# 
  1642  0299                     	;# 
  1643  029A                     	;# 
  1644  029B                     	;# 
  1645  029C                     	;# 
  1646  029D                     	;# 
  1647  029E                     	;# 
  1648  0311                     	;# 
  1649  0311                     	;# 
  1650  0312                     	;# 
  1651  0313                     	;# 
  1652  0318                     	;# 
  1653  0318                     	;# 
  1654  0319                     	;# 
  1655  031A                     	;# 
  1656  038C                     	;# 
  1657  038D                     	;# 
  1658  038E                     	;# 
  1659  0391                     	;# 
  1660  0392                     	;# 
  1661  0393                     	;# 
  1662  0394                     	;# 
  1663  0395                     	;# 
  1664  0396                     	;# 
  1665  039A                     	;# 
  1666  039C                     	;# 
  1667  039D                     	;# 
  1668  039E                     	;# 
  1669  039F                     	;# 
  1670  0415                     	;# 
  1671  0416                     	;# 
  1672  0417                     	;# 
  1673  041C                     	;# 
  1674  041D                     	;# 
  1675  041E                     	;# 
  1676  0FE4                     	;# 
  1677  0FE5                     	;# 
  1678  0FE6                     	;# 
  1679  0FE7                     	;# 
  1680  0FE8                     	;# 
  1681  0FE9                     	;# 
  1682  0FEA                     	;# 
  1683  0FEB                     	;# 
  1684  0FED                     	;# 
  1685  0FEE                     	;# 
  1686  0FEF                     	;# 
  1687  0000                     	;# 
  1688  0001                     	;# 
  1689  0002                     	;# 
  1690  0003                     	;# 
  1691  0004                     	;# 
  1692  0005                     	;# 
  1693  0006                     	;# 
  1694  0007                     	;# 
  1695  0008                     	;# 
  1696  0009                     	;# 
  1697  000A                     	;# 
  1698  000B                     	;# 
  1699  000C                     	;# 
  1700  000D                     	;# 
  1701  000E                     	;# 
  1702  0011                     	;# 
  1703  0012                     	;# 
  1704  0013                     	;# 
  1705  0014                     	;# 
  1706  0015                     	;# 
  1707  0016                     	;# 
  1708  0016                     	;# 
  1709  0017                     	;# 
  1710  0018                     	;# 
  1711  0019                     	;# 
  1712  001A                     	;# 
  1713  001B                     	;# 
  1714  001C                     	;# 
  1715  001E                     	;# 
  1716  001F                     	;# 
  1717  008C                     	;# 
  1718  008D                     	;# 
  1719  008E                     	;# 
  1720  0091                     	;# 
  1721  0092                     	;# 
  1722  0093                     	;# 
  1723  0094                     	;# 
  1724  0095                     	;# 
  1725  0096                     	;# 
  1726  0097                     	;# 
  1727  0098                     	;# 
  1728  0099                     	;# 
  1729  009A                     	;# 
  1730  009B                     	;# 
  1731  009B                     	;# 
  1732  009C                     	;# 
  1733  009D                     	;# 
  1734  009E                     	;# 
  1735  010C                     	;# 
  1736  010D                     	;# 
  1737  010E                     	;# 
  1738  0111                     	;# 
  1739  0112                     	;# 
  1740  0113                     	;# 
  1741  0114                     	;# 
  1742  0115                     	;# 
  1743  0116                     	;# 
  1744  0117                     	;# 
  1745  0118                     	;# 
  1746  0119                     	;# 
  1747  011A                     	;# 
  1748  011B                     	;# 
  1749  011D                     	;# 
  1750  011E                     	;# 
  1751  018C                     	;# 
  1752  018D                     	;# 
  1753  018E                     	;# 
  1754  0191                     	;# 
  1755  0191                     	;# 
  1756  0192                     	;# 
  1757  0193                     	;# 
  1758  0193                     	;# 
  1759  0193                     	;# 
  1760  0194                     	;# 
  1761  0195                     	;# 
  1762  0196                     	;# 
  1763  0199                     	;# 
  1764  019A                     	;# 
  1765  019B                     	;# 
  1766  019B                     	;# 
  1767  019C                     	;# 
  1768  019D                     	;# 
  1769  019E                     	;# 
  1770  019F                     	;# 
  1771  020C                     	;# 
  1772  020D                     	;# 
  1773  020E                     	;# 
  1774  0211                     	;# 
  1775  0211                     	;# 
  1776  0212                     	;# 
  1777  0212                     	;# 
  1778  0213                     	;# 
  1779  0213                     	;# 
  1780  0214                     	;# 
  1781  0214                     	;# 
  1782  0215                     	;# 
  1783  0215                     	;# 
  1784  0215                     	;# 
  1785  0216                     	;# 
  1786  0216                     	;# 
  1787  0217                     	;# 
  1788  0217                     	;# 
  1789  0219                     	;# 
  1790  021A                     	;# 
  1791  021B                     	;# 
  1792  021C                     	;# 
  1793  021D                     	;# 
  1794  021E                     	;# 
  1795  021F                     	;# 
  1796  0291                     	;# 
  1797  0291                     	;# 
  1798  0292                     	;# 
  1799  0293                     	;# 
  1800  0294                     	;# 
  1801  0295                     	;# 
  1802  0295                     	;# 
  1803  0296                     	;# 
  1804  0298                     	;# 
  1805  0298                     	;# 
  1806  0299                     	;# 
  1807  029A                     	;# 
  1808  029B                     	;# 
  1809  029C                     	;# 
  1810  029D                     	;# 
  1811  029E                     	;# 
  1812  0311                     	;# 
  1813  0311                     	;# 
  1814  0312                     	;# 
  1815  0313                     	;# 
  1816  0318                     	;# 
  1817  0318                     	;# 
  1818  0319                     	;# 
  1819  031A                     	;# 
  1820  038C                     	;# 
  1821  038D                     	;# 
  1822  038E                     	;# 
  1823  0391                     	;# 
  1824  0392                     	;# 
  1825  0393                     	;# 
  1826  0394                     	;# 
  1827  0395                     	;# 
  1828  0396                     	;# 
  1829  039A                     	;# 
  1830  039C                     	;# 
  1831  039D                     	;# 
  1832  039E                     	;# 
  1833  039F                     	;# 
  1834  0415                     	;# 
  1835  0416                     	;# 
  1836  0417                     	;# 
  1837  041C                     	;# 
  1838  041D                     	;# 
  1839  041E                     	;# 
  1840  0FE4                     	;# 
  1841  0FE5                     	;# 
  1842  0FE6                     	;# 
  1843  0FE7                     	;# 
  1844  0FE8                     	;# 
  1845  0FE9                     	;# 
  1846  0FEA                     	;# 
  1847  0FEB                     	;# 
  1848  0FED                     	;# 
  1849  0FEE                     	;# 
  1850  0FEF                     	;# 
  1851                           
  1852                           	psect	idataBANK2
  1853  1EF5                     __pidataBANK2:
  1854                           
  1855                           ;initializer for _TAS_NORMAL
  1856  1EF5  3421               	retlw	33
  1857  1EF6  3408               	retlw	8
  1858                           
  1859                           ;initializer for _TAS_CLEAR_FALT
  1860  1EF7  3421               	retlw	33
  1861  1EF8  3488               	retlw	136
  1862                           
  1863                           ;initializer for _TAS_PLAY
  1864  1EF9  3404               	retlw	4
  1865  1EFA  3405               	retlw	5
  1866                           
  1867                           ;initializer for _TAS_FS96K
  1868  1EFB  3403               	retlw	3
  1869  1EFC  3484               	retlw	132
  1870                           
  1871                           ;initializer for _DIT_ADC
  1872  1EFD  3460               	retlw	96
  1873  1EFE  3422               	retlw	34
  1874                           
  1875                           ;initializer for _DIT_DIR
  1876  1EFF  3460               	retlw	96
  1877  1F00  3411               	retlw	17
  1878                           
  1879                           ;initializer for _DIR_COAX
  1880  1F01  3434               	retlw	52
  1881  1F02  3401               	retlw	1
  1882                           
  1883                           ;initializer for _DIR_OPT
  1884  1F03  3434               	retlw	52
  1885  1F04  3400               	retlw	0
  1886                           
  1887                           ;initializer for _AUXSRC_LVDS
  1888  1F05  346C               	retlw	108
  1889  1F06  3433               	retlw	51
  1890                           
  1891                           ;initializer for _AUXSRC_ADC
  1892  1F07  346C               	retlw	108
  1893  1F08  3422               	retlw	34
  1894                           
  1895                           ;initializer for _AUXSRC_DIR
  1896  1F09  346C               	retlw	108
  1897  1F0A  3411               	retlw	17
  1898                           
  1899                           ;initializer for _AUXSRC_AUTO
  1900  1F0B  346C               	retlw	108
  1901  1F0C  3400               	retlw	0
  1902                           
  1903                           ;initializer for _SRC_I2S
  1904  1F0D  346B               	retlw	107
  1905  1F0E  3455               	retlw	85
  1906                           
  1907                           ;initializer for _SRC_LVDS
  1908  1F0F  346B               	retlw	107
  1909  1F10  3433               	retlw	51
  1910                           
  1911                           ;initializer for _SRC_ADC
  1912  1F11  346B               	retlw	107
  1913  1F12  3422               	retlw	34
  1914                           
  1915                           ;initializer for _SRC_DIR
  1916  1F13  346B               	retlw	107
  1917  1F14  3411               	retlw	17
  1918                           
  1919                           ;initializer for _I2S_IN
  1920  1F15  346F               	retlw	111
  1921  1F16  3400               	retlw	0
  1922                           
  1923                           ;initializer for _I2S_OUT
  1924  1F17  346F               	retlw	111
  1925  1F18  3408               	retlw	8
  1926                           
  1927                           	psect	idataBANK3
  1928  108A                     __pidataBANK3:
  1929                           
  1930                           ;initializer for _led_dot
  1931  108A  34FF               	retlw	255
  1932  108B  34FF               	retlw	255
  1933  108C  34FF               	retlw	255
  1934                           
  1935                           ;initializer for _CALC_DIR
  1936  108D  3437               	retlw	55
  1937  108E  3400               	retlw	0
  1938                           
  1939                           ;initializer for _AUXSRC_I2S
  1940  108F  346C               	retlw	108
  1941  1090  3455               	retlw	85
  1942                           
  1943                           ;initializer for _TAS_CHK_RAILS
  1944  1091  3411               	retlw	17
  1945  1092  341F               	retlw	31
  1946                           
  1947                           ;initializer for _TAS_MUTE
  1948  1093  3404               	retlw	4
  1949  1094  34A5               	retlw	165
  1950                           
  1951                           ;initializer for _TAS_FS48K
  1952  1095  3403               	retlw	3
  1953  1096  3444               	retlw	68
  1954                           
  1955                           ;initializer for _TAS_FS44K
  1956  1097  3403               	retlw	3
  1957  1098  3404               	retlw	4
  1958                           
  1959                           ;initializer for _TAS_AC
  1960  1099  3401               	retlw	1
  1961  109A  3472               	retlw	114
  1962                           
  1963                           ;initializer for _TAS_DCDIAG_CLEAR
  1964  109B  3409               	retlw	9
  1965  109C  3401               	retlw	1
  1966                           
  1967                           ;initializer for _TAS_RESET
  1968  109D  3400               	retlw	0
  1969  109E  3480               	retlw	128
  1970                           
  1971                           ;initializer for _INIT9211_31
  1972  109F  3431               	retlw	49
  1973  10A0  3405               	retlw	5
  1974                           
  1975                           ;initializer for _INIT9211_27
  1976  10A1  3427               	retlw	39
  1977  10A2  34DB               	retlw	219
  1978                           
  1979                           ;initializer for _INIT9211_26
  1980  10A3  3426               	retlw	38
  1981  10A4  3460               	retlw	96
  1982                           
  1983                           ;initializer for _INIT9211_2B
  1984  10A5  342B               	retlw	43
  1985  10A6  34FE               	retlw	254
  1986                           
  1987                           ;initializer for _INIT9211_2E
  1988  10A7  342E               	retlw	46
  1989  10A8  3408               	retlw	8
  1990                           
  1991                           ;initializer for _INIT9211_20
  1992  10A9  3420               	retlw	32
  1993  10AA  3401               	retlw	1
  1994                           
  1995                           ;initializer for _ADC_96K
  1996  10AB  3431               	retlw	49
  1997  10AC  3405               	retlw	5
  1998                           
  1999                           ;initializer for _ADC_DC
  2000  10AD  3449               	retlw	73
  2001  10AE  3408               	retlw	8
  2002                           
  2003                           ;initializer for _DIT_I2S
  2004  10AF  3460               	retlw	96
  2005  10B0  3455               	retlw	85
  2006                           
  2007                           ;initializer for _DIT_LVDS
  2008  10B1  3460               	retlw	96
  2009  10B2  3444               	retlw	68
  2010                           
  2011                           ;initializer for _ADC_ATTR_0dB
  2012  10B3  3447               	retlw	71
  2013  10B4  34D7               	retlw	215
  2014                           
  2015                           ;initializer for _ADC_ATTL_0dB
  2016  10B5  3446               	retlw	70
  2017  10B6  34D7               	retlw	215
  2018                           
  2019                           ;initializer for _CALC_MOUT
  2020  10B7  3437               	retlw	55
  2021  10B8  3405               	retlw	5
  2022                           
  2023                           	psect	idataBANK4
  2024  11EE                     __pidataBANK4:
  2025                           
  2026                           ;initializer for _ledstr
  2027  11EE  345F               	retlw	95
  2028  11EF  345F               	retlw	95
  2029  11F0  345F               	retlw	95
  2030  11F1  3400               	retlw	0
  2031  11F2  3400               	retlw	0
  2032  11F3  3400               	retlw	0
  2033  11F4  3400               	retlw	0
  2034  11F5  3400               	retlw	0
  2035  11F6  3400               	retlw	0
  2036                           
  2037                           ;initializer for stoa@F1139
  2038  11F7  3428               	retlw	40
  2039  11F8  346E               	retlw	110
  2040  11F9  3475               	retlw	117
  2041  11FA  346C               	retlw	108
  2042  11FB  346C               	retlw	108
  2043  11FC  3429               	retlw	41
  2044  11FD  3400               	retlw	0
  2045                           
  2046                           ;initializer for _srcset9211
  2047  11FE  3450               	retlw	low (_DIR_COAX| (0+256))
  2048  11FF  3452               	retlw	low (_DIR_OPT| (0+256))
  2049  1200  3460               	retlw	low (_SRC_ADC| (0+256))
  2050  1201  345E               	retlw	low (_SRC_LVDS| (0+256))
  2051  1202  345C               	retlw	low (_SRC_I2S| (0+256))
  2052                           
  2053                           ;initializer for _ledbuff
  2054  1203  345F               	retlw	95
  2055  1204  345F               	retlw	95
  2056  1205  345F               	retlw	95
  2057  1206  3400               	retlw	0
  2058                           
  2059                           ;initializer for _TAS_HiZ
  2060  1207  3404               	retlw	4
  2061  1208  3455               	retlw	85
  2062                           
  2063                           ;initializer for _TAS_OSR128
  2064  1209  3402               	retlw	2
  2065  120A  3466               	retlw	102
  2066                           
  2067                           ;initializer for _TAS_OSR64
  2068  120B  3402               	retlw	2
  2069  120C  3462               	retlw	98
  2070                           
  2071                           ;initializer for _TAS_FC463
  2072  120D  3426               	retlw	38
  2073  120E  3447               	retlw	71
  2074                           
  2075                           ;initializer for _TAS_FC235
  2076  120F  3426               	retlw	38
  2077  1210  3446               	retlw	70
  2078                           
  2079                           ;initializer for _TAS_FC118
  2080  1211  3426               	retlw	38
  2081  1212  3445               	retlw	69
  2082                           
  2083                           ;initializer for _TAS_FC59
  2084  1213  3426               	retlw	38
  2085  1214  3444               	retlw	68
  2086                           
  2087                           ;initializer for _TAS_FC30
  2088  1215  3426               	retlw	38
  2089  1216  3443               	retlw	67
  2090                           
  2091                           ;initializer for _TAS_FC15
  2092  1217  3426               	retlw	38
  2093  1218  3442               	retlw	66
  2094                           
  2095                           ;initializer for _TAS_FC7
  2096  1219  3426               	retlw	38
  2097  121A  3441               	retlw	65
  2098                           
  2099                           ;initializer for _TAS_FC4
  2100  121B  3426               	retlw	38
  2101  121C  3440               	retlw	64
  2102                           
  2103                           ;initializer for _TAS_DC
  2104  121D  3401               	retlw	1
  2105  121E  34F2               	retlw	242
  2106                           
  2107                           ;initializer for _TAS_DCDIAG_ABORT
  2108  121F  3409               	retlw	9
  2109  1220  3480               	retlw	128
  2110                           
  2111                           ;initializer for _ADC_48K
  2112  1221  3431               	retlw	49
  2113  1222  341A               	retlw	26
  2114                           
  2115                           ;initializer for _ADC_AC
  2116  1223  3449               	retlw	73
  2117  1224  3400               	retlw	0
  2118                           
  2119                           ;initializer for _ADC_I2S_MASTER_256
  2120  1225  3448               	retlw	72
  2121  1226  3440               	retlw	64
  2122                           
  2123                           ;initializer for _ADC_ATTR_20dB
  2124  1227  3447               	retlw	71
  2125  1228  34FF               	retlw	255
  2126                           
  2127                           ;initializer for _ADC_ATTL_20dB
  2128  1229  3446               	retlw	70
  2129  122A  34FF               	retlw	255
  2130                           
  2131                           ;initializer for _ADC_ATTR_10dB
  2132  122B  3447               	retlw	71
  2133  122C  34EB               	retlw	235
  2134                           
  2135                           ;initializer for _ADC_ATTL_10dB
  2136  122D  3446               	retlw	70
  2137  122E  34EB               	retlw	235
  2138                           
  2139                           ;initializer for _CALC_DIT
  2140  122F  3437               	retlw	55
  2141  1230  3407               	retlw	7
  2142                           
  2143                           ;initializer for _CALC_MPOB
  2144  1231  3437               	retlw	55
  2145  1232  3406               	retlw	6
  2146                           
  2147                           ;initializer for _CALC_MPIB
  2148  1233  3437               	retlw	55
  2149  1234  3403               	retlw	3
  2150                           
  2151                           ;initializer for _CALC_ADC
  2152  1235  3437               	retlw	55
  2153  1236  3401               	retlw	1
  2154                           
  2155                           	psect	stringtext1
  2156  1870                     __pstringtext1:
  2157  1870                     _font7seg:
  2158  1870  34FF               	retlw	255
  2159  1871  34F9               	retlw	249
  2160  1872  34FF               	retlw	255
  2161  1873  34FF               	retlw	255
  2162  1874  34FF               	retlw	255
  2163  1875  349C               	retlw	156
  2164  1876  34FF               	retlw	255
  2165  1877  34FF               	retlw	255
  2166  1878  34FF               	retlw	255
  2167  1879  34FF               	retlw	255
  2168  187A  34FF               	retlw	255
  2169  187B  34FF               	retlw	255
  2170  187C  34FF               	retlw	255
  2171  187D  34BF               	retlw	191
  2172  187E  347F               	retlw	127
  2173  187F  34CF               	retlw	207
  2174  1880  34C0               	retlw	192
  2175  1881  34F9               	retlw	249
  2176  1882  34A4               	retlw	164
  2177  1883  34B0               	retlw	176
  2178  1884  3499               	retlw	153
  2179  1885  3492               	retlw	146
  2180  1886  3482               	retlw	130
  2181  1887  34F8               	retlw	248
  2182  1888  3480               	retlw	128
  2183  1889  3490               	retlw	144
  2184  188A  34F6               	retlw	246
  2185  188B  34B6               	retlw	182
  2186  188C  34FF               	retlw	255
  2187  188D  34B7               	retlw	183
  2188  188E  34FF               	retlw	255
  2189  188F  34FF               	retlw	255
  2190  1890  34A0               	retlw	160
  2191  1891  3488               	retlw	136
  2192  1892  3483               	retlw	131
  2193  1893  34C6               	retlw	198
  2194  1894  34A1               	retlw	161
  2195  1895  3486               	retlw	134
  2196  1896  348E               	retlw	142
  2197  1897  34C2               	retlw	194
  2198  1898  3489               	retlw	137
  2199  1899  34CF               	retlw	207
  2200  189A  34E1               	retlw	225
  2201  189B  3487               	retlw	135
  2202  189C  34C7               	retlw	199
  2203  189D  34C8               	retlw	200
  2204  189E  34AB               	retlw	171
  2205  189F  34C0               	retlw	192
  2206  18A0  348C               	retlw	140
  2207  18A1  3498               	retlw	152
  2208  18A2  3488               	retlw	136
  2209  18A3  3492               	retlw	146
  2210  18A4  34CE               	retlw	206
  2211  18A5  34C1               	retlw	193
  2212  18A6  34C1               	retlw	193
  2213  18A7  3481               	retlw	129
  2214  18A8  3489               	retlw	137
  2215  18A9  3491               	retlw	145
  2216  18AA  34E4               	retlw	228
  2217  18AB  34C6               	retlw	198
  2218  18AC  34FF               	retlw	255
  2219  18AD  34F0               	retlw	240
  2220  18AE  34BC               	retlw	188
  2221  18AF  34F7               	retlw	247
  2222  18B0  34DE               	retlw	222
  2223  18B1  34A0               	retlw	160
  2224  18B2  3483               	retlw	131
  2225  18B3  34A7               	retlw	167
  2226  18B4  34A1               	retlw	161
  2227  18B5  3486               	retlw	134
  2228  18B6  348E               	retlw	142
  2229  18B7  3490               	retlw	144
  2230  18B8  348B               	retlw	139
  2231  18B9  34FB               	retlw	251
  2232  18BA  34F1               	retlw	241
  2233  18BB  3487               	retlw	135
  2234  18BC  34C7               	retlw	199
  2235  18BD  34C8               	retlw	200
  2236  18BE  34AB               	retlw	171
  2237  18BF  34A3               	retlw	163
  2238  18C0  348C               	retlw	140
  2239  18C1  3498               	retlw	152
  2240  18C2  34AF               	retlw	175
  2241  18C3  3492               	retlw	146
  2242  18C4  3487               	retlw	135
  2243  18C5  34E3               	retlw	227
  2244  18C6  34E3               	retlw	227
  2245  18C7  3481               	retlw	129
  2246  18C8  3489               	retlw	137
  2247  18C9  3491               	retlw	145
  2248  18CA  34E4               	retlw	228
  2249  18CB  34FF               	retlw	255
  2250  18CC  34FF               	retlw	255
  2251  18CD  34FF               	retlw	255
  2252  18CE  34FE               	retlw	254
  2253  18CF                     __end_of_font7seg:
  2254                           
  2255                           	psect	stringtext2
  2256  18CF                     __pstringtext2:
  2257  18CF                     _led_fs_name:
  2258  18CF  3434               	retlw	52
  2259  18D0  3434               	retlw	52
  2260  18D1  342E               	retlw	46
  2261  18D2  3431               	retlw	49
  2262  18D3  3400               	retlw	0
  2263  18D4  3400               	retlw	0
  2264  18D5  3400               	retlw	0
  2265  18D6  3420               	retlw	32
  2266  18D7  3434               	retlw	52
  2267  18D8  3438               	retlw	56
  2268  18D9  3400               	retlw	0
  2269  18DA  3400               	retlw	0
  2270  18DB  3400               	retlw	0
  2271  18DC  3400               	retlw	0
  2272  18DD  3420               	retlw	32
  2273  18DE  3438               	retlw	56
  2274  18DF  3438               	retlw	56
  2275  18E0  342E               	retlw	46
  2276  18E1  3432               	retlw	50
  2277  18E2  3400               	retlw	0
  2278  18E3  3400               	retlw	0
  2279  18E4  3420               	retlw	32
  2280  18E5  3439               	retlw	57
  2281  18E6  3436               	retlw	54
  2282  18E7  3400               	retlw	0
  2283  18E8  3400               	retlw	0
  2284  18E9  3400               	retlw	0
  2285  18EA  3400               	retlw	0
  2286  18EB  3431               	retlw	49
  2287  18EC  3437               	retlw	55
  2288  18ED  3436               	retlw	54
  2289  18EE  3400               	retlw	0
  2290  18EF  3400               	retlw	0
  2291  18F0  3400               	retlw	0
  2292  18F1  3400               	retlw	0
  2293  18F2  3431               	retlw	49
  2294  18F3  3439               	retlw	57
  2295  18F4  3432               	retlw	50
  2296  18F5  3400               	retlw	0
  2297  18F6  3400               	retlw	0
  2298  18F7  3400               	retlw	0
  2299  18F8  3400               	retlw	0
  2300  18F9                     __end_of_led_fs_name:
  2301                           
  2302                           	psect	stringtext3
  2303  1965                     __pstringtext3:
  2304  1965                     _fsmStateTable:
  2305  1965  34F4               	retlw	low _I2C1_DO_IDLE
  2306  1966  341A               	retlw	high _I2C1_DO_IDLE
  2307  1967  3424               	retlw	low _I2C1_DO_SEND_ADR_READ
  2308  1968  341B               	retlw	high _I2C1_DO_SEND_ADR_READ
  2309  1969  3416               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  2310  196A  341B               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  2311  196B  346A               	retlw	low _I2C1_DO_TX
  2312  196C  3413               	retlw	high _I2C1_DO_TX
  2313  196D  341D               	retlw	low _I2C1_DO_RX
  2314  196E  3411               	retlw	high _I2C1_DO_RX
  2315  196F  3404               	retlw	low _I2C1_DO_RCEN
  2316  1970  341B               	retlw	high _I2C1_DO_RCEN
  2317  1971  345E               	retlw	low _I2C1_DO_TX_EMPTY
  2318  1972  3410               	retlw	high _I2C1_DO_TX_EMPTY
  2319  1973  34CF               	retlw	low _I2C1_DO_SEND_RESTART_READ
  2320  1974  341A               	retlw	high _I2C1_DO_SEND_RESTART_READ
  2321  1975  34D3               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  2322  1976  341A               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  2323  1977  34D7               	retlw	low _I2C1_DO_SEND_RESTART
  2324  1978  341A               	retlw	high _I2C1_DO_SEND_RESTART
  2325  1979  34DB               	retlw	low _I2C1_DO_SEND_STOP
  2326  197A  341A               	retlw	high _I2C1_DO_SEND_STOP
  2327  197B  34DF               	retlw	low _I2C1_DO_RX_ACK
  2328  197C  341A               	retlw	high _I2C1_DO_RX_ACK
  2329  197D  34E3               	retlw	low _I2C1_DO_RX_NACK_STOP
  2330  197E  341A               	retlw	high _I2C1_DO_RX_NACK_STOP
  2331  197F  34E7               	retlw	low _I2C1_DO_RX_NACK_RESTART
  2332  1980  341A               	retlw	high _I2C1_DO_RX_NACK_RESTART
  2333  1981  34F9               	retlw	low _I2C1_DO_RESET
  2334  1982  341A               	retlw	high _I2C1_DO_RESET
  2335  1983  3433               	retlw	low _I2C1_DO_ADDRESS_NACK
  2336  1984  3410               	retlw	high _I2C1_DO_ADDRESS_NACK
  2337  1985                     __end_of_fsmStateTable:
  2338                           
  2339                           	psect	stringtext4
  2340  19AC                     __pstringtext4:
  2341  19AC                     readRE@RE_states:
  2342  19AC  3400               	retlw	0
  2343  19AD  34FF               	retlw	-1
  2344  19AE  3400               	retlw	0
  2345  19AF  3405               	retlw	5
  2346  19B0  3401               	retlw	1
  2347  19B1  3400               	retlw	0
  2348  19B2  3405               	retlw	5
  2349  19B3  3400               	retlw	0
  2350  19B4  3400               	retlw	0
  2351  19B5  3405               	retlw	5
  2352  19B6  3405               	retlw	5
  2353  19B7  3400               	retlw	0
  2354  19B8  3405               	retlw	5
  2355  19B9  3400               	retlw	0
  2356  19BA  3400               	retlw	0
  2357  19BB  3400               	retlw	0
  2358  19BC                     __end_ofreadRE@RE_states:
  2359                           
  2360                           	psect	stringtext5
  2361  1800                     __pstringtext5:
  2362  1800                     _lcd_fs_name:
  2363  1800  3455               	retlw	85
  2364  1801  344E               	retlw	78
  2365  1802  344C               	retlw	76
  2366  1803  344B               	retlw	75
  2367  1804  3400               	retlw	0
  2368  1805  3400               	retlw	0
  2369  1806  3400               	retlw	0
  2370  1807  3420               	retlw	32
  2371  1808  3420               	retlw	32
  2372  1809  3438               	retlw	56
  2373  180A  346B               	retlw	107
  2374  180B  3400               	retlw	0
  2375  180C  3400               	retlw	0
  2376  180D  3400               	retlw	0
  2377  180E  3420               	retlw	32
  2378  180F  3431               	retlw	49
  2379  1810  3431               	retlw	49
  2380  1811  346B               	retlw	107
  2381  1812  3400               	retlw	0
  2382  1813  3400               	retlw	0
  2383  1814  3400               	retlw	0
  2384  1815  3420               	retlw	32
  2385  1816  3431               	retlw	49
  2386  1817  3432               	retlw	50
  2387  1818  346B               	retlw	107
  2388  1819  3400               	retlw	0
  2389  181A  3400               	retlw	0
  2390  181B  3400               	retlw	0
  2391  181C  3420               	retlw	32
  2392  181D  3431               	retlw	49
  2393  181E  3436               	retlw	54
  2394  181F  346B               	retlw	107
  2395  1820  3400               	retlw	0
  2396  1821  3400               	retlw	0
  2397  1822  3400               	retlw	0
  2398  1823  3420               	retlw	32
  2399  1824  3432               	retlw	50
  2400  1825  3432               	retlw	50
  2401  1826  346B               	retlw	107
  2402  1827  3400               	retlw	0
  2403  1828  3400               	retlw	0
  2404  1829  3400               	retlw	0
  2405  182A  3420               	retlw	32
  2406  182B  3432               	retlw	50
  2407  182C  3434               	retlw	52
  2408  182D  346B               	retlw	107
  2409  182E  3400               	retlw	0
  2410  182F  3400               	retlw	0
  2411  1830  3400               	retlw	0
  2412  1831  3420               	retlw	32
  2413  1832  3433               	retlw	51
  2414  1833  3432               	retlw	50
  2415  1834  346B               	retlw	107
  2416  1835  3400               	retlw	0
  2417  1836  3400               	retlw	0
  2418  1837  3400               	retlw	0
  2419  1838  3434               	retlw	52
  2420  1839  3434               	retlw	52
  2421  183A  342E               	retlw	46
  2422  183B  3431               	retlw	49
  2423  183C  346B               	retlw	107
  2424  183D  3400               	retlw	0
  2425  183E  3400               	retlw	0
  2426  183F  3420               	retlw	32
  2427  1840  3434               	retlw	52
  2428  1841  3438               	retlw	56
  2429  1842  346B               	retlw	107
  2430  1843  3400               	retlw	0
  2431  1844  3400               	retlw	0
  2432  1845  3400               	retlw	0
  2433  1846  3420               	retlw	32
  2434  1847  3436               	retlw	54
  2435  1848  3434               	retlw	52
  2436  1849  346B               	retlw	107
  2437  184A  3400               	retlw	0
  2438  184B  3400               	retlw	0
  2439  184C  3400               	retlw	0
  2440  184D  3438               	retlw	56
  2441  184E  3438               	retlw	56
  2442  184F  342E               	retlw	46
  2443  1850  3432               	retlw	50
  2444  1851  346B               	retlw	107
  2445  1852  3400               	retlw	0
  2446  1853  3400               	retlw	0
  2447  1854  3420               	retlw	32
  2448  1855  3439               	retlw	57
  2449  1856  3436               	retlw	54
  2450  1857  346B               	retlw	107
  2451  1858  3400               	retlw	0
  2452  1859  3400               	retlw	0
  2453  185A  3400               	retlw	0
  2454  185B  3431               	retlw	49
  2455  185C  3432               	retlw	50
  2456  185D  3438               	retlw	56
  2457  185E  346B               	retlw	107
  2458  185F  3400               	retlw	0
  2459  1860  3400               	retlw	0
  2460  1861  3400               	retlw	0
  2461  1862  3431               	retlw	49
  2462  1863  3437               	retlw	55
  2463  1864  3436               	retlw	54
  2464  1865  346B               	retlw	107
  2465  1866  3400               	retlw	0
  2466  1867  3400               	retlw	0
  2467  1868  3400               	retlw	0
  2468  1869  3431               	retlw	49
  2469  186A  3439               	retlw	57
  2470  186B  3432               	retlw	50
  2471  186C  346B               	retlw	107
  2472  186D  3400               	retlw	0
  2473  186E  3400               	retlw	0
  2474  186F  3400               	retlw	0
  2475  1870                     __end_of_lcd_fs_name:
  2476                           
  2477                           	psect	stringtext6
  2478  18F9                     __pstringtext6:
  2479  18F9                     _lcd_src_name:
  2480  18F9  3443               	retlw	67
  2481  18FA  344F               	retlw	79
  2482  18FB  3441               	retlw	65
  2483  18FC  3458               	retlw	88
  2484  18FD  3449               	retlw	73
  2485  18FE  3441               	retlw	65
  2486  18FF  344C               	retlw	76
  2487  1900  3400               	retlw	0
  2488  1901  344F               	retlw	79
  2489  1902  3450               	retlw	80
  2490  1903  3454               	retlw	84
  2491  1904  3449               	retlw	73
  2492  1905  3443               	retlw	67
  2493  1906  3441               	retlw	65
  2494  1907  344C               	retlw	76
  2495  1908  3400               	retlw	0
  2496  1909  3441               	retlw	65
  2497  190A  3444               	retlw	68
  2498  190B  3443               	retlw	67
  2499  190C  3420               	retlw	32
  2500  190D  3420               	retlw	32
  2501  190E  3420               	retlw	32
  2502  190F  3420               	retlw	32
  2503  1910  3400               	retlw	0
  2504  1911  3448               	retlw	72
  2505  1912  3444               	retlw	68
  2506  1913  344D               	retlw	77
  2507  1914  3449               	retlw	73
  2508  1915  3420               	retlw	32
  2509  1916  3420               	retlw	32
  2510  1917  3420               	retlw	32
  2511  1918  3400               	retlw	0
  2512  1919  3449               	retlw	73
  2513  191A  3432               	retlw	50
  2514  191B  3453               	retlw	83
  2515  191C  3420               	retlw	32
  2516  191D  3420               	retlw	32
  2517  191E  3420               	retlw	32
  2518  191F  3420               	retlw	32
  2519  1920  3400               	retlw	0
  2520  1921                     __end_of_lcd_src_name:
  2521                           
  2522                           	psect	stringtext7
  2523  1921                     __pstringtext7:
  2524  1921                     _led_src_name:
  2525  1921  3443               	retlw	67
  2526  1922  344F               	retlw	79
  2527  1923  3441               	retlw	65
  2528  1924  3400               	retlw	0
  2529  1925  3400               	retlw	0
  2530  1926  3400               	retlw	0
  2531  1927  3400               	retlw	0
  2532  1928  344F               	retlw	79
  2533  1929  3450               	retlw	80
  2534  192A  3454               	retlw	84
  2535  192B  3400               	retlw	0
  2536  192C  3400               	retlw	0
  2537  192D  3400               	retlw	0
  2538  192E  3400               	retlw	0
  2539  192F  3441               	retlw	65
  2540  1930  3464               	retlw	100
  2541  1931  3443               	retlw	67
  2542  1932  3400               	retlw	0
  2543  1933  3400               	retlw	0
  2544  1934  3400               	retlw	0
  2545  1935  3400               	retlw	0
  2546  1936  3448               	retlw	72
  2547  1937  3444               	retlw	68
  2548  1938  344D               	retlw	77
  2549  1939  3400               	retlw	0
  2550  193A  3400               	retlw	0
  2551  193B  3400               	retlw	0
  2552  193C  3400               	retlw	0
  2553  193D  3431               	retlw	49
  2554  193E  3432               	retlw	50
  2555  193F  3453               	retlw	83
  2556  1940  3400               	retlw	0
  2557  1941  3400               	retlw	0
  2558  1942  3400               	retlw	0
  2559  1943  3400               	retlw	0
  2560  1944                     __end_of_led_src_name:
  2561                           
  2562                           	psect	stringtext8
  2563  19BC                     __pstringtext8:
  2564  19BC                     _lcd_aux_name:
  2565  19BC  3449               	retlw	73
  2566  19BD  344E               	retlw	78
  2567  19BE  3450               	retlw	80
  2568  19BF  3455               	retlw	85
  2569  19C0  3454               	retlw	84
  2570  19C1  3420               	retlw	32
  2571  19C2  3400               	retlw	0
  2572  19C3  344F               	retlw	79
  2573  19C4  3455               	retlw	85
  2574  19C5  3454               	retlw	84
  2575  19C6  3450               	retlw	80
  2576  19C7  3455               	retlw	85
  2577  19C8  3454               	retlw	84
  2578  19C9  3400               	retlw	0
  2579  19CA                     __end_of_lcd_aux_name:
  2580                           
  2581                           	psect	stringtext9
  2582  19CA                     __pstringtext9:
  2583  19CA                     _led_i2s_dir:
  2584  19CA  3431               	retlw	49
  2585  19CB  346E               	retlw	110
  2586  19CC  3470               	retlw	112
  2587  19CD  3400               	retlw	0
  2588  19CE  3400               	retlw	0
  2589  19CF  3400               	retlw	0
  2590  19D0  3400               	retlw	0
  2591  19D1  344F               	retlw	79
  2592  19D2  3475               	retlw	117
  2593  19D3  3474               	retlw	116
  2594  19D4  3400               	retlw	0
  2595  19D5  3400               	retlw	0
  2596  19D6  3400               	retlw	0
  2597  19D7  3400               	retlw	0
  2598  19D8                     __end_of_led_i2s_dir:
  2599                           
  2600                           	psect	nvBANK4
  2601  0269                     __pnvBANK4:
  2602  0269                     _TMR1_InterruptHandler:
  2603  0269                     	ds	2
  2604  026B                     _timer1ReloadVal:
  2605  026B                     	ds	2
  2606  000B                     _INTCONbits	set	11
  2607  0012                     _PIR2bits	set	18
  2608  000E                     _PORTC	set	14
  2609  000C                     _PORTAbits	set	12
  2610  0018                     _T1CONbits	set	24
  2611  0018                     _T1CON	set	24
  2612  0011                     _PIR1bits	set	17
  2613  0016                     _TMR1L	set	22
  2614  0017                     _TMR1H	set	23
  2615  0019                     _T1GCON	set	25
  2616  0095                     _OPTION_REGbits	set	149
  2617  008E                     _TRISC	set	142
  2618  008D                     _TRISB	set	141
  2619  008C                     _TRISA	set	140
  2620  0097                     _WDTCON	set	151
  2621  0098                     _OSCTUNE	set	152
  2622  0099                     _OSCCON	set	153
  2623  0092                     _PIE2bits	set	146
  2624  0091                     _PIE1bits	set	145
  2625  010D                     _LATBbits	set	269
  2626  011E                     _APFCON1	set	286
  2627  011D                     _APFCON0	set	285
  2628  010E                     _LATC	set	270
  2629  010D                     _LATB	set	269
  2630  010C                     _LATA	set	268
  2631  0116                     _BORCON	set	278
  2632  010C                     _LATAbits	set	268
  2633  0196                     _EECON2	set	406
  2634  0193                     _EEDATL	set	403
  2635  0195                     _EECON1bits	set	405
  2636  0191                     _EEADRL	set	401
  2637  018C                     _ANSELA	set	396
  2638  018D                     _ANSELB	set	397
  2639  018E                     _ANSELC	set	398
  2640  020E                     _WPUC	set	526
  2641  020C                     _WPUA	set	524
  2642  020D                     _WPUB	set	525
  2643  0216                     _SSP1CON2bits	set	534
  2644  0211                     _SSP1BUF	set	529
  2645  0215                     _SSP1CON1bits	set	533
  2646  0212                     _SSP1ADD	set	530
  2647  0216                     _SSP1CON2	set	534
  2648  0215                     _SSP1CON1	set	533
  2649  0214                     _SSP1STAT	set	532
  2650                           
  2651                           	psect	stringtext10
  2652  1944                     __pstringtext10:
  2653  1944                     STR_20:
  2654  1944  3457               	retlw	87	;'W'
  2655  1945  3441               	retlw	65	;'A'
  2656  1946  3452               	retlw	82	;'R'
  2657  1947  343A               	retlw	58	;':'
  2658  1948  3425               	retlw	37	;'%'
  2659  1949  3430               	retlw	48	;'0'
  2660  194A  3432               	retlw	50	;'2'
  2661  194B  3458               	retlw	88	;'X'
  2662  194C  3420               	retlw	32	;' '
  2663  194D  3425               	retlw	37	;'%'
  2664  194E  3430               	retlw	48	;'0'
  2665  194F  3432               	retlw	50	;'2'
  2666  1950  3458               	retlw	88	;'X'
  2667  1951  3420               	retlw	32	;' '
  2668  1952  3425               	retlw	37	;'%'
  2669  1953  3430               	retlw	48	;'0'
  2670  1954  3432               	retlw	50	;'2'
  2671  1955  3458               	retlw	88	;'X'
  2672  1956  3420               	retlw	32	;' '
  2673  1957  3425               	retlw	37	;'%'
  2674  1958  3430               	retlw	48	;'0'
  2675  1959  3432               	retlw	50	;'2'
  2676  195A  3458               	retlw	88	;'X'
  2677  195B  3420               	retlw	32	;' '
  2678  195C  3425               	retlw	37	;'%'
  2679  195D  3430               	retlw	48	;'0'
  2680  195E  3432               	retlw	50	;'2'
  2681  195F  3458               	retlw	88	;'X'
  2682  1960  3425               	retlw	37	;'%'
  2683  1961  3430               	retlw	48	;'0'
  2684  1962  3432               	retlw	50	;'2'
  2685  1963  3458               	retlw	88	;'X'
  2686  1964  3400               	retlw	0
  2687                           
  2688                           	psect	stringtext11
  2689  1985                     __pstringtext11:
  2690  1985                     STR_7:
  2691  1985  3446               	retlw	70	;'F'
  2692  1986  3469               	retlw	105	;'i'
  2693  1987  3472               	retlw	114	;'r'
  2694  1988  346D               	retlw	109	;'m'
  2695  1989  3477               	retlw	119	;'w'
  2696  198A  3461               	retlw	97	;'a'
  2697  198B  3472               	retlw	114	;'r'
  2698  198C  3465               	retlw	101	;'e'
  2699  198D  343A               	retlw	58	;':'
  2700  198E  3420               	retlw	32	;' '
  2701  198F  3432               	retlw	50	;'2'
  2702  1990  3430               	retlw	48	;'0'
  2703  1991  3432               	retlw	50	;'2'
  2704  1992  3430               	retlw	48	;'0'
  2705  1993  344A               	retlw	74	;'J'
  2706  1994  3455               	retlw	85	;'U'
  2707  1995  344E               	retlw	78	;'N'
  2708  1996  3430               	retlw	48	;'0'
  2709  1997  3436               	retlw	54	;'6'
  2710  1998  3400               	retlw	0
  2711                           
  2712                           	psect	stringtext12
  2713  1999                     __pstringtext12:
  2714  1999                     STR_19:
  2715  1999  3456               	retlw	86	;'V'
  2716  199A  344F               	retlw	79	;'O'
  2717  199B  344C               	retlw	76	;'L'
  2718  199C  343A               	retlw	58	;':'
  2719  199D  3425               	retlw	37	;'%'
  2720  199E  3433               	retlw	51	;'3'
  2721  199F  3464               	retlw	100	;'d'
  2722  19A0  3420               	retlw	32	;' '
  2723  19A1  3442               	retlw	66	;'B'
  2724  19A2  3441               	retlw	65	;'A'
  2725  19A3  344C               	retlw	76	;'L'
  2726  19A4  343A               	retlw	58	;':'
  2727  19A5  3425               	retlw	37	;'%'
  2728  19A6  3432               	retlw	50	;'2'
  2729  19A7  3464               	retlw	100	;'d'
  2730  19A8  3420               	retlw	32	;' '
  2731  19A9  3425               	retlw	37	;'%'
  2732  19AA  3473               	retlw	115	;'s'
  2733  19AB  3400               	retlw	0
  2734                           
  2735                           	psect	stringtext13
  2736  19D8                     __pstringtext13:
  2737  19D8                     STR_18:
  2738  19D8  3441               	retlw	65	;'A'
  2739  19D9  3455               	retlw	85	;'U'
  2740  19DA  3458               	retlw	88	;'X'
  2741  19DB  343A               	retlw	58	;':'
  2742  19DC  3425               	retlw	37	;'%'
  2743  19DD  3473               	retlw	115	;'s'
  2744  19DE  3420               	retlw	32	;' '
  2745  19DF  3448               	retlw	72	;'H'
  2746  19E0  3450               	retlw	80	;'P'
  2747  19E1  3446               	retlw	70	;'F'
  2748  19E2  343A               	retlw	58	;':'
  2749  19E3  3425               	retlw	37	;'%'
  2750  19E4  3473               	retlw	115	;'s'
  2751  19E5  3400               	retlw	0
  2752                           
  2753                           	psect	stringtext14
  2754  19E6                     __pstringtext14:
  2755  19E6                     STR_10:
  2756  19E6  341B               	retlw	27
  2757  19E7  3424               	retlw	36	;'$'
  2758  19E8  3442               	retlw	66	;'B'
  2759  19E9  3421               	retlw	33	;'!'
  2760  19EA  3421               	retlw	33	;'!'
  2761  19EB  3421               	retlw	33	;'!'
  2762  19EC  3421               	retlw	33	;'!'
  2763  19ED  3421               	retlw	33	;'!'
  2764  19EE  3421               	retlw	33	;'!'
  2765  19EF  341B               	retlw	27
  2766  19F0  3428               	retlw	40	;'('
  2767  19F1  3442               	retlw	66	;'B'
  2768  19F2  3400               	retlw	0
  2769                           
  2770                           	psect	stringtext15
  2771  19F3                     __pstringtext15:
  2772  19F3                     STR_17:
  2773  19F3  3453               	retlw	83	;'S'
  2774  19F4  344F               	retlw	79	;'O'
  2775  19F5  3455               	retlw	85	;'U'
  2776  19F6  3452               	retlw	82	;'R'
  2777  19F7  3443               	retlw	67	;'C'
  2778  19F8  3445               	retlw	69	;'E'
  2779  19F9  343A               	retlw	58	;':'
  2780  19FA  3425               	retlw	37	;'%'
  2781  19FB  3473               	retlw	115	;'s'
  2782  19FC  3400               	retlw	0
  2783                           
  2784                           	psect	stringtext16
  2785  19FD                     __pstringtext16:
  2786  19FD                     STR_13:
  2787  19FD  3425               	retlw	37	;'%'
  2788  19FE  3430               	retlw	48	;'0'
  2789  19FF  3433               	retlw	51	;'3'
  2790  1A00  3464               	retlw	100	;'d'
  2791  1A01  3400               	retlw	0
  2792                           
  2793                           	psect	stringtext17
  2794  1A02                     __pstringtext17:
  2795  1A02                     STR_3:
  2796  1A02  342E               	retlw	46	;'.'
  2797  1A03  3430               	retlw	48	;'0'
  2798  1A04  3420               	retlw	32	;' '
  2799  1A05  3400               	retlw	0
  2800                           
  2801                           	psect	stringtext18
  2802  1A06                     __pstringtext18:
  2803  1A06                     STR_4:
  2804  1A06  342E               	retlw	46	;'.'
  2805  1A07  3435               	retlw	53	;'5'
  2806  1A08  3420               	retlw	32	;' '
  2807  1A09  3400               	retlw	0
  2808                           
  2809                           	psect	stringtext19
  2810  1A0A                     __pstringtext19:
  2811  1A0A                     STR_9:
  2812  1A0A  3453               	retlw	83	;'S'
  2813  1A0B  344F               	retlw	79	;'O'
  2814  1A0C  3443               	retlw	67	;'C'
  2815  1A0D  3400               	retlw	0
  2816                           
  2817                           	psect	stringtext20
  2818  1A0E                     __pstringtext20:
  2819  1A0E                     STR_1:
  2820  1A0E  344F               	retlw	79	;'O'
  2821  1A0F  3446               	retlw	70	;'F'
  2822  1A10  3446               	retlw	70	;'F'
  2823  1A11  3400               	retlw	0
  2824                           
  2825                           	psect	stringtext21
  2826  1A12                     __pstringtext21:
  2827  1A12                     STR_11:
  2828  1A12  3442               	retlw	66	;'B'
  2829  1A13  3441               	retlw	65	;'A'
  2830  1A14  344C               	retlw	76	;'L'
  2831  1A15  3400               	retlw	0
  2832                           
  2833                           	psect	stringtext22
  2834  1A16                     __pstringtext22:
  2835  1A16                     STR_15:
  2836  1A16  3431               	retlw	49	;'1'
  2837  1A17  3432               	retlw	50	;'2'
  2838  1A18  3453               	retlw	83	;'S'
  2839  1A19  3400               	retlw	0
  2840                           
  2841                           	psect	stringtext23
  2842  1A1A                     __pstringtext23:
  2843  1A1A                     STR_2:
  2844  1A1A  3425               	retlw	37	;'%'
  2845  1A1B  3432               	retlw	50	;'2'
  2846  1A1C  3464               	retlw	100	;'d'
  2847  1A1D  3400               	retlw	0
  2848                           
  2849                           	psect	stringtext24
  2850  1A1E                     __pstringtext24:
  2851  1A1E                     STR_5:
  2852  1A1E  3425               	retlw	37	;'%'
  2853  1A1F  3433               	retlw	51	;'3'
  2854  1A20  3464               	retlw	100	;'d'
  2855  1A21  3400               	retlw	0
  2856                           
  2857                           	psect	stringtext25
  2858  1A22                     __pstringtext25:
  2859  1A22                     STR_8:
  2860  1A22  3446               	retlw	70	;'F'
  2861  1A23  3441               	retlw	65	;'A'
  2862  1A24  3464               	retlw	100	;'d'
  2863  1A25  3400               	retlw	0
  2864                           
  2865                           	psect	stringtext26
  2866  1A26                     __pstringtext26:
  2867  1A26                     STR_6:
  2868  1A26  342E               	retlw	46	;'.'
  2869  1A27  3400               	retlw	0
  2870                           
  2871                           	psect	stringtext27
  2872  0000                     __pstringtext27:
  2873  19E6                     
  2874                           	psect	cinit
  2875  0027                     start_initialization:	
  2876                           ; #config settings
  2877                           
  2878  0027                     __initialization:
  2879                           
  2880                           ; Initialize objects allocated to BANK2
  2881  0027  30F5               	movlw	low __pidataBANK2
  2882  0028  0084               	movwf	4
  2883  0029  309E               	movlw	(high __pidataBANK2)| (0+128)
  2884  002A  0085               	movwf	5
  2885  002B  3044               	movlw	low __pdataBANK2
  2886  002C  0086               	movwf	6
  2887  002D  3001               	movlw	high __pdataBANK2
  2888  002E  0087               	movwf	7
  2889  002F  3024               	movlw	36
  2890  0030  319B  2310  3180   	fcall	init_ram
  2891                           
  2892                           ; Initialize objects allocated to BANK3
  2893  0033  308A               	movlw	low __pidataBANK3
  2894  0034  0084               	movwf	4
  2895  0035  3090               	movlw	(high __pidataBANK3)| (0+128)
  2896  0036  0085               	movwf	5
  2897  0037  30A0               	movlw	low __pdataBANK3
  2898  0038  0086               	movwf	6
  2899  0039  3001               	movlw	high __pdataBANK3
  2900  003A  0087               	movwf	7
  2901  003B  302F               	movlw	47
  2902  003C  319B  2310  3180   	fcall	init_ram
  2903                           
  2904                           ; Initialize objects allocated to BANK4
  2905  003F  30EE               	movlw	low __pidataBANK4
  2906  0040  0084               	movwf	4
  2907  0041  3091               	movlw	(high __pidataBANK4)| (0+128)
  2908  0042  0085               	movwf	5
  2909  0043  3020               	movlw	low __pdataBANK4
  2910  0044  0086               	movwf	6
  2911  0045  3002               	movlw	high __pdataBANK4
  2912  0046  0087               	movwf	7
  2913  0047  3049               	movlw	73
  2914  0048  319B  2310  3180   	fcall	init_ram
  2915                           
  2916                           ; Clear objects allocated to COMMON
  2917  004B  01FD               	clrf	__pbssCOMMON& (0+127)
  2918                           
  2919                           ; Clear objects allocated to BANK0
  2920  004C  01EA               	clrf	__pbssBANK0& (0+127)
  2921  004D  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  2922  004E  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  2923                           
  2924                           ; Clear objects allocated to BANK1
  2925  004F  0021               	movlb	1	; select bank1
  2926  0050  01E6               	clrf	__pbssBANK1& (0+127)
  2927  0051  01E7               	clrf	(__pbssBANK1+1)& (0+127)
  2928  0052  01E8               	clrf	(__pbssBANK1+2)& (0+127)
  2929  0053  01E9               	clrf	(__pbssBANK1+3)& (0+127)
  2930                           
  2931                           ; Clear objects allocated to BANK2
  2932  0054  3020               	movlw	low __pbssBANK2
  2933  0055  0084               	movwf	4
  2934  0056  3001               	movlw	high __pbssBANK2
  2935  0057  0085               	movwf	5
  2936  0058  3024               	movlw	36
  2937  0059  319B  230A  3180   	fcall	clear_ram0
  2938                           
  2939                           ; Clear objects allocated to BANK3
  2940  005C  30CF               	movlw	low __pbssBANK3
  2941  005D  0084               	movwf	4
  2942  005E  3001               	movlw	high __pbssBANK3
  2943  005F  0085               	movwf	5
  2944  0060  3020               	movlw	32
  2945  0061  319B  230A  3180   	fcall	clear_ram0
  2946                           
  2947                           ; Clear objects allocated to BANK5
  2948  0064  30A0               	movlw	low __pbssBANK5
  2949  0065  0084               	movwf	4
  2950  0066  3002               	movlw	high __pbssBANK5
  2951  0067  0085               	movwf	5
  2952  0068  3049               	movlw	73
  2953  0069  319B  230A         	fcall	clear_ram0
  2954  006B                     end_of_initialization:	
  2955                           ;End of C runtime variable initialization code
  2956                           
  2957  006B                     __end_of__initialization:
  2958  006B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2959  006C  0020               	movlb	0
  2960  006D  3180  286F         	ljmp	_main	;jump to C main() function
  2961                           
  2962                           	psect	bssCOMMON
  2963  007D                     __pbssCOMMON:
  2964  007D                     TMR1_DefaultInterruptHandler@RE_offset:
  2965  007D                     	ds	1
  2966                           
  2967                           	psect	bssBANK0
  2968  006A                     __pbssBANK0:
  2969  006A                     _flags:
  2970  006A                     	ds	2
  2971  006C                     _current_volume:
  2972  006C                     	ds	1
  2973                           
  2974                           	psect	bssBANK1
  2975  00E6                     __pbssBANK1:
  2976  00E6                     _current_direction:
  2977  00E6                     	ds	1
  2978  00E7                     _current_balance:
  2979  00E7                     	ds	1
  2980  00E8                     _current_source:
  2981  00E8                     	ds	1
  2982  00E9                     _RE_pos:
  2983  00E9                     	ds	1
  2984                           
  2985                           	psect	bssBANK2
  2986  0120                     __pbssBANK2:
  2987  0120                     TMR1_DefaultInterruptHandler@led_blink:
  2988  0120                     	ds	3
  2989  0123                     _blink_rate:
  2990  0123                     	ds	3
  2991  0126                     _nout:
  2992  0126                     	ds	2
  2993  0128                     _width:
  2994  0128                     	ds	2
  2995  012A                     _prec:
  2996  012A                     	ds	2
  2997  012C                     TMR1_DefaultInterruptHandler@pushcnt:
  2998  012C                     	ds	2
  2999  012E                     _MSSP1_InterruptHandler:
  3000  012E                     	ds	2
  3001  0130                     main@count:
  3002  0130                     	ds	1
  3003  0131                     chk6422warning@prail:
  3004  0131                     	ds	1
  3005  0132                     chk6422warning@ilim:
  3006  0132                     	ds	1
  3007  0133                     chk6422warning@clip:
  3008  0133                     	ds	1
  3009  0134                     chk6422warning@otwarn:
  3010  0134                     	ds	1
  3011  0135                     chk6422warning@otshut:
  3012  0135                     	ds	1
  3013  0136                     chk6422warning@ocdc:
  3014  0136                     	ds	1
  3015  0137                     chk6422warning@lasttime:
  3016  0137                     	ds	1
  3017  0138                     _current_fs:
  3018  0138                     	ds	1
  3019  0139                     _current_aux:
  3020  0139                     	ds	1
  3021  013A                     _gain:
  3022  013A                     	ds	1
  3023  013B                     TMR1_DefaultInterruptHandler@pushstat:
  3024  013B                     	ds	1
  3025  013C                     TMR1_DefaultInterruptHandler@intcnt:
  3026  013C                     	ds	1
  3027  013D                     read_clickRE@interval:
  3028  013D                     	ds	1
  3029  013E                     read_clickRE@index:
  3030  013E                     	ds	1
  3031  013F                     readRE@RE_old:
  3032  013F                     	ds	1
  3033  0140                     readRE@direction:
  3034  0140                     	ds	1
  3035  0141                     _button1:
  3036  0141                     	ds	1
  3037  0142                     _tasbuff:
  3038  0142                     	ds	2
  3039                           
  3040                           	psect	dataBANK2
  3041  0144                     __pdataBANK2:
  3042  0144                     _TAS_NORMAL:
  3043  0144                     	ds	2
  3044  0146                     _TAS_CLEAR_FALT:
  3045  0146                     	ds	2
  3046  0148                     _TAS_PLAY:
  3047  0148                     	ds	2
  3048  014A                     _TAS_FS96K:
  3049  014A                     	ds	2
  3050  014C                     _DIT_ADC:
  3051  014C                     	ds	2
  3052  014E                     _DIT_DIR:
  3053  014E                     	ds	2
  3054  0150                     _DIR_COAX:
  3055  0150                     	ds	2
  3056  0152                     _DIR_OPT:
  3057  0152                     	ds	2
  3058  0154                     _AUXSRC_LVDS:
  3059  0154                     	ds	2
  3060  0156                     _AUXSRC_ADC:
  3061  0156                     	ds	2
  3062  0158                     _AUXSRC_DIR:
  3063  0158                     	ds	2
  3064  015A                     _AUXSRC_AUTO:
  3065  015A                     	ds	2
  3066  015C                     _SRC_I2S:
  3067  015C                     	ds	2
  3068  015E                     _SRC_LVDS:
  3069  015E                     	ds	2
  3070  0160                     _SRC_ADC:
  3071  0160                     	ds	2
  3072  0162                     _SRC_DIR:
  3073  0162                     	ds	2
  3074  0164                     _I2S_IN:
  3075  0164                     	ds	2
  3076  0166                     _I2S_OUT:
  3077  0166                     	ds	2
  3078                           
  3079                           	psect	bssBANK3
  3080  01CF                     __pbssBANK3:
  3081  01CF                     _I2C1_Status:
  3082  01CF                     	ds	30
  3083  01ED                     _TAS_RUN:
  3084  01ED                     	ds	2
  3085                           
  3086                           	psect	dataBANK3
  3087  01A0                     __pdataBANK3:
  3088  01A0                     _led_dot:
  3089  01A0                     	ds	3
  3090  01A3                     _CALC_DIR:
  3091  01A3                     	ds	2
  3092  01A5                     _AUXSRC_I2S:
  3093  01A5                     	ds	2
  3094  01A7                     _TAS_CHK_RAILS:
  3095  01A7                     	ds	2
  3096  01A9                     _TAS_MUTE:
  3097  01A9                     	ds	2
  3098  01AB                     _TAS_FS48K:
  3099  01AB                     	ds	2
  3100  01AD                     _TAS_FS44K:
  3101  01AD                     	ds	2
  3102  01AF                     _TAS_AC:
  3103  01AF                     	ds	2
  3104  01B1                     _TAS_DCDIAG_CLEAR:
  3105  01B1                     	ds	2
  3106  01B3                     _TAS_RESET:
  3107  01B3                     	ds	2
  3108  01B5                     _INIT9211_31:
  3109  01B5                     	ds	2
  3110  01B7                     _INIT9211_27:
  3111  01B7                     	ds	2
  3112  01B9                     _INIT9211_26:
  3113  01B9                     	ds	2
  3114  01BB                     _INIT9211_2B:
  3115  01BB                     	ds	2
  3116  01BD                     _INIT9211_2E:
  3117  01BD                     	ds	2
  3118  01BF                     _INIT9211_20:
  3119  01BF                     	ds	2
  3120  01C1                     _ADC_96K:
  3121  01C1                     	ds	2
  3122  01C3                     _ADC_DC:
  3123  01C3                     	ds	2
  3124  01C5                     _DIT_I2S:
  3125  01C5                     	ds	2
  3126  01C7                     _DIT_LVDS:
  3127  01C7                     	ds	2
  3128  01C9                     _ADC_ATTR_0dB:
  3129  01C9                     	ds	2
  3130  01CB                     _ADC_ATTL_0dB:
  3131  01CB                     	ds	2
  3132  01CD                     _CALC_MOUT:
  3133  01CD                     	ds	2
  3134                           
  3135                           	psect	dataBANK4
  3136  0220                     __pdataBANK4:
  3137  0220                     _ledstr:
  3138  0220                     	ds	9
  3139  0229                     stoa@F1139:
  3140  0229                     	ds	7
  3141  0230                     _srcset9211:
  3142  0230                     	ds	5
  3143  0235                     _ledbuff:
  3144  0235                     	ds	4
  3145  0239                     _TAS_HiZ:
  3146  0239                     	ds	2
  3147  023B                     _TAS_OSR128:
  3148  023B                     	ds	2
  3149  023D                     _TAS_OSR64:
  3150  023D                     	ds	2
  3151  023F                     _TAS_FC463:
  3152  023F                     	ds	2
  3153  0241                     _TAS_FC235:
  3154  0241                     	ds	2
  3155  0243                     _TAS_FC118:
  3156  0243                     	ds	2
  3157  0245                     _TAS_FC59:
  3158  0245                     	ds	2
  3159  0247                     _TAS_FC30:
  3160  0247                     	ds	2
  3161  0249                     _TAS_FC15:
  3162  0249                     	ds	2
  3163  024B                     _TAS_FC7:
  3164  024B                     	ds	2
  3165  024D                     _TAS_FC4:
  3166  024D                     	ds	2
  3167  024F                     _TAS_DC:
  3168  024F                     	ds	2
  3169  0251                     _TAS_DCDIAG_ABORT:
  3170  0251                     	ds	2
  3171  0253                     _ADC_48K:
  3172  0253                     	ds	2
  3173  0255                     _ADC_AC:
  3174  0255                     	ds	2
  3175  0257                     _ADC_I2S_MASTER_256:
  3176  0257                     	ds	2
  3177  0259                     _ADC_ATTR_20dB:
  3178  0259                     	ds	2
  3179  025B                     _ADC_ATTL_20dB:
  3180  025B                     	ds	2
  3181  025D                     _ADC_ATTR_10dB:
  3182  025D                     	ds	2
  3183  025F                     _ADC_ATTL_10dB:
  3184  025F                     	ds	2
  3185  0261                     _CALC_DIT:
  3186  0261                     	ds	2
  3187  0263                     _CALC_MPOB:
  3188  0263                     	ds	2
  3189  0265                     _CALC_MPIB:
  3190  0265                     	ds	2
  3191  0267                     _CALC_ADC:
  3192  0267                     	ds	2
  3193                           
  3194                           	psect	bssBANK5
  3195  02A0                     __pbssBANK5:
  3196  02A0                     _lcdbuff:
  3197  02A0                     	ds	41
  3198  02C9                     _dbuf:
  3199  02C9                     	ds	32
  3200                           
  3201                           	psect	inittext
  3202  1B10                     init_ram:
  3203  1B10  00FE               	movwf	126
  3204  1B11                     initloop:
  3205  1B11  0012               	moviw fsr0++
  3206  1B12  001E               	movwi fsr1++
  3207  1B13  0BFE               	decfsz	126,f
  3208  1B14  2B11               	goto	initloop
  3209  1B15  3400               	retlw	0
  3210                           
  3211                           	psect	clrtext
  3212  1B0A                     clear_ram0:	
  3213                           ;	Called with FSR0 containing the base address, and
  3214                           ;	WREG with the size to clear
  3215                           
  3216  1B0A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3217  1B0B                     clrloop0:
  3218  1B0B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3219  1B0C  3101               	addfsr 0,1
  3220  1B0D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3221  1B0E  2B0B               	goto	clrloop0	;have we reached the end yet?
  3222  1B0F  3400               	retlw	0	;all done for this memory range, return
  3223                           
  3224                           	psect	cstackBANK6
  3225  0320                     __pcstackBANK6:
  3226  0320                     lcd_disp_param@pfspo:
  3227                           
  3228                           ; 1 bytes @ 0x0
  3229  0320                     	ds	1
  3230  0321                     lcd_disp_param@ocdc:
  3231                           
  3232                           ; 1 bytes @ 0x1
  3233  0321                     	ds	1
  3234  0322                     lcd_disp_param@otshut:
  3235                           
  3236                           ; 1 bytes @ 0x2
  3237  0322                     	ds	1
  3238  0323                     lcd_disp_param@otwarn:
  3239                           
  3240                           ; 1 bytes @ 0x3
  3241  0323                     	ds	1
  3242  0324                     lcd_disp_param@clip:
  3243                           
  3244                           ; 1 bytes @ 0x4
  3245  0324                     	ds	1
  3246  0325                     lcd_disp_param@ilim:
  3247                           
  3248                           ; 1 bytes @ 0x5
  3249  0325                     	ds	1
  3250  0326                     lcd_disp_param@prail:
  3251                           
  3252                           ; 1 bytes @ 0x6
  3253  0326                     	ds	1
  3254  0327                     _lcd_disp_param$2844:
  3255                           
  3256                           ; 2 bytes @ 0x7
  3257  0327                     	ds	2
  3258                           
  3259                           	psect	cstackBANK2
  3260  0168                     __pcstackBANK2:
  3261  0168                     ??_main:
  3262                           
  3263                           ; 1 bytes @ 0x0
  3264  0168                     	ds	7
  3265                           
  3266                           	psect	cstackBANK1
  3267  00A0                     __pcstackBANK1:
  3268  00A0                     vfpfcnvrt@ll:
  3269                           
  3270                           ; 8 bytes @ 0x0
  3271  00A0                     	ds	8
  3272  00A8                     vfpfcnvrt@llu:
  3273                           
  3274                           ; 8 bytes @ 0x8
  3275  00A8                     	ds	8
  3276  00B0                     vfpfcnvrt@cp:
  3277                           
  3278                           ; 2 bytes @ 0x10
  3279  00B0                     	ds	2
  3280  00B2                     vfpfcnvrt@c:
  3281                           
  3282                           ; 1 bytes @ 0x12
  3283  00B2                     	ds	1
  3284  00B3                     vfpfcnvrt@done:
  3285                           
  3286                           ; 2 bytes @ 0x13
  3287  00B3                     	ds	2
  3288  00B5                     _vfpfcnvrt$2347:
  3289                           
  3290                           ; 2 bytes @ 0x15
  3291  00B5                     	ds	2
  3292  00B7                     vfpfcnvrt@fp:
  3293                           
  3294                           ; 1 bytes @ 0x17
  3295  00B7                     	ds	1
  3296  00B8                     ?_vfprintf:
  3297  00B8                     vfprintf@fmt:	
  3298                           ; 2 bytes @ 0x18
  3299                           
  3300                           
  3301                           ; 2 bytes @ 0x18
  3302  00B8                     	ds	2
  3303  00BA                     vfprintf@ap:
  3304                           
  3305                           ; 1 bytes @ 0x1A
  3306  00BA                     	ds	1
  3307  00BB                     ??_vfprintf:
  3308                           
  3309                           ; 1 bytes @ 0x1B
  3310  00BB                     	ds	2
  3311  00BD                     vfprintf@fp:
  3312                           
  3313                           ; 1 bytes @ 0x1D
  3314  00BD                     	ds	1
  3315  00BE                     vfprintf@cfmt:
  3316                           
  3317                           ; 2 bytes @ 0x1E
  3318  00BE                     	ds	2
  3319  00C0                     ?_sprintf:
  3320  00C0                     sprintf@s:	
  3321                           ; 2 bytes @ 0x20
  3322                           
  3323                           
  3324                           ; 2 bytes @ 0x20
  3325  00C0                     	ds	2
  3326  00C2                     sprintf@fmt:
  3327                           
  3328                           ; 2 bytes @ 0x22
  3329  00C2                     	ds	14
  3330  00D0                     ??_sprintf:
  3331                           
  3332                           ; 1 bytes @ 0x30
  3333  00D0                     	ds	3
  3334  00D3                     sprintf@ap:
  3335                           
  3336                           ; 1 bytes @ 0x33
  3337  00D3                     	ds	1
  3338  00D4                     sprintf@f:
  3339                           
  3340                           ; 6 bytes @ 0x34
  3341  00D4                     	ds	6
  3342  00DA                     ??_lcd_disp_param:
  3343  00DA                     ??_set_gainstr:	
  3344                           ; 1 bytes @ 0x3A
  3345                           
  3346                           
  3347                           ; 1 bytes @ 0x3A
  3348  00DA                     	ds	1
  3349  00DB                     set_gainstr@gval:
  3350                           
  3351                           ; 1 bytes @ 0x3B
  3352  00DB                     	ds	11
  3353                           
  3354                           	psect	cstackCOMMON
  3355  0070                     __pcstackCOMMON:
  3356  0070                     ?_I2C1_Open:
  3357  0070                     ?_I2C1_MasterWrite:	
  3358                           ; 1 bytes @ 0x0
  3359                           
  3360  0070                     ?_I2C1_Close:	
  3361                           ; 1 bytes @ 0x0
  3362                           
  3363  0070                     ?_TMR1_DefaultInterruptHandler:	
  3364                           ; 1 bytes @ 0x0
  3365                           
  3366  0070                     ?_I2C1_DO_IDLE:	
  3367                           ; 1 bytes @ 0x0
  3368                           
  3369  0070                     ??_I2C1_DO_IDLE:	
  3370                           ; 1 bytes @ 0x0
  3371                           
  3372  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  3373                           ; 1 bytes @ 0x0
  3374                           
  3375  0070                     ??_I2C1_DO_SEND_ADR_READ:	
  3376                           ; 1 bytes @ 0x0
  3377                           
  3378  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  3379                           ; 1 bytes @ 0x0
  3380                           
  3381  0070                     ?_I2C1_DO_TX:	
  3382                           ; 1 bytes @ 0x0
  3383                           
  3384  0070                     ?_I2C1_DO_RX:	
  3385                           ; 1 bytes @ 0x0
  3386                           
  3387  0070                     ?_I2C1_DO_RCEN:	
  3388                           ; 1 bytes @ 0x0
  3389                           
  3390  0070                     ??_I2C1_DO_RCEN:	
  3391                           ; 1 bytes @ 0x0
  3392                           
  3393  0070                     ?_I2C1_DO_TX_EMPTY:	
  3394                           ; 1 bytes @ 0x0
  3395                           
  3396  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  3397                           ; 1 bytes @ 0x0
  3398                           
  3399  0070                     ??_I2C1_DO_SEND_RESTART_READ:	
  3400                           ; 1 bytes @ 0x0
  3401                           
  3402  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  3403                           ; 1 bytes @ 0x0
  3404                           
  3405  0070                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  3406                           ; 1 bytes @ 0x0
  3407                           
  3408  0070                     ?_I2C1_DO_SEND_RESTART:	
  3409                           ; 1 bytes @ 0x0
  3410                           
  3411  0070                     ??_I2C1_DO_SEND_RESTART:	
  3412                           ; 1 bytes @ 0x0
  3413                           
  3414  0070                     ?_I2C1_DO_SEND_STOP:	
  3415                           ; 1 bytes @ 0x0
  3416                           
  3417  0070                     ??_I2C1_DO_SEND_STOP:	
  3418                           ; 1 bytes @ 0x0
  3419                           
  3420  0070                     ?_I2C1_DO_RX_ACK:	
  3421                           ; 1 bytes @ 0x0
  3422                           
  3423  0070                     ??_I2C1_DO_RX_ACK:	
  3424                           ; 1 bytes @ 0x0
  3425                           
  3426  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  3427                           ; 1 bytes @ 0x0
  3428                           
  3429  0070                     ??_I2C1_DO_RX_NACK_STOP:	
  3430                           ; 1 bytes @ 0x0
  3431                           
  3432  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  3433                           ; 1 bytes @ 0x0
  3434                           
  3435  0070                     ??_I2C1_DO_RX_NACK_RESTART:	
  3436                           ; 1 bytes @ 0x0
  3437                           
  3438  0070                     ?_I2C1_DO_RESET:	
  3439                           ; 1 bytes @ 0x0
  3440                           
  3441  0070                     ??_I2C1_DO_RESET:	
  3442                           ; 1 bytes @ 0x0
  3443                           
  3444  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  3445                           ; 1 bytes @ 0x0
  3446                           
  3447  0070                     ?_I2C1_MasterIsr:	
  3448                           ; 1 bytes @ 0x0
  3449                           
  3450  0070                     ?_I2C1_MasterClearIrq:	
  3451                           ; 1 bytes @ 0x0
  3452                           
  3453  0070                     ?_I2C1_MasterOpen:	
  3454                           ; 1 bytes @ 0x0
  3455                           
  3456  0070                     ?_I2C1_MasterEnableIrq:	
  3457                           ; 1 bytes @ 0x0
  3458                           
  3459  0070                     ?_I2C1_MasterDisableIrq:	
  3460                           ; 1 bytes @ 0x0
  3461                           
  3462  0070                     ?_I2C1_MasterClose:	
  3463                           ; 1 bytes @ 0x0
  3464                           
  3465  0070                     ?_I2C1_MasterStart:	
  3466                           ; 1 bytes @ 0x0
  3467                           
  3468  0070                     ?_I2C1_MasterFsm:	
  3469                           ; 1 bytes @ 0x0
  3470                           
  3471  0070                     ?_I2C1_MasterIsNack:	
  3472                           ; 1 bytes @ 0x0
  3473                           
  3474  0070                     ??_I2C1_MasterIsNack:	
  3475                           ; 1 bytes @ 0x0
  3476                           
  3477  0070                     ?_I2C1_MasterSendTxData:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  0070                     ??_I2C1_MasterSendTxData:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  0070                     ?_I2C1_MasterGetRxData:	
  3484                           ; 1 bytes @ 0x0
  3485                           
  3486  0070                     ??_I2C1_MasterGetRxData:	
  3487                           ; 1 bytes @ 0x0
  3488                           
  3489  0070                     ?_I2C1_MasterSendAck:	
  3490                           ; 1 bytes @ 0x0
  3491                           
  3492  0070                     ??_I2C1_MasterSendAck:	
  3493                           ; 1 bytes @ 0x0
  3494                           
  3495  0070                     ?_I2C1_MasterStartRx:	
  3496                           ; 1 bytes @ 0x0
  3497                           
  3498  0070                     ??_I2C1_MasterStartRx:	
  3499                           ; 1 bytes @ 0x0
  3500                           
  3501  0070                     ?_I2C1_MasterSetIrq:	
  3502                           ; 1 bytes @ 0x0
  3503                           
  3504  0070                     ??_I2C1_MasterSetIrq:	
  3505                           ; 1 bytes @ 0x0
  3506                           
  3507  0070                     ?_I2C1_MasterEnableRestart:	
  3508                           ; 1 bytes @ 0x0
  3509                           
  3510  0070                     ??_I2C1_MasterEnableRestart:	
  3511                           ; 1 bytes @ 0x0
  3512                           
  3513  0070                     ?_I2C1_MasterStop:	
  3514                           ; 1 bytes @ 0x0
  3515                           
  3516  0070                     ??_I2C1_MasterStop:	
  3517                           ; 1 bytes @ 0x0
  3518                           
  3519  0070                     ?_I2C1_MasterSendNack:	
  3520                           ; 1 bytes @ 0x0
  3521                           
  3522  0070                     ??_I2C1_MasterSendNack:	
  3523                           ; 1 bytes @ 0x0
  3524                           
  3525  0070                     ?_PIN_MANAGER_Initialize:	
  3526                           ; 1 bytes @ 0x0
  3527                           
  3528  0070                     ?_OSCILLATOR_Initialize:	
  3529                           ; 1 bytes @ 0x0
  3530                           
  3531  0070                     ?_WDT_Initialize:	
  3532                           ; 1 bytes @ 0x0
  3533                           
  3534  0070                     ?_lcd_disp_param:	
  3535                           ; 1 bytes @ 0x0
  3536                           
  3537  0070                     ?_putch:	
  3538                           ; 1 bytes @ 0x0
  3539                           
  3540  0070                     ?_i2c_lcd_send_command:	
  3541                           ; 1 bytes @ 0x0
  3542                           
  3543  0070                     ?_i2c_lcd_send_upper4bit:	
  3544                           ; 1 bytes @ 0x0
  3545                           
  3546  0070                     ?_i2c_lcd_send_data:	
  3547                           ; 1 bytes @ 0x0
  3548                           
  3549  0070                     ?_i2c_lcd_init:	
  3550                           ; 1 bytes @ 0x0
  3551                           
  3552  0070                     ?_i2c_lcd_clear:	
  3553                           ; 1 bytes @ 0x0
  3554                           
  3555  0070                     ?_i2c_lcd_home:	
  3556                           ; 1 bytes @ 0x0
  3557                           
  3558  0070                     ?_i2c_lcd_ulcursor_off:	
  3559                           ; 1 bytes @ 0x0
  3560                           
  3561  0070                     ?_TMR1_Initialize:	
  3562                           ; 1 bytes @ 0x0
  3563                           
  3564  0070                     ?_TMR1_StartTimer:	
  3565                           ; 1 bytes @ 0x0
  3566                           
  3567  0070                     ?_TMR1_WriteTimer:	
  3568                           ; 1 bytes @ 0x0
  3569                           
  3570  0070                     ?_get7seg_font:	
  3571                           ; 1 bytes @ 0x0
  3572                           
  3573  0070                     ??_get7seg_font:	
  3574                           ; 1 bytes @ 0x0
  3575                           
  3576  0070                     ?_read_clickRE:	
  3577                           ; 1 bytes @ 0x0
  3578                           
  3579  0070                     ??_read_clickRE:	
  3580                           ; 1 bytes @ 0x0
  3581                           
  3582  0070                     ?_TMR1_ISR:	
  3583                           ; 1 bytes @ 0x0
  3584                           
  3585  0070                     ?_I2C1_Initialize:	
  3586                           ; 1 bytes @ 0x0
  3587                           
  3588  0070                     ?_I2C1_MasterOperation:	
  3589                           ; 1 bytes @ 0x0
  3590                           
  3591  0070                     ?_INTERRUPT_InterruptManager:	
  3592                           ; 1 bytes @ 0x0
  3593                           
  3594  0070                     ?_SYSTEM_Initialize:	
  3595                           ; 1 bytes @ 0x0
  3596                           
  3597  0070                     ?_DATAEE_ReadByte:	
  3598                           ; 1 bytes @ 0x0
  3599                           
  3600  0070                     ?_set_gainstr:	
  3601                           ; 1 bytes @ 0x0
  3602                           
  3603  0070                     ?_init_pcm9211:	
  3604                           ; 1 bytes @ 0x0
  3605                           
  3606  0070                     ?_init_tas6422:	
  3607                           ; 1 bytes @ 0x0
  3608                           
  3609  0070                     ?_chk6422warning:	
  3610                           ; 1 bytes @ 0x0
  3611                           
  3612  0070                     ?_set_source:	
  3613                           ; 1 bytes @ 0x0
  3614                           
  3615  0070                     ?_main:	
  3616                           ; 1 bytes @ 0x0
  3617                           
  3618  0070                     ?i1_I2C1_SetBuffer:	
  3619                           ; 1 bytes @ 0x0
  3620                           
  3621  0070                     ?i1_I2C1_SetCallback:	
  3622                           ; 1 bytes @ 0x0
  3623                           
  3624  0070                     ?i1_I2C1_MasterClearIrq:	
  3625                           ; 1 bytes @ 0x0
  3626                           
  3627  0070                     ??i1_I2C1_MasterClearIrq:	
  3628                           ; 1 bytes @ 0x0
  3629                           
  3630  0070                     I2C1_MasterSendTxData@data:	
  3631                           ; 1 bytes @ 0x0
  3632                           
  3633  0070                     putch@c:	
  3634                           ; 1 bytes @ 0x0
  3635                           
  3636  0070                     TMR1_WriteTimer@timerVal:	
  3637                           ; 1 bytes @ 0x0
  3638                           
  3639  0070                     i1I2C1_SetBuffer@buffer:	
  3640                           ; 2 bytes @ 0x0
  3641                           
  3642  0070                     i1I2C1_SetCallback@cb:	
  3643                           ; 2 bytes @ 0x0
  3644                           
  3645                           
  3646                           ; 2 bytes @ 0x0
  3647  0070                     	ds	1
  3648  0071                     ??_I2C1_DO_SEND_ADR_WRITE:
  3649  0071                     get7seg_font@fontdata:	
  3650                           ; 1 bytes @ 0x1
  3651                           
  3652                           
  3653                           ; 1 bytes @ 0x1
  3654  0071                     	ds	1
  3655  0072                     ??_TMR1_WriteTimer:
  3656  0072                     get7seg_font@cdata:	
  3657                           ; 1 bytes @ 0x2
  3658                           
  3659  0072                     i1I2C1_SetCallback@ptr:	
  3660                           ; 1 bytes @ 0x2
  3661                           
  3662  0072                     _read_clickRE$509:	
  3663                           ; 1 bytes @ 0x2
  3664                           
  3665  0072                     i1I2C1_SetBuffer@bufferSize:	
  3666                           ; 2 bytes @ 0x2
  3667                           
  3668                           
  3669                           ; 2 bytes @ 0x2
  3670  0072                     	ds	1
  3671  0073                     ??i1_I2C1_SetCallback:
  3672                           
  3673                           ; 1 bytes @ 0x3
  3674  0073                     	ds	1
  3675  0074                     ??i1_I2C1_SetBuffer:
  3676  0074                     read_clickRE@current:	
  3677                           ; 1 bytes @ 0x4
  3678                           
  3679  0074                     i1I2C1_SetCallback@idx:	
  3680                           ; 1 bytes @ 0x4
  3681                           
  3682                           
  3683                           ; 1 bytes @ 0x4
  3684  0074                     	ds	1
  3685  0075                     ??_TMR1_DefaultInterruptHandler:
  3686  0075                     ?i1_I2C1_SetDataCompleteCallback:	
  3687                           ; 1 bytes @ 0x5
  3688                           
  3689  0075                     i1I2C1_SetDataCompleteCallback@cb:	
  3690                           ; 1 bytes @ 0x5
  3691                           
  3692                           
  3693                           ; 2 bytes @ 0x5
  3694  0075                     	ds	2
  3695  0077                     ??_TMR1_ISR:
  3696  0077                     i1I2C1_SetDataCompleteCallback@ptr:	
  3697                           ; 1 bytes @ 0x7
  3698                           
  3699                           
  3700                           ; 1 bytes @ 0x7
  3701  0077                     	ds	1
  3702  0078                     ??i1_I2C1_SetDataCompleteCallback:
  3703                           
  3704                           ; 1 bytes @ 0x8
  3705  0078                     	ds	1
  3706  0079                     ?_rd1RegCompleteHandler:
  3707  0079                     ?_rd2RegCompleteHandler:	
  3708                           ; 1 bytes @ 0x9
  3709                           
  3710  0079                     ?_wr1RegCompleteHandler:	
  3711                           ; 1 bytes @ 0x9
  3712                           
  3713  0079                     ?_wr2RegCompleteHandler:	
  3714                           ; 1 bytes @ 0x9
  3715                           
  3716  0079                     ?_rdBlkRegCompleteHandler:	
  3717                           ; 1 bytes @ 0x9
  3718                           
  3719  0079                     ?_I2C1_CallbackReturnStop:	
  3720                           ; 1 bytes @ 0x9
  3721                           
  3722  0079                     ?_I2C1_CallbackReturnReset:	
  3723                           ; 1 bytes @ 0x9
  3724                           
  3725  0079                     ?_wr1RegCompleteHandler@islower$F2502:	
  3726                           ; 1 bytes @ 0x9
  3727                           
  3728  0079                     ?_rd1RegCompleteHandler@islower$F2510:	
  3729                           ; 1 bytes @ 0x9
  3730                           
  3731  0079                     ?_rd2RegCompleteHandler@islower$F2515:	
  3732                           ; 1 bytes @ 0x9
  3733                           
  3734  0079                     ?_wr2RegCompleteHandler@islower$F2521:	
  3735                           ; 1 bytes @ 0x9
  3736                           
  3737  0079                     ?_rdBlkRegCompleteHandler@islower$F2527:	
  3738                           ; 1 bytes @ 0x9
  3739                           
  3740  0079                     wr1RegCompleteHandler@p:	
  3741                           ; 1 bytes @ 0x9
  3742                           
  3743  0079                     rd1RegCompleteHandler@p:	
  3744                           ; 1 bytes @ 0x9
  3745                           
  3746  0079                     rd2RegCompleteHandler@p:	
  3747                           ; 1 bytes @ 0x9
  3748                           
  3749  0079                     wr2RegCompleteHandler@p:	
  3750                           ; 1 bytes @ 0x9
  3751                           
  3752  0079                     rdBlkRegCompleteHandler@p:	
  3753                           ; 1 bytes @ 0x9
  3754                           
  3755  0079                     rd1RegCompleteHandler@i2c1_master_example$F195@ptr:	
  3756                           ; 1 bytes @ 0x9
  3757                           
  3758  0079                     rd2RegCompleteHandler@i2c1_master_example$F206@ptr:	
  3759                           ; 1 bytes @ 0x9
  3760                           
  3761  0079                     wr1RegCompleteHandler@i2c1_master_example$F212@ptr:	
  3762                           ; 1 bytes @ 0x9
  3763                           
  3764  0079                     wr2RegCompleteHandler@i2c1_master_example$F218@ptr:	
  3765                           ; 1 bytes @ 0x9
  3766                           
  3767  0079                     rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr:	
  3768                           ; 1 bytes @ 0x9
  3769                           
  3770  0079                     I2C1_CallbackReturnStop@funPtr:	
  3771                           ; 1 bytes @ 0x9
  3772                           
  3773  0079                     I2C1_CallbackReturnReset@funPtr:	
  3774                           ; 1 bytes @ 0x9
  3775                           
  3776                           
  3777                           ; 1 bytes @ 0x9
  3778  0079                     	ds	1
  3779  007A                     ??_rd1RegCompleteHandler:
  3780  007A                     ??_rd2RegCompleteHandler:	
  3781                           ; 1 bytes @ 0xA
  3782                           
  3783  007A                     ??_wr1RegCompleteHandler:	
  3784                           ; 1 bytes @ 0xA
  3785                           
  3786  007A                     ??_wr2RegCompleteHandler:	
  3787                           ; 1 bytes @ 0xA
  3788                           
  3789  007A                     ??_rdBlkRegCompleteHandler:	
  3790                           ; 1 bytes @ 0xA
  3791                           
  3792  007A                     ??_I2C1_DO_TX:	
  3793                           ; 1 bytes @ 0xA
  3794                           
  3795  007A                     ??_I2C1_DO_RX:	
  3796                           ; 1 bytes @ 0xA
  3797                           
  3798  007A                     ??_I2C1_DO_TX_EMPTY:	
  3799                           ; 1 bytes @ 0xA
  3800                           
  3801  007A                     ??_I2C1_DO_ADDRESS_NACK:	
  3802                           ; 1 bytes @ 0xA
  3803                           
  3804  007A                     ??_I2C1_CallbackReturnStop:	
  3805                           ; 1 bytes @ 0xA
  3806                           
  3807  007A                     ??_I2C1_CallbackReturnReset:	
  3808                           ; 1 bytes @ 0xA
  3809                           
  3810  007A                     ??_wr1RegCompleteHandler@islower$F2504:	
  3811                           ; 1 bytes @ 0xA
  3812                           
  3813  007A                     ??_rd1RegCompleteHandler@islower$F2512:	
  3814                           ; 1 bytes @ 0xA
  3815                           
  3816  007A                     ??_rd2RegCompleteHandler@islower$F2517:	
  3817                           ; 1 bytes @ 0xA
  3818                           
  3819  007A                     ??_wr2RegCompleteHandler@islower$F2523:	
  3820                           ; 1 bytes @ 0xA
  3821                           
  3822  007A                     ??_rdBlkRegCompleteHandler@islower$F2529:	
  3823                           ; 1 bytes @ 0xA
  3824                           
  3825                           
  3826                           ; 1 bytes @ 0xA
  3827  007A                     	ds	3
  3828  007D                     ??_I2C1_MasterIsr:
  3829  007D                     ??_INTERRUPT_InterruptManager:	
  3830                           ; 1 bytes @ 0xD
  3831                           
  3832                           
  3833                           	psect	cstackBANK0
  3834  0020                     __pcstackBANK0:	
  3835                           ; 1 bytes @ 0xD
  3836                           
  3837  0020                     ??_I2C1_MasterFsm:
  3838                           
  3839                           ; 1 bytes @ 0x0
  3840  0020                     	ds	3
  3841  0023                     ?_I2C1_SetBuffer:
  3842  0023                     ??_I2C1_Close:	
  3843                           ; 1 bytes @ 0x3
  3844                           
  3845  0023                     ?_TMR1_SetInterruptHandler:	
  3846                           ; 1 bytes @ 0x3
  3847                           
  3848  0023                     ?_I2C1_SetInterruptHandler:	
  3849                           ; 1 bytes @ 0x3
  3850                           
  3851  0023                     ??_I2C1_MasterClearIrq:	
  3852                           ; 1 bytes @ 0x3
  3853                           
  3854  0023                     ??_I2C1_MasterOpen:	
  3855                           ; 1 bytes @ 0x3
  3856                           
  3857  0023                     ??_I2C1_MasterEnableIrq:	
  3858                           ; 1 bytes @ 0x3
  3859                           
  3860  0023                     ??_I2C1_MasterDisableIrq:	
  3861                           ; 1 bytes @ 0x3
  3862                           
  3863  0023                     ??_I2C1_MasterClose:	
  3864                           ; 1 bytes @ 0x3
  3865                           
  3866  0023                     ??_I2C1_MasterStart:	
  3867                           ; 1 bytes @ 0x3
  3868                           
  3869  0023                     ?_I2C1_SetCallback:	
  3870                           ; 1 bytes @ 0x3
  3871                           
  3872  0023                     ??_PIN_MANAGER_Initialize:	
  3873                           ; 1 bytes @ 0x3
  3874                           
  3875  0023                     ??_OSCILLATOR_Initialize:	
  3876                           ; 1 bytes @ 0x3
  3877                           
  3878  0023                     ??_WDT_Initialize:	
  3879                           ; 1 bytes @ 0x3
  3880                           
  3881  0023                     ??_putch:	
  3882                           ; 1 bytes @ 0x3
  3883                           
  3884  0023                     ??_TMR1_StartTimer:	
  3885                           ; 1 bytes @ 0x3
  3886                           
  3887  0023                     ??_I2C1_Initialize:	
  3888                           ; 1 bytes @ 0x3
  3889                           
  3890  0023                     ??_I2C1_MasterOperation:	
  3891                           ; 1 bytes @ 0x3
  3892                           
  3893  0023                     ?_DELAY_milliseconds:	
  3894                           ; 1 bytes @ 0x3
  3895                           
  3896  0023                     ??_DATAEE_ReadByte:	
  3897                           ; 1 bytes @ 0x3
  3898                           
  3899  0023                     ?___lbmod:	
  3900                           ; 1 bytes @ 0x3
  3901                           
  3902  0023                     ?_fputc:	
  3903                           ; 1 bytes @ 0x3
  3904                           
  3905  0023                     ?_strlen:	
  3906                           ; 2 bytes @ 0x3
  3907                           
  3908  0023                     ?_isupper:	
  3909                           ; 2 bytes @ 0x3
  3910                           
  3911  0023                     ?_isalpha:	
  3912                           ; 2 bytes @ 0x3
  3913                           
  3914  0023                     ?_isdigit:	
  3915                           ; 2 bytes @ 0x3
  3916                           
  3917  0023                     ?_isspace:	
  3918                           ; 2 bytes @ 0x3
  3919                           
  3920  0023                     ?_islower:	
  3921                           ; 2 bytes @ 0x3
  3922                           
  3923  0023                     ?___awdiv:	
  3924                           ; 2 bytes @ 0x3
  3925                           
  3926  0023                     ?___aodiv:	
  3927                           ; 2 bytes @ 0x3
  3928                           
  3929  0023                     ?___aomod:	
  3930                           ; 8 bytes @ 0x3
  3931                           
  3932  0023                     DATAEE_ReadByte@bAdd:	
  3933                           ; 8 bytes @ 0x3
  3934                           
  3935  0023                     ___lbmod@divisor:	
  3936                           ; 1 bytes @ 0x3
  3937                           
  3938  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
  3939                           ; 1 bytes @ 0x3
  3940                           
  3941  0023                     I2C1_SetBuffer@buffer:	
  3942                           ; 2 bytes @ 0x3
  3943                           
  3944  0023                     I2C1_SetInterruptHandler@InterruptHandler:	
  3945                           ; 2 bytes @ 0x3
  3946                           
  3947  0023                     I2C1_SetCallback@cb:	
  3948                           ; 2 bytes @ 0x3
  3949                           
  3950  0023                     DELAY_milliseconds@milliseconds:	
  3951                           ; 2 bytes @ 0x3
  3952                           
  3953  0023                     ___awdiv@divisor:	
  3954                           ; 2 bytes @ 0x3
  3955                           
  3956  0023                     isalpha@c:	
  3957                           ; 2 bytes @ 0x3
  3958                           
  3959  0023                     isdigit@c:	
  3960                           ; 2 bytes @ 0x3
  3961                           
  3962  0023                     isspace@c:	
  3963                           ; 2 bytes @ 0x3
  3964                           
  3965  0023                     isupper@c:	
  3966                           ; 2 bytes @ 0x3
  3967                           
  3968  0023                     fputc@c:	
  3969                           ; 2 bytes @ 0x3
  3970                           
  3971  0023                     strlen@s:	
  3972                           ; 2 bytes @ 0x3
  3973                           
  3974  0023                     islower@c:	
  3975                           ; 2 bytes @ 0x3
  3976                           
  3977  0023                     ___aodiv@divisor:	
  3978                           ; 2 bytes @ 0x3
  3979                           
  3980  0023                     ___aomod@divisor:	
  3981                           ; 8 bytes @ 0x3
  3982                           
  3983                           
  3984                           ; 8 bytes @ 0x3
  3985  0023                     	ds	1
  3986  0024                     ??___lbmod:
  3987  0024                     I2C1_Close@returnValue:	
  3988                           ; 1 bytes @ 0x4
  3989                           
  3990  0024                     I2C1_MasterOperation@read:	
  3991                           ; 1 bytes @ 0x4
  3992                           
  3993                           
  3994                           ; 1 bytes @ 0x4
  3995  0024                     	ds	1
  3996  0025                     ??_I2C1_Open:
  3997  0025                     ??_TMR1_SetInterruptHandler:	
  3998                           ; 1 bytes @ 0x5
  3999                           
  4000  0025                     ??_I2C1_SetInterruptHandler:	
  4001                           ; 1 bytes @ 0x5
  4002                           
  4003  0025                     ??_strlen:	
  4004                           ; 1 bytes @ 0x5
  4005                           
  4006  0025                     ??_isupper:	
  4007                           ; 1 bytes @ 0x5
  4008                           
  4009  0025                     ??_isalpha:	
  4010                           ; 1 bytes @ 0x5
  4011                           
  4012  0025                     ??_isdigit:	
  4013                           ; 1 bytes @ 0x5
  4014                           
  4015  0025                     ??_isspace:	
  4016                           ; 1 bytes @ 0x5
  4017                           
  4018  0025                     ??_islower:	
  4019                           ; 1 bytes @ 0x5
  4020                           
  4021  0025                     ??_TMR1_Initialize:	
  4022                           ; 1 bytes @ 0x5
  4023                           
  4024  0025                     ??_DELAY_milliseconds:	
  4025                           ; 1 bytes @ 0x5
  4026                           
  4027  0025                     ??_SYSTEM_Initialize:	
  4028                           ; 1 bytes @ 0x5
  4029                           
  4030  0025                     I2C1_MasterOperation@returnValue:	
  4031                           ; 1 bytes @ 0x5
  4032                           
  4033  0025                     I2C1_SetCallback@ptr:	
  4034                           ; 1 bytes @ 0x5
  4035                           
  4036  0025                     fputc@fp:	
  4037                           ; 1 bytes @ 0x5
  4038                           
  4039  0025                     I2C1_SetBuffer@bufferSize:	
  4040                           ; 1 bytes @ 0x5
  4041                           
  4042  0025                     ___awdiv@dividend:	
  4043                           ; 2 bytes @ 0x5
  4044                           
  4045                           
  4046                           ; 2 bytes @ 0x5
  4047  0025                     	ds	1
  4048  0026                     ??_I2C1_MasterWrite:
  4049  0026                     ??_I2C1_SetCallback:	
  4050                           ; 1 bytes @ 0x6
  4051                           
  4052  0026                     ??_fputc:	
  4053                           ; 1 bytes @ 0x6
  4054                           
  4055  0026                     I2C1_Open@address:	
  4056                           ; 1 bytes @ 0x6
  4057                           
  4058  0026                     ___lbmod@dividend:	
  4059                           ; 1 bytes @ 0x6
  4060                           
  4061  0026                     strlen@a:	
  4062                           ; 1 bytes @ 0x6
  4063                           
  4064                           
  4065                           ; 2 bytes @ 0x6
  4066  0026                     	ds	1
  4067  0027                     ??_I2C1_SetBuffer:
  4068  0027                     ??___awdiv:	
  4069                           ; 1 bytes @ 0x7
  4070                           
  4071  0027                     I2C1_Open@returnValue:	
  4072                           ; 1 bytes @ 0x7
  4073                           
  4074  0027                     I2C1_SetCallback@idx:	
  4075                           ; 1 bytes @ 0x7
  4076                           
  4077  0027                     ___lbmod@counter:	
  4078                           ; 1 bytes @ 0x7
  4079                           
  4080  0027                     _isspace$2394:	
  4081                           ; 1 bytes @ 0x7
  4082                           
  4083                           
  4084                           ; 1 bytes @ 0x7
  4085  0027                     	ds	1
  4086  0028                     ?_I2C1_SetDataCompleteCallback:
  4087  0028                     ?_I2C1_SetAddressNackCallback:	
  4088                           ; 1 bytes @ 0x8
  4089                           
  4090  0028                     ___awdiv@counter:	
  4091                           ; 1 bytes @ 0x8
  4092                           
  4093  0028                     ___lbmod@rem:	
  4094                           ; 1 bytes @ 0x8
  4095                           
  4096  0028                     I2C1_SetDataCompleteCallback@cb:	
  4097                           ; 1 bytes @ 0x8
  4098                           
  4099  0028                     I2C1_SetAddressNackCallback@cb:	
  4100                           ; 2 bytes @ 0x8
  4101                           
  4102                           
  4103                           ; 2 bytes @ 0x8
  4104  0028                     	ds	1
  4105  0029                     ?_DATAEE_WriteByte:
  4106  0029                     ?_toupper:	
  4107                           ; 1 bytes @ 0x9
  4108                           
  4109  0029                     ?___wmul:	
  4110                           ; 2 bytes @ 0x9
  4111                           
  4112  0029                     DATAEE_WriteByte@bData:	
  4113                           ; 2 bytes @ 0x9
  4114                           
  4115  0029                     ___awdiv@sign:	
  4116                           ; 1 bytes @ 0x9
  4117                           
  4118  0029                     ___wmul@multiplier:	
  4119                           ; 1 bytes @ 0x9
  4120                           
  4121  0029                     toupper@c:	
  4122                           ; 2 bytes @ 0x9
  4123                           
  4124                           
  4125                           ; 2 bytes @ 0x9
  4126  0029                     	ds	1
  4127  002A                     ??_DATAEE_WriteByte:
  4128  002A                     I2C1_SetDataCompleteCallback@ptr:	
  4129                           ; 1 bytes @ 0xA
  4130                           
  4131  002A                     I2C1_SetAddressNackCallback@ptr:	
  4132                           ; 1 bytes @ 0xA
  4133                           
  4134  002A                     DATAEE_WriteByte@bAdd:	
  4135                           ; 1 bytes @ 0xA
  4136                           
  4137  002A                     ___awdiv@quotient:	
  4138                           ; 1 bytes @ 0xA
  4139                           
  4140                           
  4141                           ; 2 bytes @ 0xA
  4142  002A                     	ds	1
  4143  002B                     ??_I2C1_SetDataCompleteCallback:
  4144  002B                     ??_I2C1_SetAddressNackCallback:	
  4145                           ; 1 bytes @ 0xB
  4146                           
  4147  002B                     ??_toupper:	
  4148                           ; 1 bytes @ 0xB
  4149                           
  4150  002B                     ?_fputs:	
  4151                           ; 1 bytes @ 0xB
  4152                           
  4153  002B                     ?_stoa:	
  4154                           ; 2 bytes @ 0xB
  4155                           
  4156  002B                     DATAEE_WriteByte@GIEBitValue:	
  4157                           ; 2 bytes @ 0xB
  4158                           
  4159  002B                     fputs@fp:	
  4160                           ; 1 bytes @ 0xB
  4161                           
  4162  002B                     ___wmul@multiplicand:	
  4163                           ; 1 bytes @ 0xB
  4164                           
  4165  002B                     stoa@s:	
  4166                           ; 2 bytes @ 0xB
  4167                           
  4168  002B                     ___aodiv@dividend:	
  4169                           ; 2 bytes @ 0xB
  4170                           
  4171  002B                     ___aomod@dividend:	
  4172                           ; 8 bytes @ 0xB
  4173                           
  4174                           
  4175                           ; 8 bytes @ 0xB
  4176  002B                     	ds	1
  4177  002C                     ?_I2C1_WriteNBytes:
  4178  002C                     ??_fputs:	
  4179                           ; 1 bytes @ 0xC
  4180                           
  4181  002C                     ?_i2c_writeNBytes:	
  4182                           ; 1 bytes @ 0xC
  4183                           
  4184  002C                     ?_i2c_read1ByteRegister:	
  4185                           ; 1 bytes @ 0xC
  4186                           
  4187  002C                     i2c_writeNBytes@data:	
  4188                           ; 1 bytes @ 0xC
  4189                           
  4190  002C                     i2c_read1ByteRegister@reg:	
  4191                           ; 1 bytes @ 0xC
  4192                           
  4193  002C                     I2C1_WriteNBytes@data:	
  4194                           ; 1 bytes @ 0xC
  4195                           
  4196                           
  4197                           ; 1 bytes @ 0xC
  4198  002C                     	ds	1
  4199  002D                     ??_i2c_read1ByteRegister:
  4200  002D                     ??___wmul:	
  4201                           ; 1 bytes @ 0xD
  4202                           
  4203  002D                     ??_stoa:	
  4204                           ; 1 bytes @ 0xD
  4205                           
  4206  002D                     i2c_writeNBytes@len:	
  4207                           ; 1 bytes @ 0xD
  4208                           
  4209  002D                     I2C1_WriteNBytes@len:	
  4210                           ; 2 bytes @ 0xD
  4211                           
  4212  002D                     ___wmul@product:	
  4213                           ; 2 bytes @ 0xD
  4214                           
  4215                           
  4216                           ; 2 bytes @ 0xD
  4217  002D                     	ds	1
  4218  002E                     i2c_read1ByteRegister@address:
  4219                           
  4220                           ; 1 bytes @ 0xE
  4221  002E                     	ds	1
  4222  002F                     ??_I2C1_WriteNBytes:
  4223  002F                     ??_i2c_writeNBytes:	
  4224                           ; 1 bytes @ 0xF
  4225                           
  4226  002F                     ?_puts_led:	
  4227                           ; 1 bytes @ 0xF
  4228                           
  4229  002F                     ?_strcpy:	
  4230                           ; 1 bytes @ 0xF
  4231                           
  4232  002F                     ?_atoi:	
  4233                           ; 2 bytes @ 0xF
  4234                           
  4235  002F                     i2c_writeNBytes@address:	
  4236                           ; 2 bytes @ 0xF
  4237                           
  4238  002F                     i2c_read1ByteRegister@e:	
  4239                           ; 1 bytes @ 0xF
  4240                           
  4241  002F                     I2C1_WriteNBytes@address:	
  4242                           ; 1 bytes @ 0xF
  4243                           
  4244  002F                     fputs@c:	
  4245                           ; 1 bytes @ 0xF
  4246                           
  4247  002F                     puts_led@str:	
  4248                           ; 1 bytes @ 0xF
  4249                           
  4250  002F                     atoi@s:	
  4251                           ; 2 bytes @ 0xF
  4252                           
  4253  002F                     strcpy@dest:	
  4254                           ; 2 bytes @ 0xF
  4255                           
  4256  002F                     _toupper$2462:	
  4257                           ; 2 bytes @ 0xF
  4258                           
  4259                           
  4260                           ; 2 bytes @ 0xF
  4261  002F                     	ds	1
  4262  0030                     ??_i2c_lcd_send_command:
  4263  0030                     ??_i2c_lcd_send_upper4bit:	
  4264                           ; 1 bytes @ 0x10
  4265                           
  4266  0030                     ??_i2c_lcd_send_data:	
  4267                           ; 1 bytes @ 0x10
  4268                           
  4269  0030                     ??_init_pcm9211:	
  4270                           ; 1 bytes @ 0x10
  4271                           
  4272  0030                     ??_init_tas6422:	
  4273                           ; 1 bytes @ 0x10
  4274                           
  4275  0030                     ??_set_source:	
  4276                           ; 1 bytes @ 0x10
  4277                           
  4278  0030                     i2c_read1ByteRegister@x:	
  4279                           ; 1 bytes @ 0x10
  4280                           
  4281  0030                     fputs@i:	
  4282                           ; 2 bytes @ 0x10
  4283                           
  4284  0030                     stoa@nuls:	
  4285                           ; 2 bytes @ 0x10
  4286                           
  4287                           
  4288                           ; 7 bytes @ 0x10
  4289  0030                     	ds	1
  4290  0031                     ??_atoi:
  4291  0031                     ??_puts_led:	
  4292                           ; 1 bytes @ 0x11
  4293                           
  4294  0031                     i2c_lcd_send_upper4bit@data:	
  4295                           ; 1 bytes @ 0x11
  4296                           
  4297  0031                     strcpy@src:	
  4298                           ; 1 bytes @ 0x11
  4299                           
  4300                           
  4301                           ; 2 bytes @ 0x11
  4302  0031                     	ds	1
  4303  0032                     i2c_lcd_send_command@data:
  4304  0032                     i2c_lcd_send_upper4bit@upperdata_en:	
  4305                           ; 1 bytes @ 0x12
  4306                           
  4307  0032                     i2c_lcd_send_data@data:	
  4308                           ; 1 bytes @ 0x12
  4309                           
  4310  0032                     i2c_read1ByteRegister@d2:	
  4311                           ; 1 bytes @ 0x12
  4312                           
  4313  0032                     fputs@s:	
  4314                           ; 1 bytes @ 0x12
  4315                           
  4316  0032                     puts_led@cpoint:	
  4317                           ; 1 bytes @ 0x12
  4318                           
  4319                           
  4320                           ; 2 bytes @ 0x12
  4321  0032                     	ds	1
  4322  0033                     ??_strcpy:
  4323  0033                     ??_chk6422warning:	
  4324                           ; 1 bytes @ 0x13
  4325                           
  4326  0033                     ??___aodiv:	
  4327                           ; 1 bytes @ 0x13
  4328                           
  4329  0033                     ??___aomod:	
  4330                           ; 1 bytes @ 0x13
  4331                           
  4332  0033                     ?_pad:	
  4333                           ; 1 bytes @ 0x13
  4334                           
  4335  0033                     i2c_lcd_send_command@upperdata_en:	
  4336                           ; 2 bytes @ 0x13
  4337                           
  4338  0033                     i2c_lcd_send_upper4bit@upperdata:	
  4339                           ; 1 bytes @ 0x13
  4340                           
  4341  0033                     i2c_lcd_send_data@upperdata_en:	
  4342                           ; 1 bytes @ 0x13
  4343                           
  4344  0033                     set_source@sourcenumber:	
  4345                           ; 1 bytes @ 0x13
  4346                           
  4347  0033                     pad@buf:	
  4348                           ; 1 bytes @ 0x13
  4349                           
  4350                           
  4351                           ; 1 bytes @ 0x13
  4352  0033                     	ds	1
  4353  0034                     i2c_lcd_send_command@lowerdata_en:
  4354  0034                     i2c_lcd_send_data@lowerdata_en:	
  4355                           ; 1 bytes @ 0x14
  4356                           
  4357  0034                     ___aodiv@counter:	
  4358                           ; 1 bytes @ 0x14
  4359                           
  4360  0034                     ___aomod@counter:	
  4361                           ; 1 bytes @ 0x14
  4362                           
  4363  0034                     pad@p:	
  4364                           ; 1 bytes @ 0x14
  4365                           
  4366                           
  4367                           ; 2 bytes @ 0x14
  4368  0034                     	ds	1
  4369  0035                     i2c_lcd_send_command@upperdata:
  4370  0035                     i2c_lcd_send_data@upperdata:	
  4371                           ; 1 bytes @ 0x15
  4372                           
  4373  0035                     ___aodiv@sign:	
  4374                           ; 1 bytes @ 0x15
  4375                           
  4376  0035                     ___aomod@sign:	
  4377                           ; 1 bytes @ 0x15
  4378                           
  4379  0035                     atoi@neg:	
  4380                           ; 1 bytes @ 0x15
  4381                           
  4382                           
  4383                           ; 2 bytes @ 0x15
  4384  0035                     	ds	1
  4385  0036                     ??_pad:
  4386  0036                     ?_abs:	
  4387                           ; 1 bytes @ 0x16
  4388                           
  4389  0036                     i2c_lcd_send_command@lowerdata:	
  4390                           ; 2 bytes @ 0x16
  4391                           
  4392  0036                     i2c_lcd_send_data@lowerdata:	
  4393                           ; 1 bytes @ 0x16
  4394                           
  4395  0036                     abs@a:	
  4396                           ; 1 bytes @ 0x16
  4397                           
  4398  0036                     ___aodiv@quotient:	
  4399                           ; 2 bytes @ 0x16
  4400                           
  4401                           
  4402                           ; 8 bytes @ 0x16
  4403  0036                     	ds	1
  4404  0037                     ??_i2c_lcd_init:
  4405  0037                     ?_i2c_lcd_puts:	
  4406                           ; 1 bytes @ 0x17
  4407                           
  4408  0037                     ??_i2c_lcd_clear:	
  4409                           ; 1 bytes @ 0x17
  4410                           
  4411  0037                     ??_i2c_lcd_home:	
  4412                           ; 1 bytes @ 0x17
  4413                           
  4414  0037                     ??_i2c_lcd_ulcursor_off:	
  4415                           ; 1 bytes @ 0x17
  4416                           
  4417  0037                     ?_i2c_lcd_set_cursor_pos:	
  4418                           ; 1 bytes @ 0x17
  4419                           
  4420  0037                     i2c_lcd_set_cursor_pos@line:	
  4421                           ; 1 bytes @ 0x17
  4422                           
  4423  0037                     i2c_lcd_puts@s:	
  4424                           ; 1 bytes @ 0x17
  4425                           
  4426  0037                     pad@i:	
  4427                           ; 2 bytes @ 0x17
  4428                           
  4429  0037                     stoa@i:	
  4430                           ; 2 bytes @ 0x17
  4431                           
  4432  0037                     _atoi$2367:	
  4433                           ; 2 bytes @ 0x17
  4434                           
  4435  0037                     strcpy@s:	
  4436                           ; 2 bytes @ 0x17
  4437                           
  4438                           
  4439                           ; 2 bytes @ 0x17
  4440  0037                     	ds	1
  4441  0038                     ??_abs:
  4442  0038                     ??_i2c_lcd_set_cursor_pos:	
  4443                           ; 1 bytes @ 0x18
  4444                           
  4445                           
  4446                           ; 1 bytes @ 0x18
  4447  0038                     	ds	1
  4448  0039                     ??_i2c_lcd_puts:
  4449  0039                     pad@w:	
  4450                           ; 1 bytes @ 0x19
  4451                           
  4452  0039                     stoa@w:	
  4453                           ; 2 bytes @ 0x19
  4454                           
  4455  0039                     _atoi$2369:	
  4456                           ; 2 bytes @ 0x19
  4457                           
  4458  0039                     strcpy@d:	
  4459                           ; 2 bytes @ 0x19
  4460                           
  4461                           
  4462                           ; 2 bytes @ 0x19
  4463  0039                     	ds	1
  4464  003A                     ?_set_gains:
  4465  003A                     i2c_lcd_set_cursor_pos@pos:	
  4466                           ; 1 bytes @ 0x1A
  4467                           
  4468  003A                     set_gains@bal:	
  4469                           ; 1 bytes @ 0x1A
  4470                           
  4471                           
  4472                           ; 1 bytes @ 0x1A
  4473  003A                     	ds	1
  4474  003B                     ??_set_gains:
  4475  003B                     ?_strcat:	
  4476                           ; 1 bytes @ 0x1B
  4477                           
  4478  003B                     i2c_lcd_set_cursor_pos@col:	
  4479                           ; 2 bytes @ 0x1B
  4480                           
  4481  003B                     pad@fp:	
  4482                           ; 1 bytes @ 0x1B
  4483                           
  4484  003B                     stoa@fp:	
  4485                           ; 1 bytes @ 0x1B
  4486                           
  4487  003B                     _atoi$2368:	
  4488                           ; 1 bytes @ 0x1B
  4489                           
  4490  003B                     strcat@dest:	
  4491                           ; 1 bytes @ 0x1B
  4492                           
  4493                           
  4494                           ; 2 bytes @ 0x1B
  4495  003B                     	ds	1
  4496  003C                     ?_xtoa:
  4497  003C                     set_gains@vol:	
  4498                           ; 2 bytes @ 0x1C
  4499                           
  4500  003C                     stoa@cp:	
  4501                           ; 1 bytes @ 0x1C
  4502                           
  4503  003C                     atoi@n:	
  4504                           ; 2 bytes @ 0x1C
  4505                           
  4506  003C                     xtoa@d:	
  4507                           ; 2 bytes @ 0x1C
  4508                           
  4509                           
  4510                           ; 8 bytes @ 0x1C
  4511  003C                     	ds	1
  4512  003D                     strcat@src:
  4513                           
  4514                           ; 2 bytes @ 0x1D
  4515  003D                     	ds	1
  4516  003E                     ?_dtoa:
  4517  003E                     stoa@p:	
  4518                           ; 2 bytes @ 0x1E
  4519                           
  4520  003E                     dtoa@d:	
  4521                           ; 2 bytes @ 0x1E
  4522                           
  4523                           
  4524                           ; 8 bytes @ 0x1E
  4525  003E                     	ds	1
  4526  003F                     ??_strcat:
  4527                           
  4528                           ; 1 bytes @ 0x1F
  4529  003F                     	ds	1
  4530  0040                     stoa@l:
  4531                           
  4532                           ; 2 bytes @ 0x20
  4533  0040                     	ds	4
  4534  0044                     xtoa@x:
  4535                           
  4536                           ; 1 bytes @ 0x24
  4537  0044                     	ds	1
  4538  0045                     ??_xtoa:
  4539                           
  4540                           ; 1 bytes @ 0x25
  4541  0045                     	ds	1
  4542  0046                     ??_dtoa:
  4543                           
  4544                           ; 1 bytes @ 0x26
  4545  0046                     	ds	3
  4546  0049                     dtoa@fp:
  4547                           
  4548                           ; 1 bytes @ 0x29
  4549  0049                     	ds	1
  4550  004A                     _dtoa$2311:
  4551                           
  4552                           ; 2 bytes @ 0x2A
  4553  004A                     	ds	2
  4554  004C                     dtoa@p:
  4555                           
  4556                           ; 2 bytes @ 0x2C
  4557  004C                     	ds	1
  4558  004D                     xtoa@fp:
  4559                           
  4560                           ; 1 bytes @ 0x2D
  4561  004D                     	ds	1
  4562  004E                     dtoa@w:
  4563  004E                     _xtoa$2332:	
  4564                           ; 2 bytes @ 0x2E
  4565                           
  4566                           
  4567                           ; 2 bytes @ 0x2E
  4568  004E                     	ds	2
  4569  0050                     dtoa@s:
  4570  0050                     _xtoa$2333:	
  4571                           ; 2 bytes @ 0x30
  4572                           
  4573                           
  4574                           ; 2 bytes @ 0x30
  4575  0050                     	ds	2
  4576  0052                     xtoa@p:
  4577  0052                     dtoa@n:	
  4578                           ; 2 bytes @ 0x32
  4579                           
  4580                           
  4581                           ; 8 bytes @ 0x32
  4582  0052                     	ds	2
  4583  0054                     xtoa@w:
  4584                           
  4585                           ; 2 bytes @ 0x34
  4586  0054                     	ds	2
  4587  0056                     xtoa@n:
  4588                           
  4589                           ; 8 bytes @ 0x36
  4590  0056                     	ds	4
  4591  005A                     dtoa@i:
  4592                           
  4593                           ; 2 bytes @ 0x3A
  4594  005A                     	ds	4
  4595  005E                     xtoa@i:
  4596                           
  4597                           ; 2 bytes @ 0x3E
  4598  005E                     	ds	2
  4599  0060                     xtoa@c:
  4600                           
  4601                           ; 2 bytes @ 0x40
  4602  0060                     	ds	2
  4603  0062                     ?_vfpfcnvrt:
  4604  0062                     vfpfcnvrt@fmt:	
  4605                           ; 2 bytes @ 0x42
  4606                           
  4607                           
  4608                           ; 1 bytes @ 0x42
  4609  0062                     	ds	1
  4610  0063                     vfpfcnvrt@ap:
  4611                           
  4612                           ; 1 bytes @ 0x43
  4613  0063                     	ds	1
  4614  0064                     ??_vfpfcnvrt:
  4615                           
  4616                           ; 1 bytes @ 0x44
  4617  0064                     	ds	6
  4618                           
  4619                           	psect	maintext
  4620  006F                     __pmaintext:	
  4621 ;;
  4622 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
  4623 ;;
  4624 ;; *************** function _main *****************
  4625 ;; Defined at:
  4626 ;;		line 375 in file "main.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  textlen         1    0        unsigned char 
  4631 ;;  level           1    0        unsigned char 
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      void 
  4634 ;; Registers used:
  4635 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4636 ;; Tracked objects:
  4637 ;;		On entry : B1F/0
  4638 ;;		On exit  : 1F/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Temps:          0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;Total ram usage:        7 bytes
  4646 ;; Hardware stack levels required when called:   16
  4647 ;; This function calls:
  4648 ;;		_DATAEE_ReadByte
  4649 ;;		_DATAEE_WriteByte
  4650 ;;		_DELAY_milliseconds
  4651 ;;		_SYSTEM_Initialize
  4652 ;;		_TMR1_Initialize
  4653 ;;		_TMR1_StartTimer
  4654 ;;		___lbmod
  4655 ;;		___wmul
  4656 ;;		_chk6422warning
  4657 ;;		_i2c_lcd_clear
  4658 ;;		_i2c_lcd_home
  4659 ;;		_i2c_lcd_init
  4660 ;;		_i2c_lcd_puts
  4661 ;;		_i2c_lcd_ulcursor_off
  4662 ;;		_i2c_read1ByteRegister
  4663 ;;		_i2c_writeNBytes
  4664 ;;		_init_pcm9211
  4665 ;;		_init_tas6422
  4666 ;;		_lcd_disp_param
  4667 ;;		_puts_led
  4668 ;;		_set_gains
  4669 ;;		_set_gainstr
  4670 ;;		_set_source
  4671 ;;		_sprintf
  4672 ;;		_strcpy
  4673 ;; This function is called by:
  4674 ;;		Startup code after reset
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _main
  4680  006F                     _main:
  4681                           
  4682                           ;main.c: 377:     static unsigned char count;;main.c: 378:     char level;;main.c: 379: 
      +                              unsigned char textlen;;main.c: 385:     SYSTEM_Initialize();
  4683                           
  4684                           ;incstack = 0
  4685                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4686  006F  3188  2004  3180   	fcall	_SYSTEM_Initialize
  4687                           
  4688                           ;main.c: 386:     DELAY_milliseconds(500);
  4689  0072  30F4               	movlw	244
  4690  0073  00A3               	movwf	DELAY_milliseconds@milliseconds
  4691  0074  3001               	movlw	1
  4692  0075  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  4693  0076  319B  23CF  3180   	fcall	_DELAY_milliseconds
  4694                           
  4695                           ;main.c: 388:     TMR1_Initialize();
  4696  0079  319D  25BE  3180   	fcall	_TMR1_Initialize
  4697                           
  4698                           ;main.c: 389:     TMR1_StartTimer();
  4699  007C  3180  2002  3180   	fcall	_TMR1_StartTimer
  4700                           
  4701                           ;main.c: 391:      PIE1bits.TMR1IE = 1;
  4702  007F  0021               	movlb	1	; select bank1
  4703  0080  1411               	bsf	17,0	;volatile
  4704                           
  4705                           ;main.c: 392:      INTCONbits.PEIE = 1;
  4706  0081  170B               	bsf	11,6	;volatile
  4707                           
  4708                           ;main.c: 393:      INTCONbits.GIE = 1;
  4709  0082  178B               	bsf	11,7	;volatile
  4710                           
  4711                           ;main.c: 395:      (INTCONbits.GIE = 1);
  4712  0083  178B               	bsf	11,7	;volatile
  4713                           
  4714                           ;main.c: 397:     (INTCONbits.PEIE = 1);
  4715  0084  170B               	bsf	11,6	;volatile
  4716                           
  4717                           ;main.c: 400:     DELAY_milliseconds(100);
  4718  0085  3064               	movlw	100
  4719  0086  0020               	movlb	0	; select bank0
  4720  0087  00A3               	movwf	DELAY_milliseconds@milliseconds
  4721  0088  3000               	movlw	0
  4722  0089  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  4723  008A  319B  23CF  3180   	fcall	_DELAY_milliseconds
  4724                           
  4725                           ;main.c: 403:  if(DATAEE_ReadByte(0x00 == 0xff))
  4726  008D  3000               	movlw	0
  4727  008E  319B  2377  3180   	fcall	_DATAEE_ReadByte
  4728  0091  3A00               	xorlw	0
  4729  0092  1903               	skipnz
  4730  0093  28BD               	goto	l7603
  4731                           
  4732                           ;main.c: 404:         {;main.c: 406:          DATAEE_WriteByte(0x10, current_volume=146)
      +                          ;
  4733  0094  3092               	movlw	146
  4734  0095  0020               	movlb	0	; select bank0
  4735  0096  00EC               	movwf	_current_volume
  4736  0097  0022               	movlb	2	; select bank2
  4737  0098  00E8               	movwf	??_main^(0+256)
  4738  0099  0868               	movf	??_main^(0+256),w
  4739  009A  0020               	movlb	0	; select bank0
  4740  009B  00A9               	movwf	DATAEE_WriteByte@bData
  4741  009C  3010               	movlw	16
  4742  009D  319E  266C  3180   	fcall	_DATAEE_WriteByte
  4743                           
  4744                           ;main.c: 407:          DATAEE_WriteByte(0x11, current_balance=0);
  4745  00A0  0021               	movlb	1	; select bank1
  4746  00A1  01E7               	clrf	_current_balance^(0+128)
  4747  00A2  0020               	movlb	0	; select bank0
  4748  00A3  01A9               	clrf	DATAEE_WriteByte@bData
  4749  00A4  3011               	movlw	17
  4750  00A5  319E  266C  3180   	fcall	_DATAEE_WriteByte
  4751                           
  4752                           ;main.c: 408:          DATAEE_WriteByte(0x12, current_source=2);
  4753  00A8  3002               	movlw	2
  4754  00A9  0021               	movlb	1	; select bank1
  4755  00AA  00E8               	movwf	_current_source^(0+128)
  4756  00AB  0022               	movlb	2	; select bank2
  4757  00AC  00E8               	movwf	??_main^(0+256)
  4758  00AD  0868               	movf	??_main^(0+256),w
  4759  00AE  0020               	movlb	0	; select bank0
  4760  00AF  00A9               	movwf	DATAEE_WriteByte@bData
  4761  00B0  3012               	movlw	18
  4762  00B1  319E  266C  3180   	fcall	_DATAEE_WriteByte
  4763                           
  4764                           ;main.c: 409:          DATAEE_WriteByte(0x13, current_direction = 0);
  4765  00B4  0021               	movlb	1	; select bank1
  4766  00B5  01E6               	clrf	_current_direction^(0+128)
  4767  00B6  0020               	movlb	0	; select bank0
  4768  00B7  01A9               	clrf	DATAEE_WriteByte@bData
  4769  00B8  3013               	movlw	19
  4770  00B9  319E  266C  3180   	fcall	_DATAEE_WriteByte
  4771                           
  4772                           ;main.c: 410:         }
  4773  00BC  28E1               	goto	l7605
  4774  00BD                     l7603:
  4775                           
  4776                           ;main.c: 412:         {;main.c: 414:         current_volume = DATAEE_ReadByte(0x10);
  4777  00BD  3010               	movlw	16
  4778  00BE  319B  2377  3180   	fcall	_DATAEE_ReadByte
  4779  00C1  0022               	movlb	2	; select bank2
  4780  00C2  00E8               	movwf	??_main^(0+256)
  4781  00C3  0868               	movf	??_main^(0+256),w
  4782  00C4  0020               	movlb	0	; select bank0
  4783  00C5  00EC               	movwf	_current_volume
  4784                           
  4785                           ;main.c: 415:         current_balance = DATAEE_ReadByte(0x11);
  4786  00C6  3011               	movlw	17
  4787  00C7  319B  2377  3180   	fcall	_DATAEE_ReadByte
  4788  00CA  0022               	movlb	2	; select bank2
  4789  00CB  00E8               	movwf	??_main^(0+256)
  4790  00CC  0868               	movf	??_main^(0+256),w
  4791  00CD  0021               	movlb	1	; select bank1
  4792  00CE  00E7               	movwf	_current_balance^(0+128)
  4793                           
  4794                           ;main.c: 416:         current_source = DATAEE_ReadByte(0x12);
  4795  00CF  3012               	movlw	18
  4796  00D0  319B  2377  3180   	fcall	_DATAEE_ReadByte
  4797  00D3  0022               	movlb	2	; select bank2
  4798  00D4  00E8               	movwf	??_main^(0+256)
  4799  00D5  0868               	movf	??_main^(0+256),w
  4800  00D6  0021               	movlb	1	; select bank1
  4801  00D7  00E8               	movwf	_current_source^(0+128)
  4802                           
  4803                           ;main.c: 417:         current_direction = DATAEE_ReadByte(0x13);
  4804  00D8  3013               	movlw	19
  4805  00D9  319B  2377  3180   	fcall	_DATAEE_ReadByte
  4806  00DC  0022               	movlb	2	; select bank2
  4807  00DD  00E8               	movwf	??_main^(0+256)
  4808  00DE  0868               	movf	??_main^(0+256),w
  4809  00DF  0021               	movlb	1	; select bank1
  4810  00E0  00E6               	movwf	_current_direction^(0+128)
  4811  00E1                     l7605:
  4812                           
  4813                           ;main.c: 421:      init_pcm9211();
  4814  00E1  3197  2744  3180   	fcall	_init_pcm9211
  4815                           
  4816                           ;main.c: 422:      init_tas6422();
  4817  00E4  3194  24BD  3180   	fcall	_init_tas6422
  4818                           
  4819                           ;main.c: 425:     i2c_lcd_init();
  4820  00E7  3194  2467  3180   	fcall	_i2c_lcd_init
  4821                           
  4822                           ;main.c: 426:     i2c_lcd_ulcursor_off();
  4823  00EA  319B  239E  3180   	fcall	_i2c_lcd_ulcursor_off
  4824                           
  4825                           ;main.c: 427:     i2c_lcd_home();
  4826  00ED  319B  2391  3180   	fcall	_i2c_lcd_home
  4827                           
  4828                           ;main.c: 428:     sprintf(lcdbuff,"Firmware: 2020JUN06");
  4829  00F0  30A0               	movlw	low _lcdbuff
  4830  00F1  0021               	movlb	1	; select bank1
  4831  00F2  00C0               	movwf	sprintf@s^(0+128)
  4832  00F3  3002               	movlw	high _lcdbuff
  4833  00F4  00C1               	movwf	(sprintf@s+1)^(0+128)
  4834  00F5  3085               	movlw	low (STR_7| (0+32768))
  4835  00F6  00C2               	movwf	sprintf@fmt^(0+128)
  4836  00F7  3099               	movlw	high (STR_7| (0+32768))
  4837  00F8  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  4838  00F9  319E  26AE  3180   	fcall	_sprintf
  4839                           
  4840                           ;main.c: 429:     i2c_lcd_puts(lcdbuff);
  4841  00FC  30A0               	movlw	low _lcdbuff
  4842  00FD  0020               	movlb	0	; select bank0
  4843  00FE  00B7               	movwf	i2c_lcd_puts@s
  4844  00FF  3002               	movlw	high _lcdbuff
  4845  0100  00B8               	movwf	i2c_lcd_puts@s+1
  4846  0101  319C  24B4  3180   	fcall	_i2c_lcd_puts
  4847                           
  4848                           ;main.c: 430:     DELAY_milliseconds(800);
  4849  0104  3020               	movlw	32
  4850  0105  00A3               	movwf	DELAY_milliseconds@milliseconds
  4851  0106  3003               	movlw	3
  4852  0107  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  4853  0108  319B  23CF  3180   	fcall	_DELAY_milliseconds
  4854                           
  4855                           ;main.c: 431:     i2c_lcd_clear();
  4856  010B  319B  2384  3180   	fcall	_i2c_lcd_clear
  4857                           
  4858                           ;main.c: 434:  RE_pos = current_volume;
  4859  010E  0020               	movlb	0	; select bank0
  4860  010F  086C               	movf	_current_volume,w
  4861  0110  0022               	movlb	2	; select bank2
  4862  0111  00E8               	movwf	??_main^(0+256)
  4863  0112  0868               	movf	??_main^(0+256),w
  4864  0113  0021               	banksel	_RE_pos
  4865  0114  00E9               	movwf	_RE_pos& (0+127)
  4866                           
  4867                           ;main.c: 435:  set_gains(current_volume, current_balance);
  4868  0115  0021               	movlb	1	; select bank1
  4869  0116  0867               	movf	_current_balance^(0+128),w
  4870  0117  0022               	movlb	2	; select bank2
  4871  0118  00E8               	movwf	??_main^(0+256)
  4872  0119  0868               	movf	??_main^(0+256),w
  4873  011A  0020               	movlb	0	; select bank0
  4874  011B  00BA               	movwf	set_gains@bal
  4875  011C  086C               	movf	_current_volume,w
  4876  011D  3195  2526  3180   	fcall	_set_gains
  4877                           
  4878                           ;main.c: 436:   i2c_writeNBytes(0x6a, &TAS_PLAY, 2 );
  4879  0120  3048               	movlw	(low (_TAS_PLAY| (0+256)))& (0+255)
  4880  0121  0022               	movlb	2	; select bank2
  4881  0122  00E8               	movwf	??_main^(0+256)
  4882  0123  0868               	movf	??_main^(0+256),w
  4883  0124  0020               	movlb	0	; select bank0
  4884  0125  00AC               	movwf	i2c_writeNBytes@data
  4885  0126  3002               	movlw	2
  4886  0127  00AD               	movwf	i2c_writeNBytes@len
  4887  0128  3000               	movlw	0
  4888  0129  00AE               	movwf	i2c_writeNBytes@len+1
  4889  012A  306A               	movlw	106
  4890  012B  319F  273E  3180   	fcall	_i2c_writeNBytes
  4891                           
  4892                           ;main.c: 439: i2c_writeNBytes(0x6a, &TAS_CLEAR_FALT, 2 );
  4893  012E  3046               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
  4894  012F  0022               	movlb	2	; select bank2
  4895  0130  00E8               	movwf	??_main^(0+256)
  4896  0131  0868               	movf	??_main^(0+256),w
  4897  0132  0020               	movlb	0	; select bank0
  4898  0133  00AC               	movwf	i2c_writeNBytes@data
  4899  0134  3002               	movlw	2
  4900  0135  00AD               	movwf	i2c_writeNBytes@len
  4901  0136  3000               	movlw	0
  4902  0137  00AE               	movwf	i2c_writeNBytes@len+1
  4903  0138  306A               	movlw	106
  4904  0139  319F  273E  3180   	fcall	_i2c_writeNBytes
  4905                           
  4906                           ;main.c: 440: i2c_writeNBytes(0x6a, &TAS_NORMAL, 2 );
  4907  013C  3044               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
  4908  013D  0022               	movlb	2	; select bank2
  4909  013E  00E8               	movwf	??_main^(0+256)
  4910  013F  0868               	movf	??_main^(0+256),w
  4911  0140  0020               	movlb	0	; select bank0
  4912  0141  00AC               	movwf	i2c_writeNBytes@data
  4913  0142  3002               	movlw	2
  4914  0143  00AD               	movwf	i2c_writeNBytes@len
  4915  0144  3000               	movlw	0
  4916  0145  00AE               	movwf	i2c_writeNBytes@len+1
  4917  0146  306A               	movlw	106
  4918  0147  319F  273E  3180   	fcall	_i2c_writeNBytes
  4919                           
  4920                           ;main.c: 442:   set_source(current_source);
  4921  014A  0021               	movlb	1	; select bank1
  4922  014B  0868               	movf	_current_source^(0+128),w
  4923  014C  318C  2407  3180   	fcall	_set_source
  4924                           
  4925                           ;main.c: 444: blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  4926  014F  0022               	banksel	_blink_rate
  4927  0150  01A3               	clrf	_blink_rate& (0+127)
  4928  0151  01A4               	clrf	(_blink_rate& (0+127)+1)
  4929  0152  01A5               	clrf	(_blink_rate& (0+127)+2)
  4930                           
  4931                           ;main.c: 445: puts_led("FAd");
  4932  0153  3022               	movlw	low (STR_8| (0+32768))
  4933  0154  0020               	movlb	0	; select bank0
  4934  0155  00AF               	movwf	puts_led@str
  4935  0156  309A               	movlw	high (STR_8| (0+32768))
  4936  0157  00B0               	movwf	puts_led@str+1
  4937  0158  3195  2594  3180   	fcall	_puts_led
  4938                           
  4939                           ;main.c: 446: DELAY_milliseconds(1000);
  4940  015B  30E8               	movlw	232
  4941  015C  00A3               	movwf	DELAY_milliseconds@milliseconds
  4942  015D  3003               	movlw	3
  4943  015E  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  4944  015F  319B  23CF  3180   	fcall	_DELAY_milliseconds
  4945                           
  4946                           ;main.c: 449: lcd_disp_param();
  4947  0162  318E  266D  3180   	fcall	_lcd_disp_param
  4948                           
  4949                           ;main.c: 450: current_volume = RE_pos;
  4950  0165  0021               	banksel	_RE_pos
  4951  0166  0869               	movf	_RE_pos& (0+127),w
  4952  0167  0022               	movlb	2	; select bank2
  4953  0168  00E8               	movwf	??_main^(0+256)
  4954  0169  0868               	movf	??_main^(0+256),w
  4955  016A  0020               	movlb	0	; select bank0
  4956  016B  00EC               	movwf	_current_volume
  4957                           
  4958                           ;main.c: 451: set_gainstr(current_volume);
  4959  016C  086C               	movf	_current_volume,w
  4960  016D  3188  2013  3180   	fcall	_set_gainstr
  4961  0170                     l7647:
  4962                           
  4963                           ;main.c: 453:         {;main.c: 454:         if (button1 == 1)
  4964  0170  0022               	banksel	_button1
  4965  0171  0341               	decf	_button1& (0+127),w
  4966  0172  1D03               	btfss	3,2
  4967  0173  2A44               	goto	l7691
  4968                           
  4969                           ;main.c: 455:                     {;main.c: 456:                     RE_pos = current_so
      +                          urce;
  4970  0174  0021               	movlb	1	; select bank1
  4971  0175  0868               	movf	_current_source^(0+128),w
  4972  0176  0022               	movlb	2	; select bank2
  4973  0177  00E8               	movwf	??_main^(0+256)
  4974  0178  0868               	movf	??_main^(0+256),w
  4975  0179  0021               	banksel	_RE_pos
  4976  017A  00E9               	movwf	_RE_pos& (0+127)
  4977                           
  4978                           ;main.c: 457:                     puts_led("SOC");
  4979  017B  300A               	movlw	low (STR_9| (0+32768))
  4980  017C  0020               	movlb	0	; select bank0
  4981  017D  00AF               	movwf	puts_led@str
  4982  017E  309A               	movlw	high (STR_9| (0+32768))
  4983  017F  00B0               	movwf	puts_led@str+1
  4984  0180  3195  2594  3180   	fcall	_puts_led
  4985                           
  4986                           ;main.c: 458:                     button1 = 0;
  4987  0183  0022               	banksel	_button1
  4988  0184  01C1               	clrf	_button1& (0+127)
  4989                           
  4990                           ;main.c: 459:                     DELAY_milliseconds(800);
  4991  0185  3020               	movlw	32
  4992  0186  0020               	movlb	0	; select bank0
  4993  0187  00A3               	movwf	DELAY_milliseconds@milliseconds
  4994  0188  3003               	movlw	3
  4995  0189  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  4996  018A  319B  23CF  3180   	fcall	_DELAY_milliseconds
  4997                           
  4998                           ;main.c: 460:                     puts_led("$B!!!!!!(B");
  4999  018D  30E6               	movlw	low (STR_10| (0+32768))
  5000  018E  00AF               	movwf	puts_led@str
  5001  018F  3099               	movlw	high (STR_10| (0+32768))
  5002  0190  00B0               	movwf	puts_led@str+1
  5003  0191  3195  2594  3180   	fcall	_puts_led
  5004                           
  5005                           ;main.c: 461:                     DELAY_milliseconds(200);
  5006  0194  30C8               	movlw	200
  5007  0195  00A3               	movwf	DELAY_milliseconds@milliseconds
  5008  0196  3000               	movlw	0
  5009  0197  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  5010  0198  319B  23CF  3180   	fcall	_DELAY_milliseconds
  5011                           
  5012                           ;main.c: 462:                     button1 = 0;
  5013  019B  0022               	banksel	_button1
  5014  019C  01C1               	clrf	_button1& (0+127)
  5015                           
  5016                           ;main.c: 464:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  5017  019D  3023               	movlw	low _blink_rate
  5018  019E  0086               	movwf	6
  5019  019F  3001               	movlw	high _blink_rate
  5020  01A0  0087               	movwf	7
  5021  01A1  3141               	addfsr 1,1
  5022  01A2  3001               	movlw	1
  5023  01A3  0022               	banksel	_blink_rate
  5024  01A4  00A3               	movwf	_blink_rate& (0+127)
  5025  01A5  3FC0               	movwi [0]fsr1
  5026  01A6  0022               	movlb	2	; select bank2
  5027  01A7  00E8               	movwf	??_main^(0+256)
  5028  01A8  3025               	movlw	low (_blink_rate+2)
  5029  01A9  0086               	movwf	6
  5030  01AA  3001               	movlw	high (_blink_rate+2)
  5031  01AB  0087               	movwf	7
  5032  01AC  0868               	movf	??_main^(0+256),w
  5033  01AD  0081               	movwf	1
  5034  01AE                     l7669:	
  5035                           ;main.c: 465:                     while (button1 == 0)
  5036                           
  5037                           
  5038                           ;main.c: 465:                     while (button1 == 0)
  5039  01AE  0022               	banksel	_button1
  5040  01AF  0841               	movf	_button1& (0+127),w
  5041  01B0  1D03               	btfss	3,2
  5042  01B1  29F2               	goto	l7671
  5043                           
  5044                           ;main.c: 466:                         {;main.c: 467:                          puts_led(l
      +                          ed_src_name[current_source % 5]);
  5045  01B2  3005               	movlw	5
  5046  01B3  0022               	movlb	2	; select bank2
  5047  01B4  00E8               	movwf	??_main^(0+256)
  5048  01B5  0868               	movf	??_main^(0+256),w
  5049  01B6  0020               	movlb	0	; select bank0
  5050  01B7  00A3               	movwf	___lbmod@divisor
  5051  01B8  0021               	movlb	1	; select bank1
  5052  01B9  0868               	movf	_current_source^(0+128),w
  5053  01BA  319E  264C  3180   	fcall	___lbmod
  5054  01BD  0022               	movlb	2	; select bank2
  5055  01BE  00E9               	movwf	(??_main+1)^(0+256)
  5056  01BF  01EA               	clrf	((??_main+1)^(0+256)+1)
  5057  01C0  0869               	movf	(??_main+1)^(0+256),w
  5058  01C1  0020               	movlb	0	; select bank0
  5059  01C2  00A9               	movwf	___wmul@multiplier
  5060  01C3  0022               	movlb	2	; select bank2
  5061  01C4  086A               	movf	(??_main+2)^(0+256),w
  5062  01C5  0020               	movlb	0	; select bank0
  5063  01C6  00AA               	movwf	___wmul@multiplier+1
  5064  01C7  3007               	movlw	7
  5065  01C8  00AB               	movwf	___wmul@multiplicand
  5066  01C9  3000               	movlw	0
  5067  01CA  00AC               	movwf	___wmul@multiplicand+1
  5068  01CB  319D  25D9  3180   	fcall	___wmul
  5069  01CE  3021               	movlw	low (_led_src_name| (0+32768))
  5070  01CF  0022               	movlb	2	; select bank2
  5071  01D0  00EB               	movwf	(??_main+3)^(0+256)
  5072  01D1  3099               	movlw	high (_led_src_name| (0+32768))
  5073  01D2  00EC               	movwf	((??_main+3)^(0+256)+1)
  5074  01D3  0020               	movlb	0	; select bank0
  5075  01D4  0829               	movf	?___wmul,w
  5076  01D5  0022               	movlb	2	; select bank2
  5077  01D6  076B               	addwf	(??_main+3)^(0+256),w
  5078  01D7  00ED               	movwf	(??_main+5)^(0+256)
  5079  01D8  0020               	movlb	0	; select bank0
  5080  01D9  082A               	movf	?___wmul+1,w
  5081  01DA  0022               	movlb	2	; select bank2
  5082  01DB  3D6C               	addwfc	(??_main+4)^(0+256),w
  5083  01DC  00EE               	movwf	(??_main+6)^(0+256)
  5084  01DD  086D               	movf	(??_main+5)^(0+256),w
  5085  01DE  0020               	movlb	0	; select bank0
  5086  01DF  00AF               	movwf	puts_led@str
  5087  01E0  0022               	movlb	2	; select bank2
  5088  01E1  086E               	movf	(??_main+6)^(0+256),w
  5089  01E2  0020               	movlb	0	; select bank0
  5090  01E3  00B0               	movwf	puts_led@str+1
  5091  01E4  3195  2594  3180   	fcall	_puts_led
  5092                           
  5093                           ;main.c: 468:                          lcd_disp_param();
  5094  01E7  318E  266D  3180   	fcall	_lcd_disp_param
  5095                           
  5096                           ;main.c: 469:                          current_source = RE_pos;
  5097  01EA  0021               	banksel	_RE_pos
  5098  01EB  0869               	movf	_RE_pos& (0+127),w
  5099  01EC  0022               	movlb	2	; select bank2
  5100  01ED  00E8               	movwf	??_main^(0+256)
  5101  01EE  0868               	movf	??_main^(0+256),w
  5102  01EF  0021               	movlb	1	; select bank1
  5103  01F0  00E8               	movwf	_current_source^(0+128)
  5104  01F1  29AE               	goto	l7669
  5105  01F2                     l7671:
  5106                           
  5107                           ;main.c: 471:                     button1 = 0;
  5108  01F2  01C1               	clrf	_button1& (0+127)
  5109                           
  5110                           ;main.c: 473:                     i2c_writeNBytes(0x6a,&TAS_MUTE, 2 );
  5111  01F3  30A9               	movlw	(low (_TAS_MUTE| (0+256)))& (0+255)
  5112  01F4  0022               	movlb	2	; select bank2
  5113  01F5  00E8               	movwf	??_main^(0+256)
  5114  01F6  0868               	movf	??_main^(0+256),w
  5115  01F7  0020               	movlb	0	; select bank0
  5116  01F8  00AC               	movwf	i2c_writeNBytes@data
  5117  01F9  3002               	movlw	2
  5118  01FA  00AD               	movwf	i2c_writeNBytes@len
  5119  01FB  3000               	movlw	0
  5120  01FC  00AE               	movwf	i2c_writeNBytes@len+1
  5121  01FD  306A               	movlw	106
  5122  01FE  319F  273E  3180   	fcall	_i2c_writeNBytes
  5123                           
  5124                           ;main.c: 474:                     DATAEE_WriteByte(0x00, 0x00);
  5125  0201  01A9               	clrf	DATAEE_WriteByte@bData
  5126  0202  3000               	movlw	0
  5127  0203  319E  266C  3180   	fcall	_DATAEE_WriteByte
  5128                           
  5129                           ;main.c: 475:                     DATAEE_WriteByte(0x12, (current_source % 5));
  5130  0206  3005               	movlw	5
  5131  0207  0022               	movlb	2	; select bank2
  5132  0208  00E8               	movwf	??_main^(0+256)
  5133  0209  0868               	movf	??_main^(0+256),w
  5134  020A  0020               	movlb	0	; select bank0
  5135  020B  00A3               	movwf	___lbmod@divisor
  5136  020C  0021               	movlb	1	; select bank1
  5137  020D  0868               	movf	_current_source^(0+128),w
  5138  020E  319E  264C  3180   	fcall	___lbmod
  5139  0211  0022               	movlb	2	; select bank2
  5140  0212  00E9               	movwf	(??_main+1)^(0+256)
  5141  0213  0869               	movf	(??_main+1)^(0+256),w
  5142  0214  0020               	movlb	0	; select bank0
  5143  0215  00A9               	movwf	DATAEE_WriteByte@bData
  5144  0216  3012               	movlw	18
  5145  0217  319E  266C  3180   	fcall	_DATAEE_WriteByte
  5146                           
  5147                           ;main.c: 476:                     set_source(current_source);
  5148  021A  0021               	movlb	1	; select bank1
  5149  021B  0868               	movf	_current_source^(0+128),w
  5150  021C  318C  2407  3180   	fcall	_set_source
  5151                           
  5152                           ;main.c: 477:                      RE_pos = current_volume;
  5153  021F  086C               	movf	_current_volume,w
  5154  0220  0022               	movlb	2	; select bank2
  5155  0221  00E8               	movwf	??_main^(0+256)
  5156  0222  0868               	movf	??_main^(0+256),w
  5157  0223  0021               	banksel	_RE_pos
  5158  0224  00E9               	movwf	_RE_pos& (0+127)
  5159                           
  5160                           ;main.c: 478:                     set_gainstr(current_volume);
  5161  0225  0020               	movlb	0	; select bank0
  5162  0226  086C               	movf	_current_volume,w
  5163  0227  3188  2013  3180   	fcall	_set_gainstr
  5164                           
  5165                           ;main.c: 479:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  5166  022A  0022               	banksel	_blink_rate
  5167  022B  01A3               	clrf	_blink_rate& (0+127)
  5168  022C  01A4               	clrf	(_blink_rate& (0+127)+1)
  5169  022D  01A5               	clrf	(_blink_rate& (0+127)+2)
  5170                           
  5171                           ;main.c: 480:                     puts_led(ledstr);
  5172  022E  3020               	movlw	low _ledstr
  5173  022F  0020               	movlb	0	; select bank0
  5174  0230  00AF               	movwf	puts_led@str
  5175  0231  3002               	movlw	high _ledstr
  5176  0232  00B0               	movwf	puts_led@str+1
  5177  0233  3195  2594  3180   	fcall	_puts_led
  5178                           
  5179                           ;main.c: 482:                     i2c_writeNBytes(0x6a,&TAS_PLAY, 2 );
  5180  0236  3048               	movlw	(low (_TAS_PLAY| (0+256)))& (0+255)
  5181  0237  0022               	movlb	2	; select bank2
  5182  0238  00E8               	movwf	??_main^(0+256)
  5183  0239  0868               	movf	??_main^(0+256),w
  5184  023A  0020               	movlb	0	; select bank0
  5185  023B  00AC               	movwf	i2c_writeNBytes@data
  5186  023C  3002               	movlw	2
  5187  023D  00AD               	movwf	i2c_writeNBytes@len
  5188  023E  3000               	movlw	0
  5189  023F  00AE               	movwf	i2c_writeNBytes@len+1
  5190  0240  306A               	movlw	106
  5191  0241  319F  273E  3180   	fcall	_i2c_writeNBytes
  5192  0244                     l7691:
  5193                           
  5194                           ;main.c: 484:         if (button1 == 2)
  5195  0244  3002               	movlw	2
  5196  0245  0022               	banksel	_button1
  5197  0246  0641               	xorwf	_button1& (0+127),w
  5198  0247  1D03               	btfss	3,2
  5199  0248  2BCA               	goto	l7777
  5200                           
  5201                           ;main.c: 485:                     {;main.c: 487:                      DATAEE_WriteByte(0
      +                          x00, 0x00);
  5202  0249  0020               	movlb	0	; select bank0
  5203  024A  01A9               	clrf	DATAEE_WriteByte@bData
  5204  024B  3000               	movlw	0
  5205  024C  319E  266C  3180   	fcall	_DATAEE_WriteByte
  5206                           
  5207                           ;main.c: 488:                     RE_pos = 64 + current_balance ;
  5208  024F  0021               	movlb	1	; select bank1
  5209  0250  0867               	movf	_current_balance^(0+128),w
  5210  0251  3E40               	addlw	64
  5211  0252  0022               	movlb	2	; select bank2
  5212  0253  00E8               	movwf	??_main^(0+256)
  5213  0254  0868               	movf	??_main^(0+256),w
  5214  0255  0021               	banksel	_RE_pos
  5215  0256  00E9               	movwf	_RE_pos& (0+127)
  5216                           
  5217                           ;main.c: 489:                     puts_led("BAL");
  5218  0257  3012               	movlw	low (STR_11| (0+32768))
  5219  0258  0020               	movlb	0	; select bank0
  5220  0259  00AF               	movwf	puts_led@str
  5221  025A  309A               	movlw	high (STR_11| (0+32768))
  5222  025B  00B0               	movwf	puts_led@str+1
  5223  025C  3195  2594  3180   	fcall	_puts_led
  5224                           
  5225                           ;main.c: 490:                     DELAY_milliseconds(800);
  5226  025F  3020               	movlw	32
  5227  0260  00A3               	movwf	DELAY_milliseconds@milliseconds
  5228  0261  3003               	movlw	3
  5229  0262  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  5230  0263  319B  23CF  3180   	fcall	_DELAY_milliseconds
  5231                           
  5232                           ;main.c: 491:                     puts_led("$B!!!!!!(B");
  5233  0266  30E6               	movlw	low (STR_10| (0+32768))
  5234  0267  00AF               	movwf	puts_led@str
  5235  0268  3099               	movlw	high (STR_10| (0+32768))
  5236  0269  00B0               	movwf	puts_led@str+1
  5237  026A  3195  2594  3180   	fcall	_puts_led
  5238                           
  5239                           ;main.c: 492:                     DELAY_milliseconds(200);
  5240  026D  30C8               	movlw	200
  5241  026E  00A3               	movwf	DELAY_milliseconds@milliseconds
  5242  026F  3000               	movlw	0
  5243  0270  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  5244  0271  319B  23CF  3180   	fcall	_DELAY_milliseconds
  5245                           
  5246                           ;main.c: 493:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  5247  0274  3023               	movlw	low _blink_rate
  5248  0275  0086               	movwf	6
  5249  0276  3001               	movlw	high _blink_rate
  5250  0277  0087               	movwf	7
  5251  0278  3141               	addfsr 1,1
  5252  0279  3001               	movlw	1
  5253  027A  0022               	banksel	_blink_rate
  5254  027B  00A3               	movwf	_blink_rate& (0+127)
  5255  027C  3FC0               	movwi [0]fsr1
  5256  027D  0022               	movlb	2	; select bank2
  5257  027E  00E8               	movwf	??_main^(0+256)
  5258  027F  3025               	movlw	low (_blink_rate+2)
  5259  0280  0086               	movwf	6
  5260  0281  3001               	movlw	high (_blink_rate+2)
  5261  0282  0087               	movwf	7
  5262  0283  0868               	movf	??_main^(0+256),w
  5263  0284  0081               	movwf	1
  5264                           
  5265                           ;main.c: 494:                     button1 = 0;
  5266  0285  0022               	banksel	_button1
  5267  0286  01C1               	clrf	_button1& (0+127)
  5268  0287                     l7711:	
  5269                           ;main.c: 495:                     while (button1 == 0)
  5270                           
  5271                           
  5272                           ;main.c: 495:                     while (button1 == 0)
  5273  0287  0022               	banksel	_button1
  5274  0288  0841               	movf	_button1& (0+127),w
  5275  0289  1D03               	btfss	3,2
  5276  028A  2AAC               	goto	l7713
  5277                           
  5278                           ;main.c: 496:                         {;main.c: 497:                         sprintf(led
      +                          buff, "%03d",(current_balance=(signed char)(RE_pos-64)));
  5279  028B  3035               	movlw	low _ledbuff
  5280  028C  0021               	movlb	1	; select bank1
  5281  028D  00C0               	movwf	sprintf@s^(0+128)
  5282  028E  3002               	movlw	high _ledbuff
  5283  028F  00C1               	movwf	(sprintf@s^(0+128)+1)
  5284  0290  30FD               	movlw	low (STR_13| (0+32768))
  5285  0291  00C2               	movwf	sprintf@fmt^(0+128)
  5286  0292  3099               	movlw	high (STR_13| (0+32768))
  5287  0293  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  5288  0294  0021               	banksel	_RE_pos
  5289  0295  0869               	movf	_RE_pos& (0+127),w
  5290  0296  3EC0               	addlw	-64
  5291  0297  0021               	movlb	1	; select bank1
  5292  0298  00E7               	movwf	_current_balance^(0+128)
  5293  0299  00C4               	movwf	(?_sprintf^(0+128)+4)
  5294  029A  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  5295  029B  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  5296  029C  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  5297  029D  319E  26AE  3180   	fcall	_sprintf
  5298                           
  5299                           ;main.c: 498:                         puts_led(ledbuff);
  5300  02A0  3035               	movlw	low _ledbuff
  5301  02A1  0020               	movlb	0	; select bank0
  5302  02A2  00AF               	movwf	puts_led@str
  5303  02A3  3002               	movlw	high _ledbuff
  5304  02A4  00B0               	movwf	puts_led@str+1
  5305  02A5  3195  2594  3180   	fcall	_puts_led
  5306                           
  5307                           ;main.c: 499:                         lcd_disp_param();
  5308  02A8  318E  266D  3180   	fcall	_lcd_disp_param
  5309  02AB  2A87               	goto	l7711
  5310  02AC                     l7713:
  5311                           
  5312                           ;main.c: 501:                     button1 = 0;
  5313  02AC  01C1               	clrf	_button1& (0+127)
  5314                           
  5315                           ;main.c: 503:                     DATAEE_WriteByte(0x11, current_balance);
  5316  02AD  0021               	movlb	1	; select bank1
  5317  02AE  0867               	movf	_current_balance^(0+128),w
  5318  02AF  0022               	movlb	2	; select bank2
  5319  02B0  00E8               	movwf	??_main^(0+256)
  5320  02B1  0868               	movf	??_main^(0+256),w
  5321  02B2  0020               	movlb	0	; select bank0
  5322  02B3  00A9               	movwf	DATAEE_WriteByte@bData
  5323  02B4  3011               	movlw	17
  5324  02B5  319E  266C  3180   	fcall	_DATAEE_WriteByte
  5325                           
  5326                           ;main.c: 504:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  5327  02B8  0022               	banksel	_blink_rate
  5328  02B9  01A3               	clrf	_blink_rate& (0+127)
  5329  02BA  01A4               	clrf	(_blink_rate& (0+127)+1)
  5330  02BB  01A5               	clrf	(_blink_rate& (0+127)+2)
  5331                           
  5332                           ;main.c: 505:                     sprintf(ledbuff, "%03d",current_balance);
  5333  02BC  3035               	movlw	low _ledbuff
  5334  02BD  0021               	movlb	1	; select bank1
  5335  02BE  00C0               	movwf	sprintf@s^(0+128)
  5336  02BF  3002               	movlw	high _ledbuff
  5337  02C0  00C1               	movwf	(sprintf@s^(0+128)+1)
  5338  02C1  30FD               	movlw	low (STR_13| (0+32768))
  5339  02C2  00C2               	movwf	sprintf@fmt^(0+128)
  5340  02C3  3099               	movlw	high (STR_13| (0+32768))
  5341  02C4  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  5342  02C5  0867               	movf	_current_balance^(0+128),w
  5343  02C6  00C4               	movwf	(?_sprintf^(0+128)+4)
  5344  02C7  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  5345  02C8  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  5346  02C9  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  5347  02CA  319E  26AE  3180   	fcall	_sprintf
  5348                           
  5349                           ;main.c: 506:                     set_gains(current_volume, current_balance);
  5350  02CD  0867               	movf	_current_balance^(0+128),w
  5351  02CE  0022               	movlb	2	; select bank2
  5352  02CF  00E8               	movwf	??_main^(0+256)
  5353  02D0  0868               	movf	??_main^(0+256),w
  5354  02D1  0020               	movlb	0	; select bank0
  5355  02D2  00BA               	movwf	set_gains@bal
  5356  02D3  086C               	movf	_current_volume,w
  5357  02D4  3195  2526  3180   	fcall	_set_gains
  5358                           
  5359                           ;main.c: 507:                     puts_led(ledbuff);
  5360  02D7  3035               	movlw	low _ledbuff
  5361  02D8  00AF               	movwf	puts_led@str
  5362  02D9  3002               	movlw	high _ledbuff
  5363  02DA  00B0               	movwf	puts_led@str+1
  5364  02DB  3195  2594  3180   	fcall	_puts_led
  5365                           
  5366                           ;main.c: 508:                     DELAY_milliseconds(1400);
  5367  02DE  3078               	movlw	120
  5368  02DF  00A3               	movwf	DELAY_milliseconds@milliseconds
  5369  02E0  3005               	movlw	5
  5370  02E1  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  5371  02E2  319B  23CF  3180   	fcall	_DELAY_milliseconds
  5372                           
  5373                           ;main.c: 510:                     RE_pos = current_direction;
  5374  02E5  0021               	movlb	1	; select bank1
  5375  02E6  0866               	movf	_current_direction^(0+128),w
  5376  02E7  0022               	movlb	2	; select bank2
  5377  02E8  00E8               	movwf	??_main^(0+256)
  5378  02E9  0868               	movf	??_main^(0+256),w
  5379  02EA  0021               	banksel	_RE_pos
  5380  02EB  00E9               	movwf	_RE_pos& (0+127)
  5381                           
  5382                           ;main.c: 511:                     puts_led("12S");
  5383  02EC  3016               	movlw	low (STR_15| (0+32768))
  5384  02ED  0020               	movlb	0	; select bank0
  5385  02EE  00AF               	movwf	puts_led@str
  5386  02EF  309A               	movlw	high (STR_15| (0+32768))
  5387  02F0  00B0               	movwf	puts_led@str+1
  5388  02F1  3195  2594  3180   	fcall	_puts_led
  5389                           
  5390                           ;main.c: 512:                     DELAY_milliseconds(800);
  5391  02F4  3020               	movlw	32
  5392  02F5  00A3               	movwf	DELAY_milliseconds@milliseconds
  5393  02F6  3003               	movlw	3
  5394  02F7  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  5395  02F8  319B  23CF  3180   	fcall	_DELAY_milliseconds
  5396                           
  5397                           ;main.c: 513:                     puts_led("$B!!!!!!(B");
  5398  02FB  30E6               	movlw	low (STR_10| (0+32768))
  5399  02FC  00AF               	movwf	puts_led@str
  5400  02FD  3099               	movlw	high (STR_10| (0+32768))
  5401  02FE  00B0               	movwf	puts_led@str+1
  5402  02FF  3195  2594  3180   	fcall	_puts_led
  5403                           
  5404                           ;main.c: 514:                     DELAY_milliseconds(200);
  5405  0302  30C8               	movlw	200
  5406  0303  00A3               	movwf	DELAY_milliseconds@milliseconds
  5407  0304  3000               	movlw	0
  5408  0305  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  5409  0306  319B  23CF  3180   	fcall	_DELAY_milliseconds
  5410                           
  5411                           ;main.c: 515:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  5412  0309  3023               	movlw	low _blink_rate
  5413  030A  0086               	movwf	6
  5414  030B  3001               	movlw	high _blink_rate
  5415  030C  0087               	movwf	7
  5416  030D  3141               	addfsr 1,1
  5417  030E  3001               	movlw	1
  5418  030F  0022               	banksel	_blink_rate
  5419  0310  00A3               	movwf	_blink_rate& (0+127)
  5420  0311  3FC0               	movwi [0]fsr1
  5421  0312  0022               	movlb	2	; select bank2
  5422  0313  00E8               	movwf	??_main^(0+256)
  5423  0314  3025               	movlw	low (_blink_rate+2)
  5424  0315  0086               	movwf	6
  5425  0316  3001               	movlw	high (_blink_rate+2)
  5426  0317  0087               	movwf	7
  5427  0318  0868               	movf	??_main^(0+256),w
  5428  0319  0081               	movwf	1
  5429                           
  5430                           ;main.c: 516:                     button1 = 0;
  5431  031A  0022               	banksel	_button1
  5432  031B  01C1               	clrf	_button1& (0+127)
  5433  031C                     l7749:	
  5434                           ;main.c: 517:                     while (button1 == 0)
  5435                           
  5436                           
  5437                           ;main.c: 517:                     while (button1 == 0)
  5438  031C  0022               	banksel	_button1
  5439  031D  0841               	movf	_button1& (0+127),w
  5440  031E  1D03               	btfss	3,2
  5441  031F  2B5E               	goto	l7751
  5442                           
  5443                           ;main.c: 518:                         {;main.c: 519:                         current_dir
      +                          ection = RE_pos%2;
  5444  0320  0021               	banksel	_RE_pos
  5445  0321  0869               	movf	_RE_pos& (0+127),w
  5446  0322  3901               	andlw	1
  5447  0323  0022               	movlb	2	; select bank2
  5448  0324  00E8               	movwf	??_main^(0+256)
  5449  0325  0868               	movf	??_main^(0+256),w
  5450  0326  0021               	movlb	1	; select bank1
  5451  0327  00E6               	movwf	_current_direction^(0+128)
  5452                           
  5453                           ;main.c: 520:                         strcpy(ledbuff, led_i2s_dir[current_direction]);
  5454  0328  3035               	movlw	low _ledbuff
  5455  0329  0020               	movlb	0	; select bank0
  5456  032A  00AF               	movwf	strcpy@dest
  5457  032B  3002               	movlw	high _ledbuff
  5458  032C  00B0               	movwf	strcpy@dest+1
  5459  032D  0021               	movlb	1	; select bank1
  5460  032E  0866               	movf	_current_direction^(0+128),w
  5461  032F  0022               	movlb	2	; select bank2
  5462  0330  00E8               	movwf	??_main^(0+256)
  5463  0331  01E9               	clrf	(??_main^(0+256)+1)
  5464  0332  0868               	movf	??_main^(0+256),w
  5465  0333  0020               	movlb	0	; select bank0
  5466  0334  00A9               	movwf	___wmul@multiplier
  5467  0335  0022               	movlb	2	; select bank2
  5468  0336  0869               	movf	(??_main+1)^(0+256),w
  5469  0337  0020               	movlb	0	; select bank0
  5470  0338  00AA               	movwf	___wmul@multiplier+1
  5471  0339  3007               	movlw	7
  5472  033A  00AB               	movwf	___wmul@multiplicand
  5473  033B  3000               	movlw	0
  5474  033C  00AC               	movwf	___wmul@multiplicand+1
  5475  033D  319D  25D9  3180   	fcall	___wmul
  5476  0340  30CA               	movlw	low (_led_i2s_dir| (0+32768))
  5477  0341  0022               	movlb	2	; select bank2
  5478  0342  00EA               	movwf	(??_main+2)^(0+256)
  5479  0343  3099               	movlw	high (_led_i2s_dir| (0+32768))
  5480  0344  00EB               	movwf	((??_main+2)^(0+256)+1)
  5481  0345  0020               	movlb	0	; select bank0
  5482  0346  0829               	movf	?___wmul,w
  5483  0347  0022               	movlb	2	; select bank2
  5484  0348  076A               	addwf	(??_main+2)^(0+256),w
  5485  0349  0020               	movlb	0	; select bank0
  5486  034A  00B1               	movwf	strcpy@src
  5487  034B  082A               	movf	?___wmul+1,w
  5488  034C  0022               	movlb	2	; select bank2
  5489  034D  3D6B               	addwfc	(??_main+3)^(0+256),w
  5490  034E  0020               	movlb	0	; select bank0
  5491  034F  00B2               	movwf	strcpy@src+1
  5492  0350  319E  26D1  3180   	fcall	_strcpy
  5493                           
  5494                           ;main.c: 521:                         puts_led(ledbuff);
  5495  0353  3035               	movlw	low _ledbuff
  5496  0354  00AF               	movwf	puts_led@str
  5497  0355  3002               	movlw	high _ledbuff
  5498  0356  00B0               	movwf	puts_led@str+1
  5499  0357  3195  2594  3180   	fcall	_puts_led
  5500                           
  5501                           ;main.c: 522:                         lcd_disp_param();
  5502  035A  318E  266D  3180   	fcall	_lcd_disp_param
  5503  035D  2B1C               	goto	l7749
  5504  035E                     l7751:
  5505                           
  5506                           ;main.c: 524:                     button1 = 0;
  5507  035E  01C1               	clrf	_button1& (0+127)
  5508                           
  5509                           ;main.c: 525:                     DATAEE_WriteByte(0x13, current_direction);
  5510  035F  0021               	movlb	1	; select bank1
  5511  0360  0866               	movf	_current_direction^(0+128),w
  5512  0361  0022               	movlb	2	; select bank2
  5513  0362  00E8               	movwf	??_main^(0+256)
  5514  0363  0868               	movf	??_main^(0+256),w
  5515  0364  0020               	movlb	0	; select bank0
  5516  0365  00A9               	movwf	DATAEE_WriteByte@bData
  5517  0366  3013               	movlw	19
  5518  0367  319E  266C  3180   	fcall	_DATAEE_WriteByte
  5519                           
  5520                           ;main.c: 526:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  5521  036A  0022               	banksel	_blink_rate
  5522  036B  01A3               	clrf	_blink_rate& (0+127)
  5523  036C  01A4               	clrf	(_blink_rate& (0+127)+1)
  5524  036D  01A5               	clrf	(_blink_rate& (0+127)+2)
  5525                           
  5526                           ;main.c: 527:                     if( current_direction == 1)
  5527  036E  0021               	movlb	1	; select bank1
  5528  036F  0366               	decf	_current_direction^(0+128),w
  5529  0370  1D03               	btfss	3,2
  5530  0371  2B74               	goto	l7761
  5531                           
  5532                           ;main.c: 528:                               i2c_writeNBytes(0x40,&I2S_OUT, 2 );
  5533  0372  3066               	movlw	(low (_I2S_OUT| (0+256)))& (0+255)
  5534  0373  2B75               	goto	L1
  5535  0374                     l7761:
  5536  0374  3064               	movlw	(low (_I2S_IN| (0+256)))& (0+255)
  5537  0375                     L1:
  5538  0375  0022               	movlb	2	; select bank2
  5539  0376  00E8               	movwf	??_main^(0+256)
  5540  0377  0868               	movf	??_main^(0+256),w
  5541  0378  0020               	movlb	0	; select bank0
  5542  0379  00AC               	movwf	i2c_writeNBytes@data
  5543  037A  3002               	movlw	2
  5544  037B  00AD               	movwf	i2c_writeNBytes@len
  5545  037C  3000               	movlw	0
  5546  037D  00AE               	movwf	i2c_writeNBytes@len+1
  5547  037E  3040               	movlw	64
  5548  037F  319F  273E  3180   	fcall	_i2c_writeNBytes
  5549                           
  5550                           ;main.c: 530:                     strcpy(ledbuff, led_i2s_dir[current_direction]);
  5551  0382  3035               	movlw	low _ledbuff
  5552  0383  00AF               	movwf	strcpy@dest
  5553  0384  3002               	movlw	high _ledbuff
  5554  0385  00B0               	movwf	strcpy@dest+1
  5555  0386  0021               	movlb	1	; select bank1
  5556  0387  0866               	movf	_current_direction^(0+128),w
  5557  0388  0022               	movlb	2	; select bank2
  5558  0389  00E8               	movwf	??_main^(0+256)
  5559  038A  01E9               	clrf	(??_main^(0+256)+1)
  5560  038B  0868               	movf	??_main^(0+256),w
  5561  038C  0020               	movlb	0	; select bank0
  5562  038D  00A9               	movwf	___wmul@multiplier
  5563  038E  0022               	movlb	2	; select bank2
  5564  038F  0869               	movf	(??_main+1)^(0+256),w
  5565  0390  0020               	movlb	0	; select bank0
  5566  0391  00AA               	movwf	___wmul@multiplier+1
  5567  0392  3007               	movlw	7
  5568  0393  00AB               	movwf	___wmul@multiplicand
  5569  0394  3000               	movlw	0
  5570  0395  00AC               	movwf	___wmul@multiplicand+1
  5571  0396  319D  25D9  3180   	fcall	___wmul
  5572  0399  30CA               	movlw	low (_led_i2s_dir| (0+32768))
  5573  039A  0022               	movlb	2	; select bank2
  5574  039B  00EA               	movwf	(??_main+2)^(0+256)
  5575  039C  3099               	movlw	high (_led_i2s_dir| (0+32768))
  5576  039D  00EB               	movwf	((??_main+2)^(0+256)+1)
  5577  039E  0020               	movlb	0	; select bank0
  5578  039F  0829               	movf	?___wmul,w
  5579  03A0  0022               	movlb	2	; select bank2
  5580  03A1  076A               	addwf	(??_main+2)^(0+256),w
  5581  03A2  0020               	movlb	0	; select bank0
  5582  03A3  00B1               	movwf	strcpy@src
  5583  03A4  082A               	movf	?___wmul+1,w
  5584  03A5  0022               	movlb	2	; select bank2
  5585  03A6  3D6B               	addwfc	(??_main+3)^(0+256),w
  5586  03A7  0020               	movlb	0	; select bank0
  5587  03A8  00B2               	movwf	strcpy@src+1
  5588  03A9  319E  26D1  3180   	fcall	_strcpy
  5589                           
  5590                           ;main.c: 531:                     puts_led(ledbuff);
  5591  03AC  3035               	movlw	low _ledbuff
  5592  03AD  00AF               	movwf	puts_led@str
  5593  03AE  3002               	movlw	high _ledbuff
  5594  03AF  00B0               	movwf	puts_led@str+1
  5595  03B0  3195  2594  3180   	fcall	_puts_led
  5596                           
  5597                           ;main.c: 532:                     DELAY_milliseconds(1400);
  5598  03B3  3078               	movlw	120
  5599  03B4  00A3               	movwf	DELAY_milliseconds@milliseconds
  5600  03B5  3005               	movlw	5
  5601  03B6  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  5602  03B7  319B  23CF  3180   	fcall	_DELAY_milliseconds
  5603                           
  5604                           ;main.c: 536:                     RE_pos = current_volume;
  5605  03BA  086C               	movf	_current_volume,w
  5606  03BB  0022               	movlb	2	; select bank2
  5607  03BC  00E8               	movwf	??_main^(0+256)
  5608  03BD  0868               	movf	??_main^(0+256),w
  5609  03BE  0021               	banksel	_RE_pos
  5610  03BF  00E9               	movwf	_RE_pos& (0+127)
  5611                           
  5612                           ;main.c: 537:                     set_gainstr(current_volume);
  5613  03C0  0020               	movlb	0	; select bank0
  5614  03C1  086C               	movf	_current_volume,w
  5615  03C2  3188  2013  3180   	fcall	_set_gainstr
  5616                           
  5617                           ;main.c: 538:                     lcd_disp_param();
  5618  03C5  318E  266D  3180   	fcall	_lcd_disp_param
  5619                           
  5620                           ;main.c: 539:                     button1 = 0;
  5621  03C8  0022               	banksel	_button1
  5622  03C9  01C1               	clrf	_button1& (0+127)
  5623  03CA                     l7777:
  5624                           
  5625                           ;main.c: 541:          if (current_volume != RE_pos)
  5626  03CA  0020               	movlb	0	; select bank0
  5627  03CB  086C               	movf	_current_volume,w
  5628  03CC  0021               	banksel	_RE_pos
  5629  03CD  0669               	xorwf	_RE_pos& (0+127),w
  5630  03CE  1903               	skipnz
  5631  03CF  2C1A               	goto	l7797
  5632                           
  5633                           ;main.c: 542:                     {;main.c: 543:                     current_volume = RE
      +                          _pos;
  5634  03D0  0869               	movf	_RE_pos& (0+127),w
  5635  03D1  0022               	movlb	2	; select bank2
  5636  03D2  00E8               	movwf	??_main^(0+256)
  5637  03D3  0868               	movf	??_main^(0+256),w
  5638  03D4  0020               	movlb	0	; select bank0
  5639  03D5  00EC               	movwf	_current_volume
  5640                           
  5641                           ;main.c: 544:                     set_gainstr(current_volume);
  5642  03D6  086C               	movf	_current_volume,w
  5643  03D7  3188  2013  3180   	fcall	_set_gainstr
  5644                           
  5645                           ;main.c: 545:                     set_gains(current_volume, current_balance);
  5646  03DA  0021               	movlb	1	; select bank1
  5647  03DB  0867               	movf	_current_balance^(0+128),w
  5648  03DC  0022               	movlb	2	; select bank2
  5649  03DD  00E8               	movwf	??_main^(0+256)
  5650  03DE  0868               	movf	??_main^(0+256),w
  5651  03DF  0020               	movlb	0	; select bank0
  5652  03E0  00BA               	movwf	set_gains@bal
  5653  03E1  086C               	movf	_current_volume,w
  5654  03E2  3195  2526  3180   	fcall	_set_gains
  5655                           
  5656                           ;main.c: 546:                     lcd_disp_param();
  5657  03E5  318E  266D  3180   	fcall	_lcd_disp_param
  5658                           
  5659                           ;main.c: 547:                    puts_led(ledstr);
  5660  03E8  3020               	movlw	low _ledstr
  5661  03E9  00AF               	movwf	puts_led@str
  5662  03EA  3002               	movlw	high _ledstr
  5663  03EB  00B0               	movwf	puts_led@str+1
  5664  03EC  3195  2594  3180   	fcall	_puts_led
  5665  03EF  2C1A               	goto	l7797
  5666  03F0                     l7789:
  5667                           
  5668                           ;main.c: 552:                     i2c_writeNBytes(0x6a,&TAS_FS44K, 2 );
  5669  03F0  30AD               	movlw	(low (_TAS_FS44K| (0+256)))& (0+255)
  5670  03F1  00E8               	movwf	??_main^(0+256)
  5671  03F2  0868               	movf	??_main^(0+256),w
  5672  03F3  0020               	movlb	0	; select bank0
  5673  03F4  00AC               	movwf	i2c_writeNBytes@data
  5674  03F5  3002               	movlw	2
  5675  03F6  00AD               	movwf	i2c_writeNBytes@len
  5676  03F7  3000               	movlw	0
  5677  03F8  00AE               	movwf	i2c_writeNBytes@len+1
  5678  03F9  306A               	movlw	106
  5679  03FA  319F  273E  3180   	fcall	_i2c_writeNBytes
  5680                           
  5681                           ;main.c: 553:                     break;
  5682  03FD  2C38               	goto	l7799
  5683  03FE                     l7791:
  5684                           
  5685                           ;main.c: 555:                     i2c_writeNBytes(0x6a,&TAS_FS48K, 2 );
  5686  03FE  30AB               	movlw	(low (_TAS_FS48K| (0+256)))& (0+255)
  5687  03FF  00E8               	movwf	??_main^(0+256)
  5688  0400  0868               	movf	??_main^(0+256),w
  5689  0401  0020               	movlb	0	; select bank0
  5690  0402  00AC               	movwf	i2c_writeNBytes@data
  5691  0403  3002               	movlw	2
  5692  0404  00AD               	movwf	i2c_writeNBytes@len
  5693  0405  3000               	movlw	0
  5694  0406  00AE               	movwf	i2c_writeNBytes@len+1
  5695  0407  306A               	movlw	106
  5696  0408  319F  273E  3180   	fcall	_i2c_writeNBytes
  5697                           
  5698                           ;main.c: 556:                     break;
  5699  040B  2C38               	goto	l7799
  5700  040C                     l7793:
  5701                           
  5702                           ;main.c: 558:                     i2c_writeNBytes(0x6a,&TAS_FS96K, 2 );
  5703  040C  304A               	movlw	(low (_TAS_FS96K| (0+256)))& (0+255)
  5704  040D  00E8               	movwf	??_main^(0+256)
  5705  040E  0868               	movf	??_main^(0+256),w
  5706  040F  0020               	movlb	0	; select bank0
  5707  0410  00AC               	movwf	i2c_writeNBytes@data
  5708  0411  3002               	movlw	2
  5709  0412  00AD               	movwf	i2c_writeNBytes@len
  5710  0413  3000               	movlw	0
  5711  0414  00AE               	movwf	i2c_writeNBytes@len+1
  5712  0415  306A               	movlw	106
  5713  0416  319F  273E  3180   	fcall	_i2c_writeNBytes
  5714                           
  5715                           ;main.c: 559:                     break;
  5716  0419  2C38               	goto	l7799
  5717  041A                     l7797:
  5718  041A  3038               	movlw	56
  5719  041B  0022               	movlb	2	; select bank2
  5720  041C  00E8               	movwf	??_main^(0+256)
  5721  041D  0868               	movf	??_main^(0+256),w
  5722  041E  0020               	movlb	0	; select bank0
  5723  041F  00AC               	movwf	i2c_read1ByteRegister@reg
  5724  0420  3040               	movlw	64
  5725  0421  3191  215F  3180   	fcall	_i2c_read1ByteRegister
  5726  0424  390F               	andlw	15
  5727  0425  0022               	movlb	2	; select bank2
  5728  0426  00E9               	movwf	(??_main+1)^(0+256)
  5729  0427  01EA               	clrf	((??_main+1)^(0+256)+1)
  5730                           
  5731                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5732                           ; Switch size 1, requested type "simple"
  5733                           ; Number of cases is 1, Range of values is 0 to 0
  5734                           ; switch strategies available:
  5735                           ; Name         Instructions Cycles
  5736                           ; simple_byte            4     3 (average)
  5737                           ; direct_byte            8     6 (fixed)
  5738                           ; jumptable            260     6 (fixed)
  5739                           ;	Chosen strategy is simple_byte
  5740  0428  086A               	movf	(??_main+2)^(0+256),w
  5741  0429  3A00               	xorlw	0	; case 0
  5742  042A  1903               	skipnz
  5743  042B  2C2D               	goto	l8033
  5744  042C  2C38               	goto	l7799
  5745  042D                     l8033:
  5746                           
  5747                           ; Switch size 1, requested type "simple"
  5748                           ; Number of cases is 3, Range of values is 8 to 12
  5749                           ; switch strategies available:
  5750                           ; Name         Instructions Cycles
  5751                           ; simple_byte           10     6 (average)
  5752                           ; direct_byte           19     9 (fixed)
  5753                           ; jumptable            263     9 (fixed)
  5754                           ;	Chosen strategy is simple_byte
  5755  042D  0869               	movf	(??_main+1)^(0+256),w
  5756  042E  3A08               	xorlw	8	; case 8
  5757  042F  1903               	skipnz
  5758  0430  2BF0               	goto	l7789
  5759  0431  3A01               	xorlw	1	; case 9
  5760  0432  1903               	skipnz
  5761  0433  2BFE               	goto	l7791
  5762  0434  3A05               	xorlw	5	; case 12
  5763  0435  1903               	skipnz
  5764  0436  2C0C               	goto	l7793
  5765  0437  2C38               	goto	l7799
  5766  0438                     l7799:
  5767                           
  5768                           ;main.c: 561:          if (chk6422warning())
  5769  0438  3196  260E  3180   	fcall	_chk6422warning
  5770  043B  3A00               	xorlw	0
  5771  043C  1903               	skipnz
  5772  043D  2970               	goto	l7647
  5773                           
  5774                           ;main.c: 562:                 {;main.c: 563:                 lcd_disp_param();
  5775  043E  318E  266D  3180   	fcall	_lcd_disp_param
  5776                           
  5777                           ;main.c: 564:                 i2c_writeNBytes(0x6a, &TAS_CLEAR_FALT, 2 );
  5778  0441  3046               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
  5779  0442  0022               	movlb	2	; select bank2
  5780  0443  00E8               	movwf	??_main^(0+256)
  5781  0444  0868               	movf	??_main^(0+256),w
  5782  0445  0020               	movlb	0	; select bank0
  5783  0446  00AC               	movwf	i2c_writeNBytes@data
  5784  0447  3002               	movlw	2
  5785  0448  00AD               	movwf	i2c_writeNBytes@len
  5786  0449  3000               	movlw	0
  5787  044A  00AE               	movwf	i2c_writeNBytes@len+1
  5788  044B  306A               	movlw	106
  5789  044C  319F  273E  3180   	fcall	_i2c_writeNBytes
  5790                           
  5791                           ;main.c: 565:                 i2c_writeNBytes(0x6a, &TAS_NORMAL, 2 );
  5792  044F  3044               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
  5793  0450  0022               	movlb	2	; select bank2
  5794  0451  00E8               	movwf	??_main^(0+256)
  5795  0452  0868               	movf	??_main^(0+256),w
  5796  0453  0020               	movlb	0	; select bank0
  5797  0454  00AC               	movwf	i2c_writeNBytes@data
  5798  0455  3002               	movlw	2
  5799  0456  00AD               	movwf	i2c_writeNBytes@len
  5800  0457  3000               	movlw	0
  5801  0458  00AE               	movwf	i2c_writeNBytes@len+1
  5802  0459  306A               	movlw	106
  5803  045A  319F  273E  3180   	fcall	_i2c_writeNBytes
  5804  045D  2970               	goto	l7647
  5805  045E                     __end_of_main:
  5806                           
  5807                           	psect	text1
  5808  0C07                     __ptext1:	
  5809 ;; *************** function _set_source *****************
  5810 ;; Defined at:
  5811 ;;		line 336 in file "main.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  sourcenumber    1    wreg     unsigned char 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  sourcenumber    1   19[BANK0 ] unsigned char 
  5816 ;; Return value:  Size  Location     Type
  5817 ;;                  1    wreg      void 
  5818 ;; Registers used:
  5819 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5820 ;; Tracked objects:
  5821 ;;		On entry : 1F/3A00001
  5822 ;;		On exit  : 1F/0
  5823 ;;		Unchanged: 0/0
  5824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5827 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5828 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;Total ram usage:        4 bytes
  5830 ;; Hardware stack levels used:    1
  5831 ;; Hardware stack levels required when called:   11
  5832 ;; This function calls:
  5833 ;;		_DELAY_milliseconds
  5834 ;;		___lbmod
  5835 ;;		_i2c_writeNBytes
  5836 ;; This function is called by:
  5837 ;;		_main
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           
  5842                           ;psect for function _set_source
  5843  0C07                     _set_source:
  5844                           
  5845                           ;incstack = 0
  5846                           ; Regs used in _set_source: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5847                           ;set_source@sourcenumber stored from wreg
  5848  0C07  0020               	movlb	0	; select bank0
  5849  0C08  00B3               	movwf	set_source@sourcenumber
  5850                           
  5851                           ;main.c: 336: void set_source(unsigned char sourcenumber);main.c: 337: { switch(sourcenu
      +                          mber % 5)
  5852  0C09  2CDB               	goto	l7517
  5853  0C0A                     l7505:
  5854                           
  5855                           ;main.c: 340:                                 i2c_writeNBytes(0x40,&SRC_DIR, 2 );
  5856  0C0A  3062               	movlw	(low (_SRC_DIR| (0+256)))& (0+255)
  5857  0C0B  00B0               	movwf	??_set_source
  5858  0C0C  0830               	movf	??_set_source,w
  5859  0C0D  00AC               	movwf	i2c_writeNBytes@data
  5860  0C0E  3002               	movlw	2
  5861  0C0F  00AD               	movwf	i2c_writeNBytes@len
  5862  0C10  3000               	movlw	0
  5863  0C11  00AE               	movwf	i2c_writeNBytes@len+1
  5864  0C12  3040               	movlw	64
  5865  0C13  319F  273E  318C   	fcall	_i2c_writeNBytes
  5866                           
  5867                           ;main.c: 341:                                 i2c_writeNBytes(0x40,&DIR_COAX, 2 );
  5868  0C16  3050               	movlw	(low (_DIR_COAX| (0+256)))& (0+255)
  5869  0C17  00B0               	movwf	??_set_source
  5870  0C18  0830               	movf	??_set_source,w
  5871  0C19  00AC               	movwf	i2c_writeNBytes@data
  5872  0C1A  3002               	movlw	2
  5873  0C1B  00AD               	movwf	i2c_writeNBytes@len
  5874  0C1C  3000               	movlw	0
  5875  0C1D  00AE               	movwf	i2c_writeNBytes@len+1
  5876  0C1E  3040               	movlw	64
  5877  0C1F  319F  273E  318C   	fcall	_i2c_writeNBytes
  5878                           
  5879                           ;main.c: 342:                                 i2c_writeNBytes(0x40,&DIT_DIR, 2 );
  5880  0C22  304E               	movlw	(low (_DIT_DIR| (0+256)))& (0+255)
  5881  0C23  00B0               	movwf	??_set_source
  5882  0C24  0830               	movf	??_set_source,w
  5883  0C25  00AC               	movwf	i2c_writeNBytes@data
  5884  0C26  3002               	movlw	2
  5885  0C27  00AD               	movwf	i2c_writeNBytes@len
  5886  0C28  3000               	movlw	0
  5887  0C29  00AE               	movwf	i2c_writeNBytes@len+1
  5888  0C2A  3040               	movlw	64
  5889  0C2B  319F  273E  318C   	fcall	_i2c_writeNBytes
  5890                           
  5891                           ;main.c: 343:                                 i2c_writeNBytes(0x40,&AUXSRC_DIR, 2 );
  5892  0C2E  3058               	movlw	(low (_AUXSRC_DIR| (0+256)))& (0+255)
  5893  0C2F  00B0               	movwf	??_set_source
  5894  0C30  0830               	movf	??_set_source,w
  5895  0C31  00AC               	movwf	i2c_writeNBytes@data
  5896  0C32  3002               	movlw	2
  5897  0C33  00AD               	movwf	i2c_writeNBytes@len
  5898  0C34  3000               	movlw	0
  5899  0C35  00AE               	movwf	i2c_writeNBytes@len+1
  5900  0C36  3040               	movlw	64
  5901  0C37  319F  273E  318C   	fcall	_i2c_writeNBytes
  5902                           
  5903                           ;main.c: 344:                                  break;
  5904  0C3A  2CFB               	goto	l7519
  5905  0C3B                     l7507:
  5906                           
  5907                           ;main.c: 346:                                 i2c_writeNBytes(0x40,&SRC_DIR, 2 );
  5908  0C3B  3062               	movlw	(low (_SRC_DIR| (0+256)))& (0+255)
  5909  0C3C  00B0               	movwf	??_set_source
  5910  0C3D  0830               	movf	??_set_source,w
  5911  0C3E  00AC               	movwf	i2c_writeNBytes@data
  5912  0C3F  3002               	movlw	2
  5913  0C40  00AD               	movwf	i2c_writeNBytes@len
  5914  0C41  3000               	movlw	0
  5915  0C42  00AE               	movwf	i2c_writeNBytes@len+1
  5916  0C43  3040               	movlw	64
  5917  0C44  319F  273E  318C   	fcall	_i2c_writeNBytes
  5918                           
  5919                           ;main.c: 347:                                 i2c_writeNBytes(0x40,&DIR_OPT, 2 );
  5920  0C47  3052               	movlw	(low (_DIR_OPT| (0+256)))& (0+255)
  5921  0C48  00B0               	movwf	??_set_source
  5922  0C49  0830               	movf	??_set_source,w
  5923  0C4A  00AC               	movwf	i2c_writeNBytes@data
  5924  0C4B  3002               	movlw	2
  5925  0C4C  00AD               	movwf	i2c_writeNBytes@len
  5926  0C4D  3000               	movlw	0
  5927  0C4E  00AE               	movwf	i2c_writeNBytes@len+1
  5928  0C4F  3040               	movlw	64
  5929  0C50  319F  273E  318C   	fcall	_i2c_writeNBytes
  5930                           
  5931                           ;main.c: 348:                                 i2c_writeNBytes(0x40,&DIT_DIR, 2 );
  5932  0C53  304E               	movlw	(low (_DIT_DIR| (0+256)))& (0+255)
  5933  0C54  00B0               	movwf	??_set_source
  5934  0C55  0830               	movf	??_set_source,w
  5935  0C56  00AC               	movwf	i2c_writeNBytes@data
  5936  0C57  3002               	movlw	2
  5937  0C58  00AD               	movwf	i2c_writeNBytes@len
  5938  0C59  3000               	movlw	0
  5939  0C5A  00AE               	movwf	i2c_writeNBytes@len+1
  5940  0C5B  3040               	movlw	64
  5941  0C5C  319F  273E  318C   	fcall	_i2c_writeNBytes
  5942                           
  5943                           ;main.c: 349:                                 i2c_writeNBytes(0x40,&AUXSRC_DIR, 2 );
  5944  0C5F  3058               	movlw	(low (_AUXSRC_DIR| (0+256)))& (0+255)
  5945  0C60  00B0               	movwf	??_set_source
  5946  0C61  0830               	movf	??_set_source,w
  5947  0C62  00AC               	movwf	i2c_writeNBytes@data
  5948  0C63  3002               	movlw	2
  5949  0C64  00AD               	movwf	i2c_writeNBytes@len
  5950  0C65  3000               	movlw	0
  5951  0C66  00AE               	movwf	i2c_writeNBytes@len+1
  5952  0C67  3040               	movlw	64
  5953  0C68  319F  273E  318C   	fcall	_i2c_writeNBytes
  5954                           
  5955                           ;main.c: 350:                                 break;
  5956  0C6B  2CFB               	goto	l7519
  5957  0C6C                     l7509:
  5958                           
  5959                           ;main.c: 352:                                  i2c_writeNBytes(0x40,&SRC_ADC, 2 );
  5960  0C6C  3060               	movlw	(low (_SRC_ADC| (0+256)))& (0+255)
  5961  0C6D  00B0               	movwf	??_set_source
  5962  0C6E  0830               	movf	??_set_source,w
  5963  0C6F  00AC               	movwf	i2c_writeNBytes@data
  5964  0C70  3002               	movlw	2
  5965  0C71  00AD               	movwf	i2c_writeNBytes@len
  5966  0C72  3000               	movlw	0
  5967  0C73  00AE               	movwf	i2c_writeNBytes@len+1
  5968  0C74  3040               	movlw	64
  5969  0C75  319F  273E  318C   	fcall	_i2c_writeNBytes
  5970                           
  5971                           ;main.c: 353:                                  i2c_writeNBytes(0x40,&DIT_ADC, 2 );
  5972  0C78  304C               	movlw	(low (_DIT_ADC| (0+256)))& (0+255)
  5973  0C79  00B0               	movwf	??_set_source
  5974  0C7A  0830               	movf	??_set_source,w
  5975  0C7B  00AC               	movwf	i2c_writeNBytes@data
  5976  0C7C  3002               	movlw	2
  5977  0C7D  00AD               	movwf	i2c_writeNBytes@len
  5978  0C7E  3000               	movlw	0
  5979  0C7F  00AE               	movwf	i2c_writeNBytes@len+1
  5980  0C80  3040               	movlw	64
  5981  0C81  319F  273E  318C   	fcall	_i2c_writeNBytes
  5982                           
  5983                           ;main.c: 354:                                 i2c_writeNBytes(0x40,&AUXSRC_ADC, 2 );
  5984  0C84  3056               	movlw	(low (_AUXSRC_ADC| (0+256)))& (0+255)
  5985  0C85  00B0               	movwf	??_set_source
  5986  0C86  0830               	movf	??_set_source,w
  5987  0C87  00AC               	movwf	i2c_writeNBytes@data
  5988  0C88  3002               	movlw	2
  5989  0C89  00AD               	movwf	i2c_writeNBytes@len
  5990  0C8A  3000               	movlw	0
  5991  0C8B  00AE               	movwf	i2c_writeNBytes@len+1
  5992  0C8C  3040               	movlw	64
  5993  0C8D  319F  273E  318C   	fcall	_i2c_writeNBytes
  5994                           
  5995                           ;main.c: 355:                                  break;
  5996  0C90  2CFB               	goto	l7519
  5997  0C91                     l7511:
  5998                           
  5999                           ;main.c: 357:                                  i2c_writeNBytes(0x40,&SRC_LVDS, 2 );
  6000  0C91  305E               	movlw	(low (_SRC_LVDS| (0+256)))& (0+255)
  6001  0C92  00B0               	movwf	??_set_source
  6002  0C93  0830               	movf	??_set_source,w
  6003  0C94  00AC               	movwf	i2c_writeNBytes@data
  6004  0C95  3002               	movlw	2
  6005  0C96  00AD               	movwf	i2c_writeNBytes@len
  6006  0C97  3000               	movlw	0
  6007  0C98  00AE               	movwf	i2c_writeNBytes@len+1
  6008  0C99  3040               	movlw	64
  6009  0C9A  319F  273E  318C   	fcall	_i2c_writeNBytes
  6010                           
  6011                           ;main.c: 358:                                  i2c_writeNBytes(0x40,&DIT_LVDS, 2 );
  6012  0C9D  30C7               	movlw	(low (_DIT_LVDS| (0+256)))& (0+255)
  6013  0C9E  00B0               	movwf	??_set_source
  6014  0C9F  0830               	movf	??_set_source,w
  6015  0CA0  00AC               	movwf	i2c_writeNBytes@data
  6016  0CA1  3002               	movlw	2
  6017  0CA2  00AD               	movwf	i2c_writeNBytes@len
  6018  0CA3  3000               	movlw	0
  6019  0CA4  00AE               	movwf	i2c_writeNBytes@len+1
  6020  0CA5  3040               	movlw	64
  6021  0CA6  319F  273E  318C   	fcall	_i2c_writeNBytes
  6022                           
  6023                           ;main.c: 359:                                  i2c_writeNBytes(0x40,&AUXSRC_LVDS, 2 );
  6024  0CA9  3054               	movlw	(low (_AUXSRC_LVDS| (0+256)))& (0+255)
  6025  0CAA  00B0               	movwf	??_set_source
  6026  0CAB  0830               	movf	??_set_source,w
  6027  0CAC  00AC               	movwf	i2c_writeNBytes@data
  6028  0CAD  3002               	movlw	2
  6029  0CAE  00AD               	movwf	i2c_writeNBytes@len
  6030  0CAF  3000               	movlw	0
  6031  0CB0  00AE               	movwf	i2c_writeNBytes@len+1
  6032  0CB1  3040               	movlw	64
  6033  0CB2  319F  273E  318C   	fcall	_i2c_writeNBytes
  6034                           
  6035                           ;main.c: 360:                                 break;
  6036  0CB5  2CFB               	goto	l7519
  6037  0CB6                     l7513:
  6038                           
  6039                           ;main.c: 362:                                  i2c_writeNBytes(0x40,&SRC_I2S, 2 );
  6040  0CB6  305C               	movlw	(low (_SRC_I2S| (0+256)))& (0+255)
  6041  0CB7  00B0               	movwf	??_set_source
  6042  0CB8  0830               	movf	??_set_source,w
  6043  0CB9  00AC               	movwf	i2c_writeNBytes@data
  6044  0CBA  3002               	movlw	2
  6045  0CBB  00AD               	movwf	i2c_writeNBytes@len
  6046  0CBC  3000               	movlw	0
  6047  0CBD  00AE               	movwf	i2c_writeNBytes@len+1
  6048  0CBE  3040               	movlw	64
  6049  0CBF  319F  273E  318C   	fcall	_i2c_writeNBytes
  6050                           
  6051                           ;main.c: 363:                                  i2c_writeNBytes(0x40,&DIT_I2S, 2 );
  6052  0CC2  30C5               	movlw	(low (_DIT_I2S| (0+256)))& (0+255)
  6053  0CC3  00B0               	movwf	??_set_source
  6054  0CC4  0830               	movf	??_set_source,w
  6055  0CC5  00AC               	movwf	i2c_writeNBytes@data
  6056  0CC6  3002               	movlw	2
  6057  0CC7  00AD               	movwf	i2c_writeNBytes@len
  6058  0CC8  3000               	movlw	0
  6059  0CC9  00AE               	movwf	i2c_writeNBytes@len+1
  6060  0CCA  3040               	movlw	64
  6061  0CCB  319F  273E  318C   	fcall	_i2c_writeNBytes
  6062                           
  6063                           ;main.c: 364:                                 i2c_writeNBytes(0x40,&AUXSRC_AUTO, 2 );
  6064  0CCE  305A               	movlw	(low (_AUXSRC_AUTO| (0+256)))& (0+255)
  6065  0CCF  00B0               	movwf	??_set_source
  6066  0CD0  0830               	movf	??_set_source,w
  6067  0CD1  00AC               	movwf	i2c_writeNBytes@data
  6068  0CD2  3002               	movlw	2
  6069  0CD3  00AD               	movwf	i2c_writeNBytes@len
  6070  0CD4  3000               	movlw	0
  6071  0CD5  00AE               	movwf	i2c_writeNBytes@len+1
  6072  0CD6  3040               	movlw	64
  6073  0CD7  319F  273E  318C   	fcall	_i2c_writeNBytes
  6074                           
  6075                           ;main.c: 365:                                  break;
  6076  0CDA  2CFB               	goto	l7519
  6077  0CDB                     l7517:
  6078  0CDB  3005               	movlw	5
  6079  0CDC  00B0               	movwf	??_set_source
  6080  0CDD  0830               	movf	??_set_source,w
  6081  0CDE  00A3               	movwf	___lbmod@divisor
  6082  0CDF  0833               	movf	set_source@sourcenumber,w
  6083  0CE0  319E  264C  318C   	fcall	___lbmod
  6084  0CE3  00B1               	movwf	??_set_source+1
  6085  0CE4  01B2               	clrf	??_set_source+2
  6086                           
  6087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6088                           ; Switch size 1, requested type "simple"
  6089                           ; Number of cases is 1, Range of values is 0 to 0
  6090                           ; switch strategies available:
  6091                           ; Name         Instructions Cycles
  6092                           ; simple_byte            4     3 (average)
  6093                           ; direct_byte            8     6 (fixed)
  6094                           ; jumptable            260     6 (fixed)
  6095                           ;	Chosen strategy is simple_byte
  6096  0CE5  0832               	movf	??_set_source+2,w
  6097  0CE6  3A00               	xorlw	0	; case 0
  6098  0CE7  1903               	skipnz
  6099  0CE8  2CEA               	goto	l8035
  6100  0CE9  2CFB               	goto	l7519
  6101  0CEA                     l8035:
  6102                           
  6103                           ; Switch size 1, requested type "simple"
  6104                           ; Number of cases is 5, Range of values is 0 to 4
  6105                           ; switch strategies available:
  6106                           ; Name         Instructions Cycles
  6107                           ; direct_byte           16     6 (fixed)
  6108                           ; simple_byte           16     9 (average)
  6109                           ; jumptable            260     6 (fixed)
  6110                           ;	Chosen strategy is simple_byte
  6111  0CEA  0831               	movf	??_set_source+1,w
  6112  0CEB  3A00               	xorlw	0	; case 0
  6113  0CEC  1903               	skipnz
  6114  0CED  2C0A               	goto	l7505
  6115  0CEE  3A01               	xorlw	1	; case 1
  6116  0CEF  1903               	skipnz
  6117  0CF0  2C3B               	goto	l7507
  6118  0CF1  3A03               	xorlw	3	; case 2
  6119  0CF2  1903               	skipnz
  6120  0CF3  2C6C               	goto	l7509
  6121  0CF4  3A01               	xorlw	1	; case 3
  6122  0CF5  1903               	skipnz
  6123  0CF6  2C91               	goto	l7511
  6124  0CF7  3A07               	xorlw	7	; case 4
  6125  0CF8  1903               	skipnz
  6126  0CF9  2CB6               	goto	l7513
  6127  0CFA  2CFB               	goto	l7519
  6128  0CFB                     l7519:
  6129                           
  6130                           ;main.c: 367: DELAY_milliseconds(5);
  6131  0CFB  3005               	movlw	5
  6132  0CFC  00A3               	movwf	DELAY_milliseconds@milliseconds
  6133  0CFD  3000               	movlw	0
  6134  0CFE  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  6135  0CFF  319B  23CF  318C   	fcall	_DELAY_milliseconds
  6136                           
  6137                           ;main.c: 368:  i2c_writeNBytes(0x6a, &TAS_CLEAR_FALT, 2 );
  6138  0D02  3046               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
  6139  0D03  00B0               	movwf	??_set_source
  6140  0D04  0830               	movf	??_set_source,w
  6141  0D05  00AC               	movwf	i2c_writeNBytes@data
  6142  0D06  3002               	movlw	2
  6143  0D07  00AD               	movwf	i2c_writeNBytes@len
  6144  0D08  3000               	movlw	0
  6145  0D09  00AE               	movwf	i2c_writeNBytes@len+1
  6146  0D0A  306A               	movlw	106
  6147  0D0B  319F  273E  318C   	fcall	_i2c_writeNBytes
  6148                           
  6149                           ;main.c: 369: i2c_writeNBytes(0x6a, &TAS_NORMAL, 2 );
  6150  0D0E  3044               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
  6151  0D0F  00B0               	movwf	??_set_source
  6152  0D10  0830               	movf	??_set_source,w
  6153  0D11  00AC               	movwf	i2c_writeNBytes@data
  6154  0D12  3002               	movlw	2
  6155  0D13  00AD               	movwf	i2c_writeNBytes@len
  6156  0D14  3000               	movlw	0
  6157  0D15  00AE               	movwf	i2c_writeNBytes@len+1
  6158  0D16  306A               	movlw	106
  6159  0D17  319F  273E         	fcall	_i2c_writeNBytes
  6160  0D19  0008               	return
  6161  0D1A                     __end_of_set_source:
  6162                           
  6163                           	psect	text2
  6164  0813                     __ptext2:	
  6165 ;; *************** function _set_gainstr *****************
  6166 ;; Defined at:
  6167 ;;		line 135 in file "main.c"
  6168 ;; Parameters:    Size  Location     Type
  6169 ;;  gval            1    wreg     unsigned char 
  6170 ;; Auto vars:     Size  Location     Type
  6171 ;;  gval            1   59[BANK1 ] unsigned char 
  6172 ;; Return value:  Size  Location     Type
  6173 ;;                  1    wreg      void 
  6174 ;; Registers used:
  6175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6176 ;; Tracked objects:
  6177 ;;		On entry : 1F/3C00000
  6178 ;;		On exit  : 1F/0
  6179 ;;		Unchanged: 0/0
  6180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6182 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6183 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  6184 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  6185 ;;Total ram usage:        2 bytes
  6186 ;; Hardware stack levels used:    1
  6187 ;; Hardware stack levels required when called:   15
  6188 ;; This function calls:
  6189 ;;		___awdiv
  6190 ;;		_puts_led
  6191 ;;		_sprintf
  6192 ;;		_strcat
  6193 ;;		_strcpy
  6194 ;; This function is called by:
  6195 ;;		_main
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           
  6200                           ;psect for function _set_gainstr
  6201  0813                     _set_gainstr:
  6202                           
  6203                           ;incstack = 0
  6204                           ; Regs used in _set_gainstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6205                           ;set_gainstr@gval stored from wreg
  6206  0813  0021               	movlb	1	; select bank1
  6207  0814  00DB               	movwf	set_gainstr@gval^(0+128)
  6208                           
  6209                           ;main.c: 135: void set_gainstr(unsigned char gval);main.c: 136: {;main.c: 137: if (gval 
      +                          <9)
  6210  0815  3009               	movlw	9
  6211  0816  025B               	subwf	set_gainstr@gval^(0+128),w
  6212  0817  1803               	skipnc
  6213  0818  2826               	goto	l7411
  6214                           
  6215                           ;main.c: 138:          strcpy( ledstr, "OFF");
  6216  0819  3020               	movlw	low _ledstr
  6217  081A  0020               	movlb	0	; select bank0
  6218  081B  00AF               	movwf	strcpy@dest
  6219  081C  3002               	movlw	high _ledstr
  6220  081D  00B0               	movwf	strcpy@dest+1
  6221  081E  300E               	movlw	low (STR_1| (0+32768))
  6222  081F  00B1               	movwf	strcpy@src
  6223  0820  309A               	movlw	high (STR_1| (0+32768))
  6224  0821  00B2               	movwf	strcpy@src+1
  6225  0822  319E  26D1  3188   	fcall	_strcpy
  6226  0825  28AA               	goto	l1016
  6227  0826                     l7411:
  6228                           
  6229                           ;main.c: 140:          {;main.c: 141:          if (gval > 0xba)
  6230  0826  30BB               	movlw	187
  6231  0827  025B               	subwf	set_gainstr@gval^(0+128),w
  6232  0828  1C03               	skipc
  6233  0829  2872               	goto	l7427
  6234                           
  6235                           ;main.c: 142:                   {;main.c: 143:                    gain = (signed char) (
      +                          ((signed int)gval - (signed int)0x00cf)/2);
  6236  082A  3002               	movlw	2
  6237  082B  0020               	movlb	0	; select bank0
  6238  082C  00A3               	movwf	___awdiv@divisor
  6239  082D  3000               	movlw	0
  6240  082E  00A4               	movwf	___awdiv@divisor+1
  6241  082F  0021               	movlb	1	; select bank1
  6242  0830  085B               	movf	set_gainstr@gval^(0+128),w
  6243  0831  3E31               	addlw	49
  6244  0832  0020               	movlb	0	; select bank0
  6245  0833  00A5               	movwf	___awdiv@dividend
  6246  0834  30FF               	movlw	255
  6247  0835  1803               	skipnc
  6248  0836  3000               	movlw	0
  6249  0837  00A6               	movwf	___awdiv@dividend+1
  6250  0838  3193  2319  3188   	fcall	___awdiv
  6251  083B  0823               	movf	?___awdiv,w
  6252  083C  0021               	movlb	1	; select bank1
  6253  083D  00DA               	movwf	??_set_gainstr^(0+128)
  6254  083E  085A               	movf	??_set_gainstr^(0+128),w
  6255  083F  0022               	movlb	2	; select bank2
  6256  0840  00BA               	movwf	_gain^(0+256)
  6257                           
  6258                           ;main.c: 144:                    sprintf(ledstr, "%2d", (signed char)gain);
  6259  0841  3020               	movlw	low _ledstr
  6260  0842  0021               	movlb	1	; select bank1
  6261  0843  00C0               	movwf	sprintf@s^(0+128)
  6262  0844  3002               	movlw	high _ledstr
  6263  0845  00C1               	movwf	(sprintf@s^(0+128)+1)
  6264  0846  301A               	movlw	low (STR_2| (0+32768))
  6265  0847  00C2               	movwf	sprintf@fmt^(0+128)
  6266  0848  309A               	movlw	high (STR_2| (0+32768))
  6267  0849  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  6268  084A  0022               	movlb	2	; select bank2
  6269  084B  083A               	movf	_gain^(0+256),w
  6270  084C  0021               	movlb	1	; select bank1
  6271  084D  00C4               	movwf	(?_sprintf^(0+128)+4)
  6272  084E  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  6273  084F  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  6274  0850  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  6275  0851  319E  26AE  3188   	fcall	_sprintf
  6276                           
  6277                           ;main.c: 145:                    if (gval == 0xce)
  6278  0854  30CE               	movlw	206
  6279  0855  065B               	xorwf	set_gainstr@gval^(0+128),w
  6280  0856  1D03               	btfss	3,2
  6281  0857  285D               	goto	l7421
  6282                           
  6283                           ;main.c: 146:                            ledstr[0] = 0x2d;
  6284  0858  302D               	movlw	45
  6285  0859  00DA               	movwf	??_set_gainstr^(0+128)
  6286  085A  085A               	movf	??_set_gainstr^(0+128),w
  6287  085B  0024               	banksel	_ledstr
  6288  085C  00A0               	movwf	_ledstr& (0+127)
  6289  085D                     l7421:
  6290                           
  6291                           ;main.c: 147:                    if(gval & 0x01)
  6292  085D  0021               	movlb	1	; select bank1
  6293  085E  1C5B               	btfss	set_gainstr@gval^(0+128),0
  6294  085F  2869               	goto	l7425
  6295                           
  6296                           ;main.c: 148:                            strcat(ledstr, ".0 ");
  6297  0860  3020               	movlw	low _ledstr
  6298  0861  0020               	movlb	0	; select bank0
  6299  0862  00BB               	movwf	strcat@dest
  6300  0863  3002               	movlw	high _ledstr
  6301  0864  00BC               	movwf	strcat@dest+1
  6302  0865  3002               	movlw	low (STR_3| (0+32768))
  6303  0866  00BD               	movwf	strcat@src
  6304  0867  309A               	movlw	high (STR_3| (0+32768))
  6305  0868  28A6               	goto	L2
  6306  0869                     l7425:
  6307  0869  3020               	movlw	low _ledstr
  6308  086A  0020               	movlb	0	; select bank0
  6309  086B  00BB               	movwf	strcat@dest
  6310  086C  3002               	movlw	high _ledstr
  6311  086D  00BC               	movwf	strcat@dest+1
  6312  086E  3006               	movlw	low (STR_4| (0+32768))
  6313  086F  00BD               	movwf	strcat@src
  6314  0870  309A               	movlw	high (STR_4| (0+32768))
  6315  0871  28A6               	goto	L2
  6316  0872                     l7427:
  6317                           
  6318                           ;main.c: 152:                   {;main.c: 153:                   gain =(signed char)((((
      +                          int)gval - (int)0xcf))/2);
  6319  0872  3002               	movlw	2
  6320  0873  0020               	movlb	0	; select bank0
  6321  0874  00A3               	movwf	___awdiv@divisor
  6322  0875  3000               	movlw	0
  6323  0876  00A4               	movwf	___awdiv@divisor+1
  6324  0877  0021               	movlb	1	; select bank1
  6325  0878  085B               	movf	set_gainstr@gval^(0+128),w
  6326  0879  3E31               	addlw	49
  6327  087A  0020               	movlb	0	; select bank0
  6328  087B  00A5               	movwf	___awdiv@dividend
  6329  087C  30FF               	movlw	255
  6330  087D  1803               	skipnc
  6331  087E  3000               	movlw	0
  6332  087F  00A6               	movwf	___awdiv@dividend+1
  6333  0880  3193  2319  3188   	fcall	___awdiv
  6334  0883  0823               	movf	?___awdiv,w
  6335  0884  0021               	movlb	1	; select bank1
  6336  0885  00DA               	movwf	??_set_gainstr^(0+128)
  6337  0886  085A               	movf	??_set_gainstr^(0+128),w
  6338  0887  0022               	movlb	2	; select bank2
  6339  0888  00BA               	movwf	_gain^(0+256)
  6340                           
  6341                           ;main.c: 154:                   sprintf(ledstr, "%3d",(signed char)gain);
  6342  0889  3020               	movlw	low _ledstr
  6343  088A  0021               	movlb	1	; select bank1
  6344  088B  00C0               	movwf	sprintf@s^(0+128)
  6345  088C  3002               	movlw	high _ledstr
  6346  088D  00C1               	movwf	(sprintf@s^(0+128)+1)
  6347  088E  301E               	movlw	low (STR_5| (0+32768))
  6348  088F  00C2               	movwf	sprintf@fmt^(0+128)
  6349  0890  309A               	movlw	high (STR_5| (0+32768))
  6350  0891  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  6351  0892  0022               	movlb	2	; select bank2
  6352  0893  083A               	movf	_gain^(0+256),w
  6353  0894  0021               	movlb	1	; select bank1
  6354  0895  00C4               	movwf	(?_sprintf^(0+128)+4)
  6355  0896  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  6356  0897  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  6357  0898  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  6358  0899  319E  26AE  3188   	fcall	_sprintf
  6359                           
  6360                           ;main.c: 155:                   if((gval & 0x01) != 0x01)
  6361  089C  185B               	btfsc	set_gainstr@gval^(0+128),0
  6362  089D  28AA               	goto	l1016
  6363                           
  6364                           ;main.c: 156:                            strcat (ledstr, ".");
  6365  089E  3020               	movlw	low _ledstr
  6366  089F  0020               	movlb	0	; select bank0
  6367  08A0  00BB               	movwf	strcat@dest
  6368  08A1  3002               	movlw	high _ledstr
  6369  08A2  00BC               	movwf	strcat@dest+1
  6370  08A3  3026               	movlw	low (STR_6| (0+32768))
  6371  08A4  00BD               	movwf	strcat@src
  6372  08A5  309A               	movlw	high (STR_6| (0+32768))
  6373  08A6                     L2:
  6374  08A6  00BE               	movwf	strcat@src+1
  6375  08A7  319B  23E3  3188   	fcall	_strcat
  6376  08AA                     l1016:	
  6377                           ;main.c: 158:          }
  6378                           
  6379                           
  6380                           ;main.c: 159:  puts_led(ledstr);
  6381  08AA  3020               	movlw	low _ledstr
  6382  08AB  0020               	movlb	0	; select bank0
  6383  08AC  00AF               	movwf	puts_led@str
  6384  08AD  3002               	movlw	high _ledstr
  6385  08AE  00B0               	movwf	puts_led@str+1
  6386  08AF  3195  2594         	fcall	_puts_led
  6387  08B1  0008               	return
  6388  08B2                     __end_of_set_gainstr:
  6389                           
  6390                           	psect	text3
  6391  1BE3                     __ptext3:	
  6392 ;; *************** function _strcat *****************
  6393 ;; Defined at:
  6394 ;;		line 3 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/strcat.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  dest            2   27[BANK0 ] PTR unsigned char 
  6397 ;;		 -> ledstr(0), 
  6398 ;;  src             2   29[BANK0 ] PTR const unsigned char 
  6399 ;;		 -> STR_6(2), STR_4(4), STR_3(4), 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  2   27[BANK0 ] PTR unsigned char 
  6404 ;; Registers used:
  6405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 1F/3C00000
  6408 ;;		On exit  : 1F/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6414 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6415 ;;Total ram usage:        4 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    8
  6418 ;; This function calls:
  6419 ;;		_strcpy
  6420 ;;		_strlen
  6421 ;; This function is called by:
  6422 ;;		_set_gainstr
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           
  6427                           ;psect for function _strcat
  6428  1BE3                     _strcat:
  6429                           
  6430                           ;incstack = 0
  6431                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6432  1BE3  083C               	movf	strcat@dest+1,w
  6433  1BE4  00A4               	movwf	strlen@s+1
  6434  1BE5  083B               	movf	strcat@dest,w
  6435  1BE6  00A3               	movwf	strlen@s
  6436  1BE7  319C  24DF  319B   	fcall	_strlen
  6437  1BEA  0823               	movf	?_strlen,w
  6438  1BEB  073B               	addwf	strcat@dest,w
  6439  1BEC  00AF               	movwf	strcpy@dest
  6440  1BED  0824               	movf	?_strlen+1,w
  6441  1BEE  3D3C               	addwfc	strcat@dest+1,w
  6442  1BEF  00B0               	movwf	strcpy@dest+1
  6443  1BF0  083E               	movf	strcat@src+1,w
  6444  1BF1  00B2               	movwf	strcpy@src+1
  6445  1BF2  083D               	movf	strcat@src,w
  6446  1BF3  00B1               	movwf	strcpy@src
  6447  1BF4  319E  26D1         	fcall	_strcpy
  6448  1BF6  0008               	return
  6449  1BF7                     __end_of_strcat:
  6450                           
  6451                           	psect	text4
  6452  1ED1                     __ptext4:	
  6453 ;; *************** function _strcpy *****************
  6454 ;; Defined at:
  6455 ;;		line 3 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/strcpy.c"
  6456 ;; Parameters:    Size  Location     Type
  6457 ;;  dest            2   15[BANK0 ] PTR unsigned char 
  6458 ;;		 -> ledstr(0), ledbuff(0), 
  6459 ;;  src             2   17[BANK0 ] PTR const unsigned char 
  6460 ;;		 -> led_i2s_dir(14), STR_6(2), STR_4(4), STR_3(4), 
  6461 ;;		 -> STR_1(4), 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  d               2   25[BANK0 ] PTR unsigned char 
  6464 ;;		 -> ledstr(0), ledbuff(0), 
  6465 ;;  s               2   23[BANK0 ] PTR const unsigned char 
  6466 ;;		 -> led_i2s_dir(14), STR_6(2), STR_4(4), STR_3(4), 
  6467 ;;		 -> STR_1(4), 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  2   15[BANK0 ] PTR unsigned char 
  6470 ;; Registers used:
  6471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  6472 ;; Tracked objects:
  6473 ;;		On entry : 1F/3900000
  6474 ;;		On exit  : 1F/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6477 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6478 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6479 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6480 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6481 ;;Total ram usage:       12 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    7
  6484 ;; This function calls:
  6485 ;;		Nothing
  6486 ;; This function is called by:
  6487 ;;		_set_gainstr
  6488 ;;		_main
  6489 ;;		_strcat
  6490 ;; This function uses a non-reentrant model
  6491 ;;
  6492                           
  6493                           
  6494                           ;psect for function _strcpy
  6495  1ED1                     _strcpy:
  6496                           
  6497                           ;incstack = 0
  6498                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  6499  1ED1  0832               	movf	strcpy@src+1,w
  6500  1ED2  00B8               	movwf	strcpy@s+1
  6501  1ED3  0831               	movf	strcpy@src,w
  6502  1ED4  00B7               	movwf	strcpy@s
  6503  1ED5  0830               	movf	strcpy@dest+1,w
  6504  1ED6  00BA               	movwf	strcpy@d+1
  6505  1ED7  082F               	movf	strcpy@dest,w
  6506  1ED8  00B9               	movwf	strcpy@d
  6507  1ED9                     l5301:
  6508  1ED9  083A               	movf	strcpy@d+1,w
  6509  1EDA  00B4               	movwf	??_strcpy+1
  6510  1EDB  0839               	movf	strcpy@d,w
  6511  1EDC  00B3               	movwf	??_strcpy
  6512  1EDD  0AB9               	incf	strcpy@d,f
  6513  1EDE  1903               	skipnz
  6514  1EDF  0ABA               	incf	strcpy@d+1,f
  6515  1EE0  0833               	movf	??_strcpy,w
  6516  1EE1  0086               	movwf	6
  6517  1EE2  0834               	movf	??_strcpy+1,w
  6518  1EE3  0087               	movwf	7
  6519  1EE4  0838               	movf	strcpy@s+1,w
  6520  1EE5  00B6               	movwf	??_strcpy+3
  6521  1EE6  0837               	movf	strcpy@s,w
  6522  1EE7  00B5               	movwf	??_strcpy+2
  6523  1EE8  0AB7               	incf	strcpy@s,f
  6524  1EE9  1903               	skipnz
  6525  1EEA  0AB8               	incf	strcpy@s+1,f
  6526  1EEB  0835               	movf	??_strcpy+2,w
  6527  1EEC  0084               	movwf	4
  6528  1EED  0836               	movf	??_strcpy+3,w
  6529  1EEE  0085               	movwf	5
  6530  1EEF  0800               	movf	0,w	;code access
  6531  1EF0  3FC0               	movwi [0]fsr1
  6532  1EF1  0889               	movf	9,f
  6533  1EF2  1903               	btfsc	3,2
  6534  1EF3  0008               	return
  6535  1EF4  2ED9               	goto	l5301
  6536  1EF5                     __end_of_strcpy:
  6537                           
  6538                           	psect	text5
  6539  1594                     __ptext5:	
  6540 ;; *************** function _puts_led *****************
  6541 ;; Defined at:
  6542 ;;		line 99 in file "main.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  str             2   15[BANK0 ] PTR unsigned char 
  6545 ;;		 -> STR_16(13), STR_15(4), STR_12(13), STR_11(4), 
  6546 ;;		 -> led_src_name(35), STR_10(13), STR_9(4), STR_8(4), 
  6547 ;;		 -> ledstr(0), ledbuff(0), 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;  cpoint          2   18[BANK0 ] PTR unsigned char 
  6550 ;;		 -> STR_16(13), STR_15(4), STR_12(13), STR_11(4), 
  6551 ;;		 -> led_src_name(35), STR_10(13), STR_9(4), STR_8(4), 
  6552 ;;		 -> ledstr(0), ledbuff(0), 
  6553 ;; Return value:  Size  Location     Type
  6554 ;;                  1    wreg      void 
  6555 ;; Registers used:
  6556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6557 ;; Tracked objects:
  6558 ;;		On entry : 1F/3C00000
  6559 ;;		On exit  : 1F/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6562 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6563 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6564 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6565 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6566 ;;Total ram usage:        5 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    7
  6569 ;; This function calls:
  6570 ;;		Nothing
  6571 ;; This function is called by:
  6572 ;;		_set_gainstr
  6573 ;;		_main
  6574 ;; This function uses a non-reentrant model
  6575 ;;
  6576                           
  6577                           
  6578                           ;psect for function _puts_led
  6579  1594                     _puts_led:
  6580                           
  6581                           ;main.c: 99: void puts_led(char *str);main.c: 100: {;main.c: 101:     unsigned char *cpo
      +                          int;;main.c: 103: cpoint =(unsigned char *)(str);
  6582                           
  6583                           ;incstack = 0
  6584                           ; Regs used in _puts_led: [wreg-fsr1h+status,2+status,0+pclath]
  6585  1594  0830               	movf	puts_led@str+1,w
  6586  1595  00B3               	movwf	puts_led@cpoint+1
  6587  1596  082F               	movf	puts_led@str,w
  6588  1597  00B2               	movwf	puts_led@cpoint
  6589                           
  6590                           ;main.c: 104:          {;main.c: 105:             ledbuff[0] = *(cpoint++);
  6591  1598  0832               	movf	puts_led@cpoint,w
  6592  1599  0084               	movwf	4
  6593  159A  0833               	movf	puts_led@cpoint+1,w
  6594  159B  0085               	movwf	5
  6595  159C  0800               	movf	0,w	;code access
  6596  159D  00B1               	movwf	??_puts_led
  6597  159E  0831               	movf	??_puts_led,w
  6598  159F  0024               	banksel	_ledbuff
  6599  15A0  00B5               	movwf	_ledbuff& (0+127)
  6600  15A1  3001               	movlw	1
  6601  15A2  0020               	movlb	0	; select bank0
  6602  15A3  07B2               	addwf	puts_led@cpoint,f
  6603  15A4  3000               	movlw	0
  6604  15A5  3DB3               	addwfc	puts_led@cpoint+1,f
  6605                           
  6606                           ;main.c: 106:             if (*cpoint == '.')
  6607  15A6  0832               	movf	puts_led@cpoint,w
  6608  15A7  0084               	movwf	4
  6609  15A8  0833               	movf	puts_led@cpoint+1,w
  6610  15A9  0085               	movwf	5
  6611  15AA  0012               	moviw fsr0++
  6612  15AB  3A2E               	xorlw	46
  6613  15AC  1D03               	btfss	3,2
  6614  15AD  2DB9               	goto	l5553
  6615                           
  6616                           ;main.c: 107:                 {;main.c: 108:                 led_dot[0]= 0x7f;
  6617  15AE  307F               	movlw	127
  6618  15AF  00B1               	movwf	??_puts_led
  6619  15B0  0831               	movf	??_puts_led,w
  6620  15B1  0023               	banksel	_led_dot
  6621  15B2  00A0               	movwf	_led_dot& (0+127)
  6622                           
  6623                           ;main.c: 109:                 ++cpoint;
  6624  15B3  3001               	movlw	1
  6625  15B4  0020               	movlb	0	; select bank0
  6626  15B5  07B2               	addwf	puts_led@cpoint,f
  6627  15B6  3000               	movlw	0
  6628  15B7  3DB3               	addwfc	puts_led@cpoint+1,f
  6629                           
  6630                           ;main.c: 110:                 }
  6631  15B8  2DBE               	goto	l5555
  6632  15B9                     l5553:
  6633                           
  6634                           ;main.c: 112:                 led_dot[0]= 0xff;
  6635  15B9  30FF               	movlw	255
  6636  15BA  00B1               	movwf	??_puts_led
  6637  15BB  0831               	movf	??_puts_led,w
  6638  15BC  0023               	banksel	_led_dot
  6639  15BD  00A0               	movwf	_led_dot& (0+127)
  6640  15BE                     l5555:
  6641                           
  6642                           ;main.c: 113:              ledbuff[1] = *(cpoint++);
  6643  15BE  0020               	movlb	0	; select bank0
  6644  15BF  0832               	movf	puts_led@cpoint,w
  6645  15C0  0084               	movwf	4
  6646  15C1  0833               	movf	puts_led@cpoint+1,w
  6647  15C2  0085               	movwf	5
  6648  15C3  0800               	movf	0,w	;code access
  6649  15C4  00B1               	movwf	??_puts_led
  6650  15C5  3036               	movlw	low (_ledbuff+1)
  6651  15C6  0086               	movwf	6
  6652  15C7  3002               	movlw	high (_ledbuff+1)
  6653  15C8  0087               	movwf	7
  6654  15C9  0831               	movf	??_puts_led,w
  6655  15CA  0081               	movwf	1
  6656  15CB  3001               	movlw	1
  6657  15CC  07B2               	addwf	puts_led@cpoint,f
  6658  15CD  3000               	movlw	0
  6659  15CE  3DB3               	addwfc	puts_led@cpoint+1,f
  6660                           
  6661                           ;main.c: 114:             if (*cpoint == '.')
  6662  15CF  0832               	movf	puts_led@cpoint,w
  6663  15D0  0084               	movwf	4
  6664  15D1  0833               	movf	puts_led@cpoint+1,w
  6665  15D2  0085               	movwf	5
  6666  15D3  0012               	moviw fsr0++
  6667  15D4  3A2E               	xorlw	46
  6668  15D5  1D03               	btfss	3,2
  6669  15D6  2DE2               	goto	l5565
  6670                           
  6671                           ;main.c: 115:                 {;main.c: 116:                 led_dot[1]= 0x7f;
  6672  15D7  30A1               	movlw	low (_led_dot+1)
  6673  15D8  0086               	movwf	6
  6674  15D9  3001               	movlw	high (_led_dot+1)
  6675  15DA  0087               	movwf	7
  6676  15DB  307F               	movlw	127
  6677  15DC  0081               	movwf	1
  6678                           
  6679                           ;main.c: 117:                 ++cpoint;
  6680  15DD  3001               	movlw	1
  6681  15DE  07B2               	addwf	puts_led@cpoint,f
  6682  15DF  3000               	movlw	0
  6683  15E0  3DB3               	addwfc	puts_led@cpoint+1,f
  6684                           
  6685                           ;main.c: 118:                 }
  6686  15E1  2DE8               	goto	l5567
  6687  15E2                     l5565:
  6688                           
  6689                           ;main.c: 120:                 led_dot[1]= 0xff;
  6690  15E2  30A1               	movlw	low (_led_dot+1)
  6691  15E3  0086               	movwf	6
  6692  15E4  3001               	movlw	high (_led_dot+1)
  6693  15E5  0087               	movwf	7
  6694  15E6  30FF               	movlw	255
  6695  15E7  0081               	movwf	1
  6696  15E8                     l5567:
  6697                           
  6698                           ;main.c: 121:              ledbuff[2] = *(cpoint++);
  6699  15E8  0832               	movf	puts_led@cpoint,w
  6700  15E9  0084               	movwf	4
  6701  15EA  0833               	movf	puts_led@cpoint+1,w
  6702  15EB  0085               	movwf	5
  6703  15EC  0800               	movf	0,w	;code access
  6704  15ED  00B1               	movwf	??_puts_led
  6705  15EE  3037               	movlw	low (_ledbuff+2)
  6706  15EF  0086               	movwf	6
  6707  15F0  3002               	movlw	high (_ledbuff+2)
  6708  15F1  0087               	movwf	7
  6709  15F2  0831               	movf	??_puts_led,w
  6710  15F3  0081               	movwf	1
  6711  15F4  3001               	movlw	1
  6712  15F5  07B2               	addwf	puts_led@cpoint,f
  6713  15F6  3000               	movlw	0
  6714  15F7  3DB3               	addwfc	puts_led@cpoint+1,f
  6715                           
  6716                           ;main.c: 122:             if (*cpoint == '.')
  6717  15F8  0832               	movf	puts_led@cpoint,w
  6718  15F9  0084               	movwf	4
  6719  15FA  0833               	movf	puts_led@cpoint+1,w
  6720  15FB  0085               	movwf	5
  6721  15FC  0012               	moviw fsr0++
  6722  15FD  3A2E               	xorlw	46
  6723  15FE  1D03               	btfss	3,2
  6724  15FF  2E07               	goto	l5575
  6725                           
  6726                           ;main.c: 123:                 {;main.c: 124:                 led_dot[2]= 0x7f;
  6727  1600  30A2               	movlw	low (_led_dot+2)
  6728  1601  0086               	movwf	6
  6729  1602  3001               	movlw	high (_led_dot+2)
  6730  1603  0087               	movwf	7
  6731  1604  307F               	movlw	127
  6732  1605  0081               	movwf	1
  6733                           
  6734                           ;main.c: 126:                 }
  6735  1606  0008               	return
  6736  1607                     l5575:
  6737                           
  6738                           ;main.c: 128:                 led_dot[2]= 0xff;
  6739  1607  30A2               	movlw	low (_led_dot+2)
  6740  1608  0086               	movwf	6
  6741  1609  3001               	movlw	high (_led_dot+2)
  6742  160A  0087               	movwf	7
  6743  160B  30FF               	movlw	255
  6744  160C  0081               	movwf	1
  6745  160D  0008               	return
  6746  160E                     __end_of_puts_led:
  6747                           
  6748                           	psect	text6
  6749  1319                     __ptext6:	
  6750 ;; *************** function ___awdiv *****************
  6751 ;; Defined at:
  6752 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/awdiv.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  divisor         2    3[BANK0 ] int 
  6755 ;;  dividend        2    5[BANK0 ] int 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  quotient        2   10[BANK0 ] int 
  6758 ;;  sign            1    9[BANK0 ] unsigned char 
  6759 ;;  counter         1    8[BANK0 ] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  2    3[BANK0 ] int 
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0
  6764 ;; Tracked objects:
  6765 ;;		On entry : 1F/3C00000
  6766 ;;		On exit  : 1F/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6769 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6773 ;;Total ram usage:        9 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    7
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_set_gainstr
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           
  6784                           ;psect for function ___awdiv
  6785  1319                     ___awdiv:
  6786                           
  6787                           ;incstack = 0
  6788                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6789  1319  01A9               	clrf	___awdiv@sign
  6790  131A  1FA4               	btfss	___awdiv@divisor+1,7
  6791  131B  2B23               	goto	l5601
  6792  131C  09A3               	comf	___awdiv@divisor,f
  6793  131D  09A4               	comf	___awdiv@divisor+1,f
  6794  131E  0AA3               	incf	___awdiv@divisor,f
  6795  131F  1903               	skipnz
  6796  1320  0AA4               	incf	___awdiv@divisor+1,f
  6797  1321  01A9               	clrf	___awdiv@sign
  6798  1322  0AA9               	incf	___awdiv@sign,f
  6799  1323                     l5601:
  6800  1323  1FA6               	btfss	___awdiv@dividend+1,7
  6801  1324  2B2E               	goto	l5607
  6802  1325  09A5               	comf	___awdiv@dividend,f
  6803  1326  09A6               	comf	___awdiv@dividend+1,f
  6804  1327  0AA5               	incf	___awdiv@dividend,f
  6805  1328  1903               	skipnz
  6806  1329  0AA6               	incf	___awdiv@dividend+1,f
  6807  132A  3001               	movlw	1
  6808  132B  00A7               	movwf	??___awdiv
  6809  132C  0827               	movf	??___awdiv,w
  6810  132D  06A9               	xorwf	___awdiv@sign,f
  6811  132E                     l5607:
  6812  132E  01AA               	clrf	___awdiv@quotient
  6813  132F  01AB               	clrf	___awdiv@quotient+1
  6814  1330  0823               	movf	___awdiv@divisor,w
  6815  1331  0424               	iorwf	___awdiv@divisor+1,w
  6816  1332  1903               	btfsc	3,2
  6817  1333  2B5D               	goto	l5629
  6818  1334  01A8               	clrf	___awdiv@counter
  6819  1335  0AA8               	incf	___awdiv@counter,f
  6820  1336                     l5617:
  6821  1336  1BA4               	btfsc	___awdiv@divisor+1,7
  6822  1337  2B42               	goto	l5619
  6823  1338  3001               	movlw	1
  6824  1339                     u3775:
  6825  1339  35A3               	lslf	___awdiv@divisor,f
  6826  133A  0DA4               	rlf	___awdiv@divisor+1,f
  6827  133B  0B89               	decfsz	9,f
  6828  133C  2B39               	goto	u3775
  6829  133D  3001               	movlw	1
  6830  133E  00A7               	movwf	??___awdiv
  6831  133F  0827               	movf	??___awdiv,w
  6832  1340  07A8               	addwf	___awdiv@counter,f
  6833  1341  2B36               	goto	l5617
  6834  1342                     l5619:
  6835  1342  3001               	movlw	1
  6836  1343                     u3795:
  6837  1343  35AA               	lslf	___awdiv@quotient,f
  6838  1344  0DAB               	rlf	___awdiv@quotient+1,f
  6839  1345  0B89               	decfsz	9,f
  6840  1346  2B43               	goto	u3795
  6841  1347  0824               	movf	___awdiv@divisor+1,w
  6842  1348  0226               	subwf	___awdiv@dividend+1,w
  6843  1349  1D03               	skipz
  6844  134A  2B4D               	goto	u3805
  6845  134B  0823               	movf	___awdiv@divisor,w
  6846  134C  0225               	subwf	___awdiv@dividend,w
  6847  134D                     u3805:
  6848  134D  1C03               	skipc
  6849  134E  2B54               	goto	l5625
  6850  134F  0823               	movf	___awdiv@divisor,w
  6851  1350  02A5               	subwf	___awdiv@dividend,f
  6852  1351  0824               	movf	___awdiv@divisor+1,w
  6853  1352  3BA6               	subwfb	___awdiv@dividend+1,f
  6854  1353  142A               	bsf	___awdiv@quotient,0
  6855  1354                     l5625:
  6856  1354  3001               	movlw	1
  6857  1355                     u3815:
  6858  1355  36A4               	lsrf	___awdiv@divisor+1,f
  6859  1356  0CA3               	rrf	___awdiv@divisor,f
  6860  1357  0B89               	decfsz	9,f
  6861  1358  2B55               	goto	u3815
  6862  1359  3001               	movlw	1
  6863  135A  02A8               	subwf	___awdiv@counter,f
  6864  135B  1D03               	btfss	3,2
  6865  135C  2B42               	goto	l5619
  6866  135D                     l5629:
  6867  135D  0829               	movf	___awdiv@sign,w
  6868  135E  1903               	btfsc	3,2
  6869  135F  2B65               	goto	l5633
  6870  1360  09AA               	comf	___awdiv@quotient,f
  6871  1361  09AB               	comf	___awdiv@quotient+1,f
  6872  1362  0AAA               	incf	___awdiv@quotient,f
  6873  1363  1903               	skipnz
  6874  1364  0AAB               	incf	___awdiv@quotient+1,f
  6875  1365                     l5633:
  6876  1365  082B               	movf	___awdiv@quotient+1,w
  6877  1366  00A4               	movwf	?___awdiv+1
  6878  1367  082A               	movf	___awdiv@quotient,w
  6879  1368  00A3               	movwf	?___awdiv
  6880  1369  0008               	return
  6881  136A                     __end_of___awdiv:
  6882                           
  6883                           	psect	text7
  6884  1526                     __ptext7:	
  6885 ;; *************** function _set_gains *****************
  6886 ;; Defined at:
  6887 ;;		line 314 in file "main.c"
  6888 ;; Parameters:    Size  Location     Type
  6889 ;;  vol             1    wreg     unsigned char 
  6890 ;;  bal             1   26[BANK0 ] char 
  6891 ;; Auto vars:     Size  Location     Type
  6892 ;;  vol             1   28[BANK0 ] unsigned char 
  6893 ;; Return value:  Size  Location     Type
  6894 ;;                  1    wreg      void 
  6895 ;; Registers used:
  6896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6897 ;; Tracked objects:
  6898 ;;		On entry : 1F/3A00000
  6899 ;;		On exit  : 1F/0
  6900 ;;		Unchanged: 0/0
  6901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6902 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6903 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6904 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6905 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6906 ;;Total ram usage:        3 bytes
  6907 ;; Hardware stack levels used:    1
  6908 ;; Hardware stack levels required when called:   11
  6909 ;; This function calls:
  6910 ;;		_abs
  6911 ;;		_i2c_writeNBytes
  6912 ;; This function is called by:
  6913 ;;		_main
  6914 ;; This function uses a non-reentrant model
  6915 ;;
  6916                           
  6917                           
  6918                           ;psect for function _set_gains
  6919  1526                     _set_gains:
  6920                           
  6921                           ;incstack = 0
  6922                           ; Regs used in _set_gains: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6923                           ;set_gains@vol stored from wreg
  6924  1526  00BC               	movwf	set_gains@vol
  6925                           
  6926                           ;main.c: 314: void set_gains(unsigned char vol, signed char bal);main.c: 315: {;main.c: 
      +                          316:  if (bal < 0)
  6927  1527  1FBA               	btfss	set_gains@bal,7
  6928  1528  2D63               	goto	l7491
  6929                           
  6930                           ;main.c: 317:     {;main.c: 318:      tasbuff[0] = 0x05;
  6931  1529  3005               	movlw	5
  6932  152A  00BB               	movwf	??_set_gains
  6933  152B  083B               	movf	??_set_gains,w
  6934  152C  0022               	movlb	2	; select bank2
  6935  152D  00C2               	movwf	_tasbuff^(0+256)
  6936                           
  6937                           ;main.c: 319:      tasbuff[1] =vol;
  6938  152E  0020               	movlb	0	; select bank0
  6939  152F  083C               	movf	set_gains@vol,w
  6940  1530  00BB               	movwf	??_set_gains
  6941  1531  083B               	movf	??_set_gains,w
  6942  1532  0022               	movlb	2	; select bank2
  6943  1533  00C3               	movwf	(_tasbuff^(0+256)+1)
  6944                           
  6945                           ;main.c: 320:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
  6946  1534  3042               	movlw	(low (_tasbuff| (0+256)))& (0+255)
  6947  1535  0020               	movlb	0	; select bank0
  6948  1536  00BB               	movwf	??_set_gains
  6949  1537  083B               	movf	??_set_gains,w
  6950  1538  00AC               	movwf	i2c_writeNBytes@data
  6951  1539  3002               	movlw	2
  6952  153A  00AD               	movwf	i2c_writeNBytes@len
  6953  153B  3000               	movlw	0
  6954  153C  00AE               	movwf	i2c_writeNBytes@len+1
  6955  153D  306A               	movlw	106
  6956  153E  319F  273E  3195   	fcall	_i2c_writeNBytes
  6957                           
  6958                           ;main.c: 321:     tasbuff[0] = 0x06;
  6959  1541  3006               	movlw	6
  6960  1542  00BB               	movwf	??_set_gains
  6961  1543  083B               	movf	??_set_gains,w
  6962  1544  0022               	movlb	2	; select bank2
  6963  1545  00C2               	movwf	_tasbuff^(0+256)
  6964                           
  6965                           ;main.c: 322:     tasbuff[1] = vol - abs(bal);
  6966  1546  0020               	movlb	0	; select bank0
  6967  1547  083A               	movf	set_gains@bal,w
  6968  1548  00B6               	movwf	abs@a
  6969  1549  01B7               	clrf	abs@a+1
  6970  154A  1BB6               	btfsc	abs@a,7
  6971  154B  03B7               	decf	abs@a+1,f
  6972  154C  319D  250E  3195   	fcall	_abs
  6973  154F  0020               	movlb	0	; select bank0
  6974  1550  0836               	movf	?_abs,w
  6975  1551  023C               	subwf	set_gains@vol,w
  6976  1552  00BB               	movwf	??_set_gains
  6977  1553  083B               	movf	??_set_gains,w
  6978  1554  0022               	movlb	2	; select bank2
  6979  1555  00C3               	movwf	(_tasbuff^(0+256)+1)
  6980                           
  6981                           ;main.c: 323:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
  6982  1556  3042               	movlw	(low (_tasbuff| (0+256)))& (0+255)
  6983  1557  0020               	movlb	0	; select bank0
  6984  1558  00BB               	movwf	??_set_gains
  6985  1559  083B               	movf	??_set_gains,w
  6986  155A  00AC               	movwf	i2c_writeNBytes@data
  6987  155B  3002               	movlw	2
  6988  155C  00AD               	movwf	i2c_writeNBytes@len
  6989  155D  3000               	movlw	0
  6990  155E  00AE               	movwf	i2c_writeNBytes@len+1
  6991  155F  306A               	movlw	106
  6992  1560  319F  273E         	fcall	_i2c_writeNBytes
  6993                           
  6994                           ;main.c: 324:     }
  6995  1562  0008               	return
  6996  1563                     l7491:
  6997                           
  6998                           ;main.c: 326:     {;main.c: 327:      tasbuff[0] = 0x05;
  6999  1563  3005               	movlw	5
  7000  1564  00BB               	movwf	??_set_gains
  7001  1565  083B               	movf	??_set_gains,w
  7002  1566  0022               	movlb	2	; select bank2
  7003  1567  00C2               	movwf	_tasbuff^(0+256)
  7004                           
  7005                           ;main.c: 328:      tasbuff[1] =vol - bal;
  7006  1568  0020               	movlb	0	; select bank0
  7007  1569  083A               	movf	set_gains@bal,w
  7008  156A  023C               	subwf	set_gains@vol,w
  7009  156B  00BB               	movwf	??_set_gains
  7010  156C  083B               	movf	??_set_gains,w
  7011  156D  0022               	movlb	2	; select bank2
  7012  156E  00C3               	movwf	(_tasbuff^(0+256)+1)
  7013                           
  7014                           ;main.c: 329:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
  7015  156F  3042               	movlw	(low (_tasbuff| (0+256)))& (0+255)
  7016  1570  0020               	movlb	0	; select bank0
  7017  1571  00BB               	movwf	??_set_gains
  7018  1572  083B               	movf	??_set_gains,w
  7019  1573  00AC               	movwf	i2c_writeNBytes@data
  7020  1574  3002               	movlw	2
  7021  1575  00AD               	movwf	i2c_writeNBytes@len
  7022  1576  3000               	movlw	0
  7023  1577  00AE               	movwf	i2c_writeNBytes@len+1
  7024  1578  306A               	movlw	106
  7025  1579  319F  273E  3195   	fcall	_i2c_writeNBytes
  7026                           
  7027                           ;main.c: 330:     tasbuff[0] = 0x06;
  7028  157C  3006               	movlw	6
  7029  157D  00BB               	movwf	??_set_gains
  7030  157E  083B               	movf	??_set_gains,w
  7031  157F  0022               	movlb	2	; select bank2
  7032  1580  00C2               	movwf	_tasbuff^(0+256)
  7033                           
  7034                           ;main.c: 331:     tasbuff[1] = vol ;
  7035  1581  0020               	movlb	0	; select bank0
  7036  1582  083C               	movf	set_gains@vol,w
  7037  1583  00BB               	movwf	??_set_gains
  7038  1584  083B               	movf	??_set_gains,w
  7039  1585  0022               	movlb	2	; select bank2
  7040  1586  00C3               	movwf	(_tasbuff^(0+256)+1)
  7041                           
  7042                           ;main.c: 332:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
  7043  1587  3042               	movlw	(low (_tasbuff| (0+256)))& (0+255)
  7044  1588  0020               	movlb	0	; select bank0
  7045  1589  00BB               	movwf	??_set_gains
  7046  158A  083B               	movf	??_set_gains,w
  7047  158B  00AC               	movwf	i2c_writeNBytes@data
  7048  158C  3002               	movlw	2
  7049  158D  00AD               	movwf	i2c_writeNBytes@len
  7050  158E  3000               	movlw	0
  7051  158F  00AE               	movwf	i2c_writeNBytes@len+1
  7052  1590  306A               	movlw	106
  7053  1591  319F  273E         	fcall	_i2c_writeNBytes
  7054  1593  0008               	return
  7055  1594                     __end_of_set_gains:
  7056                           
  7057                           	psect	text8
  7058  0E6D                     __ptext8:	
  7059 ;; *************** function _lcd_disp_param *****************
  7060 ;; Defined at:
  7061 ;;		line 40 in file "disp_param.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;		None
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  prail           1    6[BANK6 ] unsigned char 
  7066 ;;  ilim            1    5[BANK6 ] unsigned char 
  7067 ;;  clip            1    4[BANK6 ] unsigned char 
  7068 ;;  otwarn          1    3[BANK6 ] unsigned char 
  7069 ;;  otshut          1    2[BANK6 ] unsigned char 
  7070 ;;  ocdc            1    1[BANK6 ] unsigned char 
  7071 ;;  pfspo           1    0[BANK6 ] unsigned char 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 1D/3C00000
  7078 ;;		On exit  : 1F/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7082 ;;      Locals:         0       0       0       0       0       0       0       9       0       0       0       0       
      +0       0
  7083 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7084 ;;      Totals:         0       0      12       0       0       0       0       9       0       0       0       0       
      +0       0
  7085 ;;Total ram usage:       21 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:   15
  7088 ;; This function calls:
  7089 ;;		___lbmod
  7090 ;;		___wmul
  7091 ;;		_i2c_lcd_puts
  7092 ;;		_i2c_lcd_set_cursor_pos
  7093 ;;		_i2c_read1ByteRegister
  7094 ;;		_sprintf
  7095 ;; This function is called by:
  7096 ;;		_main
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _lcd_disp_param
  7102  0E6D                     _lcd_disp_param:
  7103                           
  7104                           ;disp_param.c: 42: uint8_t pfspo,ocdc, otshut, otwarn,clip,ilim,prail;;disp_param.c: 44:
      +                               i2c_lcd_set_cursor_pos(0, 0);
  7105                           
  7106                           ;incstack = 0
  7107                           ; Regs used in _lcd_disp_param: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7108  0E6D  0020               	movlb	0	; select bank0
  7109  0E6E  01B7               	clrf	i2c_lcd_set_cursor_pos@line
  7110  0E6F  3000               	movlw	0
  7111  0E70  3190  20EA  318E   	fcall	_i2c_lcd_set_cursor_pos
  7112                           
  7113                           ;disp_param.c: 45:     sprintf(lcdbuff,"SOURCE:%s", lcd_src_name[current_source % 5]);
  7114  0E73  30A0               	movlw	low _lcdbuff
  7115  0E74  0021               	movlb	1	; select bank1
  7116  0E75  00C0               	movwf	sprintf@s^(0+128)
  7117  0E76  3002               	movlw	high _lcdbuff
  7118  0E77  00C1               	movwf	(sprintf@s^(0+128)+1)
  7119  0E78  30F3               	movlw	low (STR_17| (0+32768))
  7120  0E79  00C2               	movwf	sprintf@fmt^(0+128)
  7121  0E7A  3099               	movlw	high (STR_17| (0+32768))
  7122  0E7B  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  7123  0E7C  3005               	movlw	5
  7124  0E7D  00DA               	movwf	??_lcd_disp_param^(0+128)
  7125  0E7E  085A               	movf	??_lcd_disp_param^(0+128),w
  7126  0E7F  0020               	movlb	0	; select bank0
  7127  0E80  00A3               	movwf	___lbmod@divisor
  7128  0E81  0021               	banksel	_current_source
  7129  0E82  0868               	movf	_current_source& (0+127),w
  7130  0E83  319E  264C  318E   	fcall	___lbmod
  7131  0E86  0021               	movlb	1	; select bank1
  7132  0E87  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  7133  0E88  01DC               	clrf	((??_lcd_disp_param+1)^(0+128)+1)
  7134  0E89  35DB               	lslf	(??_lcd_disp_param+1)^(0+128),f
  7135  0E8A  0DDC               	rlf	((??_lcd_disp_param+1)^(0+128)+1),f
  7136  0E8B  35DB               	lslf	(??_lcd_disp_param+1)^(0+128),f
  7137  0E8C  0DDC               	rlf	((??_lcd_disp_param+1)^(0+128)+1),f
  7138  0E8D  35DB               	lslf	(??_lcd_disp_param+1)^(0+128),f
  7139  0E8E  0DDC               	rlf	((??_lcd_disp_param+1)^(0+128)+1),f
  7140  0E8F  30F9               	movlw	low (_lcd_src_name| (0+32768))
  7141  0E90  00DD               	movwf	(??_lcd_disp_param+3)^(0+128)
  7142  0E91  3098               	movlw	high (_lcd_src_name| (0+32768))
  7143  0E92  00DE               	movwf	((??_lcd_disp_param+3)^(0+128)+1)
  7144  0E93  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7145  0E94  075D               	addwf	(??_lcd_disp_param+3)^(0+128),w
  7146  0E95  00C4               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  7147  0E96  085C               	movf	(??_lcd_disp_param+2)^(0+128),w
  7148  0E97  3D5E               	addwfc	(??_lcd_disp_param+4)^(0+128),w
  7149  0E98  00C5               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  7150  0E99  319E  26AE  318E   	fcall	_sprintf
  7151                           
  7152                           ;disp_param.c: 46:     i2c_lcd_puts(lcdbuff);
  7153  0E9C  30A0               	movlw	low _lcdbuff
  7154  0E9D  0020               	movlb	0	; select bank0
  7155  0E9E  00B7               	movwf	i2c_lcd_puts@s
  7156  0E9F  3002               	movlw	high _lcdbuff
  7157  0EA0  00B8               	movwf	i2c_lcd_puts@s+1
  7158  0EA1  319C  24B4  318E   	fcall	_i2c_lcd_puts
  7159                           
  7160                           ;disp_param.c: 48:    i2c_lcd_set_cursor_pos(0, 1);
  7161  0EA4  01B7               	clrf	i2c_lcd_set_cursor_pos@line
  7162  0EA5  0AB7               	incf	i2c_lcd_set_cursor_pos@line,f
  7163  0EA6  3000               	movlw	0
  7164  0EA7  3190  20EA  318E   	fcall	_i2c_lcd_set_cursor_pos
  7165                           
  7166                           ;disp_param.c: 49:     sprintf(lcdbuff,"AUX:%s HPF:%s", lcd_aux_name[current_direction %
      +                          2],lcd_aux_name[0]);
  7167  0EAA  3001               	movlw	1
  7168  0EAB  0021               	banksel	_current_direction
  7169  0EAC  0566               	andwf	_current_direction& (0+127),w
  7170  0EAD  0020               	movlb	0	; select bank0
  7171  0EAE  00A9               	movwf	___wmul@multiplier
  7172  0EAF  01AA               	clrf	___wmul@multiplier+1
  7173  0EB0  3007               	movlw	7
  7174  0EB1  00AB               	movwf	___wmul@multiplicand
  7175  0EB2  3000               	movlw	0
  7176  0EB3  00AC               	movwf	___wmul@multiplicand+1
  7177  0EB4  319D  25D9  318E   	fcall	___wmul
  7178  0EB7  30BC               	movlw	low (_lcd_aux_name| (0+32768))
  7179  0EB8  0021               	movlb	1	; select bank1
  7180  0EB9  00DA               	movwf	??_lcd_disp_param^(0+128)
  7181  0EBA  3099               	movlw	high (_lcd_aux_name| (0+32768))
  7182  0EBB  00DB               	movwf	(??_lcd_disp_param^(0+128)+1)
  7183  0EBC  0020               	movlb	0	; select bank0
  7184  0EBD  0829               	movf	?___wmul,w
  7185  0EBE  0021               	movlb	1	; select bank1
  7186  0EBF  075A               	addwf	??_lcd_disp_param^(0+128),w
  7187  0EC0  0026               	movlb	6	; select bank6
  7188  0EC1  00A7               	movwf	_lcd_disp_param$2844^(0+768)
  7189  0EC2  0020               	movlb	0	; select bank0
  7190  0EC3  082A               	movf	?___wmul+1,w
  7191  0EC4  0021               	movlb	1	; select bank1
  7192  0EC5  3D5B               	addwfc	(??_lcd_disp_param+1)^(0+128),w
  7193  0EC6  0026               	movlb	6	; select bank6
  7194  0EC7  00A8               	movwf	(_lcd_disp_param$2844+1)^(0+768)
  7195                           
  7196                           ;disp_param.c: 49:     sprintf(lcdbuff,"AUX:%s HPF:%s", lcd_aux_name[current_direction %
      +                          2],lcd_aux_name[0]);
  7197  0EC8  30A0               	movlw	low _lcdbuff
  7198  0EC9  0021               	movlb	1	; select bank1
  7199  0ECA  00C0               	movwf	sprintf@s^(0+128)
  7200  0ECB  3002               	movlw	high _lcdbuff
  7201  0ECC  00C1               	movwf	(sprintf@s^(0+128)+1)
  7202  0ECD  30D8               	movlw	low (STR_18| (0+32768))
  7203  0ECE  00C2               	movwf	sprintf@fmt^(0+128)
  7204  0ECF  3099               	movlw	high (STR_18| (0+32768))
  7205  0ED0  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  7206  0ED1  0026               	movlb	6	; select bank6
  7207  0ED2  0828               	movf	(_lcd_disp_param$2844+1)^(0+768),w
  7208  0ED3  0021               	movlb	1	; select bank1
  7209  0ED4  00C5               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  7210  0ED5  0026               	movlb	6	; select bank6
  7211  0ED6  0827               	movf	_lcd_disp_param$2844^(0+768),w
  7212  0ED7  0021               	movlb	1	; select bank1
  7213  0ED8  00C4               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  7214  0ED9  30BC               	movlw	low (_lcd_aux_name| (0+32768))
  7215  0EDA  00C6               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  7216  0EDB  3099               	movlw	high (_lcd_aux_name| (0+32768))
  7217  0EDC  00C7               	movwf	((low ((?_sprintf| 0+6)))^(0+128)+1)
  7218  0EDD  319E  26AE  318E   	fcall	_sprintf
  7219                           
  7220                           ;disp_param.c: 50:     i2c_lcd_puts(lcdbuff);
  7221  0EE0  30A0               	movlw	low _lcdbuff
  7222  0EE1  0020               	movlb	0	; select bank0
  7223  0EE2  00B7               	movwf	i2c_lcd_puts@s
  7224  0EE3  3002               	movlw	high _lcdbuff
  7225  0EE4  00B8               	movwf	i2c_lcd_puts@s+1
  7226  0EE5  319C  24B4  318E   	fcall	_i2c_lcd_puts
  7227                           
  7228                           ;disp_param.c: 52:     pfspo = i2c_read1ByteRegister(0x40, 0x38);
  7229  0EE8  3038               	movlw	56
  7230  0EE9  0021               	movlb	1	; select bank1
  7231  0EEA  00DA               	movwf	??_lcd_disp_param^(0+128)
  7232  0EEB  085A               	movf	??_lcd_disp_param^(0+128),w
  7233  0EEC  0020               	movlb	0	; select bank0
  7234  0EED  00AC               	movwf	i2c_read1ByteRegister@reg
  7235  0EEE  3040               	movlw	64
  7236  0EEF  3191  215F  318E   	fcall	_i2c_read1ByteRegister
  7237  0EF2  0021               	movlb	1	; select bank1
  7238  0EF3  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  7239  0EF4  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7240  0EF5  0026               	movlb	6	; select bank6
  7241  0EF6  00A0               	movwf	lcd_disp_param@pfspo^(0+768)
  7242                           
  7243                           ;disp_param.c: 53:     i2c_lcd_set_cursor_pos(0, 2);
  7244  0EF7  3002               	movlw	2
  7245  0EF8  0021               	movlb	1	; select bank1
  7246  0EF9  00DA               	movwf	??_lcd_disp_param^(0+128)
  7247  0EFA  085A               	movf	??_lcd_disp_param^(0+128),w
  7248  0EFB  0020               	movlb	0	; select bank0
  7249  0EFC  00B7               	movwf	i2c_lcd_set_cursor_pos@line
  7250  0EFD  3000               	movlw	0
  7251  0EFE  3190  20EA  318E   	fcall	_i2c_lcd_set_cursor_pos
  7252                           
  7253                           ;disp_param.c: 54:     sprintf(lcdbuff,"VOL:%3d BAL:%2d %s",current_volume, (signed char
      +                          )current_balance, lcd_fs_name[(0x0F &pfspo)]);
  7254  0F01  0026               	movlb	6	; select bank6
  7255  0F02  0820               	movf	lcd_disp_param@pfspo^(0+768),w
  7256  0F03  390F               	andlw	15
  7257  0F04  0021               	movlb	1	; select bank1
  7258  0F05  00DA               	movwf	??_lcd_disp_param^(0+128)
  7259  0F06  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
  7260  0F07  085A               	movf	??_lcd_disp_param^(0+128),w
  7261  0F08  0020               	movlb	0	; select bank0
  7262  0F09  00A9               	movwf	___wmul@multiplier
  7263  0F0A  0021               	movlb	1	; select bank1
  7264  0F0B  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7265  0F0C  0020               	movlb	0	; select bank0
  7266  0F0D  00AA               	movwf	___wmul@multiplier+1
  7267  0F0E  3007               	movlw	7
  7268  0F0F  00AB               	movwf	___wmul@multiplicand
  7269  0F10  3000               	movlw	0
  7270  0F11  00AC               	movwf	___wmul@multiplicand+1
  7271  0F12  319D  25D9  318E   	fcall	___wmul
  7272  0F15  3000               	movlw	low (_lcd_fs_name| (0+32768))
  7273  0F16  0021               	movlb	1	; select bank1
  7274  0F17  00DC               	movwf	(??_lcd_disp_param+2)^(0+128)
  7275  0F18  3098               	movlw	high (_lcd_fs_name| (0+32768))
  7276  0F19  00DD               	movwf	((??_lcd_disp_param+2)^(0+128)+1)
  7277  0F1A  0020               	movlb	0	; select bank0
  7278  0F1B  0829               	movf	?___wmul,w
  7279  0F1C  0021               	movlb	1	; select bank1
  7280  0F1D  075C               	addwf	(??_lcd_disp_param+2)^(0+128),w
  7281  0F1E  0026               	movlb	6	; select bank6
  7282  0F1F  00A7               	movwf	_lcd_disp_param$2844^(0+768)
  7283  0F20  0020               	movlb	0	; select bank0
  7284  0F21  082A               	movf	?___wmul+1,w
  7285  0F22  0021               	movlb	1	; select bank1
  7286  0F23  3D5D               	addwfc	(??_lcd_disp_param+3)^(0+128),w
  7287  0F24  0026               	movlb	6	; select bank6
  7288  0F25  00A8               	movwf	(_lcd_disp_param$2844+1)^(0+768)
  7289                           
  7290                           ;disp_param.c: 54:     sprintf(lcdbuff,"VOL:%3d BAL:%2d %s",current_volume, (signed char
      +                          )current_balance, lcd_fs_name[(0x0F &pfspo)]);
  7291  0F26  30A0               	movlw	low _lcdbuff
  7292  0F27  0021               	movlb	1	; select bank1
  7293  0F28  00C0               	movwf	sprintf@s^(0+128)
  7294  0F29  3002               	movlw	high _lcdbuff
  7295  0F2A  00C1               	movwf	(sprintf@s^(0+128)+1)
  7296  0F2B  3099               	movlw	low (STR_19| (0+32768))
  7297  0F2C  00C2               	movwf	sprintf@fmt^(0+128)
  7298  0F2D  3099               	movlw	high (STR_19| (0+32768))
  7299  0F2E  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  7300  0F2F  0020               	banksel	_current_volume
  7301  0F30  086C               	movf	_current_volume& (0+127),w
  7302  0F31  0021               	movlb	1	; select bank1
  7303  0F32  00DA               	movwf	??_lcd_disp_param^(0+128)
  7304  0F33  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
  7305  0F34  085A               	movf	??_lcd_disp_param^(0+128),w
  7306  0F35  00C4               	movwf	(?_sprintf^(0+128)+4)
  7307  0F36  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7308  0F37  00C5               	movwf	((?_sprintf+1)^(0+128)+4)
  7309  0F38  0021               	banksel	_current_balance
  7310  0F39  0867               	movf	_current_balance& (0+127),w
  7311  0F3A  0021               	movlb	1	; select bank1
  7312  0F3B  00C6               	movwf	(?_sprintf^(0+128)+6)
  7313  0F3C  01C7               	clrf	((?_sprintf+1)^(0+128)+6)
  7314  0F3D  1BC6               	btfsc	(?_sprintf^(0+128)+6),7
  7315  0F3E  03C7               	decf	((?_sprintf+1)^(0+128)+6),f
  7316  0F3F  0026               	movlb	6	; select bank6
  7317  0F40  0828               	movf	(_lcd_disp_param$2844+1)^(0+768),w
  7318  0F41  0021               	movlb	1	; select bank1
  7319  0F42  00C9               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  7320  0F43  0026               	movlb	6	; select bank6
  7321  0F44  0827               	movf	_lcd_disp_param$2844^(0+768),w
  7322  0F45  0021               	movlb	1	; select bank1
  7323  0F46  00C8               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  7324  0F47  319E  26AE  318E   	fcall	_sprintf
  7325                           
  7326                           ;disp_param.c: 55:     i2c_lcd_puts(lcdbuff);
  7327  0F4A  30A0               	movlw	low _lcdbuff
  7328  0F4B  0020               	movlb	0	; select bank0
  7329  0F4C  00B7               	movwf	i2c_lcd_puts@s
  7330  0F4D  3002               	movlw	high _lcdbuff
  7331  0F4E  00B8               	movwf	i2c_lcd_puts@s+1
  7332  0F4F  319C  24B4  318E   	fcall	_i2c_lcd_puts
  7333                           
  7334                           ;disp_param.c: 57:     ocdc = i2c_read1ByteRegister(0x6a, 0x10);
  7335  0F52  3010               	movlw	16
  7336  0F53  0021               	movlb	1	; select bank1
  7337  0F54  00DA               	movwf	??_lcd_disp_param^(0+128)
  7338  0F55  085A               	movf	??_lcd_disp_param^(0+128),w
  7339  0F56  0020               	movlb	0	; select bank0
  7340  0F57  00AC               	movwf	i2c_read1ByteRegister@reg
  7341  0F58  306A               	movlw	106
  7342  0F59  3191  215F  318E   	fcall	_i2c_read1ByteRegister
  7343  0F5C  0021               	movlb	1	; select bank1
  7344  0F5D  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  7345  0F5E  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7346  0F5F  0026               	movlb	6	; select bank6
  7347  0F60  00A1               	movwf	lcd_disp_param@ocdc^(0+768)
  7348                           
  7349                           ;disp_param.c: 58:     otwarn = i2c_read1ByteRegister(0x6a, 0x13);
  7350  0F61  3013               	movlw	19
  7351  0F62  0021               	movlb	1	; select bank1
  7352  0F63  00DA               	movwf	??_lcd_disp_param^(0+128)
  7353  0F64  085A               	movf	??_lcd_disp_param^(0+128),w
  7354  0F65  0020               	movlb	0	; select bank0
  7355  0F66  00AC               	movwf	i2c_read1ByteRegister@reg
  7356  0F67  306A               	movlw	106
  7357  0F68  3191  215F  318E   	fcall	_i2c_read1ByteRegister
  7358  0F6B  0021               	movlb	1	; select bank1
  7359  0F6C  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  7360  0F6D  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7361  0F6E  0026               	movlb	6	; select bank6
  7362  0F6F  00A3               	movwf	lcd_disp_param@otwarn^(0+768)
  7363                           
  7364                           ;disp_param.c: 59:     clip = i2c_read1ByteRegister(0x6a, 0x24);
  7365  0F70  3024               	movlw	36
  7366  0F71  0021               	movlb	1	; select bank1
  7367  0F72  00DA               	movwf	??_lcd_disp_param^(0+128)
  7368  0F73  085A               	movf	??_lcd_disp_param^(0+128),w
  7369  0F74  0020               	movlb	0	; select bank0
  7370  0F75  00AC               	movwf	i2c_read1ByteRegister@reg
  7371  0F76  306A               	movlw	106
  7372  0F77  3191  215F  318E   	fcall	_i2c_read1ByteRegister
  7373  0F7A  0021               	movlb	1	; select bank1
  7374  0F7B  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  7375  0F7C  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7376  0F7D  0026               	movlb	6	; select bank6
  7377  0F7E  00A4               	movwf	lcd_disp_param@clip^(0+768)
  7378                           
  7379                           ;disp_param.c: 60:     ilim = i2c_read1ByteRegister(0x6a, 0x25);
  7380  0F7F  3025               	movlw	37
  7381  0F80  0021               	movlb	1	; select bank1
  7382  0F81  00DA               	movwf	??_lcd_disp_param^(0+128)
  7383  0F82  085A               	movf	??_lcd_disp_param^(0+128),w
  7384  0F83  0020               	movlb	0	; select bank0
  7385  0F84  00AC               	movwf	i2c_read1ByteRegister@reg
  7386  0F85  306A               	movlw	106
  7387  0F86  3191  215F  318E   	fcall	_i2c_read1ByteRegister
  7388  0F89  0021               	movlb	1	; select bank1
  7389  0F8A  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  7390  0F8B  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7391  0F8C  0026               	movlb	6	; select bank6
  7392  0F8D  00A5               	movwf	lcd_disp_param@ilim^(0+768)
  7393                           
  7394                           ;disp_param.c: 61:     otshut = i2c_read1ByteRegister(0x6a, 0x12);
  7395  0F8E  3012               	movlw	18
  7396  0F8F  0021               	movlb	1	; select bank1
  7397  0F90  00DA               	movwf	??_lcd_disp_param^(0+128)
  7398  0F91  085A               	movf	??_lcd_disp_param^(0+128),w
  7399  0F92  0020               	movlb	0	; select bank0
  7400  0F93  00AC               	movwf	i2c_read1ByteRegister@reg
  7401  0F94  306A               	movlw	106
  7402  0F95  3191  215F  318E   	fcall	_i2c_read1ByteRegister
  7403  0F98  0021               	movlb	1	; select bank1
  7404  0F99  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  7405  0F9A  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7406  0F9B  0026               	movlb	6	; select bank6
  7407  0F9C  00A2               	movwf	lcd_disp_param@otshut^(0+768)
  7408                           
  7409                           ;disp_param.c: 62:     prail = i2c_read1ByteRegister(0x6a, 0x11);
  7410  0F9D  3011               	movlw	17
  7411  0F9E  0021               	movlb	1	; select bank1
  7412  0F9F  00DA               	movwf	??_lcd_disp_param^(0+128)
  7413  0FA0  085A               	movf	??_lcd_disp_param^(0+128),w
  7414  0FA1  0020               	movlb	0	; select bank0
  7415  0FA2  00AC               	movwf	i2c_read1ByteRegister@reg
  7416  0FA3  306A               	movlw	106
  7417  0FA4  3191  215F  318E   	fcall	_i2c_read1ByteRegister
  7418  0FA7  0021               	movlb	1	; select bank1
  7419  0FA8  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  7420  0FA9  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7421  0FAA  0026               	movlb	6	; select bank6
  7422  0FAB  00A6               	movwf	lcd_disp_param@prail^(0+768)
  7423                           
  7424                           ;disp_param.c: 63:  i2c_lcd_set_cursor_pos(0, 3);
  7425  0FAC  3003               	movlw	3
  7426  0FAD  0021               	movlb	1	; select bank1
  7427  0FAE  00DA               	movwf	??_lcd_disp_param^(0+128)
  7428  0FAF  085A               	movf	??_lcd_disp_param^(0+128),w
  7429  0FB0  0020               	movlb	0	; select bank0
  7430  0FB1  00B7               	movwf	i2c_lcd_set_cursor_pos@line
  7431  0FB2  3000               	movlw	0
  7432  0FB3  3190  20EA  318E   	fcall	_i2c_lcd_set_cursor_pos
  7433                           
  7434                           ;disp_param.c: 64:     sprintf(lcdbuff,"WAR:%02X %02X %02X %02X %02X%02X",ocdc, otshut, 
      +                          otwarn,clip,ilim,prail);
  7435  0FB6  30A0               	movlw	low _lcdbuff
  7436  0FB7  0021               	movlb	1	; select bank1
  7437  0FB8  00C0               	movwf	sprintf@s^(0+128)
  7438  0FB9  3002               	movlw	high _lcdbuff
  7439  0FBA  00C1               	movwf	(sprintf@s^(0+128)+1)
  7440  0FBB  3044               	movlw	low (STR_20| (0+32768))
  7441  0FBC  00C2               	movwf	sprintf@fmt^(0+128)
  7442  0FBD  3099               	movlw	high (STR_20| (0+32768))
  7443  0FBE  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  7444  0FBF  0026               	movlb	6	; select bank6
  7445  0FC0  0821               	movf	lcd_disp_param@ocdc^(0+768),w
  7446  0FC1  0021               	movlb	1	; select bank1
  7447  0FC2  00DA               	movwf	??_lcd_disp_param^(0+128)
  7448  0FC3  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
  7449  0FC4  085A               	movf	??_lcd_disp_param^(0+128),w
  7450  0FC5  00C4               	movwf	(?_sprintf^(0+128)+4)
  7451  0FC6  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  7452  0FC7  00C5               	movwf	((?_sprintf+1)^(0+128)+4)
  7453  0FC8  0026               	movlb	6	; select bank6
  7454  0FC9  0822               	movf	lcd_disp_param@otshut^(0+768),w
  7455  0FCA  0021               	movlb	1	; select bank1
  7456  0FCB  00DC               	movwf	(??_lcd_disp_param+2)^(0+128)
  7457  0FCC  01DD               	clrf	((??_lcd_disp_param+2)^(0+128)+1)
  7458  0FCD  085C               	movf	(??_lcd_disp_param+2)^(0+128),w
  7459  0FCE  00C6               	movwf	(?_sprintf^(0+128)+6)
  7460  0FCF  085D               	movf	(??_lcd_disp_param+3)^(0+128),w
  7461  0FD0  00C7               	movwf	((?_sprintf+1)^(0+128)+6)
  7462  0FD1  0026               	movlb	6	; select bank6
  7463  0FD2  0823               	movf	lcd_disp_param@otwarn^(0+768),w
  7464  0FD3  0021               	movlb	1	; select bank1
  7465  0FD4  00DE               	movwf	(??_lcd_disp_param+4)^(0+128)
  7466  0FD5  01DF               	clrf	((??_lcd_disp_param+4)^(0+128)+1)
  7467  0FD6  085E               	movf	(??_lcd_disp_param+4)^(0+128),w
  7468  0FD7  00C8               	movwf	(?_sprintf^(0+128)+8)
  7469  0FD8  085F               	movf	(??_lcd_disp_param+5)^(0+128),w
  7470  0FD9  00C9               	movwf	((?_sprintf+1)^(0+128)+8)
  7471  0FDA  0026               	movlb	6	; select bank6
  7472  0FDB  0824               	movf	lcd_disp_param@clip^(0+768),w
  7473  0FDC  0021               	movlb	1	; select bank1
  7474  0FDD  00E0               	movwf	(??_lcd_disp_param+6)^(0+128)
  7475  0FDE  01E1               	clrf	((??_lcd_disp_param+6)^(0+128)+1)
  7476  0FDF  0860               	movf	(??_lcd_disp_param+6)^(0+128),w
  7477  0FE0  00CA               	movwf	(?_sprintf^(0+128)+10)
  7478  0FE1  0861               	movf	(??_lcd_disp_param+7)^(0+128),w
  7479  0FE2  00CB               	movwf	((?_sprintf+1)^(0+128)+10)
  7480  0FE3  0026               	movlb	6	; select bank6
  7481  0FE4  0825               	movf	lcd_disp_param@ilim^(0+768),w
  7482  0FE5  0021               	movlb	1	; select bank1
  7483  0FE6  00E2               	movwf	(??_lcd_disp_param+8)^(0+128)
  7484  0FE7  01E3               	clrf	((??_lcd_disp_param+8)^(0+128)+1)
  7485  0FE8  0862               	movf	(??_lcd_disp_param+8)^(0+128),w
  7486  0FE9  00CC               	movwf	(?_sprintf^(0+128)+12)
  7487  0FEA  0863               	movf	(??_lcd_disp_param+9)^(0+128),w
  7488  0FEB  00CD               	movwf	((?_sprintf+1)^(0+128)+12)
  7489  0FEC  0026               	movlb	6	; select bank6
  7490  0FED  0826               	movf	lcd_disp_param@prail^(0+768),w
  7491  0FEE  0021               	movlb	1	; select bank1
  7492  0FEF  00E4               	movwf	(??_lcd_disp_param+10)^(0+128)
  7493  0FF0  01E5               	clrf	((??_lcd_disp_param+10)^(0+128)+1)
  7494  0FF1  0864               	movf	(??_lcd_disp_param+10)^(0+128),w
  7495  0FF2  00CE               	movwf	(?_sprintf^(0+128)+14)
  7496  0FF3  0865               	movf	(??_lcd_disp_param+11)^(0+128),w
  7497  0FF4  00CF               	movwf	((?_sprintf+1)^(0+128)+14)
  7498  0FF5  319E  26AE  318E   	fcall	_sprintf
  7499                           
  7500                           ;disp_param.c: 65:     i2c_lcd_puts(lcdbuff);
  7501  0FF8  30A0               	movlw	low _lcdbuff
  7502  0FF9  0020               	movlb	0	; select bank0
  7503  0FFA  00B7               	movwf	i2c_lcd_puts@s
  7504  0FFB  3002               	movlw	high _lcdbuff
  7505  0FFC  00B8               	movwf	i2c_lcd_puts@s+1
  7506  0FFD  319C  24B4         	fcall	_i2c_lcd_puts
  7507  0FFF  0008               	return
  7508  1000                     __end_of_lcd_disp_param:
  7509                           
  7510                           	psect	text9
  7511  1EAE                     __ptext9:	
  7512 ;; *************** function _sprintf *****************
  7513 ;; Defined at:
  7514 ;;		line 9 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/nf_sprintf.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;  s               2   32[BANK1 ] PTR unsigned char 
  7517 ;;		 -> lcdbuff(0), lcdbuff(41), ledstr(0), ledbuff(0), 
  7518 ;;  fmt             2   34[BANK1 ] PTR const unsigned char 
  7519 ;;		 -> STR_20(33), STR_19(19), STR_18(14), STR_17(10), 
  7520 ;;		 -> STR_14(5), STR_13(5), STR_7(20), STR_5(4), 
  7521 ;;		 -> STR_2(4), 
  7522 ;; Auto vars:     Size  Location     Type
  7523 ;;  f               6   52[BANK1 ] struct _IO_FILE
  7524 ;;  ret             2    0        int 
  7525 ;;  ap              1   51[BANK1 ] PTR void [1]
  7526 ;;		 -> ?_sprintf(2), 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  2   32[BANK1 ] int 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7531 ;; Tracked objects:
  7532 ;;		On entry : 1F/1
  7533 ;;		On exit  : 1F/1
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7536 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;Total ram usage:       26 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:   14
  7543 ;; This function calls:
  7544 ;;		_vfprintf
  7545 ;; This function is called by:
  7546 ;;		_set_gainstr
  7547 ;;		_main
  7548 ;;		_lcd_disp_param
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           
  7553                           ;psect for function _sprintf
  7554  1EAE                     _sprintf:
  7555                           
  7556                           ;incstack = 0
  7557                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7558  1EAE  30C4               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  7559  1EAF  00D0               	movwf	??_sprintf^(0+128)
  7560  1EB0  0850               	movf	??_sprintf^(0+128),w
  7561  1EB1  00D3               	movwf	sprintf@ap^(0+128)
  7562  1EB2  0841               	movf	(sprintf@s+1)^(0+128),w
  7563  1EB3  00D5               	movwf	(sprintf@f+1)^(0+128)
  7564  1EB4  0840               	movf	sprintf@s^(0+128),w
  7565  1EB5  00D4               	movwf	sprintf@f^(0+128)
  7566  1EB6  01D6               	clrf	(sprintf@f^(0+128)+2)
  7567  1EB7  01D7               	clrf	((sprintf@f+1)^(0+128)+2)
  7568  1EB8  01D8               	clrf	(sprintf@f^(0+128)+4)
  7569  1EB9  01D9               	clrf	((sprintf@f+1)^(0+128)+4)
  7570  1EBA  0843               	movf	(sprintf@fmt+1)^(0+128),w
  7571  1EBB  00B9               	movwf	(vfprintf@fmt+1)^(0+128)
  7572  1EBC  0842               	movf	sprintf@fmt^(0+128),w
  7573  1EBD  00B8               	movwf	vfprintf@fmt^(0+128)
  7574  1EBE  30D3               	movlw	(low (sprintf@ap| 0))& (0+255)
  7575  1EBF  00D0               	movwf	??_sprintf^(0+128)
  7576  1EC0  0850               	movf	??_sprintf^(0+128),w
  7577  1EC1  00BA               	movwf	vfprintf@ap^(0+128)
  7578  1EC2  30D4               	movlw	(low (sprintf@f| 0))& (0+255)
  7579  1EC3  3190  20B9         	fcall	_vfprintf
  7580  1EC5  3002               	movlw	2
  7581  1EC6  3ED4               	addlw	(low (sprintf@f| 0))& (0+255)
  7582  1EC7  0086               	movwf	6
  7583  1EC8  0187               	clrf	7
  7584  1EC9  3F40               	moviw [0]fsr1
  7585  1ECA  0740               	addwf	sprintf@s^(0+128),w
  7586  1ECB  0084               	movwf	4
  7587  1ECC  3F41               	moviw [1]fsr1
  7588  1ECD  3D41               	addwfc	(sprintf@s+1)^(0+128),w
  7589  1ECE  0085               	movwf	5
  7590  1ECF  0180               	clrf	0
  7591  1ED0  0008               	return
  7592  1ED1                     __end_of_sprintf:
  7593                           
  7594                           	psect	text10
  7595  10B9                     __ptext10:	
  7596 ;; *************** function _vfprintf *****************
  7597 ;; Defined at:
  7598 ;;		line 1368 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  fp              1    wreg     PTR struct _IO_FILE
  7601 ;;		 -> sprintf@f(6), 
  7602 ;;  fmt             2   24[BANK1 ] PTR const unsigned char 
  7603 ;;		 -> STR_20(33), STR_19(19), STR_18(14), STR_17(10), 
  7604 ;;		 -> STR_14(5), STR_13(5), STR_7(20), STR_5(4), 
  7605 ;;		 -> STR_2(4), 
  7606 ;;  ap              1   26[BANK1 ] PTR PTR void 
  7607 ;;		 -> sprintf@ap(1), 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  fp              1   29[BANK1 ] PTR struct _IO_FILE
  7610 ;;		 -> sprintf@f(6), 
  7611 ;;  cfmt            2   30[BANK1 ] PTR unsigned char 
  7612 ;;		 -> STR_20(33), STR_19(19), STR_18(14), STR_17(10), 
  7613 ;;		 -> STR_14(5), STR_13(5), STR_7(20), STR_5(4), 
  7614 ;;		 -> STR_2(4), 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  2   24[BANK1 ] int 
  7617 ;; Registers used:
  7618 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7619 ;; Tracked objects:
  7620 ;;		On entry : 1F/1
  7621 ;;		On exit  : 1F/1
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7624 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7625 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7626 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7627 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  7628 ;;Total ram usage:        8 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:   13
  7631 ;; This function calls:
  7632 ;;		_vfpfcnvrt
  7633 ;; This function is called by:
  7634 ;;		_sprintf
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           
  7639                           ;psect for function _vfprintf
  7640  10B9                     _vfprintf:
  7641                           
  7642                           ;incstack = 0
  7643                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7644                           ;vfprintf@fp stored from wreg
  7645  10B9  00BD               	movwf	vfprintf@fp^(0+128)
  7646                           
  7647                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.20/pic/sources/c99/
      +                          common/doprnt.c: 1369: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt
      +                          .c: 1371:     char *cfmt;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprn
      +                          t.c: 1373:     cfmt = (char *)fmt;
  7648  10BA  0839               	movf	(vfprintf@fmt+1)^(0+128),w
  7649  10BB  00BF               	movwf	(vfprintf@cfmt+1)^(0+128)
  7650  10BC  0838               	movf	vfprintf@fmt^(0+128),w
  7651  10BD  00BE               	movwf	vfprintf@cfmt^(0+128)
  7652                           
  7653                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7654  10BE  0022               	movlb	2	; select bank2
  7655  10BF  01A6               	clrf	_nout^(0+256)
  7656  10C0  01A7               	clrf	(_nout+1)^(0+256)
  7657  10C1                     l7241:	
  7658                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  7659                           
  7660                           
  7661                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1375:     while (*cf
      +                          mt) {
  7662  10C1  0021               	movlb	1	; select bank1
  7663  10C2  083E               	movf	vfprintf@cfmt^(0+128),w
  7664  10C3  0084               	movwf	4
  7665  10C4  083F               	movf	(vfprintf@cfmt+1)^(0+128),w
  7666  10C5  0085               	movwf	5
  7667  10C6  0012               	moviw fsr0++
  7668  10C7  1903               	btfsc	3,2
  7669  10C8  28E1               	goto	l7243
  7670                           
  7671                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1376:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  7672  10C9  30BE               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7673  10CA  00BB               	movwf	??_vfprintf^(0+128)
  7674  10CB  083B               	movf	??_vfprintf^(0+128),w
  7675  10CC  0020               	movlb	0	; select bank0
  7676  10CD  00E2               	movwf	vfpfcnvrt@fmt
  7677  10CE  0021               	movlb	1	; select bank1
  7678  10CF  083A               	movf	vfprintf@ap^(0+128),w
  7679  10D0  00BC               	movwf	(??_vfprintf+1)^(0+128)
  7680  10D1  083C               	movf	(??_vfprintf+1)^(0+128),w
  7681  10D2  0020               	movlb	0	; select bank0
  7682  10D3  00E3               	movwf	vfpfcnvrt@ap
  7683  10D4  0021               	movlb	1	; select bank1
  7684  10D5  083D               	movf	vfprintf@fp^(0+128),w
  7685  10D6  3184  245E  3190   	fcall	_vfpfcnvrt
  7686  10D9  0862               	movf	?_vfpfcnvrt,w
  7687  10DA  0022               	movlb	2	; select bank2
  7688  10DB  07A6               	addwf	_nout^(0+256),f
  7689  10DC  0020               	movlb	0	; select bank0
  7690  10DD  0863               	movf	?_vfpfcnvrt+1,w
  7691  10DE  0022               	movlb	2	; select bank2
  7692  10DF  3DA7               	addwfc	(_nout+1)^(0+256),f
  7693  10E0  28C1               	goto	l7241
  7694  10E1                     l7243:
  7695                           
  7696                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1378:     return nou
      +                          t;
  7697  10E1  0022               	movlb	2	; select bank2
  7698  10E2  0827               	movf	(_nout+1)^(0+256),w
  7699  10E3  0021               	movlb	1	; select bank1
  7700  10E4  00B9               	movwf	(?_vfprintf+1)^(0+128)
  7701  10E5  0022               	movlb	2	; select bank2
  7702  10E6  0826               	movf	_nout^(0+256),w
  7703  10E7  0021               	movlb	1	; select bank1
  7704  10E8  00B8               	movwf	?_vfprintf^(0+128)
  7705  10E9  0008               	return
  7706  10EA                     __end_of_vfprintf:
  7707                           
  7708                           	psect	text11
  7709  045E                     __ptext11:	
  7710 ;; *************** function _vfpfcnvrt *****************
  7711 ;; Defined at:
  7712 ;;		line 670 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  7713 ;; Parameters:    Size  Location     Type
  7714 ;;  fp              1    wreg     PTR struct _IO_FILE
  7715 ;;		 -> sprintf@f(6), 
  7716 ;;  fmt             1   66[BANK0 ] PTR PTR unsigned char 
  7717 ;;		 -> vfprintf@cfmt(2), 
  7718 ;;  ap              1   67[BANK0 ] PTR PTR void 
  7719 ;;		 -> sprintf@ap(1), 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;  fp              1   23[BANK1 ] PTR struct _IO_FILE
  7722 ;;		 -> sprintf@f(6), 
  7723 ;;  llu             8    8[BANK1 ] unsigned long long 
  7724 ;;  ll              8    0[BANK1 ] long long 
  7725 ;;  f               4    0        long long 
  7726 ;;  ct              3    0        unsigned char [3]
  7727 ;;  done            2   19[BANK1 ] int 
  7728 ;;  cp              2   16[BANK1 ] PTR unsigned char 
  7729 ;;		 -> ?_sprintf(2), lcd_fs_name(112), lcd_aux_name(14), lcd_src_name(40), 
  7730 ;;  vp              2    0        PTR void 
  7731 ;;  i               2    0        int 
  7732 ;;  c               1   18[BANK1 ] unsigned char 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  2   66[BANK0 ] int 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 1F/1
  7739 ;;		On exit  : 1F/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7742 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7743 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  7744 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7745 ;;      Totals:         0       8      24       0       0       0       0       0       0       0       0       0       
      +0       0
  7746 ;;Total ram usage:       32 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:   12
  7749 ;; This function calls:
  7750 ;;		_atoi
  7751 ;;		_dtoa
  7752 ;;		_fputc
  7753 ;;		_isdigit
  7754 ;;		_stoa
  7755 ;;		_xtoa
  7756 ;; This function is called by:
  7757 ;;		_vfprintf
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           
  7761                           
  7762                           ;psect for function _vfpfcnvrt
  7763  045E                     _vfpfcnvrt:
  7764                           
  7765                           ;incstack = 0
  7766                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7767                           ;vfpfcnvrt@fp stored from wreg
  7768  045E  00B7               	movwf	vfpfcnvrt@fp^(0+128)
  7769                           
  7770                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 670: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.20/pic/sources/c
      +                          99/common/doprnt.c: 671: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/dopr
      +                          nt.c: 672:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.20/pic/sources/c99/com
      +                          mon/doprnt.c: 673:     int done, i;;/Applications/microchip/xc8/v2.20/pic/sources/c99/co
      +                          mmon/doprnt.c: 674:     long long ll;;/Applications/microchip/xc8/v2.20/pic/sources/c99/
      +                          common/doprnt.c: 675:     unsigned long long llu;
  7771  045F  0020               	movlb	0	; select bank0
  7772  0460  0862               	movf	vfpfcnvrt@fmt,w
  7773  0461  0086               	movwf	6
  7774  0462  0187               	clrf	7
  7775  0463  3F40               	moviw [0]fsr1
  7776  0464  00E4               	movwf	??_vfpfcnvrt
  7777  0465  3F41               	moviw [1]fsr1
  7778  0466  00E5               	movwf	??_vfpfcnvrt+1
  7779  0467  0864               	movf	??_vfpfcnvrt,w
  7780  0468  0084               	movwf	4
  7781  0469  0865               	movf	??_vfpfcnvrt+1,w
  7782  046A  0085               	movwf	5
  7783  046B  0012               	moviw fsr0++
  7784  046C  3A25               	xorlw	37
  7785  046D  1D03               	btfss	3,2
  7786  046E  2E8E               	goto	l7069
  7787                           
  7788                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7789  046F  0862               	movf	vfpfcnvrt@fmt,w
  7790  0470  0086               	movwf	6
  7791  0471  0187               	clrf	7
  7792  0472  3001               	movlw	1
  7793  0473  0781               	addwf	1,f
  7794  0474  3141               	addfsr 1,1
  7795  0475  1803               	skipnc
  7796  0476  0A81               	incf	1,f
  7797                           
  7798                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 683:         flags =
      +                           width = 0;
  7799  0477  0022               	movlb	2	; select bank2
  7800  0478  01A8               	clrf	_width^(0+256)
  7801  0479  01A9               	clrf	(_width+1)^(0+256)
  7802  047A  0020               	movlb	0	; select bank0
  7803  047B  01EA               	clrf	_flags
  7804  047C  01EB               	clrf	_flags+1
  7805                           
  7806                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 684:         prec = 
      +                          -1;
  7807  047D  30FF               	movlw	255
  7808  047E  0022               	movlb	2	; select bank2
  7809  047F  00AA               	movwf	_prec^(0+256)
  7810  0480  30FF               	movlw	255
  7811  0481  00AB               	movwf	(_prec^(0+256)+1)
  7812                           
  7813                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 688:         done = 
      +                          0;
  7814  0482  0021               	movlb	1	; select bank1
  7815  0483  01B3               	clrf	vfpfcnvrt@done^(0+128)
  7816  0484  01B4               	clrf	(vfpfcnvrt@done+1)^(0+128)
  7817                           
  7818                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
  7819  0485  2C9D               	goto	l6991
  7820  0486                     l2008:	
  7821                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 691:                
      +                           case '-' :
  7822                           
  7823                           
  7824                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 692:                
      +                               flags |= (1 << 0);
  7825  0486  146A               	bsf	_flags,0
  7826  0487                     l6975:
  7827                           
  7828                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 693:                
      +                               ++*fmt;
  7829  0487  0862               	movf	vfpfcnvrt@fmt,w
  7830  0488  0086               	movwf	6
  7831  0489  0187               	clrf	7
  7832  048A  3001               	movlw	1
  7833  048B  0781               	addwf	1,f
  7834  048C  3141               	addfsr 1,1
  7835  048D  1803               	skipnc
  7836  048E  0A81               	incf	1,f
  7837                           
  7838                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 694:                
      +                               break;
  7839  048F  2C9D               	goto	l6991
  7840  0490                     l2010:	
  7841                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 695:                
      +                           case '0' :
  7842                           
  7843                           
  7844                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 696:                
      +                               flags |= (1 << 1);
  7845  0490  14EA               	bsf	_flags,1
  7846  0491  2C87               	goto	l6975
  7847  0492                     l2011:	
  7848                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 699:                
      +                           case '+' :
  7849                           
  7850                           
  7851                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 700:                
      +                               flags |= (1 << 2);
  7852  0492  156A               	bsf	_flags,2
  7853  0493  2C87               	goto	l6975
  7854  0494                     l2012:	
  7855                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 703:                
      +                           case ' ' :
  7856                           
  7857                           
  7858                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 704:                
      +                               flags |= (1 << 3);
  7859  0494  15EA               	bsf	_flags,3
  7860  0495  2C87               	goto	l6975
  7861  0496                     l2013:	
  7862                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 707:                
      +                           case '#' :
  7863                           
  7864                           
  7865                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 708:                
      +                               flags |= (1 << 4);
  7866  0496  166A               	bsf	_flags,4
  7867  0497  2C87               	goto	l6975
  7868  0498                     l6985:
  7869                           
  7870                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 712:                
      +                               done = 1;
  7871  0498  3001               	movlw	1
  7872  0499  0021               	movlb	1	; select bank1
  7873  049A  00B3               	movwf	vfpfcnvrt@done^(0+128)
  7874  049B  3000               	movlw	0
  7875  049C  00B4               	movwf	(vfpfcnvrt@done^(0+128)+1)
  7876  049D                     l6991:	
  7877                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 713:                
      +                               break;
  7878                           
  7879                           
  7880                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 689:         while (
      +                          !done) {
  7881  049D  0021               	movlb	1	; select bank1
  7882  049E  0833               	movf	vfpfcnvrt@done^(0+128),w
  7883  049F  0434               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  7884  04A0  1D03               	btfss	3,2
  7885  04A1  2CC8               	goto	l2015
  7886  04A2  0020               	movlb	0	; select bank0
  7887  04A3  0862               	movf	vfpfcnvrt@fmt,w
  7888  04A4  0086               	movwf	6
  7889  04A5  0187               	clrf	7
  7890  04A6  3F40               	moviw [0]fsr1
  7891  04A7  00E4               	movwf	??_vfpfcnvrt
  7892  04A8  3F41               	moviw [1]fsr1
  7893  04A9  00E5               	movwf	??_vfpfcnvrt+1
  7894  04AA  0864               	movf	??_vfpfcnvrt,w
  7895  04AB  0084               	movwf	4
  7896  04AC  0865               	movf	??_vfpfcnvrt+1,w
  7897  04AD  0085               	movwf	5
  7898  04AE  0800               	movf	0,w	;code access
  7899  04AF  00E6               	movwf	??_vfpfcnvrt+2
  7900  04B0  01E7               	clrf	??_vfpfcnvrt+3
  7901                           
  7902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7903                           ; Switch size 1, requested type "simple"
  7904                           ; Number of cases is 1, Range of values is 0 to 0
  7905                           ; switch strategies available:
  7906                           ; Name         Instructions Cycles
  7907                           ; simple_byte            4     3 (average)
  7908                           ; direct_byte            8     6 (fixed)
  7909                           ; jumptable            260     6 (fixed)
  7910                           ;	Chosen strategy is simple_byte
  7911  04B1  0867               	movf	??_vfpfcnvrt+3,w
  7912  04B2  3A00               	xorlw	0	; case 0
  7913  04B3  1903               	skipnz
  7914  04B4  2CB6               	goto	l8037
  7915  04B5  2C98               	goto	l6985
  7916  04B6                     l8037:
  7917                           
  7918                           ; Switch size 1, requested type "simple"
  7919                           ; Number of cases is 5, Range of values is 32 to 48
  7920                           ; switch strategies available:
  7921                           ; Name         Instructions Cycles
  7922                           ; simple_byte           16     9 (average)
  7923                           ; direct_byte           43     9 (fixed)
  7924                           ; jumptable            263     9 (fixed)
  7925                           ;	Chosen strategy is simple_byte
  7926  04B6  0866               	movf	??_vfpfcnvrt+2,w
  7927  04B7  3A20               	xorlw	32	; case 32
  7928  04B8  1903               	skipnz
  7929  04B9  2C94               	goto	l2012
  7930  04BA  3A03               	xorlw	3	; case 35
  7931  04BB  1903               	skipnz
  7932  04BC  2C96               	goto	l2013
  7933  04BD  3A08               	xorlw	8	; case 43
  7934  04BE  1903               	skipnz
  7935  04BF  2C92               	goto	l2011
  7936  04C0  3A06               	xorlw	6	; case 45
  7937  04C1  1903               	skipnz
  7938  04C2  2C86               	goto	l2008
  7939  04C3  3A1D               	xorlw	29	; case 48
  7940  04C4  1903               	skipnz
  7941  04C5  2C90               	goto	l2010
  7942  04C6  2C98               	goto	l6985
  7943  04C7  2C9D               	goto	l6991
  7944  04C8                     l2015:
  7945                           
  7946                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 716:         if (fla
      +                          gs & (1 << 0)) {
  7947  04C8  0020               	movlb	0	; select bank0
  7948  04C9  1C6A               	btfss	_flags,0
  7949  04CA  2CCF               	goto	l6995
  7950                           
  7951                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 717:             fla
      +                          gs &= ~(1 << 1);
  7952  04CB  30FD               	movlw	253
  7953  04CC  05EA               	andwf	_flags,f
  7954  04CD  30FF               	movlw	255
  7955  04CE  05EB               	andwf	_flags+1,f
  7956  04CF                     l6995:
  7957                           
  7958                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 723:         if ((*f
      +                          mt)[0] == '*') {
  7959  04CF  0862               	movf	vfpfcnvrt@fmt,w
  7960  04D0  0086               	movwf	6
  7961  04D1  0187               	clrf	7
  7962  04D2  3F40               	moviw [0]fsr1
  7963  04D3  00E4               	movwf	??_vfpfcnvrt
  7964  04D4  3F41               	moviw [1]fsr1
  7965  04D5  00E5               	movwf	??_vfpfcnvrt+1
  7966  04D6  0864               	movf	??_vfpfcnvrt,w
  7967  04D7  0084               	movwf	4
  7968  04D8  0865               	movf	??_vfpfcnvrt+1,w
  7969  04D9  0085               	movwf	5
  7970  04DA  0012               	moviw fsr0++
  7971  04DB  3A2A               	xorlw	42
  7972  04DC  1D03               	btfss	3,2
  7973  04DD  2CFE               	goto	l7007
  7974                           
  7975                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 724:             ++*
      +                          fmt;
  7976  04DE  0862               	movf	vfpfcnvrt@fmt,w
  7977  04DF  0086               	movwf	6
  7978  04E0  0187               	clrf	7
  7979  04E1  3001               	movlw	1
  7980  04E2  0781               	addwf	1,f
  7981  04E3  3141               	addfsr 1,1
  7982  04E4  1803               	skipnc
  7983  04E5  0A81               	incf	1,f
  7984                           
  7985                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 725:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
  7986  04E6  0863               	movf	vfpfcnvrt@ap,w
  7987  04E7  0086               	movwf	6
  7988  04E8  0187               	clrf	7
  7989  04E9  0801               	movf	1,w
  7990  04EA  0084               	movwf	4
  7991  04EB  0185               	clrf	5
  7992  04EC  3002               	movlw	2
  7993  04ED  0781               	addwf	1,f
  7994  04EE  3F00               	moviw [0]fsr0
  7995  04EF  0022               	movlb	2	; select bank2
  7996  04F0  00A8               	movwf	_width^(0+256)
  7997  04F1  3F01               	moviw [1]fsr0
  7998  04F2  00A9               	movwf	(_width+1)^(0+256)
  7999                           
  8000                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 726:             if 
      +                          (width < 0) {
  8001  04F3  1FA9               	btfss	(_width+1)^(0+256),7
  8002  04F4  2D43               	goto	l7017
  8003                           
  8004                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 727:                
      +                           flags |= (1 << 0);
  8005  04F5  0020               	movlb	0	; select bank0
  8006  04F6  146A               	bsf	_flags,0
  8007                           
  8008                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 728:                
      +                           width = -width;
  8009  04F7  0022               	movlb	2	; select bank2
  8010  04F8  09A8               	comf	_width^(0+256),f
  8011  04F9  09A9               	comf	(_width+1)^(0+256),f
  8012  04FA  0AA8               	incf	_width^(0+256),f
  8013  04FB  1903               	skipnz
  8014  04FC  0AA9               	incf	(_width+1)^(0+256),f
  8015  04FD  2D43               	goto	l7017
  8016  04FE                     l7007:
  8017                           
  8018                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 731:             wid
      +                          th = atoi(*fmt);
  8019  04FE  0862               	movf	vfpfcnvrt@fmt,w
  8020  04FF  0086               	movwf	6
  8021  0500  0187               	clrf	7
  8022  0501  3F40               	moviw [0]fsr1
  8023  0502  00AF               	movwf	atoi@s
  8024  0503  3F41               	moviw [1]fsr1
  8025  0504  00B0               	movwf	atoi@s+1
  8026  0505  3196  26A5  3184   	fcall	_atoi
  8027  0508  0830               	movf	?_atoi+1,w
  8028  0509  0022               	movlb	2	; select bank2
  8029  050A  00A9               	movwf	(_width+1)^(0+256)
  8030  050B  0020               	movlb	0	; select bank0
  8031  050C  082F               	movf	?_atoi,w
  8032  050D  0022               	movlb	2	; select bank2
  8033  050E  00A8               	movwf	_width^(0+256)
  8034                           
  8035                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 732:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8036  050F  2D19               	goto	l7011
  8037  0510                     l7009:
  8038                           
  8039                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 733:                
      +                           ++*fmt;
  8040  0510  0020               	movlb	0	; select bank0
  8041  0511  0862               	movf	vfpfcnvrt@fmt,w
  8042  0512  0086               	movwf	6
  8043  0513  0187               	clrf	7
  8044  0514  3001               	movlw	1
  8045  0515  0781               	addwf	1,f
  8046  0516  3141               	addfsr 1,1
  8047  0517  1803               	skipnc
  8048  0518  0A81               	incf	1,f
  8049  0519                     l7011:
  8050  0519  0020               	movlb	0	; select bank0
  8051  051A  0862               	movf	vfpfcnvrt@fmt,w
  8052  051B  0086               	movwf	6
  8053  051C  0187               	clrf	7
  8054  051D  3F40               	moviw [0]fsr1
  8055  051E  00E4               	movwf	??_vfpfcnvrt
  8056  051F  3F41               	moviw [1]fsr1
  8057  0520  00E5               	movwf	??_vfpfcnvrt+1
  8058  0521  0864               	movf	??_vfpfcnvrt,w
  8059  0522  0084               	movwf	4
  8060  0523  0865               	movf	??_vfpfcnvrt+1,w
  8061  0524  0085               	movwf	5
  8062  0525  0800               	movf	0,w	;code access
  8063  0526  3ED0               	addlw	208
  8064  0527  00E6               	movwf	??_vfpfcnvrt+2
  8065  0528  30FF               	movlw	255
  8066  0529  1803               	skipnc
  8067  052A  3000               	movlw	0
  8068  052B  00E7               	movwf	??_vfpfcnvrt+3
  8069  052C  3000               	movlw	0
  8070  052D  0267               	subwf	??_vfpfcnvrt+3,w
  8071  052E  300A               	movlw	10
  8072  052F  1903               	skipnz
  8073  0530  0266               	subwf	??_vfpfcnvrt+2,w
  8074  0531  1803               	btfsc	3,0
  8075  0532  2D35               	goto	u5260
  8076  0533  3001               	movlw	1
  8077  0534  2D36               	goto	u5270
  8078  0535                     u5260:
  8079  0535  3000               	movlw	0
  8080  0536                     u5270:
  8081  0536  00E8               	movwf	??_vfpfcnvrt+4
  8082  0537  01E9               	clrf	??_vfpfcnvrt+5
  8083  0538  0868               	movf	??_vfpfcnvrt+4,w
  8084  0539  0021               	movlb	1	; select bank1
  8085  053A  00B5               	movwf	_vfpfcnvrt$2347^(0+128)
  8086  053B  0020               	movlb	0	; select bank0
  8087  053C  0869               	movf	??_vfpfcnvrt+5,w
  8088  053D  0021               	movlb	1	; select bank1
  8089  053E  00B6               	movwf	(_vfpfcnvrt$2347+1)^(0+128)
  8090  053F  0835               	movf	_vfpfcnvrt$2347^(0+128),w
  8091  0540  0436               	iorwf	(_vfpfcnvrt$2347+1)^(0+128),w
  8092  0541  1D03               	btfss	3,2
  8093  0542  2D10               	goto	l7009
  8094  0543                     l7017:
  8095                           
  8096                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 825:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
  8097  0543  0020               	movlb	0	; select bank0
  8098  0544  0862               	movf	vfpfcnvrt@fmt,w
  8099  0545  0086               	movwf	6
  8100  0546  0187               	clrf	7
  8101  0547  3F40               	moviw [0]fsr1
  8102  0548  00E4               	movwf	??_vfpfcnvrt
  8103  0549  3F41               	moviw [1]fsr1
  8104  054A  00E5               	movwf	??_vfpfcnvrt+1
  8105  054B  0864               	movf	??_vfpfcnvrt,w
  8106  054C  0084               	movwf	4
  8107  054D  0865               	movf	??_vfpfcnvrt+1,w
  8108  054E  0085               	movwf	5
  8109  054F  0012               	moviw fsr0++
  8110  0550  3A64               	xorlw	100
  8111  0551  1903               	btfsc	3,2
  8112  0552  2D62               	goto	l7021
  8113  0553  0862               	movf	vfpfcnvrt@fmt,w
  8114  0554  0086               	movwf	6
  8115  0555  0187               	clrf	7
  8116  0556  3F40               	moviw [0]fsr1
  8117  0557  00E4               	movwf	??_vfpfcnvrt
  8118  0558  3F41               	moviw [1]fsr1
  8119  0559  00E5               	movwf	??_vfpfcnvrt+1
  8120  055A  0864               	movf	??_vfpfcnvrt,w
  8121  055B  0084               	movwf	4
  8122  055C  0865               	movf	??_vfpfcnvrt+1,w
  8123  055D  0085               	movwf	5
  8124  055E  0012               	moviw fsr0++
  8125  055F  3A69               	xorlw	105
  8126  0560  1D03               	btfss	3,2
  8127  0561  2DAE               	goto	l7029
  8128  0562                     l7021:
  8129                           
  8130                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 827:             ++*
      +                          fmt;
  8131  0562  0862               	movf	vfpfcnvrt@fmt,w
  8132  0563  0086               	movwf	6
  8133  0564  0187               	clrf	7
  8134  0565  3001               	movlw	1
  8135  0566  0781               	addwf	1,f
  8136  0567  3141               	addfsr 1,1
  8137  0568  1803               	skipnc
  8138  0569  0A81               	incf	1,f
  8139                           
  8140                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 828:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  8141  056A  0863               	movf	vfpfcnvrt@ap,w
  8142  056B  0086               	movwf	6
  8143  056C  0187               	clrf	7
  8144  056D  0801               	movf	1,w
  8145  056E  0084               	movwf	4
  8146  056F  0185               	clrf	5
  8147  0570  3002               	movlw	2
  8148  0571  0781               	addwf	1,f
  8149  0572  3F00               	moviw [0]fsr0
  8150  0573  00E4               	movwf	??_vfpfcnvrt
  8151  0574  3F01               	moviw [1]fsr0
  8152  0575  00E5               	movwf	??_vfpfcnvrt+1
  8153  0576  0864               	movf	??_vfpfcnvrt,w
  8154  0577  0021               	movlb	1	; select bank1
  8155  0578  00A0               	movwf	vfpfcnvrt@ll^(0+128)
  8156  0579  0020               	movlb	0	; select bank0
  8157  057A  0865               	movf	??_vfpfcnvrt+1,w
  8158  057B  0021               	movlb	1	; select bank1
  8159  057C  00A1               	movwf	(vfpfcnvrt@ll+1)^(0+128)
  8160  057D  0D89               	rlf	9,f
  8161  057E  3B89               	subwfb	9,f
  8162  057F  0989               	comf	9,f
  8163  0580  00A2               	movwf	(vfpfcnvrt@ll+2)^(0+128)
  8164  0581  00A3               	movwf	(vfpfcnvrt@ll+3)^(0+128)
  8165  0582  00A4               	movwf	(vfpfcnvrt@ll+4)^(0+128)
  8166  0583  00A5               	movwf	(vfpfcnvrt@ll+5)^(0+128)
  8167  0584  00A6               	movwf	(vfpfcnvrt@ll+6)^(0+128)
  8168  0585  00A7               	movwf	(vfpfcnvrt@ll+7)^(0+128)
  8169                           
  8170                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 830:             ret
      +                          urn dtoa(fp, ll);
  8171  0586  0820               	movf	vfpfcnvrt@ll^(0+128),w
  8172  0587  0020               	movlb	0	; select bank0
  8173  0588  00BE               	movwf	dtoa@d
  8174  0589  0021               	movlb	1	; select bank1
  8175  058A  0821               	movf	(vfpfcnvrt@ll+1)^(0+128),w
  8176  058B  0020               	movlb	0	; select bank0
  8177  058C  00BF               	movwf	dtoa@d+1
  8178  058D  0021               	movlb	1	; select bank1
  8179  058E  0822               	movf	(vfpfcnvrt@ll+2)^(0+128),w
  8180  058F  0020               	movlb	0	; select bank0
  8181  0590  00C0               	movwf	dtoa@d+2
  8182  0591  0021               	movlb	1	; select bank1
  8183  0592  0823               	movf	(vfpfcnvrt@ll+3)^(0+128),w
  8184  0593  0020               	movlb	0	; select bank0
  8185  0594  00C1               	movwf	dtoa@d+3
  8186  0595  0021               	movlb	1	; select bank1
  8187  0596  0824               	movf	(vfpfcnvrt@ll+4)^(0+128),w
  8188  0597  0020               	movlb	0	; select bank0
  8189  0598  00C2               	movwf	dtoa@d+4
  8190  0599  0021               	movlb	1	; select bank1
  8191  059A  0825               	movf	(vfpfcnvrt@ll+5)^(0+128),w
  8192  059B  0020               	movlb	0	; select bank0
  8193  059C  00C3               	movwf	dtoa@d+5
  8194  059D  0021               	movlb	1	; select bank1
  8195  059E  0826               	movf	(vfpfcnvrt@ll+6)^(0+128),w
  8196  059F  0020               	movlb	0	; select bank0
  8197  05A0  00C4               	movwf	dtoa@d+6
  8198  05A1  0021               	movlb	1	; select bank1
  8199  05A2  0827               	movf	(vfpfcnvrt@ll+7)^(0+128),w
  8200  05A3  0020               	movlb	0	; select bank0
  8201  05A4  00C5               	movwf	dtoa@d+7
  8202  05A5  0021               	movlb	1	; select bank1
  8203  05A6  0837               	movf	vfpfcnvrt@fp^(0+128),w
  8204  05A7  3186  26B3         	fcall	_dtoa
  8205  05A9  083F               	movf	?_dtoa+1,w
  8206  05AA  00E3               	movwf	?_vfpfcnvrt+1
  8207  05AB  083E               	movf	?_dtoa,w
  8208  05AC  00E2               	movwf	?_vfpfcnvrt
  8209  05AD  0008               	return
  8210  05AE                     l7029:
  8211                           
  8212                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1149:         if (*f
      +                          mt[0] == 's') {
  8213  05AE  0862               	movf	vfpfcnvrt@fmt,w
  8214  05AF  0086               	movwf	6
  8215  05B0  0187               	clrf	7
  8216  05B1  3F40               	moviw [0]fsr1
  8217  05B2  00E4               	movwf	??_vfpfcnvrt
  8218  05B3  3F41               	moviw [1]fsr1
  8219  05B4  00E5               	movwf	??_vfpfcnvrt+1
  8220  05B5  0864               	movf	??_vfpfcnvrt,w
  8221  05B6  0084               	movwf	4
  8222  05B7  0865               	movf	??_vfpfcnvrt+1,w
  8223  05B8  0085               	movwf	5
  8224  05B9  0012               	moviw fsr0++
  8225  05BA  3A73               	xorlw	115
  8226  05BB  1D03               	btfss	3,2
  8227  05BC  2DE2               	goto	l7039
  8228                           
  8229                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1151:             ++
      +                          *fmt;
  8230  05BD  0862               	movf	vfpfcnvrt@fmt,w
  8231  05BE  0086               	movwf	6
  8232  05BF  0187               	clrf	7
  8233  05C0  3001               	movlw	1
  8234  05C1  0781               	addwf	1,f
  8235  05C2  3141               	addfsr 1,1
  8236  05C3  1803               	skipnc
  8237  05C4  0A81               	incf	1,f
  8238                           
  8239                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1152:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
  8240  05C5  0863               	movf	vfpfcnvrt@ap,w
  8241  05C6  0086               	movwf	6
  8242  05C7  0187               	clrf	7
  8243  05C8  0801               	movf	1,w
  8244  05C9  0084               	movwf	4
  8245  05CA  0185               	clrf	5
  8246  05CB  3002               	movlw	2
  8247  05CC  0781               	addwf	1,f
  8248  05CD  3F00               	moviw [0]fsr0
  8249  05CE  0021               	movlb	1	; select bank1
  8250  05CF  00B0               	movwf	vfpfcnvrt@cp^(0+128)
  8251  05D0  3F01               	moviw [1]fsr0
  8252  05D1  00B1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
  8253                           
  8254                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1154:             re
      +                          turn stoa(fp, cp);
  8255  05D2  0831               	movf	(vfpfcnvrt@cp+1)^(0+128),w
  8256  05D3  0020               	movlb	0	; select bank0
  8257  05D4  00AC               	movwf	stoa@s+1
  8258  05D5  0021               	movlb	1	; select bank1
  8259  05D6  0830               	movf	vfpfcnvrt@cp^(0+128),w
  8260  05D7  0020               	movlb	0	; select bank0
  8261  05D8  00AB               	movwf	stoa@s
  8262  05D9  0021               	movlb	1	; select bank1
  8263  05DA  0837               	movf	vfpfcnvrt@fp^(0+128),w
  8264  05DB  3189  2171         	fcall	_stoa
  8265  05DD  082C               	movf	?_stoa+1,w
  8266  05DE  00E3               	movwf	?_vfpfcnvrt+1
  8267  05DF  082B               	movf	?_stoa,w
  8268  05E0  00E2               	movwf	?_vfpfcnvrt
  8269  05E1  0008               	return
  8270  05E2                     l7039:
  8271                           
  8272                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1274:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
  8273  05E2  0862               	movf	vfpfcnvrt@fmt,w
  8274  05E3  0086               	movwf	6
  8275  05E4  0187               	clrf	7
  8276  05E5  3F40               	moviw [0]fsr1
  8277  05E6  00E4               	movwf	??_vfpfcnvrt
  8278  05E7  3F41               	moviw [1]fsr1
  8279  05E8  00E5               	movwf	??_vfpfcnvrt+1
  8280  05E9  0864               	movf	??_vfpfcnvrt,w
  8281  05EA  0084               	movwf	4
  8282  05EB  0865               	movf	??_vfpfcnvrt+1,w
  8283  05EC  0085               	movwf	5
  8284  05ED  0012               	moviw fsr0++
  8285  05EE  3A78               	xorlw	120
  8286  05EF  1903               	btfsc	3,2
  8287  05F0  2E00               	goto	l7043
  8288  05F1  0862               	movf	vfpfcnvrt@fmt,w
  8289  05F2  0086               	movwf	6
  8290  05F3  0187               	clrf	7
  8291  05F4  3F40               	moviw [0]fsr1
  8292  05F5  00E4               	movwf	??_vfpfcnvrt
  8293  05F6  3F41               	moviw [1]fsr1
  8294  05F7  00E5               	movwf	??_vfpfcnvrt+1
  8295  05F8  0864               	movf	??_vfpfcnvrt,w
  8296  05F9  0084               	movwf	4
  8297  05FA  0865               	movf	??_vfpfcnvrt+1,w
  8298  05FB  0085               	movwf	5
  8299  05FC  0012               	moviw fsr0++
  8300  05FD  3A58               	xorlw	88
  8301  05FE  1D03               	btfss	3,2
  8302  05FF  2E5A               	goto	l7053
  8303  0600                     l7043:
  8304                           
  8305                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1276:             c 
      +                          = (*fmt)[0];
  8306  0600  0862               	movf	vfpfcnvrt@fmt,w
  8307  0601  0086               	movwf	6
  8308  0602  0187               	clrf	7
  8309  0603  3F40               	moviw [0]fsr1
  8310  0604  00E4               	movwf	??_vfpfcnvrt
  8311  0605  3F41               	moviw [1]fsr1
  8312  0606  00E5               	movwf	??_vfpfcnvrt+1
  8313  0607  0864               	movf	??_vfpfcnvrt,w
  8314  0608  0084               	movwf	4
  8315  0609  0865               	movf	??_vfpfcnvrt+1,w
  8316  060A  0085               	movwf	5
  8317  060B  0800               	movf	0,w	;code access
  8318  060C  00E6               	movwf	??_vfpfcnvrt+2
  8319  060D  0866               	movf	??_vfpfcnvrt+2,w
  8320  060E  0021               	movlb	1	; select bank1
  8321  060F  00B2               	movwf	vfpfcnvrt@c^(0+128)
  8322                           
  8323                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1277:             ++
      +                          *fmt;
  8324  0610  0020               	movlb	0	; select bank0
  8325  0611  0862               	movf	vfpfcnvrt@fmt,w
  8326  0612  0086               	movwf	6
  8327  0613  0187               	clrf	7
  8328  0614  3001               	movlw	1
  8329  0615  0781               	addwf	1,f
  8330  0616  3141               	addfsr 1,1
  8331  0617  1803               	skipnc
  8332  0618  0A81               	incf	1,f
  8333                           
  8334                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1278:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
  8335  0619  0863               	movf	vfpfcnvrt@ap,w
  8336  061A  0086               	movwf	6
  8337  061B  0187               	clrf	7
  8338  061C  0801               	movf	1,w
  8339  061D  0084               	movwf	4
  8340  061E  0185               	clrf	5
  8341  061F  3002               	movlw	2
  8342  0620  0781               	addwf	1,f
  8343  0621  3F00               	moviw [0]fsr0
  8344  0622  0021               	movlb	1	; select bank1
  8345  0623  00A8               	movwf	vfpfcnvrt@llu^(0+128)
  8346  0624  3F01               	moviw [1]fsr0
  8347  0625  00A9               	movwf	(vfpfcnvrt@llu+1)^(0+128)
  8348  0626  01AA               	clrf	(vfpfcnvrt@llu+2)^(0+128)
  8349  0627  01AB               	clrf	(vfpfcnvrt@llu+3)^(0+128)
  8350  0628  01AC               	clrf	(vfpfcnvrt@llu+4)^(0+128)
  8351  0629  01AD               	clrf	(vfpfcnvrt@llu+5)^(0+128)
  8352  062A  01AE               	clrf	(vfpfcnvrt@llu+6)^(0+128)
  8353  062B  01AF               	clrf	(vfpfcnvrt@llu+7)^(0+128)
  8354                           
  8355                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1280:             re
      +                          turn xtoa(fp, llu, c);
  8356  062C  0828               	movf	vfpfcnvrt@llu^(0+128),w
  8357  062D  0020               	movlb	0	; select bank0
  8358  062E  00BC               	movwf	xtoa@d
  8359  062F  0021               	movlb	1	; select bank1
  8360  0630  0829               	movf	(vfpfcnvrt@llu+1)^(0+128),w
  8361  0631  0020               	movlb	0	; select bank0
  8362  0632  00BD               	movwf	xtoa@d+1
  8363  0633  0021               	movlb	1	; select bank1
  8364  0634  082A               	movf	(vfpfcnvrt@llu+2)^(0+128),w
  8365  0635  0020               	movlb	0	; select bank0
  8366  0636  00BE               	movwf	xtoa@d+2
  8367  0637  0021               	movlb	1	; select bank1
  8368  0638  082B               	movf	(vfpfcnvrt@llu+3)^(0+128),w
  8369  0639  0020               	movlb	0	; select bank0
  8370  063A  00BF               	movwf	xtoa@d+3
  8371  063B  0021               	movlb	1	; select bank1
  8372  063C  082C               	movf	(vfpfcnvrt@llu+4)^(0+128),w
  8373  063D  0020               	movlb	0	; select bank0
  8374  063E  00C0               	movwf	xtoa@d+4
  8375  063F  0021               	movlb	1	; select bank1
  8376  0640  082D               	movf	(vfpfcnvrt@llu+5)^(0+128),w
  8377  0641  0020               	movlb	0	; select bank0
  8378  0642  00C1               	movwf	xtoa@d+5
  8379  0643  0021               	movlb	1	; select bank1
  8380  0644  082E               	movf	(vfpfcnvrt@llu+6)^(0+128),w
  8381  0645  0020               	movlb	0	; select bank0
  8382  0646  00C2               	movwf	xtoa@d+6
  8383  0647  0021               	movlb	1	; select bank1
  8384  0648  082F               	movf	(vfpfcnvrt@llu+7)^(0+128),w
  8385  0649  0020               	movlb	0	; select bank0
  8386  064A  00C3               	movwf	xtoa@d+7
  8387  064B  0021               	movlb	1	; select bank1
  8388  064C  0832               	movf	vfpfcnvrt@c^(0+128),w
  8389  064D  0020               	movlb	0	; select bank0
  8390  064E  00E4               	movwf	??_vfpfcnvrt
  8391  064F  0864               	movf	??_vfpfcnvrt,w
  8392  0650  00C4               	movwf	xtoa@x
  8393  0651  0021               	movlb	1	; select bank1
  8394  0652  0837               	movf	vfpfcnvrt@fp^(0+128),w
  8395  0653  318D  251A         	fcall	_xtoa
  8396  0655  083D               	movf	?_xtoa+1,w
  8397  0656  00E3               	movwf	?_vfpfcnvrt+1
  8398  0657  083C               	movf	?_xtoa,w
  8399  0658  00E2               	movwf	?_vfpfcnvrt
  8400  0659  0008               	return
  8401  065A                     l7053:
  8402                           
  8403                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1350:         if ((*
      +                          fmt)[0] == '%') {
  8404  065A  0862               	movf	vfpfcnvrt@fmt,w
  8405  065B  0086               	movwf	6
  8406  065C  0187               	clrf	7
  8407  065D  3F40               	moviw [0]fsr1
  8408  065E  00E4               	movwf	??_vfpfcnvrt
  8409  065F  3F41               	moviw [1]fsr1
  8410  0660  00E5               	movwf	??_vfpfcnvrt+1
  8411  0661  0864               	movf	??_vfpfcnvrt,w
  8412  0662  0084               	movwf	4
  8413  0663  0865               	movf	??_vfpfcnvrt+1,w
  8414  0664  0085               	movwf	5
  8415  0665  0012               	moviw fsr0++
  8416  0666  3A25               	xorlw	37
  8417  0667  1D03               	btfss	3,2
  8418  0668  2E83               	goto	l7063
  8419                           
  8420                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1351:             ++
      +                          *fmt;
  8421  0669  0862               	movf	vfpfcnvrt@fmt,w
  8422  066A  0086               	movwf	6
  8423  066B  0187               	clrf	7
  8424  066C  3001               	movlw	1
  8425  066D  0781               	addwf	1,f
  8426  066E  3141               	addfsr 1,1
  8427  066F  1803               	skipnc
  8428  0670  0A81               	incf	1,f
  8429                           
  8430                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1352:             fp
      +                          utc((int)'%', fp);
  8431  0671  3025               	movlw	37
  8432  0672  00A3               	movwf	fputc@c
  8433  0673  3000               	movlw	0
  8434  0674  00A4               	movwf	fputc@c+1
  8435  0675  0021               	movlb	1	; select bank1
  8436  0676  0837               	movf	vfpfcnvrt@fp^(0+128),w
  8437  0677  0020               	movlb	0	; select bank0
  8438  0678  00E4               	movwf	??_vfpfcnvrt
  8439  0679  0864               	movf	??_vfpfcnvrt,w
  8440  067A  00A5               	movwf	fputc@fp
  8441  067B  3192  2281         	fcall	_fputc
  8442  067D                     l7059:
  8443                           
  8444                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1353:             re
      +                          turn 1;
  8445  067D  3001               	movlw	1
  8446  067E  0020               	movlb	0	; select bank0
  8447  067F  00E2               	movwf	?_vfpfcnvrt
  8448  0680  3000               	movlw	0
  8449  0681  00E3               	movwf	?_vfpfcnvrt+1
  8450  0682  0008               	return
  8451  0683                     l7063:
  8452                           
  8453                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt
      +                          ;
  8454  0683  0862               	movf	vfpfcnvrt@fmt,w
  8455  0684  0086               	movwf	6
  8456  0685  0187               	clrf	7
  8457  0686  3001               	movlw	1
  8458  0687  0781               	addwf	1,f
  8459  0688  3141               	addfsr 1,1
  8460  0689  1803               	skipnc
  8461  068A  0A81               	incf	1,f
  8462                           
  8463                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1358:         return
      +                           0;
  8464  068B  01E2               	clrf	?_vfpfcnvrt
  8465  068C  01E3               	clrf	?_vfpfcnvrt+1
  8466  068D  0008               	return
  8467  068E                     l7069:
  8468                           
  8469                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1362:     fputc((int
      +                          )(*fmt)[0], fp);
  8470  068E  0862               	movf	vfpfcnvrt@fmt,w
  8471  068F  0086               	movwf	6
  8472  0690  0187               	clrf	7
  8473  0691  3F40               	moviw [0]fsr1
  8474  0692  00E4               	movwf	??_vfpfcnvrt
  8475  0693  3F41               	moviw [1]fsr1
  8476  0694  00E5               	movwf	??_vfpfcnvrt+1
  8477  0695  0864               	movf	??_vfpfcnvrt,w
  8478  0696  0084               	movwf	4
  8479  0697  0865               	movf	??_vfpfcnvrt+1,w
  8480  0698  0085               	movwf	5
  8481  0699  0800               	movf	0,w	;code access
  8482  069A  00E6               	movwf	??_vfpfcnvrt+2
  8483  069B  01E7               	clrf	??_vfpfcnvrt+3
  8484  069C  0866               	movf	??_vfpfcnvrt+2,w
  8485  069D  00A3               	movwf	fputc@c
  8486  069E  0867               	movf	??_vfpfcnvrt+3,w
  8487  069F  00A4               	movwf	fputc@c+1
  8488  06A0  0021               	movlb	1	; select bank1
  8489  06A1  0837               	movf	vfpfcnvrt@fp^(0+128),w
  8490  06A2  0020               	movlb	0	; select bank0
  8491  06A3  00E8               	movwf	??_vfpfcnvrt+4
  8492  06A4  0868               	movf	??_vfpfcnvrt+4,w
  8493  06A5  00A5               	movwf	fputc@fp
  8494  06A6  3192  2281  3184   	fcall	_fputc
  8495                           
  8496                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8497  06A9  0020               	movlb	0	; select bank0
  8498  06AA  0862               	movf	vfpfcnvrt@fmt,w
  8499  06AB  0086               	movwf	6
  8500  06AC  0187               	clrf	7
  8501  06AD  3001               	movlw	1
  8502  06AE  0781               	addwf	1,f
  8503  06AF  3141               	addfsr 1,1
  8504  06B0  1803               	skipnc
  8505  06B1  0A81               	incf	1,f
  8506  06B2  2E7D               	goto	l7059
  8507  06B3                     __end_of_vfpfcnvrt:
  8508                           
  8509                           	psect	text12
  8510  0D1A                     __ptext12:	
  8511 ;; *************** function _xtoa *****************
  8512 ;; Defined at:
  8513 ;;		line 623 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;  fp              1    wreg     PTR struct _IO_FILE
  8516 ;;		 -> sprintf@f(6), 
  8517 ;;  d               8   28[BANK0 ] unsigned long long 
  8518 ;;  x               1   36[BANK0 ] unsigned char 
  8519 ;; Auto vars:     Size  Location     Type
  8520 ;;  fp              1   45[BANK0 ] PTR struct _IO_FILE
  8521 ;;		 -> sprintf@f(6), 
  8522 ;;  n               8   54[BANK0 ] unsigned long long 
  8523 ;;  c               2   64[BANK0 ] int 
  8524 ;;  i               2   62[BANK0 ] int 
  8525 ;;  w               2   52[BANK0 ] int 
  8526 ;;  p               2   50[BANK0 ] int 
  8527 ;; Return value:  Size  Location     Type
  8528 ;;                  2   28[BANK0 ] int 
  8529 ;; Registers used:
  8530 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8531 ;; Tracked objects:
  8532 ;;		On entry : 1F/1
  8533 ;;		On exit  : 1F/0
  8534 ;;		Unchanged: 0/0
  8535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8536 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8537 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8538 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;Total ram usage:       38 bytes
  8541 ;; Hardware stack levels used:    1
  8542 ;; Hardware stack levels required when called:   11
  8543 ;; This function calls:
  8544 ;;		_isalpha
  8545 ;;		_isupper
  8546 ;;		_pad
  8547 ;;		_toupper
  8548 ;; This function is called by:
  8549 ;;		_vfpfcnvrt
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           
  8554                           ;psect for function _xtoa
  8555  0D1A                     _xtoa:
  8556                           
  8557                           ;incstack = 0
  8558                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8559                           ;xtoa@fp stored from wreg
  8560  0D1A  0020               	movlb	0	; select bank0
  8561  0D1B  00CD               	movwf	xtoa@fp
  8562                           
  8563                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 623: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.20/pic/sources/c
      +                          99/common/doprnt.c: 624: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/dopr
      +                          nt.c: 625:     int c, i, p, w;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/
      +                          doprnt.c: 626:     unsigned long long n;;/Applications/microchip/xc8/v2.20/pic/sources/c
      +                          99/common/doprnt.c: 629:     if (!(prec < 0)) {
  8564  0D1C  0022               	movlb	2	; select bank2
  8565  0D1D  1BAB               	btfsc	(_prec+1)^(0+256),7
  8566  0D1E  2D24               	goto	l1974
  8567                           
  8568                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 630:         flags &
      +                          = ~(1 << 1);
  8569  0D1F  30FD               	movlw	253
  8570  0D20  0020               	movlb	0	; select bank0
  8571  0D21  05EA               	andwf	_flags,f
  8572  0D22  30FF               	movlw	255
  8573  0D23  05EB               	andwf	_flags+1,f
  8574  0D24                     l1974:	
  8575                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 631:     }
  8576                           
  8577                           
  8578                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 632:     p = (0 < pr
      +                          ec) ? prec : 1;
  8579  0D24  0022               	movlb	2	; select bank2
  8580  0D25  082B               	movf	(_prec+1)^(0+256),w
  8581  0D26  3A80               	xorlw	128
  8582  0D27  0020               	movlb	0	; select bank0
  8583  0D28  00C5               	movwf	??_xtoa
  8584  0D29  3080               	movlw	128
  8585  0D2A  0245               	subwf	??_xtoa,w
  8586  0D2B  1D03               	skipz
  8587  0D2C  2D30               	goto	u4955
  8588  0D2D  3001               	movlw	1
  8589  0D2E  0022               	movlb	2	; select bank2
  8590  0D2F  022A               	subwf	_prec^(0+256),w
  8591  0D30                     u4955:
  8592  0D30  1803               	skipnc
  8593  0D31  2D38               	goto	l6769
  8594  0D32  3001               	movlw	1
  8595  0D33  0020               	movlb	0	; select bank0
  8596  0D34  00D2               	movwf	xtoa@p
  8597  0D35  3000               	movlw	0
  8598  0D36  00D3               	movwf	xtoa@p+1
  8599  0D37  2D40               	goto	l1978
  8600  0D38                     l6769:
  8601  0D38  0022               	movlb	2	; select bank2
  8602  0D39  082B               	movf	(_prec+1)^(0+256),w
  8603  0D3A  0020               	movlb	0	; select bank0
  8604  0D3B  00D3               	movwf	xtoa@p+1
  8605  0D3C  0022               	movlb	2	; select bank2
  8606  0D3D  082A               	movf	_prec^(0+256),w
  8607  0D3E  0020               	movlb	0	; select bank0
  8608  0D3F  00D2               	movwf	xtoa@p
  8609  0D40                     l1978:
  8610                           
  8611                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8612  0D40  0022               	movlb	2	; select bank2
  8613  0D41  0829               	movf	(_width+1)^(0+256),w
  8614  0D42  0020               	movlb	0	; select bank0
  8615  0D43  00D5               	movwf	xtoa@w+1
  8616  0D44  0022               	movlb	2	; select bank2
  8617  0D45  0828               	movf	_width^(0+256),w
  8618  0D46  0020               	movlb	0	; select bank0
  8619  0D47  00D4               	movwf	xtoa@w
  8620                           
  8621                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 634:     if (flags &
      +                           (1 << 4)) {
  8622  0D48  1E6A               	btfss	_flags,4
  8623  0D49  2D4E               	goto	l6775
  8624                           
  8625                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8626  0D4A  30FE               	movlw	254
  8627  0D4B  07D4               	addwf	xtoa@w,f
  8628  0D4C  30FF               	movlw	255
  8629  0D4D  3DD5               	addwfc	xtoa@w+1,f
  8630  0D4E                     l6775:
  8631                           
  8632                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8633  0D4E  083C               	movf	xtoa@d,w
  8634  0D4F  00D6               	movwf	xtoa@n
  8635  0D50  083D               	movf	xtoa@d+1,w
  8636  0D51  00D7               	movwf	xtoa@n+1
  8637  0D52  083E               	movf	xtoa@d+2,w
  8638  0D53  00D8               	movwf	xtoa@n+2
  8639  0D54  083F               	movf	xtoa@d+3,w
  8640  0D55  00D9               	movwf	xtoa@n+3
  8641  0D56  0840               	movf	xtoa@d+4,w
  8642  0D57  00DA               	movwf	xtoa@n+4
  8643  0D58  0841               	movf	xtoa@d+5,w
  8644  0D59  00DB               	movwf	xtoa@n+5
  8645  0D5A  0842               	movf	xtoa@d+6,w
  8646  0D5B  00DC               	movwf	xtoa@n+6
  8647  0D5C  0843               	movf	xtoa@d+7,w
  8648  0D5D  00DD               	movwf	xtoa@n+7
  8649                           
  8650                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(
      +                          dbuf) - 1;
  8651  0D5E  301F               	movlw	31
  8652  0D5F  00DE               	movwf	xtoa@i
  8653  0D60  3000               	movlw	0
  8654  0D61  00DF               	movwf	xtoa@i+1
  8655                           
  8656                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '
      +                          \0';
  8657  0D62  0025               	movlb	5	; select bank5
  8658  0D63  01E8               	clrf	(_dbuf^(0+640)+31)
  8659                           
  8660                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8661  0D64  2E0E               	goto	l6807
  8662  0D65                     l6779:
  8663                           
  8664                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 643:         --i;
  8665  0D65  30FF               	movlw	255
  8666  0D66  0020               	movlb	0	; select bank0
  8667  0D67  07DE               	addwf	xtoa@i,f
  8668  0D68  30FF               	movlw	255
  8669  0D69  3DDF               	addwfc	xtoa@i+1,f
  8670                           
  8671                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 644:         c = n &
      +                           0x0f;
  8672  0D6A  300F               	movlw	15
  8673  0D6B  0556               	andwf	xtoa@n,w
  8674  0D6C  00E0               	movwf	xtoa@c
  8675  0D6D  3000               	movlw	0
  8676  0D6E  0557               	andwf	xtoa@n+1,w
  8677  0D6F  00E1               	movwf	xtoa@c+1
  8678                           
  8679                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 645:         c = (c 
      +                          < 10) ? '0' + c : 'a' + (c - 10);
  8680  0D70  0861               	movf	xtoa@c+1,w
  8681  0D71  3A80               	xorlw	128
  8682  0D72  00C5               	movwf	??_xtoa
  8683  0D73  3080               	movlw	128
  8684  0D74  0245               	subwf	??_xtoa,w
  8685  0D75  1D03               	skipz
  8686  0D76  2D79               	goto	u4975
  8687  0D77  300A               	movlw	10
  8688  0D78  0260               	subwf	xtoa@c,w
  8689  0D79                     u4975:
  8690  0D79  1C03               	skipc
  8691  0D7A  2D7F               	goto	l6783
  8692  0D7B  0020               	movlb	0	; select bank0
  8693  0D7C  0860               	movf	xtoa@c,w
  8694  0D7D  3E57               	addlw	87
  8695  0D7E  2D82               	goto	L3
  8696  0D7F                     l6783:
  8697  0D7F  0020               	movlb	0	; select bank0
  8698  0D80  0860               	movf	xtoa@c,w
  8699  0D81  3E30               	addlw	48
  8700  0D82                     L3:
  8701  0D82  00E0               	movwf	xtoa@c
  8702  0D83  3000               	movlw	0
  8703  0D84  3D61               	addwfc	xtoa@c+1,w
  8704  0D85  00E1               	movwf	xtoa@c+1
  8705  0D86  0844               	movf	xtoa@x,w
  8706  0D87  3EBF               	addlw	191
  8707  0D88  00C5               	movwf	??_xtoa
  8708  0D89  30FF               	movlw	255
  8709  0D8A  1803               	skipnc
  8710  0D8B  3000               	movlw	0
  8711  0D8C  00C6               	movwf	??_xtoa+1
  8712  0D8D  3000               	movlw	0
  8713  0D8E  0246               	subwf	??_xtoa+1,w
  8714  0D8F  301A               	movlw	26
  8715  0D90  1903               	skipnz
  8716  0D91  0245               	subwf	??_xtoa,w
  8717  0D92  1803               	btfsc	3,0
  8718  0D93  2D96               	goto	u4980
  8719  0D94  3001               	movlw	1
  8720  0D95  2D97               	goto	u4990
  8721  0D96                     u4980:
  8722  0D96  3000               	movlw	0
  8723  0D97                     u4990:
  8724  0D97  00C7               	movwf	??_xtoa+2
  8725  0D98  01C8               	clrf	??_xtoa+3
  8726  0D99  0847               	movf	??_xtoa+2,w
  8727  0D9A  00CE               	movwf	_xtoa$2332
  8728  0D9B  0848               	movf	??_xtoa+3,w
  8729  0D9C  00CF               	movwf	_xtoa$2332+1
  8730  0D9D  084E               	movf	_xtoa$2332,w
  8731  0D9E  044F               	iorwf	_xtoa$2332+1,w
  8732  0D9F  1903               	btfsc	3,2
  8733  0DA0  2DCC               	goto	l6799
  8734  0DA1  3020               	movlw	32
  8735  0DA2  0460               	iorwf	xtoa@c,w
  8736  0DA3  00C5               	movwf	??_xtoa
  8737  0DA4  3000               	movlw	0
  8738  0DA5  0461               	iorwf	xtoa@c+1,w
  8739  0DA6  00C6               	movwf	??_xtoa+1
  8740  0DA7  0845               	movf	??_xtoa,w
  8741  0DA8  3E9F               	addlw	159
  8742  0DA9  00C7               	movwf	??_xtoa+2
  8743  0DAA  30FF               	movlw	255
  8744  0DAB  3D46               	addwfc	??_xtoa+1,w
  8745  0DAC  00C8               	movwf	??_xtoa+3
  8746  0DAD  3000               	movlw	0
  8747  0DAE  0248               	subwf	??_xtoa+3,w
  8748  0DAF  301A               	movlw	26
  8749  0DB0  1903               	skipnz
  8750  0DB1  0247               	subwf	??_xtoa+2,w
  8751  0DB2  1803               	btfsc	3,0
  8752  0DB3  2DB6               	goto	u5010
  8753  0DB4  3001               	movlw	1
  8754  0DB5  2DB7               	goto	u5020
  8755  0DB6                     u5010:
  8756  0DB6  3000               	movlw	0
  8757  0DB7                     u5020:
  8758  0DB7  00C9               	movwf	??_xtoa+4
  8759  0DB8  01CA               	clrf	??_xtoa+5
  8760  0DB9  0849               	movf	??_xtoa+4,w
  8761  0DBA  00D0               	movwf	_xtoa$2333
  8762  0DBB  084A               	movf	??_xtoa+5,w
  8763  0DBC  00D1               	movwf	_xtoa$2333+1
  8764  0DBD  0850               	movf	_xtoa$2333,w
  8765  0DBE  0451               	iorwf	_xtoa$2333+1,w
  8766  0DBF  1903               	btfsc	3,2
  8767  0DC0  2DCC               	goto	l6799
  8768                           
  8769                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 647:             c =
      +                           toupper(c);
  8770  0DC1  0861               	movf	xtoa@c+1,w
  8771  0DC2  00AA               	movwf	toupper@c+1
  8772  0DC3  0860               	movf	xtoa@c,w
  8773  0DC4  00A9               	movwf	toupper@c
  8774  0DC5  319E  268D  318D   	fcall	_toupper
  8775  0DC8  082A               	movf	?_toupper+1,w
  8776  0DC9  00E1               	movwf	xtoa@c+1
  8777  0DCA  0829               	movf	?_toupper,w
  8778  0DCB  00E0               	movwf	xtoa@c
  8779  0DCC                     l6799:
  8780                           
  8781                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 649:         dbuf[i]
      +                           = (char)c;
  8782  0DCC  0860               	movf	xtoa@c,w
  8783  0DCD  00C5               	movwf	??_xtoa
  8784  0DCE  085E               	movf	xtoa@i,w
  8785  0DCF  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8786  0DD0  0086               	movwf	6
  8787  0DD1  3002               	movlw	2	; select bank5/6
  8788  0DD2  0087               	movwf	7
  8789  0DD3  0845               	movf	??_xtoa,w
  8790  0DD4  0081               	movwf	1
  8791                           
  8792                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 650:         --p;
  8793  0DD5  30FF               	movlw	255
  8794  0DD6  07D2               	addwf	xtoa@p,f
  8795  0DD7  30FF               	movlw	255
  8796  0DD8  3DD3               	addwfc	xtoa@p+1,f
  8797                           
  8798                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 651:         --w;
  8799  0DD9  30FF               	movlw	255
  8800  0DDA  07D4               	addwf	xtoa@w,f
  8801  0DDB  30FF               	movlw	255
  8802  0DDC  3DD5               	addwfc	xtoa@w+1,f
  8803                           
  8804                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 652:         n = n >
      +                          > 4;
  8805  0DDD  3056               	movlw	low xtoa@n
  8806  0DDE  0086               	movwf	6
  8807  0DDF  3000               	movlw	high xtoa@n
  8808  0DE0  0087               	movwf	7
  8809  0DE1  3F40               	moviw [0]fsr1
  8810  0DE2  00C5               	movwf	??_xtoa
  8811  0DE3  3F41               	moviw [1]fsr1
  8812  0DE4  00C6               	movwf	??_xtoa+1
  8813  0DE5  3F42               	moviw [2]fsr1
  8814  0DE6  00C7               	movwf	??_xtoa+2
  8815  0DE7  3F43               	moviw [3]fsr1
  8816  0DE8  00C8               	movwf	??_xtoa+3
  8817  0DE9  3F44               	moviw [4]fsr1
  8818  0DEA  00C9               	movwf	??_xtoa+4
  8819  0DEB  3F45               	moviw [5]fsr1
  8820  0DEC  00CA               	movwf	??_xtoa+5
  8821  0DED  3F46               	moviw [6]fsr1
  8822  0DEE  00CB               	movwf	??_xtoa+6
  8823  0DEF  3F47               	moviw [7]fsr1
  8824  0DF0  00CC               	movwf	??_xtoa+7
  8825  0DF1  3004               	movlw	4
  8826  0DF2                     u5045:
  8827  0DF2  0020               	movlb	0	; select bank0
  8828  0DF3  36CC               	lsrf	??_xtoa+7,f
  8829  0DF4  0CCB               	rrf	??_xtoa+6,f
  8830  0DF5  0CCA               	rrf	??_xtoa+5,f
  8831  0DF6  0CC9               	rrf	??_xtoa+4,f
  8832  0DF7  0CC8               	rrf	??_xtoa+3,f
  8833  0DF8  0CC7               	rrf	??_xtoa+2,f
  8834  0DF9  0CC6               	rrf	??_xtoa+1,f
  8835  0DFA  0CC5               	rrf	??_xtoa,f
  8836  0DFB  0B89               	decfsz	9,f
  8837  0DFC  2DF2               	goto	u5045
  8838  0DFD  0020               	movlb	0	; select bank0
  8839  0DFE  084C               	movf	??_xtoa+7,w
  8840  0DFF  00DD               	movwf	xtoa@n+7
  8841  0E00  084B               	movf	??_xtoa+6,w
  8842  0E01  00DC               	movwf	xtoa@n+6
  8843  0E02  084A               	movf	??_xtoa+5,w
  8844  0E03  00DB               	movwf	xtoa@n+5
  8845  0E04  0849               	movf	??_xtoa+4,w
  8846  0E05  00DA               	movwf	xtoa@n+4
  8847  0E06  0848               	movf	??_xtoa+3,w
  8848  0E07  00D9               	movwf	xtoa@n+3
  8849  0E08  0847               	movf	??_xtoa+2,w
  8850  0E09  00D8               	movwf	xtoa@n+2
  8851  0E0A  0846               	movf	??_xtoa+1,w
  8852  0E0B  00D7               	movwf	xtoa@n+1
  8853  0E0C  0845               	movf	??_xtoa,w
  8854  0E0D  00D6               	movwf	xtoa@n
  8855  0E0E                     l6807:
  8856                           
  8857                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 642:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8858  0E0E  0020               	movlb	0	; select bank0
  8859  0E0F  085F               	movf	xtoa@i+1,w
  8860  0E10  3A80               	xorlw	128
  8861  0E11  00C5               	movwf	??_xtoa
  8862  0E12  3080               	movlw	128
  8863  0E13  0245               	subwf	??_xtoa,w
  8864  0E14  1D03               	skipz
  8865  0E15  2E18               	goto	u5055
  8866  0E16  3002               	movlw	2
  8867  0E17  025E               	subwf	xtoa@i,w
  8868  0E18                     u5055:
  8869  0E18  1C03               	skipc
  8870  0E19  2E3F               	goto	l1999
  8871  0E1A  0020               	movlb	0	; select bank0
  8872  0E1B  0856               	movf	xtoa@n,w
  8873  0E1C  0457               	iorwf	xtoa@n+1,w
  8874  0E1D  0458               	iorwf	xtoa@n+2,w
  8875  0E1E  0459               	iorwf	xtoa@n+3,w
  8876  0E1F  045A               	iorwf	xtoa@n+4,w
  8877  0E20  045B               	iorwf	xtoa@n+5,w
  8878  0E21  045C               	iorwf	xtoa@n+6,w
  8879  0E22  045D               	iorwf	xtoa@n+7,w
  8880  0E23  1D03               	skipz
  8881  0E24  2D65               	goto	l6779
  8882  0E25  0853               	movf	xtoa@p+1,w
  8883  0E26  3A80               	xorlw	128
  8884  0E27  00C5               	movwf	??_xtoa
  8885  0E28  3080               	movlw	128
  8886  0E29  0245               	subwf	??_xtoa,w
  8887  0E2A  1D03               	skipz
  8888  0E2B  2E2E               	goto	u5075
  8889  0E2C  3001               	movlw	1
  8890  0E2D  0252               	subwf	xtoa@p,w
  8891  0E2E                     u5075:
  8892  0E2E  1803               	skipnc
  8893  0E2F  2D65               	goto	l6779
  8894  0E30  0020               	movlb	0	; select bank0
  8895  0E31  0855               	movf	xtoa@w+1,w
  8896  0E32  3A80               	xorlw	128
  8897  0E33  00C5               	movwf	??_xtoa
  8898  0E34  3080               	movlw	128
  8899  0E35  0245               	subwf	??_xtoa,w
  8900  0E36  1D03               	skipz
  8901  0E37  2E3A               	goto	u5085
  8902  0E38  3001               	movlw	1
  8903  0E39  0254               	subwf	xtoa@w,w
  8904  0E3A                     u5085:
  8905  0E3A  1C03               	skipc
  8906  0E3B  2E3F               	goto	l1999
  8907  0E3C  0020               	movlb	0	; select bank0
  8908  0E3D  18EA               	btfsc	_flags,1
  8909  0E3E  2D65               	goto	l6779
  8910  0E3F                     l1999:
  8911                           
  8912                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
  8913  0E3F  0020               	movlb	0	; select bank0
  8914  0E40  1E6A               	btfss	_flags,4
  8915  0E41  2E5C               	goto	l6823
  8916                           
  8917                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 657:         --i;
  8918  0E42  30FF               	movlw	255
  8919  0E43  07DE               	addwf	xtoa@i,f
  8920  0E44  30FF               	movlw	255
  8921  0E45  3DDF               	addwfc	xtoa@i+1,f
  8922                           
  8923                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 658:         dbuf[i]
      +                           = x;
  8924  0E46  0844               	movf	xtoa@x,w
  8925  0E47  00C5               	movwf	??_xtoa
  8926  0E48  085E               	movf	xtoa@i,w
  8927  0E49  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8928  0E4A  0086               	movwf	6
  8929  0E4B  3002               	movlw	2	; select bank5/6
  8930  0E4C  0087               	movwf	7
  8931  0E4D  0845               	movf	??_xtoa,w
  8932  0E4E  0081               	movwf	1
  8933                           
  8934                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 659:         --i;
  8935  0E4F  30FF               	movlw	255
  8936  0E50  07DE               	addwf	xtoa@i,f
  8937  0E51  30FF               	movlw	255
  8938  0E52  3DDF               	addwfc	xtoa@i+1,f
  8939                           
  8940                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 660:         dbuf[i]
      +                           = '0';
  8941  0E53  3030               	movlw	48
  8942  0E54  00C5               	movwf	??_xtoa
  8943  0E55  085E               	movf	xtoa@i,w
  8944  0E56  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8945  0E57  0086               	movwf	6
  8946  0E58  3002               	movlw	2	; select bank5/6
  8947  0E59  0087               	movwf	7
  8948  0E5A  0845               	movf	??_xtoa,w
  8949  0E5B  0081               	movwf	1
  8950  0E5C                     l6823:
  8951                           
  8952                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 664:     return pad(
      +                          fp, &dbuf[i], w);
  8953  0E5C  085E               	movf	xtoa@i,w
  8954  0E5D  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
  8955  0E5E  00C5               	movwf	??_xtoa
  8956  0E5F  0845               	movf	??_xtoa,w
  8957  0E60  00B3               	movwf	pad@buf
  8958  0E61  0855               	movf	xtoa@w+1,w
  8959  0E62  00B5               	movwf	pad@p+1
  8960  0E63  0854               	movf	xtoa@w,w
  8961  0E64  00B4               	movwf	pad@p
  8962  0E65  084D               	movf	xtoa@fp,w
  8963  0E66  3192  22CD         	fcall	_pad
  8964  0E68  0834               	movf	?_pad+1,w
  8965  0E69  00BD               	movwf	?_xtoa+1
  8966  0E6A  0833               	movf	?_pad,w
  8967  0E6B  00BC               	movwf	?_xtoa
  8968  0E6C  0008               	return
  8969  0E6D                     __end_of_xtoa:
  8970                           
  8971                           	psect	text13
  8972  1E8D                     __ptext13:	
  8973 ;; *************** function _toupper *****************
  8974 ;; Defined at:
  8975 ;;		line 4 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/toupper.c"
  8976 ;; Parameters:    Size  Location     Type
  8977 ;;  c               2    9[BANK0 ] int 
  8978 ;; Auto vars:     Size  Location     Type
  8979 ;;		None
  8980 ;; Return value:  Size  Location     Type
  8981 ;;                  2    9[BANK0 ] int 
  8982 ;; Registers used:
  8983 ;;		wreg, status,2, status,0
  8984 ;; Tracked objects:
  8985 ;;		On entry : 1F/0
  8986 ;;		On exit  : 1F/0
  8987 ;;		Unchanged: 0/0
  8988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8991 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8992 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8993 ;;Total ram usage:        8 bytes
  8994 ;; Hardware stack levels used:    1
  8995 ;; Hardware stack levels required when called:    8
  8996 ;; This function calls:
  8997 ;;		_islower
  8998 ;; This function is called by:
  8999 ;;		_xtoa
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           
  9004                           ;psect for function _toupper
  9005  1E8D                     _toupper:
  9006                           
  9007                           ;incstack = 0
  9008                           ; Regs used in _toupper: [wreg+status,2+status,0]
  9009  1E8D  0829               	movf	toupper@c,w
  9010  1E8E  3E9F               	addlw	159
  9011  1E8F  00AB               	movwf	??_toupper
  9012  1E90  30FF               	movlw	255
  9013  1E91  3D2A               	addwfc	toupper@c+1,w
  9014  1E92  00AC               	movwf	??_toupper+1
  9015  1E93  3000               	movlw	0
  9016  1E94  022C               	subwf	??_toupper+1,w
  9017  1E95  301A               	movlw	26
  9018  1E96  1903               	skipnz
  9019  1E97  022B               	subwf	??_toupper,w
  9020  1E98  1803               	btfsc	3,0
  9021  1E99  2E9C               	goto	u4590
  9022  1E9A  3001               	movlw	1
  9023  1E9B  2E9D               	goto	u4600
  9024  1E9C                     u4590:
  9025  1E9C  3000               	movlw	0
  9026  1E9D                     u4600:
  9027  1E9D  00AD               	movwf	??_toupper+2
  9028  1E9E  01AE               	clrf	??_toupper+3
  9029  1E9F  082D               	movf	??_toupper+2,w
  9030  1EA0  00AF               	movwf	_toupper$2462
  9031  1EA1  082E               	movf	??_toupper+3,w
  9032  1EA2  00B0               	movwf	_toupper$2462+1
  9033  1EA3  082F               	movf	_toupper$2462,w
  9034  1EA4  0430               	iorwf	_toupper$2462+1,w
  9035  1EA5  1903               	btfsc	3,2
  9036  1EA6  0008               	return
  9037  1EA7  305F               	movlw	95
  9038  1EA8  0529               	andwf	toupper@c,w
  9039  1EA9  00A9               	movwf	?_toupper
  9040  1EAA  3000               	movlw	0
  9041  1EAB  052A               	andwf	toupper@c+1,w
  9042  1EAC  00AA               	movwf	?_toupper+1
  9043  1EAD  0008               	return
  9044  1EAE                     __end_of_toupper:
  9045                           
  9046                           	psect	text14
  9047  1D3E                     __ptext14:	
  9048 ;; *************** function _islower *****************
  9049 ;; Defined at:
  9050 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/islower.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  c               2    3[BANK0 ] int 
  9053 ;; Auto vars:     Size  Location     Type
  9054 ;;		None
  9055 ;; Return value:  Size  Location     Type
  9056 ;;                  2    3[BANK0 ] int 
  9057 ;; Registers used:
  9058 ;;		wreg, status,2, status,0
  9059 ;; Tracked objects:
  9060 ;;		On entry : 0/0
  9061 ;;		On exit  : 1F/0
  9062 ;;		Unchanged: 0/0
  9063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9064 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9066 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9067 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9068 ;;Total ram usage:        6 bytes
  9069 ;; Hardware stack levels used:    1
  9070 ;; Hardware stack levels required when called:    7
  9071 ;; This function calls:
  9072 ;;		Nothing
  9073 ;; This function is called by:
  9074 ;;		_toupper
  9075 ;; This function uses a non-reentrant model
  9076 ;;
  9077                           
  9078                           
  9079                           ;psect for function _islower
  9080  1D3E                     _islower:
  9081                           
  9082                           ;incstack = 0
  9083                           ; Regs used in _islower: [wreg+status,2+status,0]
  9084  1D3E  0020               	movlb	0	; select bank0
  9085  1D3F  0823               	movf	islower@c,w
  9086  1D40  3E9F               	addlw	159
  9087  1D41  00A5               	movwf	??_islower
  9088  1D42  30FF               	movlw	255
  9089  1D43  3D24               	addwfc	islower@c+1,w
  9090  1D44  00A6               	movwf	??_islower+1
  9091  1D45  3000               	movlw	0
  9092  1D46  0226               	subwf	??_islower+1,w
  9093  1D47  301A               	movlw	26
  9094  1D48  1903               	skipnz
  9095  1D49  0225               	subwf	??_islower,w
  9096  1D4A  1803               	btfsc	3,0
  9097  1D4B  2D4E               	goto	u4190
  9098  1D4C  3001               	movlw	1
  9099  1D4D  2D4F               	goto	u4200
  9100  1D4E                     u4190:
  9101  1D4E  3000               	movlw	0
  9102  1D4F                     u4200:
  9103  1D4F  00A7               	movwf	??_islower+2
  9104  1D50  01A8               	clrf	??_islower+3
  9105  1D51  0827               	movf	??_islower+2,w
  9106  1D52  00A3               	movwf	?_islower
  9107  1D53  0828               	movf	??_islower+3,w
  9108  1D54  00A4               	movwf	?_islower+1
  9109  1D55  0008               	return
  9110  1D56                     __end_of_islower:
  9111                           
  9112                           	psect	text15
  9113  1D26                     __ptext15:	
  9114 ;; *************** function _isupper *****************
  9115 ;; Defined at:
  9116 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/isupper.c"
  9117 ;; Parameters:    Size  Location     Type
  9118 ;;  c               2    3[BANK0 ] int 
  9119 ;; Auto vars:     Size  Location     Type
  9120 ;;		None
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  2    3[BANK0 ] int 
  9123 ;; Registers used:
  9124 ;;		wreg, status,2, status,0
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 1F/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9132 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9133 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9134 ;;Total ram usage:        6 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:    7
  9137 ;; This function calls:
  9138 ;;		Nothing
  9139 ;; This function is called by:
  9140 ;;		_xtoa
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           
  9145                           ;psect for function _isupper
  9146  1D26                     _isupper:
  9147                           
  9148                           ;incstack = 0
  9149                           ; Regs used in _isupper: [wreg+status,2+status,0]
  9150  1D26  0020               	movlb	0	; select bank0
  9151  1D27  0823               	movf	isupper@c,w
  9152  1D28  3EBF               	addlw	191
  9153  1D29  00A5               	movwf	??_isupper
  9154  1D2A  30FF               	movlw	255
  9155  1D2B  3D24               	addwfc	isupper@c+1,w
  9156  1D2C  00A6               	movwf	??_isupper+1
  9157  1D2D  3000               	movlw	0
  9158  1D2E  0226               	subwf	??_isupper+1,w
  9159  1D2F  301A               	movlw	26
  9160  1D30  1903               	skipnz
  9161  1D31  0225               	subwf	??_isupper,w
  9162  1D32  1803               	btfsc	3,0
  9163  1D33  2D36               	goto	u4550
  9164  1D34  3001               	movlw	1
  9165  1D35  2D37               	goto	u4560
  9166  1D36                     u4550:
  9167  1D36  3000               	movlw	0
  9168  1D37                     u4560:
  9169  1D37  00A7               	movwf	??_isupper+2
  9170  1D38  01A8               	clrf	??_isupper+3
  9171  1D39  0827               	movf	??_isupper+2,w
  9172  1D3A  00A3               	movwf	?_isupper
  9173  1D3B  0828               	movf	??_isupper+3,w
  9174  1D3C  00A4               	movwf	?_isupper+1
  9175  1D3D  0008               	return
  9176  1D3E                     __end_of_isupper:
  9177                           
  9178                           	psect	text16
  9179  1E2E                     __ptext16:	
  9180 ;; *************** function _isalpha *****************
  9181 ;; Defined at:
  9182 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/isalpha.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  c               2    3[BANK0 ] int 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;		None
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  2    3[BANK0 ] int 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 1F/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9196 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;Total ram usage:        8 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; Hardware stack levels required when called:    7
  9203 ;; This function calls:
  9204 ;;		Nothing
  9205 ;; This function is called by:
  9206 ;;		_xtoa
  9207 ;; This function uses a non-reentrant model
  9208 ;;
  9209                           
  9210                           
  9211                           ;psect for function _isalpha
  9212  1E2E                     _isalpha:
  9213                           
  9214                           ;incstack = 0
  9215                           ; Regs used in _isalpha: [wreg+status,2+status,0]
  9216  1E2E  3020               	movlw	32
  9217  1E2F  0020               	movlb	0	; select bank0
  9218  1E30  0423               	iorwf	isalpha@c,w
  9219  1E31  00A5               	movwf	??_isalpha
  9220  1E32  3000               	movlw	0
  9221  1E33  0424               	iorwf	isalpha@c+1,w
  9222  1E34  00A6               	movwf	??_isalpha+1
  9223  1E35  0825               	movf	??_isalpha,w
  9224  1E36  3E9F               	addlw	159
  9225  1E37  00A7               	movwf	??_isalpha+2
  9226  1E38  30FF               	movlw	255
  9227  1E39  3D26               	addwfc	??_isalpha+1,w
  9228  1E3A  00A8               	movwf	??_isalpha+3
  9229  1E3B  3000               	movlw	0
  9230  1E3C  0228               	subwf	??_isalpha+3,w
  9231  1E3D  301A               	movlw	26
  9232  1E3E  1903               	skipnz
  9233  1E3F  0227               	subwf	??_isalpha+2,w
  9234  1E40  1803               	btfsc	3,0
  9235  1E41  2E44               	goto	u4570
  9236  1E42  3001               	movlw	1
  9237  1E43  2E45               	goto	u4580
  9238  1E44                     u4570:
  9239  1E44  3000               	movlw	0
  9240  1E45                     u4580:
  9241  1E45  00A9               	movwf	??_isalpha+4
  9242  1E46  01AA               	clrf	??_isalpha+5
  9243  1E47  0829               	movf	??_isalpha+4,w
  9244  1E48  00A3               	movwf	?_isalpha
  9245  1E49  082A               	movf	??_isalpha+5,w
  9246  1E4A  00A4               	movwf	?_isalpha+1
  9247  1E4B  0008               	return
  9248  1E4C                     __end_of_isalpha:
  9249                           
  9250                           	psect	text17
  9251  0971                     __ptext17:	
  9252 ;; *************** function _stoa *****************
  9253 ;; Defined at:
  9254 ;;		line 546 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  9255 ;; Parameters:    Size  Location     Type
  9256 ;;  fp              1    wreg     PTR struct _IO_FILE
  9257 ;;		 -> sprintf@f(6), 
  9258 ;;  s               2   11[BANK0 ] PTR unsigned char 
  9259 ;;		 -> ?_sprintf(2), lcd_fs_name(112), lcd_aux_name(14), lcd_src_name(40), 
  9260 ;; Auto vars:     Size  Location     Type
  9261 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
  9262 ;;		 -> sprintf@f(6), 
  9263 ;;  nuls            7   16[BANK0 ] unsigned char [7]
  9264 ;;  l               2   32[BANK0 ] int 
  9265 ;;  p               2   30[BANK0 ] int 
  9266 ;;  cp              2   28[BANK0 ] PTR unsigned char 
  9267 ;;		 -> stoa@nuls(7), ?_sprintf(2), lcd_fs_name(112), lcd_aux_name(14), 
  9268 ;;		 -> lcd_src_name(40), 
  9269 ;;  w               2   25[BANK0 ] int 
  9270 ;;  i               2   23[BANK0 ] int 
  9271 ;; Return value:  Size  Location     Type
  9272 ;;                  2   11[BANK0 ] int 
  9273 ;; Registers used:
  9274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9275 ;; Tracked objects:
  9276 ;;		On entry : 1F/1
  9277 ;;		On exit  : 1F/0
  9278 ;;		Unchanged: 0/0
  9279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9280 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9281 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9282 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9283 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9284 ;;Total ram usage:       23 bytes
  9285 ;; Hardware stack levels used:    1
  9286 ;; Hardware stack levels required when called:    9
  9287 ;; This function calls:
  9288 ;;		_fputc
  9289 ;;		_strlen
  9290 ;; This function is called by:
  9291 ;;		_vfpfcnvrt
  9292 ;; This function uses a non-reentrant model
  9293 ;;
  9294                           
  9295                           
  9296                           ;psect for function _stoa
  9297  0971                     _stoa:
  9298                           
  9299                           ;incstack = 0
  9300                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9301                           ;stoa@fp stored from wreg
  9302  0971  0020               	movlb	0	; select bank0
  9303  0972  00BB               	movwf	stoa@fp
  9304                           
  9305                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 546: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 5
      +                          47: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 548:     char *
      +                          cp, nuls[] = "(null)";
  9306  0973  3029               	movlw	low stoa@F1139
  9307  0974  0086               	movwf	6
  9308  0975  3002               	movlw	high stoa@F1139
  9309  0976  0087               	movwf	7
  9310  0977  3030               	movlw	low stoa@nuls
  9311  0978  0084               	movwf	4
  9312  0979  3000               	movlw	high stoa@nuls
  9313  097A  0085               	movwf	5
  9314  097B  3007               	movlw	7
  9315  097C  00AD               	movwf	??_stoa
  9316  097D                     u4850:
  9317  097D  0016               	moviw fsr1++
  9318  097E  001A               	movwi fsr0++
  9319  097F  0BAD               	decfsz	??_stoa,f
  9320  0980  297D               	goto	u4850
  9321                           
  9322                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 549:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9323  0981  082C               	movf	stoa@s+1,w
  9324  0982  00BD               	movwf	stoa@cp+1
  9325  0983  082B               	movf	stoa@s,w
  9326  0984  00BC               	movwf	stoa@cp
  9327                           
  9328                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9329  0985  083C               	movf	stoa@cp,w
  9330  0986  043D               	iorwf	stoa@cp+1,w
  9331  0987  1D03               	btfss	3,2
  9332  0988  298D               	goto	l6721
  9333                           
  9334                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 554:         cp = nu
      +                          ls;
  9335  0989  3030               	movlw	low stoa@nuls
  9336  098A  00BC               	movwf	stoa@cp
  9337  098B  3000               	movlw	high stoa@nuls
  9338  098C  00BD               	movwf	stoa@cp+1
  9339  098D                     l6721:
  9340                           
  9341                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 558:     l = strlen(
      +                          cp);
  9342  098D  083D               	movf	stoa@cp+1,w
  9343  098E  00A4               	movwf	strlen@s+1
  9344  098F  083C               	movf	stoa@cp,w
  9345  0990  00A3               	movwf	strlen@s
  9346  0991  319C  24DF  3189   	fcall	_strlen
  9347  0994  0824               	movf	?_strlen+1,w
  9348  0995  00C1               	movwf	stoa@l+1
  9349  0996  0823               	movf	?_strlen,w
  9350  0997  00C0               	movwf	stoa@l
  9351                           
  9352                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9353  0998  0022               	movlb	2	; select bank2
  9354  0999  082B               	movf	(_prec+1)^(0+256),w
  9355  099A  0020               	movlb	0	; select bank0
  9356  099B  00BF               	movwf	stoa@p+1
  9357  099C  0022               	movlb	2	; select bank2
  9358  099D  082A               	movf	_prec^(0+256),w
  9359  099E  0020               	movlb	0	; select bank0
  9360  099F  00BE               	movwf	stoa@p
  9361                           
  9362                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
  9363  09A0  1BBF               	btfsc	stoa@p+1,7
  9364  09A1  29B3               	goto	l1957
  9365  09A2  083F               	movf	stoa@p+1,w
  9366  09A3  3A80               	xorlw	128
  9367  09A4  00AD               	movwf	??_stoa
  9368  09A5  0841               	movf	stoa@l+1,w
  9369  09A6  3A80               	xorlw	128
  9370  09A7  022D               	subwf	??_stoa,w
  9371  09A8  1D03               	skipz
  9372  09A9  29AC               	goto	u4885
  9373  09AA  0840               	movf	stoa@l,w
  9374  09AB  023E               	subwf	stoa@p,w
  9375  09AC                     u4885:
  9376  09AC  1803               	btfsc	3,0
  9377  09AD  29B3               	goto	l1957
  9378  09AE  0020               	movlb	0	; select bank0
  9379  09AF  083F               	movf	stoa@p+1,w
  9380  09B0  00C1               	movwf	stoa@l+1
  9381  09B1  083E               	movf	stoa@p,w
  9382  09B2  00C0               	movwf	stoa@l
  9383  09B3                     l1957:
  9384                           
  9385                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9386  09B3  0020               	movlb	0	; select bank0
  9387  09B4  0841               	movf	stoa@l+1,w
  9388  09B5  00BF               	movwf	stoa@p+1
  9389  09B6  0840               	movf	stoa@l,w
  9390  09B7  00BE               	movwf	stoa@p
  9391                           
  9392                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9393  09B8  0022               	movlb	2	; select bank2
  9394  09B9  0829               	movf	(_width+1)^(0+256),w
  9395  09BA  0020               	movlb	0	; select bank0
  9396  09BB  00BA               	movwf	stoa@w+1
  9397  09BC  0022               	movlb	2	; select bank2
  9398  09BD  0828               	movf	_width^(0+256),w
  9399  09BE  0020               	movlb	0	; select bank0
  9400  09BF  00B9               	movwf	stoa@w
  9401                           
  9402                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 565:     if (!(flags
      +                           & (1 << 0))) {
  9403  09C0  1C6A               	btfss	_flags,0
  9404  09C1  29D4               	goto	l6739
  9405  09C2  29E0               	goto	l6741
  9406  09C3                     l6735:
  9407                           
  9408                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 567:             fpu
      +                          tc(' ', fp);
  9409  09C3  3020               	movlw	32
  9410  09C4  0020               	movlb	0	; select bank0
  9411  09C5  00A3               	movwf	fputc@c
  9412  09C6  3000               	movlw	0
  9413  09C7  00A4               	movwf	fputc@c+1
  9414  09C8  083B               	movf	stoa@fp,w
  9415  09C9  00AD               	movwf	??_stoa
  9416  09CA  082D               	movf	??_stoa,w
  9417  09CB  00A5               	movwf	fputc@fp
  9418  09CC  3192  2281  3189   	fcall	_fputc
  9419                           
  9420                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 568:             ++l
      +                          ;
  9421  09CF  3001               	movlw	1
  9422  09D0  0020               	movlb	0	; select bank0
  9423  09D1  07C0               	addwf	stoa@l,f
  9424  09D2  3000               	movlw	0
  9425  09D3  3DC1               	addwfc	stoa@l+1,f
  9426  09D4                     l6739:
  9427                           
  9428                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 566:         while (
      +                          l < w) {
  9429  09D4  0841               	movf	stoa@l+1,w
  9430  09D5  3A80               	xorlw	128
  9431  09D6  00AD               	movwf	??_stoa
  9432  09D7  083A               	movf	stoa@w+1,w
  9433  09D8  3A80               	xorlw	128
  9434  09D9  022D               	subwf	??_stoa,w
  9435  09DA  1D03               	skipz
  9436  09DB  29DE               	goto	u4905
  9437  09DC  0839               	movf	stoa@w,w
  9438  09DD  0240               	subwf	stoa@l,w
  9439  09DE                     u4905:
  9440  09DE  1C03               	skipc
  9441  09DF  29C3               	goto	l6735
  9442  09E0                     l6741:
  9443                           
  9444                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  9445  09E0  0020               	movlb	0	; select bank0
  9446  09E1  01B7               	clrf	stoa@i
  9447  09E2  01B8               	clrf	stoa@i+1
  9448  09E3                     l6749:	
  9449                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
  9450                           
  9451                           
  9452                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 574:     while (i < 
      +                          p) {
  9453  09E3  0838               	movf	stoa@i+1,w
  9454  09E4  3A80               	xorlw	128
  9455  09E5  00AD               	movwf	??_stoa
  9456  09E6  083F               	movf	stoa@p+1,w
  9457  09E7  3A80               	xorlw	128
  9458  09E8  022D               	subwf	??_stoa,w
  9459  09E9  1D03               	skipz
  9460  09EA  29ED               	goto	u4915
  9461  09EB  083E               	movf	stoa@p,w
  9462  09EC  0237               	subwf	stoa@i,w
  9463  09ED                     u4915:
  9464  09ED  1803               	btfsc	3,0
  9465  09EE  2A0C               	goto	l1966
  9466                           
  9467                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 575:         fputc(*
      +                          cp, fp);
  9468  09EF  0020               	movlb	0	; select bank0
  9469  09F0  083C               	movf	stoa@cp,w
  9470  09F1  0084               	movwf	4
  9471  09F2  083D               	movf	stoa@cp+1,w
  9472  09F3  0085               	movwf	5
  9473  09F4  0800               	movf	0,w	;code access
  9474  09F5  00AD               	movwf	??_stoa
  9475  09F6  01AE               	clrf	??_stoa+1
  9476  09F7  082D               	movf	??_stoa,w
  9477  09F8  00A3               	movwf	fputc@c
  9478  09F9  082E               	movf	??_stoa+1,w
  9479  09FA  00A4               	movwf	fputc@c+1
  9480  09FB  083B               	movf	stoa@fp,w
  9481  09FC  00AF               	movwf	??_stoa+2
  9482  09FD  082F               	movf	??_stoa+2,w
  9483  09FE  00A5               	movwf	fputc@fp
  9484  09FF  3192  2281  3189   	fcall	_fputc
  9485                           
  9486                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  9487  0A02  3001               	movlw	1
  9488  0A03  0020               	movlb	0	; select bank0
  9489  0A04  07BC               	addwf	stoa@cp,f
  9490  0A05  3000               	movlw	0
  9491  0A06  3DBD               	addwfc	stoa@cp+1,f
  9492                           
  9493                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 577:         ++i;
  9494  0A07  3001               	movlw	1
  9495  0A08  07B7               	addwf	stoa@i,f
  9496  0A09  3000               	movlw	0
  9497  0A0A  3DB8               	addwfc	stoa@i+1,f
  9498  0A0B  29E3               	goto	l6749
  9499  0A0C                     l1966:
  9500                           
  9501                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 581:     if (flags &
      +                           (1 << 0)) {
  9502  0A0C  0020               	movlb	0	; select bank0
  9503  0A0D  186A               	btfsc	_flags,0
  9504  0A0E  2A21               	goto	l6757
  9505  0A0F  2A2D               	goto	l6759
  9506  0A10                     l6753:
  9507                           
  9508                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 583:             fpu
      +                          tc(' ', fp);
  9509  0A10  3020               	movlw	32
  9510  0A11  0020               	movlb	0	; select bank0
  9511  0A12  00A3               	movwf	fputc@c
  9512  0A13  3000               	movlw	0
  9513  0A14  00A4               	movwf	fputc@c+1
  9514  0A15  083B               	movf	stoa@fp,w
  9515  0A16  00AD               	movwf	??_stoa
  9516  0A17  082D               	movf	??_stoa,w
  9517  0A18  00A5               	movwf	fputc@fp
  9518  0A19  3192  2281  3189   	fcall	_fputc
  9519                           
  9520                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 584:             ++l
      +                          ;
  9521  0A1C  3001               	movlw	1
  9522  0A1D  0020               	movlb	0	; select bank0
  9523  0A1E  07C0               	addwf	stoa@l,f
  9524  0A1F  3000               	movlw	0
  9525  0A20  3DC1               	addwfc	stoa@l+1,f
  9526  0A21                     l6757:
  9527                           
  9528                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 582:         while (
      +                          l < w) {
  9529  0A21  0841               	movf	stoa@l+1,w
  9530  0A22  3A80               	xorlw	128
  9531  0A23  00AD               	movwf	??_stoa
  9532  0A24  083A               	movf	stoa@w+1,w
  9533  0A25  3A80               	xorlw	128
  9534  0A26  022D               	subwf	??_stoa,w
  9535  0A27  1D03               	skipz
  9536  0A28  2A2B               	goto	u4935
  9537  0A29  0839               	movf	stoa@w,w
  9538  0A2A  0240               	subwf	stoa@l,w
  9539  0A2B                     u4935:
  9540  0A2B  1C03               	skipc
  9541  0A2C  2A10               	goto	l6753
  9542  0A2D                     l6759:
  9543                           
  9544                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 588:     return l;
  9545  0A2D  0020               	movlb	0	; select bank0
  9546  0A2E  0841               	movf	stoa@l+1,w
  9547  0A2F  00AC               	movwf	?_stoa+1
  9548  0A30  0840               	movf	stoa@l,w
  9549  0A31  00AB               	movwf	?_stoa
  9550  0A32  0008               	return
  9551  0A33                     __end_of_stoa:
  9552                           
  9553                           	psect	text18
  9554  06B3                     __ptext18:	
  9555 ;; *************** function _dtoa *****************
  9556 ;; Defined at:
  9557 ;;		line 274 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;  fp              1    wreg     PTR struct _IO_FILE
  9560 ;;		 -> sprintf@f(6), 
  9561 ;;  d               8   30[BANK0 ] long long 
  9562 ;; Auto vars:     Size  Location     Type
  9563 ;;  fp              1   41[BANK0 ] PTR struct _IO_FILE
  9564 ;;		 -> sprintf@f(6), 
  9565 ;;  n               8   50[BANK0 ] long long 
  9566 ;;  i               2   58[BANK0 ] int 
  9567 ;;  s               2   48[BANK0 ] int 
  9568 ;;  w               2   46[BANK0 ] int 
  9569 ;;  p               2   44[BANK0 ] int 
  9570 ;; Return value:  Size  Location     Type
  9571 ;;                  2   30[BANK0 ] int 
  9572 ;; Registers used:
  9573 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9574 ;; Tracked objects:
  9575 ;;		On entry : 1F/1
  9576 ;;		On exit  : 1F/0
  9577 ;;		Unchanged: 0/0
  9578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9579 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9580 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9581 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9582 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9583 ;;Total ram usage:       30 bytes
  9584 ;; Hardware stack levels used:    1
  9585 ;; Hardware stack levels required when called:   11
  9586 ;; This function calls:
  9587 ;;		___aodiv
  9588 ;;		___aomod
  9589 ;;		_abs
  9590 ;;		_pad
  9591 ;; This function is called by:
  9592 ;;		_vfpfcnvrt
  9593 ;; This function uses a non-reentrant model
  9594 ;;
  9595                           
  9596                           
  9597                           ;psect for function _dtoa
  9598  06B3                     _dtoa:
  9599                           
  9600                           ;incstack = 0
  9601                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9602                           ;dtoa@fp stored from wreg
  9603  06B3  0020               	movlb	0	; select bank0
  9604  06B4  00C9               	movwf	dtoa@fp
  9605                           
  9606                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 274: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.
      +                          c: 275: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 276:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 277:   
      +                            long long n;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 280:  
      +                             n = d;
  9607  06B5  083E               	movf	dtoa@d,w
  9608  06B6  00D2               	movwf	dtoa@n
  9609  06B7  083F               	movf	dtoa@d+1,w
  9610  06B8  00D3               	movwf	dtoa@n+1
  9611  06B9  0840               	movf	dtoa@d+2,w
  9612  06BA  00D4               	movwf	dtoa@n+2
  9613  06BB  0841               	movf	dtoa@d+3,w
  9614  06BC  00D5               	movwf	dtoa@n+3
  9615  06BD  0842               	movf	dtoa@d+4,w
  9616  06BE  00D6               	movwf	dtoa@n+4
  9617  06BF  0843               	movf	dtoa@d+5,w
  9618  06C0  00D7               	movwf	dtoa@n+5
  9619  06C1  0844               	movf	dtoa@d+6,w
  9620  06C2  00D8               	movwf	dtoa@n+6
  9621  06C3  0845               	movf	dtoa@d+7,w
  9622  06C4  00D9               	movwf	dtoa@n+7
  9623                           
  9624                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ?
      +                           1 : 0;
  9625  06C5  3052               	movlw	low dtoa@n
  9626  06C6  0086               	movwf	6
  9627  06C7  3000               	movlw	high dtoa@n
  9628  06C8  0087               	movwf	7
  9629  06C9  3F47               	moviw [7]fsr1
  9630  06CA  00C6               	movwf	??_dtoa
  9631  06CB  1FC6               	btfss	??_dtoa,7
  9632  06CC  2ECF               	goto	u4690
  9633  06CD  3001               	movlw	1
  9634  06CE  2ED0               	goto	u4700
  9635  06CF                     u4690:
  9636  06CF  3000               	movlw	0
  9637  06D0                     u4700:
  9638  06D0  0020               	movlb	0	; select bank0
  9639  06D1  00C7               	movwf	??_dtoa+1
  9640  06D2  01C8               	clrf	??_dtoa+2
  9641  06D3  0847               	movf	??_dtoa+1,w
  9642  06D4  00D0               	movwf	dtoa@s
  9643  06D5  0848               	movf	??_dtoa+2,w
  9644  06D6  00D1               	movwf	dtoa@s+1
  9645                           
  9646                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  9647  06D7  0850               	movf	dtoa@s,w
  9648  06D8  0451               	iorwf	dtoa@s+1,w
  9649  06D9  1903               	btfsc	3,2
  9650  06DA  2EF9               	goto	l1925
  9651                           
  9652                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  9653  06DB  09D2               	comf	dtoa@n,f
  9654  06DC  09D3               	comf	dtoa@n+1,f
  9655  06DD  09D4               	comf	dtoa@n+2,f
  9656  06DE  09D5               	comf	dtoa@n+3,f
  9657  06DF  09D6               	comf	dtoa@n+4,f
  9658  06E0  09D7               	comf	dtoa@n+5,f
  9659  06E1  09D8               	comf	dtoa@n+6,f
  9660  06E2  09D9               	comf	dtoa@n+7,f
  9661  06E3  0AD2               	incf	dtoa@n,f
  9662  06E4  1D03               	skipz
  9663  06E5  2EF9               	goto	l1925
  9664  06E6  0AD3               	incf	dtoa@n+1,f
  9665  06E7  1D03               	skipz
  9666  06E8  2EF9               	goto	l1925
  9667  06E9  0AD4               	incf	dtoa@n+2,f
  9668  06EA  1D03               	skipz
  9669  06EB  2EF9               	goto	l1925
  9670  06EC  0AD5               	incf	dtoa@n+3,f
  9671  06ED  1D03               	skipz
  9672  06EE  2EF9               	goto	l1925
  9673  06EF  0AD6               	incf	dtoa@n+4,f
  9674  06F0  1D03               	skipz
  9675  06F1  2EF9               	goto	l1925
  9676  06F2  0AD7               	incf	dtoa@n+5,f
  9677  06F3  1D03               	skipz
  9678  06F4  2EF9               	goto	l1925
  9679  06F5  0AD8               	incf	dtoa@n+6,f
  9680  06F6  1D03               	skipz
  9681  06F7  2EF9               	goto	l1925
  9682  06F8  0AD9               	incf	dtoa@n+7,f
  9683  06F9                     l1925:	
  9684                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 284:     }
  9685                           
  9686                           
  9687                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 287:     if (!(prec 
      +                          < 0)) {
  9688  06F9  0022               	movlb	2	; select bank2
  9689  06FA  1BAB               	btfsc	(_prec+1)^(0+256),7
  9690  06FB  2F01               	goto	l1926
  9691                           
  9692                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 288:         flags &
      +                          = ~(1 << 1);
  9693  06FC  30FD               	movlw	253
  9694  06FD  0020               	movlb	0	; select bank0
  9695  06FE  05EA               	andwf	_flags,f
  9696  06FF  30FF               	movlw	255
  9697  0700  05EB               	andwf	_flags+1,f
  9698  0701                     l1926:	
  9699                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 289:     }
  9700                           
  9701                           
  9702                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 290:     p = (0 < pr
      +                          ec) ? prec : 1;
  9703  0701  0022               	movlb	2	; select bank2
  9704  0702  082B               	movf	(_prec+1)^(0+256),w
  9705  0703  3A80               	xorlw	128
  9706  0704  0020               	movlb	0	; select bank0
  9707  0705  00C6               	movwf	??_dtoa
  9708  0706  3080               	movlw	128
  9709  0707  0246               	subwf	??_dtoa,w
  9710  0708  1D03               	skipz
  9711  0709  2F0D               	goto	u4745
  9712  070A  3001               	movlw	1
  9713  070B  0022               	movlb	2	; select bank2
  9714  070C  022A               	subwf	_prec^(0+256),w
  9715  070D                     u4745:
  9716  070D  1803               	skipnc
  9717  070E  2F15               	goto	l6667
  9718  070F  3001               	movlw	1
  9719  0710  0020               	movlb	0	; select bank0
  9720  0711  00CC               	movwf	dtoa@p
  9721  0712  3000               	movlw	0
  9722  0713  00CD               	movwf	dtoa@p+1
  9723  0714  2F1D               	goto	l1930
  9724  0715                     l6667:
  9725  0715  0022               	movlb	2	; select bank2
  9726  0716  082B               	movf	(_prec+1)^(0+256),w
  9727  0717  0020               	movlb	0	; select bank0
  9728  0718  00CD               	movwf	dtoa@p+1
  9729  0719  0022               	movlb	2	; select bank2
  9730  071A  082A               	movf	_prec^(0+256),w
  9731  071B  0020               	movlb	0	; select bank0
  9732  071C  00CC               	movwf	dtoa@p
  9733  071D                     l1930:
  9734                           
  9735                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 291:     w = width;
  9736  071D  0022               	movlb	2	; select bank2
  9737  071E  0829               	movf	(_width+1)^(0+256),w
  9738  071F  0020               	movlb	0	; select bank0
  9739  0720  00CF               	movwf	dtoa@w+1
  9740  0721  0022               	movlb	2	; select bank2
  9741  0722  0828               	movf	_width^(0+256),w
  9742  0723  0020               	movlb	0	; select bank0
  9743  0724  00CE               	movwf	dtoa@w
  9744                           
  9745                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 292:     if (s || (f
      +                          lags & (1 << 2))) {
  9746  0725  0850               	movf	dtoa@s,w
  9747  0726  0451               	iorwf	dtoa@s+1,w
  9748  0727  1D03               	btfss	3,2
  9749  0728  2F2B               	goto	l6673
  9750  0729  1D6A               	btfss	_flags,2
  9751  072A  2F2F               	goto	l1931
  9752  072B                     l6673:
  9753                           
  9754                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 293:         --w;
  9755  072B  30FF               	movlw	255
  9756  072C  07CE               	addwf	dtoa@w,f
  9757  072D  30FF               	movlw	255
  9758  072E  3DCF               	addwfc	dtoa@w+1,f
  9759  072F                     l1931:	
  9760                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 294:     }
  9761                           
  9762                           
  9763                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(
      +                          dbuf) - 1;
  9764  072F  301F               	movlw	31
  9765  0730  00DA               	movwf	dtoa@i
  9766  0731  3000               	movlw	0
  9767  0732  00DB               	movwf	dtoa@i+1
  9768                           
  9769                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '
      +                          \0';
  9770  0733  0025               	movlb	5	; select bank5
  9771  0734  01E8               	clrf	(_dbuf^(0+640)+31)
  9772                           
  9773                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9774  0735  2FC2               	goto	l1934
  9775  0736                     l6687:
  9776  0736  0020               	movlb	0	; select bank0
  9777  0737  0852               	movf	dtoa@n,w
  9778  0738  0453               	iorwf	dtoa@n+1,w
  9779  0739  0454               	iorwf	dtoa@n+2,w
  9780  073A  0455               	iorwf	dtoa@n+3,w
  9781  073B  0456               	iorwf	dtoa@n+4,w
  9782  073C  0457               	iorwf	dtoa@n+5,w
  9783  073D  0458               	iorwf	dtoa@n+6,w
  9784  073E  0459               	iorwf	dtoa@n+7,w
  9785  073F  1D03               	skipz
  9786  0740  2F5B               	goto	l6677
  9787  0741  084D               	movf	dtoa@p+1,w
  9788  0742  3A80               	xorlw	128
  9789  0743  00C6               	movwf	??_dtoa
  9790  0744  3080               	movlw	128
  9791  0745  0246               	subwf	??_dtoa,w
  9792  0746  1D03               	skipz
  9793  0747  2F4A               	goto	u4795
  9794  0748  3001               	movlw	1
  9795  0749  024C               	subwf	dtoa@p,w
  9796  074A                     u4795:
  9797  074A  1803               	skipnc
  9798  074B  2F5B               	goto	l6677
  9799  074C  0020               	movlb	0	; select bank0
  9800  074D  084F               	movf	dtoa@w+1,w
  9801  074E  3A80               	xorlw	128
  9802  074F  00C6               	movwf	??_dtoa
  9803  0750  3080               	movlw	128
  9804  0751  0246               	subwf	??_dtoa,w
  9805  0752  1D03               	skipz
  9806  0753  2F56               	goto	u4805
  9807  0754  3001               	movlw	1
  9808  0755  024E               	subwf	dtoa@w,w
  9809  0756                     u4805:
  9810  0756  1C03               	skipc
  9811  0757  2FCE               	goto	l6695
  9812  0758  0020               	movlb	0	; select bank0
  9813  0759  1CEA               	btfss	_flags,1
  9814  075A  2FCE               	goto	l6695
  9815  075B                     l6677:
  9816                           
  9817                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 300:         --i;
  9818  075B  30FF               	movlw	255
  9819  075C  0020               	movlb	0	; select bank0
  9820  075D  07DA               	addwf	dtoa@i,f
  9821  075E  30FF               	movlw	255
  9822  075F  3DDB               	addwfc	dtoa@i+1,f
  9823                           
  9824                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 301:         dbuf[i]
      +                           = '0' + abs(n % 10);
  9825  0760  300A               	movlw	10
  9826  0761  00A3               	movwf	___aomod@divisor
  9827  0762  01A4               	clrf	___aomod@divisor+1
  9828  0763  01A5               	clrf	___aomod@divisor+2
  9829  0764  01A6               	clrf	___aomod@divisor+3
  9830  0765  01A7               	clrf	___aomod@divisor+4
  9831  0766  01A8               	clrf	___aomod@divisor+5
  9832  0767  01A9               	clrf	___aomod@divisor+6
  9833  0768  01AA               	clrf	___aomod@divisor+7
  9834  0769  0852               	movf	dtoa@n,w
  9835  076A  00AB               	movwf	___aomod@dividend
  9836  076B  0853               	movf	dtoa@n+1,w
  9837  076C  00AC               	movwf	___aomod@dividend+1
  9838  076D  0854               	movf	dtoa@n+2,w
  9839  076E  00AD               	movwf	___aomod@dividend+2
  9840  076F  0855               	movf	dtoa@n+3,w
  9841  0770  00AE               	movwf	___aomod@dividend+3
  9842  0771  0856               	movf	dtoa@n+4,w
  9843  0772  00AF               	movwf	___aomod@dividend+4
  9844  0773  0857               	movf	dtoa@n+5,w
  9845  0774  00B0               	movwf	___aomod@dividend+5
  9846  0775  0858               	movf	dtoa@n+6,w
  9847  0776  00B1               	movwf	___aomod@dividend+6
  9848  0777  0859               	movf	dtoa@n+7,w
  9849  0778  00B2               	movwf	___aomod@dividend+7
  9850  0779  318A  2233  3186   	fcall	___aomod
  9851  077C  0824               	movf	?___aomod+1,w
  9852  077D  00B7               	movwf	abs@a+1
  9853  077E  0823               	movf	?___aomod,w
  9854  077F  00B6               	movwf	abs@a
  9855  0780  319D  250E  3186   	fcall	_abs
  9856  0783  0020               	movlb	0	; select bank0
  9857  0784  0836               	movf	?_abs,w
  9858  0785  3E30               	addlw	48
  9859  0786  00C6               	movwf	??_dtoa
  9860  0787  085A               	movf	dtoa@i,w
  9861  0788  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9862  0789  0086               	movwf	6
  9863  078A  3002               	movlw	2	; select bank5/6
  9864  078B  0087               	movwf	7
  9865  078C  0846               	movf	??_dtoa,w
  9866  078D  0081               	movwf	1
  9867                           
  9868                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 302:         --p;
  9869  078E  30FF               	movlw	255
  9870  078F  07CC               	addwf	dtoa@p,f
  9871  0790  30FF               	movlw	255
  9872  0791  3DCD               	addwfc	dtoa@p+1,f
  9873                           
  9874                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 303:         --w;
  9875  0792  30FF               	movlw	255
  9876  0793  07CE               	addwf	dtoa@w,f
  9877  0794  30FF               	movlw	255
  9878  0795  3DCF               	addwfc	dtoa@w+1,f
  9879                           
  9880                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 304:         n = n /
      +                           10;
  9881  0796  300A               	movlw	10
  9882  0797  00A3               	movwf	___aodiv@divisor
  9883  0798  01A4               	clrf	___aodiv@divisor+1
  9884  0799  01A5               	clrf	___aodiv@divisor+2
  9885  079A  01A6               	clrf	___aodiv@divisor+3
  9886  079B  01A7               	clrf	___aodiv@divisor+4
  9887  079C  01A8               	clrf	___aodiv@divisor+5
  9888  079D  01A9               	clrf	___aodiv@divisor+6
  9889  079E  01AA               	clrf	___aodiv@divisor+7
  9890  079F  0852               	movf	dtoa@n,w
  9891  07A0  00AB               	movwf	___aodiv@dividend
  9892  07A1  0853               	movf	dtoa@n+1,w
  9893  07A2  00AC               	movwf	___aodiv@dividend+1
  9894  07A3  0854               	movf	dtoa@n+2,w
  9895  07A4  00AD               	movwf	___aodiv@dividend+2
  9896  07A5  0855               	movf	dtoa@n+3,w
  9897  07A6  00AE               	movwf	___aodiv@dividend+3
  9898  07A7  0856               	movf	dtoa@n+4,w
  9899  07A8  00AF               	movwf	___aodiv@dividend+4
  9900  07A9  0857               	movf	dtoa@n+5,w
  9901  07AA  00B0               	movwf	___aodiv@dividend+5
  9902  07AB  0858               	movf	dtoa@n+6,w
  9903  07AC  00B1               	movwf	___aodiv@dividend+6
  9904  07AD  0859               	movf	dtoa@n+7,w
  9905  07AE  00B2               	movwf	___aodiv@dividend+7
  9906  07AF  318B  2311  3186   	fcall	___aodiv
  9907  07B2  0823               	movf	?___aodiv,w
  9908  07B3  00D2               	movwf	dtoa@n
  9909  07B4  0824               	movf	?___aodiv+1,w
  9910  07B5  00D3               	movwf	dtoa@n+1
  9911  07B6  0825               	movf	?___aodiv+2,w
  9912  07B7  00D4               	movwf	dtoa@n+2
  9913  07B8  0826               	movf	?___aodiv+3,w
  9914  07B9  00D5               	movwf	dtoa@n+3
  9915  07BA  0827               	movf	?___aodiv+4,w
  9916  07BB  00D6               	movwf	dtoa@n+4
  9917  07BC  0828               	movf	?___aodiv+5,w
  9918  07BD  00D7               	movwf	dtoa@n+5
  9919  07BE  0829               	movf	?___aodiv+6,w
  9920  07BF  00D8               	movwf	dtoa@n+6
  9921  07C0  082A               	movf	?___aodiv+7,w
  9922  07C1  00D9               	movwf	dtoa@n+7
  9923  07C2                     l1934:	
  9924                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 305:     }
  9925                           
  9926                           
  9927                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 299:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9928  07C2  0020               	movlb	0	; select bank0
  9929  07C3  085B               	movf	dtoa@i+1,w
  9930  07C4  3A80               	xorlw	128
  9931  07C5  00C6               	movwf	??_dtoa
  9932  07C6  3080               	movlw	128
  9933  07C7  0246               	subwf	??_dtoa,w
  9934  07C8  1D03               	skipz
  9935  07C9  2FCC               	goto	u4775
  9936  07CA  3001               	movlw	1
  9937  07CB  025A               	subwf	dtoa@i,w
  9938  07CC                     u4775:
  9939  07CC  1803               	btfsc	3,0
  9940  07CD  2F36               	goto	l6687
  9941  07CE                     l6695:
  9942                           
  9943                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 308:     if (s || (f
      +                          lags & (1 << 2))) {
  9944  07CE  0020               	movlb	0	; select bank0
  9945  07CF  0850               	movf	dtoa@s,w
  9946  07D0  0451               	iorwf	dtoa@s+1,w
  9947  07D1  1D03               	btfss	3,2
  9948  07D2  2FD5               	goto	l6699
  9949  07D3  1D6A               	btfss	_flags,2
  9950  07D4  2FEC               	goto	l6709
  9951  07D5                     l6699:
  9952                           
  9953                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 309:         --i;
  9954  07D5  30FF               	movlw	255
  9955  07D6  07DA               	addwf	dtoa@i,f
  9956  07D7  30FF               	movlw	255
  9957  07D8  3DDB               	addwfc	dtoa@i+1,f
  9958                           
  9959                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 310:         dbuf[i]
      +                           = s ? '-' : '+';
  9960  07D9  0850               	movf	dtoa@s,w
  9961  07DA  0451               	iorwf	dtoa@s+1,w
  9962  07DB  1D03               	btfss	3,2
  9963  07DC  2FDF               	goto	l6705
  9964  07DD  302B               	movlw	43
  9965  07DE  2FE0               	goto	L4
  9966  07DF                     l6705:
  9967  07DF  302D               	movlw	45
  9968  07E0                     L4:
  9969  07E0  00CA               	movwf	_dtoa$2311
  9970  07E1  3000               	movlw	0
  9971  07E2  00CB               	movwf	_dtoa$2311+1
  9972  07E3  084A               	movf	_dtoa$2311,w
  9973  07E4  00C6               	movwf	??_dtoa
  9974  07E5  085A               	movf	dtoa@i,w
  9975  07E6  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9976  07E7  0086               	movwf	6
  9977  07E8  3002               	movlw	2	; select bank5/6
  9978  07E9  0087               	movwf	7
  9979  07EA  0846               	movf	??_dtoa,w
  9980  07EB  0081               	movwf	1
  9981  07EC                     l6709:
  9982                           
  9983                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 314:     return pad(
      +                          fp, &dbuf[i], w);
  9984  07EC  085A               	movf	dtoa@i,w
  9985  07ED  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
  9986  07EE  00C6               	movwf	??_dtoa
  9987  07EF  0846               	movf	??_dtoa,w
  9988  07F0  00B3               	movwf	pad@buf
  9989  07F1  084F               	movf	dtoa@w+1,w
  9990  07F2  00B5               	movwf	pad@p+1
  9991  07F3  084E               	movf	dtoa@w,w
  9992  07F4  00B4               	movwf	pad@p
  9993  07F5  0849               	movf	dtoa@fp,w
  9994  07F6  3192  22CD         	fcall	_pad
  9995  07F8  0834               	movf	?_pad+1,w
  9996  07F9  00BF               	movwf	?_dtoa+1
  9997  07FA  0833               	movf	?_pad,w
  9998  07FB  00BE               	movwf	?_dtoa
  9999  07FC  0008               	return
 10000  07FD                     __end_of_dtoa:
 10001                           
 10002                           	psect	text19
 10003  12CD                     __ptext19:	
 10004 ;; *************** function _pad *****************
 10005 ;; Defined at:
 10006 ;;		line 72 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c"
 10007 ;; Parameters:    Size  Location     Type
 10008 ;;  fp              1    wreg     PTR struct _IO_FILE
 10009 ;;		 -> sprintf@f(6), 
 10010 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 10011 ;;		 -> dbuf(32), 
 10012 ;;  p               2   20[BANK0 ] int 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 10015 ;;		 -> sprintf@f(6), 
 10016 ;;  w               2   25[BANK0 ] int 
 10017 ;;  i               2   23[BANK0 ] int 
 10018 ;; Return value:  Size  Location     Type
 10019 ;;                  2   19[BANK0 ] int 
 10020 ;; Registers used:
 10021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10022 ;; Tracked objects:
 10023 ;;		On entry : 1F/0
 10024 ;;		On exit  : 1F/0
 10025 ;;		Unchanged: 0/0
 10026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10027 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10028 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10029 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10030 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10031 ;;Total ram usage:        9 bytes
 10032 ;; Hardware stack levels used:    1
 10033 ;; Hardware stack levels required when called:   10
 10034 ;; This function calls:
 10035 ;;		_fputc
 10036 ;;		_fputs
 10037 ;;		_strlen
 10038 ;; This function is called by:
 10039 ;;		_dtoa
 10040 ;;		_xtoa
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           
 10045                           ;psect for function _pad
 10046  12CD                     _pad:
 10047                           
 10048                           ;incstack = 0
 10049                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10050                           ;pad@fp stored from wreg
 10051  12CD  00BB               	movwf	pad@fp
 10052                           
 10053                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.20/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 10054  12CE  1C6A               	btfss	_flags,0
 10055  12CF  2AD8               	goto	l6537
 10056                           
 10057                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 10058  12D0  083B               	movf	pad@fp,w
 10059  12D1  00B6               	movwf	??_pad
 10060  12D2  0836               	movf	??_pad,w
 10061  12D3  00AB               	movwf	fputs@fp
 10062  12D4  0833               	movf	pad@buf,w
 10063  12D5  319F  2763  3192   	fcall	_fputs
 10064  12D8                     l6537:
 10065                           
 10066                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 10067  12D8  1BB5               	btfsc	pad@p+1,7
 10068  12D9  2ADF               	goto	l6541
 10069  12DA  0835               	movf	pad@p+1,w
 10070  12DB  00BA               	movwf	pad@w+1
 10071  12DC  0834               	movf	pad@p,w
 10072  12DD  00B9               	movwf	pad@w
 10073  12DE  2AE1               	goto	l1917
 10074  12DF                     l6541:
 10075  12DF  01B9               	clrf	pad@w
 10076  12E0  01BA               	clrf	pad@w+1
 10077  12E1                     l1917:
 10078                           
 10079                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10080  12E1  01B7               	clrf	pad@i
 10081  12E2  01B8               	clrf	pad@i+1
 10082  12E3                     l6547:	
 10083                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 10084                           
 10085                           
 10086                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 10087  12E3  0838               	movf	pad@i+1,w
 10088  12E4  3A80               	xorlw	128
 10089  12E5  00B6               	movwf	??_pad
 10090  12E6  083A               	movf	pad@w+1,w
 10091  12E7  3A80               	xorlw	128
 10092  12E8  0236               	subwf	??_pad,w
 10093  12E9  1D03               	skipz
 10094  12EA  2AED               	goto	u4535
 10095  12EB  0839               	movf	pad@w,w
 10096  12EC  0237               	subwf	pad@i,w
 10097  12ED                     u4535:
 10098  12ED  1803               	btfsc	3,0
 10099  12EE  2B01               	goto	l1920
 10100                           
 10101                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 10102  12EF  3020               	movlw	32
 10103  12F0  0020               	movlb	0	; select bank0
 10104  12F1  00A3               	movwf	fputc@c
 10105  12F2  3000               	movlw	0
 10106  12F3  00A4               	movwf	fputc@c+1
 10107  12F4  083B               	movf	pad@fp,w
 10108  12F5  00B6               	movwf	??_pad
 10109  12F6  0836               	movf	??_pad,w
 10110  12F7  00A5               	movwf	fputc@fp
 10111  12F8  3192  2281  3192   	fcall	_fputc
 10112                           
 10113                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10114  12FB  3001               	movlw	1
 10115  12FC  0020               	movlb	0	; select bank0
 10116  12FD  07B7               	addwf	pad@i,f
 10117  12FE  3000               	movlw	0
 10118  12FF  3DB8               	addwfc	pad@i+1,f
 10119  1300  2AE3               	goto	l6547
 10120  1301                     l1920:
 10121                           
 10122                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 10123  1301  0020               	movlb	0	; select bank0
 10124  1302  186A               	btfsc	_flags,0
 10125  1303  2B0C               	goto	l6551
 10126                           
 10127                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 10128  1304  083B               	movf	pad@fp,w
 10129  1305  00B6               	movwf	??_pad
 10130  1306  0836               	movf	??_pad,w
 10131  1307  00AB               	movwf	fputs@fp
 10132  1308  0833               	movf	pad@buf,w
 10133  1309  319F  2763  3192   	fcall	_fputs
 10134  130C                     l6551:
 10135                           
 10136                           ;/Applications/microchip/xc8/v2.20/pic/sources/c99/common/doprnt.c: 94:     return strle
      +                          n(buf) + w;
 10137  130C  0833               	movf	pad@buf,w
 10138  130D  00A3               	movwf	strlen@s
 10139  130E  3002               	movlw	2
 10140  130F  00A4               	movwf	strlen@s+1
 10141  1310  319C  24DF         	fcall	_strlen
 10142  1312  0839               	movf	pad@w,w
 10143  1313  0723               	addwf	?_strlen,w
 10144  1314  00B3               	movwf	?_pad
 10145  1315  083A               	movf	pad@w+1,w
 10146  1316  3D24               	addwfc	?_strlen+1,w
 10147  1317  00B4               	movwf	?_pad+1
 10148  1318  0008               	return
 10149  1319                     __end_of_pad:
 10150                           
 10151                           	psect	text20
 10152  1CDF                     __ptext20:	
 10153 ;; *************** function _strlen *****************
 10154 ;; Defined at:
 10155 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/strlen.c"
 10156 ;; Parameters:    Size  Location     Type
 10157 ;;  s               2    3[BANK0 ] PTR const unsigned char 
 10158 ;;		 -> stoa@nuls(7), dbuf(32), ?_sprintf(2), lcd_fs_name(112), 
 10159 ;;		 -> lcd_aux_name(14), lcd_src_name(40), ledstr(0), 
 10160 ;; Auto vars:     Size  Location     Type
 10161 ;;  a               2    6[BANK0 ] PTR const unsigned char 
 10162 ;;		 -> stoa@nuls(7), dbuf(32), ?_sprintf(2), lcd_fs_name(112), 
 10163 ;;		 -> lcd_aux_name(14), lcd_src_name(40), ledstr(0), 
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  2    3[BANK0 ] unsigned int 
 10166 ;; Registers used:
 10167 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10168 ;; Tracked objects:
 10169 ;;		On entry : 1F/3C00000
 10170 ;;		On exit  : 1F/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10173 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10175 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10176 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10177 ;;Total ram usage:        5 bytes
 10178 ;; Hardware stack levels used:    1
 10179 ;; Hardware stack levels required when called:    7
 10180 ;; This function calls:
 10181 ;;		Nothing
 10182 ;; This function is called by:
 10183 ;;		_pad
 10184 ;;		_stoa
 10185 ;;		_strcat
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           
 10190                           ;psect for function _strlen
 10191  1CDF                     _strlen:
 10192                           
 10193                           ;incstack = 0
 10194                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 10195  1CDF  0824               	movf	strlen@s+1,w
 10196  1CE0  00A7               	movwf	strlen@a+1
 10197  1CE1  0823               	movf	strlen@s,w
 10198  1CE2  00A6               	movwf	strlen@a
 10199  1CE3                     l6391:
 10200  1CE3  0823               	movf	strlen@s,w
 10201  1CE4  0084               	movwf	4
 10202  1CE5  0824               	movf	strlen@s+1,w
 10203  1CE6  0085               	movwf	5
 10204  1CE7  0012               	moviw fsr0++
 10205  1CE8  1903               	btfsc	3,2
 10206  1CE9  2CEF               	goto	l6393
 10207  1CEA  3001               	movlw	1
 10208  1CEB  07A3               	addwf	strlen@s,f
 10209  1CEC  3000               	movlw	0
 10210  1CED  3DA4               	addwfc	strlen@s+1,f
 10211  1CEE  2CE3               	goto	l6391
 10212  1CEF                     l6393:
 10213  1CEF  0826               	movf	strlen@a,w
 10214  1CF0  0223               	subwf	strlen@s,w
 10215  1CF1  00A3               	movwf	?_strlen
 10216  1CF2  0827               	movf	strlen@a+1,w
 10217  1CF3  3B24               	subwfb	strlen@s+1,w
 10218  1CF4  00A4               	movwf	?_strlen+1
 10219  1CF5  0008               	return
 10220  1CF6                     __end_of_strlen:
 10221                           
 10222                           	psect	text21
 10223  1F63                     __ptext21:	
 10224 ;; *************** function _fputs *****************
 10225 ;; Defined at:
 10226 ;;		line 8 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/nf_fputs.c"
 10227 ;; Parameters:    Size  Location     Type
 10228 ;;  s               1    wreg     PTR const unsigned char 
 10229 ;;		 -> dbuf(32), 
 10230 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 10231 ;;		 -> sprintf@f(6), 
 10232 ;; Auto vars:     Size  Location     Type
 10233 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 10234 ;;		 -> dbuf(32), 
 10235 ;;  i               2   16[BANK0 ] int 
 10236 ;;  c               1   15[BANK0 ] unsigned char 
 10237 ;; Return value:  Size  Location     Type
 10238 ;;                  2   11[BANK0 ] int 
 10239 ;; Registers used:
 10240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10241 ;; Tracked objects:
 10242 ;;		On entry : 1F/0
 10243 ;;		On exit  : 1F/0
 10244 ;;		Unchanged: 0/0
 10245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10246 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10247 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10248 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10249 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10250 ;;Total ram usage:        8 bytes
 10251 ;; Hardware stack levels used:    1
 10252 ;; Hardware stack levels required when called:    9
 10253 ;; This function calls:
 10254 ;;		_fputc
 10255 ;; This function is called by:
 10256 ;;		_pad
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           
 10260                           
 10261                           ;psect for function _fputs
 10262  1F63                     _fputs:
 10263                           
 10264                           ;incstack = 0
 10265                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10266                           ;fputs@s stored from wreg
 10267  1F63  00B2               	movwf	fputs@s
 10268  1F64  01B0               	clrf	fputs@i
 10269  1F65  01B1               	clrf	fputs@i+1
 10270  1F66                     l6385:
 10271  1F66  0830               	movf	fputs@i,w
 10272  1F67  0732               	addwf	fputs@s,w
 10273  1F68  00AC               	movwf	??_fputs
 10274  1F69  082C               	movf	??_fputs,w
 10275  1F6A  0086               	movwf	6
 10276  1F6B  3002               	movlw	2	; select bank4/5
 10277  1F6C  0087               	movwf	7
 10278  1F6D  0801               	movf	1,w
 10279  1F6E  00AD               	movwf	??_fputs+1
 10280  1F6F  082D               	movf	??_fputs+1,w
 10281  1F70  00AF               	movwf	fputs@c
 10282  1F71  082F               	movf	fputs@c,w
 10283  1F72  1903               	btfsc	3,2
 10284  1F73  0008               	return
 10285  1F74  082F               	movf	fputs@c,w
 10286  1F75  00AC               	movwf	??_fputs
 10287  1F76  01AD               	clrf	??_fputs+1
 10288  1F77  082C               	movf	??_fputs,w
 10289  1F78  00A3               	movwf	fputc@c
 10290  1F79  082D               	movf	??_fputs+1,w
 10291  1F7A  00A4               	movwf	fputc@c+1
 10292  1F7B  082B               	movf	fputs@fp,w
 10293  1F7C  00AE               	movwf	??_fputs+2
 10294  1F7D  082E               	movf	??_fputs+2,w
 10295  1F7E  00A5               	movwf	fputc@fp
 10296  1F7F  3192  2281  319F   	fcall	_fputc
 10297  1F82  3001               	movlw	1
 10298  1F83  0020               	movlb	0	; select bank0
 10299  1F84  07B0               	addwf	fputs@i,f
 10300  1F85  3000               	movlw	0
 10301  1F86  3DB1               	addwfc	fputs@i+1,f
 10302  1F87  2F66               	goto	l6385
 10303  1F88                     __end_of_fputs:
 10304                           
 10305                           	psect	text22
 10306  1281                     __ptext22:	
 10307 ;; *************** function _fputc *****************
 10308 ;; Defined at:
 10309 ;;		line 8 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/nf_fputc.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  c               2    3[BANK0 ] int 
 10312 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 10313 ;;		 -> sprintf@f(6), 
 10314 ;; Auto vars:     Size  Location     Type
 10315 ;;		None
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  2    3[BANK0 ] int 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10320 ;; Tracked objects:
 10321 ;;		On entry : 1F/0
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10325 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;Total ram usage:        8 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; Hardware stack levels required when called:    8
 10332 ;; This function calls:
 10333 ;;		_putch
 10334 ;; This function is called by:
 10335 ;;		_pad
 10336 ;;		_stoa
 10337 ;;		_vfpfcnvrt
 10338 ;;		_fputs
 10339 ;; This function uses a non-reentrant model
 10340 ;;
 10341                           
 10342                           
 10343                           ;psect for function _fputc
 10344  1281                     _fputc:
 10345                           
 10346                           ;incstack = 0
 10347                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10348  1281  0825               	movf	fputc@fp,w
 10349  1282  1D03               	btfss	3,2
 10350  1283  0825               	movf	fputc@fp,w
 10351  1284  1D03               	btfss	3,2
 10352  1285  2A8A               	goto	l6367
 10353  1286  0823               	movf	fputc@c,w
 10354  1287  319A  22A1         	fcall	_putch
 10355  1289  0008               	return
 10356  128A                     l6367:
 10357  128A  0825               	movf	fputc@fp,w
 10358  128B  3E04               	addlw	4
 10359  128C  0086               	movwf	6
 10360  128D  0187               	clrf	7
 10361  128E  0016               	moviw fsr1++
 10362  128F  0401               	iorwf	1,w
 10363  1290  1903               	btfsc	3,2
 10364  1291  2AAE               	goto	l6371
 10365  1292  0825               	movf	fputc@fp,w
 10366  1293  3E04               	addlw	4
 10367  1294  0086               	movwf	6
 10368  1295  0187               	clrf	7
 10369  1296  3F40               	moviw [0]fsr1
 10370  1297  00A6               	movwf	??_fputc
 10371  1298  3F41               	moviw [1]fsr1
 10372  1299  00A7               	movwf	??_fputc+1
 10373  129A  0825               	movf	fputc@fp,w
 10374  129B  3E02               	addlw	2
 10375  129C  0086               	movwf	6
 10376  129D  0187               	clrf	7
 10377  129E  3F40               	moviw [0]fsr1
 10378  129F  00A8               	movwf	??_fputc+2
 10379  12A0  3F41               	moviw [1]fsr1
 10380  12A1  00A9               	movwf	??_fputc+3
 10381  12A2  0829               	movf	??_fputc+3,w
 10382  12A3  3A80               	xorlw	128
 10383  12A4  00AA               	movwf	??_fputc+4
 10384  12A5  0827               	movf	??_fputc+1,w
 10385  12A6  3A80               	xorlw	128
 10386  12A7  022A               	subwf	??_fputc+4,w
 10387  12A8  1D03               	skipz
 10388  12A9  2AAC               	goto	u4165
 10389  12AA  0826               	movf	??_fputc,w
 10390  12AB  0228               	subwf	??_fputc+2,w
 10391  12AC                     u4165:
 10392  12AC  1803               	skipnc
 10393  12AD  0008               	return
 10394  12AE                     l6371:
 10395  12AE  0020               	movlb	0	; select bank0
 10396  12AF  0825               	movf	fputc@fp,w
 10397  12B0  3E02               	addlw	2
 10398  12B1  0086               	movwf	6
 10399  12B2  0187               	clrf	7
 10400  12B3  0825               	movf	fputc@fp,w
 10401  12B4  0084               	movwf	4
 10402  12B5  0185               	clrf	5
 10403  12B6  3F40               	moviw [0]fsr1
 10404  12B7  0700               	addwf	0,w
 10405  12B8  00A6               	movwf	??_fputc
 10406  12B9  3101               	addfsr 0,1
 10407  12BA  3F41               	moviw [1]fsr1
 10408  12BB  3D00               	addwfc	0,w
 10409  12BC  00A7               	movwf	??_fputc+1
 10410  12BD  0826               	movf	??_fputc,w
 10411  12BE  0086               	movwf	6
 10412  12BF  0827               	movf	??_fputc+1,w
 10413  12C0  0087               	movwf	7
 10414  12C1  0823               	movf	fputc@c,w
 10415  12C2  0081               	movwf	1
 10416  12C3  0825               	movf	fputc@fp,w
 10417  12C4  3E02               	addlw	2
 10418  12C5  0086               	movwf	6
 10419  12C6  0187               	clrf	7
 10420  12C7  3001               	movlw	1
 10421  12C8  0781               	addwf	1,f
 10422  12C9  3141               	addfsr 1,1
 10423  12CA  1803               	skipnc
 10424  12CB  0A81               	incf	1,f
 10425  12CC  0008               	return
 10426  12CD                     __end_of_fputc:
 10427                           
 10428                           	psect	text23
 10429  1AA1                     __ptext23:	
 10430 ;; *************** function _putch *****************
 10431 ;; Defined at:
 10432 ;;		line 7 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/putch.c"
 10433 ;; Parameters:    Size  Location     Type
 10434 ;;  c               1    wreg     unsigned char 
 10435 ;; Auto vars:     Size  Location     Type
 10436 ;;  c               1    0[COMMON] unsigned char 
 10437 ;; Return value:  Size  Location     Type
 10438 ;;                  1    wreg      void 
 10439 ;; Registers used:
 10440 ;;		wreg
 10441 ;; Tracked objects:
 10442 ;;		On entry : 1F/0
 10443 ;;		On exit  : 1F/0
 10444 ;;		Unchanged: 1F/0
 10445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10450 ;;Total ram usage:        0 bytes
 10451 ;; Hardware stack levels used:    1
 10452 ;; Hardware stack levels required when called:    7
 10453 ;; This function calls:
 10454 ;;		Nothing
 10455 ;; This function is called by:
 10456 ;;		_fputc
 10457 ;; This function uses a non-reentrant model
 10458 ;;
 10459                           
 10460                           
 10461                           ;psect for function _putch
 10462  1AA1                     _putch:
 10463                           
 10464                           ;incstack = 0
 10465                           ; Regs used in _putch: [wreg]
 10466  1AA1  0008               	return
 10467  1AA2                     __end_of_putch:
 10468                           
 10469                           	psect	text24
 10470  1D0E                     __ptext24:	
 10471 ;; *************** function _abs *****************
 10472 ;; Defined at:
 10473 ;;		line 1 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/abs.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;  a               2   22[BANK0 ] int 
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;		None
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  2   22[BANK0 ] int 
 10480 ;; Registers used:
 10481 ;;		wreg, status,2, status,0
 10482 ;; Tracked objects:
 10483 ;;		On entry : 1F/3A00000
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10491 ;;Total ram usage:        4 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    7
 10494 ;; This function calls:
 10495 ;;		Nothing
 10496 ;; This function is called by:
 10497 ;;		_set_gains
 10498 ;;		_dtoa
 10499 ;; This function uses a non-reentrant model
 10500 ;;
 10501                           
 10502                           
 10503                           ;psect for function _abs
 10504  1D0E                     _abs:
 10505                           
 10506                           ;incstack = 0
 10507                           ; Regs used in _abs: [wreg+status,2+status,0]
 10508  1D0E  0837               	movf	abs@a+1,w
 10509  1D0F  3A80               	xorlw	128
 10510  1D10  00B8               	movwf	??_abs
 10511  1D11  3080               	movlw	128
 10512  1D12  0238               	subwf	??_abs,w
 10513  1D13  1D03               	skipz
 10514  1D14  2D17               	goto	u4255
 10515  1D15  3001               	movlw	1
 10516  1D16  0236               	subwf	abs@a,w
 10517  1D17                     u4255:
 10518  1D17  1803               	skipnc
 10519  1D18  0008               	return
 10520  1D19  0020               	movlb	0	; select bank0
 10521  1D1A  0936               	comf	abs@a,w
 10522  1D1B  00B8               	movwf	??_abs
 10523  1D1C  0937               	comf	abs@a+1,w
 10524  1D1D  00B9               	movwf	??_abs+1
 10525  1D1E  0AB8               	incf	??_abs,f
 10526  1D1F  1903               	skipnz
 10527  1D20  0AB9               	incf	??_abs+1,f
 10528  1D21  0838               	movf	??_abs,w
 10529  1D22  00B6               	movwf	?_abs
 10530  1D23  0839               	movf	??_abs+1,w
 10531  1D24  00B7               	movwf	?_abs+1
 10532  1D25  0008               	return
 10533  1D26                     __end_of_abs:
 10534                           
 10535                           	psect	text25
 10536  0A33                     __ptext25:	
 10537 ;; *************** function ___aomod *****************
 10538 ;; Defined at:
 10539 ;;		line 7 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/aomod.c"
 10540 ;; Parameters:    Size  Location     Type
 10541 ;;  divisor         8    3[BANK0 ] long long 
 10542 ;;  dividend        8   11[BANK0 ] long long 
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;  sign            1   21[BANK0 ] unsigned char 
 10545 ;;  counter         1   20[BANK0 ] unsigned char 
 10546 ;; Return value:  Size  Location     Type
 10547 ;;                  8    3[BANK0 ] long long 
 10548 ;; Registers used:
 10549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10550 ;; Tracked objects:
 10551 ;;		On entry : 1F/0
 10552 ;;		On exit  : 1F/0
 10553 ;;		Unchanged: 0/0
 10554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10555 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10556 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10557 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10558 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10559 ;;Total ram usage:       19 bytes
 10560 ;; Hardware stack levels used:    1
 10561 ;; Hardware stack levels required when called:    7
 10562 ;; This function calls:
 10563 ;;		Nothing
 10564 ;; This function is called by:
 10565 ;;		_dtoa
 10566 ;; This function uses a non-reentrant model
 10567 ;;
 10568                           
 10569                           
 10570                           ;psect for function ___aomod
 10571  0A33                     ___aomod:
 10572                           
 10573                           ;incstack = 0
 10574                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 10575  0A33  01B5               	clrf	___aomod@sign
 10576  0A34  302B               	movlw	low ___aomod@dividend
 10577  0A35  0086               	movwf	6
 10578  0A36  3000               	movlw	high ___aomod@dividend
 10579  0A37  0087               	movwf	7
 10580  0A38  3F47               	moviw [7]fsr1
 10581  0A39  00B3               	movwf	??___aomod
 10582  0A3A  1FB3               	btfss	??___aomod,7
 10583  0A3B  2A5E               	goto	l6509
 10584  0A3C  0020               	movlb	0	; select bank0
 10585  0A3D  09AB               	comf	___aomod@dividend,f
 10586  0A3E  09AC               	comf	___aomod@dividend+1,f
 10587  0A3F  09AD               	comf	___aomod@dividend+2,f
 10588  0A40  09AE               	comf	___aomod@dividend+3,f
 10589  0A41  09AF               	comf	___aomod@dividend+4,f
 10590  0A42  09B0               	comf	___aomod@dividend+5,f
 10591  0A43  09B1               	comf	___aomod@dividend+6,f
 10592  0A44  09B2               	comf	___aomod@dividend+7,f
 10593  0A45  0AAB               	incf	___aomod@dividend,f
 10594  0A46  1D03               	skipz
 10595  0A47  2A5B               	goto	u442lld
 10596  0A48  0AAC               	incf	___aomod@dividend+1,f
 10597  0A49  1D03               	skipz
 10598  0A4A  2A5B               	goto	u442lld
 10599  0A4B  0AAD               	incf	___aomod@dividend+2,f
 10600  0A4C  1D03               	skipz
 10601  0A4D  2A5B               	goto	u442lld
 10602  0A4E  0AAE               	incf	___aomod@dividend+3,f
 10603  0A4F  1D03               	skipz
 10604  0A50  2A5B               	goto	u442lld
 10605  0A51  0AAF               	incf	___aomod@dividend+4,f
 10606  0A52  1D03               	skipz
 10607  0A53  2A5B               	goto	u442lld
 10608  0A54  0AB0               	incf	___aomod@dividend+5,f
 10609  0A55  1D03               	skipz
 10610  0A56  2A5B               	goto	u442lld
 10611  0A57  0AB1               	incf	___aomod@dividend+6,f
 10612  0A58  1D03               	skipz
 10613  0A59  2A5B               	goto	u442lld
 10614  0A5A  0AB2               	incf	___aomod@dividend+7,f
 10615  0A5B                     u442lld:
 10616  0A5B  0020               	movlb	0	; select bank0
 10617  0A5C  01B5               	clrf	___aomod@sign
 10618  0A5D  0AB5               	incf	___aomod@sign,f
 10619  0A5E                     l6509:
 10620  0A5E  3023               	movlw	low ___aomod@divisor
 10621  0A5F  0086               	movwf	6
 10622  0A60  3000               	movlw	high ___aomod@divisor
 10623  0A61  0087               	movwf	7
 10624  0A62  3F47               	moviw [7]fsr1
 10625  0A63  0020               	movlb	0	; select bank0
 10626  0A64  00B3               	movwf	??___aomod
 10627  0A65  1FB3               	btfss	??___aomod,7
 10628  0A66  2A86               	goto	l6513
 10629  0A67  0020               	movlb	0	; select bank0
 10630  0A68  09A3               	comf	___aomod@divisor,f
 10631  0A69  09A4               	comf	___aomod@divisor+1,f
 10632  0A6A  09A5               	comf	___aomod@divisor+2,f
 10633  0A6B  09A6               	comf	___aomod@divisor+3,f
 10634  0A6C  09A7               	comf	___aomod@divisor+4,f
 10635  0A6D  09A8               	comf	___aomod@divisor+5,f
 10636  0A6E  09A9               	comf	___aomod@divisor+6,f
 10637  0A6F  09AA               	comf	___aomod@divisor+7,f
 10638  0A70  0AA3               	incf	___aomod@divisor,f
 10639  0A71  1D03               	skipz
 10640  0A72  2A86               	goto	l6513
 10641  0A73  0AA4               	incf	___aomod@divisor+1,f
 10642  0A74  1D03               	skipz
 10643  0A75  2A86               	goto	l6513
 10644  0A76  0AA5               	incf	___aomod@divisor+2,f
 10645  0A77  1D03               	skipz
 10646  0A78  2A86               	goto	l6513
 10647  0A79  0AA6               	incf	___aomod@divisor+3,f
 10648  0A7A  1D03               	skipz
 10649  0A7B  2A86               	goto	l6513
 10650  0A7C  0AA7               	incf	___aomod@divisor+4,f
 10651  0A7D  1D03               	skipz
 10652  0A7E  2A86               	goto	l6513
 10653  0A7F  0AA8               	incf	___aomod@divisor+5,f
 10654  0A80  1D03               	skipz
 10655  0A81  2A86               	goto	l6513
 10656  0A82  0AA9               	incf	___aomod@divisor+6,f
 10657  0A83  1D03               	skipz
 10658  0A84  2A86               	goto	l6513
 10659  0A85  0AAA               	incf	___aomod@divisor+7,f
 10660  0A86                     l6513:
 10661  0A86  0020               	movlb	0	; select bank0
 10662  0A87  0823               	movf	___aomod@divisor,w
 10663  0A88  0424               	iorwf	___aomod@divisor+1,w
 10664  0A89  0425               	iorwf	___aomod@divisor+2,w
 10665  0A8A  0426               	iorwf	___aomod@divisor+3,w
 10666  0A8B  0427               	iorwf	___aomod@divisor+4,w
 10667  0A8C  0428               	iorwf	___aomod@divisor+5,w
 10668  0A8D  0429               	iorwf	___aomod@divisor+6,w
 10669  0A8E  042A               	iorwf	___aomod@divisor+7,w
 10670  0A8F  1903               	skipnz
 10671  0A90  2ADE               	goto	l6529
 10672  0A91  01B4               	clrf	___aomod@counter
 10673  0A92  0AB4               	incf	___aomod@counter,f
 10674  0A93                     l6521:
 10675  0A93  1BAA               	btfsc	___aomod@divisor+7,7
 10676  0A94  2AA2               	goto	l6523
 10677  0A95  35A3               	lslf	___aomod@divisor,f
 10678  0A96  0DA4               	rlf	___aomod@divisor+1,f
 10679  0A97  0DA5               	rlf	___aomod@divisor+2,f
 10680  0A98  0DA6               	rlf	___aomod@divisor+3,f
 10681  0A99  0DA7               	rlf	___aomod@divisor+4,f
 10682  0A9A  0DA8               	rlf	___aomod@divisor+5,f
 10683  0A9B  0DA9               	rlf	___aomod@divisor+6,f
 10684  0A9C  0DAA               	rlf	___aomod@divisor+7,f
 10685  0A9D  3001               	movlw	1
 10686  0A9E  00B3               	movwf	??___aomod
 10687  0A9F  0833               	movf	??___aomod,w
 10688  0AA0  07B4               	addwf	___aomod@counter,f
 10689  0AA1  2A93               	goto	l6521
 10690  0AA2                     l6523:
 10691  0AA2  082A               	movf	___aomod@divisor+7,w
 10692  0AA3  0232               	subwf	___aomod@dividend+7,w
 10693  0AA4  1D03               	skipz
 10694  0AA5  2AC0               	goto	u4475
 10695  0AA6  0829               	movf	___aomod@divisor+6,w
 10696  0AA7  0231               	subwf	___aomod@dividend+6,w
 10697  0AA8  1D03               	skipz
 10698  0AA9  2AC0               	goto	u4475
 10699  0AAA  0828               	movf	___aomod@divisor+5,w
 10700  0AAB  0230               	subwf	___aomod@dividend+5,w
 10701  0AAC  1D03               	skipz
 10702  0AAD  2AC0               	goto	u4475
 10703  0AAE  0827               	movf	___aomod@divisor+4,w
 10704  0AAF  022F               	subwf	___aomod@dividend+4,w
 10705  0AB0  1D03               	skipz
 10706  0AB1  2AC0               	goto	u4475
 10707  0AB2  0826               	movf	___aomod@divisor+3,w
 10708  0AB3  022E               	subwf	___aomod@dividend+3,w
 10709  0AB4  1D03               	skipz
 10710  0AB5  2AC0               	goto	u4475
 10711  0AB6  0825               	movf	___aomod@divisor+2,w
 10712  0AB7  022D               	subwf	___aomod@dividend+2,w
 10713  0AB8  1D03               	skipz
 10714  0AB9  2AC0               	goto	u4475
 10715  0ABA  0824               	movf	___aomod@divisor+1,w
 10716  0ABB  022C               	subwf	___aomod@dividend+1,w
 10717  0ABC  1D03               	skipz
 10718  0ABD  2AC0               	goto	u4475
 10719  0ABE  0823               	movf	___aomod@divisor,w
 10720  0ABF  022B               	subwf	___aomod@dividend,w
 10721  0AC0                     u4475:
 10722  0AC0  1C03               	skipc
 10723  0AC1  2AD2               	goto	l6527
 10724  0AC2  0823               	movf	___aomod@divisor,w
 10725  0AC3  02AB               	subwf	___aomod@dividend,f
 10726  0AC4  0824               	movf	___aomod@divisor+1,w
 10727  0AC5  3BAC               	subwfb	___aomod@dividend+1,f
 10728  0AC6  0825               	movf	___aomod@divisor+2,w
 10729  0AC7  3BAD               	subwfb	___aomod@dividend+2,f
 10730  0AC8  0826               	movf	___aomod@divisor+3,w
 10731  0AC9  3BAE               	subwfb	___aomod@dividend+3,f
 10732  0ACA  0827               	movf	___aomod@divisor+4,w
 10733  0ACB  3BAF               	subwfb	___aomod@dividend+4,f
 10734  0ACC  0828               	movf	___aomod@divisor+5,w
 10735  0ACD  3BB0               	subwfb	___aomod@dividend+5,f
 10736  0ACE  0829               	movf	___aomod@divisor+6,w
 10737  0ACF  3BB1               	subwfb	___aomod@dividend+6,f
 10738  0AD0  082A               	movf	___aomod@divisor+7,w
 10739  0AD1  3BB2               	subwfb	___aomod@dividend+7,f
 10740  0AD2                     l6527:
 10741  0AD2  36AA               	lsrf	___aomod@divisor+7,f
 10742  0AD3  0CA9               	rrf	___aomod@divisor+6,f
 10743  0AD4  0CA8               	rrf	___aomod@divisor+5,f
 10744  0AD5  0CA7               	rrf	___aomod@divisor+4,f
 10745  0AD6  0CA6               	rrf	___aomod@divisor+3,f
 10746  0AD7  0CA5               	rrf	___aomod@divisor+2,f
 10747  0AD8  0CA4               	rrf	___aomod@divisor+1,f
 10748  0AD9  0CA3               	rrf	___aomod@divisor,f
 10749  0ADA  3001               	movlw	1
 10750  0ADB  02B4               	subwf	___aomod@counter,f
 10751  0ADC  1D03               	btfss	3,2
 10752  0ADD  2AA2               	goto	l6523
 10753  0ADE                     l6529:
 10754  0ADE  0835               	movf	___aomod@sign,w
 10755  0ADF  1903               	btfsc	3,2
 10756  0AE0  2AFF               	goto	l1523
 10757  0AE1  09AB               	comf	___aomod@dividend,f
 10758  0AE2  09AC               	comf	___aomod@dividend+1,f
 10759  0AE3  09AD               	comf	___aomod@dividend+2,f
 10760  0AE4  09AE               	comf	___aomod@dividend+3,f
 10761  0AE5  09AF               	comf	___aomod@dividend+4,f
 10762  0AE6  09B0               	comf	___aomod@dividend+5,f
 10763  0AE7  09B1               	comf	___aomod@dividend+6,f
 10764  0AE8  09B2               	comf	___aomod@dividend+7,f
 10765  0AE9  0AAB               	incf	___aomod@dividend,f
 10766  0AEA  1D03               	skipz
 10767  0AEB  2AFF               	goto	l1523
 10768  0AEC  0AAC               	incf	___aomod@dividend+1,f
 10769  0AED  1D03               	skipz
 10770  0AEE  2AFF               	goto	l1523
 10771  0AEF  0AAD               	incf	___aomod@dividend+2,f
 10772  0AF0  1D03               	skipz
 10773  0AF1  2AFF               	goto	l1523
 10774  0AF2  0AAE               	incf	___aomod@dividend+3,f
 10775  0AF3  1D03               	skipz
 10776  0AF4  2AFF               	goto	l1523
 10777  0AF5  0AAF               	incf	___aomod@dividend+4,f
 10778  0AF6  1D03               	skipz
 10779  0AF7  2AFF               	goto	l1523
 10780  0AF8  0AB0               	incf	___aomod@dividend+5,f
 10781  0AF9  1D03               	skipz
 10782  0AFA  2AFF               	goto	l1523
 10783  0AFB  0AB1               	incf	___aomod@dividend+6,f
 10784  0AFC  1D03               	skipz
 10785  0AFD  2AFF               	goto	l1523
 10786  0AFE  0AB2               	incf	___aomod@dividend+7,f
 10787  0AFF                     l1523:
 10788  0AFF  0020               	movlb	0	; select bank0
 10789  0B00  082B               	movf	___aomod@dividend,w
 10790  0B01  00A3               	movwf	?___aomod
 10791  0B02  082C               	movf	___aomod@dividend+1,w
 10792  0B03  00A4               	movwf	?___aomod+1
 10793  0B04  082D               	movf	___aomod@dividend+2,w
 10794  0B05  00A5               	movwf	?___aomod+2
 10795  0B06  082E               	movf	___aomod@dividend+3,w
 10796  0B07  00A6               	movwf	?___aomod+3
 10797  0B08  082F               	movf	___aomod@dividend+4,w
 10798  0B09  00A7               	movwf	?___aomod+4
 10799  0B0A  0830               	movf	___aomod@dividend+5,w
 10800  0B0B  00A8               	movwf	?___aomod+5
 10801  0B0C  0831               	movf	___aomod@dividend+6,w
 10802  0B0D  00A9               	movwf	?___aomod+6
 10803  0B0E  0832               	movf	___aomod@dividend+7,w
 10804  0B0F  00AA               	movwf	?___aomod+7
 10805  0B10  0008               	return
 10806  0B11                     __end_of___aomod:
 10807                           
 10808                           	psect	text26
 10809  0B11                     __ptext26:	
 10810 ;; *************** function ___aodiv *****************
 10811 ;; Defined at:
 10812 ;;		line 7 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/aodiv.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;  divisor         8    3[BANK0 ] long long 
 10815 ;;  dividend        8   11[BANK0 ] long long 
 10816 ;; Auto vars:     Size  Location     Type
 10817 ;;  quotient        8   22[BANK0 ] long long 
 10818 ;;  sign            1   21[BANK0 ] unsigned char 
 10819 ;;  counter         1   20[BANK0 ] unsigned char 
 10820 ;; Return value:  Size  Location     Type
 10821 ;;                  8    3[BANK0 ] long long 
 10822 ;; Registers used:
 10823 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10824 ;; Tracked objects:
 10825 ;;		On entry : 1F/0
 10826 ;;		On exit  : 1F/0
 10827 ;;		Unchanged: 0/0
 10828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10829 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10831 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10832 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10833 ;;Total ram usage:       27 bytes
 10834 ;; Hardware stack levels used:    1
 10835 ;; Hardware stack levels required when called:    7
 10836 ;; This function calls:
 10837 ;;		Nothing
 10838 ;; This function is called by:
 10839 ;;		_dtoa
 10840 ;; This function uses a non-reentrant model
 10841 ;;
 10842                           
 10843                           
 10844                           ;psect for function ___aodiv
 10845  0B11                     ___aodiv:
 10846                           
 10847                           ;incstack = 0
 10848                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 10849  0B11  01B5               	clrf	___aodiv@sign
 10850  0B12  3023               	movlw	low ___aodiv@divisor
 10851  0B13  0086               	movwf	6
 10852  0B14  3000               	movlw	high ___aodiv@divisor
 10853  0B15  0087               	movwf	7
 10854  0B16  3F47               	moviw [7]fsr1
 10855  0B17  00B3               	movwf	??___aodiv
 10856  0B18  1FB3               	btfss	??___aodiv,7
 10857  0B19  2B3C               	goto	l6471
 10858  0B1A  0020               	movlb	0	; select bank0
 10859  0B1B  09A3               	comf	___aodiv@divisor,f
 10860  0B1C  09A4               	comf	___aodiv@divisor+1,f
 10861  0B1D  09A5               	comf	___aodiv@divisor+2,f
 10862  0B1E  09A6               	comf	___aodiv@divisor+3,f
 10863  0B1F  09A7               	comf	___aodiv@divisor+4,f
 10864  0B20  09A8               	comf	___aodiv@divisor+5,f
 10865  0B21  09A9               	comf	___aodiv@divisor+6,f
 10866  0B22  09AA               	comf	___aodiv@divisor+7,f
 10867  0B23  0AA3               	incf	___aodiv@divisor,f
 10868  0B24  1D03               	skipz
 10869  0B25  2B39               	goto	u431lld
 10870  0B26  0AA4               	incf	___aodiv@divisor+1,f
 10871  0B27  1D03               	skipz
 10872  0B28  2B39               	goto	u431lld
 10873  0B29  0AA5               	incf	___aodiv@divisor+2,f
 10874  0B2A  1D03               	skipz
 10875  0B2B  2B39               	goto	u431lld
 10876  0B2C  0AA6               	incf	___aodiv@divisor+3,f
 10877  0B2D  1D03               	skipz
 10878  0B2E  2B39               	goto	u431lld
 10879  0B2F  0AA7               	incf	___aodiv@divisor+4,f
 10880  0B30  1D03               	skipz
 10881  0B31  2B39               	goto	u431lld
 10882  0B32  0AA8               	incf	___aodiv@divisor+5,f
 10883  0B33  1D03               	skipz
 10884  0B34  2B39               	goto	u431lld
 10885  0B35  0AA9               	incf	___aodiv@divisor+6,f
 10886  0B36  1D03               	skipz
 10887  0B37  2B39               	goto	u431lld
 10888  0B38  0AAA               	incf	___aodiv@divisor+7,f
 10889  0B39                     u431lld:
 10890  0B39  0020               	movlb	0	; select bank0
 10891  0B3A  01B5               	clrf	___aodiv@sign
 10892  0B3B  0AB5               	incf	___aodiv@sign,f
 10893  0B3C                     l6471:
 10894  0B3C  302B               	movlw	low ___aodiv@dividend
 10895  0B3D  0086               	movwf	6
 10896  0B3E  3000               	movlw	high ___aodiv@dividend
 10897  0B3F  0087               	movwf	7
 10898  0B40  3F47               	moviw [7]fsr1
 10899  0B41  0020               	movlb	0	; select bank0
 10900  0B42  00B3               	movwf	??___aodiv
 10901  0B43  1FB3               	btfss	??___aodiv,7
 10902  0B44  2B69               	goto	l6477
 10903  0B45  0020               	movlb	0	; select bank0
 10904  0B46  09AB               	comf	___aodiv@dividend,f
 10905  0B47  09AC               	comf	___aodiv@dividend+1,f
 10906  0B48  09AD               	comf	___aodiv@dividend+2,f
 10907  0B49  09AE               	comf	___aodiv@dividend+3,f
 10908  0B4A  09AF               	comf	___aodiv@dividend+4,f
 10909  0B4B  09B0               	comf	___aodiv@dividend+5,f
 10910  0B4C  09B1               	comf	___aodiv@dividend+6,f
 10911  0B4D  09B2               	comf	___aodiv@dividend+7,f
 10912  0B4E  0AAB               	incf	___aodiv@dividend,f
 10913  0B4F  1D03               	skipz
 10914  0B50  2B64               	goto	l6475
 10915  0B51  0AAC               	incf	___aodiv@dividend+1,f
 10916  0B52  1D03               	skipz
 10917  0B53  2B64               	goto	l6475
 10918  0B54  0AAD               	incf	___aodiv@dividend+2,f
 10919  0B55  1D03               	skipz
 10920  0B56  2B64               	goto	l6475
 10921  0B57  0AAE               	incf	___aodiv@dividend+3,f
 10922  0B58  1D03               	skipz
 10923  0B59  2B64               	goto	l6475
 10924  0B5A  0AAF               	incf	___aodiv@dividend+4,f
 10925  0B5B  1D03               	skipz
 10926  0B5C  2B64               	goto	l6475
 10927  0B5D  0AB0               	incf	___aodiv@dividend+5,f
 10928  0B5E  1D03               	skipz
 10929  0B5F  2B64               	goto	l6475
 10930  0B60  0AB1               	incf	___aodiv@dividend+6,f
 10931  0B61  1D03               	skipz
 10932  0B62  2B64               	goto	l6475
 10933  0B63  0AB2               	incf	___aodiv@dividend+7,f
 10934  0B64                     l6475:
 10935  0B64  3001               	movlw	1
 10936  0B65  0020               	movlb	0	; select bank0
 10937  0B66  00B3               	movwf	??___aodiv
 10938  0B67  0833               	movf	??___aodiv,w
 10939  0B68  06B5               	xorwf	___aodiv@sign,f
 10940  0B69                     l6477:
 10941  0B69  3036               	movlw	low ___aodiv@quotient
 10942  0B6A  0086               	movwf	6
 10943  0B6B  3000               	movlw	high ___aodiv@quotient
 10944  0B6C  0087               	movwf	7
 10945  0B6D  3008               	movlw	8
 10946  0B6E  0020               	movlb	0	; select bank0
 10947  0B6F  00B3               	movwf	??___aodiv
 10948  0B70  3000               	movlw	0
 10949  0B71                     u4340:
 10950  0B71  001E               	movwi fsr1++
 10951  0B72  0BB3               	decfsz	??___aodiv,f
 10952  0B73  2B71               	goto	u4340
 10953  0B74  0823               	movf	___aodiv@divisor,w
 10954  0B75  0424               	iorwf	___aodiv@divisor+1,w
 10955  0B76  0425               	iorwf	___aodiv@divisor+2,w
 10956  0B77  0426               	iorwf	___aodiv@divisor+3,w
 10957  0B78  0427               	iorwf	___aodiv@divisor+4,w
 10958  0B79  0428               	iorwf	___aodiv@divisor+5,w
 10959  0B7A  0429               	iorwf	___aodiv@divisor+6,w
 10960  0B7B  042A               	iorwf	___aodiv@divisor+7,w
 10961  0B7C  1903               	skipnz
 10962  0B7D  2BD4               	goto	l6499
 10963  0B7E  01B4               	clrf	___aodiv@counter
 10964  0B7F  0AB4               	incf	___aodiv@counter,f
 10965  0B80                     l6487:
 10966  0B80  1BAA               	btfsc	___aodiv@divisor+7,7
 10967  0B81  2B8F               	goto	l6489
 10968  0B82  35A3               	lslf	___aodiv@divisor,f
 10969  0B83  0DA4               	rlf	___aodiv@divisor+1,f
 10970  0B84  0DA5               	rlf	___aodiv@divisor+2,f
 10971  0B85  0DA6               	rlf	___aodiv@divisor+3,f
 10972  0B86  0DA7               	rlf	___aodiv@divisor+4,f
 10973  0B87  0DA8               	rlf	___aodiv@divisor+5,f
 10974  0B88  0DA9               	rlf	___aodiv@divisor+6,f
 10975  0B89  0DAA               	rlf	___aodiv@divisor+7,f
 10976  0B8A  3001               	movlw	1
 10977  0B8B  00B3               	movwf	??___aodiv
 10978  0B8C  0833               	movf	??___aodiv,w
 10979  0B8D  07B4               	addwf	___aodiv@counter,f
 10980  0B8E  2B80               	goto	l6487
 10981  0B8F                     l6489:
 10982  0B8F  35B6               	lslf	___aodiv@quotient,f
 10983  0B90  0DB7               	rlf	___aodiv@quotient+1,f
 10984  0B91  0DB8               	rlf	___aodiv@quotient+2,f
 10985  0B92  0DB9               	rlf	___aodiv@quotient+3,f
 10986  0B93  0DBA               	rlf	___aodiv@quotient+4,f
 10987  0B94  0DBB               	rlf	___aodiv@quotient+5,f
 10988  0B95  0DBC               	rlf	___aodiv@quotient+6,f
 10989  0B96  0DBD               	rlf	___aodiv@quotient+7,f
 10990  0B97  082A               	movf	___aodiv@divisor+7,w
 10991  0B98  0232               	subwf	___aodiv@dividend+7,w
 10992  0B99  1D03               	skipz
 10993  0B9A  2BB5               	goto	u4375
 10994  0B9B  0829               	movf	___aodiv@divisor+6,w
 10995  0B9C  0231               	subwf	___aodiv@dividend+6,w
 10996  0B9D  1D03               	skipz
 10997  0B9E  2BB5               	goto	u4375
 10998  0B9F  0828               	movf	___aodiv@divisor+5,w
 10999  0BA0  0230               	subwf	___aodiv@dividend+5,w
 11000  0BA1  1D03               	skipz
 11001  0BA2  2BB5               	goto	u4375
 11002  0BA3  0827               	movf	___aodiv@divisor+4,w
 11003  0BA4  022F               	subwf	___aodiv@dividend+4,w
 11004  0BA5  1D03               	skipz
 11005  0BA6  2BB5               	goto	u4375
 11006  0BA7  0826               	movf	___aodiv@divisor+3,w
 11007  0BA8  022E               	subwf	___aodiv@dividend+3,w
 11008  0BA9  1D03               	skipz
 11009  0BAA  2BB5               	goto	u4375
 11010  0BAB  0825               	movf	___aodiv@divisor+2,w
 11011  0BAC  022D               	subwf	___aodiv@dividend+2,w
 11012  0BAD  1D03               	skipz
 11013  0BAE  2BB5               	goto	u4375
 11014  0BAF  0824               	movf	___aodiv@divisor+1,w
 11015  0BB0  022C               	subwf	___aodiv@dividend+1,w
 11016  0BB1  1D03               	skipz
 11017  0BB2  2BB5               	goto	u4375
 11018  0BB3  0823               	movf	___aodiv@divisor,w
 11019  0BB4  022B               	subwf	___aodiv@dividend,w
 11020  0BB5                     u4375:
 11021  0BB5  1C03               	skipc
 11022  0BB6  2BC8               	goto	l6497
 11023  0BB7  0823               	movf	___aodiv@divisor,w
 11024  0BB8  02AB               	subwf	___aodiv@dividend,f
 11025  0BB9  0824               	movf	___aodiv@divisor+1,w
 11026  0BBA  3BAC               	subwfb	___aodiv@dividend+1,f
 11027  0BBB  0825               	movf	___aodiv@divisor+2,w
 11028  0BBC  3BAD               	subwfb	___aodiv@dividend+2,f
 11029  0BBD  0826               	movf	___aodiv@divisor+3,w
 11030  0BBE  3BAE               	subwfb	___aodiv@dividend+3,f
 11031  0BBF  0827               	movf	___aodiv@divisor+4,w
 11032  0BC0  3BAF               	subwfb	___aodiv@dividend+4,f
 11033  0BC1  0828               	movf	___aodiv@divisor+5,w
 11034  0BC2  3BB0               	subwfb	___aodiv@dividend+5,f
 11035  0BC3  0829               	movf	___aodiv@divisor+6,w
 11036  0BC4  3BB1               	subwfb	___aodiv@dividend+6,f
 11037  0BC5  082A               	movf	___aodiv@divisor+7,w
 11038  0BC6  3BB2               	subwfb	___aodiv@dividend+7,f
 11039  0BC7  1436               	bsf	___aodiv@quotient,0
 11040  0BC8                     l6497:
 11041  0BC8  36AA               	lsrf	___aodiv@divisor+7,f
 11042  0BC9  0CA9               	rrf	___aodiv@divisor+6,f
 11043  0BCA  0CA8               	rrf	___aodiv@divisor+5,f
 11044  0BCB  0CA7               	rrf	___aodiv@divisor+4,f
 11045  0BCC  0CA6               	rrf	___aodiv@divisor+3,f
 11046  0BCD  0CA5               	rrf	___aodiv@divisor+2,f
 11047  0BCE  0CA4               	rrf	___aodiv@divisor+1,f
 11048  0BCF  0CA3               	rrf	___aodiv@divisor,f
 11049  0BD0  3001               	movlw	1
 11050  0BD1  02B4               	subwf	___aodiv@counter,f
 11051  0BD2  1D03               	btfss	3,2
 11052  0BD3  2B8F               	goto	l6489
 11053  0BD4                     l6499:
 11054  0BD4  0835               	movf	___aodiv@sign,w
 11055  0BD5  1903               	btfsc	3,2
 11056  0BD6  2BF5               	goto	l1510
 11057  0BD7  09B6               	comf	___aodiv@quotient,f
 11058  0BD8  09B7               	comf	___aodiv@quotient+1,f
 11059  0BD9  09B8               	comf	___aodiv@quotient+2,f
 11060  0BDA  09B9               	comf	___aodiv@quotient+3,f
 11061  0BDB  09BA               	comf	___aodiv@quotient+4,f
 11062  0BDC  09BB               	comf	___aodiv@quotient+5,f
 11063  0BDD  09BC               	comf	___aodiv@quotient+6,f
 11064  0BDE  09BD               	comf	___aodiv@quotient+7,f
 11065  0BDF  0AB6               	incf	___aodiv@quotient,f
 11066  0BE0  1D03               	skipz
 11067  0BE1  2BF5               	goto	l1510
 11068  0BE2  0AB7               	incf	___aodiv@quotient+1,f
 11069  0BE3  1D03               	skipz
 11070  0BE4  2BF5               	goto	l1510
 11071  0BE5  0AB8               	incf	___aodiv@quotient+2,f
 11072  0BE6  1D03               	skipz
 11073  0BE7  2BF5               	goto	l1510
 11074  0BE8  0AB9               	incf	___aodiv@quotient+3,f
 11075  0BE9  1D03               	skipz
 11076  0BEA  2BF5               	goto	l1510
 11077  0BEB  0ABA               	incf	___aodiv@quotient+4,f
 11078  0BEC  1D03               	skipz
 11079  0BED  2BF5               	goto	l1510
 11080  0BEE  0ABB               	incf	___aodiv@quotient+5,f
 11081  0BEF  1D03               	skipz
 11082  0BF0  2BF5               	goto	l1510
 11083  0BF1  0ABC               	incf	___aodiv@quotient+6,f
 11084  0BF2  1D03               	skipz
 11085  0BF3  2BF5               	goto	l1510
 11086  0BF4  0ABD               	incf	___aodiv@quotient+7,f
 11087  0BF5                     l1510:
 11088  0BF5  0020               	movlb	0	; select bank0
 11089  0BF6  0836               	movf	___aodiv@quotient,w
 11090  0BF7  00A3               	movwf	?___aodiv
 11091  0BF8  0837               	movf	___aodiv@quotient+1,w
 11092  0BF9  00A4               	movwf	?___aodiv+1
 11093  0BFA  0838               	movf	___aodiv@quotient+2,w
 11094  0BFB  00A5               	movwf	?___aodiv+2
 11095  0BFC  0839               	movf	___aodiv@quotient+3,w
 11096  0BFD  00A6               	movwf	?___aodiv+3
 11097  0BFE  083A               	movf	___aodiv@quotient+4,w
 11098  0BFF  00A7               	movwf	?___aodiv+4
 11099  0C00  083B               	movf	___aodiv@quotient+5,w
 11100  0C01  00A8               	movwf	?___aodiv+5
 11101  0C02  083C               	movf	___aodiv@quotient+6,w
 11102  0C03  00A9               	movwf	?___aodiv+6
 11103  0C04  083D               	movf	___aodiv@quotient+7,w
 11104  0C05  00AA               	movwf	?___aodiv+7
 11105  0C06  0008               	return
 11106  0C07                     __end_of___aodiv:
 11107                           
 11108                           	psect	text27
 11109  16A5                     __ptext27:	
 11110 ;; *************** function _atoi *****************
 11111 ;; Defined at:
 11112 ;;		line 4 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/atoi.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;  s               2   15[BANK0 ] PTR const unsigned char 
 11115 ;;		 -> STR_20(33), STR_19(19), STR_18(14), STR_17(10), 
 11116 ;;		 -> STR_14(5), STR_13(5), STR_7(20), STR_5(4), 
 11117 ;;		 -> STR_2(4), 
 11118 ;; Auto vars:     Size  Location     Type
 11119 ;;  n               2   28[BANK0 ] int 
 11120 ;;  neg             2   21[BANK0 ] int 
 11121 ;; Return value:  Size  Location     Type
 11122 ;;                  2   15[BANK0 ] int 
 11123 ;; Registers used:
 11124 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11125 ;; Tracked objects:
 11126 ;;		On entry : 1F/0
 11127 ;;		On exit  : 1F/0
 11128 ;;		Unchanged: 0/0
 11129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11130 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11131 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11132 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11133 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11134 ;;Total ram usage:       15 bytes
 11135 ;; Hardware stack levels used:    1
 11136 ;; Hardware stack levels required when called:    8
 11137 ;; This function calls:
 11138 ;;		___wmul
 11139 ;;		_isdigit
 11140 ;;		_isspace
 11141 ;; This function is called by:
 11142 ;;		_vfpfcnvrt
 11143 ;; This function uses a non-reentrant model
 11144 ;;
 11145                           
 11146                           
 11147                           ;psect for function _atoi
 11148  16A5                     _atoi:
 11149                           
 11150                           ;incstack = 0
 11151                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11152  16A5  01BC               	clrf	atoi@n
 11153  16A6  01BD               	clrf	atoi@n+1
 11154  16A7  01B5               	clrf	atoi@neg
 11155  16A8  01B6               	clrf	atoi@neg+1
 11156  16A9                     l6831:
 11157  16A9  01BB               	clrf	_atoi$2368
 11158  16AA  0ABB               	incf	_atoi$2368,f
 11159  16AB  082F               	movf	atoi@s,w
 11160  16AC  0084               	movwf	4
 11161  16AD  0830               	movf	atoi@s+1,w
 11162  16AE  0085               	movwf	5
 11163  16AF  0012               	moviw fsr0++
 11164  16B0  3A20               	xorlw	32
 11165  16B1  1903               	btfsc	3,2
 11166  16B2  2EC5               	goto	l6839
 11167  16B3  082F               	movf	atoi@s,w
 11168  16B4  0084               	movwf	4
 11169  16B5  0830               	movf	atoi@s+1,w
 11170  16B6  0085               	movwf	5
 11171  16B7  0800               	movf	0,w	;code access
 11172  16B8  3EF7               	addlw	247
 11173  16B9  00B1               	movwf	??_atoi
 11174  16BA  30FF               	movlw	255
 11175  16BB  1803               	skipnc
 11176  16BC  3000               	movlw	0
 11177  16BD  00B2               	movwf	??_atoi+1
 11178  16BE  3000               	movlw	0
 11179  16BF  0232               	subwf	??_atoi+1,w
 11180  16C0  3005               	movlw	5
 11181  16C1  1903               	skipnz
 11182  16C2  0231               	subwf	??_atoi,w
 11183  16C3  1803               	btfsc	3,0
 11184  16C4  01BB               	clrf	_atoi$2368
 11185  16C5                     l6839:
 11186  16C5  083B               	movf	_atoi$2368,w
 11187  16C6  00B1               	movwf	??_atoi
 11188  16C7  01B2               	clrf	??_atoi+1
 11189  16C8  0831               	movf	??_atoi,w
 11190  16C9  00B7               	movwf	_atoi$2367
 11191  16CA  0832               	movf	??_atoi+1,w
 11192  16CB  00B8               	movwf	_atoi$2367+1
 11193  16CC  0837               	movf	_atoi$2367,w
 11194  16CD  0438               	iorwf	_atoi$2367+1,w
 11195  16CE  1903               	btfsc	3,2
 11196  16CF  2EDA               	goto	l6847
 11197  16D0  3001               	movlw	1
 11198  16D1  07AF               	addwf	atoi@s,f
 11199  16D2  3000               	movlw	0
 11200  16D3  3DB0               	addwfc	atoi@s+1,f
 11201  16D4  2EA9               	goto	l6831
 11202  16D5                     l6845:
 11203  16D5  3001               	movlw	1
 11204  16D6  00B5               	movwf	atoi@neg
 11205  16D7  3000               	movlw	0
 11206  16D8  00B6               	movwf	atoi@neg+1
 11207  16D9  2F0C               	goto	l2059
 11208  16DA                     l6847:
 11209  16DA  082F               	movf	atoi@s,w
 11210  16DB  0084               	movwf	4
 11211  16DC  0830               	movf	atoi@s+1,w
 11212  16DD  0085               	movwf	5
 11213  16DE  0800               	movf	0,w	;code access
 11214  16DF  00B1               	movwf	??_atoi
 11215  16E0  01B2               	clrf	??_atoi+1
 11216                           
 11217                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11218                           ; Switch size 1, requested type "simple"
 11219                           ; Number of cases is 1, Range of values is 0 to 0
 11220                           ; switch strategies available:
 11221                           ; Name         Instructions Cycles
 11222                           ; simple_byte            4     3 (average)
 11223                           ; direct_byte            8     6 (fixed)
 11224                           ; jumptable            260     6 (fixed)
 11225                           ;	Chosen strategy is simple_byte
 11226  16E1  0832               	movf	??_atoi+1,w
 11227  16E2  3A00               	xorlw	0	; case 0
 11228  16E3  1903               	skipnz
 11229  16E4  2EE6               	goto	l8039
 11230  16E5  2F10               	goto	l6853
 11231  16E6                     l8039:
 11232                           
 11233                           ; Switch size 1, requested type "simple"
 11234                           ; Number of cases is 2, Range of values is 43 to 45
 11235                           ; switch strategies available:
 11236                           ; Name         Instructions Cycles
 11237                           ; simple_byte            7     4 (average)
 11238                           ; direct_byte           15     9 (fixed)
 11239                           ; jumptable            263     9 (fixed)
 11240                           ;	Chosen strategy is simple_byte
 11241  16E6  0831               	movf	??_atoi,w
 11242  16E7  3A2B               	xorlw	43	; case 43
 11243  16E8  1903               	skipnz
 11244  16E9  2F0C               	goto	l2059
 11245  16EA  3A06               	xorlw	6	; case 45
 11246  16EB  1903               	skipnz
 11247  16EC  2ED5               	goto	l6845
 11248  16ED  2F10               	goto	l6853
 11249  16EE                     l6849:
 11250  16EE  082F               	movf	atoi@s,w
 11251  16EF  0084               	movwf	4
 11252  16F0  0830               	movf	atoi@s+1,w
 11253  16F1  0085               	movwf	5
 11254  16F2  0800               	movf	0,w	;code access
 11255  16F3  00B1               	movwf	??_atoi
 11256  16F4  083D               	movf	atoi@n+1,w
 11257  16F5  00AA               	movwf	___wmul@multiplier+1
 11258  16F6  083C               	movf	atoi@n,w
 11259  16F7  00A9               	movwf	___wmul@multiplier
 11260  16F8  300A               	movlw	10
 11261  16F9  00AB               	movwf	___wmul@multiplicand
 11262  16FA  3000               	movlw	0
 11263  16FB  00AC               	movwf	___wmul@multiplicand+1
 11264  16FC  319D  25D9  3196   	fcall	___wmul
 11265  16FF  082A               	movf	?___wmul+1,w
 11266  1700  00B3               	movwf	??_atoi+2
 11267  1701  0831               	movf	??_atoi,w
 11268  1702  0229               	subwf	?___wmul,w
 11269  1703  00B2               	movwf	??_atoi+1
 11270  1704  1C03               	skipc
 11271  1705  03B3               	decf	??_atoi+2,f
 11272  1706  0832               	movf	??_atoi+1,w
 11273  1707  3E30               	addlw	48
 11274  1708  00BC               	movwf	atoi@n
 11275  1709  3000               	movlw	0
 11276  170A  3D33               	addwfc	??_atoi+2,w
 11277  170B  00BD               	movwf	atoi@n+1
 11278  170C                     l2059:
 11279  170C  3001               	movlw	1
 11280  170D  07AF               	addwf	atoi@s,f
 11281  170E  3000               	movlw	0
 11282  170F  3DB0               	addwfc	atoi@s+1,f
 11283  1710                     l6853:
 11284  1710  082F               	movf	atoi@s,w
 11285  1711  0084               	movwf	4
 11286  1712  0830               	movf	atoi@s+1,w
 11287  1713  0085               	movwf	5
 11288  1714  0800               	movf	0,w	;code access
 11289  1715  3ED0               	addlw	208
 11290  1716  00B1               	movwf	??_atoi
 11291  1717  30FF               	movlw	255
 11292  1718  1803               	skipnc
 11293  1719  3000               	movlw	0
 11294  171A  00B2               	movwf	??_atoi+1
 11295  171B  3000               	movlw	0
 11296  171C  0232               	subwf	??_atoi+1,w
 11297  171D  300A               	movlw	10
 11298  171E  1903               	skipnz
 11299  171F  0231               	subwf	??_atoi,w
 11300  1720  1803               	btfsc	3,0
 11301  1721  2F24               	goto	u5140
 11302  1722  3001               	movlw	1
 11303  1723  2F25               	goto	u5150
 11304  1724                     u5140:
 11305  1724  3000               	movlw	0
 11306  1725                     u5150:
 11307  1725  00B3               	movwf	??_atoi+2
 11308  1726  01B4               	clrf	??_atoi+3
 11309  1727  0833               	movf	??_atoi+2,w
 11310  1728  00B9               	movwf	_atoi$2369
 11311  1729  0834               	movf	??_atoi+3,w
 11312  172A  00BA               	movwf	_atoi$2369+1
 11313  172B  0839               	movf	_atoi$2369,w
 11314  172C  043A               	iorwf	_atoi$2369+1,w
 11315  172D  1D03               	btfss	3,2
 11316  172E  2EEE               	goto	l6849
 11317  172F  0835               	movf	atoi@neg,w
 11318  1730  0436               	iorwf	atoi@neg+1,w
 11319  1731  1D03               	btfss	3,2
 11320  1732  2F3F               	goto	l6863
 11321  1733  093C               	comf	atoi@n,w
 11322  1734  00B1               	movwf	??_atoi
 11323  1735  093D               	comf	atoi@n+1,w
 11324  1736  00B2               	movwf	??_atoi+1
 11325  1737  0AB1               	incf	??_atoi,f
 11326  1738  1903               	skipnz
 11327  1739  0AB2               	incf	??_atoi+1,f
 11328  173A  0831               	movf	??_atoi,w
 11329  173B  00AF               	movwf	?_atoi
 11330  173C  0832               	movf	??_atoi+1,w
 11331  173D  00B0               	movwf	?_atoi+1
 11332  173E  0008               	return
 11333  173F                     l6863:
 11334  173F  083D               	movf	atoi@n+1,w
 11335  1740  00B0               	movwf	?_atoi+1
 11336  1741  083C               	movf	atoi@n,w
 11337  1742  00AF               	movwf	?_atoi
 11338  1743  0008               	return
 11339  1744                     __end_of_atoi:
 11340                           
 11341                           	psect	text28
 11342  1E11                     __ptext28:	
 11343 ;; *************** function _isspace *****************
 11344 ;; Defined at:
 11345 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/isspace.c"
 11346 ;; Parameters:    Size  Location     Type
 11347 ;;  c               2    3[BANK0 ] int 
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;		None
 11350 ;; Return value:  Size  Location     Type
 11351 ;;                  2    3[BANK0 ] int 
 11352 ;; Registers used:
 11353 ;;		wreg, status,2, status,0
 11354 ;; Tracked objects:
 11355 ;;		On entry : 0/0
 11356 ;;		On exit  : 1F/0
 11357 ;;		Unchanged: 0/0
 11358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11359 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;Total ram usage:        5 bytes
 11364 ;; Hardware stack levels used:    1
 11365 ;; Hardware stack levels required when called:    7
 11366 ;; This function calls:
 11367 ;;		Nothing
 11368 ;; This function is called by:
 11369 ;;		_atoi
 11370 ;; This function uses a non-reentrant model
 11371 ;;
 11372                           
 11373                           
 11374                           ;psect for function _isspace
 11375  1E11                     _isspace:
 11376                           
 11377                           ;incstack = 0
 11378                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11379  1E11  0020               	movlb	0	; select bank0
 11380  1E12  01A7               	clrf	_isspace$2394
 11381  1E13  0AA7               	incf	_isspace$2394,f
 11382  1E14  3020               	movlw	32
 11383  1E15  0623               	xorwf	isspace@c,w
 11384  1E16  0424               	iorwf	isspace@c+1,w
 11385  1E17  1903               	btfsc	3,2
 11386  1E18  2E26               	goto	l6585
 11387  1E19  0823               	movf	isspace@c,w
 11388  1E1A  3EF7               	addlw	247
 11389  1E1B  00A5               	movwf	??_isspace
 11390  1E1C  30FF               	movlw	255
 11391  1E1D  3D24               	addwfc	isspace@c+1,w
 11392  1E1E  00A6               	movwf	??_isspace+1
 11393  1E1F  3000               	movlw	0
 11394  1E20  0226               	subwf	??_isspace+1,w
 11395  1E21  3005               	movlw	5
 11396  1E22  1903               	skipnz
 11397  1E23  0225               	subwf	??_isspace,w
 11398  1E24  1803               	btfsc	3,0
 11399  1E25  01A7               	clrf	_isspace$2394
 11400  1E26                     l6585:
 11401  1E26  0827               	movf	_isspace$2394,w
 11402  1E27  00A5               	movwf	??_isspace
 11403  1E28  01A6               	clrf	??_isspace+1
 11404  1E29  0825               	movf	??_isspace,w
 11405  1E2A  00A3               	movwf	?_isspace
 11406  1E2B  0826               	movf	??_isspace+1,w
 11407  1E2C  00A4               	movwf	?_isspace+1
 11408  1E2D  0008               	return
 11409  1E2E                     __end_of_isspace:
 11410                           
 11411                           	psect	text29
 11412  1CF6                     __ptext29:	
 11413 ;; *************** function _isdigit *****************
 11414 ;; Defined at:
 11415 ;;		line 5 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/isdigit.c"
 11416 ;; Parameters:    Size  Location     Type
 11417 ;;  c               2    3[BANK0 ] int 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;		None
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  2    3[BANK0 ] int 
 11422 ;; Registers used:
 11423 ;;		wreg, status,2, status,0
 11424 ;; Tracked objects:
 11425 ;;		On entry : 0/0
 11426 ;;		On exit  : 1F/0
 11427 ;;		Unchanged: 0/0
 11428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11429 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11431 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11432 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11433 ;;Total ram usage:        6 bytes
 11434 ;; Hardware stack levels used:    1
 11435 ;; Hardware stack levels required when called:    7
 11436 ;; This function calls:
 11437 ;;		Nothing
 11438 ;; This function is called by:
 11439 ;;		_vfpfcnvrt
 11440 ;;		_atoi
 11441 ;; This function uses a non-reentrant model
 11442 ;;
 11443                           
 11444                           
 11445                           ;psect for function _isdigit
 11446  1CF6                     _isdigit:
 11447                           
 11448                           ;incstack = 0
 11449                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11450  1CF6  0020               	movlb	0	; select bank0
 11451  1CF7  0823               	movf	isdigit@c,w
 11452  1CF8  3ED0               	addlw	208
 11453  1CF9  00A5               	movwf	??_isdigit
 11454  1CFA  30FF               	movlw	255
 11455  1CFB  3D24               	addwfc	isdigit@c+1,w
 11456  1CFC  00A6               	movwf	??_isdigit+1
 11457  1CFD  3000               	movlw	0
 11458  1CFE  0226               	subwf	??_isdigit+1,w
 11459  1CFF  300A               	movlw	10
 11460  1D00  1903               	skipnz
 11461  1D01  0225               	subwf	??_isdigit,w
 11462  1D02  1803               	btfsc	3,0
 11463  1D03  2D06               	goto	u4620
 11464  1D04  3001               	movlw	1
 11465  1D05  2D07               	goto	u4630
 11466  1D06                     u4620:
 11467  1D06  3000               	movlw	0
 11468  1D07                     u4630:
 11469  1D07  00A7               	movwf	??_isdigit+2
 11470  1D08  01A8               	clrf	??_isdigit+3
 11471  1D09  0827               	movf	??_isdigit+2,w
 11472  1D0A  00A3               	movwf	?_isdigit
 11473  1D0B  0828               	movf	??_isdigit+3,w
 11474  1D0C  00A4               	movwf	?_isdigit+1
 11475  1D0D  0008               	return
 11476  1D0E                     __end_of_isdigit:
 11477                           
 11478                           	psect	text30
 11479  1DD9                     __ptext30:	
 11480 ;; *************** function ___wmul *****************
 11481 ;; Defined at:
 11482 ;;		line 15 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/Umul16.c"
 11483 ;; Parameters:    Size  Location     Type
 11484 ;;  multiplier      2    9[BANK0 ] unsigned int 
 11485 ;;  multiplicand    2   11[BANK0 ] unsigned int 
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;  product         2   13[BANK0 ] unsigned int 
 11488 ;; Return value:  Size  Location     Type
 11489 ;;                  2    9[BANK0 ] unsigned int 
 11490 ;; Registers used:
 11491 ;;		wreg, status,2, status,0
 11492 ;; Tracked objects:
 11493 ;;		On entry : 1F/3900000
 11494 ;;		On exit  : 1F/0
 11495 ;;		Unchanged: 0/0
 11496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11497 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;Total ram usage:        6 bytes
 11502 ;; Hardware stack levels used:    1
 11503 ;; Hardware stack levels required when called:    7
 11504 ;; This function calls:
 11505 ;;		Nothing
 11506 ;; This function is called by:
 11507 ;;		_main
 11508 ;;		_lcd_disp_param
 11509 ;;		_atoi
 11510 ;; This function uses a non-reentrant model
 11511 ;;
 11512                           
 11513                           
 11514                           ;psect for function ___wmul
 11515  1DD9                     ___wmul:
 11516                           
 11517                           ;incstack = 0
 11518                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11519  1DD9  01AD               	clrf	___wmul@product
 11520  1DDA  01AE               	clrf	___wmul@product+1
 11521  1DDB                     l6453:
 11522  1DDB  1C29               	btfss	___wmul@multiplier,0
 11523  1DDC  2DE1               	goto	l1410
 11524  1DDD  082B               	movf	___wmul@multiplicand,w
 11525  1DDE  07AD               	addwf	___wmul@product,f
 11526  1DDF  082C               	movf	___wmul@multiplicand+1,w
 11527  1DE0  3DAE               	addwfc	___wmul@product+1,f
 11528  1DE1                     l1410:
 11529  1DE1  3001               	movlw	1
 11530  1DE2                     u4275:
 11531  1DE2  35AB               	lslf	___wmul@multiplicand,f
 11532  1DE3  0DAC               	rlf	___wmul@multiplicand+1,f
 11533  1DE4  0B89               	decfsz	9,f
 11534  1DE5  2DE2               	goto	u4275
 11535  1DE6  3001               	movlw	1
 11536  1DE7                     u4285:
 11537  1DE7  36AA               	lsrf	___wmul@multiplier+1,f
 11538  1DE8  0CA9               	rrf	___wmul@multiplier,f
 11539  1DE9  0B89               	decfsz	9,f
 11540  1DEA  2DE7               	goto	u4285
 11541  1DEB  0829               	movf	___wmul@multiplier,w
 11542  1DEC  042A               	iorwf	___wmul@multiplier+1,w
 11543  1DED  1D03               	btfss	3,2
 11544  1DEE  2DDB               	goto	l6453
 11545  1DEF  082E               	movf	___wmul@product+1,w
 11546  1DF0  00AA               	movwf	?___wmul+1
 11547  1DF1  082D               	movf	___wmul@product,w
 11548  1DF2  00A9               	movwf	?___wmul
 11549  1DF3  0008               	return
 11550  1DF4                     __end_of___wmul:
 11551                           
 11552                           	psect	text31
 11553  10EA                     __ptext31:	
 11554 ;; *************** function _i2c_lcd_set_cursor_pos *****************
 11555 ;; Defined at:
 11556 ;;		line 190 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 11557 ;; Parameters:    Size  Location     Type
 11558 ;;  col             1    wreg     unsigned char 
 11559 ;;  line            1   23[BANK0 ] unsigned char 
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;  col             1   27[BANK0 ] unsigned char 
 11562 ;;  pos             1   26[BANK0 ] unsigned char 
 11563 ;; Return value:  Size  Location     Type
 11564 ;;                  1    wreg      void 
 11565 ;; Registers used:
 11566 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11567 ;; Tracked objects:
 11568 ;;		On entry : 1F/3C00000
 11569 ;;		On exit  : 0/0
 11570 ;;		Unchanged: 0/0
 11571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11572 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11576 ;;Total ram usage:        5 bytes
 11577 ;; Hardware stack levels used:    1
 11578 ;; Hardware stack levels required when called:   12
 11579 ;; This function calls:
 11580 ;;		_i2c_lcd_send_command
 11581 ;; This function is called by:
 11582 ;;		_lcd_disp_param
 11583 ;; This function uses a non-reentrant model
 11584 ;;
 11585                           
 11586                           
 11587                           ;psect for function _i2c_lcd_set_cursor_pos
 11588  10EA                     _i2c_lcd_set_cursor_pos:
 11589                           
 11590                           ;incstack = 0
 11591                           ; Regs used in _i2c_lcd_set_cursor_pos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11592                           ;i2c_lcd_set_cursor_pos@col stored from wreg
 11593  10EA  00BB               	movwf	i2c_lcd_set_cursor_pos@col
 11594                           
 11595                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 195:    unsigned char pos;;lcd_driver_files/i2
      +                          c-lcdlib-ceg003400.c: 197:     switch( line )
 11596  10EB  28FA               	goto	l7275
 11597  10EC                     l7267:
 11598  10EC  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 11599  10ED  28F6               	goto	L7
 11600  10EE                     l7269:	
 11601                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 200:                     break;
 11602                           
 11603  10EE  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 11604  10EF  3E40               	addlw	64
 11605  10F0  28F6               	goto	L7
 11606  10F1                     l7271:	
 11607                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 202:                     break;
 11608                           
 11609  10F1  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 11610  10F2  3E14               	addlw	20
 11611  10F3  28F6               	goto	L7
 11612  10F4                     l7273:	
 11613                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 204:                     break;
 11614                           
 11615  10F4  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 11616  10F5  3E54               	addlw	84
 11617  10F6                     L7:
 11618  10F6  00B8               	movwf	??_i2c_lcd_set_cursor_pos
 11619  10F7  0838               	movf	??_i2c_lcd_set_cursor_pos,w
 11620  10F8  00BA               	movwf	i2c_lcd_set_cursor_pos@pos
 11621                           
 11622                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 206:     }
 11623  10F9  2910               	goto	l7277
 11624  10FA                     l7275:
 11625  10FA  0837               	movf	i2c_lcd_set_cursor_pos@line,w
 11626  10FB  00B8               	movwf	??_i2c_lcd_set_cursor_pos
 11627  10FC  01B9               	clrf	??_i2c_lcd_set_cursor_pos+1
 11628                           
 11629                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11630                           ; Switch size 1, requested type "simple"
 11631                           ; Number of cases is 1, Range of values is 0 to 0
 11632                           ; switch strategies available:
 11633                           ; Name         Instructions Cycles
 11634                           ; simple_byte            4     3 (average)
 11635                           ; direct_byte            8     6 (fixed)
 11636                           ; jumptable            260     6 (fixed)
 11637                           ;	Chosen strategy is simple_byte
 11638  10FD  0839               	movf	??_i2c_lcd_set_cursor_pos+1,w
 11639  10FE  3A00               	xorlw	0	; case 0
 11640  10FF  1903               	skipnz
 11641  1100  2902               	goto	l8041
 11642  1101  2910               	goto	l7277
 11643  1102                     l8041:
 11644                           
 11645                           ; Switch size 1, requested type "simple"
 11646                           ; Number of cases is 4, Range of values is 0 to 3
 11647                           ; switch strategies available:
 11648                           ; Name         Instructions Cycles
 11649                           ; simple_byte           13     7 (average)
 11650                           ; direct_byte           14     6 (fixed)
 11651                           ; jumptable            260     6 (fixed)
 11652                           ;	Chosen strategy is simple_byte
 11653  1102  0838               	movf	??_i2c_lcd_set_cursor_pos,w
 11654  1103  3A00               	xorlw	0	; case 0
 11655  1104  1903               	skipnz
 11656  1105  28EC               	goto	l7267
 11657  1106  3A01               	xorlw	1	; case 1
 11658  1107  1903               	skipnz
 11659  1108  28EE               	goto	l7269
 11660  1109  3A03               	xorlw	3	; case 2
 11661  110A  1903               	skipnz
 11662  110B  28F1               	goto	l7271
 11663  110C  3A01               	xorlw	1	; case 3
 11664  110D  1903               	skipnz
 11665  110E  28F4               	goto	l7273
 11666  110F  2910               	goto	l7277
 11667  1110                     l7277:
 11668                           
 11669                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 207:     pos += 0x80;
 11670  1110  3080               	movlw	128
 11671  1111  00B8               	movwf	??_i2c_lcd_set_cursor_pos
 11672  1112  0838               	movf	??_i2c_lcd_set_cursor_pos,w
 11673  1113  07BA               	addwf	i2c_lcd_set_cursor_pos@pos,f
 11674                           
 11675                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 208:   i2c_lcd_send_command(pos);
 11676  1114  083A               	movf	i2c_lcd_set_cursor_pos@pos,w
 11677  1115  3194  2411  3190   	fcall	_i2c_lcd_send_command
 11678                           
 11679                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 209:   _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
 11680  1118  3003               	movlw	3
 11681  1119                     u5777:
 11682  1119  0B89               	decfsz	9,f
 11683  111A  2919               	goto	u5777
 11684  111B  0000               	nop
 11685  111C  0008               	return
 11686  111D                     __end_of_i2c_lcd_set_cursor_pos:
 11687                           
 11688                           	psect	text32
 11689  1CB4                     __ptext32:	
 11690 ;; *************** function _i2c_lcd_puts *****************
 11691 ;; Defined at:
 11692 ;;		line 156 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 11693 ;; Parameters:    Size  Location     Type
 11694 ;;  s               2   23[BANK0 ] PTR unsigned char 
 11695 ;;		 -> lcdbuff(0), lcdbuff(41), 
 11696 ;; Auto vars:     Size  Location     Type
 11697 ;;		None
 11698 ;; Return value:  Size  Location     Type
 11699 ;;                  1    wreg      void 
 11700 ;; Registers used:
 11701 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11702 ;; Tracked objects:
 11703 ;;		On entry : 1F/0
 11704 ;;		On exit  : 1F/0
 11705 ;;		Unchanged: 0/0
 11706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11707 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11710 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11711 ;;Total ram usage:        2 bytes
 11712 ;; Hardware stack levels used:    1
 11713 ;; Hardware stack levels required when called:   12
 11714 ;; This function calls:
 11715 ;;		_i2c_lcd_send_data
 11716 ;; This function is called by:
 11717 ;;		_main
 11718 ;;		_lcd_disp_param
 11719 ;; This function uses a non-reentrant model
 11720 ;;
 11721                           
 11722                           
 11723                           ;psect for function _i2c_lcd_puts
 11724  1CB4                     _i2c_lcd_puts:
 11725  1CB4                     l7263:	
 11726                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 157:     while(*s)
 11727                           
 11728                           ;incstack = 0
 11729                           ; Regs used in _i2c_lcd_puts: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11730                           
 11731                           
 11732                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 157:     while(*s)
 11733  1CB4  0837               	movf	i2c_lcd_puts@s,w
 11734  1CB5  0086               	movwf	6
 11735  1CB6  0838               	movf	i2c_lcd_puts@s+1,w
 11736  1CB7  0087               	movwf	7
 11737  1CB8  0801               	movf	1,w
 11738  1CB9  1903               	btfsc	3,2
 11739  1CBA  0008               	return
 11740                           
 11741                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 158:         i2c_lcd_send_data(*s++);
 11742  1CBB  0837               	movf	i2c_lcd_puts@s,w
 11743  1CBC  0086               	movwf	6
 11744  1CBD  0838               	movf	i2c_lcd_puts@s+1,w
 11745  1CBE  0087               	movwf	7
 11746  1CBF  0801               	movf	1,w
 11747  1CC0  3193  23BC  319C   	fcall	_i2c_lcd_send_data
 11748  1CC3  3001               	movlw	1
 11749  1CC4  0020               	movlb	0	; select bank0
 11750  1CC5  07B7               	addwf	i2c_lcd_puts@s,f
 11751  1CC6  3000               	movlw	0
 11752  1CC7  3DB8               	addwfc	i2c_lcd_puts@s+1,f
 11753  1CC8  2CB4               	goto	l7263
 11754  1CC9                     __end_of_i2c_lcd_puts:
 11755                           
 11756                           	psect	text33
 11757  13BC                     __ptext33:	
 11758 ;; *************** function _i2c_lcd_send_data *****************
 11759 ;; Defined at:
 11760 ;;		line 92 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 11761 ;; Parameters:    Size  Location     Type
 11762 ;;  data            1    wreg     unsigned char 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;  data            1   18[BANK0 ] unsigned char 
 11765 ;;  lowerdata       1   22[BANK0 ] unsigned char 
 11766 ;;  upperdata       1   21[BANK0 ] unsigned char 
 11767 ;;  lowerdata_en    1   20[BANK0 ] unsigned char 
 11768 ;;  upperdata_en    1   19[BANK0 ] unsigned char 
 11769 ;; Return value:  Size  Location     Type
 11770 ;;                  1    wreg      void 
 11771 ;; Registers used:
 11772 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11773 ;; Tracked objects:
 11774 ;;		On entry : 1F/0
 11775 ;;		On exit  : 0/0
 11776 ;;		Unchanged: 0/0
 11777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11780 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11782 ;;Total ram usage:        7 bytes
 11783 ;; Hardware stack levels used:    1
 11784 ;; Hardware stack levels required when called:   11
 11785 ;; This function calls:
 11786 ;;		_I2C1_WriteNBytes
 11787 ;; This function is called by:
 11788 ;;		_i2c_lcd_puts
 11789 ;; This function uses a non-reentrant model
 11790 ;;
 11791                           
 11792                           
 11793                           ;psect for function _i2c_lcd_send_data
 11794  13BC                     _i2c_lcd_send_data:
 11795                           
 11796                           ;incstack = 0
 11797                           ; Regs used in _i2c_lcd_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11798                           ;i2c_lcd_send_data@data stored from wreg
 11799  13BC  00B2               	movwf	i2c_lcd_send_data@data
 11800                           
 11801                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 92: void i2c_lcd_send_data(unsigned char data)
      +                          ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 93: {;lcd_driver_files/i2c-lcdlib-ceg003400.c:
      +                           94:    unsigned char upperdata, upperdata_en, lowerdata, lowerdata_en;;lcd_driver_files
      +                          /i2c-lcdlib-ceg003400.c: 97:     upperdata = (data & 0xf0) | 0b00001000 | 0b00000001;
 11802  13BD  0832               	movf	i2c_lcd_send_data@data,w
 11803  13BE  39F0               	andlw	240
 11804  13BF  3809               	iorlw	9
 11805  13C0  00B0               	movwf	??_i2c_lcd_send_data
 11806  13C1  0830               	movf	??_i2c_lcd_send_data,w
 11807  13C2  00B5               	movwf	i2c_lcd_send_data@upperdata
 11808                           
 11809                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 98:     upperdata_en = upperdata | 0b00000100;
 11810  13C3  0835               	movf	i2c_lcd_send_data@upperdata,w
 11811  13C4  3804               	iorlw	4
 11812  13C5  00B0               	movwf	??_i2c_lcd_send_data
 11813  13C6  0830               	movf	??_i2c_lcd_send_data,w
 11814  13C7  00B3               	movwf	i2c_lcd_send_data@upperdata_en
 11815                           
 11816                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 99:     lowerdata = ((data << 4) & 0xf0) | 0b0
      +                          0001000 | 0b00000001 ;
 11817  13C8  0832               	movf	i2c_lcd_send_data@data,w
 11818  13C9  00B0               	movwf	??_i2c_lcd_send_data
 11819  13CA  3003               	movlw	3
 11820  13CB                     u5365:
 11821  13CB  35B0               	lslf	??_i2c_lcd_send_data,f
 11822  13CC  3EFF               	addlw	-1
 11823  13CD  1D03               	skipz
 11824  13CE  2BCB               	goto	u5365
 11825  13CF  3530               	lslf	??_i2c_lcd_send_data,w
 11826  13D0  39F0               	andlw	240
 11827  13D1  3809               	iorlw	9
 11828  13D2  00B1               	movwf	??_i2c_lcd_send_data+1
 11829  13D3  0831               	movf	??_i2c_lcd_send_data+1,w
 11830  13D4  00B6               	movwf	i2c_lcd_send_data@lowerdata
 11831                           
 11832                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 100:     lowerdata_en = lowerdata | 0b00000100
      +                          ;
 11833  13D5  0836               	movf	i2c_lcd_send_data@lowerdata,w
 11834  13D6  3804               	iorlw	4
 11835  13D7  00B0               	movwf	??_i2c_lcd_send_data
 11836  13D8  0830               	movf	??_i2c_lcd_send_data,w
 11837  13D9  00B4               	movwf	i2c_lcd_send_data@lowerdata_en
 11838                           
 11839                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 101:       I2C1_WriteNBytes(0x25, &upperdata_e
      +                          n,1);
 11840  13DA  3033               	movlw	(low (i2c_lcd_send_data@upperdata_en| 0))& (0+255)
 11841  13DB  00B0               	movwf	??_i2c_lcd_send_data
 11842  13DC  0830               	movf	??_i2c_lcd_send_data,w
 11843  13DD  00AC               	movwf	I2C1_WriteNBytes@data
 11844  13DE  3001               	movlw	1
 11845  13DF  00AD               	movwf	I2C1_WriteNBytes@len
 11846  13E0  3000               	movlw	0
 11847  13E1  00AE               	movwf	I2C1_WriteNBytes@len+1
 11848  13E2  3025               	movlw	37
 11849  13E3  319F  2719  3193   	fcall	_I2C1_WriteNBytes
 11850                           
 11851                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 102:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 11852  13E6  0000               	nop
 11853                           
 11854                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 104:      I2C1_WriteNBytes(0x25, &upperdata, 1
      +                          );
 11855  13E7  3035               	movlw	(low (i2c_lcd_send_data@upperdata| 0))& (0+255)
 11856  13E8  0020               	movlb	0	; select bank0
 11857  13E9  00B0               	movwf	??_i2c_lcd_send_data
 11858  13EA  0830               	movf	??_i2c_lcd_send_data,w
 11859  13EB  00AC               	movwf	I2C1_WriteNBytes@data
 11860  13EC  3001               	movlw	1
 11861  13ED  00AD               	movwf	I2C1_WriteNBytes@len
 11862  13EE  3000               	movlw	0
 11863  13EF  00AE               	movwf	I2C1_WriteNBytes@len+1
 11864  13F0  3025               	movlw	37
 11865  13F1  319F  2719  3193   	fcall	_I2C1_WriteNBytes
 11866                           
 11867                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 105:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 11868  13F4  0000               	nop
 11869                           
 11870                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 109:     I2C1_WriteNBytes(0x25, &lowerdata_en,
      +                           1);
 11871  13F5  3034               	movlw	(low (i2c_lcd_send_data@lowerdata_en| 0))& (0+255)
 11872  13F6  0020               	movlb	0	; select bank0
 11873  13F7  00B0               	movwf	??_i2c_lcd_send_data
 11874  13F8  0830               	movf	??_i2c_lcd_send_data,w
 11875  13F9  00AC               	movwf	I2C1_WriteNBytes@data
 11876  13FA  3001               	movlw	1
 11877  13FB  00AD               	movwf	I2C1_WriteNBytes@len
 11878  13FC  3000               	movlw	0
 11879  13FD  00AE               	movwf	I2C1_WriteNBytes@len+1
 11880  13FE  3025               	movlw	37
 11881  13FF  319F  2719  3193   	fcall	_I2C1_WriteNBytes
 11882                           
 11883                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 110:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 11884  1402  0000               	nop
 11885                           
 11886                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 112:     I2C1_WriteNBytes(0x25, &lowerdata, 1)
      +                          ;
 11887  1403  3036               	movlw	(low (i2c_lcd_send_data@lowerdata| 0))& (0+255)
 11888  1404  0020               	movlb	0	; select bank0
 11889  1405  00B0               	movwf	??_i2c_lcd_send_data
 11890  1406  0830               	movf	??_i2c_lcd_send_data,w
 11891  1407  00AC               	movwf	I2C1_WriteNBytes@data
 11892  1408  3001               	movlw	1
 11893  1409  00AD               	movwf	I2C1_WriteNBytes@len
 11894  140A  3000               	movlw	0
 11895  140B  00AE               	movwf	I2C1_WriteNBytes@len+1
 11896  140C  3025               	movlw	37
 11897  140D  319F  2719         	fcall	_I2C1_WriteNBytes
 11898                           
 11899                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 113:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 11900  140F  0000               	nop
 11901  1410  0008               	return
 11902  1411                     __end_of_i2c_lcd_send_data:
 11903                           
 11904                           	psect	text34
 11905  1E4C                     __ptext34:	
 11906 ;; *************** function ___lbmod *****************
 11907 ;; Defined at:
 11908 ;;		line 4 in file "/Applications/microchip/xc8/v2.20/pic/sources/c99/common/lbmod.c"
 11909 ;; Parameters:    Size  Location     Type
 11910 ;;  dividend        1    wreg     unsigned char 
 11911 ;;  divisor         1    3[BANK0 ] unsigned char 
 11912 ;; Auto vars:     Size  Location     Type
 11913 ;;  dividend        1    6[BANK0 ] unsigned char 
 11914 ;;  rem             1    8[BANK0 ] unsigned char 
 11915 ;;  counter         1    7[BANK0 ] unsigned char 
 11916 ;; Return value:  Size  Location     Type
 11917 ;;                  1    wreg      unsigned char 
 11918 ;; Registers used:
 11919 ;;		wreg, status,2, status,0
 11920 ;; Tracked objects:
 11921 ;;		On entry : 0/3900001
 11922 ;;		On exit  : 1F/0
 11923 ;;		Unchanged: 0/0
 11924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11925 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11926 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11927 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11928 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11929 ;;Total ram usage:        6 bytes
 11930 ;; Hardware stack levels used:    1
 11931 ;; Hardware stack levels required when called:    7
 11932 ;; This function calls:
 11933 ;;		Nothing
 11934 ;; This function is called by:
 11935 ;;		_set_source
 11936 ;;		_main
 11937 ;;		_lcd_disp_param
 11938 ;; This function uses a non-reentrant model
 11939 ;;
 11940                           
 11941                           
 11942                           ;psect for function ___lbmod
 11943  1E4C                     ___lbmod:
 11944                           
 11945                           ;incstack = 0
 11946                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 11947                           ;___lbmod@dividend stored from wreg
 11948  1E4C  0020               	movlb	0	; select bank0
 11949  1E4D  00A6               	movwf	___lbmod@dividend
 11950  1E4E  3008               	movlw	8
 11951  1E4F  00A4               	movwf	??___lbmod
 11952  1E50  0824               	movf	??___lbmod,w
 11953  1E51  00A7               	movwf	___lbmod@counter
 11954  1E52  01A8               	clrf	___lbmod@rem
 11955  1E53                     l7357:
 11956  1E53  0826               	movf	___lbmod@dividend,w
 11957  1E54  00A4               	movwf	??___lbmod
 11958  1E55  3007               	movlw	7
 11959  1E56                     u5505:
 11960  1E56  36A4               	lsrf	??___lbmod,f
 11961  1E57  0B89               	decfsz	9,f
 11962  1E58  2E56               	goto	u5505
 11963  1E59  3528               	lslf	___lbmod@rem,w
 11964  1E5A  0424               	iorwf	??___lbmod,w
 11965  1E5B  00A5               	movwf	??___lbmod+1
 11966  1E5C  0825               	movf	??___lbmod+1,w
 11967  1E5D  00A8               	movwf	___lbmod@rem
 11968  1E5E  1003               	clrc
 11969  1E5F  0DA6               	rlf	___lbmod@dividend,f
 11970  1E60  0823               	movf	___lbmod@divisor,w
 11971  1E61  0228               	subwf	___lbmod@rem,w
 11972  1E62  1C03               	skipc
 11973  1E63  2E66               	goto	l1628
 11974  1E64  0823               	movf	___lbmod@divisor,w
 11975  1E65  02A8               	subwf	___lbmod@rem,f
 11976  1E66                     l1628:
 11977  1E66  3001               	movlw	1
 11978  1E67  02A7               	subwf	___lbmod@counter,f
 11979  1E68  1D03               	btfss	3,2
 11980  1E69  2E53               	goto	l7357
 11981  1E6A  0828               	movf	___lbmod@rem,w
 11982  1E6B  0008               	return
 11983  1E6C                     __end_of___lbmod:
 11984                           
 11985                           	psect	text35
 11986  14BD                     __ptext35:	
 11987 ;; *************** function _init_tas6422 *****************
 11988 ;; Defined at:
 11989 ;;		line 282 in file "main.c"
 11990 ;; Parameters:    Size  Location     Type
 11991 ;;		None
 11992 ;; Auto vars:     Size  Location     Type
 11993 ;;		None
 11994 ;; Return value:  Size  Location     Type
 11995 ;;                  1    wreg      void 
 11996 ;; Registers used:
 11997 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11998 ;; Tracked objects:
 11999 ;;		On entry : 1F/0
 12000 ;;		On exit  : 1F/2
 12001 ;;		Unchanged: 0/0
 12002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12006 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;Total ram usage:        1 bytes
 12008 ;; Hardware stack levels used:    1
 12009 ;; Hardware stack levels required when called:   11
 12010 ;; This function calls:
 12011 ;;		_DELAY_milliseconds
 12012 ;;		_i2c_writeNBytes
 12013 ;; This function is called by:
 12014 ;;		_main
 12015 ;; This function uses a non-reentrant model
 12016 ;;
 12017                           
 12018                           
 12019                           ;psect for function _init_tas6422
 12020  14BD                     _init_tas6422:
 12021                           
 12022                           ;main.c: 284: i2c_writeNBytes(0x6a,&TAS_RESET, 2 );
 12023                           
 12024                           ;incstack = 0
 12025                           ; Regs used in _init_tas6422: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12026  14BD  30B3               	movlw	(low (_TAS_RESET| (0+256)))& (0+255)
 12027  14BE  00B0               	movwf	??_init_tas6422
 12028  14BF  0830               	movf	??_init_tas6422,w
 12029  14C0  00AC               	movwf	i2c_writeNBytes@data
 12030  14C1  3002               	movlw	2
 12031  14C2  00AD               	movwf	i2c_writeNBytes@len
 12032  14C3  3000               	movlw	0
 12033  14C4  00AE               	movwf	i2c_writeNBytes@len+1
 12034  14C5  306A               	movlw	106
 12035  14C6  319F  273E  3194   	fcall	_i2c_writeNBytes
 12036                           
 12037                           ;main.c: 285:   DELAY_milliseconds(5);
 12038  14C9  3005               	movlw	5
 12039  14CA  00A3               	movwf	DELAY_milliseconds@milliseconds
 12040  14CB  3000               	movlw	0
 12041  14CC  00A4               	movwf	DELAY_milliseconds@milliseconds+1
 12042  14CD  319B  23CF  3194   	fcall	_DELAY_milliseconds
 12043                           
 12044                           ;main.c: 286: i2c_writeNBytes(0x6a,&TAS_RUN, 2 );
 12045  14D0  30ED               	movlw	(low (_TAS_RUN| (0+256)))& (0+255)
 12046  14D1  00B0               	movwf	??_init_tas6422
 12047  14D2  0830               	movf	??_init_tas6422,w
 12048  14D3  00AC               	movwf	i2c_writeNBytes@data
 12049  14D4  3002               	movlw	2
 12050  14D5  00AD               	movwf	i2c_writeNBytes@len
 12051  14D6  3000               	movlw	0
 12052  14D7  00AE               	movwf	i2c_writeNBytes@len+1
 12053  14D8  306A               	movlw	106
 12054  14D9  319F  273E  3194   	fcall	_i2c_writeNBytes
 12055                           
 12056                           ;main.c: 288: i2c_writeNBytes(0x6a,&TAS_DCDIAG_CLEAR, 2 );
 12057  14DC  30B1               	movlw	(low (_TAS_DCDIAG_CLEAR| (0+256)))& (0+255)
 12058  14DD  00B0               	movwf	??_init_tas6422
 12059  14DE  0830               	movf	??_init_tas6422,w
 12060  14DF  00AC               	movwf	i2c_writeNBytes@data
 12061  14E0  3002               	movlw	2
 12062  14E1  00AD               	movwf	i2c_writeNBytes@len
 12063  14E2  3000               	movlw	0
 12064  14E3  00AE               	movwf	i2c_writeNBytes@len+1
 12065  14E4  306A               	movlw	106
 12066  14E5  319F  273E  3194   	fcall	_i2c_writeNBytes
 12067                           
 12068                           ;main.c: 289: i2c_writeNBytes(0x6a,&TAS_FS96K, 2 );
 12069  14E8  304A               	movlw	(low (_TAS_FS96K| (0+256)))& (0+255)
 12070  14E9  00B0               	movwf	??_init_tas6422
 12071  14EA  0830               	movf	??_init_tas6422,w
 12072  14EB  00AC               	movwf	i2c_writeNBytes@data
 12073  14EC  3002               	movlw	2
 12074  14ED  00AD               	movwf	i2c_writeNBytes@len
 12075  14EE  3000               	movlw	0
 12076  14EF  00AE               	movwf	i2c_writeNBytes@len+1
 12077  14F0  306A               	movlw	106
 12078  14F1  319F  273E  3194   	fcall	_i2c_writeNBytes
 12079                           
 12080                           ;main.c: 290: i2c_writeNBytes(0x6a,&TAS_AC, 2 );
 12081  14F4  30AF               	movlw	(low (_TAS_AC| (0+256)))& (0+255)
 12082  14F5  00B0               	movwf	??_init_tas6422
 12083  14F6  0830               	movf	??_init_tas6422,w
 12084  14F7  00AC               	movwf	i2c_writeNBytes@data
 12085  14F8  3002               	movlw	2
 12086  14F9  00AD               	movwf	i2c_writeNBytes@len
 12087  14FA  3000               	movlw	0
 12088  14FB  00AE               	movwf	i2c_writeNBytes@len+1
 12089  14FC  306A               	movlw	106
 12090  14FD  319F  273E  3194   	fcall	_i2c_writeNBytes
 12091                           
 12092                           ;main.c: 291: i2c_writeNBytes(0x6a,&TAS_CHK_RAILS, 2 );
 12093  1500  30A7               	movlw	(low (_TAS_CHK_RAILS| (0+256)))& (0+255)
 12094  1501  00B0               	movwf	??_init_tas6422
 12095  1502  0830               	movf	??_init_tas6422,w
 12096  1503  00AC               	movwf	i2c_writeNBytes@data
 12097  1504  3002               	movlw	2
 12098  1505  00AD               	movwf	i2c_writeNBytes@len
 12099  1506  3000               	movlw	0
 12100  1507  00AE               	movwf	i2c_writeNBytes@len+1
 12101  1508  306A               	movlw	106
 12102  1509  319F  273E  3194   	fcall	_i2c_writeNBytes
 12103                           
 12104                           ;main.c: 292: i2c_writeNBytes(0x6a,&TAS_CLEAR_FALT, 2 );
 12105  150C  3046               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
 12106  150D  00B0               	movwf	??_init_tas6422
 12107  150E  0830               	movf	??_init_tas6422,w
 12108  150F  00AC               	movwf	i2c_writeNBytes@data
 12109  1510  3002               	movlw	2
 12110  1511  00AD               	movwf	i2c_writeNBytes@len
 12111  1512  3000               	movlw	0
 12112  1513  00AE               	movwf	i2c_writeNBytes@len+1
 12113  1514  306A               	movlw	106
 12114  1515  319F  273E  3194   	fcall	_i2c_writeNBytes
 12115                           
 12116                           ;main.c: 293: i2c_writeNBytes(0x6a,&TAS_NORMAL, 2 );
 12117  1518  3044               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
 12118  1519  00B0               	movwf	??_init_tas6422
 12119  151A  0830               	movf	??_init_tas6422,w
 12120  151B  00AC               	movwf	i2c_writeNBytes@data
 12121  151C  3002               	movlw	2
 12122  151D  00AD               	movwf	i2c_writeNBytes@len
 12123  151E  3000               	movlw	0
 12124  151F  00AE               	movwf	i2c_writeNBytes@len+1
 12125  1520  306A               	movlw	106
 12126  1521  319F  273E         	fcall	_i2c_writeNBytes
 12127  1523  0022               	movlb	2	; select bank2
 12128  1524  178D               	bsf	13,7	;volatile
 12129  1525  0008               	return
 12130  1526                     __end_of_init_tas6422:
 12131                           
 12132                           	psect	text36
 12133  1BCF                     __ptext36:	
 12134 ;; *************** function _DELAY_milliseconds *****************
 12135 ;; Defined at:
 12136 ;;		line 27 in file "mcc_generated_files/delay.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;  milliseconds    2    3[BANK0 ] unsigned short 
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;		None
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		wreg, status,2, status,0
 12145 ;; Tracked objects:
 12146 ;;		On entry : 1F/0
 12147 ;;		On exit  : 1F/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12150 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12152 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12153 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12154 ;;Total ram usage:        3 bytes
 12155 ;; Hardware stack levels used:    1
 12156 ;; Hardware stack levels required when called:    7
 12157 ;; This function calls:
 12158 ;;		Nothing
 12159 ;; This function is called by:
 12160 ;;		_init_tas6422
 12161 ;;		_set_source
 12162 ;;		_main
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           
 12167                           ;psect for function _DELAY_milliseconds
 12168  1BCF                     _DELAY_milliseconds:
 12169  1BCF                     l5521:	
 12170                           ;mcc_generated_files/delay.c: 28:     while(milliseconds--){
 12171                           
 12172                           ;incstack = 0
 12173                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 12174                           
 12175                           
 12176                           ;mcc_generated_files/delay.c: 28:     while(milliseconds--){
 12177  1BCF  3001               	movlw	1
 12178  1BD0  0020               	movlb	0	; select bank0
 12179  1BD1  02A3               	subwf	DELAY_milliseconds@milliseconds,f
 12180  1BD2  3000               	movlw	0
 12181  1BD3  3BA4               	subwfb	DELAY_milliseconds@milliseconds+1,f
 12182  1BD4  0A23               	incf	DELAY_milliseconds@milliseconds,w
 12183  1BD5  1903               	btfsc	3,2
 12184  1BD6  0A24               	incf	DELAY_milliseconds@milliseconds+1,w
 12185  1BD7  1903               	btfsc	3,2
 12186  1BD8  0008               	return
 12187                           
 12188                           ;mcc_generated_files/delay.c: 29:         _delay((unsigned long)((1)*(16000000/4000.0)))
      +                          ;
 12189  1BD9  3006               	movlw	6
 12190  1BDA  0020               	movlb	0	; select bank0
 12191  1BDB  00A5               	movwf	??_DELAY_milliseconds
 12192  1BDC  3030               	movlw	48
 12193  1BDD                     u5787:
 12194  1BDD  0B89               	decfsz	9,f
 12195  1BDE  2BDD               	goto	u5787
 12196  1BDF  0BA5               	decfsz	??_DELAY_milliseconds,f
 12197  1BE0  2BDD               	goto	u5787
 12198  1BE1  0000               	nop
 12199  1BE2  2BCF               	goto	l5521
 12200  1BE3                     __end_of_DELAY_milliseconds:
 12201                           
 12202                           	psect	text37
 12203  1744                     __ptext37:	
 12204 ;; *************** function _init_pcm9211 *****************
 12205 ;; Defined at:
 12206 ;;		line 260 in file "main.c"
 12207 ;; Parameters:    Size  Location     Type
 12208 ;;		None
 12209 ;; Auto vars:     Size  Location     Type
 12210 ;;		None
 12211 ;; Return value:  Size  Location     Type
 12212 ;;                  1    wreg      void 
 12213 ;; Registers used:
 12214 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12215 ;; Tracked objects:
 12216 ;;		On entry : 1E/0
 12217 ;;		On exit  : 1F/0
 12218 ;;		Unchanged: 0/0
 12219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12223 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12224 ;;Total ram usage:        1 bytes
 12225 ;; Hardware stack levels used:    1
 12226 ;; Hardware stack levels required when called:   11
 12227 ;; This function calls:
 12228 ;;		_i2c_writeNBytes
 12229 ;; This function is called by:
 12230 ;;		_main
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           
 12235                           ;psect for function _init_pcm9211
 12236  1744                     _init_pcm9211:
 12237                           
 12238                           ;main.c: 262: i2c_writeNBytes(0x40,&INIT9211_20, 2 );
 12239                           
 12240                           ;incstack = 0
 12241                           ; Regs used in _init_pcm9211: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12242  1744  30BF               	movlw	(low (_INIT9211_20| (0+256)))& (0+255)
 12243  1745  0020               	movlb	0	; select bank0
 12244  1746  00B0               	movwf	??_init_pcm9211
 12245  1747  0830               	movf	??_init_pcm9211,w
 12246  1748  00AC               	movwf	i2c_writeNBytes@data
 12247  1749  3002               	movlw	2
 12248  174A  00AD               	movwf	i2c_writeNBytes@len
 12249  174B  3000               	movlw	0
 12250  174C  00AE               	movwf	i2c_writeNBytes@len+1
 12251  174D  3040               	movlw	64
 12252  174E  319F  273E  3197   	fcall	_i2c_writeNBytes
 12253                           
 12254                           ;main.c: 263: i2c_writeNBytes(0x40,&INIT9211_26, 2 );
 12255  1751  30B9               	movlw	(low (_INIT9211_26| (0+256)))& (0+255)
 12256  1752  00B0               	movwf	??_init_pcm9211
 12257  1753  0830               	movf	??_init_pcm9211,w
 12258  1754  00AC               	movwf	i2c_writeNBytes@data
 12259  1755  3002               	movlw	2
 12260  1756  00AD               	movwf	i2c_writeNBytes@len
 12261  1757  3000               	movlw	0
 12262  1758  00AE               	movwf	i2c_writeNBytes@len+1
 12263  1759  3040               	movlw	64
 12264  175A  319F  273E  3197   	fcall	_i2c_writeNBytes
 12265                           
 12266                           ;main.c: 264: i2c_writeNBytes(0x40,&INIT9211_27, 2 );
 12267  175D  30B7               	movlw	(low (_INIT9211_27| (0+256)))& (0+255)
 12268  175E  00B0               	movwf	??_init_pcm9211
 12269  175F  0830               	movf	??_init_pcm9211,w
 12270  1760  00AC               	movwf	i2c_writeNBytes@data
 12271  1761  3002               	movlw	2
 12272  1762  00AD               	movwf	i2c_writeNBytes@len
 12273  1763  3000               	movlw	0
 12274  1764  00AE               	movwf	i2c_writeNBytes@len+1
 12275  1765  3040               	movlw	64
 12276  1766  319F  273E  3197   	fcall	_i2c_writeNBytes
 12277                           
 12278                           ;main.c: 265: i2c_writeNBytes(0x40,&INIT9211_2E, 2 );
 12279  1769  30BD               	movlw	(low (_INIT9211_2E| (0+256)))& (0+255)
 12280  176A  00B0               	movwf	??_init_pcm9211
 12281  176B  0830               	movf	??_init_pcm9211,w
 12282  176C  00AC               	movwf	i2c_writeNBytes@data
 12283  176D  3002               	movlw	2
 12284  176E  00AD               	movwf	i2c_writeNBytes@len
 12285  176F  3000               	movlw	0
 12286  1770  00AE               	movwf	i2c_writeNBytes@len+1
 12287  1771  3040               	movlw	64
 12288  1772  319F  273E  3197   	fcall	_i2c_writeNBytes
 12289                           
 12290                           ;main.c: 266: i2c_writeNBytes(0x40,&INIT9211_2B, 2 );
 12291  1775  30BB               	movlw	(low (_INIT9211_2B| (0+256)))& (0+255)
 12292  1776  00B0               	movwf	??_init_pcm9211
 12293  1777  0830               	movf	??_init_pcm9211,w
 12294  1778  00AC               	movwf	i2c_writeNBytes@data
 12295  1779  3002               	movlw	2
 12296  177A  00AD               	movwf	i2c_writeNBytes@len
 12297  177B  3000               	movlw	0
 12298  177C  00AE               	movwf	i2c_writeNBytes@len+1
 12299  177D  3040               	movlw	64
 12300  177E  319F  273E  3197   	fcall	_i2c_writeNBytes
 12301                           
 12302                           ;main.c: 267: i2c_writeNBytes(0x40,&INIT9211_31, 2 );
 12303  1781  30B5               	movlw	(low (_INIT9211_31| (0+256)))& (0+255)
 12304  1782  00B0               	movwf	??_init_pcm9211
 12305  1783  0830               	movf	??_init_pcm9211,w
 12306  1784  00AC               	movwf	i2c_writeNBytes@data
 12307  1785  3002               	movlw	2
 12308  1786  00AD               	movwf	i2c_writeNBytes@len
 12309  1787  3000               	movlw	0
 12310  1788  00AE               	movwf	i2c_writeNBytes@len+1
 12311  1789  3040               	movlw	64
 12312  178A  319F  273E  3197   	fcall	_i2c_writeNBytes
 12313                           
 12314                           ;main.c: 268:  if( current_direction == 1)
 12315  178D  0021               	movlb	1	; select bank1
 12316  178E  0366               	decf	_current_direction^(0+128),w
 12317  178F  1D03               	btfss	3,2
 12318  1790  2F93               	goto	l7441
 12319                           
 12320                           ;main.c: 269:            i2c_writeNBytes(0x40,&I2S_OUT, 2 );
 12321  1791  3066               	movlw	(low (_I2S_OUT| (0+256)))& (0+255)
 12322  1792  2F94               	goto	L8
 12323  1793                     l7441:
 12324  1793  3064               	movlw	(low (_I2S_IN| (0+256)))& (0+255)
 12325  1794                     L8:
 12326  1794  0020               	movlb	0	; select bank0
 12327  1795  00B0               	movwf	??_init_pcm9211
 12328  1796  0830               	movf	??_init_pcm9211,w
 12329  1797  00AC               	movwf	i2c_writeNBytes@data
 12330  1798  3002               	movlw	2
 12331  1799  00AD               	movwf	i2c_writeNBytes@len
 12332  179A  3000               	movlw	0
 12333  179B  00AE               	movwf	i2c_writeNBytes@len+1
 12334  179C  3040               	movlw	64
 12335  179D  319F  273E  3197   	fcall	_i2c_writeNBytes
 12336                           
 12337                           ;main.c: 271:  i2c_writeNBytes(0x40,&ADC_96K, 2 );
 12338  17A0  30C1               	movlw	(low (_ADC_96K| (0+256)))& (0+255)
 12339  17A1  00B0               	movwf	??_init_pcm9211
 12340  17A2  0830               	movf	??_init_pcm9211,w
 12341  17A3  00AC               	movwf	i2c_writeNBytes@data
 12342  17A4  3002               	movlw	2
 12343  17A5  00AD               	movwf	i2c_writeNBytes@len
 12344  17A6  3000               	movlw	0
 12345  17A7  00AE               	movwf	i2c_writeNBytes@len+1
 12346  17A8  3040               	movlw	64
 12347  17A9  319F  273E  3197   	fcall	_i2c_writeNBytes
 12348                           
 12349                           ;main.c: 272:  i2c_writeNBytes(0x40,&ADC_DC, 2 );
 12350  17AC  30C3               	movlw	(low (_ADC_DC| (0+256)))& (0+255)
 12351  17AD  00B0               	movwf	??_init_pcm9211
 12352  17AE  0830               	movf	??_init_pcm9211,w
 12353  17AF  00AC               	movwf	i2c_writeNBytes@data
 12354  17B0  3002               	movlw	2
 12355  17B1  00AD               	movwf	i2c_writeNBytes@len
 12356  17B2  3000               	movlw	0
 12357  17B3  00AE               	movwf	i2c_writeNBytes@len+1
 12358  17B4  3040               	movlw	64
 12359  17B5  319F  273E  3197   	fcall	_i2c_writeNBytes
 12360                           
 12361                           ;main.c: 273: i2c_writeNBytes(0x40,&ADC_ATTL_0dB, 2 );
 12362  17B8  30CB               	movlw	(low (_ADC_ATTL_0dB| (0+256)))& (0+255)
 12363  17B9  00B0               	movwf	??_init_pcm9211
 12364  17BA  0830               	movf	??_init_pcm9211,w
 12365  17BB  00AC               	movwf	i2c_writeNBytes@data
 12366  17BC  3002               	movlw	2
 12367  17BD  00AD               	movwf	i2c_writeNBytes@len
 12368  17BE  3000               	movlw	0
 12369  17BF  00AE               	movwf	i2c_writeNBytes@len+1
 12370  17C0  3040               	movlw	64
 12371  17C1  319F  273E  3197   	fcall	_i2c_writeNBytes
 12372                           
 12373                           ;main.c: 274: i2c_writeNBytes(0x40,&ADC_ATTR_0dB, 2 );
 12374  17C4  30C9               	movlw	(low (_ADC_ATTR_0dB| (0+256)))& (0+255)
 12375  17C5  00B0               	movwf	??_init_pcm9211
 12376  17C6  0830               	movf	??_init_pcm9211,w
 12377  17C7  00AC               	movwf	i2c_writeNBytes@data
 12378  17C8  3002               	movlw	2
 12379  17C9  00AD               	movwf	i2c_writeNBytes@len
 12380  17CA  3000               	movlw	0
 12381  17CB  00AE               	movwf	i2c_writeNBytes@len+1
 12382  17CC  3040               	movlw	64
 12383  17CD  319F  273E  3197   	fcall	_i2c_writeNBytes
 12384                           
 12385                           ;main.c: 275:  i2c_writeNBytes(0x40,&SRC_ADC, 2 );
 12386  17D0  3060               	movlw	(low (_SRC_ADC| (0+256)))& (0+255)
 12387  17D1  00B0               	movwf	??_init_pcm9211
 12388  17D2  0830               	movf	??_init_pcm9211,w
 12389  17D3  00AC               	movwf	i2c_writeNBytes@data
 12390  17D4  3002               	movlw	2
 12391  17D5  00AD               	movwf	i2c_writeNBytes@len
 12392  17D6  3000               	movlw	0
 12393  17D7  00AE               	movwf	i2c_writeNBytes@len+1
 12394  17D8  3040               	movlw	64
 12395  17D9  319F  273E  3197   	fcall	_i2c_writeNBytes
 12396                           
 12397                           ;main.c: 276:  i2c_writeNBytes(0x40,&DIR_OPT, 2 );
 12398  17DC  3052               	movlw	(low (_DIR_OPT| (0+256)))& (0+255)
 12399  17DD  00B0               	movwf	??_init_pcm9211
 12400  17DE  0830               	movf	??_init_pcm9211,w
 12401  17DF  00AC               	movwf	i2c_writeNBytes@data
 12402  17E0  3002               	movlw	2
 12403  17E1  00AD               	movwf	i2c_writeNBytes@len
 12404  17E2  3000               	movlw	0
 12405  17E3  00AE               	movwf	i2c_writeNBytes@len+1
 12406  17E4  3040               	movlw	64
 12407  17E5  319F  273E  3197   	fcall	_i2c_writeNBytes
 12408                           
 12409                           ;main.c: 277:  i2c_writeNBytes(0x40,&DIT_ADC, 2 );
 12410  17E8  304C               	movlw	(low (_DIT_ADC| (0+256)))& (0+255)
 12411  17E9  00B0               	movwf	??_init_pcm9211
 12412  17EA  0830               	movf	??_init_pcm9211,w
 12413  17EB  00AC               	movwf	i2c_writeNBytes@data
 12414  17EC  3002               	movlw	2
 12415  17ED  00AD               	movwf	i2c_writeNBytes@len
 12416  17EE  3000               	movlw	0
 12417  17EF  00AE               	movwf	i2c_writeNBytes@len+1
 12418  17F0  3040               	movlw	64
 12419  17F1  319F  273E  3197   	fcall	_i2c_writeNBytes
 12420                           
 12421                           ;main.c: 278:  i2c_writeNBytes(0x40,&CALC_MOUT, 2);
 12422  17F4  30CD               	movlw	(low (_CALC_MOUT| (0+256)))& (0+255)
 12423  17F5  00B0               	movwf	??_init_pcm9211
 12424  17F6  0830               	movf	??_init_pcm9211,w
 12425  17F7  00AC               	movwf	i2c_writeNBytes@data
 12426  17F8  3002               	movlw	2
 12427  17F9  00AD               	movwf	i2c_writeNBytes@len
 12428  17FA  3000               	movlw	0
 12429  17FB  00AE               	movwf	i2c_writeNBytes@len+1
 12430  17FC  3040               	movlw	64
 12431  17FD  319F  273E         	fcall	_i2c_writeNBytes
 12432  17FF  0008               	return
 12433  1800                     __end_of_init_pcm9211:
 12434                           
 12435                           	psect	text38
 12436  1F3E                     __ptext38:	
 12437 ;; *************** function _i2c_writeNBytes *****************
 12438 ;; Defined at:
 12439 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;  address         1    wreg     unsigned char 
 12442 ;;  data            1   12[BANK0 ] PTR void 
 12443 ;;		 -> tasbuff(2), TAS_NORMAL(2), TAS_CLEAR_FALT(2), TAS_CHK_RAILS(2), 
 12444 ;;		 -> TAS_PLAY(2), TAS_MUTE(2), TAS_FS96K(2), TAS_FS48K(2), 
 12445 ;;		 -> TAS_FS44K(2), TAS_AC(2), TAS_DCDIAG_CLEAR(2), TAS_RUN(2), 
 12446 ;;		 -> TAS_RESET(2), INIT9211_31(2), INIT9211_27(2), INIT9211_26(2), 
 12447 ;;		 -> INIT9211_2B(2), INIT9211_2E(2), INIT9211_20(2), ADC_96K(2), 
 12448 ;;		 -> ADC_DC(2), DIT_I2S(2), DIT_LVDS(2), DIT_ADC(2), 
 12449 ;;		 -> DIT_DIR(2), ADC_ATTR_0dB(2), ADC_ATTL_0dB(2), CALC_MOUT(2), 
 12450 ;;		 -> DIR_COAX(2), DIR_OPT(2), AUXSRC_LVDS(2), AUXSRC_ADC(2), 
 12451 ;;		 -> AUXSRC_DIR(2), AUXSRC_AUTO(2), SRC_I2S(2), SRC_LVDS(2), 
 12452 ;;		 -> SRC_ADC(2), SRC_DIR(2), I2S_IN(2), I2S_OUT(2), 
 12453 ;;  len             2   13[BANK0 ] unsigned int 
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;  address         1   15[BANK0 ] unsigned char 
 12456 ;; Return value:  Size  Location     Type
 12457 ;;                  1    wreg      void 
 12458 ;; Registers used:
 12459 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12460 ;; Tracked objects:
 12461 ;;		On entry : 1F/3A00000
 12462 ;;		On exit  : 1F/0
 12463 ;;		Unchanged: 0/0
 12464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12465 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12469 ;;Total ram usage:        4 bytes
 12470 ;; Hardware stack levels used:    1
 12471 ;; Hardware stack levels required when called:   10
 12472 ;; This function calls:
 12473 ;;		_I2C1_Close
 12474 ;;		_I2C1_MasterWrite
 12475 ;;		_I2C1_Open
 12476 ;;		_I2C1_SetAddressNackCallback
 12477 ;;		_I2C1_SetBuffer
 12478 ;; This function is called by:
 12479 ;;		_init_pcm9211
 12480 ;;		_init_tas6422
 12481 ;;		_set_gains
 12482 ;;		_set_source
 12483 ;;		_main
 12484 ;; This function uses a non-reentrant model
 12485 ;;
 12486                           
 12487                           
 12488                           ;psect for function _i2c_writeNBytes
 12489  1F3E                     _i2c_writeNBytes:
 12490                           
 12491                           ;incstack = 0
 12492                           ; Regs used in _i2c_writeNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12493                           ;i2c_writeNBytes@address stored from wreg
 12494  1F3E  00AF               	movwf	i2c_writeNBytes@address
 12495  1F3F                     l7289:	
 12496                           ;mcc_generated_files/drivers/i2c_simple_master.c: 48: void i2c_writeNBytes(i2c1_address_
      +                          t address, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 49: 
      +                          {;mcc_generated_files/drivers/i2c_simple_master.c: 50:     while(!I2C1_Open(address));
 12497                           
 12498  1F3F  082F               	movf	i2c_writeNBytes@address,w
 12499  1F40  3191  21A6  319F   	fcall	_I2C1_Open
 12500  1F43  3A00               	xorlw	0
 12501  1F44  1903               	skipnz
 12502  1F45  2F3F               	goto	l7289
 12503                           
 12504                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51:     I2C1_SetBuffer(data,len);
 12505  1F46  082C               	movf	i2c_writeNBytes@data,w
 12506  1F47  00A3               	movwf	I2C1_SetBuffer@buffer
 12507  1F48  3001               	movlw	1
 12508  1F49  00A4               	movwf	I2C1_SetBuffer@buffer+1
 12509  1F4A  082E               	movf	i2c_writeNBytes@len+1,w
 12510  1F4B  00A6               	movwf	I2C1_SetBuffer@bufferSize+1
 12511  1F4C  082D               	movf	i2c_writeNBytes@len,w
 12512  1F4D  00A5               	movwf	I2C1_SetBuffer@bufferSize
 12513  1F4E  319C  249F  319F   	fcall	_I2C1_SetBuffer
 12514                           
 12515                           ;mcc_generated_files/drivers/i2c_simple_master.c: 52:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 12516  1F51  3000               	movlw	0
 12517  1F52  0020               	movlb	0	; select bank0
 12518  1F53  00A8               	movwf	I2C1_SetAddressNackCallback@cb
 12519  1F54  00A9               	movwf	I2C1_SetAddressNackCallback@cb+1
 12520  1F55  01AA               	clrf	I2C1_SetAddressNackCallback@ptr
 12521  1F56  319B  235F  319F   	fcall	_I2C1_SetAddressNackCallback
 12522                           
 12523                           ;mcc_generated_files/drivers/i2c_simple_master.c: 53:     I2C1_MasterWrite();
 12524  1F59  3188  2000  319F   	fcall	_I2C1_MasterWrite
 12525  1F5C                     l7297:	
 12526                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 12527                           
 12528  1F5C  319D  25F4  319F   	fcall	_I2C1_Close
 12529  1F5F  3A01               	xorlw	1
 12530  1F60  1D03               	btfss	3,2
 12531  1F61  0008               	return
 12532  1F62  2F5C               	goto	l7297
 12533  1F63                     __end_of_i2c_writeNBytes:
 12534                           
 12535                           	psect	text39
 12536  1B9E                     __ptext39:	
 12537 ;; *************** function _i2c_lcd_ulcursor_off *****************
 12538 ;; Defined at:
 12539 ;;		line 185 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;		None
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;		None
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  1    wreg      void 
 12546 ;; Registers used:
 12547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/2
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12556 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12557 ;;Total ram usage:        1 bytes
 12558 ;; Hardware stack levels used:    1
 12559 ;; Hardware stack levels required when called:   12
 12560 ;; This function calls:
 12561 ;;		_i2c_lcd_send_command
 12562 ;; This function is called by:
 12563 ;;		_main
 12564 ;; This function uses a non-reentrant model
 12565 ;;
 12566                           
 12567                           
 12568                           ;psect for function _i2c_lcd_ulcursor_off
 12569  1B9E                     _i2c_lcd_ulcursor_off:
 12570                           
 12571                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 186:    i2c_lcd_send_command(0x0c);
 12572                           
 12573                           ;incstack = 0
 12574                           ; Regs used in _i2c_lcd_ulcursor_off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12575  1B9E  300C               	movlw	12
 12576  1B9F  3194  2411  319B   	fcall	_i2c_lcd_send_command
 12577                           
 12578                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 187:     _delay((unsigned long)((2)*(4000000/4
      +                          000.0)));
 12579  1BA2  3003               	movlw	3
 12580  1BA3  0020               	movlb	0	; select bank0
 12581  1BA4  00B7               	movwf	??_i2c_lcd_ulcursor_off
 12582  1BA5  3097               	movlw	151
 12583  1BA6                     u5797:
 12584  1BA6  0B89               	decfsz	9,f
 12585  1BA7  2BA6               	goto	u5797
 12586  1BA8  0BB7               	decfsz	??_i2c_lcd_ulcursor_off,f
 12587  1BA9  2BA6               	goto	u5797
 12588  1BAA  3200               	nop2
 12589  1BAB  0008               	return
 12590  1BAC                     __end_of_i2c_lcd_ulcursor_off:
 12591                           
 12592                           	psect	text40
 12593  1467                     __ptext40:	
 12594 ;; *************** function _i2c_lcd_init *****************
 12595 ;; Defined at:
 12596 ;;		line 117 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 12597 ;; Parameters:    Size  Location     Type
 12598 ;;		None
 12599 ;; Auto vars:     Size  Location     Type
 12600 ;;		None
 12601 ;; Return value:  Size  Location     Type
 12602 ;;                  1    wreg      void 
 12603 ;; Registers used:
 12604 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12605 ;; Tracked objects:
 12606 ;;		On entry : 1F/2
 12607 ;;		On exit  : 0/0
 12608 ;;		Unchanged: 0/0
 12609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12612 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12613 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;Total ram usage:        1 bytes
 12615 ;; Hardware stack levels used:    1
 12616 ;; Hardware stack levels required when called:   12
 12617 ;; This function calls:
 12618 ;;		_i2c_lcd_send_command
 12619 ;;		_i2c_lcd_send_upper4bit
 12620 ;; This function is called by:
 12621 ;;		_main
 12622 ;; This function uses a non-reentrant model
 12623 ;;
 12624                           
 12625                           
 12626                           ;psect for function _i2c_lcd_init
 12627  1467                     _i2c_lcd_init:
 12628                           
 12629                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 119:     _delay((unsigned long)((100)*(4000000
      +                          /4000.0)));
 12630                           
 12631                           ;incstack = 0
 12632                           ; Regs used in _i2c_lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12633  1467  3082               	movlw	130
 12634  1468  0020               	movlb	0	; select bank0
 12635  1469  00B7               	movwf	??_i2c_lcd_init
 12636  146A  30DD               	movlw	221
 12637  146B                     u5807:
 12638  146B  0B89               	decfsz	9,f
 12639  146C  2C6B               	goto	u5807
 12640  146D  0BB7               	decfsz	??_i2c_lcd_init,f
 12641  146E  2C6B               	goto	u5807
 12642  146F  3200               	nop2
 12643                           
 12644                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 121:     i2c_lcd_send_upper4bit(0x30);
 12645  1470  3030               	movlw	48
 12646  1471  319F  27D8  3194   	fcall	_i2c_lcd_send_upper4bit
 12647                           
 12648                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 123:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 12649  1474  3007               	movlw	7
 12650  1475  0020               	movlb	0	; select bank0
 12651  1476  00B7               	movwf	??_i2c_lcd_init
 12652  1477  307D               	movlw	125
 12653  1478                     u5817:
 12654  1478  0B89               	decfsz	9,f
 12655  1479  2C78               	goto	u5817
 12656  147A  0BB7               	decfsz	??_i2c_lcd_init,f
 12657  147B  2C78               	goto	u5817
 12658                           
 12659                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 125:     i2c_lcd_send_upper4bit(0x30);
 12660  147C  3030               	movlw	48
 12661  147D  319F  27D8  3194   	fcall	_i2c_lcd_send_upper4bit
 12662                           
 12663                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 127:     _delay((unsigned long)((200)*(4000000
      +                          /4000000.0)));
 12664  1480  3042               	movlw	66
 12665  1481                     u5827:
 12666  1481  0B89               	decfsz	9,f
 12667  1482  2C81               	goto	u5827
 12668  1483  3200               	nop2
 12669                           
 12670                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 129:     i2c_lcd_send_upper4bit(0x30);
 12671  1484  3030               	movlw	48
 12672  1485  319F  27D8  3194   	fcall	_i2c_lcd_send_upper4bit
 12673                           
 12674                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 131:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 12675  1488  3021               	movlw	33
 12676  1489                     u5837:
 12677  1489  0B89               	decfsz	9,f
 12678  148A  2C89               	goto	u5837
 12679  148B  0000               	nop
 12680                           
 12681                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 133:     i2c_lcd_send_upper4bit(0x20);
 12682  148C  3020               	movlw	32
 12683  148D  319F  27D8  3194   	fcall	_i2c_lcd_send_upper4bit
 12684                           
 12685                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 134:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 12686  1490  3021               	movlw	33
 12687  1491                     u5847:
 12688  1491  0B89               	decfsz	9,f
 12689  1492  2C91               	goto	u5847
 12690  1493  0000               	nop
 12691                           
 12692                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 136:     i2c_lcd_send_command(0x28);
 12693  1494  3028               	movlw	40
 12694  1495  3194  2411  3194   	fcall	_i2c_lcd_send_command
 12695                           
 12696                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 137:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 12697  1498  3021               	movlw	33
 12698  1499                     u5857:
 12699  1499  0B89               	decfsz	9,f
 12700  149A  2C99               	goto	u5857
 12701  149B  0000               	nop
 12702                           
 12703                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 139:     i2c_lcd_send_command(0x0C);
 12704  149C  300C               	movlw	12
 12705  149D  3194  2411  3194   	fcall	_i2c_lcd_send_command
 12706                           
 12707                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 140:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 12708  14A0  3021               	movlw	33
 12709  14A1                     u5867:
 12710  14A1  0B89               	decfsz	9,f
 12711  14A2  2CA1               	goto	u5867
 12712  14A3  0000               	nop
 12713                           
 12714                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 142:     i2c_lcd_send_command(0x01);
 12715  14A4  3001               	movlw	1
 12716  14A5  3194  2411  3194   	fcall	_i2c_lcd_send_command
 12717                           
 12718                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 143:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 12719  14A8  3007               	movlw	7
 12720  14A9  0020               	movlb	0	; select bank0
 12721  14AA  00B7               	movwf	??_i2c_lcd_init
 12722  14AB  307D               	movlw	125
 12723  14AC                     u5877:
 12724  14AC  0B89               	decfsz	9,f
 12725  14AD  2CAC               	goto	u5877
 12726  14AE  0BB7               	decfsz	??_i2c_lcd_init,f
 12727  14AF  2CAC               	goto	u5877
 12728                           
 12729                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 145:     i2c_lcd_send_command(0x06);
 12730  14B0  3006               	movlw	6
 12731  14B1  3194  2411  3194   	fcall	_i2c_lcd_send_command
 12732                           
 12733                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 146:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 12734  14B4  3007               	movlw	7
 12735  14B5  0020               	movlb	0	; select bank0
 12736  14B6  00B7               	movwf	??_i2c_lcd_init
 12737  14B7  307D               	movlw	125
 12738  14B8                     u5887:
 12739  14B8  0B89               	decfsz	9,f
 12740  14B9  2CB8               	goto	u5887
 12741  14BA  0BB7               	decfsz	??_i2c_lcd_init,f
 12742  14BB  2CB8               	goto	u5887
 12743  14BC  0008               	return
 12744  14BD                     __end_of_i2c_lcd_init:
 12745                           
 12746                           	psect	text41
 12747  1FD8                     __ptext41:	
 12748 ;; *************** function _i2c_lcd_send_upper4bit *****************
 12749 ;; Defined at:
 12750 ;;		line 75 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 12751 ;; Parameters:    Size  Location     Type
 12752 ;;  data            1    wreg     unsigned char 
 12753 ;; Auto vars:     Size  Location     Type
 12754 ;;  data            1   17[BANK0 ] unsigned char 
 12755 ;;  upperdata       1   19[BANK0 ] unsigned char 
 12756 ;;  upperdata_en    1   18[BANK0 ] unsigned char 
 12757 ;; Return value:  Size  Location     Type
 12758 ;;                  1    wreg      void 
 12759 ;; Registers used:
 12760 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12761 ;; Tracked objects:
 12762 ;;		On entry : 0/2
 12763 ;;		On exit  : 0/0
 12764 ;;		Unchanged: 0/0
 12765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12767 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12768 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12769 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12770 ;;Total ram usage:        4 bytes
 12771 ;; Hardware stack levels used:    1
 12772 ;; Hardware stack levels required when called:   11
 12773 ;; This function calls:
 12774 ;;		_I2C1_WriteNBytes
 12775 ;; This function is called by:
 12776 ;;		_i2c_lcd_init
 12777 ;; This function uses a non-reentrant model
 12778 ;;
 12779                           
 12780                           
 12781                           ;psect for function _i2c_lcd_send_upper4bit
 12782  1FD8                     _i2c_lcd_send_upper4bit:
 12783                           
 12784                           ;incstack = 0
 12785                           ; Regs used in _i2c_lcd_send_upper4bit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 12786                           ;i2c_lcd_send_upper4bit@data stored from wreg
 12787  1FD8  0020               	movlb	0	; select bank0
 12788  1FD9  00B1               	movwf	i2c_lcd_send_upper4bit@data
 12789                           
 12790                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 75: void i2c_lcd_send_upper4bit(unsigned char 
      +                          data);lcd_driver_files/i2c-lcdlib-ceg003400.c: 76:     {;lcd_driver_files/i2c-lcdlib-ceg
      +                          003400.c: 77:     unsigned char upperdata, upperdata_en;;lcd_driver_files/i2c-lcdlib-ceg
      +                          003400.c: 80:     upperdata = (data & 0xf0) | 0b00001000;
 12791  1FDA  0831               	movf	i2c_lcd_send_upper4bit@data,w
 12792  1FDB  39F0               	andlw	240
 12793  1FDC  3808               	iorlw	8
 12794  1FDD  00B0               	movwf	??_i2c_lcd_send_upper4bit
 12795  1FDE  0830               	movf	??_i2c_lcd_send_upper4bit,w
 12796  1FDF  00B3               	movwf	i2c_lcd_send_upper4bit@upperdata
 12797                           
 12798                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 81:     upperdata_en = upperdata | 0b00000100;
 12799  1FE0  0833               	movf	i2c_lcd_send_upper4bit@upperdata,w
 12800  1FE1  3804               	iorlw	4
 12801  1FE2  00B0               	movwf	??_i2c_lcd_send_upper4bit
 12802  1FE3  0830               	movf	??_i2c_lcd_send_upper4bit,w
 12803  1FE4  00B2               	movwf	i2c_lcd_send_upper4bit@upperdata_en
 12804                           
 12805                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 82:       I2C1_WriteNBytes(0x25, &upperdata_en
      +                           ,1);
 12806  1FE5  3032               	movlw	(low (i2c_lcd_send_upper4bit@upperdata_en| 0))& (0+255)
 12807  1FE6  00B0               	movwf	??_i2c_lcd_send_upper4bit
 12808  1FE7  0830               	movf	??_i2c_lcd_send_upper4bit,w
 12809  1FE8  00AC               	movwf	I2C1_WriteNBytes@data
 12810  1FE9  3001               	movlw	1
 12811  1FEA  00AD               	movwf	I2C1_WriteNBytes@len
 12812  1FEB  3000               	movlw	0
 12813  1FEC  00AE               	movwf	I2C1_WriteNBytes@len+1
 12814  1FED  3025               	movlw	37
 12815  1FEE  319F  2719  319F   	fcall	_I2C1_WriteNBytes
 12816                           
 12817                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 83:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 12818  1FF1  0000               	nop
 12819                           
 12820                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 85:      I2C1_WriteNBytes(0x25, &upperdata, 1)
      +                          ;
 12821  1FF2  3033               	movlw	(low (i2c_lcd_send_upper4bit@upperdata| 0))& (0+255)
 12822  1FF3  0020               	movlb	0	; select bank0
 12823  1FF4  00B0               	movwf	??_i2c_lcd_send_upper4bit
 12824  1FF5  0830               	movf	??_i2c_lcd_send_upper4bit,w
 12825  1FF6  00AC               	movwf	I2C1_WriteNBytes@data
 12826  1FF7  3001               	movlw	1
 12827  1FF8  00AD               	movwf	I2C1_WriteNBytes@len
 12828  1FF9  3000               	movlw	0
 12829  1FFA  00AE               	movwf	I2C1_WriteNBytes@len+1
 12830  1FFB  3025               	movlw	37
 12831  1FFC  319F  2719         	fcall	_I2C1_WriteNBytes
 12832                           
 12833                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 86:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 12834  1FFE  0000               	nop
 12835  1FFF  0008               	return
 12836  2000                     __end_of_i2c_lcd_send_upper4bit:
 12837                           
 12838                           	psect	text42
 12839  1B91                     __ptext42:	
 12840 ;; *************** function _i2c_lcd_home *****************
 12841 ;; Defined at:
 12842 ;;		line 174 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 12843 ;; Parameters:    Size  Location     Type
 12844 ;;		None
 12845 ;; Auto vars:     Size  Location     Type
 12846 ;;		None
 12847 ;; Return value:  Size  Location     Type
 12848 ;;                  1    wreg      void 
 12849 ;; Registers used:
 12850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12851 ;; Tracked objects:
 12852 ;;		On entry : 0/2
 12853 ;;		On exit  : 0/0
 12854 ;;		Unchanged: 0/0
 12855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12858 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12859 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12860 ;;Total ram usage:        1 bytes
 12861 ;; Hardware stack levels used:    1
 12862 ;; Hardware stack levels required when called:   12
 12863 ;; This function calls:
 12864 ;;		_i2c_lcd_send_command
 12865 ;; This function is called by:
 12866 ;;		_main
 12867 ;; This function uses a non-reentrant model
 12868 ;;
 12869                           
 12870                           
 12871                           ;psect for function _i2c_lcd_home
 12872  1B91                     _i2c_lcd_home:
 12873                           
 12874                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 175:     i2c_lcd_send_command(0x02);
 12875                           
 12876                           ;incstack = 0
 12877                           ; Regs used in _i2c_lcd_home: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12878  1B91  3002               	movlw	2
 12879  1B92  3194  2411  319B   	fcall	_i2c_lcd_send_command
 12880                           
 12881                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 176:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 12882  1B95  3007               	movlw	7
 12883  1B96  0020               	movlb	0	; select bank0
 12884  1B97  00B7               	movwf	??_i2c_lcd_home
 12885  1B98  307D               	movlw	125
 12886  1B99                     u5897:
 12887  1B99  0B89               	decfsz	9,f
 12888  1B9A  2B99               	goto	u5897
 12889  1B9B  0BB7               	decfsz	??_i2c_lcd_home,f
 12890  1B9C  2B99               	goto	u5897
 12891  1B9D  0008               	return
 12892  1B9E                     __end_of_i2c_lcd_home:
 12893                           
 12894                           	psect	text43
 12895  1B84                     __ptext43:	
 12896 ;; *************** function _i2c_lcd_clear *****************
 12897 ;; Defined at:
 12898 ;;		line 168 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 12899 ;; Parameters:    Size  Location     Type
 12900 ;;		None
 12901 ;; Auto vars:     Size  Location     Type
 12902 ;;		None
 12903 ;; Return value:  Size  Location     Type
 12904 ;;                  1    wreg      void 
 12905 ;; Registers used:
 12906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12907 ;; Tracked objects:
 12908 ;;		On entry : 1F/0
 12909 ;;		On exit  : 0/0
 12910 ;;		Unchanged: 0/0
 12911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12914 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12915 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12916 ;;Total ram usage:        1 bytes
 12917 ;; Hardware stack levels used:    1
 12918 ;; Hardware stack levels required when called:   12
 12919 ;; This function calls:
 12920 ;;		_i2c_lcd_send_command
 12921 ;; This function is called by:
 12922 ;;		_main
 12923 ;; This function uses a non-reentrant model
 12924 ;;
 12925                           
 12926                           
 12927                           ;psect for function _i2c_lcd_clear
 12928  1B84                     _i2c_lcd_clear:
 12929                           
 12930                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 169:     i2c_lcd_send_command(0x01);
 12931                           
 12932                           ;incstack = 0
 12933                           ; Regs used in _i2c_lcd_clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12934  1B84  3001               	movlw	1
 12935  1B85  3194  2411  319B   	fcall	_i2c_lcd_send_command
 12936                           
 12937                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 170:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 12938  1B88  3007               	movlw	7
 12939  1B89  0020               	movlb	0	; select bank0
 12940  1B8A  00B7               	movwf	??_i2c_lcd_clear
 12941  1B8B  307D               	movlw	125
 12942  1B8C                     u5907:
 12943  1B8C  0B89               	decfsz	9,f
 12944  1B8D  2B8C               	goto	u5907
 12945  1B8E  0BB7               	decfsz	??_i2c_lcd_clear,f
 12946  1B8F  2B8C               	goto	u5907
 12947  1B90  0008               	return
 12948  1B91                     __end_of_i2c_lcd_clear:
 12949                           
 12950                           	psect	text44
 12951  1411                     __ptext44:	
 12952 ;; *************** function _i2c_lcd_send_command *****************
 12953 ;; Defined at:
 12954 ;;		line 49 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 12955 ;; Parameters:    Size  Location     Type
 12956 ;;  data            1    wreg     unsigned char 
 12957 ;; Auto vars:     Size  Location     Type
 12958 ;;  data            1   18[BANK0 ] unsigned char 
 12959 ;;  lowerdata       1   22[BANK0 ] unsigned char 
 12960 ;;  upperdata       1   21[BANK0 ] unsigned char 
 12961 ;;  lowerdata_en    1   20[BANK0 ] unsigned char 
 12962 ;;  upperdata_en    1   19[BANK0 ] unsigned char 
 12963 ;; Return value:  Size  Location     Type
 12964 ;;                  1    wreg      void 
 12965 ;; Registers used:
 12966 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12967 ;; Tracked objects:
 12968 ;;		On entry : 0/3C00000
 12969 ;;		On exit  : 0/0
 12970 ;;		Unchanged: 0/0
 12971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12973 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12974 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12975 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12976 ;;Total ram usage:        7 bytes
 12977 ;; Hardware stack levels used:    1
 12978 ;; Hardware stack levels required when called:   11
 12979 ;; This function calls:
 12980 ;;		_I2C1_WriteNBytes
 12981 ;; This function is called by:
 12982 ;;		_i2c_lcd_init
 12983 ;;		_i2c_lcd_clear
 12984 ;;		_i2c_lcd_home
 12985 ;;		_i2c_lcd_ulcursor_off
 12986 ;;		_i2c_lcd_set_cursor_pos
 12987 ;; This function uses a non-reentrant model
 12988 ;;
 12989                           
 12990                           
 12991                           ;psect for function _i2c_lcd_send_command
 12992  1411                     _i2c_lcd_send_command:
 12993                           
 12994                           ;incstack = 0
 12995                           ; Regs used in _i2c_lcd_send_command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12996                           ;i2c_lcd_send_command@data stored from wreg
 12997  1411  0020               	movlb	0	; select bank0
 12998  1412  00B2               	movwf	i2c_lcd_send_command@data
 12999                           
 13000                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 49: void i2c_lcd_send_command(unsigned char da
      +                          ta);lcd_driver_files/i2c-lcdlib-ceg003400.c: 50:     {;lcd_driver_files/i2c-lcdlib-ceg00
      +                          3400.c: 51:     unsigned char upperdata, upperdata_en, lowerdata, lowerdata_en;;lcd_driv
      +                          er_files/i2c-lcdlib-ceg003400.c: 54:     upperdata = (data & 0xf0) | 0b00001000;
 13001  1413  0832               	movf	i2c_lcd_send_command@data,w
 13002  1414  39F0               	andlw	240
 13003  1415  3808               	iorlw	8
 13004  1416  00B0               	movwf	??_i2c_lcd_send_command
 13005  1417  0830               	movf	??_i2c_lcd_send_command,w
 13006  1418  00B5               	movwf	i2c_lcd_send_command@upperdata
 13007                           
 13008                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 55:     upperdata_en = upperdata | 0b00000100;
 13009  1419  0835               	movf	i2c_lcd_send_command@upperdata,w
 13010  141A  3804               	iorlw	4
 13011  141B  00B0               	movwf	??_i2c_lcd_send_command
 13012  141C  0830               	movf	??_i2c_lcd_send_command,w
 13013  141D  00B3               	movwf	i2c_lcd_send_command@upperdata_en
 13014                           
 13015                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 56:     lowerdata = ((data << 4) & 0xf0) | 0b0
      +                          0001000 ;
 13016  141E  0832               	movf	i2c_lcd_send_command@data,w
 13017  141F  00B0               	movwf	??_i2c_lcd_send_command
 13018  1420  3003               	movlw	3
 13019  1421                     u5355:
 13020  1421  35B0               	lslf	??_i2c_lcd_send_command,f
 13021  1422  3EFF               	addlw	-1
 13022  1423  1D03               	skipz
 13023  1424  2C21               	goto	u5355
 13024  1425  3530               	lslf	??_i2c_lcd_send_command,w
 13025  1426  39F0               	andlw	240
 13026  1427  3808               	iorlw	8
 13027  1428  00B1               	movwf	??_i2c_lcd_send_command+1
 13028  1429  0831               	movf	??_i2c_lcd_send_command+1,w
 13029  142A  00B6               	movwf	i2c_lcd_send_command@lowerdata
 13030                           
 13031                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 57:     lowerdata_en = lowerdata | 0b00000100;
 13032  142B  0836               	movf	i2c_lcd_send_command@lowerdata,w
 13033  142C  3804               	iorlw	4
 13034  142D  00B0               	movwf	??_i2c_lcd_send_command
 13035  142E  0830               	movf	??_i2c_lcd_send_command,w
 13036  142F  00B4               	movwf	i2c_lcd_send_command@lowerdata_en
 13037                           
 13038                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 58:       I2C1_WriteNBytes(0x25, &upperdata_en
      +                          ,1);
 13039  1430  3033               	movlw	(low (i2c_lcd_send_command@upperdata_en| 0))& (0+255)
 13040  1431  00B0               	movwf	??_i2c_lcd_send_command
 13041  1432  0830               	movf	??_i2c_lcd_send_command,w
 13042  1433  00AC               	movwf	I2C1_WriteNBytes@data
 13043  1434  3001               	movlw	1
 13044  1435  00AD               	movwf	I2C1_WriteNBytes@len
 13045  1436  3000               	movlw	0
 13046  1437  00AE               	movwf	I2C1_WriteNBytes@len+1
 13047  1438  3025               	movlw	37
 13048  1439  319F  2719  3194   	fcall	_I2C1_WriteNBytes
 13049                           
 13050                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 59:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 13051  143C  0000               	nop
 13052                           
 13053                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 61:      I2C1_WriteNBytes(0x25, &upperdata, 1)
      +                          ;
 13054  143D  3035               	movlw	(low (i2c_lcd_send_command@upperdata| 0))& (0+255)
 13055  143E  0020               	movlb	0	; select bank0
 13056  143F  00B0               	movwf	??_i2c_lcd_send_command
 13057  1440  0830               	movf	??_i2c_lcd_send_command,w
 13058  1441  00AC               	movwf	I2C1_WriteNBytes@data
 13059  1442  3001               	movlw	1
 13060  1443  00AD               	movwf	I2C1_WriteNBytes@len
 13061  1444  3000               	movlw	0
 13062  1445  00AE               	movwf	I2C1_WriteNBytes@len+1
 13063  1446  3025               	movlw	37
 13064  1447  319F  2719  3194   	fcall	_I2C1_WriteNBytes
 13065                           
 13066                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 62:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 13067  144A  0000               	nop
 13068                           
 13069                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 66:     I2C1_WriteNBytes(0x25, &lowerdata_en, 
      +                          1);
 13070  144B  3034               	movlw	(low (i2c_lcd_send_command@lowerdata_en| 0))& (0+255)
 13071  144C  0020               	movlb	0	; select bank0
 13072  144D  00B0               	movwf	??_i2c_lcd_send_command
 13073  144E  0830               	movf	??_i2c_lcd_send_command,w
 13074  144F  00AC               	movwf	I2C1_WriteNBytes@data
 13075  1450  3001               	movlw	1
 13076  1451  00AD               	movwf	I2C1_WriteNBytes@len
 13077  1452  3000               	movlw	0
 13078  1453  00AE               	movwf	I2C1_WriteNBytes@len+1
 13079  1454  3025               	movlw	37
 13080  1455  319F  2719  3194   	fcall	_I2C1_WriteNBytes
 13081                           
 13082                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 67:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 13083  1458  0000               	nop
 13084                           
 13085                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 69:     I2C1_WriteNBytes(0x25, &lowerdata, 1);
 13086  1459  3036               	movlw	(low (i2c_lcd_send_command@lowerdata| 0))& (0+255)
 13087  145A  0020               	movlb	0	; select bank0
 13088  145B  00B0               	movwf	??_i2c_lcd_send_command
 13089  145C  0830               	movf	??_i2c_lcd_send_command,w
 13090  145D  00AC               	movwf	I2C1_WriteNBytes@data
 13091  145E  3001               	movlw	1
 13092  145F  00AD               	movwf	I2C1_WriteNBytes@len
 13093  1460  3000               	movlw	0
 13094  1461  00AE               	movwf	I2C1_WriteNBytes@len+1
 13095  1462  3025               	movlw	37
 13096  1463  319F  2719         	fcall	_I2C1_WriteNBytes
 13097                           
 13098                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 70:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 13099  1465  0000               	nop
 13100  1466  0008               	return
 13101  1467                     __end_of_i2c_lcd_send_command:
 13102                           
 13103                           	psect	text45
 13104  1F19                     __ptext45:	
 13105 ;; *************** function _I2C1_WriteNBytes *****************
 13106 ;; Defined at:
 13107 ;;		line 111 in file "mcc_generated_files/examples/i2c1_master_example.c"
 13108 ;; Parameters:    Size  Location     Type
 13109 ;;  address         1    wreg     unsigned char 
 13110 ;;  data            1   12[BANK0 ] PTR unsigned char 
 13111 ;;		 -> i2c_lcd_send_data@lowerdata_en(1), i2c_lcd_send_data@lowerdata(1), i2c_lcd_send_data@upperdata_en(1), i2c_lcd_se
      +nd_data@upperdata(1), 
 13112 ;;		 -> i2c_lcd_send_upper4bit@upperdata_en(1), i2c_lcd_send_upper4bit@upperdata(1), i2c_lcd_send_command@lowerdata_en(1
      +), i2c_lcd_send_command@lowerdata(1), 
 13113 ;;		 -> i2c_lcd_send_command@upperdata_en(1), i2c_lcd_send_command@upperdata(1), 
 13114 ;;  len             2   13[BANK0 ] unsigned int 
 13115 ;; Auto vars:     Size  Location     Type
 13116 ;;  address         1   15[BANK0 ] unsigned char 
 13117 ;; Return value:  Size  Location     Type
 13118 ;;                  1    wreg      void 
 13119 ;; Registers used:
 13120 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13121 ;; Tracked objects:
 13122 ;;		On entry : 1F/0
 13123 ;;		On exit  : 1F/0
 13124 ;;		Unchanged: 0/0
 13125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13126 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13130 ;;Total ram usage:        4 bytes
 13131 ;; Hardware stack levels used:    1
 13132 ;; Hardware stack levels required when called:   10
 13133 ;; This function calls:
 13134 ;;		_I2C1_Close
 13135 ;;		_I2C1_MasterWrite
 13136 ;;		_I2C1_Open
 13137 ;;		_I2C1_SetAddressNackCallback
 13138 ;;		_I2C1_SetBuffer
 13139 ;; This function is called by:
 13140 ;;		_i2c_lcd_send_command
 13141 ;;		_i2c_lcd_send_upper4bit
 13142 ;;		_i2c_lcd_send_data
 13143 ;; This function uses a non-reentrant model
 13144 ;;
 13145                           
 13146                           
 13147                           ;psect for function _I2C1_WriteNBytes
 13148  1F19                     _I2C1_WriteNBytes:
 13149                           
 13150                           ;incstack = 0
 13151                           ; Regs used in _I2C1_WriteNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13152                           ;I2C1_WriteNBytes@address stored from wreg
 13153  1F19  00AF               	movwf	I2C1_WriteNBytes@address
 13154  1F1A                     l6879:	
 13155                           ;mcc_generated_files/examples/i2c1_master_example.c: 111: void I2C1_WriteNBytes(i2c1_add
      +                          ress_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c1_master_exam
      +                          ple.c: 112: {;mcc_generated_files/examples/i2c1_master_example.c: 113:     while(!I2C1_O
      +                          pen(address));
 13156                           
 13157  1F1A  082F               	movf	I2C1_WriteNBytes@address,w
 13158  1F1B  3191  21A6  319F   	fcall	_I2C1_Open
 13159  1F1E  3A00               	xorlw	0
 13160  1F1F  1903               	skipnz
 13161  1F20  2F1A               	goto	l6879
 13162                           
 13163                           ;mcc_generated_files/examples/i2c1_master_example.c: 114:     I2C1_SetBuffer(data,len);
 13164  1F21  082C               	movf	I2C1_WriteNBytes@data,w
 13165  1F22  00A3               	movwf	I2C1_SetBuffer@buffer
 13166  1F23  3000               	movlw	0
 13167  1F24  00A4               	movwf	I2C1_SetBuffer@buffer+1
 13168  1F25  082E               	movf	I2C1_WriteNBytes@len+1,w
 13169  1F26  00A6               	movwf	I2C1_SetBuffer@bufferSize+1
 13170  1F27  082D               	movf	I2C1_WriteNBytes@len,w
 13171  1F28  00A5               	movwf	I2C1_SetBuffer@bufferSize
 13172  1F29  319C  249F  319F   	fcall	_I2C1_SetBuffer
 13173                           
 13174                           ;mcc_generated_files/examples/i2c1_master_example.c: 115:     I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 13175  1F2C  3000               	movlw	0
 13176  1F2D  0020               	movlb	0	; select bank0
 13177  1F2E  00A8               	movwf	I2C1_SetAddressNackCallback@cb
 13178  1F2F  00A9               	movwf	I2C1_SetAddressNackCallback@cb+1
 13179  1F30  01AA               	clrf	I2C1_SetAddressNackCallback@ptr
 13180  1F31  319B  235F  319F   	fcall	_I2C1_SetAddressNackCallback
 13181                           
 13182                           ;mcc_generated_files/examples/i2c1_master_example.c: 116:     I2C1_MasterWrite();
 13183  1F34  3188  2000  319F   	fcall	_I2C1_MasterWrite
 13184  1F37                     l6887:	
 13185                           ;mcc_generated_files/examples/i2c1_master_example.c: 117:     while(I2C1_BUSY == I2C1_Cl
      +                          ose());
 13186                           
 13187  1F37  319D  25F4  319F   	fcall	_I2C1_Close
 13188  1F3A  3A01               	xorlw	1
 13189  1F3B  1D03               	btfss	3,2
 13190  1F3C  0008               	return
 13191  1F3D  2F37               	goto	l6887
 13192  1F3E                     __end_of_I2C1_WriteNBytes:
 13193                           
 13194                           	psect	text46
 13195  160E                     __ptext46:	
 13196 ;; *************** function _chk6422warning *****************
 13197 ;; Defined at:
 13198 ;;		line 297 in file "main.c"
 13199 ;; Parameters:    Size  Location     Type
 13200 ;;		None
 13201 ;; Auto vars:     Size  Location     Type
 13202 ;;		None
 13203 ;; Return value:  Size  Location     Type
 13204 ;;                  1    wreg      unsigned char 
 13205 ;; Registers used:
 13206 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13207 ;; Tracked objects:
 13208 ;;		On entry : 1D/3A00000
 13209 ;;		On exit  : 1D/0
 13210 ;;		Unchanged: 0/0
 13211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13214 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13215 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13216 ;;Total ram usage:       18 bytes
 13217 ;; Hardware stack levels used:    1
 13218 ;; Hardware stack levels required when called:   11
 13219 ;; This function calls:
 13220 ;;		_i2c_read1ByteRegister
 13221 ;; This function is called by:
 13222 ;;		_main
 13223 ;; This function uses a non-reentrant model
 13224 ;;
 13225                           
 13226                           
 13227                           ;psect for function _chk6422warning
 13228  160E                     _chk6422warning:
 13229                           
 13230                           ;main.c: 299: static uint8_t lasttime, ocdc, otshut, otwarn,clip,ilim,prail;;main.c: 300
      +                          :     ocdc = i2c_read1ByteRegister(0x6a, 0x10);
 13231                           
 13232                           ;incstack = 0
 13233                           ; Regs used in _chk6422warning: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13234  160E  3010               	movlw	16
 13235  160F  0020               	movlb	0	; select bank0
 13236  1610  00B3               	movwf	??_chk6422warning
 13237  1611  0833               	movf	??_chk6422warning,w
 13238  1612  00AC               	movwf	i2c_read1ByteRegister@reg
 13239  1613  306A               	movlw	106
 13240  1614  3191  215F  3196   	fcall	_i2c_read1ByteRegister
 13241  1617  00B4               	movwf	??_chk6422warning+1
 13242  1618  0834               	movf	??_chk6422warning+1,w
 13243  1619  0022               	movlb	2	; select bank2
 13244  161A  00B6               	movwf	chk6422warning@ocdc^(0+256)
 13245                           
 13246                           ;main.c: 301:     otwarn = i2c_read1ByteRegister(0x6a, 0x13);
 13247  161B  3013               	movlw	19
 13248  161C  0020               	movlb	0	; select bank0
 13249  161D  00B3               	movwf	??_chk6422warning
 13250  161E  0833               	movf	??_chk6422warning,w
 13251  161F  00AC               	movwf	i2c_read1ByteRegister@reg
 13252  1620  306A               	movlw	106
 13253  1621  3191  215F  3196   	fcall	_i2c_read1ByteRegister
 13254  1624  00B4               	movwf	??_chk6422warning+1
 13255  1625  0834               	movf	??_chk6422warning+1,w
 13256  1626  0022               	movlb	2	; select bank2
 13257  1627  00B4               	movwf	chk6422warning@otwarn^(0+256)
 13258                           
 13259                           ;main.c: 302:     clip = i2c_read1ByteRegister(0x6a, 0x24);
 13260  1628  3024               	movlw	36
 13261  1629  0020               	movlb	0	; select bank0
 13262  162A  00B3               	movwf	??_chk6422warning
 13263  162B  0833               	movf	??_chk6422warning,w
 13264  162C  00AC               	movwf	i2c_read1ByteRegister@reg
 13265  162D  306A               	movlw	106
 13266  162E  3191  215F  3196   	fcall	_i2c_read1ByteRegister
 13267  1631  00B4               	movwf	??_chk6422warning+1
 13268  1632  0834               	movf	??_chk6422warning+1,w
 13269  1633  0022               	movlb	2	; select bank2
 13270  1634  00B3               	movwf	chk6422warning@clip^(0+256)
 13271                           
 13272                           ;main.c: 303:     ilim = i2c_read1ByteRegister(0x6a, 0x25);
 13273  1635  3025               	movlw	37
 13274  1636  0020               	movlb	0	; select bank0
 13275  1637  00B3               	movwf	??_chk6422warning
 13276  1638  0833               	movf	??_chk6422warning,w
 13277  1639  00AC               	movwf	i2c_read1ByteRegister@reg
 13278  163A  306A               	movlw	106
 13279  163B  3191  215F  3196   	fcall	_i2c_read1ByteRegister
 13280  163E  00B4               	movwf	??_chk6422warning+1
 13281  163F  0834               	movf	??_chk6422warning+1,w
 13282  1640  0022               	movlb	2	; select bank2
 13283  1641  00B2               	movwf	chk6422warning@ilim^(0+256)
 13284                           
 13285                           ;main.c: 304:     otshut = i2c_read1ByteRegister(0x6a, 0x12);
 13286  1642  3012               	movlw	18
 13287  1643  0020               	movlb	0	; select bank0
 13288  1644  00B3               	movwf	??_chk6422warning
 13289  1645  0833               	movf	??_chk6422warning,w
 13290  1646  00AC               	movwf	i2c_read1ByteRegister@reg
 13291  1647  306A               	movlw	106
 13292  1648  3191  215F  3196   	fcall	_i2c_read1ByteRegister
 13293  164B  00B4               	movwf	??_chk6422warning+1
 13294  164C  0834               	movf	??_chk6422warning+1,w
 13295  164D  0022               	movlb	2	; select bank2
 13296  164E  00B5               	movwf	chk6422warning@otshut^(0+256)
 13297                           
 13298                           ;main.c: 305:     prail = i2c_read1ByteRegister(0x6a, 0x11);
 13299  164F  3011               	movlw	17
 13300  1650  0020               	movlb	0	; select bank0
 13301  1651  00B3               	movwf	??_chk6422warning
 13302  1652  0833               	movf	??_chk6422warning,w
 13303  1653  00AC               	movwf	i2c_read1ByteRegister@reg
 13304  1654  306A               	movlw	106
 13305  1655  3191  215F  3196   	fcall	_i2c_read1ByteRegister
 13306  1658  00B4               	movwf	??_chk6422warning+1
 13307  1659  0834               	movf	??_chk6422warning+1,w
 13308  165A  0022               	movlb	2	; select bank2
 13309  165B  00B1               	movwf	chk6422warning@prail^(0+256)
 13310                           
 13311                           ;main.c: 306:     if(lasttime == (ocdc + otshut + otwarn + clip +ilim + prail ))
 13312  165C  0831               	movf	chk6422warning@prail^(0+256),w
 13313  165D  0020               	movlb	0	; select bank0
 13314  165E  00B3               	movwf	??_chk6422warning
 13315  165F  01B4               	clrf	??_chk6422warning+1
 13316  1660  0022               	movlb	2	; select bank2
 13317  1661  0832               	movf	chk6422warning@ilim^(0+256),w
 13318  1662  0020               	movlb	0	; select bank0
 13319  1663  00B5               	movwf	??_chk6422warning+2
 13320  1664  01B6               	clrf	??_chk6422warning+3
 13321  1665  0022               	movlb	2	; select bank2
 13322  1666  0833               	movf	chk6422warning@clip^(0+256),w
 13323  1667  0020               	movlb	0	; select bank0
 13324  1668  00B7               	movwf	??_chk6422warning+4
 13325  1669  01B8               	clrf	??_chk6422warning+5
 13326  166A  0022               	movlb	2	; select bank2
 13327  166B  0834               	movf	chk6422warning@otwarn^(0+256),w
 13328  166C  0020               	movlb	0	; select bank0
 13329  166D  00B9               	movwf	??_chk6422warning+6
 13330  166E  01BA               	clrf	??_chk6422warning+7
 13331  166F  0022               	movlb	2	; select bank2
 13332  1670  0836               	movf	chk6422warning@ocdc^(0+256),w
 13333  1671  0735               	addwf	chk6422warning@otshut^(0+256),w
 13334  1672  0020               	movlb	0	; select bank0
 13335  1673  00BB               	movwf	??_chk6422warning+8
 13336  1674  01BC               	clrf	??_chk6422warning+9
 13337  1675  0DBC               	rlf	??_chk6422warning+9,f
 13338  1676  0839               	movf	??_chk6422warning+6,w
 13339  1677  073B               	addwf	??_chk6422warning+8,w
 13340  1678  00BD               	movwf	??_chk6422warning+10
 13341  1679  083A               	movf	??_chk6422warning+7,w
 13342  167A  3D3C               	addwfc	??_chk6422warning+9,w
 13343  167B  00BE               	movwf	??_chk6422warning+11
 13344  167C  0837               	movf	??_chk6422warning+4,w
 13345  167D  073D               	addwf	??_chk6422warning+10,w
 13346  167E  00BF               	movwf	??_chk6422warning+12
 13347  167F  0838               	movf	??_chk6422warning+5,w
 13348  1680  3D3E               	addwfc	??_chk6422warning+11,w
 13349  1681  00C0               	movwf	??_chk6422warning+13
 13350  1682  0835               	movf	??_chk6422warning+2,w
 13351  1683  073F               	addwf	??_chk6422warning+12,w
 13352  1684  00C1               	movwf	??_chk6422warning+14
 13353  1685  0836               	movf	??_chk6422warning+3,w
 13354  1686  3D40               	addwfc	??_chk6422warning+13,w
 13355  1687  00C2               	movwf	??_chk6422warning+15
 13356  1688  0833               	movf	??_chk6422warning,w
 13357  1689  0741               	addwf	??_chk6422warning+14,w
 13358  168A  00C3               	movwf	??_chk6422warning+16
 13359  168B  0834               	movf	??_chk6422warning+1,w
 13360  168C  3D42               	addwfc	??_chk6422warning+15,w
 13361  168D  00C4               	movwf	??_chk6422warning+17
 13362  168E  0022               	movlb	2	; select bank2
 13363  168F  0837               	movf	chk6422warning@lasttime^(0+256),w
 13364  1690  0020               	movlb	0	; select bank0
 13365  1691  0643               	xorwf	??_chk6422warning+16,w
 13366  1692  0444               	iorwf	??_chk6422warning+17,w
 13367  1693  1D03               	skipz
 13368  1694  2E97               	goto	l7473
 13369                           
 13370                           ;main.c: 307:              return(0);
 13371  1695  3000               	movlw	0
 13372  1696  0008               	return
 13373  1697                     l7473:
 13374                           
 13375                           ;main.c: 309:      {;main.c: 310:       lasttime = ocdc + otshut + otwarn + clip +ilim +
      +                           prail ;
 13376  1697  0022               	movlb	2	; select bank2
 13377  1698  0836               	movf	chk6422warning@ocdc^(0+256),w
 13378  1699  0735               	addwf	chk6422warning@otshut^(0+256),w
 13379  169A  0734               	addwf	chk6422warning@otwarn^(0+256),w
 13380  169B  0733               	addwf	chk6422warning@clip^(0+256),w
 13381  169C  0732               	addwf	chk6422warning@ilim^(0+256),w
 13382  169D  0731               	addwf	chk6422warning@prail^(0+256),w
 13383  169E  0020               	movlb	0	; select bank0
 13384  169F  00B3               	movwf	??_chk6422warning
 13385  16A0  0833               	movf	??_chk6422warning,w
 13386  16A1  0022               	movlb	2	; select bank2
 13387  16A2  00B7               	movwf	chk6422warning@lasttime^(0+256)
 13388                           
 13389                           ;main.c: 311:       return(1);
 13390  16A3  3001               	movlw	1
 13391  16A4  0008               	return
 13392  16A5                     __end_of_chk6422warning:
 13393                           
 13394                           	psect	text47
 13395  115F                     __ptext47:	
 13396 ;; *************** function _i2c_read1ByteRegister *****************
 13397 ;; Defined at:
 13398 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;  address         1    wreg     unsigned char 
 13401 ;;  reg             1   12[BANK0 ] unsigned char 
 13402 ;; Auto vars:     Size  Location     Type
 13403 ;;  address         1   14[BANK0 ] unsigned char 
 13404 ;;  x               2   16[BANK0 ] int 
 13405 ;;  d2              1   18[BANK0 ] unsigned char 
 13406 ;;  e               1   15[BANK0 ] enum E353
 13407 ;; Return value:  Size  Location     Type
 13408 ;;                  1    wreg      unsigned char 
 13409 ;; Registers used:
 13410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13411 ;; Tracked objects:
 13412 ;;		On entry : 1F/3A00000
 13413 ;;		On exit  : 1F/0
 13414 ;;		Unchanged: 0/0
 13415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13416 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13417 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13418 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13419 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13420 ;;Total ram usage:        7 bytes
 13421 ;; Hardware stack levels used:    1
 13422 ;; Hardware stack levels required when called:   10
 13423 ;; This function calls:
 13424 ;;		_I2C1_Close
 13425 ;;		_I2C1_MasterWrite
 13426 ;;		_I2C1_Open
 13427 ;;		_I2C1_SetAddressNackCallback
 13428 ;;		_I2C1_SetBuffer
 13429 ;;		_I2C1_SetDataCompleteCallback
 13430 ;; This function is called by:
 13431 ;;		_chk6422warning
 13432 ;;		_main
 13433 ;;		_lcd_disp_param
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           
 13438                           ;psect for function _i2c_read1ByteRegister
 13439  115F                     _i2c_read1ByteRegister:
 13440                           
 13441                           ;incstack = 0
 13442                           ; Regs used in _i2c_read1ByteRegister: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 13443                           ;i2c_read1ByteRegister@address stored from wreg
 13444  115F  00AE               	movwf	i2c_read1ByteRegister@address
 13445                           
 13446                           ;mcc_generated_files/drivers/i2c_simple_master.c: 65: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 66: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 67:     uint8_t d2=42;
 13447  1160  302A               	movlw	42
 13448  1161  00AD               	movwf	??_i2c_read1ByteRegister
 13449  1162  082D               	movf	??_i2c_read1ByteRegister,w
 13450  1163  00B2               	movwf	i2c_read1ByteRegister@d2
 13451                           
 13452                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     i2c1_error_t e;;mcc_generated_
      +                          files/drivers/i2c_simple_master.c: 69:     int x;;mcc_generated_files/drivers/i2c_simple
      +                          _master.c: 71:     for(x = 2; x != 0; x--)
 13453  1164  3002               	movlw	2
 13454  1165  00B0               	movwf	i2c_read1ByteRegister@x
 13455  1166  3000               	movlw	0
 13456  1167  00B1               	movwf	i2c_read1ByteRegister@x+1
 13457  1168                     l7305:
 13458  1168  082E               	movf	i2c_read1ByteRegister@address,w
 13459  1169  3191  21A6  3191   	fcall	_I2C1_Open
 13460  116C  3A00               	xorlw	0
 13461  116D  1903               	skipnz
 13462  116E  2968               	goto	l7305
 13463                           
 13464                           ;mcc_generated_files/drivers/i2c_simple_master.c: 74:         I2C1_SetDataCompleteCallba
      +                          ck(rd1RegCompleteHandler,&d2);
 13465  116F  3021               	movlw	low _rd1RegCompleteHandler
 13466  1170  00A8               	movwf	I2C1_SetDataCompleteCallback@cb
 13467  1171  301C               	movlw	high _rd1RegCompleteHandler
 13468  1172  00A9               	movwf	I2C1_SetDataCompleteCallback@cb+1
 13469  1173  3032               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 13470  1174  00AD               	movwf	??_i2c_read1ByteRegister
 13471  1175  082D               	movf	??_i2c_read1ByteRegister,w
 13472  1176  00AA               	movwf	I2C1_SetDataCompleteCallback@ptr
 13473  1177  319B  236B  3191   	fcall	_I2C1_SetDataCompleteCallback
 13474                           
 13475                           ;mcc_generated_files/drivers/i2c_simple_master.c: 75:         I2C1_SetBuffer(&reg,1);
 13476  117A  302C               	movlw	low i2c_read1ByteRegister@reg
 13477  117B  00A3               	movwf	I2C1_SetBuffer@buffer
 13478  117C  3000               	movlw	high i2c_read1ByteRegister@reg
 13479  117D  00A4               	movwf	I2C1_SetBuffer@buffer+1
 13480  117E  3001               	movlw	1
 13481  117F  00A5               	movwf	I2C1_SetBuffer@bufferSize
 13482  1180  3000               	movlw	0
 13483  1181  00A6               	movwf	I2C1_SetBuffer@bufferSize+1
 13484  1182  319C  249F  3191   	fcall	_I2C1_SetBuffer
 13485                           
 13486                           ;mcc_generated_files/drivers/i2c_simple_master.c: 76:         I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 13487  1185  3000               	movlw	0
 13488  1186  0020               	movlb	0	; select bank0
 13489  1187  00A8               	movwf	I2C1_SetAddressNackCallback@cb
 13490  1188  00A9               	movwf	I2C1_SetAddressNackCallback@cb+1
 13491  1189  01AA               	clrf	I2C1_SetAddressNackCallback@ptr
 13492  118A  319B  235F  3191   	fcall	_I2C1_SetAddressNackCallback
 13493                           
 13494                           ;mcc_generated_files/drivers/i2c_simple_master.c: 77:         I2C1_MasterWrite();
 13495  118D  3188  2000  3191   	fcall	_I2C1_MasterWrite
 13496  1190                     l7313:	
 13497                           ;mcc_generated_files/drivers/i2c_simple_master.c: 78:         while(I2C1_BUSY == (e = I2
      +                          C1_Close()));
 13498                           
 13499  1190  319D  25F4  3191   	fcall	_I2C1_Close
 13500  1193  00AD               	movwf	??_i2c_read1ByteRegister
 13501  1194  082D               	movf	??_i2c_read1ByteRegister,w
 13502  1195  00AF               	movwf	i2c_read1ByteRegister@e
 13503  1196  032F               	decf	i2c_read1ByteRegister@e,w
 13504  1197  1903               	btfsc	3,2
 13505  1198  2990               	goto	l7313
 13506                           
 13507                           ;mcc_generated_files/drivers/i2c_simple_master.c: 79:         if(e==I2C1_NOERR) break;
 13508  1199  082F               	movf	i2c_read1ByteRegister@e,w
 13509  119A  1903               	btfsc	3,2
 13510  119B  29A4               	goto	l7323
 13511                           
 13512                           ;mcc_generated_files/drivers/i2c_simple_master.c: 80:     }
 13513  119C  30FF               	movlw	255
 13514  119D  07B0               	addwf	i2c_read1ByteRegister@x,f
 13515  119E  30FF               	movlw	255
 13516  119F  3DB1               	addwfc	i2c_read1ByteRegister@x+1,f
 13517  11A0  0830               	movf	i2c_read1ByteRegister@x,w
 13518  11A1  0431               	iorwf	i2c_read1ByteRegister@x+1,w
 13519  11A2  1D03               	btfss	3,2
 13520  11A3  2968               	goto	l7305
 13521  11A4                     l7323:
 13522                           
 13523                           ;mcc_generated_files/drivers/i2c_simple_master.c: 83:     return d2;
 13524  11A4  0832               	movf	i2c_read1ByteRegister@d2,w
 13525  11A5  0008               	return
 13526  11A6                     __end_of_i2c_read1ByteRegister:
 13527                           
 13528                           	psect	text48
 13529  1B6B                     __ptext48:	
 13530 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 13531 ;; Defined at:
 13532 ;;		line 274 in file "mcc_generated_files/i2c1_master.c"
 13533 ;; Parameters:    Size  Location     Type
 13534 ;;  cb              2    8[BANK0 ] PTR FTN(PTR void ,)enum 
 13535 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 13536 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 13537 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13538 ;;  ptr             1   10[BANK0 ] PTR void 
 13539 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13540 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 13541 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 13542 ;; Auto vars:     Size  Location     Type
 13543 ;;		None
 13544 ;; Return value:  Size  Location     Type
 13545 ;;                  1    wreg      void 
 13546 ;; Registers used:
 13547 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13548 ;; Tracked objects:
 13549 ;;		On entry : 1F/3A00000
 13550 ;;		On exit  : 1F/0
 13551 ;;		Unchanged: 0/0
 13552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13553 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13555 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13556 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13557 ;;Total ram usage:        4 bytes
 13558 ;; Hardware stack levels used:    1
 13559 ;; Hardware stack levels required when called:    8
 13560 ;; This function calls:
 13561 ;;		_I2C1_SetCallback
 13562 ;; This function is called by:
 13563 ;;		_i2c_read1ByteRegister
 13564 ;; This function uses a non-reentrant model
 13565 ;;
 13566                           
 13567                           
 13568                           ;psect for function _I2C1_SetDataCompleteCallback
 13569  1B6B                     _I2C1_SetDataCompleteCallback:
 13570                           
 13571                           ;mcc_generated_files/i2c1_master.c: 274: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 275: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 276:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 13572                           
 13573                           ;incstack = 0
 13574                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 13575  1B6B  0829               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 13576  1B6C  00A4               	movwf	I2C1_SetCallback@cb+1
 13577  1B6D  0828               	movf	I2C1_SetDataCompleteCallback@cb,w
 13578  1B6E  00A3               	movwf	I2C1_SetCallback@cb
 13579  1B6F  082A               	movf	I2C1_SetDataCompleteCallback@ptr,w
 13580  1B70  00AB               	movwf	??_I2C1_SetDataCompleteCallback
 13581  1B71  082B               	movf	??_I2C1_SetDataCompleteCallback,w
 13582  1B72  00A5               	movwf	I2C1_SetCallback@ptr
 13583  1B73  3000               	movlw	0
 13584  1B74  319F  27B0         	fcall	_I2C1_SetCallback
 13585  1B76  0008               	return
 13586  1B77                     __end_of_I2C1_SetDataCompleteCallback:
 13587                           
 13588                           	psect	text49
 13589  1C9F                     __ptext49:	
 13590 ;; *************** function _I2C1_SetBuffer *****************
 13591 ;; Defined at:
 13592 ;;		line 264 in file "mcc_generated_files/i2c1_master.c"
 13593 ;; Parameters:    Size  Location     Type
 13594 ;;  buffer          2    3[BANK0 ] PTR void 
 13595 ;;		 -> tasbuff(2), TAS_NORMAL(2), TAS_CLEAR_FALT(2), TAS_CHK_RAILS(2), 
 13596 ;;		 -> TAS_PLAY(2), TAS_MUTE(2), TAS_FS96K(2), TAS_FS48K(2), 
 13597 ;;		 -> TAS_FS44K(2), TAS_AC(2), TAS_DCDIAG_CLEAR(2), TAS_RUN(2), 
 13598 ;;		 -> TAS_RESET(2), INIT9211_31(2), INIT9211_27(2), INIT9211_26(2), 
 13599 ;;		 -> INIT9211_2B(2), INIT9211_2E(2), INIT9211_20(2), ADC_96K(2), 
 13600 ;;		 -> ADC_DC(2), DIT_I2S(2), DIT_LVDS(2), DIT_ADC(2), 
 13601 ;;		 -> DIT_DIR(2), ADC_ATTR_0dB(2), ADC_ATTL_0dB(2), CALC_MOUT(2), 
 13602 ;;		 -> DIR_COAX(2), DIR_OPT(2), AUXSRC_LVDS(2), AUXSRC_ADC(2), 
 13603 ;;		 -> AUXSRC_DIR(2), AUXSRC_AUTO(2), SRC_I2S(2), SRC_LVDS(2), 
 13604 ;;		 -> SRC_ADC(2), SRC_DIR(2), I2S_IN(2), I2S_OUT(2), 
 13605 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 13606 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 13607 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBloc
      +k@d(3), 
 13608 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 13609 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 13610 ;;		 -> NULL(0), i2c_lcd_send_data@lowerdata_en(1), i2c_lcd_send_data@lowerdata(1), i2c_lcd_send_data@upperdata_en(1), 
 13611 ;;		 -> i2c_lcd_send_data@upperdata(1), i2c_lcd_send_upper4bit@upperdata_en(1), i2c_lcd_send_upper4bit@upperdata(1), i2c
      +_lcd_send_command@lowerdata_en(1), 
 13612 ;;		 -> i2c_lcd_send_command@lowerdata(1), i2c_lcd_send_command@upperdata_en(1), i2c_lcd_send_command@upperdata(1), 
 13613 ;;  bufferSize      2    5[BANK0 ] unsigned int 
 13614 ;; Auto vars:     Size  Location     Type
 13615 ;;		None
 13616 ;; Return value:  Size  Location     Type
 13617 ;;                  1    wreg      void 
 13618 ;; Registers used:
 13619 ;;		wreg
 13620 ;; Tracked objects:
 13621 ;;		On entry : 1F/3A00000
 13622 ;;		On exit  : 1F/3
 13623 ;;		Unchanged: 0/0
 13624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13625 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13628 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13629 ;;Total ram usage:        4 bytes
 13630 ;; Hardware stack levels used:    1
 13631 ;; Hardware stack levels required when called:    7
 13632 ;; This function calls:
 13633 ;;		Nothing
 13634 ;; This function is called by:
 13635 ;;		_i2c_writeNBytes
 13636 ;;		_i2c_read1ByteRegister
 13637 ;;		_I2C1_WriteNBytes
 13638 ;; This function uses a non-reentrant model
 13639 ;;
 13640                           
 13641                           
 13642                           ;psect for function _I2C1_SetBuffer
 13643  1C9F                     _I2C1_SetBuffer:
 13644                           
 13645                           ;mcc_generated_files/i2c1_master.c: 264: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 265: {;mcc_generated_files/i2c1_master.c: 266: 
      +                              if(I2C1_Status.bufferFree)
 13646                           
 13647                           ;incstack = 0
 13648                           ; Regs used in _I2C1_SetBuffer: [wreg]
 13649  1C9F  0023               	movlb	3	; select bank3
 13650  1CA0  1DEC               	btfss	(_I2C1_Status^(0+384)+29),3
 13651  1CA1  0008               	return
 13652                           
 13653                           ;mcc_generated_files/i2c1_master.c: 267:     {;mcc_generated_files/i2c1_master.c: 268:  
      +                                 I2C1_Status.data_ptr = buffer;
 13654  1CA2  0020               	movlb	0	; select bank0
 13655  1CA3  0824               	movf	I2C1_SetBuffer@buffer+1,w
 13656  1CA4  0023               	movlb	3	; select bank3
 13657  1CA5  00E7               	movwf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128)
 13658  1CA6  0020               	movlb	0	; select bank0
 13659  1CA7  0823               	movf	I2C1_SetBuffer@buffer,w
 13660  1CA8  0023               	movlb	3	; select bank3
 13661  1CA9  00E6               	movwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128)
 13662                           
 13663                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.data_length = bufferSize;
 13664  1CAA  0020               	movlb	0	; select bank0
 13665  1CAB  0826               	movf	I2C1_SetBuffer@bufferSize+1,w
 13666  1CAC  0023               	movlb	3	; select bank3
 13667  1CAD  00E9               	movwf	((_I2C1_Status+1)^(0+384)+25)
 13668  1CAE  0020               	movlb	0	; select bank0
 13669  1CAF  0825               	movf	I2C1_SetBuffer@bufferSize,w
 13670  1CB0  0023               	movlb	3	; select bank3
 13671  1CB1  00E8               	movwf	(_I2C1_Status^(0+384)+25)
 13672                           
 13673                           ;mcc_generated_files/i2c1_master.c: 270:         I2C1_Status.bufferFree = 0;
 13674  1CB2  11EC               	bcf	(_I2C1_Status^(0+384)+29),3
 13675  1CB3  0008               	return
 13676  1CB4                     __end_of_I2C1_SetBuffer:
 13677                           
 13678                           	psect	text50
 13679  1B5F                     __ptext50:	
 13680 ;; *************** function _I2C1_SetAddressNackCallback *****************
 13681 ;; Defined at:
 13682 ;;		line 284 in file "mcc_generated_files/i2c1_master.c"
 13683 ;; Parameters:    Size  Location     Type
 13684 ;;  cb              2    8[BANK0 ] PTR FTN(PTR void ,)enum 
 13685 ;;		 -> Absolute function(1), 
 13686 ;;  ptr             1   10[BANK0 ] PTR void 
 13687 ;;		 -> NULL(0), 
 13688 ;; Auto vars:     Size  Location     Type
 13689 ;;		None
 13690 ;; Return value:  Size  Location     Type
 13691 ;;                  1    wreg      void 
 13692 ;; Registers used:
 13693 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13694 ;; Tracked objects:
 13695 ;;		On entry : 1F/3A00000
 13696 ;;		On exit  : 1F/0
 13697 ;;		Unchanged: 0/0
 13698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13699 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13701 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13702 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13703 ;;Total ram usage:        4 bytes
 13704 ;; Hardware stack levels used:    1
 13705 ;; Hardware stack levels required when called:    8
 13706 ;; This function calls:
 13707 ;;		_I2C1_SetCallback
 13708 ;; This function is called by:
 13709 ;;		_i2c_writeNBytes
 13710 ;;		_i2c_read1ByteRegister
 13711 ;;		_I2C1_WriteNBytes
 13712 ;; This function uses a non-reentrant model
 13713 ;;
 13714                           
 13715                           
 13716                           ;psect for function _I2C1_SetAddressNackCallback
 13717  1B5F                     _I2C1_SetAddressNackCallback:
 13718                           
 13719                           ;mcc_generated_files/i2c1_master.c: 284: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 285: {;mcc_generated_files/i2c1_mast
      +                          er.c: 286:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 13720                           
 13721                           ;incstack = 0
 13722                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 13723  1B5F  0829               	movf	I2C1_SetAddressNackCallback@cb+1,w
 13724  1B60  00A4               	movwf	I2C1_SetCallback@cb+1
 13725  1B61  0828               	movf	I2C1_SetAddressNackCallback@cb,w
 13726  1B62  00A3               	movwf	I2C1_SetCallback@cb
 13727  1B63  082A               	movf	I2C1_SetAddressNackCallback@ptr,w
 13728  1B64  00AB               	movwf	??_I2C1_SetAddressNackCallback
 13729  1B65  082B               	movf	??_I2C1_SetAddressNackCallback,w
 13730  1B66  00A5               	movwf	I2C1_SetCallback@ptr
 13731  1B67  3002               	movlw	2
 13732  1B68  319F  27B0         	fcall	_I2C1_SetCallback
 13733  1B6A  0008               	return
 13734  1B6B                     __end_of_I2C1_SetAddressNackCallback:
 13735                           
 13736                           	psect	text51
 13737  1FB0                     __ptext51:	
 13738 ;; *************** function _I2C1_SetCallback *****************
 13739 ;; Defined at:
 13740 ;;		line 304 in file "mcc_generated_files/i2c1_master.c"
 13741 ;; Parameters:    Size  Location     Type
 13742 ;;  idx             1    wreg     enum E3010
 13743 ;;  cb              2    3[BANK0 ] PTR FTN(PTR void ,)enum 
 13744 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 13745 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 13746 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 13747 ;;  ptr             1    5[BANK0 ] PTR void 
 13748 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 13749 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 13750 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;  idx             1    7[BANK0 ] enum E3010
 13753 ;; Return value:  Size  Location     Type
 13754 ;;                  1    wreg      void 
 13755 ;; Registers used:
 13756 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13757 ;; Tracked objects:
 13758 ;;		On entry : 1F/3A00000
 13759 ;;		On exit  : 1F/0
 13760 ;;		Unchanged: 0/0
 13761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13762 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13765 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13766 ;;Total ram usage:        5 bytes
 13767 ;; Hardware stack levels used:    1
 13768 ;; Hardware stack levels required when called:    7
 13769 ;; This function calls:
 13770 ;;		Nothing
 13771 ;; This function is called by:
 13772 ;;		_I2C1_SetDataCompleteCallback
 13773 ;;		_I2C1_SetAddressNackCallback
 13774 ;; This function uses a non-reentrant model
 13775 ;;
 13776                           
 13777                           
 13778                           ;psect for function _I2C1_SetCallback
 13779  1FB0                     _I2C1_SetCallback:
 13780                           
 13781                           ;incstack = 0
 13782                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 13783                           ;I2C1_SetCallback@idx stored from wreg
 13784  1FB0  00A7               	movwf	I2C1_SetCallback@idx
 13785                           
 13786                           ;mcc_generated_files/i2c1_master.c: 304: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 305: {;mcc_gen
      +                          erated_files/i2c1_master.c: 306:     if(cb)
 13787  1FB1  0823               	movf	I2C1_SetCallback@cb,w
 13788  1FB2  0424               	iorwf	I2C1_SetCallback@cb+1,w
 13789  1FB3  1903               	btfsc	3,2
 13790  1FB4  2FC8               	goto	l6445
 13791                           
 13792                           ;mcc_generated_files/i2c1_master.c: 307:     {;mcc_generated_files/i2c1_master.c: 308:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 13793  1FB5  3527               	lslf	I2C1_SetCallback@idx,w
 13794  1FB6  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13795  1FB7  0086               	movwf	6
 13796  1FB8  3001               	movlw	1	; select bank3/4
 13797  1FB9  0087               	movwf	7
 13798  1FBA  0823               	movf	I2C1_SetCallback@cb,w
 13799  1FBB  3FC0               	movwi [0]fsr1
 13800  1FBC  0824               	movf	I2C1_SetCallback@cb+1,w
 13801  1FBD  3FC1               	movwi [1]fsr1
 13802                           
 13803                           ;mcc_generated_files/i2c1_master.c: 309:         I2C1_Status.callbackPayload[idx] = ptr;
 13804  1FBE  0825               	movf	I2C1_SetCallback@ptr,w
 13805  1FBF  00A6               	movwf	??_I2C1_SetCallback
 13806  1FC0  0827               	movf	I2C1_SetCallback@idx,w
 13807  1FC1  3EDB               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 13808  1FC2  0086               	movwf	6
 13809  1FC3  3001               	movlw	1	; select bank3/4
 13810  1FC4  0087               	movwf	7
 13811  1FC5  0826               	movf	??_I2C1_SetCallback,w
 13812  1FC6  0081               	movwf	1
 13813                           
 13814                           ;mcc_generated_files/i2c1_master.c: 310:     }
 13815  1FC7  0008               	return
 13816  1FC8                     l6445:
 13817                           
 13818                           ;mcc_generated_files/i2c1_master.c: 312:     {;mcc_generated_files/i2c1_master.c: 313:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 13819  1FC8  3527               	lslf	I2C1_SetCallback@idx,w
 13820  1FC9  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 13821  1FCA  0086               	movwf	6
 13822  1FCB  3001               	movlw	1	; select bank3/4
 13823  1FCC  0087               	movwf	7
 13824  1FCD  30A2               	movlw	low _I2C1_CallbackReturnStop
 13825  1FCE  3FC0               	movwi [0]fsr1
 13826  1FCF  301A               	movlw	high _I2C1_CallbackReturnStop
 13827  1FD0  3FC1               	movwi [1]fsr1
 13828                           
 13829                           ;mcc_generated_files/i2c1_master.c: 314:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 13830  1FD1  0827               	movf	I2C1_SetCallback@idx,w
 13831  1FD2  3EDB               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 13832  1FD3  0086               	movwf	6
 13833  1FD4  3001               	movlw	1	; select bank3/4
 13834  1FD5  0087               	movwf	7
 13835  1FD6  0181               	clrf	1
 13836  1FD7  0008               	return
 13837  1FD8                     __end_of_I2C1_SetCallback:
 13838                           
 13839                           	psect	text52
 13840  11A6                     __ptext52:	
 13841 ;; *************** function _I2C1_Open *****************
 13842 ;; Defined at:
 13843 ;;		line 176 in file "mcc_generated_files/i2c1_master.c"
 13844 ;; Parameters:    Size  Location     Type
 13845 ;;  address         1    wreg     unsigned char 
 13846 ;; Auto vars:     Size  Location     Type
 13847 ;;  address         1    6[BANK0 ] unsigned char 
 13848 ;;  returnValue     1    7[BANK0 ] enum E353
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  1    wreg      enum E353
 13851 ;; Registers used:
 13852 ;;		wreg, status,2, status,0, pclath, cstack
 13853 ;; Tracked objects:
 13854 ;;		On entry : 1F/3A00000
 13855 ;;		On exit  : 1F/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13861 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13862 ;;Total ram usage:        3 bytes
 13863 ;; Hardware stack levels used:    1
 13864 ;; Hardware stack levels required when called:    8
 13865 ;; This function calls:
 13866 ;;		_I2C1_MasterClearIrq
 13867 ;;		_I2C1_MasterEnableIrq
 13868 ;;		_I2C1_MasterOpen
 13869 ;;		_I2C1_SetInterruptHandler
 13870 ;; This function is called by:
 13871 ;;		_i2c_writeNBytes
 13872 ;;		_i2c_read1ByteRegister
 13873 ;;		_I2C1_WriteNBytes
 13874 ;; This function uses a non-reentrant model
 13875 ;;
 13876                           
 13877                           
 13878                           ;psect for function _I2C1_Open
 13879  11A6                     _I2C1_Open:
 13880                           
 13881                           ;incstack = 0
 13882                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 13883                           ;I2C1_Open@address stored from wreg
 13884  11A6  00A6               	movwf	I2C1_Open@address
 13885                           
 13886                           ;mcc_generated_files/i2c1_master.c: 176: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 177: {;mcc_generated_files/i2c1_master.c: 178:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 13887  11A7  01A7               	clrf	I2C1_Open@returnValue
 13888  11A8  0AA7               	incf	I2C1_Open@returnValue,f
 13889                           
 13890                           ;mcc_generated_files/i2c1_master.c: 180:     if(!I2C1_Status.inUse)
 13891  11A9  0023               	movlb	3	; select bank3
 13892  11AA  196C               	btfsc	(_I2C1_Status^(0+384)+29),2
 13893  11AB  29EB               	goto	l6627
 13894                           
 13895                           ;mcc_generated_files/i2c1_master.c: 181:     {;mcc_generated_files/i2c1_master.c: 182:  
      +                                 I2C1_Status.address = address;
 13896  11AC  0020               	movlb	0	; select bank0
 13897  11AD  0826               	movf	I2C1_Open@address,w
 13898  11AE  00A5               	movwf	??_I2C1_Open
 13899  11AF  0825               	movf	??_I2C1_Open,w
 13900  11B0  0023               	movlb	3	; select bank3
 13901  11B1  00E5               	movwf	(_I2C1_Status^(0+384)+22)
 13902                           
 13903                           ;mcc_generated_files/i2c1_master.c: 183:         I2C1_Status.busy = 0;
 13904  11B2  10EC               	bcf	(_I2C1_Status^(0+384)+29),1
 13905                           
 13906                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.inUse = 1;
 13907  11B3  156C               	bsf	(_I2C1_Status^(0+384)+29),2
 13908                           
 13909                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.addressNackCheck = 0;
 13910  11B4  106C               	bcf	(_I2C1_Status^(0+384)+29),0
 13911                           
 13912                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.state = I2C1_RESET;
 13913  11B5  300E               	movlw	14
 13914  11B6  0020               	movlb	0	; select bank0
 13915  11B7  00A5               	movwf	??_I2C1_Open
 13916  11B8  0825               	movf	??_I2C1_Open,w
 13917  11B9  0023               	movlb	3	; select bank3
 13918  11BA  00EA               	movwf	(_I2C1_Status^(0+384)+27)
 13919                           
 13920                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.time_out_value = 500;
 13921  11BB  30F4               	movlw	244
 13922  11BC  00E3               	movwf	(_I2C1_Status^(0+384)+20)
 13923  11BD  3001               	movlw	1
 13924  11BE  00E4               	movwf	(_I2C1_Status^(0+384)+21)
 13925                           
 13926                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.bufferFree = 1;
 13927  11BF  15EC               	bsf	(_I2C1_Status^(0+384)+29),3
 13928                           
 13929                           ;mcc_generated_files/i2c1_master.c: 191:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 13930  11C0  30A2               	movlw	low _I2C1_CallbackReturnStop
 13931  11C1  00CF               	movwf	_I2C1_Status^(0+384)
 13932  11C2  301A               	movlw	high _I2C1_CallbackReturnStop
 13933  11C3  00D0               	movwf	(_I2C1_Status^(0+384)+1)
 13934                           
 13935                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 13936  11C4  01DB               	clrf	(low ((_I2C1_Status| (0+256)+12)))^(0+128)
 13937                           
 13938                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 13939  11C5  30A2               	movlw	low _I2C1_CallbackReturnStop
 13940  11C6  00D1               	movwf	(low ((_I2C1_Status| (0+256)+2)))^(0+128)
 13941  11C7  301A               	movlw	high _I2C1_CallbackReturnStop
 13942  11C8  00D2               	movwf	((low ((_I2C1_Status| (0+256)+2)))^(0+128)+1)
 13943                           
 13944                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 13945  11C9  01DC               	clrf	(low ((_I2C1_Status| (0+256)+13)))^(0+128)
 13946                           
 13947                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 13948  11CA  30A2               	movlw	low _I2C1_CallbackReturnStop
 13949  11CB  00D3               	movwf	(low ((_I2C1_Status| (0+256)+4)))^(0+128)
 13950  11CC  301A               	movlw	high _I2C1_CallbackReturnStop
 13951  11CD  00D4               	movwf	((low ((_I2C1_Status| (0+256)+4)))^(0+128)+1)
 13952                           
 13953                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 13954  11CE  01DD               	clrf	(low ((_I2C1_Status| (0+256)+14)))^(0+128)
 13955                           
 13956                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 13957  11CF  30A2               	movlw	low _I2C1_CallbackReturnStop
 13958  11D0  00D5               	movwf	(low ((_I2C1_Status| (0+256)+6)))^(0+128)
 13959  11D1  301A               	movlw	high _I2C1_CallbackReturnStop
 13960  11D2  00D6               	movwf	((low ((_I2C1_Status| (0+256)+6)))^(0+128)+1)
 13961                           
 13962                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 13963  11D3  01DE               	clrf	(low ((_I2C1_Status| (0+256)+15)))^(0+128)
 13964                           
 13965                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 13966  11D4  30A4               	movlw	low _I2C1_CallbackReturnReset
 13967  11D5  00D7               	movwf	(low ((_I2C1_Status| (0+256)+8)))^(0+128)
 13968  11D6  301A               	movlw	high _I2C1_CallbackReturnReset
 13969  11D7  00D8               	movwf	((low ((_I2C1_Status| (0+256)+8)))^(0+128)+1)
 13970                           
 13971                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 13972  11D8  01DF               	clrf	(low ((_I2C1_Status| (0+256)+16)))^(0+128)
 13973                           
 13974                           ;mcc_generated_files/i2c1_master.c: 202:         I2C1_SetInterruptHandler(I2C1_MasterIsr
      +                          );
 13975  11D9  30B8               	movlw	low _I2C1_MasterIsr
 13976  11DA  0020               	movlb	0	; select bank0
 13977  11DB  00A3               	movwf	I2C1_SetInterruptHandler@InterruptHandler
 13978  11DC  301A               	movlw	high _I2C1_MasterIsr
 13979  11DD  00A4               	movwf	I2C1_SetInterruptHandler@InterruptHandler+1
 13980  11DE  319B  2334  3191   	fcall	_I2C1_SetInterruptHandler
 13981                           
 13982                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_MasterClearIrq();
 13983  11E1  319A  22BB  3191   	fcall	_I2C1_MasterClearIrq
 13984                           
 13985                           ;mcc_generated_files/i2c1_master.c: 204:         I2C1_MasterOpen();
 13986  11E4  319B  233C  3191   	fcall	_I2C1_MasterOpen
 13987                           
 13988                           ;mcc_generated_files/i2c1_master.c: 205:         I2C1_MasterEnableIrq();
 13989  11E7  3187  27FD         	fcall	_I2C1_MasterEnableIrq
 13990                           
 13991                           ;mcc_generated_files/i2c1_master.c: 206:         returnValue = I2C1_NOERR;
 13992  11E9  0020               	movlb	0	; select bank0
 13993  11EA  01A7               	clrf	I2C1_Open@returnValue
 13994  11EB                     l6627:
 13995                           
 13996                           ;mcc_generated_files/i2c1_master.c: 208:     return returnValue;
 13997  11EB  0020               	movlb	0	; select bank0
 13998  11EC  0827               	movf	I2C1_Open@returnValue,w
 13999  11ED  0008               	return
 14000  11EE                     __end_of_I2C1_Open:
 14001                           
 14002                           	psect	text53
 14003  1B34                     __ptext53:	
 14004 ;; *************** function _I2C1_SetInterruptHandler *****************
 14005 ;; Defined at:
 14006 ;;		line 299 in file "mcc_generated_files/i2c1_master.c"
 14007 ;; Parameters:    Size  Location     Type
 14008 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14009 ;;		 -> I2C1_MasterIsr(1), 
 14010 ;; Auto vars:     Size  Location     Type
 14011 ;;		None
 14012 ;; Return value:  Size  Location     Type
 14013 ;;                  1    wreg      void 
 14014 ;; Registers used:
 14015 ;;		wreg
 14016 ;; Tracked objects:
 14017 ;;		On entry : 1F/3A00000
 14018 ;;		On exit  : 1F/2
 14019 ;;		Unchanged: 0/0
 14020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14024 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14025 ;;Total ram usage:        2 bytes
 14026 ;; Hardware stack levels used:    1
 14027 ;; Hardware stack levels required when called:    7
 14028 ;; This function calls:
 14029 ;;		Nothing
 14030 ;; This function is called by:
 14031 ;;		_I2C1_Open
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           
 14036                           ;psect for function _I2C1_SetInterruptHandler
 14037  1B34                     _I2C1_SetInterruptHandler:
 14038                           
 14039                           ;mcc_generated_files/i2c1_master.c: 299: void I2C1_SetInterruptHandler(void (* Interrupt
      +                          Handler)(void));mcc_generated_files/i2c1_master.c: 300: {;mcc_generated_files/i2c1_maste
      +                          r.c: 301:     MSSP1_InterruptHandler = InterruptHandler;
 14040                           
 14041                           ;incstack = 0
 14042                           ; Regs used in _I2C1_SetInterruptHandler: [wreg]
 14043  1B34  0824               	movf	I2C1_SetInterruptHandler@InterruptHandler+1,w
 14044  1B35  0022               	movlb	2	; select bank2
 14045  1B36  00AF               	movwf	(_MSSP1_InterruptHandler+1)^(0+256)
 14046  1B37  0020               	movlb	0	; select bank0
 14047  1B38  0823               	movf	I2C1_SetInterruptHandler@InterruptHandler,w
 14048  1B39  0022               	movlb	2	; select bank2
 14049  1B3A  00AE               	movwf	_MSSP1_InterruptHandler^(0+256)
 14050  1B3B  0008               	return
 14051  1B3C                     __end_of_I2C1_SetInterruptHandler:
 14052                           
 14053                           	psect	text54
 14054  1B3C                     __ptext54:	
 14055 ;; *************** function _I2C1_MasterOpen *****************
 14056 ;; Defined at:
 14057 ;;		line 544 in file "mcc_generated_files/i2c1_master.c"
 14058 ;; Parameters:    Size  Location     Type
 14059 ;;		None
 14060 ;; Auto vars:     Size  Location     Type
 14061 ;;		None
 14062 ;; Return value:  Size  Location     Type
 14063 ;;                  1    wreg      _Bool 
 14064 ;; Registers used:
 14065 ;;		wreg, status,2
 14066 ;; Tracked objects:
 14067 ;;		On entry : 1F/3A00000
 14068 ;;		On exit  : 1F/4
 14069 ;;		Unchanged: 0/0
 14070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14075 ;;Total ram usage:        0 bytes
 14076 ;; Hardware stack levels used:    1
 14077 ;; Hardware stack levels required when called:    7
 14078 ;; This function calls:
 14079 ;;		Nothing
 14080 ;; This function is called by:
 14081 ;;		_I2C1_Open
 14082 ;; This function uses a non-reentrant model
 14083 ;;
 14084                           
 14085                           
 14086                           ;psect for function _I2C1_MasterOpen
 14087  1B3C                     _I2C1_MasterOpen:
 14088                           
 14089                           ;mcc_generated_files/i2c1_master.c: 546:     if(!SSP1CON1bits.SSPEN)
 14090                           
 14091                           ;incstack = 0
 14092                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 14093  1B3C  0024               	movlb	4	; select bank4
 14094  1B3D  1A95               	btfsc	21,5	;volatile
 14095  1B3E  0008               	return
 14096                           
 14097                           ;mcc_generated_files/i2c1_master.c: 547:     {;mcc_generated_files/i2c1_master.c: 548:  
      +                                 SSP1STAT = 0x00;
 14098  1B3F  0194               	clrf	20	;volatile
 14099                           
 14100                           ;mcc_generated_files/i2c1_master.c: 549:         SSP1CON1 = 0x08;
 14101  1B40  3008               	movlw	8
 14102  1B41  0095               	movwf	21	;volatile
 14103                           
 14104                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1CON2 = 0x00;
 14105  1B42  0196               	clrf	22	;volatile
 14106                           
 14107                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1ADD = 0x27;
 14108  1B43  3027               	movlw	39
 14109  1B44  0092               	movwf	18	;volatile
 14110                           
 14111                           ;mcc_generated_files/i2c1_master.c: 552:         SSP1CON1bits.SSPEN = 1;
 14112  1B45  1695               	bsf	21,5	;volatile
 14113  1B46  0008               	return
 14114  1B47                     __end_of_I2C1_MasterOpen:
 14115                           
 14116                           	psect	text55
 14117  07FD                     __ptext55:	
 14118 ;; *************** function _I2C1_MasterEnableIrq *****************
 14119 ;; Defined at:
 14120 ;;		line 627 in file "mcc_generated_files/i2c1_master.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;		None
 14123 ;; Auto vars:     Size  Location     Type
 14124 ;;		None
 14125 ;; Return value:  Size  Location     Type
 14126 ;;                  1    wreg      void 
 14127 ;; Registers used:
 14128 ;;		None
 14129 ;; Tracked objects:
 14130 ;;		On entry : 1F/3A00004
 14131 ;;		On exit  : 1F/1
 14132 ;;		Unchanged: 0/0
 14133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14138 ;;Total ram usage:        0 bytes
 14139 ;; Hardware stack levels used:    1
 14140 ;; Hardware stack levels required when called:    7
 14141 ;; This function calls:
 14142 ;;		Nothing
 14143 ;; This function is called by:
 14144 ;;		_I2C1_Open
 14145 ;; This function uses a non-reentrant model
 14146 ;;
 14147                           
 14148                           
 14149                           ;psect for function _I2C1_MasterEnableIrq
 14150  07FD                     _I2C1_MasterEnableIrq:
 14151                           
 14152                           ;mcc_generated_files/i2c1_master.c: 629:     PIE1bits.SSP1IE = 1;
 14153                           
 14154                           ;incstack = 0
 14155                           ; Regs used in _I2C1_MasterEnableIrq: []
 14156  07FD  0021               	movlb	1	; select bank1
 14157  07FE  1591               	bsf	17,3	;volatile
 14158  07FF  0008               	return
 14159  0800                     __end_of_I2C1_MasterEnableIrq:
 14160                           
 14161                           	psect	text56
 14162  0800                     __ptext56:	
 14163 ;; *************** function _I2C1_MasterWrite *****************
 14164 ;; Defined at:
 14165 ;;		line 252 in file "mcc_generated_files/i2c1_master.c"
 14166 ;; Parameters:    Size  Location     Type
 14167 ;;		None
 14168 ;; Auto vars:     Size  Location     Type
 14169 ;;		None
 14170 ;; Return value:  Size  Location     Type
 14171 ;;                  1    wreg      enum E353
 14172 ;; Registers used:
 14173 ;;		wreg, status,2, status,0, pclath, cstack
 14174 ;; Tracked objects:
 14175 ;;		On entry : 1F/3A00000
 14176 ;;		On exit  : 1F/0
 14177 ;;		Unchanged: 0/0
 14178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14183 ;;Total ram usage:        0 bytes
 14184 ;; Hardware stack levels used:    1
 14185 ;; Hardware stack levels required when called:    9
 14186 ;; This function calls:
 14187 ;;		_I2C1_MasterOperation
 14188 ;; This function is called by:
 14189 ;;		_i2c_writeNBytes
 14190 ;;		_i2c_read1ByteRegister
 14191 ;;		_I2C1_WriteNBytes
 14192 ;; This function uses a non-reentrant model
 14193 ;;
 14194                           
 14195                           
 14196                           ;psect for function _I2C1_MasterWrite
 14197  0800                     _I2C1_MasterWrite:
 14198                           
 14199                           ;mcc_generated_files/i2c1_master.c: 254:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 14200                           
 14201                           ;incstack = 0
 14202                           ; Regs used in _I2C1_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
 14203  0800  3000               	movlw	0
 14204  0801  319D  25A4         	fcall	_I2C1_MasterOperation
 14205  0803  0008               	return
 14206  0804                     __end_of_I2C1_MasterWrite:
 14207                           
 14208                           	psect	text57
 14209  1DA4                     __ptext57:	
 14210 ;; *************** function _I2C1_MasterOperation *****************
 14211 ;; Defined at:
 14212 ;;		line 226 in file "mcc_generated_files/i2c1_master.c"
 14213 ;; Parameters:    Size  Location     Type
 14214 ;;  read            1    wreg     _Bool 
 14215 ;; Auto vars:     Size  Location     Type
 14216 ;;  read            1    4[BANK0 ] _Bool 
 14217 ;;  returnValue     1    5[BANK0 ] enum E353
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  1    wreg      enum E353
 14220 ;; Registers used:
 14221 ;;		wreg, status,2, status,0, pclath, cstack
 14222 ;; Tracked objects:
 14223 ;;		On entry : 1F/3A00000
 14224 ;;		On exit  : 1F/0
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14228 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14230 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14231 ;;Total ram usage:        3 bytes
 14232 ;; Hardware stack levels used:    1
 14233 ;; Hardware stack levels required when called:    8
 14234 ;; This function calls:
 14235 ;;		_I2C1_MasterStart
 14236 ;; This function is called by:
 14237 ;;		_I2C1_MasterWrite
 14238 ;; This function uses a non-reentrant model
 14239 ;;
 14240                           
 14241                           
 14242                           ;psect for function _I2C1_MasterOperation
 14243  1DA4                     _I2C1_MasterOperation:
 14244                           
 14245                           ;incstack = 0
 14246                           ; Regs used in _I2C1_MasterOperation: [wreg+status,2+status,0+pclath+cstack]
 14247                           ;I2C1_MasterOperation@read stored from wreg
 14248  1DA4  00A4               	movwf	I2C1_MasterOperation@read
 14249                           
 14250                           ;mcc_generated_files/i2c1_master.c: 226: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 227: {;mcc_generated_files/i2c1_master.c: 228:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 14251  1DA5  01A5               	clrf	I2C1_MasterOperation@returnValue
 14252  1DA6  0AA5               	incf	I2C1_MasterOperation@returnValue,f
 14253                           
 14254                           ;mcc_generated_files/i2c1_master.c: 229:     if(!I2C1_Status.busy)
 14255  1DA7  0023               	movlb	3	; select bank3
 14256  1DA8  18EC               	btfsc	(_I2C1_Status^(0+384)+29),1
 14257  1DA9  2DBB               	goto	l6437
 14258                           
 14259                           ;mcc_generated_files/i2c1_master.c: 230:     {;mcc_generated_files/i2c1_master.c: 231:  
      +                                 I2C1_Status.busy = 1;
 14260  1DAA  14EC               	bsf	(_I2C1_Status^(0+384)+29),1
 14261                           
 14262                           ;mcc_generated_files/i2c1_master.c: 232:         returnValue = I2C1_NOERR;
 14263  1DAB  0020               	movlb	0	; select bank0
 14264  1DAC  01A5               	clrf	I2C1_MasterOperation@returnValue
 14265                           
 14266                           ;mcc_generated_files/i2c1_master.c: 234:         if(read)
 14267  1DAD  0824               	movf	I2C1_MasterOperation@read,w
 14268  1DAE  1903               	btfsc	3,2
 14269  1DAF  2DB4               	goto	l6433
 14270                           
 14271                           ;mcc_generated_files/i2c1_master.c: 235:         {;mcc_generated_files/i2c1_master.c: 23
      +                          6:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 14272  1DB0  0023               	movlb	3	; select bank3
 14273  1DB1  01EA               	clrf	(_I2C1_Status^(0+384)+27)
 14274  1DB2  0AEA               	incf	(_I2C1_Status^(0+384)+27),f
 14275                           
 14276                           ;mcc_generated_files/i2c1_master.c: 237:         }
 14277  1DB3  2DB9               	goto	l6435
 14278  1DB4                     l6433:
 14279                           
 14280                           ;mcc_generated_files/i2c1_master.c: 239:         {;mcc_generated_files/i2c1_master.c: 24
      +                          0:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 14281  1DB4  3002               	movlw	2
 14282  1DB5  00A3               	movwf	??_I2C1_MasterOperation
 14283  1DB6  0823               	movf	??_I2C1_MasterOperation,w
 14284  1DB7  0023               	movlb	3	; select bank3
 14285  1DB8  00EA               	movwf	(_I2C1_Status^(0+384)+27)
 14286  1DB9                     l6435:
 14287                           
 14288                           ;mcc_generated_files/i2c1_master.c: 242:         I2C1_MasterStart();
 14289  1DB9  319A  22C4         	fcall	_I2C1_MasterStart
 14290  1DBB                     l6437:
 14291                           
 14292                           ;mcc_generated_files/i2c1_master.c: 244:     return returnValue;
 14293  1DBB  0020               	movlb	0	; select bank0
 14294  1DBC  0825               	movf	I2C1_MasterOperation@returnValue,w
 14295  1DBD  0008               	return
 14296  1DBE                     __end_of_I2C1_MasterOperation:
 14297                           
 14298                           	psect	text58
 14299  1AC4                     __ptext58:	
 14300 ;; *************** function _I2C1_MasterStart *****************
 14301 ;; Defined at:
 14302 ;;		line 589 in file "mcc_generated_files/i2c1_master.c"
 14303 ;; Parameters:    Size  Location     Type
 14304 ;;		None
 14305 ;; Auto vars:     Size  Location     Type
 14306 ;;		None
 14307 ;; Return value:  Size  Location     Type
 14308 ;;                  1    wreg      void 
 14309 ;; Registers used:
 14310 ;;		None
 14311 ;; Tracked objects:
 14312 ;;		On entry : 1F/3A00003
 14313 ;;		On exit  : 1F/4
 14314 ;;		Unchanged: 0/0
 14315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14320 ;;Total ram usage:        0 bytes
 14321 ;; Hardware stack levels used:    1
 14322 ;; Hardware stack levels required when called:    7
 14323 ;; This function calls:
 14324 ;;		Nothing
 14325 ;; This function is called by:
 14326 ;;		_I2C1_MasterOperation
 14327 ;; This function uses a non-reentrant model
 14328 ;;
 14329                           
 14330                           
 14331                           ;psect for function _I2C1_MasterStart
 14332  1AC4                     _I2C1_MasterStart:
 14333                           
 14334                           ;mcc_generated_files/i2c1_master.c: 591:     SSP1CON2bits.SEN = 1;
 14335                           
 14336                           ;incstack = 0
 14337                           ; Regs used in _I2C1_MasterStart: []
 14338  1AC4  0024               	movlb	4	; select bank4
 14339  1AC5  1416               	bsf	22,0	;volatile
 14340  1AC6  0008               	return
 14341  1AC7                     __end_of_I2C1_MasterStart:
 14342                           
 14343                           	psect	text59
 14344  1DF4                     __ptext59:	
 14345 ;; *************** function _I2C1_Close *****************
 14346 ;; Defined at:
 14347 ;;		line 211 in file "mcc_generated_files/i2c1_master.c"
 14348 ;; Parameters:    Size  Location     Type
 14349 ;;		None
 14350 ;; Auto vars:     Size  Location     Type
 14351 ;;  returnValue     1    4[BANK0 ] enum E353
 14352 ;; Return value:  Size  Location     Type
 14353 ;;                  1    wreg      enum E353
 14354 ;; Registers used:
 14355 ;;		wreg, status,2, status,0, pclath, cstack
 14356 ;; Tracked objects:
 14357 ;;		On entry : 1F/3A00000
 14358 ;;		On exit  : 1F/0
 14359 ;;		Unchanged: 0/0
 14360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14363 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14364 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;Total ram usage:        2 bytes
 14366 ;; Hardware stack levels used:    1
 14367 ;; Hardware stack levels required when called:    8
 14368 ;; This function calls:
 14369 ;;		_I2C1_MasterClearIrq
 14370 ;;		_I2C1_MasterClose
 14371 ;;		_I2C1_MasterDisableIrq
 14372 ;; This function is called by:
 14373 ;;		_i2c_writeNBytes
 14374 ;;		_i2c_read1ByteRegister
 14375 ;;		_I2C1_WriteNBytes
 14376 ;; This function uses a non-reentrant model
 14377 ;;
 14378                           
 14379                           
 14380                           ;psect for function _I2C1_Close
 14381  1DF4                     _I2C1_Close:
 14382                           
 14383                           ;mcc_generated_files/i2c1_master.c: 213:     i2c1_error_t returnValue = I2C1_BUSY;
 14384                           
 14385                           ;incstack = 0
 14386                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 14387  1DF4  01A4               	clrf	I2C1_Close@returnValue
 14388  1DF5  0AA4               	incf	I2C1_Close@returnValue,f
 14389                           
 14390                           ;mcc_generated_files/i2c1_master.c: 214:     if(!I2C1_Status.busy)
 14391  1DF6  0023               	movlb	3	; select bank3
 14392  1DF7  18EC               	btfsc	(_I2C1_Status^(0+384)+29),1
 14393  1DF8  2E0E               	goto	l6651
 14394                           
 14395                           ;mcc_generated_files/i2c1_master.c: 215:     {;mcc_generated_files/i2c1_master.c: 216:  
      +                                 I2C1_Status.inUse = 0;
 14396  1DF9  116C               	bcf	(_I2C1_Status^(0+384)+29),2
 14397                           
 14398                           ;mcc_generated_files/i2c1_master.c: 217:         I2C1_Status.address = 0xff;
 14399  1DFA  30FF               	movlw	255
 14400  1DFB  0020               	movlb	0	; select bank0
 14401  1DFC  00A3               	movwf	??_I2C1_Close
 14402  1DFD  0823               	movf	??_I2C1_Close,w
 14403  1DFE  0023               	movlb	3	; select bank3
 14404  1DFF  00E5               	movwf	(_I2C1_Status^(0+384)+22)
 14405                           
 14406                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_MasterClearIrq();
 14407  1E00  319A  22BB  319D   	fcall	_I2C1_MasterClearIrq
 14408                           
 14409                           ;mcc_generated_files/i2c1_master.c: 219:         I2C1_MasterDisableIrq();
 14410  1E03  319A  22C1  319D   	fcall	_I2C1_MasterDisableIrq
 14411                           
 14412                           ;mcc_generated_files/i2c1_master.c: 220:         I2C1_MasterClose();
 14413  1E06  319A  22BE         	fcall	_I2C1_MasterClose
 14414                           
 14415                           ;mcc_generated_files/i2c1_master.c: 221:         returnValue = I2C1_Status.error;
 14416  1E08  0023               	movlb	3	; select bank3
 14417  1E09  086B               	movf	(_I2C1_Status^(0+384)+28),w
 14418  1E0A  0020               	movlb	0	; select bank0
 14419  1E0B  00A3               	movwf	??_I2C1_Close
 14420  1E0C  0823               	movf	??_I2C1_Close,w
 14421  1E0D  00A4               	movwf	I2C1_Close@returnValue
 14422  1E0E                     l6651:
 14423                           
 14424                           ;mcc_generated_files/i2c1_master.c: 223:     return returnValue;
 14425  1E0E  0020               	movlb	0	; select bank0
 14426  1E0F  0824               	movf	I2C1_Close@returnValue,w
 14427  1E10  0008               	return
 14428  1E11                     __end_of_I2C1_Close:
 14429                           
 14430                           	psect	text60
 14431  1AC1                     __ptext60:	
 14432 ;; *************** function _I2C1_MasterDisableIrq *****************
 14433 ;; Defined at:
 14434 ;;		line 637 in file "mcc_generated_files/i2c1_master.c"
 14435 ;; Parameters:    Size  Location     Type
 14436 ;;		None
 14437 ;; Auto vars:     Size  Location     Type
 14438 ;;		None
 14439 ;; Return value:  Size  Location     Type
 14440 ;;                  1    wreg      void 
 14441 ;; Registers used:
 14442 ;;		None
 14443 ;; Tracked objects:
 14444 ;;		On entry : 1F/3A00000
 14445 ;;		On exit  : 1F/1
 14446 ;;		Unchanged: 0/0
 14447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14452 ;;Total ram usage:        0 bytes
 14453 ;; Hardware stack levels used:    1
 14454 ;; Hardware stack levels required when called:    7
 14455 ;; This function calls:
 14456 ;;		Nothing
 14457 ;; This function is called by:
 14458 ;;		_I2C1_Close
 14459 ;; This function uses a non-reentrant model
 14460 ;;
 14461                           
 14462                           
 14463                           ;psect for function _I2C1_MasterDisableIrq
 14464  1AC1                     _I2C1_MasterDisableIrq:
 14465                           
 14466                           ;mcc_generated_files/i2c1_master.c: 639:     PIE1bits.SSP1IE = 0;
 14467                           
 14468                           ;incstack = 0
 14469                           ; Regs used in _I2C1_MasterDisableIrq: []
 14470  1AC1  0021               	movlb	1	; select bank1
 14471  1AC2  1191               	bcf	17,3	;volatile
 14472  1AC3  0008               	return
 14473  1AC4                     __end_of_I2C1_MasterDisableIrq:
 14474                           
 14475                           	psect	text61
 14476  1ABE                     __ptext61:	
 14477 ;; *************** function _I2C1_MasterClose *****************
 14478 ;; Defined at:
 14479 ;;		line 558 in file "mcc_generated_files/i2c1_master.c"
 14480 ;; Parameters:    Size  Location     Type
 14481 ;;		None
 14482 ;; Auto vars:     Size  Location     Type
 14483 ;;		None
 14484 ;; Return value:  Size  Location     Type
 14485 ;;                  1    wreg      void 
 14486 ;; Registers used:
 14487 ;;		None
 14488 ;; Tracked objects:
 14489 ;;		On entry : 1F/3A00001
 14490 ;;		On exit  : 1F/4
 14491 ;;		Unchanged: 0/0
 14492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14497 ;;Total ram usage:        0 bytes
 14498 ;; Hardware stack levels used:    1
 14499 ;; Hardware stack levels required when called:    7
 14500 ;; This function calls:
 14501 ;;		Nothing
 14502 ;; This function is called by:
 14503 ;;		_I2C1_Close
 14504 ;; This function uses a non-reentrant model
 14505 ;;
 14506                           
 14507                           
 14508                           ;psect for function _I2C1_MasterClose
 14509  1ABE                     _I2C1_MasterClose:
 14510                           
 14511                           ;mcc_generated_files/i2c1_master.c: 561:     SSP1CON1bits.SSPEN = 0;
 14512                           
 14513                           ;incstack = 0
 14514                           ; Regs used in _I2C1_MasterClose: []
 14515  1ABE  0024               	movlb	4	; select bank4
 14516  1ABF  1295               	bcf	21,5	;volatile
 14517  1AC0  0008               	return
 14518  1AC1                     __end_of_I2C1_MasterClose:
 14519                           
 14520                           	psect	text62
 14521  1ABB                     __ptext62:	
 14522 ;; *************** function _I2C1_MasterClearIrq *****************
 14523 ;; Defined at:
 14524 ;;		line 642 in file "mcc_generated_files/i2c1_master.c"
 14525 ;; Parameters:    Size  Location     Type
 14526 ;;		None
 14527 ;; Auto vars:     Size  Location     Type
 14528 ;;		None
 14529 ;; Return value:  Size  Location     Type
 14530 ;;                  1    wreg      void 
 14531 ;; Registers used:
 14532 ;;		None
 14533 ;; Tracked objects:
 14534 ;;		On entry : 1E/3A00002
 14535 ;;		On exit  : 1F/0
 14536 ;;		Unchanged: 0/0
 14537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14542 ;;Total ram usage:        0 bytes
 14543 ;; Hardware stack levels used:    1
 14544 ;; Hardware stack levels required when called:    7
 14545 ;; This function calls:
 14546 ;;		Nothing
 14547 ;; This function is called by:
 14548 ;;		_I2C1_Open
 14549 ;;		_I2C1_Close
 14550 ;; This function uses a non-reentrant model
 14551 ;;
 14552                           
 14553                           
 14554                           ;psect for function _I2C1_MasterClearIrq
 14555  1ABB                     _I2C1_MasterClearIrq:
 14556                           
 14557                           ;mcc_generated_files/i2c1_master.c: 644:     PIR1bits.SSP1IF = 0;
 14558                           
 14559                           ;incstack = 0
 14560                           ; Regs used in _I2C1_MasterClearIrq: []
 14561  1ABB  0020               	movlb	0	; select bank0
 14562  1ABC  1191               	bcf	17,3	;volatile
 14563  1ABD  0008               	return
 14564  1ABE                     __end_of_I2C1_MasterClearIrq:
 14565                           
 14566                           	psect	text63
 14567  0002                     __ptext63:	
 14568 ;; *************** function _TMR1_StartTimer *****************
 14569 ;; Defined at:
 14570 ;;		line 228 in file "mcc_generated_files/tmr1.c"
 14571 ;; Parameters:    Size  Location     Type
 14572 ;;		None
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;		None
 14575 ;; Return value:  Size  Location     Type
 14576 ;;                  1    wreg      void 
 14577 ;; Registers used:
 14578 ;;		None
 14579 ;; Tracked objects:
 14580 ;;		On entry : 1F/0
 14581 ;;		On exit  : 1F/0
 14582 ;;		Unchanged: 0/0
 14583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14588 ;;Total ram usage:        0 bytes
 14589 ;; Hardware stack levels used:    1
 14590 ;; Hardware stack levels required when called:    7
 14591 ;; This function calls:
 14592 ;;		Nothing
 14593 ;; This function is called by:
 14594 ;;		_main
 14595 ;; This function uses a non-reentrant model
 14596 ;;
 14597                           
 14598                           
 14599                           ;psect for function _TMR1_StartTimer
 14600  0002                     _TMR1_StartTimer:
 14601                           
 14602                           ;mcc_generated_files/tmr1.c: 231:     T1CONbits.TMR1ON = 1;
 14603                           
 14604                           ;incstack = 0
 14605                           ; Regs used in _TMR1_StartTimer: []
 14606  0002  1418               	bsf	24,0	;volatile
 14607  0003  0008               	return
 14608  0004                     __end_of_TMR1_StartTimer:
 14609                           
 14610                           	psect	text64
 14611  0804                     __ptext64:	
 14612 ;; *************** function _SYSTEM_Initialize *****************
 14613 ;; Defined at:
 14614 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14615 ;; Parameters:    Size  Location     Type
 14616 ;;		None
 14617 ;; Auto vars:     Size  Location     Type
 14618 ;;		None
 14619 ;; Return value:  Size  Location     Type
 14620 ;;                  1    wreg      void 
 14621 ;; Registers used:
 14622 ;;		wreg, status,2, status,0, pclath, cstack
 14623 ;; Tracked objects:
 14624 ;;		On entry : B1F/0
 14625 ;;		On exit  : 1F/0
 14626 ;;		Unchanged: 0/0
 14627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14632 ;;Total ram usage:        0 bytes
 14633 ;; Hardware stack levels used:    1
 14634 ;; Hardware stack levels required when called:    9
 14635 ;; This function calls:
 14636 ;;		_I2C1_Initialize
 14637 ;;		_OSCILLATOR_Initialize
 14638 ;;		_PIN_MANAGER_Initialize
 14639 ;;		_TMR1_Initialize
 14640 ;;		_WDT_Initialize
 14641 ;; This function is called by:
 14642 ;;		_main
 14643 ;; This function uses a non-reentrant model
 14644 ;;
 14645                           
 14646                           
 14647                           ;psect for function _SYSTEM_Initialize
 14648  0804                     _SYSTEM_Initialize:
 14649                           
 14650                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 14651                           
 14652                           ;incstack = 0
 14653                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14654  0804  3190  2000  3188   	fcall	_I2C1_Initialize
 14655                           
 14656                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14657  0807  319D  258A  3188   	fcall	_PIN_MANAGER_Initialize
 14658                           
 14659                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14660  080A  319B  231D  3188   	fcall	_OSCILLATOR_Initialize
 14661                           
 14662                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
 14663  080D  319A  22EB  3188   	fcall	_WDT_Initialize
 14664                           
 14665                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 14666  0810  319D  25BE         	fcall	_TMR1_Initialize
 14667  0812  0008               	return
 14668  0813                     __end_of_SYSTEM_Initialize:
 14669                           
 14670                           	psect	text65
 14671  1AEB                     __ptext65:	
 14672 ;; *************** function _WDT_Initialize *****************
 14673 ;; Defined at:
 14674 ;;		line 70 in file "mcc_generated_files/mcc.c"
 14675 ;; Parameters:    Size  Location     Type
 14676 ;;		None
 14677 ;; Auto vars:     Size  Location     Type
 14678 ;;		None
 14679 ;; Return value:  Size  Location     Type
 14680 ;;                  1    wreg      void 
 14681 ;; Registers used:
 14682 ;;		wreg
 14683 ;; Tracked objects:
 14684 ;;		On entry : B1F/2
 14685 ;;		On exit  : B1F/1
 14686 ;;		Unchanged: B00/0
 14687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14692 ;;Total ram usage:        0 bytes
 14693 ;; Hardware stack levels used:    1
 14694 ;; Hardware stack levels required when called:    7
 14695 ;; This function calls:
 14696 ;;		Nothing
 14697 ;; This function is called by:
 14698 ;;		_SYSTEM_Initialize
 14699 ;; This function uses a non-reentrant model
 14700 ;;
 14701                           
 14702                           
 14703                           ;psect for function _WDT_Initialize
 14704  1AEB                     _WDT_Initialize:
 14705                           
 14706                           ;mcc_generated_files/mcc.c: 73:     WDTCON = 0x16;
 14707                           
 14708                           ;incstack = 0
 14709                           ; Regs used in _WDT_Initialize: [wreg]
 14710  1AEB  3016               	movlw	22
 14711  1AEC  0021               	movlb	1	; select bank1
 14712  1AED  0097               	movwf	23	;volatile
 14713  1AEE  0008               	return
 14714  1AEF                     __end_of_WDT_Initialize:
 14715                           
 14716                           	psect	text66
 14717  1DBE                     __ptext66:	
 14718 ;; *************** function _TMR1_Initialize *****************
 14719 ;; Defined at:
 14720 ;;		line 199 in file "mcc_generated_files/tmr1.c"
 14721 ;; Parameters:    Size  Location     Type
 14722 ;;		None
 14723 ;; Auto vars:     Size  Location     Type
 14724 ;;		None
 14725 ;; Return value:  Size  Location     Type
 14726 ;;                  1    wreg      void 
 14727 ;; Registers used:
 14728 ;;		wreg, status,2, status,0, pclath, cstack
 14729 ;; Tracked objects:
 14730 ;;		On entry : 1E/0
 14731 ;;		On exit  : 1F/0
 14732 ;;		Unchanged: 0/0
 14733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14738 ;;Total ram usage:        0 bytes
 14739 ;; Hardware stack levels used:    1
 14740 ;; Hardware stack levels required when called:    8
 14741 ;; This function calls:
 14742 ;;		_TMR1_SetInterruptHandler
 14743 ;; This function is called by:
 14744 ;;		_SYSTEM_Initialize
 14745 ;;		_main
 14746 ;; This function uses a non-reentrant model
 14747 ;;
 14748                           
 14749                           
 14750                           ;psect for function _TMR1_Initialize
 14751  1DBE                     _TMR1_Initialize:
 14752                           
 14753                           ;mcc_generated_files/tmr1.c: 204:     T1GCON = 0x00;
 14754                           
 14755                           ;incstack = 0
 14756                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14757  1DBE  0020               	movlb	0	; select bank0
 14758  1DBF  0199               	clrf	25	;volatile
 14759                           
 14760                           ;mcc_generated_files/tmr1.c: 207:     TMR1H = 0xE0;
 14761  1DC0  30E0               	movlw	224
 14762  1DC1  0097               	movwf	23	;volatile
 14763                           
 14764                           ;mcc_generated_files/tmr1.c: 210:     TMR1L = 0xDC;
 14765  1DC2  30DC               	movlw	220
 14766  1DC3  0096               	movwf	22	;volatile
 14767                           
 14768                           ;mcc_generated_files/tmr1.c: 213:     PIR1bits.TMR1IF = 0;
 14769  1DC4  1011               	bcf	17,0	;volatile
 14770                           
 14771                           ;mcc_generated_files/tmr1.c: 216:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 14772  1DC5  0817               	movf	23,w	;volatile
 14773  1DC6  0024               	movlb	4	; select bank4
 14774  1DC7  00EC               	movwf	(_timer1ReloadVal+1)^(0+512)	;volatile
 14775  1DC8  0020               	movlb	0	; select bank0
 14776  1DC9  0816               	movf	22,w	;volatile
 14777  1DCA  0024               	movlb	4	; select bank4
 14778  1DCB  00EB               	movwf	_timer1ReloadVal^(0+512)	;volatile
 14779                           
 14780                           ;mcc_generated_files/tmr1.c: 219:     PIE1bits.TMR1IE = 1;
 14781  1DCC  0021               	movlb	1	; select bank1
 14782  1DCD  1411               	bsf	17,0	;volatile
 14783                           
 14784                           ;mcc_generated_files/tmr1.c: 222:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHand
      +                          ler);
 14785  1DCE  30B2               	movlw	low _TMR1_DefaultInterruptHandler
 14786  1DCF  0020               	movlb	0	; select bank0
 14787  1DD0  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 14788  1DD1  3008               	movlw	high _TMR1_DefaultInterruptHandler
 14789  1DD2  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 14790  1DD3  319B  232C         	fcall	_TMR1_SetInterruptHandler
 14791                           
 14792                           ;mcc_generated_files/tmr1.c: 225:     T1CON = 0x01;
 14793  1DD5  3001               	movlw	1
 14794  1DD6  0020               	movlb	0	; select bank0
 14795  1DD7  0098               	movwf	24	;volatile
 14796  1DD8  0008               	return
 14797  1DD9                     __end_of_TMR1_Initialize:
 14798                           
 14799                           	psect	text67
 14800  1B2C                     __ptext67:	
 14801 ;; *************** function _TMR1_SetInterruptHandler *****************
 14802 ;; Defined at:
 14803 ;;		line 386 in file "mcc_generated_files/tmr1.c"
 14804 ;; Parameters:    Size  Location     Type
 14805 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 14806 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 14807 ;; Auto vars:     Size  Location     Type
 14808 ;;		None
 14809 ;; Return value:  Size  Location     Type
 14810 ;;                  1    wreg      void 
 14811 ;; Registers used:
 14812 ;;		wreg
 14813 ;; Tracked objects:
 14814 ;;		On entry : 1F/0
 14815 ;;		On exit  : 1F/4
 14816 ;;		Unchanged: 0/0
 14817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14818 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14822 ;;Total ram usage:        2 bytes
 14823 ;; Hardware stack levels used:    1
 14824 ;; Hardware stack levels required when called:    7
 14825 ;; This function calls:
 14826 ;;		Nothing
 14827 ;; This function is called by:
 14828 ;;		_TMR1_Initialize
 14829 ;; This function uses a non-reentrant model
 14830 ;;
 14831                           
 14832                           
 14833                           ;psect for function _TMR1_SetInterruptHandler
 14834  1B2C                     _TMR1_SetInterruptHandler:
 14835                           
 14836                           ;mcc_generated_files/tmr1.c: 387:     TMR1_InterruptHandler = InterruptHandler;
 14837                           
 14838                           ;incstack = 0
 14839                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 14840  1B2C  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 14841  1B2D  0024               	movlb	4	; select bank4
 14842  1B2E  00EA               	movwf	(_TMR1_InterruptHandler+1)^(0+512)
 14843  1B2F  0020               	movlb	0	; select bank0
 14844  1B30  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 14845  1B31  0024               	movlb	4	; select bank4
 14846  1B32  00E9               	movwf	_TMR1_InterruptHandler^(0+512)
 14847  1B33  0008               	return
 14848  1B34                     __end_of_TMR1_SetInterruptHandler:
 14849                           
 14850                           	psect	text68
 14851  1D8A                     __ptext68:	
 14852 ;; *************** function _PIN_MANAGER_Initialize *****************
 14853 ;; Defined at:
 14854 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 14855 ;; Parameters:    Size  Location     Type
 14856 ;;		None
 14857 ;; Auto vars:     Size  Location     Type
 14858 ;;		None
 14859 ;; Return value:  Size  Location     Type
 14860 ;;                  1    wreg      void 
 14861 ;; Registers used:
 14862 ;;		wreg, status,2
 14863 ;; Tracked objects:
 14864 ;;		On entry : B1F/4
 14865 ;;		On exit  : B1F/2
 14866 ;;		Unchanged: B00/0
 14867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14872 ;;Total ram usage:        0 bytes
 14873 ;; Hardware stack levels used:    1
 14874 ;; Hardware stack levels required when called:    7
 14875 ;; This function calls:
 14876 ;;		Nothing
 14877 ;; This function is called by:
 14878 ;;		_SYSTEM_Initialize
 14879 ;; This function uses a non-reentrant model
 14880 ;;
 14881                           
 14882                           
 14883                           ;psect for function _PIN_MANAGER_Initialize
 14884  1D8A                     _PIN_MANAGER_Initialize:
 14885                           
 14886                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 14887                           
 14888                           ;incstack = 0
 14889                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 14890  1D8A  0022               	movlb	2	; select bank2
 14891  1D8B  018C               	clrf	12	;volatile
 14892                           
 14893                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
 14894  1D8C  018D               	clrf	13	;volatile
 14895                           
 14896                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 14897  1D8D  018E               	clrf	14	;volatile
 14898                           
 14899                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x38;
 14900  1D8E  3038               	movlw	56
 14901  1D8F  0021               	movlb	1	; select bank1
 14902  1D90  008C               	movwf	12	;volatile
 14903                           
 14904                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 14905  1D91  3070               	movlw	112
 14906  1D92  008D               	movwf	13	;volatile
 14907                           
 14908                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
 14909  1D93  018E               	clrf	14	;volatile
 14910                           
 14911                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
 14912  1D94  0023               	movlb	3	; select bank3
 14913  1D95  018E               	clrf	14	;volatile
 14914                           
 14915                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
 14916  1D96  018D               	clrf	13	;volatile
 14917                           
 14918                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
 14919  1D97  018C               	clrf	12	;volatile
 14920                           
 14921                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x70;
 14922  1D98  3070               	movlw	112
 14923  1D99  0024               	movlb	4	; select bank4
 14924  1D9A  008D               	movwf	13	;volatile
 14925                           
 14926                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x38;
 14927  1D9B  3038               	movlw	56
 14928  1D9C  008C               	movwf	12	;volatile
 14929                           
 14930                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 14931  1D9D  018E               	clrf	14	;volatile
 14932                           
 14933                           ;mcc_generated_files/pin_manager.c: 84:     OPTION_REGbits.nWPUEN = 1;
 14934  1D9E  0021               	movlb	1	; select bank1
 14935  1D9F  1795               	bsf	21,7	;volatile
 14936                           
 14937                           ;mcc_generated_files/pin_manager.c: 90:     APFCON0 = 0x00;
 14938  1DA0  0022               	movlb	2	; select bank2
 14939  1DA1  019D               	clrf	29	;volatile
 14940                           
 14941                           ;mcc_generated_files/pin_manager.c: 91:     APFCON1 = 0x00;
 14942  1DA2  019E               	clrf	30	;volatile
 14943  1DA3  0008               	return
 14944  1DA4                     __end_of_PIN_MANAGER_Initialize:
 14945                           
 14946                           	psect	text69
 14947  1B1D                     __ptext69:	
 14948 ;; *************** function _OSCILLATOR_Initialize *****************
 14949 ;; Defined at:
 14950 ;;		line 60 in file "mcc_generated_files/mcc.c"
 14951 ;; Parameters:    Size  Location     Type
 14952 ;;		None
 14953 ;; Auto vars:     Size  Location     Type
 14954 ;;		None
 14955 ;; Return value:  Size  Location     Type
 14956 ;;                  1    wreg      void 
 14957 ;; Registers used:
 14958 ;;		wreg, status,2
 14959 ;; Tracked objects:
 14960 ;;		On entry : B1F/2
 14961 ;;		On exit  : B1F/2
 14962 ;;		Unchanged: B00/0
 14963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14968 ;;Total ram usage:        0 bytes
 14969 ;; Hardware stack levels used:    1
 14970 ;; Hardware stack levels required when called:    7
 14971 ;; This function calls:
 14972 ;;		Nothing
 14973 ;; This function is called by:
 14974 ;;		_SYSTEM_Initialize
 14975 ;; This function uses a non-reentrant model
 14976 ;;
 14977                           
 14978                           
 14979                           ;psect for function _OSCILLATOR_Initialize
 14980  1B1D                     _OSCILLATOR_Initialize:
 14981                           
 14982                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x78;
 14983                           
 14984                           ;incstack = 0
 14985                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 14986  1B1D  3078               	movlw	120
 14987  1B1E  0021               	movlb	1	; select bank1
 14988  1B1F  0099               	movwf	25	;volatile
 14989                           
 14990                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
 14991  1B20  0198               	clrf	24	;volatile
 14992                           
 14993                           ;mcc_generated_files/mcc.c: 67:     BORCON = 0x00;
 14994  1B21  0022               	movlb	2	; select bank2
 14995  1B22  0196               	clrf	22	;volatile
 14996  1B23  0008               	return
 14997  1B24                     __end_of_OSCILLATOR_Initialize:
 14998                           
 14999                           	psect	text70
 15000  1000                     __ptext70:	
 15001 ;; *************** function _I2C1_Initialize *****************
 15002 ;; Defined at:
 15003 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 15004 ;; Parameters:    Size  Location     Type
 15005 ;;		None
 15006 ;; Auto vars:     Size  Location     Type
 15007 ;;		None
 15008 ;; Return value:  Size  Location     Type
 15009 ;;                  1    wreg      void 
 15010 ;; Registers used:
 15011 ;;		wreg, status,2
 15012 ;; Tracked objects:
 15013 ;;		On entry : B1F/0
 15014 ;;		On exit  : B1F/4
 15015 ;;		Unchanged: B00/0
 15016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15021 ;;Total ram usage:        0 bytes
 15022 ;; Hardware stack levels used:    1
 15023 ;; Hardware stack levels required when called:    7
 15024 ;; This function calls:
 15025 ;;		Nothing
 15026 ;; This function is called by:
 15027 ;;		_SYSTEM_Initialize
 15028 ;; This function uses a non-reentrant model
 15029 ;;
 15030                           
 15031                           
 15032                           ;psect for function _I2C1_Initialize
 15033  1000                     _I2C1_Initialize:
 15034                           
 15035                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 15036                           
 15037                           ;incstack = 0
 15038                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 15039  1000  0024               	movlb	4	; select bank4
 15040  1001  0194               	clrf	20	;volatile
 15041                           
 15042                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 15043  1002  3008               	movlw	8
 15044  1003  0095               	movwf	21	;volatile
 15045                           
 15046                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 15047  1004  0196               	clrf	22	;volatile
 15048                           
 15049                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x27;
 15050  1005  3027               	movlw	39
 15051  1006  0092               	movwf	18	;volatile
 15052                           
 15053                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 15054  1007  1295               	bcf	21,5	;volatile
 15055  1008  0008               	return
 15056  1009                     __end_of_I2C1_Initialize:
 15057                           
 15058                           	psect	text71
 15059  1E6C                     __ptext71:	
 15060 ;; *************** function _DATAEE_WriteByte *****************
 15061 ;; Defined at:
 15062 ;;		line 187 in file "mcc_generated_files/memory.c"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;  bAdd            1    wreg     unsigned char 
 15065 ;;  bData           1    9[BANK0 ] unsigned char 
 15066 ;; Auto vars:     Size  Location     Type
 15067 ;;  bAdd            1   10[BANK0 ] unsigned char 
 15068 ;;  GIEBitValue     1   11[BANK0 ] unsigned char 
 15069 ;; Return value:  Size  Location     Type
 15070 ;;                  1    wreg      void 
 15071 ;; Registers used:
 15072 ;;		wreg, status,2, status,0
 15073 ;; Tracked objects:
 15074 ;;		On entry : 1F/0
 15075 ;;		On exit  : 1F/0
 15076 ;;		Unchanged: 0/0
 15077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15078 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15079 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15081 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15082 ;;Total ram usage:        3 bytes
 15083 ;; Hardware stack levels used:    1
 15084 ;; Hardware stack levels required when called:    7
 15085 ;; This function calls:
 15086 ;;		Nothing
 15087 ;; This function is called by:
 15088 ;;		_main
 15089 ;; This function uses a non-reentrant model
 15090 ;;
 15091                           
 15092                           
 15093                           ;psect for function _DATAEE_WriteByte
 15094  1E6C                     _DATAEE_WriteByte:
 15095                           
 15096                           ;incstack = 0
 15097                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 15098                           ;DATAEE_WriteByte@bAdd stored from wreg
 15099  1E6C  00AA               	movwf	DATAEE_WriteByte@bAdd
 15100                           
 15101                           ;mcc_generated_files/memory.c: 191:     EEADRL = (uint8_t)(bAdd & 0x0ff);
 15102  1E6D  082A               	movf	DATAEE_WriteByte@bAdd,w
 15103  1E6E  0023               	movlb	3	; select bank3
 15104  1E6F  0091               	movwf	17	;volatile
 15105                           
 15106                           ;mcc_generated_files/memory.c: 192:     EEDATL = bData;
 15107  1E70  0020               	movlb	0	; select bank0
 15108  1E71  0829               	movf	DATAEE_WriteByte@bData,w
 15109  1E72  0023               	movlb	3	; select bank3
 15110  1E73  0093               	movwf	19	;volatile
 15111                           
 15112                           ;mcc_generated_files/memory.c: 193:     EECON1bits.EEPGD = 0;
 15113  1E74  1395               	bcf	21,7	;volsfr
 15114                           
 15115                           ;mcc_generated_files/memory.c: 194:     EECON1bits.CFGS = 0;
 15116  1E75  1315               	bcf	21,6	;volsfr
 15117                           
 15118                           ;mcc_generated_files/memory.c: 195:     EECON1bits.WREN = 1;
 15119  1E76  1515               	bsf	21,2	;volsfr
 15120                           
 15121                           ;mcc_generated_files/memory.c: 197:     GIEBitValue = INTCONbits.GIE;
 15122  1E77  3000               	movlw	0
 15123  1E78  1B8B               	btfsc	11,7	;volatile
 15124  1E79  3001               	movlw	1
 15125  1E7A  0020               	movlb	0	; select bank0
 15126  1E7B  00AB               	movwf	DATAEE_WriteByte@GIEBitValue
 15127                           
 15128                           ;mcc_generated_files/memory.c: 198:     INTCONbits.GIE = 0;
 15129  1E7C  138B               	bcf	11,7	;volatile
 15130                           
 15131                           ;mcc_generated_files/memory.c: 199:     EECON2 = 0x55;
 15132  1E7D  3055               	movlw	85
 15133  1E7E  0023               	movlb	3	; select bank3
 15134  1E7F  0096               	movwf	22	;volsfr
 15135                           
 15136                           ;mcc_generated_files/memory.c: 200:     EECON2 = 0xAA;
 15137  1E80  30AA               	movlw	170
 15138  1E81  0096               	movwf	22	;volsfr
 15139                           
 15140                           ;mcc_generated_files/memory.c: 201:     EECON1bits.WR = 1;
 15141  1E82  1495               	bsf	21,1	;volsfr
 15142  1E83                     l917:	
 15143                           ;mcc_generated_files/memory.c: 204:     {;mcc_generated_files/memory.c: 205:     }
 15144                           
 15145                           
 15146                           ;mcc_generated_files/memory.c: 203:     while (EECON1bits.WR)
 15147  1E83  1895               	btfsc	21,1	;volsfr
 15148  1E84  2E83               	goto	l917
 15149                           
 15150                           ;mcc_generated_files/memory.c: 207:     EECON1bits.WREN = 0;
 15151  1E85  1115               	bcf	21,2	;volsfr
 15152                           
 15153                           ;mcc_generated_files/memory.c: 208:     INTCONbits.GIE = GIEBitValue;
 15154  1E86  0020               	movlb	0	; select bank0
 15155  1E87  0C2B               	rrf	DATAEE_WriteByte@GIEBitValue,w
 15156  1E88  1C03               	skipc
 15157  1E89  138B               	bcf	11,7	;volatile
 15158  1E8A  1803               	skipnc
 15159  1E8B  178B               	bsf	11,7	;volatile
 15160  1E8C  0008               	return
 15161  1E8D                     __end_of_DATAEE_WriteByte:
 15162                           
 15163                           	psect	text72
 15164  1B77                     __ptext72:	
 15165 ;; *************** function _DATAEE_ReadByte *****************
 15166 ;; Defined at:
 15167 ;;		line 211 in file "mcc_generated_files/memory.c"
 15168 ;; Parameters:    Size  Location     Type
 15169 ;;  bAdd            1    wreg     unsigned char 
 15170 ;; Auto vars:     Size  Location     Type
 15171 ;;  bAdd            1    3[BANK0 ] unsigned char 
 15172 ;; Return value:  Size  Location     Type
 15173 ;;                  1    wreg      unsigned char 
 15174 ;; Registers used:
 15175 ;;		wreg
 15176 ;; Tracked objects:
 15177 ;;		On entry : 1C/0
 15178 ;;		On exit  : 1F/3
 15179 ;;		Unchanged: 0/0
 15180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15182 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15184 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15185 ;;Total ram usage:        1 bytes
 15186 ;; Hardware stack levels used:    1
 15187 ;; Hardware stack levels required when called:    7
 15188 ;; This function calls:
 15189 ;;		Nothing
 15190 ;; This function is called by:
 15191 ;;		_main
 15192 ;; This function uses a non-reentrant model
 15193 ;;
 15194                           
 15195                           
 15196                           ;psect for function _DATAEE_ReadByte
 15197  1B77                     _DATAEE_ReadByte:
 15198                           
 15199                           ;incstack = 0
 15200                           ; Regs used in _DATAEE_ReadByte: [wreg]
 15201                           ;DATAEE_ReadByte@bAdd stored from wreg
 15202  1B77  0020               	movlb	0	; select bank0
 15203  1B78  00A3               	movwf	DATAEE_ReadByte@bAdd
 15204                           
 15205                           ;mcc_generated_files/memory.c: 211: uint8_t DATAEE_ReadByte(uint8_t bAdd);mcc_generated_
      +                          files/memory.c: 212: {;mcc_generated_files/memory.c: 213:     EEADRL = (uint8_t)(bAdd & 
      +                          0x0ff);
 15206  1B79  0823               	movf	DATAEE_ReadByte@bAdd,w
 15207  1B7A  0023               	movlb	3	; select bank3
 15208  1B7B  0091               	movwf	17	;volatile
 15209                           
 15210                           ;mcc_generated_files/memory.c: 214:     EECON1bits.CFGS = 0;
 15211  1B7C  1315               	bcf	21,6	;volsfr
 15212                           
 15213                           ;mcc_generated_files/memory.c: 215:     EECON1bits.EEPGD = 0;
 15214  1B7D  1395               	bcf	21,7	;volsfr
 15215                           
 15216                           ;mcc_generated_files/memory.c: 216:     EECON1bits.RD = 1;
 15217  1B7E  1415               	bsf	21,0	;volsfr
 15218                           
 15219                           ;mcc_generated_files/memory.c: 217:     __nop();
 15220  1B7F  0000               	nop
 15221                           
 15222                           ;mcc_generated_files/memory.c: 218:     __nop();
 15223  1B80  0000               	nop
 15224                           
 15225                           ;mcc_generated_files/memory.c: 220:     return (EEDATL);
 15226  1B81  0023               	movlb	3	; select bank3
 15227  1B82  0813               	movf	19,w	;volatile
 15228  1B83  0008               	return
 15229  1B84                     __end_of_DATAEE_ReadByte:
 15230                           
 15231                           	psect	intentry
 15232  0004                     __pintentry:	
 15233 ;; *************** function _INTERRUPT_InterruptManager *****************
 15234 ;; Defined at:
 15235 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15236 ;; Parameters:    Size  Location     Type
 15237 ;;		None
 15238 ;; Auto vars:     Size  Location     Type
 15239 ;;		None
 15240 ;; Return value:  Size  Location     Type
 15241 ;;                  1    wreg      void 
 15242 ;; Registers used:
 15243 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15244 ;; Tracked objects:
 15245 ;;		On entry : 0/0
 15246 ;;		On exit  : 0/0
 15247 ;;		Unchanged: 0/0
 15248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15253 ;;Total ram usage:        0 bytes
 15254 ;; Hardware stack levels used:    1
 15255 ;; Hardware stack levels required when called:    6
 15256 ;; This function calls:
 15257 ;;		Absolute function
 15258 ;;		_I2C1_MasterIsr
 15259 ;;		_TMR1_ISR
 15260 ;; This function is called by:
 15261 ;;		Interrupt level 1
 15262 ;; This function uses a non-reentrant model
 15263 ;;
 15264                           
 15265  0004                     _INTERRUPT_InterruptManager:
 15266                           
 15267                           ;incstack = 0
 15268  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 15269                           
 15270                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15271  0005  3180               	pagesel	$
 15272                           
 15273                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 15274  0006  1F0B               	btfss	11,6	;volatile
 15275  0007  2823               	goto	i1l808
 15276                           
 15277                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 15278  0008  0021               	movlb	1	; select bank1
 15279  0009  1C11               	btfss	17,0	;volatile
 15280  000A  2812               	goto	i1l801
 15281  000B  0020               	movlb	0	; select bank0
 15282  000C  1C11               	btfss	17,0	;volatile
 15283  000D  2812               	goto	i1l801
 15284                           
 15285                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 15286  000E  319B  23BB  3180   	fcall	_TMR1_ISR
 15287                           
 15288                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 15289  0011  2823               	goto	i1l808
 15290  0012                     i1l801:	
 15291                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE2bits.BCL1IE == 1 && PI
      +                          R2bits.BCL1IF == 1)
 15292                           
 15293  0012  0021               	movlb	1	; select bank1
 15294  0013  1992               	btfsc	18,3	;volatile
 15295  0014  0020               	movlb	0	; select bank0
 15296  0015  1992               	btfsc	18,3	;volatile
 15297  0016  281D               	goto	i1l7577
 15298                           
 15299                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
 15300                           
 15301                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 15302  0017  0021               	movlb	1	; select bank1
 15303  0018  1D91               	btfss	17,3	;volatile
 15304  0019  2823               	goto	i1l808
 15305  001A  0020               	movlb	0	; select bank0
 15306  001B  1D91               	btfss	17,3	;volatile
 15307  001C  2823               	goto	i1l808
 15308  001D                     i1l7577:
 15309                           
 15310                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
 15311  001D  0022               	movlb	2	; select bank2
 15312  001E  082F               	movf	(_MSSP1_InterruptHandler+1)^(0+256),w
 15313  001F  008A               	movwf	10
 15314  0020  082E               	movf	_MSSP1_InterruptHandler^(0+256),w
 15315  0021  000A               	callw
 15316  0022  3180               	pagesel	$
 15317  0023                     i1l808:	
 15318                           ;mcc_generated_files/interrupt_manager.c: 73:     }
 15319                           
 15320  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 15321  0024  0009               	retfie
 15322  0025                     __end_of_INTERRUPT_InterruptManager:
 15323                           
 15324                           	psect	text74
 15325  1BBB                     __ptext74:	
 15326 ;; *************** function _TMR1_ISR *****************
 15327 ;; Defined at:
 15328 ;;		line 371 in file "mcc_generated_files/tmr1.c"
 15329 ;; Parameters:    Size  Location     Type
 15330 ;;		None
 15331 ;; Auto vars:     Size  Location     Type
 15332 ;;		None
 15333 ;; Return value:  Size  Location     Type
 15334 ;;                  1    wreg      void 
 15335 ;; Registers used:
 15336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15337 ;; Tracked objects:
 15338 ;;		On entry : 1F/0
 15339 ;;		On exit  : 0/0
 15340 ;;		Unchanged: 0/0
 15341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15346 ;;Total ram usage:        0 bytes
 15347 ;; Hardware stack levels used:    1
 15348 ;; Hardware stack levels required when called:    2
 15349 ;; This function calls:
 15350 ;;		Absolute function
 15351 ;;		_TMR1_DefaultInterruptHandler
 15352 ;;		_TMR1_WriteTimer
 15353 ;; This function is called by:
 15354 ;;		_INTERRUPT_InterruptManager
 15355 ;; This function uses a non-reentrant model
 15356 ;;
 15357                           
 15358                           
 15359                           ;psect for function _TMR1_ISR
 15360  1BBB                     _TMR1_ISR:
 15361                           
 15362                           ;mcc_generated_files/tmr1.c: 374:     PIR1bits.TMR1IF = 0;
 15363                           
 15364                           ;incstack = 0
 15365                           ; Regs used in _TMR1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 15366  1BBB  1011               	bcf	17,0	;volatile
 15367                           
 15368                           ;mcc_generated_files/tmr1.c: 375:     TMR1_WriteTimer(timer1ReloadVal);
 15369  1BBC  0024               	movlb	4	; select bank4
 15370  1BBD  086C               	movf	(_timer1ReloadVal+1)^(0+512),w	;volatile
 15371  1BBE  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15372  1BBF  086B               	movf	_timer1ReloadVal^(0+512),w	;volatile
 15373  1BC0  00F0               	movwf	TMR1_WriteTimer@timerVal
 15374  1BC1  319B  23AC  319B   	fcall	_TMR1_WriteTimer
 15375                           
 15376                           ;mcc_generated_files/tmr1.c: 377:     if(TMR1_InterruptHandler)
 15377  1BC4  0024               	movlb	4	; select bank4
 15378  1BC5  0869               	movf	_TMR1_InterruptHandler^(0+512),w
 15379  1BC6  046A               	iorwf	(_TMR1_InterruptHandler+1)^(0+512),w
 15380  1BC7  1903               	btfsc	3,2
 15381  1BC8  0008               	return
 15382                           
 15383                           ;mcc_generated_files/tmr1.c: 378:         {;mcc_generated_files/tmr1.c: 379:         TMR
      +                          1_InterruptHandler();
 15384  1BC9  086A               	movf	(_TMR1_InterruptHandler+1)^(0+512),w
 15385  1BCA  008A               	movwf	10
 15386  1BCB  0869               	movf	_TMR1_InterruptHandler^(0+512),w
 15387  1BCC  000A               	callw
 15388  1BCD  319B               	pagesel	$
 15389  1BCE  0008               	return
 15390  1BCF                     __end_of_TMR1_ISR:
 15391                           
 15392                           	psect	text75
 15393  1BAC                     __ptext75:	
 15394 ;; *************** function _TMR1_WriteTimer *****************
 15395 ;; Defined at:
 15396 ;;		line 257 in file "mcc_generated_files/tmr1.c"
 15397 ;; Parameters:    Size  Location     Type
 15398 ;;  timerVal        2    0[COMMON] unsigned short 
 15399 ;; Auto vars:     Size  Location     Type
 15400 ;;		None
 15401 ;; Return value:  Size  Location     Type
 15402 ;;                  1    wreg      void 
 15403 ;; Registers used:
 15404 ;;		wreg
 15405 ;; Tracked objects:
 15406 ;;		On entry : 1F/4
 15407 ;;		On exit  : 1F/0
 15408 ;;		Unchanged: 0/0
 15409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15410 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15413 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15414 ;;Total ram usage:        2 bytes
 15415 ;; Hardware stack levels used:    1
 15416 ;; This function calls:
 15417 ;;		Nothing
 15418 ;; This function is called by:
 15419 ;;		_TMR1_ISR
 15420 ;; This function uses a non-reentrant model
 15421 ;;
 15422                           
 15423                           
 15424                           ;psect for function _TMR1_WriteTimer
 15425  1BAC                     _TMR1_WriteTimer:
 15426                           
 15427                           ;mcc_generated_files/tmr1.c: 257: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 258: {;mcc_generated_files/tmr1.c: 259:     if (T1CONbits.nT1SYNC == 1)
 15428                           
 15429                           ;incstack = 0
 15430                           ; Regs used in _TMR1_WriteTimer: [wreg]
 15431  1BAC  0020               	movlb	0	; select bank0
 15432  1BAD  1D18               	btfss	24,2	;volatile
 15433  1BAE  2BB6               	goto	i1l5421
 15434                           
 15435                           ;mcc_generated_files/tmr1.c: 260:     {;mcc_generated_files/tmr1.c: 262:         T1CONbi
      +                          ts.TMR1ON = 0;
 15436  1BAF  1018               	bcf	24,0	;volatile
 15437                           
 15438                           ;mcc_generated_files/tmr1.c: 265:         TMR1H = (timerVal >> 8);
 15439  1BB0  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15440  1BB1  0097               	movwf	23	;volatile
 15441                           
 15442                           ;mcc_generated_files/tmr1.c: 266:         TMR1L = timerVal;
 15443  1BB2  0870               	movf	TMR1_WriteTimer@timerVal,w
 15444  1BB3  0096               	movwf	22	;volatile
 15445                           
 15446                           ;mcc_generated_files/tmr1.c: 269:         T1CONbits.TMR1ON =1;
 15447  1BB4  1418               	bsf	24,0	;volatile
 15448                           
 15449                           ;mcc_generated_files/tmr1.c: 270:     }
 15450  1BB5  0008               	return
 15451  1BB6                     i1l5421:
 15452                           
 15453                           ;mcc_generated_files/tmr1.c: 272:     {;mcc_generated_files/tmr1.c: 274:         TMR1H =
      +                           (timerVal >> 8);
 15454  1BB6  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15455  1BB7  0097               	movwf	23	;volatile
 15456                           
 15457                           ;mcc_generated_files/tmr1.c: 275:         TMR1L = timerVal;
 15458  1BB8  0870               	movf	TMR1_WriteTimer@timerVal,w
 15459  1BB9  0096               	movwf	22	;volatile
 15460  1BBA  0008               	return
 15461  1BBB                     __end_of_TMR1_WriteTimer:
 15462                           
 15463                           	psect	text76
 15464  08B2                     __ptext76:	
 15465 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15466 ;; Defined at:
 15467 ;;		line 391 in file "mcc_generated_files/tmr1.c"
 15468 ;; Parameters:    Size  Location     Type
 15469 ;;		None
 15470 ;; Auto vars:     Size  Location     Type
 15471 ;;		None
 15472 ;; Return value:  Size  Location     Type
 15473 ;;                  1    wreg      void 
 15474 ;; Registers used:
 15475 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 15476 ;; Tracked objects:
 15477 ;;		On entry : 1F/4
 15478 ;;		On exit  : 1F/2
 15479 ;;		Unchanged: 0/0
 15480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15483 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15484 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15485 ;;Total ram usage:        2 bytes
 15486 ;; Hardware stack levels used:    1
 15487 ;; Hardware stack levels required when called:    1
 15488 ;; This function calls:
 15489 ;;		_get7seg_font
 15490 ;;		_read_clickRE
 15491 ;; This function is called by:
 15492 ;;		_TMR1_Initialize
 15493 ;;		_TMR1_ISR
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           
 15498                           ;psect for function _TMR1_DefaultInterruptHandler
 15499  08B2                     _TMR1_DefaultInterruptHandler:
 15500                           
 15501                           ;mcc_generated_files/tmr1.c: 395: static unsigned char led_blink[]={0, 0, 0};;mcc_genera
      +                          ted_files/tmr1.c: 396: static unsigned char intcnt;;mcc_generated_files/tmr1.c: 397: sta
      +                          tic unsigned int pushcnt = 0;;mcc_generated_files/tmr1.c: 398: static unsigned char push
      +                          stat = 0;;mcc_generated_files/tmr1.c: 399: static signed char RE_offset;;mcc_generated_f
      +                          iles/tmr1.c: 401: switch ( intcnt++)
 15502                           
 15503                           ;incstack = 0
 15504                           ; Regs used in _TMR1_DefaultInterruptHandler: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 15505  08B2  28E9               	goto	i1l5439
 15506  08B3                     i1l377:	
 15507                           ;mcc_generated_files/tmr1.c: 404:             {;mcc_generated_files/tmr1.c: 405:        
      +                                do { LATAbits.LATA2 = 0; } while(0);
 15508                           
 15509  08B3  110C               	bcf	12,2	;volatile
 15510                           
 15511                           ;mcc_generated_files/tmr1.c: 406:              if(led_blink[0] < 0xc0)
 15512  08B4  30C0               	movlw	192
 15513  08B5  0220               	subwf	TMR1_DefaultInterruptHandler@led_blink^(0+256),w
 15514  08B6  1803               	skipnc
 15515  08B7  28BA               	goto	i1l383
 15516                           
 15517                           ;mcc_generated_files/tmr1.c: 407:                     do { LATAbits.LATA0 = 1; } while(0
      +                          );
 15518  08B8  140C               	bsf	12,0	;volatile
 15519  08B9  28BB               	goto	i1l5427
 15520  08BA                     i1l383:
 15521  08BA  100C               	bcf	12,0	;volatile
 15522  08BB                     i1l5427:
 15523                           
 15524                           ;mcc_generated_files/tmr1.c: 409:             PORTC = led_dot[0] & get7seg_font(ledbuff[
      +                          0]);
 15525  08BB  0024               	movlb	4	; select bank4
 15526  08BC  0835               	movf	_ledbuff^(0+512),w
 15527  08BD  319C  24C9  3188   	fcall	_get7seg_font
 15528  08C0  0023               	movlb	3	; select bank3
 15529  08C1  0520               	andwf	_led_dot^(0+384),w
 15530  08C2  28D2               	goto	L9
 15531  08C3                     i1l387:	
 15532                           ;mcc_generated_files/tmr1.c: 413:            {;mcc_generated_files/tmr1.c: 414:         
      +                             do { LATAbits.LATA0 = 0; } while(0);
 15533                           
 15534                           ;mcc_generated_files/tmr1.c: 410:             break;
 15535                           
 15536  08C3  100C               	bcf	12,0	;volatile
 15537                           
 15538                           ;mcc_generated_files/tmr1.c: 415:            if(led_blink[1] < 0xc0)
 15539  08C4  30C0               	movlw	192
 15540  08C5  0221               	subwf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+1),w
 15541  08C6  1803               	skipnc
 15542  08C7  28CA               	goto	i1l393
 15543                           
 15544                           ;mcc_generated_files/tmr1.c: 416:                       do { LATAbits.LATA1 = 1; } while
      +                          (0);
 15545  08C8  148C               	bsf	12,1	;volatile
 15546  08C9  28CB               	goto	i1l5431
 15547  08CA                     i1l393:
 15548  08CA  108C               	bcf	12,1	;volatile
 15549  08CB                     i1l5431:
 15550                           
 15551                           ;mcc_generated_files/tmr1.c: 418:             PORTC = led_dot[1] & get7seg_font(ledbuff[
      +                          1]);
 15552  08CB  0024               	movlb	4	; select bank4
 15553  08CC  0836               	movf	(_ledbuff^(0+512)+1),w
 15554  08CD  319C  24C9  3188   	fcall	_get7seg_font
 15555  08D0  0023               	movlb	3	; select bank3
 15556  08D1  0521               	andwf	(_led_dot^(0+384)+1),w
 15557  08D2                     L9:
 15558  08D2  0020               	movlb	0	; select bank0
 15559  08D3  008E               	movwf	14	;volatile
 15560                           
 15561                           ;mcc_generated_files/tmr1.c: 419:             break;
 15562  08D4  28FE               	goto	i1l5441
 15563  08D5                     i1l396:	
 15564                           ;mcc_generated_files/tmr1.c: 422:            {;mcc_generated_files/tmr1.c: 423:         
      +                             do { LATAbits.LATA1 = 0; } while(0);
 15565                           
 15566  08D5  108C               	bcf	12,1	;volatile
 15567                           
 15568                           ;mcc_generated_files/tmr1.c: 424:            if(led_blink[0] < 0xc0)
 15569  08D6  30C0               	movlw	192
 15570  08D7  0220               	subwf	TMR1_DefaultInterruptHandler@led_blink^(0+256),w
 15571  08D8  1803               	skipnc
 15572  08D9  28DC               	goto	i1l402
 15573                           
 15574                           ;mcc_generated_files/tmr1.c: 425:                       do { LATAbits.LATA2 = 1; } while
      +                          (0);
 15575  08DA  150C               	bsf	12,2	;volatile
 15576  08DB  28DD               	goto	i1l5435
 15577  08DC                     i1l402:
 15578  08DC  110C               	bcf	12,2	;volatile
 15579  08DD                     i1l5435:
 15580                           
 15581                           ;mcc_generated_files/tmr1.c: 427:             PORTC = led_dot[2] & get7seg_font(ledbuff[
      +                          2]);
 15582  08DD  0024               	movlb	4	; select bank4
 15583  08DE  0837               	movf	(_ledbuff^(0+512)+2),w
 15584  08DF  319C  24C9  3188   	fcall	_get7seg_font
 15585  08E2  0023               	movlb	3	; select bank3
 15586  08E3  0522               	andwf	(_led_dot^(0+384)+2),w
 15587  08E4  0020               	movlb	0	; select bank0
 15588  08E5  008E               	movwf	14	;volatile
 15589  08E6                     i1l5437:
 15590                           
 15591                           ;mcc_generated_files/tmr1.c: 430:           intcnt = 0;
 15592  08E6  0022               	movlb	2	; select bank2
 15593  08E7  01BC               	clrf	TMR1_DefaultInterruptHandler@intcnt^(0+256)
 15594                           
 15595                           ;mcc_generated_files/tmr1.c: 431:         }
 15596  08E8  28FE               	goto	i1l5441
 15597  08E9                     i1l5439:
 15598  08E9  0022               	movlb	2	; select bank2
 15599  08EA  083C               	movf	TMR1_DefaultInterruptHandler@intcnt^(0+256),w
 15600  08EB  0ABC               	incf	TMR1_DefaultInterruptHandler@intcnt^(0+256),f
 15601  08EC  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15602  08ED  01F6               	clrf	??_TMR1_DefaultInterruptHandler+1
 15603                           
 15604                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15605                           ; Switch size 1, requested type "simple"
 15606                           ; Number of cases is 1, Range of values is 0 to 0
 15607                           ; switch strategies available:
 15608                           ; Name         Instructions Cycles
 15609                           ; simple_byte            4     3 (average)
 15610                           ; direct_byte            8     6 (fixed)
 15611                           ; jumptable            260     6 (fixed)
 15612                           ;	Chosen strategy is simple_byte
 15613  08EE  0876               	movf	??_TMR1_DefaultInterruptHandler+1,w
 15614  08EF  3A00               	xorlw	0	; case 0
 15615  08F0  1903               	skipnz
 15616  08F1  28F3               	goto	i1l8043
 15617  08F2  28E6               	goto	i1l5437
 15618  08F3                     i1l8043:
 15619                           
 15620                           ; Switch size 1, requested type "simple"
 15621                           ; Number of cases is 3, Range of values is 0 to 2
 15622                           ; switch strategies available:
 15623                           ; Name         Instructions Cycles
 15624                           ; simple_byte           10     6 (average)
 15625                           ; direct_byte           12     6 (fixed)
 15626                           ; jumptable            260     6 (fixed)
 15627                           ;	Chosen strategy is simple_byte
 15628  08F3  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 15629  08F4  3A00               	xorlw	0	; case 0
 15630  08F5  1903               	skipnz
 15631  08F6  28B3               	goto	i1l377
 15632  08F7  3A01               	xorlw	1	; case 1
 15633  08F8  1903               	skipnz
 15634  08F9  28C3               	goto	i1l387
 15635  08FA  3A03               	xorlw	3	; case 2
 15636  08FB  1903               	skipnz
 15637  08FC  28D5               	goto	i1l396
 15638  08FD  28E6               	goto	i1l5437
 15639  08FE                     i1l5441:
 15640                           
 15641                           ;mcc_generated_files/tmr1.c: 432: RE_offset =read_clickRE();
 15642  08FE  3192  2237  3188   	fcall	_read_clickRE
 15643  0901  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15644  0902  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 15645  0903  00FD               	movwf	TMR1_DefaultInterruptHandler@RE_offset
 15646                           
 15647                           ;mcc_generated_files/tmr1.c: 433: if (RE_offset > 0)
 15648  0904  087D               	movf	TMR1_DefaultInterruptHandler@RE_offset,w
 15649  0905  3A80               	xorlw	128
 15650  0906  3E7F               	addlw	-129
 15651  0907  1C03               	skipc
 15652  0908  291F               	goto	i1l5453
 15653                           
 15654                           ;mcc_generated_files/tmr1.c: 434:          {;mcc_generated_files/tmr1.c: 435:          i
      +                          f (RE_pos > 247)
 15655  0909  30F8               	movlw	248
 15656  090A  0021               	movlb	1	; select bank1
 15657  090B  0269               	subwf	_RE_pos^(0+128),w
 15658  090C  1C03               	skipc
 15659  090D  291A               	goto	i1l5451
 15660                           
 15661                           ;mcc_generated_files/tmr1.c: 436:                 {;mcc_generated_files/tmr1.c: 437:    
      +                                       if (238> (unsigned char)(RE_pos + RE_offset))
 15662  090E  0869               	movf	_RE_pos^(0+128),w
 15663  090F  077D               	addwf	TMR1_DefaultInterruptHandler@RE_offset,w
 15664  0910  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15665  0911  30EE               	movlw	238
 15666  0912  0275               	subwf	??_TMR1_DefaultInterruptHandler,w
 15667  0913  1803               	skipnc
 15668  0914  292B               	goto	i1l409
 15669                           
 15670                           ;mcc_generated_files/tmr1.c: 438:                     RE_pos =255;
 15671  0915  30FF               	movlw	255
 15672  0916  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15673  0917  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 15674  0918  00E9               	movwf	_RE_pos^(0+128)
 15675  0919  292B               	goto	i1l409
 15676  091A                     i1l5451:
 15677  091A  087D               	movf	TMR1_DefaultInterruptHandler@RE_offset,w
 15678  091B  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15679  091C  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 15680  091D  07E9               	addwf	_RE_pos^(0+128),f
 15681  091E  292B               	goto	i1l409
 15682  091F                     i1l5453:
 15683                           
 15684                           ;mcc_generated_files/tmr1.c: 443:        {;mcc_generated_files/tmr1.c: 444:          if 
      +                          (RE_pos < 8)
 15685  091F  3008               	movlw	8
 15686  0920  0021               	movlb	1	; select bank1
 15687  0921  0269               	subwf	_RE_pos^(0+128),w
 15688  0922  1803               	skipnc
 15689  0923  291A               	goto	i1l5451
 15690                           
 15691                           ;mcc_generated_files/tmr1.c: 445:                 {;mcc_generated_files/tmr1.c: 446:    
      +                                       if (17 < (unsigned char)(RE_pos + RE_offset))
 15692  0924  0869               	movf	_RE_pos^(0+128),w
 15693  0925  077D               	addwf	TMR1_DefaultInterruptHandler@RE_offset,w
 15694  0926  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15695  0927  3012               	movlw	18
 15696  0928  0275               	subwf	??_TMR1_DefaultInterruptHandler,w
 15697  0929  1803               	btfsc	3,0
 15698                           
 15699                           ;mcc_generated_files/tmr1.c: 447:                     RE_pos =0;
 15700  092A  01E9               	clrf	_RE_pos^(0+128)
 15701  092B                     i1l409:	
 15702                           ;mcc_generated_files/tmr1.c: 451:         }
 15703                           
 15704                           
 15705                           ;mcc_generated_files/tmr1.c: 455:  if(blink_rate[0])
 15706  092B  0022               	movlb	2	; select bank2
 15707  092C  0823               	movf	_blink_rate^(0+256),w
 15708  092D  1903               	btfsc	3,2
 15709  092E  2934               	goto	i1l5463
 15710                           
 15711                           ;mcc_generated_files/tmr1.c: 456:          led_blink[0] += blink_rate[0];
 15712  092F  0823               	movf	_blink_rate^(0+256),w
 15713  0930  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15714  0931  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 15715  0932  07A0               	addwf	TMR1_DefaultInterruptHandler@led_blink^(0+256),f
 15716  0933  2935               	goto	i1l5465
 15717  0934                     i1l5463:
 15718  0934  01A0               	clrf	TMR1_DefaultInterruptHandler@led_blink^(0+256)
 15719  0935                     i1l5465:
 15720                           
 15721                           ;mcc_generated_files/tmr1.c: 458: if(blink_rate[1])
 15722  0935  0824               	movf	(_blink_rate^(0+256)+1),w
 15723  0936  1903               	btfsc	3,2
 15724  0937  293D               	goto	i1l5469
 15725                           
 15726                           ;mcc_generated_files/tmr1.c: 459:         led_blink[1] += blink_rate[1];
 15727  0938  0824               	movf	(_blink_rate^(0+256)+1),w
 15728  0939  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15729  093A  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 15730  093B  07A1               	addwf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+1),f
 15731  093C  293E               	goto	i1l5471
 15732  093D                     i1l5469:
 15733  093D  01A1               	clrf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+1)
 15734  093E                     i1l5471:
 15735                           
 15736                           ;mcc_generated_files/tmr1.c: 461: if(blink_rate[2])
 15737  093E  0825               	movf	(_blink_rate^(0+256)+2),w
 15738  093F  1903               	btfsc	3,2
 15739  0940  2946               	goto	i1l5475
 15740                           
 15741                           ;mcc_generated_files/tmr1.c: 462:         led_blink[2] += blink_rate[2];
 15742  0941  0825               	movf	(_blink_rate^(0+256)+2),w
 15743  0942  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15744  0943  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 15745  0944  07A2               	addwf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+2),f
 15746  0945  2947               	goto	i1l5477
 15747  0946                     i1l5475:
 15748  0946  01A2               	clrf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+2)
 15749  0947                     i1l5477:
 15750                           
 15751                           ;mcc_generated_files/tmr1.c: 465: if (PORTAbits.RA3 == 1)
 15752  0947  0020               	movlb	0	; select bank0
 15753  0948  1D8C               	btfss	12,3	;volatile
 15754  0949  2957               	goto	i1l5487
 15755                           
 15756                           ;mcc_generated_files/tmr1.c: 466:     {;mcc_generated_files/tmr1.c: 467:     if (pushsta
      +                          t !=0)
 15757  094A  0022               	movlb	2	; select bank2
 15758  094B  083B               	movf	TMR1_DefaultInterruptHandler@pushstat^(0+256),w
 15759  094C  1903               	btfsc	3,2
 15760  094D  2954               	goto	i1l5485
 15761                           
 15762                           ;mcc_generated_files/tmr1.c: 468:         {;mcc_generated_files/tmr1.c: 469:         but
      +                          ton1 = pushstat;
 15763  094E  083B               	movf	TMR1_DefaultInterruptHandler@pushstat^(0+256),w
 15764  094F  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15765  0950  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 15766  0951  00C1               	movwf	_button1^(0+256)
 15767                           
 15768                           ;mcc_generated_files/tmr1.c: 470:         pushstat = 0;
 15769  0952  01BB               	clrf	TMR1_DefaultInterruptHandler@pushstat^(0+256)
 15770                           
 15771                           ;mcc_generated_files/tmr1.c: 471:         }
 15772  0953  0008               	return
 15773  0954                     i1l5485:
 15774                           
 15775                           ;mcc_generated_files/tmr1.c: 473:         {;mcc_generated_files/tmr1.c: 474:          pu
      +                          shcnt =0;
 15776  0954  01AC               	clrf	TMR1_DefaultInterruptHandler@pushcnt^(0+256)
 15777  0955  01AD               	clrf	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256)
 15778  0956  0008               	return
 15779  0957                     i1l5487:
 15780                           
 15781                           ;mcc_generated_files/tmr1.c: 478:     {;mcc_generated_files/tmr1.c: 479:     ++pushcnt;
 15782  0957  3001               	movlw	1
 15783  0958  0022               	movlb	2	; select bank2
 15784  0959  07AC               	addwf	TMR1_DefaultInterruptHandler@pushcnt^(0+256),f
 15785  095A  3000               	movlw	0
 15786  095B  3DAD               	addwfc	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256),f
 15787                           
 15788                           ;mcc_generated_files/tmr1.c: 480:     if (pushcnt > 10)
 15789  095C  3000               	movlw	0
 15790  095D  022D               	subwf	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256),w
 15791  095E  300B               	movlw	11
 15792  095F  1903               	skipnz
 15793  0960  022C               	subwf	TMR1_DefaultInterruptHandler@pushcnt^(0+256),w
 15794  0961  1C03               	skipc
 15795  0962  0008               	return
 15796                           
 15797                           ;mcc_generated_files/tmr1.c: 481:         {;mcc_generated_files/tmr1.c: 482:         pus
      +                          hstat = 1;
 15798  0963  01BB               	clrf	TMR1_DefaultInterruptHandler@pushstat^(0+256)
 15799  0964  0ABB               	incf	TMR1_DefaultInterruptHandler@pushstat^(0+256),f
 15800                           
 15801                           ;mcc_generated_files/tmr1.c: 483:         if (pushcnt > 500)
 15802  0965  3001               	movlw	1
 15803  0966  022D               	subwf	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256),w
 15804  0967  30F5               	movlw	245
 15805  0968  1903               	skipnz
 15806  0969  022C               	subwf	TMR1_DefaultInterruptHandler@pushcnt^(0+256),w
 15807  096A  1C03               	skipc
 15808  096B  0008               	return
 15809                           
 15810                           ;mcc_generated_files/tmr1.c: 484:              pushstat = 2;
 15811  096C  3002               	movlw	2
 15812  096D  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 15813  096E  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 15814  096F  00BB               	movwf	TMR1_DefaultInterruptHandler@pushstat^(0+256)
 15815  0970  0008               	return
 15816  0971                     __end_of_TMR1_DefaultInterruptHandler:
 15817                           
 15818                           	psect	text77
 15819  1237                     __ptext77:	
 15820 ;; *************** function _read_clickRE *****************
 15821 ;; Defined at:
 15822 ;;		line 343 in file "mcc_generated_files/tmr1.c"
 15823 ;; Parameters:    Size  Location     Type
 15824 ;;		None
 15825 ;; Auto vars:     Size  Location     Type
 15826 ;;  current         1    4[COMMON] char 
 15827 ;; Return value:  Size  Location     Type
 15828 ;;                  1    wreg      char 
 15829 ;; Registers used:
 15830 ;;		wreg, status,2, status,0
 15831 ;; Tracked objects:
 15832 ;;		On entry : 1D/0
 15833 ;;		On exit  : 1F/2
 15834 ;;		Unchanged: 0/0
 15835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15837 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15839 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15840 ;;Total ram usage:        5 bytes
 15841 ;; Hardware stack levels used:    1
 15842 ;; This function calls:
 15843 ;;		Nothing
 15844 ;; This function is called by:
 15845 ;;		_TMR1_DefaultInterruptHandler
 15846 ;; This function uses a non-reentrant model
 15847 ;;
 15848                           
 15849                           
 15850                           ;psect for function _read_clickRE
 15851  1237                     _read_clickRE:
 15852                           
 15853                           ;mcc_generated_files/tmr1.c: 344:   static unsigned char index, interval;;mcc_generated_
      +                          files/tmr1.c: 345:      signed char current;;mcc_generated_files/tmr1.c: 347:      curre
      +                          nt = PORTAbits.RA5;
 15854                           
 15855                           ;incstack = 0
 15856                           ; Regs used in _read_clickRE: [wreg+status,2+status,0]
 15857  1237  3000               	movlw	0
 15858  1238  0020               	movlb	0	; select bank0
 15859  1239  1A8C               	btfsc	12,5	;volatile
 15860  123A  3001               	movlw	1
 15861  123B  00F4               	movwf	read_clickRE@current
 15862                           
 15863                           ;mcc_generated_files/tmr1.c: 348:    if((current != index) && (current== 0))
 15864  123C  0874               	movf	read_clickRE@current,w
 15865  123D  00F0               	movwf	??_read_clickRE
 15866  123E  01F1               	clrf	??_read_clickRE+1
 15867  123F  1BF0               	btfsc	??_read_clickRE,7
 15868  1240  03F1               	decf	??_read_clickRE+1,f
 15869  1241  0022               	movlb	2	; select bank2
 15870  1242  083E               	movf	read_clickRE@index^(0+256),w
 15871  1243  0670               	xorwf	??_read_clickRE,w
 15872  1244  0471               	iorwf	??_read_clickRE+1,w
 15873  1245  1903               	skipnz
 15874  1246  2A72               	goto	i1l5133
 15875  1247  0874               	movf	read_clickRE@current,w
 15876  1248  1D03               	btfss	3,2
 15877  1249  2A72               	goto	i1l5133
 15878                           
 15879                           ;mcc_generated_files/tmr1.c: 349:         {;mcc_generated_files/tmr1.c: 350:         ind
      +                          ex =current;
 15880  124A  0874               	movf	read_clickRE@current,w
 15881  124B  00F0               	movwf	??_read_clickRE
 15882  124C  0870               	movf	??_read_clickRE,w
 15883  124D  00BE               	movwf	read_clickRE@index^(0+256)
 15884                           
 15885                           ;mcc_generated_files/tmr1.c: 351:         current = PORTAbits.RA4 ? 1 : -1;
 15886  124E  0020               	movlb	0	; select bank0
 15887  124F  1A0C               	btfsc	12,4	;volatile
 15888  1250  2A55               	goto	i1l5123
 15889  1251  30FF               	movlw	255
 15890  1252  00F2               	movwf	_read_clickRE$509
 15891  1253  30FF               	movlw	255
 15892  1254  2A58               	goto	L10
 15893  1255                     i1l5123:
 15894  1255  3001               	movlw	1
 15895  1256  00F2               	movwf	_read_clickRE$509
 15896  1257  3000               	movlw	0
 15897  1258                     L10:
 15898  1258  00F3               	movwf	_read_clickRE$509+1
 15899  1259  0872               	movf	_read_clickRE$509,w
 15900  125A  00F0               	movwf	??_read_clickRE
 15901  125B  0870               	movf	??_read_clickRE,w
 15902  125C  00F4               	movwf	read_clickRE@current
 15903                           
 15904                           ;mcc_generated_files/tmr1.c: 352:         if (interval <5)
 15905  125D  3005               	movlw	5
 15906  125E  0022               	movlb	2	; select bank2
 15907  125F  023D               	subwf	read_clickRE@interval^(0+256),w
 15908  1260  1803               	skipnc
 15909  1261  2A64               	goto	i1l350
 15910                           
 15911                           ;mcc_generated_files/tmr1.c: 353:            current *=2;
 15912  1262  1003               	clrc
 15913  1263  0DF4               	rlf	read_clickRE@current,f
 15914  1264                     i1l350:
 15915                           
 15916                           ;mcc_generated_files/tmr1.c: 354:         if (interval <12)
 15917  1264  300C               	movlw	12
 15918  1265  023D               	subwf	read_clickRE@interval^(0+256),w
 15919  1266  1803               	skipnc
 15920  1267  2A6A               	goto	i1l351
 15921                           
 15922                           ;mcc_generated_files/tmr1.c: 355:            current *=2;
 15923  1268  1003               	clrc
 15924  1269  0DF4               	rlf	read_clickRE@current,f
 15925  126A                     i1l351:
 15926                           
 15927                           ;mcc_generated_files/tmr1.c: 356:         if (interval <20)
 15928  126A  3014               	movlw	20
 15929  126B  023D               	subwf	read_clickRE@interval^(0+256),w
 15930  126C  1803               	skipnc
 15931  126D  2A70               	goto	i1l5131
 15932                           
 15933                           ;mcc_generated_files/tmr1.c: 357:            current *=2;
 15934  126E  1003               	clrc
 15935  126F  0DF4               	rlf	read_clickRE@current,f
 15936  1270                     i1l5131:
 15937                           
 15938                           ;mcc_generated_files/tmr1.c: 358:         interval =0;
 15939  1270  01BD               	clrf	read_clickRE@interval^(0+256)
 15940                           
 15941                           ;mcc_generated_files/tmr1.c: 359:         }
 15942  1271  2A7F               	goto	i1l5141
 15943  1272                     i1l5133:
 15944                           
 15945                           ;mcc_generated_files/tmr1.c: 361:         {;mcc_generated_files/tmr1.c: 362:         ind
      +                          ex = current;
 15946  1272  0874               	movf	read_clickRE@current,w
 15947  1273  00F0               	movwf	??_read_clickRE
 15948  1274  0870               	movf	??_read_clickRE,w
 15949  1275  00BE               	movwf	read_clickRE@index^(0+256)
 15950                           
 15951                           ;mcc_generated_files/tmr1.c: 363:         current = 0;
 15952  1276  01F4               	clrf	read_clickRE@current
 15953                           
 15954                           ;mcc_generated_files/tmr1.c: 364:         if (interval <127)
 15955  1277  307F               	movlw	127
 15956  1278  023D               	subwf	read_clickRE@interval^(0+256),w
 15957  1279  1803               	skipnc
 15958  127A  2A7F               	goto	i1l5141
 15959                           
 15960                           ;mcc_generated_files/tmr1.c: 365:             ++interval;
 15961  127B  3001               	movlw	1
 15962  127C  00F0               	movwf	??_read_clickRE
 15963  127D  0870               	movf	??_read_clickRE,w
 15964  127E  07BD               	addwf	read_clickRE@interval^(0+256),f
 15965  127F                     i1l5141:
 15966                           
 15967                           ;mcc_generated_files/tmr1.c: 367:  return(current);
 15968  127F  0874               	movf	read_clickRE@current,w
 15969  1280  0008               	return
 15970  1281                     __end_of_read_clickRE:
 15971                           
 15972                           	psect	text78
 15973  1CC9                     __ptext78:	
 15974 ;; *************** function _get7seg_font *****************
 15975 ;; Defined at:
 15976 ;;		line 298 in file "mcc_generated_files/tmr1.c"
 15977 ;; Parameters:    Size  Location     Type
 15978 ;;  cdata           1    wreg     unsigned char 
 15979 ;; Auto vars:     Size  Location     Type
 15980 ;;  cdata           1    2[COMMON] unsigned char 
 15981 ;;  fontdata        1    1[COMMON] unsigned char 
 15982 ;; Return value:  Size  Location     Type
 15983 ;;                  1    wreg      unsigned char 
 15984 ;; Registers used:
 15985 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 15986 ;; Tracked objects:
 15987 ;;		On entry : 1F/4
 15988 ;;		On exit  : 1F/4
 15989 ;;		Unchanged: 1F/0
 15990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15995 ;;Total ram usage:        3 bytes
 15996 ;; Hardware stack levels used:    1
 15997 ;; This function calls:
 15998 ;;		Nothing
 15999 ;; This function is called by:
 16000 ;;		_TMR1_DefaultInterruptHandler
 16001 ;; This function uses a non-reentrant model
 16002 ;;
 16003                           
 16004                           
 16005                           ;psect for function _get7seg_font
 16006  1CC9                     _get7seg_font:
 16007                           
 16008                           ;incstack = 0
 16009                           ; Regs used in _get7seg_font: [wreg-fsr0h+status,2+status,0+pclath]
 16010                           ;get7seg_font@cdata stored from wreg
 16011  1CC9  00F2               	movwf	get7seg_font@cdata
 16012                           
 16013                           ;mcc_generated_files/tmr1.c: 298: unsigned char get7seg_font(char cdata);mcc_generated_f
      +                          iles/tmr1.c: 299: {;mcc_generated_files/tmr1.c: 300: unsigned char fontdata;;mcc_generat
      +                          ed_files/tmr1.c: 302:     if (cdata >= 0x20)
 16014  1CCA  3020               	movlw	32
 16015  1CCB  0272               	subwf	get7seg_font@cdata,w
 16016  1CCC  1C03               	skipc
 16017  1CCD  2CD9               	goto	i1l5107
 16018                           
 16019                           ;mcc_generated_files/tmr1.c: 303:         {;mcc_generated_files/tmr1.c: 304:         cda
      +                          ta -= 0x20;
 16020  1CCE  3020               	movlw	32
 16021  1CCF  02F2               	subwf	get7seg_font@cdata,f
 16022                           
 16023                           ;mcc_generated_files/tmr1.c: 305:         fontdata = font7seg[cdata];
 16024  1CD0  0872               	movf	get7seg_font@cdata,w
 16025  1CD1  3E70               	addlw	low (_font7seg| (0+32768))
 16026  1CD2  0084               	movwf	4
 16027  1CD3  3098               	movlw	high (_font7seg| (0+32768))
 16028  1CD4  1803               	skipnc
 16029  1CD5  3E01               	addlw	1
 16030  1CD6  0085               	movwf	5
 16031  1CD7  0800               	movf	0,w	;code access
 16032  1CD8  2CDA               	goto	L11
 16033  1CD9                     i1l5107:	
 16034                           ;mcc_generated_files/tmr1.c: 306:          }
 16035                           
 16036                           
 16037                           ;mcc_generated_files/tmr1.c: 308:         fontdata = 0xff;
 16038  1CD9  30FF               	movlw	255
 16039  1CDA                     L11:
 16040  1CDA  00F0               	movwf	??_get7seg_font
 16041  1CDB  0870               	movf	??_get7seg_font,w
 16042  1CDC  00F1               	movwf	get7seg_font@fontdata
 16043                           
 16044                           ;mcc_generated_files/tmr1.c: 309: return(fontdata);
 16045  1CDD  0871               	movf	get7seg_font@fontdata,w
 16046  1CDE  0008               	return
 16047  1CDF                     __end_of_get7seg_font:
 16048                           
 16049                           	psect	text79
 16050  1AB8                     __ptext79:	
 16051 ;; *************** function _I2C1_MasterIsr *****************
 16052 ;; Defined at:
 16053 ;;		line 318 in file "mcc_generated_files/i2c1_master.c"
 16054 ;; Parameters:    Size  Location     Type
 16055 ;;		None
 16056 ;; Auto vars:     Size  Location     Type
 16057 ;;		None
 16058 ;; Return value:  Size  Location     Type
 16059 ;;                  1    wreg      void 
 16060 ;; Registers used:
 16061 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16062 ;; Tracked objects:
 16063 ;;		On entry : 1F/2
 16064 ;;		On exit  : 1F/3
 16065 ;;		Unchanged: 0/0
 16066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16071 ;;Total ram usage:        0 bytes
 16072 ;; Hardware stack levels used:    1
 16073 ;; Hardware stack levels required when called:    5
 16074 ;; This function calls:
 16075 ;;		_I2C1_MasterFsm
 16076 ;; This function is called by:
 16077 ;;		_I2C1_Open
 16078 ;;		_INTERRUPT_InterruptManager
 16079 ;; This function uses a non-reentrant model
 16080 ;;
 16081                           
 16082                           
 16083                           ;psect for function _I2C1_MasterIsr
 16084  1AB8                     _I2C1_MasterIsr:
 16085                           
 16086                           ;mcc_generated_files/i2c1_master.c: 320:     I2C1_MasterFsm();
 16087                           
 16088                           ;incstack = 0
 16089                           ; Regs used in _I2C1_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16090  1AB8  3190  2009         	fcall	_I2C1_MasterFsm
 16091  1ABA  0008               	return
 16092  1ABB                     __end_of_I2C1_MasterIsr:
 16093                           
 16094                           	psect	text80
 16095  1009                     __ptext80:	
 16096 ;; *************** function _I2C1_MasterFsm *****************
 16097 ;; Defined at:
 16098 ;;		line 323 in file "mcc_generated_files/i2c1_master.c"
 16099 ;; Parameters:    Size  Location     Type
 16100 ;;		None
 16101 ;; Auto vars:     Size  Location     Type
 16102 ;;		None
 16103 ;; Return value:  Size  Location     Type
 16104 ;;                  1    wreg      void 
 16105 ;; Registers used:
 16106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16107 ;; Tracked objects:
 16108 ;;		On entry : 1F/2
 16109 ;;		On exit  : 1F/3
 16110 ;;		Unchanged: 0/0
 16111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16114 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16115 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16116 ;;Total ram usage:        3 bytes
 16117 ;; Hardware stack levels used:    1
 16118 ;; Hardware stack levels required when called:    4
 16119 ;; This function calls:
 16120 ;;		_I2C1_DO_ADDRESS_NACK
 16121 ;;		_I2C1_DO_IDLE
 16122 ;;		_I2C1_DO_RCEN
 16123 ;;		_I2C1_DO_RESET
 16124 ;;		_I2C1_DO_RX
 16125 ;;		_I2C1_DO_RX_ACK
 16126 ;;		_I2C1_DO_RX_NACK_RESTART
 16127 ;;		_I2C1_DO_RX_NACK_STOP
 16128 ;;		_I2C1_DO_SEND_ADR_READ
 16129 ;;		_I2C1_DO_SEND_ADR_WRITE
 16130 ;;		_I2C1_DO_SEND_RESTART
 16131 ;;		_I2C1_DO_SEND_RESTART_READ
 16132 ;;		_I2C1_DO_SEND_RESTART_WRITE
 16133 ;;		_I2C1_DO_SEND_STOP
 16134 ;;		_I2C1_DO_TX
 16135 ;;		_I2C1_DO_TX_EMPTY
 16136 ;;		_I2C1_MasterIsNack
 16137 ;;		i1_I2C1_MasterClearIrq
 16138 ;; This function is called by:
 16139 ;;		_I2C1_MasterIsr
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           
 16144                           ;psect for function _I2C1_MasterFsm
 16145  1009                     _I2C1_MasterFsm:
 16146                           
 16147                           ;mcc_generated_files/i2c1_master.c: 325:     I2C1_MasterClearIrq();
 16148                           
 16149                           ;incstack = 0
 16150                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16151  1009  319A  22B5  3190   	fcall	i1_I2C1_MasterClearIrq
 16152                           
 16153                           ;mcc_generated_files/i2c1_master.c: 327:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 16154  100C  0023               	movlb	3	; select bank3
 16155  100D  1C6C               	btfss	(_I2C1_Status^(0+384)+29),0
 16156  100E  281B               	goto	i1l7335
 16157  100F  319A  22FE  3190   	fcall	_I2C1_MasterIsNack
 16158  1012  3A00               	xorlw	0
 16159  1013  1903               	skipnz
 16160  1014  281B               	goto	i1l7335
 16161                           
 16162                           ;mcc_generated_files/i2c1_master.c: 328:     {;mcc_generated_files/i2c1_master.c: 329:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 16163  1015  300F               	movlw	15
 16164  1016  0020               	movlb	0	; select bank0
 16165  1017  00A0               	movwf	??_I2C1_MasterFsm
 16166  1018  0820               	movf	??_I2C1_MasterFsm,w
 16167  1019  0023               	movlb	3	; select bank3
 16168  101A  00EA               	movwf	(_I2C1_Status^(0+384)+27)
 16169  101B                     i1l7335:
 16170                           
 16171                           ;mcc_generated_files/i2c1_master.c: 331:     I2C1_Status.state = fsmStateTable[I2C1_Stat
      +                          us.state]();
 16172  101B  0023               	movlb	3	; select bank3
 16173  101C  086A               	movf	(_I2C1_Status^(0+384)+27),w
 16174  101D  0020               	movlb	0	; select bank0
 16175  101E  00A0               	movwf	??_I2C1_MasterFsm
 16176  101F  01A1               	clrf	??_I2C1_MasterFsm+1
 16177  1020  35A0               	lslf	??_I2C1_MasterFsm,f
 16178  1021  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 16179  1022  3065               	movlw	low (_fsmStateTable| (0+32768))
 16180  1023  0720               	addwf	??_I2C1_MasterFsm,w
 16181  1024  0084               	movwf	4
 16182  1025  3099               	movlw	high (_fsmStateTable| (0+32768))
 16183  1026  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 16184  1027  0085               	movwf	5
 16185  1028  3F01               	moviw [1]fsr0
 16186  1029  008A               	movwf	10
 16187  102A  3F00               	moviw [0]fsr0
 16188  102B  000A               	callw
 16189  102C  3190               	pagesel	$
 16190  102D  0020               	movlb	0	; select bank0
 16191  102E  00A2               	movwf	??_I2C1_MasterFsm+2
 16192  102F  0822               	movf	??_I2C1_MasterFsm+2,w
 16193  1030  0023               	movlb	3	; select bank3
 16194  1031  00EA               	movwf	(_I2C1_Status^(0+384)+27)
 16195  1032  0008               	return
 16196  1033                     __end_of_I2C1_MasterFsm:
 16197                           
 16198                           	psect	text81
 16199  1AB5                     __ptext81:	
 16200 ;; *************** function i1_I2C1_MasterClearIrq *****************
 16201 ;; Defined at:
 16202 ;;		line 642 in file "mcc_generated_files/i2c1_master.c"
 16203 ;; Parameters:    Size  Location     Type
 16204 ;;		None
 16205 ;; Auto vars:     Size  Location     Type
 16206 ;;		None
 16207 ;; Return value:  Size  Location     Type
 16208 ;;                  1    wreg      void 
 16209 ;; Registers used:
 16210 ;;		None
 16211 ;; Tracked objects:
 16212 ;;		On entry : 1F/2
 16213 ;;		On exit  : 1F/0
 16214 ;;		Unchanged: 0/0
 16215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16220 ;;Total ram usage:        0 bytes
 16221 ;; Hardware stack levels used:    1
 16222 ;; This function calls:
 16223 ;;		Nothing
 16224 ;; This function is called by:
 16225 ;;		_I2C1_MasterFsm
 16226 ;; This function uses a non-reentrant model
 16227 ;;
 16228                           
 16229                           
 16230                           ;psect for function i1_I2C1_MasterClearIrq
 16231  1AB5                     i1_I2C1_MasterClearIrq:
 16232                           
 16233                           ;mcc_generated_files/i2c1_master.c: 644:     PIR1bits.SSP1IF = 0;
 16234                           
 16235                           ;incstack = 0
 16236                           ; Regs used in i1_I2C1_MasterClearIrq: []
 16237  1AB5  0020               	movlb	0	; select bank0
 16238  1AB6  1191               	bcf	17,3	;volatile
 16239  1AB7  0008               	return
 16240  1AB8                     __end_ofi1_I2C1_MasterClearIrq:
 16241                           
 16242                           	psect	text82
 16243  1033                     __ptext82:	
 16244 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 16245 ;; Defined at:
 16246 ;;		line 501 in file "mcc_generated_files/i2c1_master.c"
 16247 ;; Parameters:    Size  Location     Type
 16248 ;;		None
 16249 ;; Auto vars:     Size  Location     Type
 16250 ;;		None
 16251 ;; Return value:  Size  Location     Type
 16252 ;;                  1    wreg      enum E2992
 16253 ;; Registers used:
 16254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16255 ;; Tracked objects:
 16256 ;;		On entry : 1F/0
 16257 ;;		On exit  : 1F/4
 16258 ;;		Unchanged: 0/0
 16259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16262 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16263 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16264 ;;Total ram usage:        3 bytes
 16265 ;; Hardware stack levels used:    1
 16266 ;; Hardware stack levels required when called:    3
 16267 ;; This function calls:
 16268 ;;		Absolute function
 16269 ;;		_I2C1_CallbackReturnReset
 16270 ;;		_I2C1_CallbackReturnStop
 16271 ;;		_I2C1_DO_SEND_RESTART
 16272 ;;		_I2C1_DO_SEND_STOP
 16273 ;;		_rd1RegCompleteHandler
 16274 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 16275 ;;		_rd2RegCompleteHandler
 16276 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 16277 ;;		_rdBlkRegCompleteHandler
 16278 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 16279 ;;		_wr1RegCompleteHandler
 16280 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 16281 ;;		_wr2RegCompleteHandler
 16282 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 16283 ;; This function is called by:
 16284 ;;		_I2C1_MasterFsm
 16285 ;; This function uses a non-reentrant model
 16286 ;;
 16287                           
 16288                           
 16289                           ;psect for function _I2C1_DO_ADDRESS_NACK
 16290  1033                     _I2C1_DO_ADDRESS_NACK:
 16291                           
 16292                           ;mcc_generated_files/i2c1_master.c: 503:     I2C1_Status.addressNackCheck = 0;
 16293                           
 16294                           ;incstack = 0
 16295                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16296  1033  0023               	movlb	3	; select bank3
 16297  1034  106C               	bcf	(_I2C1_Status^(0+384)+29),0
 16298                           
 16299                           ;mcc_generated_files/i2c1_master.c: 504:     I2C1_Status.error = I2C1_FAIL;
 16300  1035  3002               	movlw	2
 16301  1036  00FA               	movwf	??_I2C1_DO_ADDRESS_NACK
 16302  1037  087A               	movf	??_I2C1_DO_ADDRESS_NACK,w
 16303  1038  00EB               	movwf	(_I2C1_Status^(0+384)+28)
 16304                           
 16305                           ;mcc_generated_files/i2c1_master.c: 505:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 16306  1039  2840               	goto	i1l7229
 16307  103A                     i1l7219:
 16308                           
 16309                           ;mcc_generated_files/i2c1_master.c: 509:             return I2C1_DO_SEND_RESTART();
 16310  103A  319A  22D7         	fcall	_I2C1_DO_SEND_RESTART
 16311  103C  0008               	return
 16312  103D                     i1l7223:
 16313                           
 16314                           ;mcc_generated_files/i2c1_master.c: 511:             return I2C1_DO_SEND_STOP();
 16315  103D  319A  22DB         	fcall	_I2C1_DO_SEND_STOP
 16316  103F  0008               	return
 16317  1040                     i1l7229:
 16318  1040  085D               	movf	(low ((_I2C1_Status| (0+256)+14)))^(0+128),w
 16319  1041  00FA               	movwf	??_I2C1_DO_ADDRESS_NACK
 16320  1042  087A               	movf	??_I2C1_DO_ADDRESS_NACK,w
 16321  1043  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 16322  1044  3004               	movlw	4
 16323  1045  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 16324  1046  0086               	movwf	6
 16325  1047  3001               	movlw	1	; select bank3/4
 16326  1048  0087               	movwf	7
 16327  1049  3F41               	moviw [1]fsr1
 16328  104A  008A               	movwf	10
 16329  104B  3F40               	moviw [0]fsr1
 16330  104C  000A               	callw
 16331  104D  3190               	pagesel	$
 16332  104E  00FB               	movwf	??_I2C1_DO_ADDRESS_NACK+1
 16333  104F  01FC               	clrf	??_I2C1_DO_ADDRESS_NACK+2
 16334                           
 16335                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16336                           ; Switch size 1, requested type "simple"
 16337                           ; Number of cases is 1, Range of values is 0 to 0
 16338                           ; switch strategies available:
 16339                           ; Name         Instructions Cycles
 16340                           ; simple_byte            4     3 (average)
 16341                           ; direct_byte            8     6 (fixed)
 16342                           ; jumptable            260     6 (fixed)
 16343                           ;	Chosen strategy is simple_byte
 16344  1050  087C               	movf	??_I2C1_DO_ADDRESS_NACK+2,w
 16345  1051  3A00               	xorlw	0	; case 0
 16346  1052  1903               	skipnz
 16347  1053  2855               	goto	i1l8045
 16348  1054  283D               	goto	i1l7223
 16349  1055                     i1l8045:
 16350                           
 16351                           ; Switch size 1, requested type "simple"
 16352                           ; Number of cases is 2, Range of values is 2 to 3
 16353                           ; switch strategies available:
 16354                           ; Name         Instructions Cycles
 16355                           ; simple_byte            7     4 (average)
 16356                           ; direct_byte           13     9 (fixed)
 16357                           ; jumptable            263     9 (fixed)
 16358                           ;	Chosen strategy is simple_byte
 16359  1055  087B               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 16360  1056  3A02               	xorlw	2	; case 2
 16361  1057  1903               	skipnz
 16362  1058  283A               	goto	i1l7219
 16363  1059  3A01               	xorlw	1	; case 3
 16364  105A  1903               	skipnz
 16365  105B  283A               	goto	i1l7219
 16366  105C  283D               	goto	i1l7223
 16367  105D  0008               	return
 16368  105E                     __end_of_I2C1_DO_ADDRESS_NACK:
 16369                           
 16370                           	psect	text83
 16371  1AF9                     __ptext83:	
 16372 ;; *************** function _I2C1_DO_RESET *****************
 16373 ;; Defined at:
 16374 ;;		line 495 in file "mcc_generated_files/i2c1_master.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;		None
 16377 ;; Auto vars:     Size  Location     Type
 16378 ;;		None
 16379 ;; Return value:  Size  Location     Type
 16380 ;;                  1    wreg      enum E2992
 16381 ;; Registers used:
 16382 ;;		wreg, status,2
 16383 ;; Tracked objects:
 16384 ;;		On entry : 1F/0
 16385 ;;		On exit  : 1F/3
 16386 ;;		Unchanged: 0/0
 16387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16392 ;;Total ram usage:        0 bytes
 16393 ;; Hardware stack levels used:    1
 16394 ;; This function calls:
 16395 ;;		Nothing
 16396 ;; This function is called by:
 16397 ;;		_I2C1_MasterFsm
 16398 ;; This function uses a non-reentrant model
 16399 ;;
 16400                           
 16401                           
 16402                           ;psect for function _I2C1_DO_RESET
 16403  1AF9                     _I2C1_DO_RESET:
 16404                           
 16405                           ;mcc_generated_files/i2c1_master.c: 497:     I2C1_Status.busy = 0;
 16406                           
 16407                           ;incstack = 0
 16408                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 16409  1AF9  0023               	movlb	3	; select bank3
 16410  1AFA  10EC               	bcf	(_I2C1_Status^(0+384)+29),1
 16411                           
 16412                           ;mcc_generated_files/i2c1_master.c: 498:     I2C1_Status.error = I2C1_NOERR;
 16413  1AFB  01EB               	clrf	(_I2C1_Status^(0+384)+28)
 16414                           
 16415                           ;mcc_generated_files/i2c1_master.c: 499:     return I2C1_RESET;
 16416  1AFC  300E               	movlw	14
 16417  1AFD  0008               	return
 16418  1AFE                     __end_of_I2C1_DO_RESET:
 16419                           
 16420                           	psect	text84
 16421  1AE7                     __ptext84:	
 16422 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 16423 ;; Defined at:
 16424 ;;		line 489 in file "mcc_generated_files/i2c1_master.c"
 16425 ;; Parameters:    Size  Location     Type
 16426 ;;		None
 16427 ;; Auto vars:     Size  Location     Type
 16428 ;;		None
 16429 ;; Return value:  Size  Location     Type
 16430 ;;                  1    wreg      enum E2992
 16431 ;; Registers used:
 16432 ;;		wreg, status,2, status,0, pclath, cstack
 16433 ;; Tracked objects:
 16434 ;;		On entry : 0/0
 16435 ;;		On exit  : 1F/4
 16436 ;;		Unchanged: 0/0
 16437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16442 ;;Total ram usage:        0 bytes
 16443 ;; Hardware stack levels used:    1
 16444 ;; Hardware stack levels required when called:    1
 16445 ;; This function calls:
 16446 ;;		_I2C1_MasterSendNack
 16447 ;; This function is called by:
 16448 ;;		_I2C1_DO_RX
 16449 ;;		_I2C1_MasterFsm
 16450 ;; This function uses a non-reentrant model
 16451 ;;
 16452                           
 16453                           
 16454                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 16455  1AE7                     _I2C1_DO_RX_NACK_RESTART:
 16456                           
 16457                           ;mcc_generated_files/i2c1_master.c: 491:     I2C1_MasterSendNack();
 16458                           
 16459                           ;incstack = 0
 16460                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16461  1AE7  319A  22C7         	fcall	_I2C1_MasterSendNack
 16462                           
 16463                           ;mcc_generated_files/i2c1_master.c: 492:     return I2C1_SEND_RESTART;
 16464  1AE9  3009               	movlw	9
 16465  1AEA  0008               	return
 16466  1AEB                     __end_of_I2C1_DO_RX_NACK_RESTART:
 16467                           
 16468                           	psect	text85
 16469  1AE3                     __ptext85:	
 16470 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 16471 ;; Defined at:
 16472 ;;		line 483 in file "mcc_generated_files/i2c1_master.c"
 16473 ;; Parameters:    Size  Location     Type
 16474 ;;		None
 16475 ;; Auto vars:     Size  Location     Type
 16476 ;;		None
 16477 ;; Return value:  Size  Location     Type
 16478 ;;                  1    wreg      enum E2992
 16479 ;; Registers used:
 16480 ;;		wreg, status,2, status,0, pclath, cstack
 16481 ;; Tracked objects:
 16482 ;;		On entry : 0/0
 16483 ;;		On exit  : 1F/4
 16484 ;;		Unchanged: 0/0
 16485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16490 ;;Total ram usage:        0 bytes
 16491 ;; Hardware stack levels used:    1
 16492 ;; Hardware stack levels required when called:    1
 16493 ;; This function calls:
 16494 ;;		_I2C1_MasterSendNack
 16495 ;; This function is called by:
 16496 ;;		_I2C1_DO_RX
 16497 ;;		_I2C1_MasterFsm
 16498 ;; This function uses a non-reentrant model
 16499 ;;
 16500                           
 16501                           
 16502                           ;psect for function _I2C1_DO_RX_NACK_STOP
 16503  1AE3                     _I2C1_DO_RX_NACK_STOP:
 16504                           
 16505                           ;mcc_generated_files/i2c1_master.c: 485:     I2C1_MasterSendNack();
 16506                           
 16507                           ;incstack = 0
 16508                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 16509  1AE3  319A  22C7         	fcall	_I2C1_MasterSendNack
 16510                           
 16511                           ;mcc_generated_files/i2c1_master.c: 486:     return I2C1_SEND_STOP;
 16512  1AE5  300A               	movlw	10
 16513  1AE6  0008               	return
 16514  1AE7                     __end_of_I2C1_DO_RX_NACK_STOP:
 16515                           
 16516                           	psect	text86
 16517  1ADF                     __ptext86:	
 16518 ;; *************** function _I2C1_DO_RX_ACK *****************
 16519 ;; Defined at:
 16520 ;;		line 476 in file "mcc_generated_files/i2c1_master.c"
 16521 ;; Parameters:    Size  Location     Type
 16522 ;;		None
 16523 ;; Auto vars:     Size  Location     Type
 16524 ;;		None
 16525 ;; Return value:  Size  Location     Type
 16526 ;;                  1    wreg      enum E2992
 16527 ;; Registers used:
 16528 ;;		wreg, status,2, status,0, pclath, cstack
 16529 ;; Tracked objects:
 16530 ;;		On entry : 1F/0
 16531 ;;		On exit  : 1F/4
 16532 ;;		Unchanged: 0/0
 16533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16538 ;;Total ram usage:        0 bytes
 16539 ;; Hardware stack levels used:    1
 16540 ;; Hardware stack levels required when called:    1
 16541 ;; This function calls:
 16542 ;;		_I2C1_MasterSendAck
 16543 ;; This function is called by:
 16544 ;;		_I2C1_MasterFsm
 16545 ;; This function uses a non-reentrant model
 16546 ;;
 16547                           
 16548                           
 16549                           ;psect for function _I2C1_DO_RX_ACK
 16550  1ADF                     _I2C1_DO_RX_ACK:
 16551                           
 16552                           ;mcc_generated_files/i2c1_master.c: 478:     I2C1_MasterSendAck();
 16553                           
 16554                           ;incstack = 0
 16555                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 16556  1ADF  319A  22CB         	fcall	_I2C1_MasterSendAck
 16557                           
 16558                           ;mcc_generated_files/i2c1_master.c: 479:     return I2C1_RCEN;
 16559  1AE1  3005               	movlw	5
 16560  1AE2  0008               	return
 16561  1AE3                     __end_of_I2C1_DO_RX_ACK:
 16562                           
 16563                           	psect	text87
 16564  1ADB                     __ptext87:	
 16565 ;; *************** function _I2C1_DO_SEND_STOP *****************
 16566 ;; Defined at:
 16567 ;;		line 470 in file "mcc_generated_files/i2c1_master.c"
 16568 ;; Parameters:    Size  Location     Type
 16569 ;;		None
 16570 ;; Auto vars:     Size  Location     Type
 16571 ;;		None
 16572 ;; Return value:  Size  Location     Type
 16573 ;;                  1    wreg      enum E2992
 16574 ;; Registers used:
 16575 ;;		wreg, status,2, status,0, pclath, cstack
 16576 ;; Tracked objects:
 16577 ;;		On entry : 0/0
 16578 ;;		On exit  : 1F/4
 16579 ;;		Unchanged: 0/0
 16580 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16585 ;;Total ram usage:        0 bytes
 16586 ;; Hardware stack levels used:    1
 16587 ;; Hardware stack levels required when called:    1
 16588 ;; This function calls:
 16589 ;;		_I2C1_MasterStop
 16590 ;; This function is called by:
 16591 ;;		_I2C1_DO_TX
 16592 ;;		_I2C1_DO_TX_EMPTY
 16593 ;;		_I2C1_DO_ADDRESS_NACK
 16594 ;;		_I2C1_MasterFsm
 16595 ;; This function uses a non-reentrant model
 16596 ;;
 16597                           
 16598                           
 16599                           ;psect for function _I2C1_DO_SEND_STOP
 16600  1ADB                     _I2C1_DO_SEND_STOP:
 16601                           
 16602                           ;mcc_generated_files/i2c1_master.c: 472:     I2C1_MasterStop();
 16603                           
 16604                           ;incstack = 0
 16605                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 16606  1ADB  319A  22A9         	fcall	_I2C1_MasterStop
 16607                           
 16608                           ;mcc_generated_files/i2c1_master.c: 473:     return I2C1_IDLE;
 16609  1ADD  3000               	movlw	0
 16610  1ADE  0008               	return
 16611  1ADF                     __end_of_I2C1_DO_SEND_STOP:
 16612                           
 16613                           	psect	text88
 16614  1AD7                     __ptext88:	
 16615 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 16616 ;; Defined at:
 16617 ;;		line 464 in file "mcc_generated_files/i2c1_master.c"
 16618 ;; Parameters:    Size  Location     Type
 16619 ;;		None
 16620 ;; Auto vars:     Size  Location     Type
 16621 ;;		None
 16622 ;; Return value:  Size  Location     Type
 16623 ;;                  1    wreg      enum E2992
 16624 ;; Registers used:
 16625 ;;		wreg, status,2, status,0, pclath, cstack
 16626 ;; Tracked objects:
 16627 ;;		On entry : 0/0
 16628 ;;		On exit  : 1F/4
 16629 ;;		Unchanged: 0/0
 16630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16635 ;;Total ram usage:        0 bytes
 16636 ;; Hardware stack levels used:    1
 16637 ;; Hardware stack levels required when called:    1
 16638 ;; This function calls:
 16639 ;;		_I2C1_MasterEnableRestart
 16640 ;; This function is called by:
 16641 ;;		_I2C1_DO_TX_EMPTY
 16642 ;;		_I2C1_DO_ADDRESS_NACK
 16643 ;;		_I2C1_MasterFsm
 16644 ;; This function uses a non-reentrant model
 16645 ;;
 16646                           
 16647                           
 16648                           ;psect for function _I2C1_DO_SEND_RESTART
 16649  1AD7                     _I2C1_DO_SEND_RESTART:
 16650                           
 16651                           ;mcc_generated_files/i2c1_master.c: 466:     I2C1_MasterEnableRestart();
 16652                           
 16653                           ;incstack = 0
 16654                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 16655  1AD7  319A  22A6         	fcall	_I2C1_MasterEnableRestart
 16656                           
 16657                           ;mcc_generated_files/i2c1_master.c: 467:     return I2C1_SEND_ADR_READ;
 16658  1AD9  3001               	movlw	1
 16659  1ADA  0008               	return
 16660  1ADB                     __end_of_I2C1_DO_SEND_RESTART:
 16661                           
 16662                           	psect	text89
 16663  1AD3                     __ptext89:	
 16664 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 16665 ;; Defined at:
 16666 ;;		line 457 in file "mcc_generated_files/i2c1_master.c"
 16667 ;; Parameters:    Size  Location     Type
 16668 ;;		None
 16669 ;; Auto vars:     Size  Location     Type
 16670 ;;		None
 16671 ;; Return value:  Size  Location     Type
 16672 ;;                  1    wreg      enum E2992
 16673 ;; Registers used:
 16674 ;;		wreg, status,2, status,0, pclath, cstack
 16675 ;; Tracked objects:
 16676 ;;		On entry : 0/0
 16677 ;;		On exit  : 1F/4
 16678 ;;		Unchanged: 0/0
 16679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16684 ;;Total ram usage:        0 bytes
 16685 ;; Hardware stack levels used:    1
 16686 ;; Hardware stack levels required when called:    1
 16687 ;; This function calls:
 16688 ;;		_I2C1_MasterEnableRestart
 16689 ;; This function is called by:
 16690 ;;		_I2C1_DO_TX
 16691 ;;		_I2C1_MasterFsm
 16692 ;; This function uses a non-reentrant model
 16693 ;;
 16694                           
 16695                           
 16696                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 16697  1AD3                     _I2C1_DO_SEND_RESTART_WRITE:
 16698                           
 16699                           ;mcc_generated_files/i2c1_master.c: 459:     I2C1_MasterEnableRestart();
 16700                           
 16701                           ;incstack = 0
 16702                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 16703  1AD3  319A  22A6         	fcall	_I2C1_MasterEnableRestart
 16704                           
 16705                           ;mcc_generated_files/i2c1_master.c: 460:     return I2C1_SEND_ADR_WRITE;
 16706  1AD5  3002               	movlw	2
 16707  1AD6  0008               	return
 16708  1AD7                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 16709                           
 16710                           	psect	text90
 16711  1ACF                     __ptext90:	
 16712 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 16713 ;; Defined at:
 16714 ;;		line 451 in file "mcc_generated_files/i2c1_master.c"
 16715 ;; Parameters:    Size  Location     Type
 16716 ;;		None
 16717 ;; Auto vars:     Size  Location     Type
 16718 ;;		None
 16719 ;; Return value:  Size  Location     Type
 16720 ;;                  1    wreg      enum E2992
 16721 ;; Registers used:
 16722 ;;		wreg, status,2, status,0, pclath, cstack
 16723 ;; Tracked objects:
 16724 ;;		On entry : 0/0
 16725 ;;		On exit  : 1F/4
 16726 ;;		Unchanged: 0/0
 16727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16732 ;;Total ram usage:        0 bytes
 16733 ;; Hardware stack levels used:    1
 16734 ;; Hardware stack levels required when called:    1
 16735 ;; This function calls:
 16736 ;;		_I2C1_MasterEnableRestart
 16737 ;; This function is called by:
 16738 ;;		_I2C1_DO_TX
 16739 ;;		_I2C1_MasterFsm
 16740 ;; This function uses a non-reentrant model
 16741 ;;
 16742                           
 16743                           
 16744                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 16745  1ACF                     _I2C1_DO_SEND_RESTART_READ:
 16746                           
 16747                           ;mcc_generated_files/i2c1_master.c: 453:     I2C1_MasterEnableRestart();
 16748                           
 16749                           ;incstack = 0
 16750                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 16751  1ACF  319A  22A6         	fcall	_I2C1_MasterEnableRestart
 16752                           
 16753                           ;mcc_generated_files/i2c1_master.c: 454:     return I2C1_SEND_ADR_READ;
 16754  1AD1  3001               	movlw	1
 16755  1AD2  0008               	return
 16756  1AD3                     __end_of_I2C1_DO_SEND_RESTART_READ:
 16757                           
 16758                           	psect	text91
 16759  1B04                     __ptext91:	
 16760 ;; *************** function _I2C1_DO_RCEN *****************
 16761 ;; Defined at:
 16762 ;;		line 404 in file "mcc_generated_files/i2c1_master.c"
 16763 ;; Parameters:    Size  Location     Type
 16764 ;;		None
 16765 ;; Auto vars:     Size  Location     Type
 16766 ;;		None
 16767 ;; Return value:  Size  Location     Type
 16768 ;;                  1    wreg      enum E2992
 16769 ;; Registers used:
 16770 ;;		wreg, status,2, status,0, pclath, cstack
 16771 ;; Tracked objects:
 16772 ;;		On entry : 1F/0
 16773 ;;		On exit  : 1F/4
 16774 ;;		Unchanged: 0/0
 16775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16780 ;;Total ram usage:        0 bytes
 16781 ;; Hardware stack levels used:    1
 16782 ;; Hardware stack levels required when called:    1
 16783 ;; This function calls:
 16784 ;;		_I2C1_MasterStartRx
 16785 ;; This function is called by:
 16786 ;;		_I2C1_MasterFsm
 16787 ;; This function uses a non-reentrant model
 16788 ;;
 16789                           
 16790                           
 16791                           ;psect for function _I2C1_DO_RCEN
 16792  1B04                     _I2C1_DO_RCEN:
 16793                           
 16794                           ;mcc_generated_files/i2c1_master.c: 406:     I2C1_Status.addressNackCheck = 0;
 16795                           
 16796                           ;incstack = 0
 16797                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 16798  1B04  0023               	movlb	3	; select bank3
 16799  1B05  106C               	bcf	(_I2C1_Status^(0+384)+29),0
 16800                           
 16801                           ;mcc_generated_files/i2c1_master.c: 407:     I2C1_MasterStartRx();
 16802  1B06  319A  22AC         	fcall	_I2C1_MasterStartRx
 16803                           
 16804                           ;mcc_generated_files/i2c1_master.c: 408:     return I2C1_RX;
 16805  1B08  3004               	movlw	4
 16806  1B09  0008               	return
 16807  1B0A                     __end_of_I2C1_DO_RCEN:
 16808                           
 16809                           	psect	text92
 16810  111D                     __ptext92:	
 16811 ;; *************** function _I2C1_DO_RX *****************
 16812 ;; Defined at:
 16813 ;;		line 380 in file "mcc_generated_files/i2c1_master.c"
 16814 ;; Parameters:    Size  Location     Type
 16815 ;;		None
 16816 ;; Auto vars:     Size  Location     Type
 16817 ;;		None
 16818 ;; Return value:  Size  Location     Type
 16819 ;;                  1    wreg      enum E2992
 16820 ;; Registers used:
 16821 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16822 ;; Tracked objects:
 16823 ;;		On entry : 1F/0
 16824 ;;		On exit  : 1F/4
 16825 ;;		Unchanged: 0/0
 16826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16829 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16830 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16831 ;;Total ram usage:        3 bytes
 16832 ;; Hardware stack levels used:    1
 16833 ;; Hardware stack levels required when called:    3
 16834 ;; This function calls:
 16835 ;;		Absolute function
 16836 ;;		_I2C1_CallbackReturnReset
 16837 ;;		_I2C1_CallbackReturnStop
 16838 ;;		_I2C1_DO_RX_NACK_RESTART
 16839 ;;		_I2C1_DO_RX_NACK_STOP
 16840 ;;		_I2C1_MasterGetRxData
 16841 ;;		_I2C1_MasterSendAck
 16842 ;;		_rd1RegCompleteHandler
 16843 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 16844 ;;		_rd2RegCompleteHandler
 16845 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 16846 ;;		_rdBlkRegCompleteHandler
 16847 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 16848 ;;		_wr1RegCompleteHandler
 16849 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 16850 ;;		_wr2RegCompleteHandler
 16851 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 16852 ;; This function is called by:
 16853 ;;		_I2C1_MasterFsm
 16854 ;; This function uses a non-reentrant model
 16855 ;;
 16856                           
 16857                           
 16858                           ;psect for function _I2C1_DO_RX
 16859  111D                     _I2C1_DO_RX:
 16860                           
 16861                           ;mcc_generated_files/i2c1_master.c: 382:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 16862                           
 16863                           ;incstack = 0
 16864                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16865  111D  319A  22AF  3191   	fcall	_I2C1_MasterGetRxData
 16866  1120  00FA               	movwf	??_I2C1_DO_RX
 16867  1121  0023               	movlb	3	; select bank3
 16868  1122  0866               	movf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),w
 16869  1123  0086               	movwf	6
 16870  1124  0867               	movf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128),w
 16871  1125  0087               	movwf	7
 16872  1126  087A               	movf	??_I2C1_DO_RX,w
 16873  1127  0081               	movwf	1
 16874  1128  3001               	movlw	1
 16875  1129  07E6               	addwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),f
 16876  112A  3000               	movlw	0
 16877  112B  3DE7               	addwfc	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128),f
 16878                           
 16879                           ;mcc_generated_files/i2c1_master.c: 383:     if(--I2C1_Status.data_length)
 16880  112C  3001               	movlw	1
 16881  112D  02E8               	subwf	(_I2C1_Status^(0+384)+25),f
 16882  112E  3000               	movlw	0
 16883  112F  3BE9               	subwfb	((_I2C1_Status+1)^(0+384)+25),f
 16884  1130  0868               	movf	(_I2C1_Status^(0+384)+25),w
 16885  1131  0469               	iorwf	((_I2C1_Status+1)^(0+384)+25),w
 16886  1132  1903               	btfsc	3,2
 16887  1133  2938               	goto	i1l619
 16888                           
 16889                           ;mcc_generated_files/i2c1_master.c: 384:     {;mcc_generated_files/i2c1_master.c: 385:  
      +                                 I2C1_MasterSendAck();
 16890  1134  319A  22CB         	fcall	_I2C1_MasterSendAck
 16891                           
 16892                           ;mcc_generated_files/i2c1_master.c: 386:         return I2C1_RCEN;
 16893  1136  3005               	movlw	5
 16894  1137  0008               	return
 16895  1138                     i1l619:	
 16896                           ;mcc_generated_files/i2c1_master.c: 388:     else
 16897                           
 16898                           
 16899                           ;mcc_generated_files/i2c1_master.c: 389:     {;mcc_generated_files/i2c1_master.c: 390:  
      +                                 I2C1_Status.bufferFree = 1;
 16900  1138  15EC               	bsf	(_I2C1_Status^(0+384)+29),3
 16901                           
 16902                           ;mcc_generated_files/i2c1_master.c: 391:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 16903  1139  2940               	goto	i1l7185
 16904  113A                     i1l7175:
 16905                           
 16906                           ;mcc_generated_files/i2c1_master.c: 395:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 16907  113A  319A  22E7         	fcall	_I2C1_DO_RX_NACK_RESTART
 16908  113C  0008               	return
 16909  113D                     i1l7179:
 16910                           
 16911                           ;mcc_generated_files/i2c1_master.c: 399:                 return I2C1_DO_RX_NACK_STOP();
 16912  113D  319A  22E3         	fcall	_I2C1_DO_RX_NACK_STOP
 16913  113F  0008               	return
 16914  1140                     i1l7185:
 16915  1140  085B               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 16916  1141  00FA               	movwf	??_I2C1_DO_RX
 16917  1142  087A               	movf	??_I2C1_DO_RX,w
 16918  1143  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 16919  1144  0850               	movf	(_I2C1_Status+1)^(0+384),w
 16920  1145  008A               	movwf	10
 16921  1146  084F               	movf	_I2C1_Status^(0+384),w
 16922  1147  000A               	callw
 16923  1148  3191               	pagesel	$
 16924  1149  00FB               	movwf	??_I2C1_DO_RX+1
 16925  114A  01FC               	clrf	??_I2C1_DO_RX+2
 16926                           
 16927                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16928                           ; Switch size 1, requested type "simple"
 16929                           ; Number of cases is 1, Range of values is 0 to 0
 16930                           ; switch strategies available:
 16931                           ; Name         Instructions Cycles
 16932                           ; simple_byte            4     3 (average)
 16933                           ; direct_byte            8     6 (fixed)
 16934                           ; jumptable            260     6 (fixed)
 16935                           ;	Chosen strategy is simple_byte
 16936  114B  087C               	movf	??_I2C1_DO_RX+2,w
 16937  114C  3A00               	xorlw	0	; case 0
 16938  114D  1903               	skipnz
 16939  114E  2950               	goto	i1l8047
 16940  114F  293D               	goto	i1l7179
 16941  1150                     i1l8047:
 16942                           
 16943                           ; Switch size 1, requested type "simple"
 16944                           ; Number of cases is 4, Range of values is 1 to 4
 16945                           ; switch strategies available:
 16946                           ; Name         Instructions Cycles
 16947                           ; simple_byte           13     7 (average)
 16948                           ; direct_byte           17     9 (fixed)
 16949                           ; jumptable            263     9 (fixed)
 16950                           ;	Chosen strategy is simple_byte
 16951  1150  087B               	movf	??_I2C1_DO_RX+1,w
 16952  1151  3A01               	xorlw	1	; case 1
 16953  1152  1903               	skipnz
 16954  1153  293D               	goto	i1l7179
 16955  1154  3A03               	xorlw	3	; case 2
 16956  1155  1903               	skipnz
 16957  1156  293A               	goto	i1l7175
 16958  1157  3A01               	xorlw	1	; case 3
 16959  1158  1903               	skipnz
 16960  1159  293A               	goto	i1l7175
 16961  115A  3A07               	xorlw	7	; case 4
 16962  115B  1903               	skipnz
 16963  115C  293D               	goto	i1l7179
 16964  115D  293D               	goto	i1l7179
 16965  115E  0008               	return
 16966  115F                     __end_of_I2C1_DO_RX:
 16967                           
 16968                           	psect	text93
 16969  136A                     __ptext93:	
 16970 ;; *************** function _I2C1_DO_TX *****************
 16971 ;; Defined at:
 16972 ;;		line 356 in file "mcc_generated_files/i2c1_master.c"
 16973 ;; Parameters:    Size  Location     Type
 16974 ;;		None
 16975 ;; Auto vars:     Size  Location     Type
 16976 ;;		None
 16977 ;; Return value:  Size  Location     Type
 16978 ;;                  1    wreg      enum E2992
 16979 ;; Registers used:
 16980 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16981 ;; Tracked objects:
 16982 ;;		On entry : 1F/0
 16983 ;;		On exit  : 18/0
 16984 ;;		Unchanged: 0/0
 16985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16988 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16989 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16990 ;;Total ram usage:        3 bytes
 16991 ;; Hardware stack levels used:    1
 16992 ;; Hardware stack levels required when called:    3
 16993 ;; This function calls:
 16994 ;;		Absolute function
 16995 ;;		_I2C1_CallbackReturnReset
 16996 ;;		_I2C1_CallbackReturnStop
 16997 ;;		_I2C1_DO_SEND_RESTART_READ
 16998 ;;		_I2C1_DO_SEND_RESTART_WRITE
 16999 ;;		_I2C1_DO_SEND_STOP
 17000 ;;		_I2C1_MasterIsNack
 17001 ;;		_I2C1_MasterSendTxData
 17002 ;;		_rd1RegCompleteHandler
 17003 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 17004 ;;		_rd2RegCompleteHandler
 17005 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 17006 ;;		_rdBlkRegCompleteHandler
 17007 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 17008 ;;		_wr1RegCompleteHandler
 17009 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 17010 ;;		_wr2RegCompleteHandler
 17011 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 17012 ;; This function is called by:
 17013 ;;		_I2C1_MasterFsm
 17014 ;; This function uses a non-reentrant model
 17015 ;;
 17016                           
 17017                           
 17018                           ;psect for function _I2C1_DO_TX
 17019  136A                     _I2C1_DO_TX:
 17020                           
 17021                           ;mcc_generated_files/i2c1_master.c: 358:     if(I2C1_MasterIsNack())
 17022                           
 17023                           ;incstack = 0
 17024                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17025  136A  319A  22FE  3193   	fcall	_I2C1_MasterIsNack
 17026  136D  3A00               	xorlw	0
 17027  136E  1D03               	btfss	3,2
 17028  136F  2B7A               	goto	i1l7145
 17029  1370  2B9E               	goto	i1l603
 17030  1371                     i1l7131:
 17031                           
 17032                           ;mcc_generated_files/i2c1_master.c: 363:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 17033  1371  319A  22CF         	fcall	_I2C1_DO_SEND_RESTART_READ
 17034  1373  0008               	return
 17035  1374                     i1l7135:
 17036                           
 17037                           ;mcc_generated_files/i2c1_master.c: 365:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 17038  1374  319A  22D3         	fcall	_I2C1_DO_SEND_RESTART_WRITE
 17039  1376  0008               	return
 17040  1377                     i1l7139:
 17041                           
 17042                           ;mcc_generated_files/i2c1_master.c: 369:                 return I2C1_DO_SEND_STOP();
 17043  1377  319A  22DB         	fcall	_I2C1_DO_SEND_STOP
 17044  1379  0008               	return
 17045  137A                     i1l7145:
 17046  137A  0023               	movlb	3	; select bank3
 17047  137B  085E               	movf	(low ((_I2C1_Status| (0+256)+15)))^(0+128),w
 17048  137C  00FA               	movwf	??_I2C1_DO_TX
 17049  137D  087A               	movf	??_I2C1_DO_TX,w
 17050  137E  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 17051  137F  3006               	movlw	6
 17052  1380  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 17053  1381  0086               	movwf	6
 17054  1382  3001               	movlw	1	; select bank3/4
 17055  1383  0087               	movwf	7
 17056  1384  3F41               	moviw [1]fsr1
 17057  1385  008A               	movwf	10
 17058  1386  3F40               	moviw [0]fsr1
 17059  1387  000A               	callw
 17060  1388  3193               	pagesel	$
 17061  1389  00FB               	movwf	??_I2C1_DO_TX+1
 17062  138A  01FC               	clrf	??_I2C1_DO_TX+2
 17063                           
 17064                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17065                           ; Switch size 1, requested type "simple"
 17066                           ; Number of cases is 1, Range of values is 0 to 0
 17067                           ; switch strategies available:
 17068                           ; Name         Instructions Cycles
 17069                           ; simple_byte            4     3 (average)
 17070                           ; direct_byte            8     6 (fixed)
 17071                           ; jumptable            260     6 (fixed)
 17072                           ;	Chosen strategy is simple_byte
 17073  138B  087C               	movf	??_I2C1_DO_TX+2,w
 17074  138C  3A00               	xorlw	0	; case 0
 17075  138D  1903               	skipnz
 17076  138E  2B90               	goto	i1l8049
 17077  138F  2B77               	goto	i1l7139
 17078  1390                     i1l8049:
 17079                           
 17080                           ; Switch size 1, requested type "simple"
 17081                           ; Number of cases is 4, Range of values is 1 to 4
 17082                           ; switch strategies available:
 17083                           ; Name         Instructions Cycles
 17084                           ; simple_byte           13     7 (average)
 17085                           ; direct_byte           17     9 (fixed)
 17086                           ; jumptable            263     9 (fixed)
 17087                           ;	Chosen strategy is simple_byte
 17088  1390  087B               	movf	??_I2C1_DO_TX+1,w
 17089  1391  3A01               	xorlw	1	; case 1
 17090  1392  1903               	skipnz
 17091  1393  2B77               	goto	i1l7139
 17092  1394  3A03               	xorlw	3	; case 2
 17093  1395  1903               	skipnz
 17094  1396  2B71               	goto	i1l7131
 17095  1397  3A01               	xorlw	1	; case 3
 17096  1398  1903               	skipnz
 17097  1399  2B74               	goto	i1l7135
 17098  139A  3A07               	xorlw	7	; case 4
 17099  139B  1903               	skipnz
 17100  139C  2B77               	goto	i1l7139
 17101  139D  2B77               	goto	i1l7139
 17102  139E                     i1l603:	
 17103                           ;mcc_generated_files/i2c1_master.c: 372:     else
 17104                           
 17105                           
 17106                           ;mcc_generated_files/i2c1_master.c: 373:     {;mcc_generated_files/i2c1_master.c: 374:  
      +                                 I2C1_Status.addressNackCheck = 0;
 17107  139E  0023               	movlb	3	; select bank3
 17108  139F  106C               	bcf	(_I2C1_Status^(0+384)+29),0
 17109                           
 17110                           ;mcc_generated_files/i2c1_master.c: 375:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 17111  13A0  0867               	movf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128),w
 17112  13A1  00FB               	movwf	??_I2C1_DO_TX+1
 17113  13A2  0866               	movf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),w
 17114  13A3  00FA               	movwf	??_I2C1_DO_TX
 17115  13A4  0AE6               	incf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),f
 17116  13A5  1903               	skipnz
 17117  13A6  0AE7               	incf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128),f
 17118  13A7  087A               	movf	??_I2C1_DO_TX,w
 17119  13A8  0086               	movwf	6
 17120  13A9  087B               	movf	??_I2C1_DO_TX+1,w
 17121  13AA  0087               	movwf	7
 17122  13AB  0801               	movf	1,w
 17123  13AC  319A  22EF  3193   	fcall	_I2C1_MasterSendTxData
 17124                           
 17125                           ;mcc_generated_files/i2c1_master.c: 376:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 17126  13AF  3001               	movlw	1
 17127  13B0  0023               	movlb	3	; select bank3
 17128  13B1  02E8               	subwf	(_I2C1_Status^(0+384)+25),f
 17129  13B2  3000               	movlw	0
 17130  13B3  3BE9               	subwfb	((_I2C1_Status+1)^(0+384)+25),f
 17131  13B4  0868               	movf	(_I2C1_Status^(0+384)+25),w
 17132  13B5  0469               	iorwf	((_I2C1_Status+1)^(0+384)+25),w
 17133  13B6  1D03               	btfss	3,2
 17134  13B7  2BBA               	goto	i1l7153
 17135  13B8  3006               	movlw	6
 17136  13B9  0008               	return
 17137  13BA                     i1l7153:
 17138  13BA  3003               	movlw	3
 17139  13BB  0008               	return
 17140  13BC                     __end_of_I2C1_DO_TX:
 17141                           
 17142                           	psect	text94
 17143  1B16                     __ptext94:	
 17144 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 17145 ;; Defined at:
 17146 ;;		line 349 in file "mcc_generated_files/i2c1_master.c"
 17147 ;; Parameters:    Size  Location     Type
 17148 ;;		None
 17149 ;; Auto vars:     Size  Location     Type
 17150 ;;		None
 17151 ;; Return value:  Size  Location     Type
 17152 ;;                  1    wreg      enum E2992
 17153 ;; Registers used:
 17154 ;;		wreg, status,2, status,0, pclath, cstack
 17155 ;; Tracked objects:
 17156 ;;		On entry : 1F/0
 17157 ;;		On exit  : 1F/4
 17158 ;;		Unchanged: 0/0
 17159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17164 ;;Total ram usage:        0 bytes
 17165 ;; Hardware stack levels used:    1
 17166 ;; Hardware stack levels required when called:    1
 17167 ;; This function calls:
 17168 ;;		_I2C1_MasterSendTxData
 17169 ;; This function is called by:
 17170 ;;		_I2C1_MasterFsm
 17171 ;; This function uses a non-reentrant model
 17172 ;;
 17173                           
 17174                           
 17175                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 17176  1B16                     _I2C1_DO_SEND_ADR_WRITE:
 17177                           
 17178                           ;mcc_generated_files/i2c1_master.c: 351:     I2C1_Status.addressNackCheck = 1;
 17179                           
 17180                           ;incstack = 0
 17181                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 17182  1B16  0023               	movlb	3	; select bank3
 17183  1B17  146C               	bsf	(_I2C1_Status^(0+384)+29),0
 17184                           
 17185                           ;mcc_generated_files/i2c1_master.c: 352:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1);
 17186  1B18  3565               	lslf	(_I2C1_Status^(0+384)+22),w
 17187  1B19  319A  22EF         	fcall	_I2C1_MasterSendTxData
 17188                           
 17189                           ;mcc_generated_files/i2c1_master.c: 353:     return I2C1_TX;
 17190  1B1B  3003               	movlw	3
 17191  1B1C  0008               	return
 17192  1B1D                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 17193                           
 17194                           	psect	text95
 17195  1B24                     __ptext95:	
 17196 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 17197 ;; Defined at:
 17198 ;;		line 342 in file "mcc_generated_files/i2c1_master.c"
 17199 ;; Parameters:    Size  Location     Type
 17200 ;;		None
 17201 ;; Auto vars:     Size  Location     Type
 17202 ;;		None
 17203 ;; Return value:  Size  Location     Type
 17204 ;;                  1    wreg      enum E2992
 17205 ;; Registers used:
 17206 ;;		wreg, status,2, status,0, pclath, cstack
 17207 ;; Tracked objects:
 17208 ;;		On entry : 1F/0
 17209 ;;		On exit  : 1F/4
 17210 ;;		Unchanged: 0/0
 17211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17216 ;;Total ram usage:        0 bytes
 17217 ;; Hardware stack levels used:    1
 17218 ;; Hardware stack levels required when called:    1
 17219 ;; This function calls:
 17220 ;;		_I2C1_MasterSendTxData
 17221 ;; This function is called by:
 17222 ;;		_I2C1_MasterFsm
 17223 ;; This function uses a non-reentrant model
 17224 ;;
 17225                           
 17226                           
 17227                           ;psect for function _I2C1_DO_SEND_ADR_READ
 17228  1B24                     _I2C1_DO_SEND_ADR_READ:
 17229                           
 17230                           ;mcc_generated_files/i2c1_master.c: 344:     I2C1_Status.addressNackCheck = 1;
 17231                           
 17232                           ;incstack = 0
 17233                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 17234  1B24  0023               	movlb	3	; select bank3
 17235  1B25  146C               	bsf	(_I2C1_Status^(0+384)+29),0
 17236                           
 17237                           ;mcc_generated_files/i2c1_master.c: 345:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1 | 1);
 17238  1B26  1403               	setc
 17239  1B27  0D65               	rlf	(_I2C1_Status^(0+384)+22),w
 17240  1B28  319A  22EF         	fcall	_I2C1_MasterSendTxData
 17241                           
 17242                           ;mcc_generated_files/i2c1_master.c: 346:     return I2C1_RCEN;
 17243  1B2A  3005               	movlw	5
 17244  1B2B  0008               	return
 17245  1B2C                     __end_of_I2C1_DO_SEND_ADR_READ:
 17246                           
 17247                           	psect	text96
 17248  1AF4                     __ptext96:	
 17249 ;; *************** function _I2C1_DO_IDLE *****************
 17250 ;; Defined at:
 17251 ;;		line 335 in file "mcc_generated_files/i2c1_master.c"
 17252 ;; Parameters:    Size  Location     Type
 17253 ;;		None
 17254 ;; Auto vars:     Size  Location     Type
 17255 ;;		None
 17256 ;; Return value:  Size  Location     Type
 17257 ;;                  1    wreg      enum E2992
 17258 ;; Registers used:
 17259 ;;		wreg, status,2
 17260 ;; Tracked objects:
 17261 ;;		On entry : 1F/0
 17262 ;;		On exit  : 1F/3
 17263 ;;		Unchanged: 0/0
 17264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17269 ;;Total ram usage:        0 bytes
 17270 ;; Hardware stack levels used:    1
 17271 ;; This function calls:
 17272 ;;		Nothing
 17273 ;; This function is called by:
 17274 ;;		_I2C1_MasterFsm
 17275 ;; This function uses a non-reentrant model
 17276 ;;
 17277                           
 17278                           
 17279                           ;psect for function _I2C1_DO_IDLE
 17280  1AF4                     _I2C1_DO_IDLE:
 17281                           
 17282                           ;mcc_generated_files/i2c1_master.c: 337:     I2C1_Status.busy = 0;
 17283                           
 17284                           ;incstack = 0
 17285                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 17286  1AF4  0023               	movlb	3	; select bank3
 17287  1AF5  10EC               	bcf	(_I2C1_Status^(0+384)+29),1
 17288                           
 17289                           ;mcc_generated_files/i2c1_master.c: 338:     I2C1_Status.error = I2C1_NOERR;
 17290  1AF6  01EB               	clrf	(_I2C1_Status^(0+384)+28)
 17291                           
 17292                           ;mcc_generated_files/i2c1_master.c: 339:     return I2C1_RESET;
 17293  1AF7  300E               	movlw	14
 17294  1AF8  0008               	return
 17295  1AF9                     __end_of_I2C1_DO_IDLE:
 17296                           
 17297                           	psect	text97
 17298  105E                     __ptext97:	
 17299 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 17300 ;; Defined at:
 17301 ;;		line 411 in file "mcc_generated_files/i2c1_master.c"
 17302 ;; Parameters:    Size  Location     Type
 17303 ;;		None
 17304 ;; Auto vars:     Size  Location     Type
 17305 ;;		None
 17306 ;; Return value:  Size  Location     Type
 17307 ;;                  1    wreg      enum E2992
 17308 ;; Registers used:
 17309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17310 ;; Tracked objects:
 17311 ;;		On entry : 1F/0
 17312 ;;		On exit  : 1B/0
 17313 ;;		Unchanged: 0/0
 17314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17317 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17318 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17319 ;;Total ram usage:        3 bytes
 17320 ;; Hardware stack levels used:    1
 17321 ;; Hardware stack levels required when called:    3
 17322 ;; This function calls:
 17323 ;;		Absolute function
 17324 ;;		_I2C1_CallbackReturnReset
 17325 ;;		_I2C1_CallbackReturnStop
 17326 ;;		_I2C1_DO_SEND_RESTART
 17327 ;;		_I2C1_DO_SEND_STOP
 17328 ;;		_I2C1_MasterSetIrq
 17329 ;;		_rd1RegCompleteHandler
 17330 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 17331 ;;		_rd2RegCompleteHandler
 17332 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 17333 ;;		_rdBlkRegCompleteHandler
 17334 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 17335 ;;		_wr1RegCompleteHandler
 17336 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 17337 ;;		_wr2RegCompleteHandler
 17338 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 17339 ;; This function is called by:
 17340 ;;		_I2C1_MasterFsm
 17341 ;; This function uses a non-reentrant model
 17342 ;;
 17343                           
 17344                           
 17345                           ;psect for function _I2C1_DO_TX_EMPTY
 17346  105E                     _I2C1_DO_TX_EMPTY:
 17347                           
 17348                           ;mcc_generated_files/i2c1_master.c: 413:     I2C1_Status.bufferFree = 1;
 17349                           
 17350                           ;incstack = 0
 17351                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17352  105E  0023               	movlb	3	; select bank3
 17353  105F  15EC               	bsf	(_I2C1_Status^(0+384)+29),3
 17354                           
 17355                           ;mcc_generated_files/i2c1_master.c: 414:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 17356  1060  286B               	goto	i1l7209
 17357  1061                     i1l7193:
 17358                           
 17359                           ;mcc_generated_files/i2c1_master.c: 418:             return I2C1_DO_SEND_RESTART();
 17360  1061  319A  22D7         	fcall	_I2C1_DO_SEND_RESTART
 17361  1063  0008               	return
 17362  1064                     i1l7197:
 17363                           
 17364                           ;mcc_generated_files/i2c1_master.c: 420:             I2C1_MasterSetIrq();
 17365  1064  319A  22B2         	fcall	_I2C1_MasterSetIrq
 17366                           
 17367                           ;mcc_generated_files/i2c1_master.c: 421:             return I2C1_TX;
 17368  1066  3003               	movlw	3
 17369  1067  0008               	return
 17370  1068                     i1l7203:
 17371                           
 17372                           ;mcc_generated_files/i2c1_master.c: 424:             return I2C1_DO_SEND_STOP();
 17373  1068  319A  22DB         	fcall	_I2C1_DO_SEND_STOP
 17374  106A  0008               	return
 17375  106B                     i1l7209:
 17376  106B  085B               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 17377  106C  00FA               	movwf	??_I2C1_DO_TX_EMPTY
 17378  106D  087A               	movf	??_I2C1_DO_TX_EMPTY,w
 17379  106E  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 17380  106F  0850               	movf	(_I2C1_Status+1)^(0+384),w
 17381  1070  008A               	movwf	10
 17382  1071  084F               	movf	_I2C1_Status^(0+384),w
 17383  1072  000A               	callw
 17384  1073  3190               	pagesel	$
 17385  1074  00FB               	movwf	??_I2C1_DO_TX_EMPTY+1
 17386  1075  01FC               	clrf	??_I2C1_DO_TX_EMPTY+2
 17387                           
 17388                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17389                           ; Switch size 1, requested type "simple"
 17390                           ; Number of cases is 1, Range of values is 0 to 0
 17391                           ; switch strategies available:
 17392                           ; Name         Instructions Cycles
 17393                           ; simple_byte            4     3 (average)
 17394                           ; direct_byte            8     6 (fixed)
 17395                           ; jumptable            260     6 (fixed)
 17396                           ;	Chosen strategy is simple_byte
 17397  1076  087C               	movf	??_I2C1_DO_TX_EMPTY+2,w
 17398  1077  3A00               	xorlw	0	; case 0
 17399  1078  1903               	skipnz
 17400  1079  287B               	goto	i1l8051
 17401  107A  2868               	goto	i1l7203
 17402  107B                     i1l8051:
 17403                           
 17404                           ; Switch size 1, requested type "simple"
 17405                           ; Number of cases is 4, Range of values is 1 to 4
 17406                           ; switch strategies available:
 17407                           ; Name         Instructions Cycles
 17408                           ; simple_byte           13     7 (average)
 17409                           ; direct_byte           17     9 (fixed)
 17410                           ; jumptable            263     9 (fixed)
 17411                           ;	Chosen strategy is simple_byte
 17412  107B  087B               	movf	??_I2C1_DO_TX_EMPTY+1,w
 17413  107C  3A01               	xorlw	1	; case 1
 17414  107D  1903               	skipnz
 17415  107E  2868               	goto	i1l7203
 17416  107F  3A03               	xorlw	3	; case 2
 17417  1080  1903               	skipnz
 17418  1081  2861               	goto	i1l7193
 17419  1082  3A01               	xorlw	1	; case 3
 17420  1083  1903               	skipnz
 17421  1084  2861               	goto	i1l7193
 17422  1085  3A07               	xorlw	7	; case 4
 17423  1086  1903               	skipnz
 17424  1087  2864               	goto	i1l7197
 17425  1088  2868               	goto	i1l7203
 17426  1089  0008               	return
 17427  108A                     __end_of_I2C1_DO_TX_EMPTY:
 17428                           
 17429                           	psect	text98
 17430  1AB2                     __ptext98:	
 17431 ;; *************** function _I2C1_MasterSetIrq *****************
 17432 ;; Defined at:
 17433 ;;		line 647 in file "mcc_generated_files/i2c1_master.c"
 17434 ;; Parameters:    Size  Location     Type
 17435 ;;		None
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;		None
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      void 
 17440 ;; Registers used:
 17441 ;;		None
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/3
 17444 ;;		On exit  : 1F/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17451 ;;Total ram usage:        0 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; This function calls:
 17454 ;;		Nothing
 17455 ;; This function is called by:
 17456 ;;		_I2C1_DO_TX_EMPTY
 17457 ;; This function uses a non-reentrant model
 17458 ;;
 17459                           
 17460                           
 17461                           ;psect for function _I2C1_MasterSetIrq
 17462  1AB2                     _I2C1_MasterSetIrq:
 17463                           
 17464                           ;mcc_generated_files/i2c1_master.c: 649:     PIR1bits.SSP1IF = 1;
 17465                           
 17466                           ;incstack = 0
 17467                           ; Regs used in _I2C1_MasterSetIrq: []
 17468  1AB2  0020               	movlb	0	; select bank0
 17469  1AB3  1591               	bsf	17,3	;volatile
 17470  1AB4  0008               	return
 17471  1AB5                     __end_of_I2C1_MasterSetIrq:
 17472                           
 17473                           	psect	text99
 17474  1AFE                     __ptext99:	
 17475 ;; *************** function _I2C1_MasterIsNack *****************
 17476 ;; Defined at:
 17477 ;;		line 599 in file "mcc_generated_files/i2c1_master.c"
 17478 ;; Parameters:    Size  Location     Type
 17479 ;;		None
 17480 ;; Auto vars:     Size  Location     Type
 17481 ;;		None
 17482 ;; Return value:  Size  Location     Type
 17483 ;;                  1    wreg      _Bool 
 17484 ;; Registers used:
 17485 ;;		wreg, status,2, status,0
 17486 ;; Tracked objects:
 17487 ;;		On entry : 1C/3
 17488 ;;		On exit  : 1F/4
 17489 ;;		Unchanged: 0/0
 17490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17495 ;;Total ram usage:        0 bytes
 17496 ;; Hardware stack levels used:    1
 17497 ;; This function calls:
 17498 ;;		Nothing
 17499 ;; This function is called by:
 17500 ;;		_I2C1_MasterFsm
 17501 ;;		_I2C1_DO_TX
 17502 ;; This function uses a non-reentrant model
 17503 ;;
 17504                           
 17505                           
 17506                           ;psect for function _I2C1_MasterIsNack
 17507  1AFE                     _I2C1_MasterIsNack:
 17508                           
 17509                           ;mcc_generated_files/i2c1_master.c: 601:     return SSP1CON2bits.ACKSTAT;
 17510                           
 17511                           ;incstack = 0
 17512                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 17513  1AFE  0024               	movlb	4	; select bank4
 17514  1AFF  0E16               	swapf	22,w	;volatile
 17515  1B00  0C89               	rrf	9,f
 17516  1B01  0C89               	rrf	9,f
 17517  1B02  3901               	andlw	1
 17518  1B03  0008               	return
 17519  1B04                     __end_of_I2C1_MasterIsNack:
 17520                           
 17521                           	psect	text100
 17522  1AEF                     __ptext100:	
 17523 ;; *************** function _I2C1_MasterSendTxData *****************
 17524 ;; Defined at:
 17525 ;;		line 569 in file "mcc_generated_files/i2c1_master.c"
 17526 ;; Parameters:    Size  Location     Type
 17527 ;;  data            1    wreg     unsigned char 
 17528 ;; Auto vars:     Size  Location     Type
 17529 ;;  data            1    0[COMMON] unsigned char 
 17530 ;; Return value:  Size  Location     Type
 17531 ;;                  1    wreg      void 
 17532 ;; Registers used:
 17533 ;;		wreg
 17534 ;; Tracked objects:
 17535 ;;		On entry : 1F/3
 17536 ;;		On exit  : 1F/4
 17537 ;;		Unchanged: 0/0
 17538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17543 ;;Total ram usage:        1 bytes
 17544 ;; Hardware stack levels used:    1
 17545 ;; This function calls:
 17546 ;;		Nothing
 17547 ;; This function is called by:
 17548 ;;		_I2C1_DO_SEND_ADR_READ
 17549 ;;		_I2C1_DO_SEND_ADR_WRITE
 17550 ;;		_I2C1_DO_TX
 17551 ;; This function uses a non-reentrant model
 17552 ;;
 17553                           
 17554                           
 17555                           ;psect for function _I2C1_MasterSendTxData
 17556  1AEF                     _I2C1_MasterSendTxData:
 17557                           
 17558                           ;incstack = 0
 17559                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 17560                           ;I2C1_MasterSendTxData@data stored from wreg
 17561  1AEF  00F0               	movwf	I2C1_MasterSendTxData@data
 17562                           
 17563                           ;mcc_generated_files/i2c1_master.c: 569: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 570: {;mcc_generated_files/i
      +                          2c1_master.c: 571:     SSP1BUF = data;
 17564  1AF0  0870               	movf	I2C1_MasterSendTxData@data,w
 17565  1AF1  0024               	movlb	4	; select bank4
 17566  1AF2  0091               	movwf	17	;volatile
 17567  1AF3  0008               	return
 17568  1AF4                     __end_of_I2C1_MasterSendTxData:
 17569                           
 17570                           	psect	text101
 17571  1ACB                     __ptext101:	
 17572 ;; *************** function _I2C1_MasterSendAck *****************
 17573 ;; Defined at:
 17574 ;;		line 604 in file "mcc_generated_files/i2c1_master.c"
 17575 ;; Parameters:    Size  Location     Type
 17576 ;;		None
 17577 ;; Auto vars:     Size  Location     Type
 17578 ;;		None
 17579 ;; Return value:  Size  Location     Type
 17580 ;;                  1    wreg      void 
 17581 ;; Registers used:
 17582 ;;		None
 17583 ;; Tracked objects:
 17584 ;;		On entry : 1C/0
 17585 ;;		On exit  : 1F/4
 17586 ;;		Unchanged: 0/0
 17587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17592 ;;Total ram usage:        0 bytes
 17593 ;; Hardware stack levels used:    1
 17594 ;; This function calls:
 17595 ;;		Nothing
 17596 ;; This function is called by:
 17597 ;;		_I2C1_DO_RX
 17598 ;;		_I2C1_DO_RX_ACK
 17599 ;; This function uses a non-reentrant model
 17600 ;;
 17601                           
 17602                           
 17603                           ;psect for function _I2C1_MasterSendAck
 17604  1ACB                     _I2C1_MasterSendAck:
 17605                           
 17606                           ;mcc_generated_files/i2c1_master.c: 606:     SSP1CON2bits.ACKDT = 0;
 17607                           
 17608                           ;incstack = 0
 17609                           ; Regs used in _I2C1_MasterSendAck: []
 17610  1ACB  0024               	movlb	4	; select bank4
 17611  1ACC  1296               	bcf	22,5	;volatile
 17612                           
 17613                           ;mcc_generated_files/i2c1_master.c: 607:     SSP1CON2bits.ACKEN = 1;
 17614  1ACD  1616               	bsf	22,4	;volatile
 17615  1ACE  0008               	return
 17616  1ACF                     __end_of_I2C1_MasterSendAck:
 17617                           
 17618                           	psect	text102
 17619  1AAF                     __ptext102:	
 17620 ;; *************** function _I2C1_MasterGetRxData *****************
 17621 ;; Defined at:
 17622 ;;		line 564 in file "mcc_generated_files/i2c1_master.c"
 17623 ;; Parameters:    Size  Location     Type
 17624 ;;		None
 17625 ;; Auto vars:     Size  Location     Type
 17626 ;;		None
 17627 ;; Return value:  Size  Location     Type
 17628 ;;                  1    wreg      unsigned char 
 17629 ;; Registers used:
 17630 ;;		wreg
 17631 ;; Tracked objects:
 17632 ;;		On entry : 1F/0
 17633 ;;		On exit  : 1F/4
 17634 ;;		Unchanged: 0/0
 17635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17640 ;;Total ram usage:        0 bytes
 17641 ;; Hardware stack levels used:    1
 17642 ;; This function calls:
 17643 ;;		Nothing
 17644 ;; This function is called by:
 17645 ;;		_I2C1_DO_RX
 17646 ;; This function uses a non-reentrant model
 17647 ;;
 17648                           
 17649                           
 17650                           ;psect for function _I2C1_MasterGetRxData
 17651  1AAF                     _I2C1_MasterGetRxData:
 17652                           
 17653                           ;mcc_generated_files/i2c1_master.c: 566:     return SSP1BUF;
 17654                           
 17655                           ;incstack = 0
 17656                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 17657  1AAF  0024               	movlb	4	; select bank4
 17658  1AB0  0811               	movf	17,w	;volatile
 17659  1AB1  0008               	return
 17660  1AB2                     __end_of_I2C1_MasterGetRxData:
 17661                           
 17662                           	psect	text103
 17663  1AC7                     __ptext103:	
 17664 ;; *************** function _I2C1_MasterSendNack *****************
 17665 ;; Defined at:
 17666 ;;		line 610 in file "mcc_generated_files/i2c1_master.c"
 17667 ;; Parameters:    Size  Location     Type
 17668 ;;		None
 17669 ;; Auto vars:     Size  Location     Type
 17670 ;;		None
 17671 ;; Return value:  Size  Location     Type
 17672 ;;                  1    wreg      void 
 17673 ;; Registers used:
 17674 ;;		None
 17675 ;; Tracked objects:
 17676 ;;		On entry : 0/0
 17677 ;;		On exit  : 1F/4
 17678 ;;		Unchanged: 0/0
 17679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17683 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17684 ;;Total ram usage:        0 bytes
 17685 ;; Hardware stack levels used:    1
 17686 ;; This function calls:
 17687 ;;		Nothing
 17688 ;; This function is called by:
 17689 ;;		_I2C1_DO_RX_NACK_STOP
 17690 ;;		_I2C1_DO_RX_NACK_RESTART
 17691 ;; This function uses a non-reentrant model
 17692 ;;
 17693                           
 17694                           
 17695                           ;psect for function _I2C1_MasterSendNack
 17696  1AC7                     _I2C1_MasterSendNack:
 17697                           
 17698                           ;mcc_generated_files/i2c1_master.c: 612:     SSP1CON2bits.ACKDT = 1;
 17699                           
 17700                           ;incstack = 0
 17701                           ; Regs used in _I2C1_MasterSendNack: []
 17702  1AC7  0024               	movlb	4	; select bank4
 17703  1AC8  1696               	bsf	22,5	;volatile
 17704                           
 17705                           ;mcc_generated_files/i2c1_master.c: 613:     SSP1CON2bits.ACKEN = 1;
 17706  1AC9  1616               	bsf	22,4	;volatile
 17707  1ACA  0008               	return
 17708  1ACB                     __end_of_I2C1_MasterSendNack:
 17709                           
 17710                           	psect	text104
 17711  1AAC                     __ptext104:	
 17712 ;; *************** function _I2C1_MasterStartRx *****************
 17713 ;; Defined at:
 17714 ;;		line 584 in file "mcc_generated_files/i2c1_master.c"
 17715 ;; Parameters:    Size  Location     Type
 17716 ;;		None
 17717 ;; Auto vars:     Size  Location     Type
 17718 ;;		None
 17719 ;; Return value:  Size  Location     Type
 17720 ;;                  1    wreg      void 
 17721 ;; Registers used:
 17722 ;;		None
 17723 ;; Tracked objects:
 17724 ;;		On entry : 1F/3
 17725 ;;		On exit  : 1F/4
 17726 ;;		Unchanged: 0/0
 17727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17732 ;;Total ram usage:        0 bytes
 17733 ;; Hardware stack levels used:    1
 17734 ;; This function calls:
 17735 ;;		Nothing
 17736 ;; This function is called by:
 17737 ;;		_I2C1_DO_RCEN
 17738 ;; This function uses a non-reentrant model
 17739 ;;
 17740                           
 17741                           
 17742                           ;psect for function _I2C1_MasterStartRx
 17743  1AAC                     _I2C1_MasterStartRx:
 17744                           
 17745                           ;mcc_generated_files/i2c1_master.c: 586:     SSP1CON2bits.RCEN = 1;
 17746                           
 17747                           ;incstack = 0
 17748                           ; Regs used in _I2C1_MasterStartRx: []
 17749  1AAC  0024               	movlb	4	; select bank4
 17750  1AAD  1596               	bsf	22,3	;volatile
 17751  1AAE  0008               	return
 17752  1AAF                     __end_of_I2C1_MasterStartRx:
 17753                           
 17754                           	psect	text105
 17755  1AA4                     __ptext105:	
 17756 ;; *************** function _I2C1_CallbackReturnReset *****************
 17757 ;; Defined at:
 17758 ;;		line 526 in file "mcc_generated_files/i2c1_master.c"
 17759 ;; Parameters:    Size  Location     Type
 17760 ;;  funPtr          1    9[COMMON] PTR void 
 17761 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17762 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17763 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17764 ;; Auto vars:     Size  Location     Type
 17765 ;;		None
 17766 ;; Return value:  Size  Location     Type
 17767 ;;                  1    wreg      enum E358
 17768 ;; Registers used:
 17769 ;;		wreg
 17770 ;; Tracked objects:
 17771 ;;		On entry : 1F/3
 17772 ;;		On exit  : 1F/3
 17773 ;;		Unchanged: 1E/0
 17774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17775 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17779 ;;Total ram usage:        1 bytes
 17780 ;; Hardware stack levels used:    1
 17781 ;; This function calls:
 17782 ;;		Nothing
 17783 ;; This function is called by:
 17784 ;;		_I2C1_Open
 17785 ;;		_I2C1_DO_TX
 17786 ;;		_I2C1_DO_RX
 17787 ;;		_I2C1_DO_TX_EMPTY
 17788 ;;		_I2C1_DO_ADDRESS_NACK
 17789 ;; This function uses a non-reentrant model
 17790 ;;
 17791                           
 17792                           
 17793                           ;psect for function _I2C1_CallbackReturnReset
 17794  1AA4                     _I2C1_CallbackReturnReset:
 17795                           
 17796                           ;mcc_generated_files/i2c1_master.c: 526: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 527: {;mcc_generated_files/i2c1_master.c: 5
      +                          28:     return I2C1_RESET_LINK;
 17797                           
 17798                           ;incstack = 0
 17799                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 17800  1AA4  3005               	movlw	5
 17801  1AA5  0008               	return
 17802  1AA6                     __end_of_I2C1_CallbackReturnReset:
 17803                           
 17804                           	psect	text106
 17805  1AA2                     __ptext106:	
 17806 ;; *************** function _I2C1_CallbackReturnStop *****************
 17807 ;; Defined at:
 17808 ;;		line 521 in file "mcc_generated_files/i2c1_master.c"
 17809 ;; Parameters:    Size  Location     Type
 17810 ;;  funPtr          1    9[COMMON] PTR void 
 17811 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17812 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17813 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17814 ;; Auto vars:     Size  Location     Type
 17815 ;;		None
 17816 ;; Return value:  Size  Location     Type
 17817 ;;                  1    wreg      enum E358
 17818 ;; Registers used:
 17819 ;;		wreg
 17820 ;; Tracked objects:
 17821 ;;		On entry : 1F/3
 17822 ;;		On exit  : 1F/3
 17823 ;;		Unchanged: 1E/0
 17824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17825 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17828 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17829 ;;Total ram usage:        1 bytes
 17830 ;; Hardware stack levels used:    1
 17831 ;; This function calls:
 17832 ;;		Nothing
 17833 ;; This function is called by:
 17834 ;;		_I2C1_Open
 17835 ;;		_I2C1_SetCallback
 17836 ;;		i1_I2C1_SetCallback
 17837 ;;		_I2C1_DO_TX
 17838 ;;		_I2C1_DO_RX
 17839 ;;		_I2C1_DO_TX_EMPTY
 17840 ;;		_I2C1_DO_ADDRESS_NACK
 17841 ;; This function uses a non-reentrant model
 17842 ;;
 17843                           
 17844                           
 17845                           ;psect for function _I2C1_CallbackReturnStop
 17846  1AA2                     _I2C1_CallbackReturnStop:
 17847                           
 17848                           ;mcc_generated_files/i2c1_master.c: 521: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 522: {;mcc_generated_files/i2c1_master.c: 52
      +                          3:     return I2C1_STOP;
 17849                           
 17850                           ;incstack = 0
 17851                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 17852  1AA2  3001               	movlw	1
 17853  1AA3  0008               	return
 17854  1AA4                     __end_of_I2C1_CallbackReturnStop:
 17855                           
 17856                           	psect	text107
 17857  1D70                     __ptext107:	
 17858 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F229 *****************
 17859 ;; Defined at:
 17860 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 17861 ;; Parameters:    Size  Location     Type
 17862 ;;  ptr             1    9[COMMON] PTR void 
 17863 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17864 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17865 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17866 ;; Auto vars:     Size  Location     Type
 17867 ;;		None
 17868 ;; Return value:  Size  Location     Type
 17869 ;;                  1    wreg      enum E358
 17870 ;; Registers used:
 17871 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17872 ;; Tracked objects:
 17873 ;;		On entry : 1F/3
 17874 ;;		On exit  : 1F/3
 17875 ;;		Unchanged: 0/0
 17876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17877 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17880 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17881 ;;Total ram usage:        1 bytes
 17882 ;; Hardware stack levels used:    1
 17883 ;; Hardware stack levels required when called:    2
 17884 ;; This function calls:
 17885 ;;		i1_I2C1_SetBuffer
 17886 ;;		i1_I2C1_SetDataCompleteCallback
 17887 ;; This function is called by:
 17888 ;;		_I2C1_DO_TX
 17889 ;;		_I2C1_DO_RX
 17890 ;;		_I2C1_DO_TX_EMPTY
 17891 ;;		_I2C1_DO_ADDRESS_NACK
 17892 ;; This function uses a non-reentrant model
 17893 ;;
 17894                           
 17895                           
 17896                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F229
 17897  1D70                     _rdBlkRegCompleteHandler@i2c1_master_example$F229:
 17898                           
 17899                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 17900                           
 17901                           ;incstack = 0
 17902                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F229: [wreg+fsr1l+fsr1h+stat
      +                          us,2+status,0+pclath+cstack]
 17903  1D70  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr,w
 17904  1D71  3E02               	addlw	2
 17905  1D72  0086               	movwf	6
 17906  1D73  0187               	clrf	7
 17907  1D74  0801               	movf	1,w
 17908  1D75  00F0               	movwf	i1I2C1_SetBuffer@buffer
 17909  1D76  3000               	movlw	0
 17910  1D77  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 17911  1D78  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr,w
 17912  1D79  0086               	movwf	6
 17913  1D7A  0187               	clrf	7
 17914  1D7B  3F40               	moviw [0]fsr1
 17915  1D7C  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 17916  1D7D  3F41               	moviw [1]fsr1
 17917  1D7E  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 17918  1D7F  319B  2347  319D   	fcall	i1_I2C1_SetBuffer
 17919                           
 17920                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 17921  1D82  3000               	movlw	0
 17922  1D83  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 17923  1D84  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 17924  1D85  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 17925  1D86  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 17926                           
 17927                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 17928  1D88  3002               	movlw	2
 17929  1D89  0008               	return
 17930  1D8A                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F229:
 17931                           
 17932                           	psect	text108
 17933  1C8A                     __ptext108:	
 17934 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F212 *****************
 17935 ;; Defined at:
 17936 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 17937 ;; Parameters:    Size  Location     Type
 17938 ;;  ptr             1    9[COMMON] PTR void 
 17939 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 17940 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 17941 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 17942 ;; Auto vars:     Size  Location     Type
 17943 ;;		None
 17944 ;; Return value:  Size  Location     Type
 17945 ;;                  1    wreg      enum E358
 17946 ;; Registers used:
 17947 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17948 ;; Tracked objects:
 17949 ;;		On entry : 1F/3
 17950 ;;		On exit  : 1F/3
 17951 ;;		Unchanged: 0/0
 17952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17953 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17957 ;;Total ram usage:        1 bytes
 17958 ;; Hardware stack levels used:    1
 17959 ;; Hardware stack levels required when called:    2
 17960 ;; This function calls:
 17961 ;;		i1_I2C1_SetBuffer
 17962 ;;		i1_I2C1_SetDataCompleteCallback
 17963 ;; This function is called by:
 17964 ;;		_I2C1_DO_TX
 17965 ;;		_I2C1_DO_RX
 17966 ;;		_I2C1_DO_TX_EMPTY
 17967 ;;		_I2C1_DO_ADDRESS_NACK
 17968 ;; This function uses a non-reentrant model
 17969 ;;
 17970                           
 17971                           
 17972                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F212
 17973  1C8A                     _wr1RegCompleteHandler@i2c1_master_example$F212:
 17974                           
 17975                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 17976                           
 17977                           ;incstack = 0
 17978                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F212: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 17979  1C8A  0879               	movf	wr1RegCompleteHandler@i2c1_master_example$F212@ptr,w
 17980  1C8B  00F0               	movwf	i1I2C1_SetBuffer@buffer
 17981  1C8C  39FF               	andlw	255
 17982  1C8D  1D03               	skipz
 17983  1C8E  3000               	movlw	0
 17984  1C8F  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 17985  1C90  3001               	movlw	1
 17986  1C91  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 17987  1C92  3000               	movlw	0
 17988  1C93  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 17989  1C94  319B  2347  319C   	fcall	i1_I2C1_SetBuffer
 17990                           
 17991                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 17992  1C97  3000               	movlw	0
 17993  1C98  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 17994  1C99  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 17995  1C9A  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 17996  1C9B  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 17997                           
 17998                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 17999  1C9D  3004               	movlw	4
 18000  1C9E  0008               	return
 18001  1C9F                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F212:
 18002                           
 18003                           	psect	text109
 18004  1C75                     __ptext109:	
 18005 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F206 *****************
 18006 ;; Defined at:
 18007 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 18008 ;; Parameters:    Size  Location     Type
 18009 ;;  ptr             1    9[COMMON] PTR void 
 18010 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18011 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18012 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18013 ;; Auto vars:     Size  Location     Type
 18014 ;;		None
 18015 ;; Return value:  Size  Location     Type
 18016 ;;                  1    wreg      enum E358
 18017 ;; Registers used:
 18018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18019 ;; Tracked objects:
 18020 ;;		On entry : 1F/3
 18021 ;;		On exit  : 1F/3
 18022 ;;		Unchanged: 0/0
 18023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18024 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18027 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18028 ;;Total ram usage:        1 bytes
 18029 ;; Hardware stack levels used:    1
 18030 ;; Hardware stack levels required when called:    2
 18031 ;; This function calls:
 18032 ;;		i1_I2C1_SetBuffer
 18033 ;;		i1_I2C1_SetDataCompleteCallback
 18034 ;; This function is called by:
 18035 ;;		_I2C1_DO_TX
 18036 ;;		_I2C1_DO_RX
 18037 ;;		_I2C1_DO_TX_EMPTY
 18038 ;;		_I2C1_DO_ADDRESS_NACK
 18039 ;; This function uses a non-reentrant model
 18040 ;;
 18041                           
 18042                           
 18043                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F206
 18044  1C75                     _rd2RegCompleteHandler@i2c1_master_example$F206:
 18045                           
 18046                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 18047                           
 18048                           ;incstack = 0
 18049                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F206: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 18050  1C75  0879               	movf	rd2RegCompleteHandler@i2c1_master_example$F206@ptr,w
 18051  1C76  00F0               	movwf	i1I2C1_SetBuffer@buffer
 18052  1C77  39FF               	andlw	255
 18053  1C78  1D03               	skipz
 18054  1C79  3000               	movlw	0
 18055  1C7A  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 18056  1C7B  3002               	movlw	2
 18057  1C7C  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 18058  1C7D  3000               	movlw	0
 18059  1C7E  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 18060  1C7F  319B  2347  319C   	fcall	i1_I2C1_SetBuffer
 18061                           
 18062                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 18063  1C82  3000               	movlw	0
 18064  1C83  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 18065  1C84  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 18066  1C85  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 18067  1C86  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 18068                           
 18069                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 18070  1C88  3002               	movlw	2
 18071  1C89  0008               	return
 18072  1C8A                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F206:
 18073                           
 18074                           	psect	text110
 18075  1C60                     __ptext110:	
 18076 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F195 *****************
 18077 ;; Defined at:
 18078 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 18079 ;; Parameters:    Size  Location     Type
 18080 ;;  ptr             1    9[COMMON] PTR void 
 18081 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18082 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18083 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18084 ;; Auto vars:     Size  Location     Type
 18085 ;;		None
 18086 ;; Return value:  Size  Location     Type
 18087 ;;                  1    wreg      enum E358
 18088 ;; Registers used:
 18089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18090 ;; Tracked objects:
 18091 ;;		On entry : 1F/3
 18092 ;;		On exit  : 1F/3
 18093 ;;		Unchanged: 0/0
 18094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18095 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18099 ;;Total ram usage:        1 bytes
 18100 ;; Hardware stack levels used:    1
 18101 ;; Hardware stack levels required when called:    2
 18102 ;; This function calls:
 18103 ;;		i1_I2C1_SetBuffer
 18104 ;;		i1_I2C1_SetDataCompleteCallback
 18105 ;; This function is called by:
 18106 ;;		_I2C1_DO_TX
 18107 ;;		_I2C1_DO_RX
 18108 ;;		_I2C1_DO_TX_EMPTY
 18109 ;;		_I2C1_DO_ADDRESS_NACK
 18110 ;; This function uses a non-reentrant model
 18111 ;;
 18112                           
 18113                           
 18114                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F195
 18115  1C60                     _rd1RegCompleteHandler@i2c1_master_example$F195:
 18116                           
 18117                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 18118                           
 18119                           ;incstack = 0
 18120                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F195: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 18121  1C60  0879               	movf	rd1RegCompleteHandler@i2c1_master_example$F195@ptr,w
 18122  1C61  00F0               	movwf	i1I2C1_SetBuffer@buffer
 18123  1C62  39FF               	andlw	255
 18124  1C63  1D03               	skipz
 18125  1C64  3000               	movlw	0
 18126  1C65  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 18127  1C66  3001               	movlw	1
 18128  1C67  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 18129  1C68  3000               	movlw	0
 18130  1C69  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 18131  1C6A  319B  2347  319C   	fcall	i1_I2C1_SetBuffer
 18132                           
 18133                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 18134  1C6D  3000               	movlw	0
 18135  1C6E  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 18136  1C6F  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 18137  1C70  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 18138  1C71  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 18139                           
 18140                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 18141  1C73  3002               	movlw	2
 18142  1C74  0008               	return
 18143  1C75                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F195:
 18144                           
 18145                           	psect	text111
 18146  1D56                     __ptext111:	
 18147 ;; *************** function _rdBlkRegCompleteHandler *****************
 18148 ;; Defined at:
 18149 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 18150 ;; Parameters:    Size  Location     Type
 18151 ;;  p               1    9[COMMON] PTR void 
 18152 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18153 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18154 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18155 ;; Auto vars:     Size  Location     Type
 18156 ;;		None
 18157 ;; Return value:  Size  Location     Type
 18158 ;;                  1    wreg      enum E358
 18159 ;; Registers used:
 18160 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18161 ;; Tracked objects:
 18162 ;;		On entry : 1F/3
 18163 ;;		On exit  : 1F/3
 18164 ;;		Unchanged: 0/0
 18165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18166 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18170 ;;Total ram usage:        1 bytes
 18171 ;; Hardware stack levels used:    1
 18172 ;; Hardware stack levels required when called:    2
 18173 ;; This function calls:
 18174 ;;		i1_I2C1_SetBuffer
 18175 ;;		i1_I2C1_SetDataCompleteCallback
 18176 ;; This function is called by:
 18177 ;;		_I2C1_DO_TX
 18178 ;;		_I2C1_DO_RX
 18179 ;;		_I2C1_DO_TX_EMPTY
 18180 ;;		_I2C1_DO_ADDRESS_NACK
 18181 ;; This function uses a non-reentrant model
 18182 ;;
 18183                           
 18184                           
 18185                           ;psect for function _rdBlkRegCompleteHandler
 18186  1D56                     _rdBlkRegCompleteHandler:
 18187                           
 18188                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 136:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 18189                           
 18190                           ;incstack = 0
 18191                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 18192  1D56  0879               	movf	rdBlkRegCompleteHandler@p,w
 18193  1D57  3E02               	addlw	2
 18194  1D58  0086               	movwf	6
 18195  1D59  0187               	clrf	7
 18196  1D5A  0801               	movf	1,w
 18197  1D5B  00F0               	movwf	i1I2C1_SetBuffer@buffer
 18198  1D5C  3000               	movlw	0
 18199  1D5D  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 18200  1D5E  0879               	movf	rdBlkRegCompleteHandler@p,w
 18201  1D5F  0086               	movwf	6
 18202  1D60  0187               	clrf	7
 18203  1D61  3F40               	moviw [0]fsr1
 18204  1D62  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 18205  1D63  3F41               	moviw [1]fsr1
 18206  1D64  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 18207  1D65  319B  2347  319D   	fcall	i1_I2C1_SetBuffer
 18208                           
 18209                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 18210  1D68  3000               	movlw	0
 18211  1D69  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 18212  1D6A  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 18213  1D6B  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 18214  1D6C  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 18215                           
 18216                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return I2C1_RESTART_READ;
 18217  1D6E  3002               	movlw	2
 18218  1D6F  0008               	return
 18219  1D70                     __end_of_rdBlkRegCompleteHandler:
 18220                           
 18221                           	psect	text112
 18222  1C4B                     __ptext112:	
 18223 ;; *************** function _wr2RegCompleteHandler *****************
 18224 ;; Defined at:
 18225 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 18226 ;; Parameters:    Size  Location     Type
 18227 ;;  p               1    9[COMMON] PTR void 
 18228 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18229 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18230 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18231 ;; Auto vars:     Size  Location     Type
 18232 ;;		None
 18233 ;; Return value:  Size  Location     Type
 18234 ;;                  1    wreg      enum E358
 18235 ;; Registers used:
 18236 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18237 ;; Tracked objects:
 18238 ;;		On entry : 1F/3
 18239 ;;		On exit  : 1F/3
 18240 ;;		Unchanged: 0/0
 18241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18242 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18245 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18246 ;;Total ram usage:        1 bytes
 18247 ;; Hardware stack levels used:    1
 18248 ;; Hardware stack levels required when called:    2
 18249 ;; This function calls:
 18250 ;;		i1_I2C1_SetBuffer
 18251 ;;		i1_I2C1_SetDataCompleteCallback
 18252 ;; This function is called by:
 18253 ;;		_I2C1_DO_TX
 18254 ;;		_I2C1_DO_RX
 18255 ;;		_I2C1_DO_TX_EMPTY
 18256 ;;		_I2C1_DO_ADDRESS_NACK
 18257 ;; This function uses a non-reentrant model
 18258 ;;
 18259                           
 18260                           
 18261                           ;psect for function _wr2RegCompleteHandler
 18262  1C4B                     _wr2RegCompleteHandler:
 18263                           
 18264                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 112:     I2C1_SetBuffer(p,2);
 18265                           
 18266                           ;incstack = 0
 18267                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18268  1C4B  0879               	movf	wr2RegCompleteHandler@p,w
 18269  1C4C  00F0               	movwf	i1I2C1_SetBuffer@buffer
 18270  1C4D  39FF               	andlw	255
 18271  1C4E  1D03               	skipz
 18272  1C4F  3000               	movlw	0
 18273  1C50  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 18274  1C51  3002               	movlw	2
 18275  1C52  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 18276  1C53  3000               	movlw	0
 18277  1C54  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 18278  1C55  319B  2347  319C   	fcall	i1_I2C1_SetBuffer
 18279                           
 18280                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 18281  1C58  3000               	movlw	0
 18282  1C59  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 18283  1C5A  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 18284  1C5B  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 18285  1C5C  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 18286                           
 18287                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return I2C1_CONTINUE;
 18288  1C5E  3004               	movlw	4
 18289  1C5F  0008               	return
 18290  1C60                     __end_of_wr2RegCompleteHandler:
 18291                           
 18292                           	psect	text113
 18293  1C36                     __ptext113:	
 18294 ;; *************** function _rd2RegCompleteHandler *****************
 18295 ;; Defined at:
 18296 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 18297 ;; Parameters:    Size  Location     Type
 18298 ;;  p               1    9[COMMON] PTR void 
 18299 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18300 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18301 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18302 ;; Auto vars:     Size  Location     Type
 18303 ;;		None
 18304 ;; Return value:  Size  Location     Type
 18305 ;;                  1    wreg      enum E358
 18306 ;; Registers used:
 18307 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18308 ;; Tracked objects:
 18309 ;;		On entry : 1F/3
 18310 ;;		On exit  : 1F/3
 18311 ;;		Unchanged: 0/0
 18312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18313 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18316 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18317 ;;Total ram usage:        1 bytes
 18318 ;; Hardware stack levels used:    1
 18319 ;; Hardware stack levels required when called:    2
 18320 ;; This function calls:
 18321 ;;		i1_I2C1_SetBuffer
 18322 ;;		i1_I2C1_SetDataCompleteCallback
 18323 ;; This function is called by:
 18324 ;;		_I2C1_DO_TX
 18325 ;;		_I2C1_DO_RX
 18326 ;;		_I2C1_DO_TX_EMPTY
 18327 ;;		_I2C1_DO_ADDRESS_NACK
 18328 ;; This function uses a non-reentrant model
 18329 ;;
 18330                           
 18331                           
 18332                           ;psect for function _rd2RegCompleteHandler
 18333  1C36                     _rd2RegCompleteHandler:
 18334                           
 18335                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 89:     I2C1_SetBuffer(p,2);
 18336                           
 18337                           ;incstack = 0
 18338                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18339  1C36  0879               	movf	rd2RegCompleteHandler@p,w
 18340  1C37  00F0               	movwf	i1I2C1_SetBuffer@buffer
 18341  1C38  39FF               	andlw	255
 18342  1C39  1D03               	skipz
 18343  1C3A  3000               	movlw	0
 18344  1C3B  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 18345  1C3C  3002               	movlw	2
 18346  1C3D  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 18347  1C3E  3000               	movlw	0
 18348  1C3F  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 18349  1C40  319B  2347  319C   	fcall	i1_I2C1_SetBuffer
 18350                           
 18351                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 18352  1C43  3000               	movlw	0
 18353  1C44  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 18354  1C45  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 18355  1C46  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 18356  1C47  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 18357                           
 18358                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return I2C1_RESTART_READ;
 18359  1C49  3002               	movlw	2
 18360  1C4A  0008               	return
 18361  1C4B                     __end_of_rd2RegCompleteHandler:
 18362                           
 18363                           	psect	text114
 18364  1C21                     __ptext114:	
 18365 ;; *************** function _rd1RegCompleteHandler *****************
 18366 ;; Defined at:
 18367 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 18368 ;; Parameters:    Size  Location     Type
 18369 ;;  p               1    9[COMMON] PTR void 
 18370 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18371 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18372 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18373 ;; Auto vars:     Size  Location     Type
 18374 ;;		None
 18375 ;; Return value:  Size  Location     Type
 18376 ;;                  1    wreg      enum E358
 18377 ;; Registers used:
 18378 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18379 ;; Tracked objects:
 18380 ;;		On entry : 1F/3
 18381 ;;		On exit  : 1F/3
 18382 ;;		Unchanged: 0/0
 18383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18387 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18388 ;;Total ram usage:        1 bytes
 18389 ;; Hardware stack levels used:    1
 18390 ;; Hardware stack levels required when called:    2
 18391 ;; This function calls:
 18392 ;;		i1_I2C1_SetBuffer
 18393 ;;		i1_I2C1_SetDataCompleteCallback
 18394 ;; This function is called by:
 18395 ;;		_i2c_read1ByteRegister
 18396 ;;		_I2C1_DO_TX
 18397 ;;		_I2C1_DO_RX
 18398 ;;		_I2C1_DO_TX_EMPTY
 18399 ;;		_I2C1_DO_ADDRESS_NACK
 18400 ;; This function uses a non-reentrant model
 18401 ;;
 18402                           
 18403                           
 18404                           ;psect for function _rd1RegCompleteHandler
 18405  1C21                     _rd1RegCompleteHandler:
 18406                           
 18407                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 60:     I2C1_SetBuffer(p,1);
 18408                           
 18409                           ;incstack = 0
 18410                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18411  1C21  0879               	movf	rd1RegCompleteHandler@p,w
 18412  1C22  00F0               	movwf	i1I2C1_SetBuffer@buffer
 18413  1C23  39FF               	andlw	255
 18414  1C24  1D03               	skipz
 18415  1C25  3000               	movlw	0
 18416  1C26  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 18417  1C27  3001               	movlw	1
 18418  1C28  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 18419  1C29  3000               	movlw	0
 18420  1C2A  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 18421  1C2B  319B  2347  319C   	fcall	i1_I2C1_SetBuffer
 18422                           
 18423                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 18424  1C2E  3000               	movlw	0
 18425  1C2F  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 18426  1C30  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 18427  1C31  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 18428  1C32  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 18429                           
 18430                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return I2C1_RESTART_READ;
 18431  1C34  3002               	movlw	2
 18432  1C35  0008               	return
 18433  1C36                     __end_of_rd1RegCompleteHandler:
 18434                           
 18435                           	psect	text115
 18436  1C0C                     __ptext115:	
 18437 ;; *************** function _wr1RegCompleteHandler *****************
 18438 ;; Defined at:
 18439 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 18440 ;; Parameters:    Size  Location     Type
 18441 ;;  p               1    9[COMMON] PTR void 
 18442 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18443 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18444 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18445 ;; Auto vars:     Size  Location     Type
 18446 ;;		None
 18447 ;; Return value:  Size  Location     Type
 18448 ;;                  1    wreg      enum E358
 18449 ;; Registers used:
 18450 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18451 ;; Tracked objects:
 18452 ;;		On entry : 1F/3
 18453 ;;		On exit  : 1F/3
 18454 ;;		Unchanged: 0/0
 18455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18456 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18460 ;;Total ram usage:        1 bytes
 18461 ;; Hardware stack levels used:    1
 18462 ;; Hardware stack levels required when called:    2
 18463 ;; This function calls:
 18464 ;;		i1_I2C1_SetBuffer
 18465 ;;		i1_I2C1_SetDataCompleteCallback
 18466 ;; This function is called by:
 18467 ;;		_I2C1_DO_TX
 18468 ;;		_I2C1_DO_RX
 18469 ;;		_I2C1_DO_TX_EMPTY
 18470 ;;		_I2C1_DO_ADDRESS_NACK
 18471 ;; This function uses a non-reentrant model
 18472 ;;
 18473                           
 18474                           
 18475                           ;psect for function _wr1RegCompleteHandler
 18476  1C0C                     _wr1RegCompleteHandler:
 18477                           
 18478                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 33:     I2C1_SetBuffer(p,1);
 18479                           
 18480                           ;incstack = 0
 18481                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 18482  1C0C  0879               	movf	wr1RegCompleteHandler@p,w
 18483  1C0D  00F0               	movwf	i1I2C1_SetBuffer@buffer
 18484  1C0E  39FF               	andlw	255
 18485  1C0F  1D03               	skipz
 18486  1C10  3000               	movlw	0
 18487  1C11  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 18488  1C12  3001               	movlw	1
 18489  1C13  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 18490  1C14  3000               	movlw	0
 18491  1C15  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 18492  1C16  319B  2347  319C   	fcall	i1_I2C1_SetBuffer
 18493                           
 18494                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 18495  1C19  3000               	movlw	0
 18496  1C1A  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 18497  1C1B  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 18498  1C1C  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 18499  1C1D  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 18500                           
 18501                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return I2C1_CONTINUE;
 18502  1C1F  3004               	movlw	4
 18503  1C20  0008               	return
 18504  1C21                     __end_of_wr1RegCompleteHandler:
 18505                           
 18506                           	psect	text116
 18507  1BF7                     __ptext116:	
 18508 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F218 *****************
 18509 ;; Defined at:
 18510 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 18511 ;; Parameters:    Size  Location     Type
 18512 ;;  ptr             1    9[COMMON] PTR void 
 18513 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18514 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18515 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18516 ;; Auto vars:     Size  Location     Type
 18517 ;;		None
 18518 ;; Return value:  Size  Location     Type
 18519 ;;                  1    wreg      enum E358
 18520 ;; Registers used:
 18521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18522 ;; Tracked objects:
 18523 ;;		On entry : 1F/3
 18524 ;;		On exit  : 1F/3
 18525 ;;		Unchanged: 0/0
 18526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18527 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18530 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18531 ;;Total ram usage:        1 bytes
 18532 ;; Hardware stack levels used:    1
 18533 ;; Hardware stack levels required when called:    2
 18534 ;; This function calls:
 18535 ;;		i1_I2C1_SetBuffer
 18536 ;;		i1_I2C1_SetDataCompleteCallback
 18537 ;; This function is called by:
 18538 ;;		_I2C1_DO_TX
 18539 ;;		_I2C1_DO_RX
 18540 ;;		_I2C1_DO_TX_EMPTY
 18541 ;;		_I2C1_DO_ADDRESS_NACK
 18542 ;; This function uses a non-reentrant model
 18543 ;;
 18544                           
 18545                           
 18546                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F218
 18547  1BF7                     _wr2RegCompleteHandler@i2c1_master_example$F218:
 18548                           
 18549                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 18550                           
 18551                           ;incstack = 0
 18552                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F218: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 18553  1BF7  0879               	movf	wr2RegCompleteHandler@i2c1_master_example$F218@ptr,w
 18554  1BF8  00F0               	movwf	i1I2C1_SetBuffer@buffer
 18555  1BF9  39FF               	andlw	255
 18556  1BFA  1D03               	skipz
 18557  1BFB  3000               	movlw	0
 18558  1BFC  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 18559  1BFD  3002               	movlw	2
 18560  1BFE  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 18561  1BFF  3000               	movlw	0
 18562  1C00  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 18563  1C01  319B  2347  319B   	fcall	i1_I2C1_SetBuffer
 18564                           
 18565                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 18566  1C04  3000               	movlw	0
 18567  1C05  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 18568  1C06  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 18569  1C07  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 18570  1C08  319B  2353         	fcall	i1_I2C1_SetDataCompleteCallback
 18571                           
 18572                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 18573  1C0A  3004               	movlw	4
 18574  1C0B  0008               	return
 18575  1C0C                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F218:
 18576                           
 18577                           	psect	text117
 18578  1B53                     __ptext117:	
 18579 ;; *************** function i1_I2C1_SetDataCompleteCallback *****************
 18580 ;; Defined at:
 18581 ;;		line 274 in file "mcc_generated_files/i2c1_master.c"
 18582 ;; Parameters:    Size  Location     Type
 18583 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 18584 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 18585 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 18586 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 18587 ;;  ptr             1    7[COMMON] PTR void 
 18588 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18589 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18590 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18591 ;; Auto vars:     Size  Location     Type
 18592 ;;		None
 18593 ;; Return value:  Size  Location     Type
 18594 ;;                  1    wreg      void 
 18595 ;; Registers used:
 18596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18597 ;; Tracked objects:
 18598 ;;		On entry : 1F/3
 18599 ;;		On exit  : 1F/3
 18600 ;;		Unchanged: 1E/0
 18601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18602 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18606 ;;Total ram usage:        4 bytes
 18607 ;; Hardware stack levels used:    1
 18608 ;; Hardware stack levels required when called:    1
 18609 ;; This function calls:
 18610 ;;		i1_I2C1_SetCallback
 18611 ;; This function is called by:
 18612 ;;		_wr1RegCompleteHandler
 18613 ;;		_rd1RegCompleteHandler
 18614 ;;		_rd2RegCompleteHandler
 18615 ;;		_wr2RegCompleteHandler
 18616 ;;		_rdBlkRegCompleteHandler
 18617 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 18618 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 18619 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 18620 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 18621 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 18622 ;; This function uses a non-reentrant model
 18623 ;;
 18624                           
 18625                           
 18626                           ;psect for function i1_I2C1_SetDataCompleteCallback
 18627  1B53                     i1_I2C1_SetDataCompleteCallback:
 18628                           
 18629                           ;mcc_generated_files/i2c1_master.c: 274: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 275: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 276:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 18630                           
 18631                           ;incstack = 0
 18632                           ; Regs used in i1_I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 18633  1B53  0876               	movf	i1I2C1_SetDataCompleteCallback@cb+1,w
 18634  1B54  00F1               	movwf	i1I2C1_SetCallback@cb+1
 18635  1B55  0875               	movf	i1I2C1_SetDataCompleteCallback@cb,w
 18636  1B56  00F0               	movwf	i1I2C1_SetCallback@cb
 18637  1B57  0877               	movf	i1I2C1_SetDataCompleteCallback@ptr,w
 18638  1B58  00F8               	movwf	??i1_I2C1_SetDataCompleteCallback
 18639  1B59  0878               	movf	??i1_I2C1_SetDataCompleteCallback,w
 18640  1B5A  00F2               	movwf	i1I2C1_SetCallback@ptr
 18641  1B5B  3000               	movlw	0
 18642  1B5C  319F  2788         	fcall	i1_I2C1_SetCallback
 18643  1B5E  0008               	return
 18644  1B5F                     __end_ofi1_I2C1_SetDataCompleteCallback:
 18645                           
 18646                           	psect	text118
 18647  1F88                     __ptext118:	
 18648 ;; *************** function i1_I2C1_SetCallback *****************
 18649 ;; Defined at:
 18650 ;;		line 304 in file "mcc_generated_files/i2c1_master.c"
 18651 ;; Parameters:    Size  Location     Type
 18652 ;;  idx             1    wreg     enum E3010
 18653 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 18654 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 18655 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 18656 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 18657 ;;  ptr             1    2[COMMON] PTR void 
 18658 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 18659 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 18660 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 18661 ;; Auto vars:     Size  Location     Type
 18662 ;;  idx             1    4[COMMON] enum E3010
 18663 ;; Return value:  Size  Location     Type
 18664 ;;                  1    wreg      void 
 18665 ;; Registers used:
 18666 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18667 ;; Tracked objects:
 18668 ;;		On entry : 1F/3
 18669 ;;		On exit  : 1F/3
 18670 ;;		Unchanged: 1E/0
 18671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18672 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18673 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18674 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18675 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18676 ;;Total ram usage:        5 bytes
 18677 ;; Hardware stack levels used:    1
 18678 ;; This function calls:
 18679 ;;		Nothing
 18680 ;; This function is called by:
 18681 ;;		i1_I2C1_SetDataCompleteCallback
 18682 ;; This function uses a non-reentrant model
 18683 ;;
 18684                           
 18685                           
 18686                           ;psect for function i1_I2C1_SetCallback
 18687  1F88                     i1_I2C1_SetCallback:
 18688                           
 18689                           ;incstack = 0
 18690                           ; Regs used in i1_I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 18691                           ;i1I2C1_SetCallback@idx stored from wreg
 18692  1F88  00F4               	movwf	i1I2C1_SetCallback@idx
 18693                           
 18694                           ;mcc_generated_files/i2c1_master.c: 304: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 305: {;mcc_gen
      +                          erated_files/i2c1_master.c: 306:     if(cb)
 18695  1F89  0870               	movf	i1I2C1_SetCallback@cb,w
 18696  1F8A  0471               	iorwf	i1I2C1_SetCallback@cb+1,w
 18697  1F8B  1903               	btfsc	3,2
 18698  1F8C  2FA0               	goto	i1l4491
 18699                           
 18700                           ;mcc_generated_files/i2c1_master.c: 307:     {;mcc_generated_files/i2c1_master.c: 308:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 18701  1F8D  3574               	lslf	i1I2C1_SetCallback@idx,w
 18702  1F8E  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 18703  1F8F  0086               	movwf	6
 18704  1F90  3001               	movlw	1	; select bank3/4
 18705  1F91  0087               	movwf	7
 18706  1F92  0870               	movf	i1I2C1_SetCallback@cb,w
 18707  1F93  3FC0               	movwi [0]fsr1
 18708  1F94  0871               	movf	i1I2C1_SetCallback@cb+1,w
 18709  1F95  3FC1               	movwi [1]fsr1
 18710                           
 18711                           ;mcc_generated_files/i2c1_master.c: 309:         I2C1_Status.callbackPayload[idx] = ptr;
 18712  1F96  0872               	movf	i1I2C1_SetCallback@ptr,w
 18713  1F97  00F3               	movwf	??i1_I2C1_SetCallback
 18714  1F98  0874               	movf	i1I2C1_SetCallback@idx,w
 18715  1F99  3EDB               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 18716  1F9A  0086               	movwf	6
 18717  1F9B  3001               	movlw	1	; select bank3/4
 18718  1F9C  0087               	movwf	7
 18719  1F9D  0873               	movf	??i1_I2C1_SetCallback,w
 18720  1F9E  0081               	movwf	1
 18721                           
 18722                           ;mcc_generated_files/i2c1_master.c: 310:     }
 18723  1F9F  0008               	return
 18724  1FA0                     i1l4491:
 18725                           
 18726                           ;mcc_generated_files/i2c1_master.c: 312:     {;mcc_generated_files/i2c1_master.c: 313:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 18727  1FA0  3574               	lslf	i1I2C1_SetCallback@idx,w
 18728  1FA1  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 18729  1FA2  0086               	movwf	6
 18730  1FA3  3001               	movlw	1	; select bank3/4
 18731  1FA4  0087               	movwf	7
 18732  1FA5  30A2               	movlw	low _I2C1_CallbackReturnStop
 18733  1FA6  3FC0               	movwi [0]fsr1
 18734  1FA7  301A               	movlw	high _I2C1_CallbackReturnStop
 18735  1FA8  3FC1               	movwi [1]fsr1
 18736                           
 18737                           ;mcc_generated_files/i2c1_master.c: 314:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 18738  1FA9  0874               	movf	i1I2C1_SetCallback@idx,w
 18739  1FAA  3EDB               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 18740  1FAB  0086               	movwf	6
 18741  1FAC  3001               	movlw	1	; select bank3/4
 18742  1FAD  0087               	movwf	7
 18743  1FAE  0181               	clrf	1
 18744  1FAF  0008               	return
 18745  1FB0                     __end_ofi1_I2C1_SetCallback:
 18746                           
 18747                           	psect	text119
 18748  1B47                     __ptext119:	
 18749 ;; *************** function i1_I2C1_SetBuffer *****************
 18750 ;; Defined at:
 18751 ;;		line 264 in file "mcc_generated_files/i2c1_master.c"
 18752 ;; Parameters:    Size  Location     Type
 18753 ;;  buffer          2    0[COMMON] PTR void 
 18754 ;;		 -> tasbuff(2), TAS_NORMAL(2), TAS_CLEAR_FALT(2), TAS_CHK_RAILS(2), 
 18755 ;;		 -> TAS_PLAY(2), TAS_MUTE(2), TAS_FS96K(2), TAS_FS48K(2), 
 18756 ;;		 -> TAS_FS44K(2), TAS_AC(2), TAS_DCDIAG_CLEAR(2), TAS_RUN(2), 
 18757 ;;		 -> TAS_RESET(2), INIT9211_31(2), INIT9211_27(2), INIT9211_26(2), 
 18758 ;;		 -> INIT9211_2B(2), INIT9211_2E(2), INIT9211_20(2), ADC_96K(2), 
 18759 ;;		 -> ADC_DC(2), DIT_I2S(2), DIT_LVDS(2), DIT_ADC(2), 
 18760 ;;		 -> DIT_DIR(2), ADC_ATTR_0dB(2), ADC_ATTL_0dB(2), CALC_MOUT(2), 
 18761 ;;		 -> DIR_COAX(2), DIR_OPT(2), AUXSRC_LVDS(2), AUXSRC_ADC(2), 
 18762 ;;		 -> AUXSRC_DIR(2), AUXSRC_AUTO(2), SRC_I2S(2), SRC_LVDS(2), 
 18763 ;;		 -> SRC_ADC(2), SRC_DIR(2), I2S_IN(2), I2S_OUT(2), 
 18764 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 18765 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 18766 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBloc
      +k@d(3), 
 18767 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 18768 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 18769 ;;		 -> NULL(0), i2c_lcd_send_data@lowerdata_en(1), i2c_lcd_send_data@lowerdata(1), i2c_lcd_send_data@upperdata_en(1), 
 18770 ;;		 -> i2c_lcd_send_data@upperdata(1), i2c_lcd_send_upper4bit@upperdata_en(1), i2c_lcd_send_upper4bit@upperdata(1), i2c
      +_lcd_send_command@lowerdata_en(1), 
 18771 ;;		 -> i2c_lcd_send_command@lowerdata(1), i2c_lcd_send_command@upperdata_en(1), i2c_lcd_send_command@upperdata(1), 
 18772 ;;  bufferSize      2    2[COMMON] unsigned int 
 18773 ;; Auto vars:     Size  Location     Type
 18774 ;;		None
 18775 ;; Return value:  Size  Location     Type
 18776 ;;                  1    wreg      void 
 18777 ;; Registers used:
 18778 ;;		wreg
 18779 ;; Tracked objects:
 18780 ;;		On entry : 1F/3
 18781 ;;		On exit  : 1F/3
 18782 ;;		Unchanged: 0/0
 18783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18784 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18787 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18788 ;;Total ram usage:        4 bytes
 18789 ;; Hardware stack levels used:    1
 18790 ;; This function calls:
 18791 ;;		Nothing
 18792 ;; This function is called by:
 18793 ;;		_wr1RegCompleteHandler
 18794 ;;		_rd1RegCompleteHandler
 18795 ;;		_rd2RegCompleteHandler
 18796 ;;		_wr2RegCompleteHandler
 18797 ;;		_rdBlkRegCompleteHandler
 18798 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 18799 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 18800 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 18801 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 18802 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 18803 ;; This function uses a non-reentrant model
 18804 ;;
 18805                           
 18806                           
 18807                           ;psect for function i1_I2C1_SetBuffer
 18808  1B47                     i1_I2C1_SetBuffer:
 18809                           
 18810                           ;mcc_generated_files/i2c1_master.c: 264: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 265: {;mcc_generated_files/i2c1_master.c: 266: 
      +                              if(I2C1_Status.bufferFree)
 18811                           
 18812                           ;incstack = 0
 18813                           ; Regs used in i1_I2C1_SetBuffer: [wreg]
 18814  1B47  1DEC               	btfss	(_I2C1_Status^(0+384)+29),3
 18815  1B48  0008               	return
 18816                           
 18817                           ;mcc_generated_files/i2c1_master.c: 267:     {;mcc_generated_files/i2c1_master.c: 268:  
      +                                 I2C1_Status.data_ptr = buffer;
 18818  1B49  0871               	movf	i1I2C1_SetBuffer@buffer+1,w
 18819  1B4A  00E7               	movwf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128)
 18820  1B4B  0870               	movf	i1I2C1_SetBuffer@buffer,w
 18821  1B4C  00E6               	movwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128)
 18822                           
 18823                           ;mcc_generated_files/i2c1_master.c: 269:         I2C1_Status.data_length = bufferSize;
 18824  1B4D  0873               	movf	i1I2C1_SetBuffer@bufferSize+1,w
 18825  1B4E  00E9               	movwf	((_I2C1_Status+1)^(0+384)+25)
 18826  1B4F  0872               	movf	i1I2C1_SetBuffer@bufferSize,w
 18827  1B50  00E8               	movwf	(_I2C1_Status^(0+384)+25)
 18828                           
 18829                           ;mcc_generated_files/i2c1_master.c: 270:         I2C1_Status.bufferFree = 0;
 18830  1B51  11EC               	bcf	(_I2C1_Status^(0+384)+29),3
 18831  1B52  0008               	return
 18832  1B53                     __end_ofi1_I2C1_SetBuffer:
 18833                           
 18834                           	psect	text120
 18835  1AA9                     __ptext120:	
 18836 ;; *************** function _I2C1_MasterStop *****************
 18837 ;; Defined at:
 18838 ;;		line 594 in file "mcc_generated_files/i2c1_master.c"
 18839 ;; Parameters:    Size  Location     Type
 18840 ;;		None
 18841 ;; Auto vars:     Size  Location     Type
 18842 ;;		None
 18843 ;; Return value:  Size  Location     Type
 18844 ;;                  1    wreg      void 
 18845 ;; Registers used:
 18846 ;;		None
 18847 ;; Tracked objects:
 18848 ;;		On entry : 0/0
 18849 ;;		On exit  : 1F/4
 18850 ;;		Unchanged: 0/0
 18851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18856 ;;Total ram usage:        0 bytes
 18857 ;; Hardware stack levels used:    1
 18858 ;; This function calls:
 18859 ;;		Nothing
 18860 ;; This function is called by:
 18861 ;;		_I2C1_DO_SEND_STOP
 18862 ;; This function uses a non-reentrant model
 18863 ;;
 18864                           
 18865                           
 18866                           ;psect for function _I2C1_MasterStop
 18867  1AA9                     _I2C1_MasterStop:
 18868                           
 18869                           ;mcc_generated_files/i2c1_master.c: 596:     SSP1CON2bits.PEN = 1;
 18870                           
 18871                           ;incstack = 0
 18872                           ; Regs used in _I2C1_MasterStop: []
 18873  1AA9  0024               	movlb	4	; select bank4
 18874  1AAA  1516               	bsf	22,2	;volatile
 18875  1AAB  0008               	return
 18876  1AAC                     __end_of_I2C1_MasterStop:
 18877                           
 18878                           	psect	text121
 18879  1AA6                     __ptext121:	
 18880 ;; *************** function _I2C1_MasterEnableRestart *****************
 18881 ;; Defined at:
 18882 ;;		line 574 in file "mcc_generated_files/i2c1_master.c"
 18883 ;; Parameters:    Size  Location     Type
 18884 ;;		None
 18885 ;; Auto vars:     Size  Location     Type
 18886 ;;		None
 18887 ;; Return value:  Size  Location     Type
 18888 ;;                  1    wreg      void 
 18889 ;; Registers used:
 18890 ;;		None
 18891 ;; Tracked objects:
 18892 ;;		On entry : 0/0
 18893 ;;		On exit  : 1F/4
 18894 ;;		Unchanged: 0/0
 18895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18900 ;;Total ram usage:        0 bytes
 18901 ;; Hardware stack levels used:    1
 18902 ;; This function calls:
 18903 ;;		Nothing
 18904 ;; This function is called by:
 18905 ;;		_I2C1_DO_SEND_RESTART_READ
 18906 ;;		_I2C1_DO_SEND_RESTART_WRITE
 18907 ;;		_I2C1_DO_SEND_RESTART
 18908 ;; This function uses a non-reentrant model
 18909 ;;
 18910                           
 18911                           
 18912                           ;psect for function _I2C1_MasterEnableRestart
 18913  1AA6                     _I2C1_MasterEnableRestart:
 18914                           
 18915                           ;mcc_generated_files/i2c1_master.c: 576:     SSP1CON2bits.RSEN = 1;
 18916                           
 18917                           ;incstack = 0
 18918                           ; Regs used in _I2C1_MasterEnableRestart: []
 18919  1AA6  0024               	movlb	4	; select bank4
 18920  1AA7  1496               	bsf	22,1	;volatile
 18921  1AA8  0008               	return
 18922  1AA9                     __end_of_I2C1_MasterEnableRestart:
 18923  007E                     btemp	set	126	;btemp
 18924  007E                     int$flags	set	126
 18925  007E                     wtemp0	set	126
 18926                           
 18927                           	psect	config
 18928                           
 18929                           ;Config register CONFIG1 @ 0x8007
 18930                           ;	Oscillator Selection
 18931                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 18932                           ;	Watchdog Timer Enable
 18933                           ;	WDTE = OFF, WDT disabled
 18934                           ;	Power-up Timer Enable
 18935                           ;	PWRTE = OFF, PWRT disabled
 18936                           ;	MCLR Pin Function Select
 18937                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
 18938                           ;	Flash Program Memory Code Protection
 18939                           ;	CP = OFF, Program memory code protection is disabled
 18940                           ;	Data Memory Code Protection
 18941                           ;	CPD = OFF, Data memory code protection is disabled
 18942                           ;	Brown-out Reset Enable
 18943                           ;	BOREN = ON, Brown-out Reset enabled
 18944                           ;	Clock Out Enable
 18945                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 18946                           ;	Internal/External Switchover
 18947                           ;	IESO = ON, Internal/External Switchover mode is enabled
 18948                           ;	Fail-Safe Clock Monitor Enable
 18949                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 18950  8007                     	org	32775
 18951  8007  3FA4               	dw	16292
 18952                           
 18953                           ;Config register CONFIG2 @ 0x8008
 18954                           ;	Flash Memory Self-Write Protection
 18955                           ;	WRT = OFF, Write protection off
 18956                           ;	PLL Enable
 18957                           ;	PLLEN = OFF, 4x PLL disabled
 18958                           ;	Stack Overflow/Underflow Reset Enable
 18959                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 18960                           ;	Brown-out Reset Voltage Selection
 18961                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 18962                           ;	Low-Voltage Programming Enable
 18963                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 18964  8008                     	org	32776
 18965  8008  1EFF               	dw	7935

Data Sizes:
    Strings     152
    Constant    400
    Data        156
    BSS         155
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     74      77
    BANK1            80     70      74
    BANK2            80      7      79
    BANK3            80      0      79
    BANK4            80      0      77
    BANK5            80      0      73
    BANK6            80      9       9
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$2846$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_DO_TX$2851	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_DO_TX$2846	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$2845	const PTR FTN()enum E2992 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    lcd_disp_param$2844	PTR const unsigned char  size(2) Largest target is 112
		 -> lcd_fs_name(CODE[112]), lcd_aux_name(CODE[14]), 

    S626$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 112
		 -> stoa@nuls(BANK0[7]), dbuf(BANK5[32]), ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), 
		 -> lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), ledstr(UNKNOWN), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 112
		 -> stoa@nuls(BANK0[7]), dbuf(BANK5[32]), ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), 
		 -> lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), ledstr(UNKNOWN), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 14
		 -> led_i2s_dir(CODE[14]), STR_6(CODE[2]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_1(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 14
		 -> led_i2s_dir(CODE[14]), STR_6(CODE[2]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_1(CODE[4]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[2]), STR_4(CODE[4]), STR_3(CODE[4]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[33]), STR_19(CODE[19]), STR_18(CODE[14]), STR_17(CODE[10]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_7(CODE[20]), STR_5(CODE[4]), 
		 -> STR_2(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[33]), STR_19(CODE[19]), STR_18(CODE[14]), STR_17(CODE[10]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_7(CODE[20]), STR_5(CODE[4]), 
		 -> STR_2(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[33]), STR_19(CODE[19]), STR_18(CODE[14]), STR_17(CODE[10]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_7(CODE[20]), STR_5(CODE[4]), 
		 -> STR_2(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 112
		 -> ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 112
		 -> ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 112
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), lcd_aux_name(CODE[14]), 
		 -> lcd_src_name(CODE[40]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[33]), STR_19(CODE[19]), STR_18(CODE[14]), STR_17(CODE[10]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_7(CODE[20]), STR_5(CODE[4]), 
		 -> STR_2(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2217_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    f.buffer	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    srcset9211	PTR struct .[5] size(1) Largest target is 2
		 -> DIR_COAX(BANK2[2]), DIR_OPT(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    puts_led@str	PTR unsigned char  size(2) Largest target is 35
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_12(CODE[13]), STR_11(CODE[4]), 
		 -> led_src_name(CODE[35]), STR_10(CODE[13]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    puts_led@cpoint	PTR unsigned char  size(2) Largest target is 35
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_12(CODE[13]), STR_11(CODE[4]), 
		 -> led_src_name(CODE[35]), STR_10(CODE[13]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_MasterIsr(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_MasterIsr(), Absolute function(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 4
		 -> tasbuff(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), TAS_CHK_RAILS(BANK3[2]), 
		 -> TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), TAS_FS48K(BANK3[2]), 
		 -> TAS_FS44K(BANK3[2]), TAS_AC(BANK3[2]), TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), 
		 -> TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), 
		 -> INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), 
		 -> ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), 
		 -> DIT_DIR(BANK2[2]), ADC_ATTR_0dB(BANK3[2]), ADC_ATTL_0dB(BANK3[2]), CALC_MOUT(BANK3[2]), 
		 -> DIR_COAX(BANK2[2]), DIR_OPT(BANK2[2]), AUXSRC_LVDS(BANK2[2]), AUXSRC_ADC(BANK2[2]), 
		 -> AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), i2c_lcd_send_data@lowerdata_en(BANK0[1]), i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_data@upperdata(BANK0[1]), i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), 
		 -> i2c_lcd_send_command@lowerdata(BANK0[1]), i2c_lcd_send_command@upperdata_en(BANK0[1]), i2c_lcd_send_command@upperdata(BANK0[1]), 

    S626$data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> tasbuff(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), TAS_CHK_RAILS(BANK3[2]), 
		 -> TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), TAS_FS48K(BANK3[2]), 
		 -> TAS_FS44K(BANK3[2]), TAS_AC(BANK3[2]), TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), 
		 -> TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), 
		 -> INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), 
		 -> ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), 
		 -> DIT_DIR(BANK2[2]), ADC_ATTR_0dB(BANK3[2]), ADC_ATTL_0dB(BANK3[2]), CALC_MOUT(BANK3[2]), 
		 -> DIR_COAX(BANK2[2]), DIR_OPT(BANK2[2]), AUXSRC_LVDS(BANK2[2]), AUXSRC_ADC(BANK2[2]), 
		 -> AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), i2c_lcd_send_data@lowerdata_en(BANK0[1]), i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_data@upperdata(BANK0[1]), i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), 
		 -> i2c_lcd_send_command@lowerdata(BANK0[1]), i2c_lcd_send_command@upperdata_en(BANK0[1]), i2c_lcd_send_command@upperdata(BANK0[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> tasbuff(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), TAS_CHK_RAILS(BANK3[2]), 
		 -> TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), TAS_FS48K(BANK3[2]), 
		 -> TAS_FS44K(BANK3[2]), TAS_AC(BANK3[2]), TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), 
		 -> TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), 
		 -> INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), 
		 -> ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), 
		 -> DIT_DIR(BANK2[2]), ADC_ATTR_0dB(BANK3[2]), ADC_ATTL_0dB(BANK3[2]), CALC_MOUT(BANK3[2]), 
		 -> DIR_COAX(BANK2[2]), DIR_OPT(BANK2[2]), AUXSRC_LVDS(BANK2[2]), AUXSRC_ADC(BANK2[2]), 
		 -> AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), i2c_lcd_send_data@lowerdata_en(BANK0[1]), i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_data@upperdata(BANK0[1]), i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), 
		 -> i2c_lcd_send_command@lowerdata(BANK0[1]), i2c_lcd_send_command@upperdata_en(BANK0[1]), i2c_lcd_send_command@upperdata(BANK0[1]), 

    S626$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S626$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E2992[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F218@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F212@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F206@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F195@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_lcd_send_data@lowerdata_en(BANK0[1]), i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), i2c_lcd_send_data@upperdata(BANK0[1]), 
		 -> i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), i2c_lcd_send_command@lowerdata(BANK0[1]), 
		 -> i2c_lcd_send_command@upperdata_en(BANK0[1]), i2c_lcd_send_command@upperdata(BANK0[1]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S124$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 2
		 -> tasbuff(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), TAS_CHK_RAILS(BANK3[2]), 
		 -> TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), TAS_FS48K(BANK3[2]), 
		 -> TAS_FS44K(BANK3[2]), TAS_AC(BANK3[2]), TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), 
		 -> TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), 
		 -> INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), 
		 -> ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), 
		 -> DIT_DIR(BANK2[2]), ADC_ATTR_0dB(BANK3[2]), ADC_ATTL_0dB(BANK3[2]), CALC_MOUT(BANK3[2]), 
		 -> DIR_COAX(BANK2[2]), DIR_OPT(BANK2[2]), AUXSRC_LVDS(BANK2[2]), AUXSRC_ADC(BANK2[2]), 
		 -> AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_lcd_puts@s	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_DefaultInterruptHandler
    _TMR1_DefaultInterruptHandler->_read_clickRE
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F218
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F218
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F218
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F218
    _wr2RegCompleteHandler@i2c1_master_example$F218->i1_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F212->i1_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F229->i1_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F206->i1_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F195->i1_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    i1_I2C1_SetDataCompleteCallback->i1_I2C1_SetCallback

Critical Paths under _main in BANK0

    _set_source->_i2c_writeNBytes
    _strcat->_strcpy
    _strcpy->___wmul
    _puts_led->___wmul
    _set_gains->_abs
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    ___wmul->___lbmod
    _i2c_lcd_set_cursor_pos->_i2c_lcd_send_command
    _i2c_lcd_puts->_i2c_lcd_send_data
    _i2c_lcd_send_data->_I2C1_WriteNBytes
    _init_tas6422->_i2c_writeNBytes
    _init_pcm9211->_i2c_writeNBytes
    _i2c_writeNBytes->_I2C1_SetAddressNackCallback
    _i2c_lcd_ulcursor_off->_i2c_lcd_send_command
    _i2c_lcd_init->_i2c_lcd_send_command
    _i2c_lcd_send_upper4bit->_I2C1_WriteNBytes
    _i2c_lcd_home->_i2c_lcd_send_command
    _i2c_lcd_clear->_i2c_lcd_send_command
    _i2c_lcd_send_command->_I2C1_WriteNBytes
    _I2C1_WriteNBytes->_I2C1_SetAddressNackCallback
    _chk6422warning->_i2c_read1ByteRegister
    _i2c_read1ByteRegister->_I2C1_SetAddressNackCallback
    _i2c_read1ByteRegister->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_Open->_I2C1_SetInterruptHandler
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _DATAEE_WriteByte->___lbmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C1_MasterIsr->_I2C1_MasterFsm

Critical Paths under _main in BANK1

    _main->_lcd_disp_param
    _set_gainstr->_sprintf
    _lcd_disp_param->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_lcd_disp_param

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  273953
                                              0 BANK2      7     7      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                 _DELAY_milliseconds
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _TMR1_StartTimer
                            ___lbmod
                             ___wmul
                     _chk6422warning
                      _i2c_lcd_clear
                       _i2c_lcd_home
                       _i2c_lcd_init
                       _i2c_lcd_puts
               _i2c_lcd_ulcursor_off
              _i2c_read1ByteRegister
                    _i2c_writeNBytes
                       _init_pcm9211
                       _init_tas6422
                     _lcd_disp_param
                           _puts_led
                          _set_gains
                        _set_gainstr
                         _set_source
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _set_source                                           4     4      0   18103
                                             16 BANK0      4     4      0
                 _DELAY_milliseconds
                            ___lbmod
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _set_gainstr                                          2     2      0   30268
                                             58 BANK1      2     2      0
                            ___awdiv
                           _puts_led
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    1744
                                             27 BANK0      4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              12     8      4     704
                                             15 BANK0     12     8      4
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _puts_led                                             5     3      2    1300
                                             15 BANK0      5     3      2
                            ___lbmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _set_gains                                            3     2      1   17154
                                             26 BANK0      3     2      1
                                _abs
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _lcd_disp_param                                      21    21      0   56418
                                             58 BANK1     12    12      0
                                              0 BANK6      9     9      0
                            ___lbmod
                             ___wmul
                       _i2c_lcd_puts
             _i2c_lcd_set_cursor_pos
              _i2c_read1ByteRegister
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    10     16   25699
                                             32 BANK1     26    10     16
                            ___lbmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   23755
                                             24 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   23255
                                             66 BANK0      8     6      2
                                              0 BANK1     24    24      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                38    29      9    6707
                                             28 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                              9 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              8     6      2     191
                                              3 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                23    21      2    2775
                                             11 BANK0     23    21      2
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    7033
                                             30 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4731
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     400
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1969
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3    1577
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     273
                                             22 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              3 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              3 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3309
                                             15 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2206
                                              9 BANK0      6     2      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_set_cursor_pos                               5     4      1    8431
                                             23 BANK0      5     4      1
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_puts                                         2     0      2    8385
                                             23 BANK0      2     0      2
                  _i2c_lcd_send_data
 ---------------------------------------------------------------------------------
 (3) _i2c_lcd_send_data                                    7     7      0    7870
                                             16 BANK0      7     7      0
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              6     5      1     592
                                              3 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _init_tas6422                                         1     1      0   17480
                                             16 BANK0      1     1      0
                 _DELAY_milliseconds
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2    1086
                                              3 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_pcm9211                                         1     1      0   16394
                                             16 BANK0      1     1      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _i2c_writeNBytes                                      4     1      3   16394
                                             12 BANK0      4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_ulcursor_off                                 1     1      0    7870
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_init                                         1     1      0   15592
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
             _i2c_lcd_send_upper4bit
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_send_upper4bit                               4     4      0    7722
                                             16 BANK0      4     4      0
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_home                                         1     1      0    7870
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_clear                                        1     1      0    7870
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _i2c_lcd_send_command                                 7     7      0    7870
                                             16 BANK0      7     7      0
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteNBytes                                     4     1      3    7574
                                             12 BANK0      4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _chk6422warning                                      18    18      0   10799
                                             19 BANK0     18    18      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _i2c_read1ByteRegister                                7     6      1   10799
                                             12 BANK0      7     6      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetDataCompleteCallback                         4     1      3    3599
                                              8 BANK0      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetBuffer                                       4     0      4    2528
                                              3 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetAddressNackCallback                          4     1      3    2859
                                              8 BANK0      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetCallback                                     5     2      3     997
                                              3 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C1_Open                                            3     3      0     189
                                              5 BANK0      3     3      0
                _I2C1_MasterClearIrq
               _I2C1_MasterEnableIrq
                    _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetInterruptHandler                             2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterEnableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     0     0      0      68
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOperation                                 3     3      0      68
                                              3 BANK0      3     3      0
                   _I2C1_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Close                                           2     2      0      37
                                              3 BANK0      2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     3     2      1     752
                                              9 BANK0      3     2      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      1     1      0      22
                                              3 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0   51880
                   Absolute function *
                     _I2C1_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     438
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        2     2      0     209
                                              5 COMMON     2     2      0
                       _get7seg_font
                       _read_clickRE
 ---------------------------------------------------------------------------------
 (13) _read_clickRE                                        5     5      0     140
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) _get7seg_font                                        3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterIsr                                      0     0      0   51442
                     _I2C1_MasterFsm
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterFsm                                      3     3      0   51442
                                              0 BANK0      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                  _I2C1_MasterIsNack
              i1_I2C1_MasterClearIrq
 ---------------------------------------------------------------------------------
 (13) i1_I2C1_MasterClearIrq                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_TX_EMPTY                                    3     3      0   12844
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_TX                                          3     3      0   12866
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (13) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_ADR_READ                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSendTxData                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX                                          3     3      0   12844
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_ADDRESS_NACK                                3     3      0   12844
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (14) _wr2RegCompleteHandler@i2c1_master_example$F218      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr2RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr1RegCompleteHandler@i2c1_master_example$F212      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr1RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rdBlkRegCompleteHandler@i2c1_master_example$F229    1     0      1    1284
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rdBlkRegCompleteHandler                             1     0      1    1284
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd2RegCompleteHandler@i2c1_master_example$F206      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd2RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd1RegCompleteHandler@i2c1_master_example$F195      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd1RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (15) i1_I2C1_SetDataCompleteCallback                      4     1      3     770
                                              5 COMMON     4     1      3
                 i1_I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (16) i1_I2C1_SetCallback                                  5     2      3     206
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (15) i1_I2C1_SetBuffer                                    4     0      4     452
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (15) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (15) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_CallbackReturnStop                             1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (14) _I2C1_CallbackReturnReset                            1     0      1     252
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
     ___lbmod (ARG)
   _DELAY_milliseconds
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_Initialize
     _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   ___lbmod
   ___wmul
     ___lbmod (ARG)
   _chk6422warning
     _i2c_read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
   _i2c_lcd_clear
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_home
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_init
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
     _i2c_lcd_send_upper4bit
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_puts
     _i2c_lcd_send_data
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_ulcursor_off
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_read1ByteRegister
     _I2C1_Close
       _I2C1_MasterClearIrq
       _I2C1_MasterClose
       _I2C1_MasterDisableIrq
     _I2C1_MasterWrite
       _I2C1_MasterOperation
         _I2C1_MasterStart
     _I2C1_Open
       _I2C1_MasterClearIrq
       _I2C1_MasterEnableIrq
       _I2C1_MasterOpen
       _I2C1_SetInterruptHandler
     _I2C1_SetAddressNackCallback
       _I2C1_SetCallback
     _I2C1_SetBuffer
     _I2C1_SetDataCompleteCallback
       _I2C1_SetCallback
   _i2c_writeNBytes
     _I2C1_Close
       _I2C1_MasterClearIrq
       _I2C1_MasterClose
       _I2C1_MasterDisableIrq
     _I2C1_MasterWrite
       _I2C1_MasterOperation
         _I2C1_MasterStart
     _I2C1_Open
       _I2C1_MasterClearIrq
       _I2C1_MasterEnableIrq
       _I2C1_MasterOpen
       _I2C1_SetInterruptHandler
     _I2C1_SetAddressNackCallback
       _I2C1_SetCallback
     _I2C1_SetBuffer
   _init_pcm9211
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _init_tas6422
     _DELAY_milliseconds
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _lcd_disp_param
     ___lbmod
     ___wmul
       ___lbmod (ARG)
     _i2c_lcd_puts
       _i2c_lcd_send_data
         _I2C1_WriteNBytes
           _I2C1_Close
             _I2C1_MasterClearIrq
             _I2C1_MasterClose
             _I2C1_MasterDisableIrq
           _I2C1_MasterWrite
             _I2C1_MasterOperation
               _I2C1_MasterStart
           _I2C1_Open
             _I2C1_MasterClearIrq
             _I2C1_MasterEnableIrq
             _I2C1_MasterOpen
             _I2C1_SetInterruptHandler
           _I2C1_SetAddressNackCallback
             _I2C1_SetCallback
           _I2C1_SetBuffer
     _i2c_lcd_set_cursor_pos
       _i2c_lcd_send_command
         _I2C1_WriteNBytes
           _I2C1_Close
             _I2C1_MasterClearIrq
             _I2C1_MasterClose
             _I2C1_MasterDisableIrq
           _I2C1_MasterWrite
             _I2C1_MasterOperation
               _I2C1_MasterStart
           _I2C1_Open
             _I2C1_MasterClearIrq
             _I2C1_MasterEnableIrq
             _I2C1_MasterOpen
             _I2C1_SetInterruptHandler
           _I2C1_SetAddressNackCallback
             _I2C1_SetCallback
           _I2C1_SetBuffer
     _i2c_read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
     _sprintf
       ___lbmod (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lbmod (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _stoa
             _fputc
               _putch
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _puts_led
     ___lbmod (ARG)
     ___wmul (ARG)
       ___lbmod (ARG)
   _set_gains
     _abs
       ___aomod (ARG)
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _set_gainstr
     ___awdiv
     _puts_led
       ___lbmod (ARG)
       ___wmul (ARG)
         ___lbmod (ARG)
     _sprintf
       ___lbmod (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lbmod (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _stoa
             _fputc
               _putch
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         ___wmul (ARG)
           ___lbmod (ARG)
         _strlen (ARG)
       _strlen
     _strcpy
       ___wmul (ARG)
         ___lbmod (ARG)
       _strlen (ARG)
   _set_source
     _DELAY_milliseconds
     ___lbmod
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _sprintf
     ___lbmod (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
             ___lbmod (ARG)
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
         _stoa
           _fputc
             _putch
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower
   _strcpy
     ___wmul (ARG)
       ___lbmod (ARG)
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C1_MasterIsr *
     _I2C1_MasterFsm
       _I2C1_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_DO_IDLE *
       _I2C1_DO_RCEN *
         _I2C1_MasterStartRx
       _I2C1_DO_RESET *
       _I2C1_DO_RX *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_RX_NACK_RESTART *
           _I2C1_MasterSendNack
         _I2C1_DO_RX_NACK_STOP *
           _I2C1_MasterSendNack
         _I2C1_MasterGetRxData *
         _I2C1_MasterSendAck *
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_DO_RX_ACK *
         _I2C1_MasterSendAck
       _I2C1_DO_RX_NACK_RESTART *
         _I2C1_MasterSendNack
       _I2C1_DO_RX_NACK_STOP *
         _I2C1_MasterSendNack
       _I2C1_DO_SEND_ADR_READ *
         _I2C1_MasterSendTxData
       _I2C1_DO_SEND_ADR_WRITE *
         _I2C1_MasterSendTxData
       _I2C1_DO_SEND_RESTART *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_RESTART_READ *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_RESTART_WRITE *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_STOP *
         _I2C1_MasterStop
       _I2C1_DO_TX *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART_READ *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_RESTART_WRITE *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _I2C1_MasterIsNack *
         _I2C1_MasterSendTxData *
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _I2C1_MasterSetIrq *
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_MasterIsNack *
       i1_I2C1_MasterClearIrq *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
       _get7seg_font
       _read_clickRE
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     46      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      7      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4D      13       96.2%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      49      15       91.2%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      9       9      17       11.2%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     1E2      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     1E2      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Jul 24 21:49:28 2020

                          __size_of_i2c_lcd_send_upper4bit 0028  
                                             ___awdiv@sign 0029  
                                      ___wmul@multiplicand 002B  
                                                      l917 1E83  
                                            _i2c_lcd_clear 1B84  
                               __end_of_DELAY_milliseconds 1BE3  
                                    ?_I2C1_MasterOperation 0070  
                                          _timer1ReloadVal 026B  
                                                      _abs 1D0E  
                                                      _pad 12CD  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                        __size_of_I2C1_MasterEnableRestart 0003  
                                     _I2C1_DO_RX_NACK_STOP 1AE3  
                                ?_I2C1_MasterEnableRestart 0070  
                                     I2C1_SetBuffer@buffer 0023  
                                   ?i1_I2C1_MasterClearIrq 0070  
                            __size_of_i2c_lcd_send_command 0056  
                                                     l1016 08AA  
                                                     l2010 0490  
                                                     l2011 0492  
                                                     ?_abs 0036  
                                                     l2012 0494  
                                  ??_rd2RegCompleteHandler 007A  
                                                     l2013 0496  
                                                     l2015 04C8  
                                                     l2008 0486  
                                                     l1410 1DE1  
                                                     l1510 0BF5  
                                                     l2059 170C  
                                                     l1523 0AFF  
                                                     l1628 1E66  
                                                     l1920 1301  
                                                     l1930 071D  
                                                     l1931 072F  
                                                     l1917 12E1  
                                                     l1925 06F9  
                                                     l5301 1ED9  
                                                     l1934 07C2  
                                                     l1926 0701  
                                                     l7011 0519  
                                                     l1957 09B3  
                                                     l7021 0562  
                                                     l1966 0A0C  
                                                     l1974 0D24  
                                                     ?_pad 0033  
                                                     l7007 04FE  
                                                     l5521 1BCF  
                                                     l7009 0510  
                                                     l7017 0543  
                                                     l5601 1323  
                                                     l1978 0D40  
                                                     l7043 0600  
                                                     l7053 065A  
                                                     l7029 05AE  
                                                     l1999 0E3F  
                                                     l7063 0683  
                                                     l7039 05E2  
                                                     l5607 132E  
                                                     l6433 1DB4  
                                                     l7313 1190  
                                                     l7305 1168  
                                                     l8041 1102  
                                                     l6521 0A93  
                                                     l6513 0A86  
                                                     l7241 10C1  
                                                     l5633 1365  
                                                     l5625 1354  
                                                     l5617 1336  
                                                     l5553 15B9  
                                                     l8033 042D  
                                                     l6435 1DB9  
                                                     l7323 11A4  
                                                     l6523 0AA2  
                                                     l6371 12AE  
                                                     l7059 067D  
                                                     l7243 10E1  
                                                     l5619 1342  
                                                     l5555 15BE  
                                                     l7411 0826  
                                                     l8035 0CEA  
                                                     l6437 1DBB  
                                                     l6445 1FC8  
                                                     l6453 1DDB  
                                                     l6509 0A5E  
                                                     l6541 12DF  
                                                     l8037 04B6  
                                                     l7069 068E  
                                                     l5629 135D  
                                                     l5565 15E2  
                                                     l7421 085D  
                                                     l7263 1CB4  
                                                     l7271 10F1  
                                                     l8039 16E6  
                                                     l6471 0B3C  
                                                     l6527 0AD2  
                                                     l6367 128A  
                                                     l6391 1CE3  
                                                     l6551 130C  
                                                     l5575 1607  
                                                     l5567 15E8  
                                                     l7511 0C91  
                                                     l7441 1793  
                                                     l7273 10F4  
                                                     l6529 0ADE  
                                                     l6385 1F66  
                                                     l6393 1CEF  
                                                     l6537 12D8  
                                                     l6705 07DF  
                                                     l6721 098D  
                                                     l7425 0869  
                                                     l7513 0CB6  
                                                     l7505 0C0A  
                                                     l6651 1E0E  
                                                     l6627 11EB  
                                                     l7267 10EC  
                                                     l7275 10FA  
                                                     l6475 0B64  
                                                     l6547 12E3  
                                                     l7427 0872  
                                                     l7507 0C3B  
                                                     l7603 00BD  
                                                     l7357 1E53  
                                                     l7269 10EE  
                                                     l7277 1110  
                                                     l6477 0B69  
                                                     l6709 07EC  
                                                     l6741 09E0  
                                                     l7509 0C6C  
                                                     l7517 0CDB  
                                                     l7605 00E1  
                                                     l6831 16A9  
                                                     l6487 0B80  
                                                     l6735 09C3  
                                                     l6823 0E5C  
                                                     l6807 0E0E  
                                                     l7519 0CFB  
                                                     l7711 0287  
                                                     l7473 1697  
                                                     l7297 1F5C  
                                                     l7289 1F3F  
                                                     l6585 1E26  
                                                     l6497 0BC8  
                                                     l6489 0B8F  
                                                     l6673 072B  
                                                     l6753 0A10  
                                                     l7713 02AC  
                                                     l6499 0BD4  
                                                     l6667 0715  
                                                     l6739 09D4  
                                                     l7491 1563  
                                                     l6853 1710  
                                                     l6845 16D5  
                                                     l6677 075B  
                                                     l6757 0A21  
                                                     l6749 09E3  
                                                     l6863 173F  
                                                     l6847 16DA  
                                                     l6839 16C5  
                                                     l6687 0736  
                                                     l6695 07CE  
                                                     l6759 0A2D  
                                                     l6783 0D7F  
                                                     l6775 0D4E  
                                                     l7751 035E  
                                                     l7671 01F2  
                                                     l7647 0170  
                                                     l6849 16EE  
                                                     l6769 0D38  
                                                     l7761 0374  
                                                     l6699 07D5  
                                                     l6779 0D65  
                                                     l7691 0244  
                                                     l7749 031C  
                                                     l7669 01AE  
                                                     l6887 1F37  
                                                     l6879 1F1A  
                                                     l6799 0DCC  
                                                     l6975 0487  
                                                     l6991 049D  
                                                     l7791 03FE  
                                                     l6985 0498  
                                                     l7793 040C  
                                                     l7777 03CA  
                                                     l6995 04CF  
                                                     l7789 03F0  
                                                     l7797 041A  
                                                     l7799 0438  
                                                     STR_1 1A0E  
                                                     STR_2 1A1A  
                                                     STR_3 1A02  
                                                     STR_4 1A06  
                                                     STR_5 1A1E  
                                                     STR_6 1A26  
                                                     STR_7 1985  
                                                     STR_8 1A22  
                                                     STR_9 1A0A  
                                            ?_i2c_lcd_home 0070  
                                            ?_i2c_lcd_init 0070  
                                                     _LATA 010C  
                                                     _LATB 010D  
                                                     _LATC 010E  
                                                     u4200 1D4F  
                                                     u5010 0DB6  
                                                     u5020 0DB7  
                                                     u5140 1724  
                                                     u4340 0B71  
                                                     u4165 12AC  
                                                     u5045 0DF2  
                                                     u5150 1725  
                                                     u4190 1D4E  
                                                     u4255 1D17  
                                                     u5055 0E18  
                                                     u4600 1E9D  
                                                     u4275 1DE2  
                                                     u5075 0E2E  
                                                     u4620 1D06  
                                                     u4700 06D0  
                                                     u5260 0535  
                                                     u4285 1DE7  
                                                     u5085 0E3A  
                                                     u3805 134D  
                                                     u4630 1D07  
                                                     u4550 1D36  
                                                     u5270 0536  
                                                     u4375 0BB5  
                                                     u4535 12ED  
                                                     u3815 1355  
                                                     u4560 1D37  
                                                     u5505 1E56  
                                                     u4570 1E44  
                                                     u5355 1421  
                                                     u4475 0AC0  
                                                     u4580 1E45  
                                                     u5365 13CB  
                                                     u4805 0756  
                                                     u4590 1E9C  
                                 ??_i2c_lcd_set_cursor_pos 0038  
                                                     u3775 1339  
                                                     u4745 070D  
                                                     u4905 09DE  
                                                     u4690 06CF  
                                                     u4850 097D  
                                                     u4915 09ED  
                                                     u3795 1343  
                                                     u5807 146B  
                                                     u4775 07CC  
                                                     u4935 0A2B  
                                                     u5817 1478  
                                                     u5907 1B8C  
                                                     u5827 1481  
                                                     u4795 074A  
                                                     u4955 0D30  
                                                     u4980 0D96  
                                                     u5837 1489  
                                                     u4885 09AC  
                                                     u4990 0D97  
                                                     u5847 1491  
                                                     u4975 0D79  
                                                     u5857 1499  
                                                     u5777 1119  
                                                     u5867 14A1  
                                                     u5787 1BDD  
                                                     u5877 14AC  
                                                     u5797 1BA6  
                                                     u5887 14B8  
                                                     u5897 1B99  
                                            ?_i2c_lcd_puts 0037  
                                                     _WPUA 020C  
                                                     _WPUB 020D  
                                                     _WPUC 020E  
                                  ??_wr2RegCompleteHandler 007A  
                                         ??_I2C1_MasterFsm 0020  
                                         ??_I2C1_MasterIsr 007D  
                         __size_of_I2C1_DO_RX_NACK_RESTART 0004  
                                ??_I2C1_CallbackReturnStop 007A  
                                                     abs@a 0036  
                                                     _dbuf 02C9  
                                                     _gain 013A  
                       TMR1_DefaultInterruptHandler@intcnt 013C  
                                                     _atoi 16A5  
                                                     _main 006F  
                                                     _dtoa 06B3  
                                                     _prec 012A  
                                                     _nout 0126  
                                                     pad@i 0037  
                                                     pad@p 0034  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     pad@w 0039  
                                                     _stoa 0971  
                                                     btemp 007E  
                                                     _xtoa 0D1A  
                                 __size_of_i2c_writeNBytes 0025  
                                                     start 0025  
                                         ??_I2C1_SetBuffer 0027  
                               ??_TMR1_SetInterruptHandler 0025  
                                             _ADC_ATTL_0dB 01CB  
                                     __end_of_get7seg_font 1CDF  
                                             _ADC_ATTR_0dB 01C9  
                         __size_of_rdBlkRegCompleteHandler 001A  
                            I2C1_CallbackReturnStop@funPtr 0079  
                                                    ??_abs 0038  
                                                    ??_pad 0036  
                                __size_of_DATAEE_WriteByte 0021  
                           __size_of_OSCILLATOR_Initialize 0007  
                            __end_of_OSCILLATOR_Initialize 1B24  
                                          __end_of___aodiv 0C07  
                                        __end_of_I2C1_Open 11EE  
                                                    ?_atoi 002F  
                                                    ?_main 0070  
                                                    ?_dtoa 003E  
                                         ??_chk6422warning 0033  
                                          __end_of___aomod 0B11  
                                           ?_i2c_lcd_clear 0070  
                                          __end_of___awdiv 136A  
                                                    STR_10 19E6  
                                                    STR_11 1A12  
                                                    STR_12 19E6  
                                                    STR_20 1944  
                                                    STR_13 19FD  
                                                    STR_14 19FD  
                                                    STR_15 1A16  
                                                    STR_16 19E6  
                                                    STR_17 19F3  
                                                    STR_18 19D8  
                                                    STR_19 1999  
                                          __end_of___lbmod 1E6C  
                                          _TMR1_StartTimer 0002  
                                                    ?_stoa 002B  
                                          ___awdiv@divisor 0023  
                                                    ?_xtoa 003C  
                                                    _T1CON 0018  
                                                    i1l402 08DC  
                                                    i1l350 1264  
                                                    i1l351 126A  
                                                    i1l409 092B  
                                                    i1l603 139E  
                                                    i1l383 08BA  
                                                    i1l393 08CA  
                                                    i1l377 08B3  
                                                    i1l801 0012  
                                                    i1l619 1138  
                                                    i1l387 08C3  
                                                    i1l396 08D5  
                                                    i1l808 0023  
                                          ___awdiv@counter 0028  
                                             vfpfcnvrt@fmt 0062  
                                   ??_I2C1_MasterEnableIrq 0023  
                                             vfpfcnvrt@llu 00A8  
                                                    _TMR1H 0017  
                                                    _TMR1L 0016  
                                                    _PORTC 000E  
                                                    _TRISA 008C  
                                                    _TRISB 008D  
                                                    _TRISC 008E  
                                   ??_I2C1_MasterGetRxData 0070  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 007A  
                                        ??_I2C1_MasterOpen 0023  
                                        ??_I2C1_MasterStop 0070  
                                        ??_I2C1_Initialize 0023  
                                         __end_of_TMR1_ISR 1BCF  
                                          _DATAEE_ReadByte 1B77  
                                                    _flags 006A  
                                           _WDT_Initialize 1AEB  
                                                    _fputc 1281  
                                          __end_of_isalpha 1E4C  
                                                    _fputs 1F63  
                                          __end_of_isdigit 1D0E  
                                   _i2c_lcd_send_upper4bit 1FD8  
                                           ??_i2c_lcd_home 0037  
                                           ??_i2c_lcd_init 0037  
                               i2c_lcd_send_upper4bit@data 0031  
                                                    atoi@n 003C  
                                                    pad@fp 003B  
                                                    atoi@s 002F  
                                           ??_i2c_lcd_puts 0039  
                                                    _width 0128  
                                                    _putch 1AA1  
                                    _i2c_read1ByteRegister 115F  
                                                    dtoa@d 003E  
                                                    dtoa@i 005A  
                                                    dtoa@n 0052  
                                                    dtoa@p 004C  
                                                    dtoa@s 0050  
                                                    dtoa@w 004E  
                                          __end_of_islower 1D56  
                                          __end_of_isspace 1E2E  
        wr1RegCompleteHandler@i2c1_master_example$F212@ptr 0079  
        rd2RegCompleteHandler@i2c1_master_example$F206@ptr 0079  
                                  __end_of_TMR1_Initialize 1DD9  
        wr2RegCompleteHandler@i2c1_master_example$F218@ptr 0079  
                                          __end_of_isupper 1D3E  
                                                    pclath 000A  
      rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr 0079  
        rd1RegCompleteHandler@i2c1_master_example$F195@ptr 0079  
                                           _TAS_CLEAR_FALT 0146  
                                                    stoa@i 0037  
                                                    stoa@l 0040  
                                                    stoa@p 003E  
                                                    stoa@s 002B  
                                                    stoa@w 0039  
                                                    status 0003  
                              __size_of_I2C1_MasterSendAck 0004  
                                                    wtemp0 007E  
                                          __end_of_sprintf 1ED1  
                                             ??_I2C1_DO_RX 007A  
                                                    xtoa@c 0060  
                                             ??_I2C1_DO_TX 007A  
                                                    xtoa@d 003C  
                                                    xtoa@i 005E  
                                                    xtoa@n 0056  
                                                    xtoa@p 0052  
                                                    xtoa@w 0054  
                                                    xtoa@x 0044  
                                     i1I2C1_SetCallback@cb 0070  
                                          __end_of_toupper 1EAE  
                                          _TMR1_WriteTimer 1BAC  
                                   ??_I2C1_DO_ADDRESS_NACK 007A  
                                             ??_I2C1_Close 0023  
                              __size_of_I2C1_MasterStartRx 0003  
                                            _ADC_ATTL_10dB 025F  
                                            _ADC_ATTL_20dB 025B  
                                             _toupper$2462 002F  
                                            _ADC_ATTR_10dB 025D  
                                            _ADC_ATTR_20dB 0259  
                                            _fsmStateTable 1965  
                                          __initialization 0027  
                                             __end_of_atoi 1744  
                                             __end_of_main 045E  
                                             __end_of_dtoa 07FD  
                                    i2c_lcd_send_data@data 0032  
                                             __end_of_stoa 0A33  
                                             __end_of_xtoa 0E6D  
                              ?_INTERRUPT_InterruptManager 0070  
                                                   ??_atoi 0031  
                                   ??_I2C1_MasterOperation 0023  
                                                   ??_main 0168  
                                                   ??_dtoa 0046  
                                                   ??_stoa 002D  
                                                   ??_xtoa 0045  
                            __size_of_I2C1_DO_SEND_RESTART 0004  
                                       __end_of_I2C1_DO_RX 115F  
                                       __end_of_I2C1_DO_TX 13BC  
                                   __end_of_WDT_Initialize 1AEF  
                                       _ADC_I2S_MASTER_256 0257  
                                       __end_of_I2C1_Close 1E11  
                                 __end_of_I2C1_WriteNBytes 1F3E  
                                                   _ADC_AC 0255  
                                                   _ADC_DC 01C3  
                                                   ?_fputc 0023  
                                                   ?_fputs 002B  
                                                   _EEADRL 0191  
                                                   _EEDATL 0193  
                                                   _EECON2 0196  
                                         ___awdiv@dividend 0025  
                                                   _I2S_IN 0164  
                                            ?_init_pcm9211 0070  
                                                   _ANSELA 018C  
                                                   ?_putch 0070  
                                                   _ANSELB 018D  
                                                   _ANSELC 018E  
                                                   _BORCON 0116  
                                                   _T1GCON 0019  
                                  TMR1_WriteTimer@timerVal 0070  
                                                   i1l5107 1CD9  
                                                   i1l5131 1270  
                                                   i1l5123 1255  
                                                   i1l5141 127F  
                                                   i1l5133 1272  
                                                   i1l5421 1BB6  
                                                   i1l5431 08CB  
                                                   i1l5441 08FE  
                                                   i1l4491 1FA0  
                                                   i1l7203 1068  
                                                   i1l7131 1371  
                                                   i1l5451 091A  
                                                   i1l5435 08DD  
                                                   i1l5427 08BB  
                                                   i1l5453 091F  
                                                   i1l5437 08E6  
                                                   i1l7135 1374  
                                                   i1l7223 103D  
                                                   i1l5471 093E  
                                                   i1l5463 0934  
                                                   i1l5439 08E9  
                                                   i1l7209 106B  
                                                   i1l7153 13BA  
                                                   i1l7145 137A  
                                                   i1l5465 0935  
                                                   i1l8051 107B  
                                                   i1l7139 1377  
                                                   i1l7219 103A  
                                                   i1l5475 0946  
                                                   i1l8043 08F3  
                     __size_of_I2C1_SetAddressNackCallback 000C  
                                                   i1l8045 1055  
                                                   i1l7229 1040  
                                                   i1l5485 0954  
                                                   i1l5477 0947  
                                                   i1l5469 093D  
                                                   i1l8047 1150  
                                                   i1l7175 113A  
                                                   i1l7335 101B  
                                                   i1l5487 0957  
                                                   i1l7193 1061  
                                                   i1l8049 1390  
                                                   i1l7185 1140  
                                                   i1l7179 113D  
                                                   i1l7197 1064  
                                            ?_init_tas6422 0070  
                                                   i1l7577 001D  
                          __size_of_i2c_lcd_set_cursor_pos 0033  
                                                   _OSCCON 0099  
                                            vfpfcnvrt@done 00B3  
                                                   _TAS_AC 01AF  
                                                   _TAS_DC 024F  
                                                   u431lld 0B39  
                                                   _WDTCON 0097  
                                                   u442lld 0A5B  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0079  
                                                   _RE_pos 00E9  
                                         ??_lcd_disp_param 00DA  
                                  ??_I2C1_MasterDisableIrq 0023  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                             ?_set_gainstr 0070  
                                            ?_read_clickRE 0070  
                                       ??_I2C1_MasterClose 0023  
                                         _I2C1_DO_TX_EMPTY 105E  
                                       ??_I2C1_MasterStart 0023  
                                       ??_I2C1_MasterWrite 0026  
                     __end_of_TMR1_DefaultInterruptHandler 0971  
                    __size_of_TMR1_DefaultInterruptHandler 00BF  
                             _TMR1_DefaultInterruptHandler 08B2  
                                             vfprintf@cfmt 00BE  
                                  __end_of_TMR1_StartTimer 0004  
                                                ??___aodiv 0033  
                                         __end_of_font7seg 18CF  
                                                ??___aomod 0033  
                                                   ___wmul 1DD9  
                                                ??___awdiv 0027  
                                                ??___lbmod 0024  
                                        ??_i2c_writeNBytes 002F  
                                          readRE@RE_states 19AC  
                                                   _ledstr 0220  
                             __size_of_I2C1_MasterClearIrq 0003  
                                          ??_i2c_lcd_clear 0037  
                                 __end_ofi1_I2C1_SetBuffer 1B53  
                                         ___awdiv@quotient 002A  
                                     chk6422warning@otwarn 0134  
                            i2c_lcd_send_command@lowerdata 0036  
                                     chk6422warning@otshut 0135  
                                                   pad@buf 0033  
                                                   _strcat 1BE3  
                                                   dtoa@fp 0049  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0071  
                                  __end_of_DATAEE_ReadByte 1B84  
                                                   _strcpy 1ED1  
                                                   _strlen 1CDF  
                                        ?_I2C1_SetCallback 0023  
                                     __end_of_lcd_aux_name 19CA  
                                   ??_I2C1_DO_RX_NACK_STOP 0070  
                         __end_of_I2C1_SetInterruptHandler 1B3C  
                                      lcd_disp_param@pfspo 0320  
                                      lcd_disp_param@prail 0326  
                                    _I2C1_DO_SEND_ADR_READ 1B24  
                                                   fputc@c 0023  
                                                   fputs@c 002F  
                                                   fputs@i 0030  
                                                   fputs@s 0032  
                                                ??_isalpha 0025  
                                                ??_isdigit 0025  
                            ?_I2C1_SetDataCompleteCallback 0028  
                         ??i1_I2C1_SetDataCompleteCallback 0078  
                          ?i1_I2C1_SetDataCompleteCallback 0075  
                                       ??_I2C1_SetCallback 0026  
                                                ??_islower 0025  
                                                ??_isspace 0025  
                                          ?_WDT_Initialize 0070  
                                                ??_isupper 0025  
                                                   stoa@cp 003C  
                                                   stoa@fp 003B  
                                                   putch@c 0070  
                                         __end_of_vfprintf 10EA  
                                   ?_i2c_read1ByteRegister 002C  
                                          _current_balance 00E7  
                                           ??_init_pcm9211 0030  
                 I2C1_SetInterruptHandler@InterruptHandler 0023  
                 TMR1_SetInterruptHandler@InterruptHandler 0023  
                                                ??_sprintf 00D0  
                             __size_of_I2C1_MasterSendNack 0004  
                                         __end_of_puts_led 160E  
                                  __end_of_TMR1_WriteTimer 1BBB  
                                                   xtoa@fp 004D  
                                                ??_toupper 002B  
                                           ??_init_tas6422 0030  
                                  _I2C1_DO_RX_NACK_RESTART 1AE7  
                                    i1I2C1_SetCallback@idx 0074  
                                    i1I2C1_SetCallback@ptr 0072  
                                      I2C1_WriteNBytes@len 002D  
                                     __end_of_lcd_src_name 1921  
                                         ?_TMR1_Initialize 0070  
                                        _SYSTEM_Initialize 0804  
                           I2C1_SetDataCompleteCallback@cb 0028  
                                          ___lbmod@divisor 0023  
                            i2c_lcd_send_command@upperdata 0035  
                                  __end_of__initialization 006B  
                                          ___lbmod@counter 0027  
                                    __size_of_get7seg_font 0016  
                          I2C1_MasterOperation@returnValue 0025  
                                       ?_SYSTEM_Initialize 0070  
                                           ??_read_clickRE 0070  
                            __size_of_i2c_lcd_ulcursor_off 000E  
                                  _rdBlkRegCompleteHandler 1D56  
                                           puts_led@cpoint 0032  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK2 1EF5  
                                             __pidataBANK3 108A  
                                             __pidataBANK4 11EE  
                                      ??_SYSTEM_Initialize 0025  
                         __end_of_I2C1_MasterEnableRestart 1AA9  
                                                ?_TMR1_ISR 0070  
                            ?_TMR1_DefaultInterruptHandler 0070  
                                         _DATAEE_WriteByte 1E6C  
                                             readRE@RE_old 013F  
                                            __end_of_fputc 12CD  
                                            __end_of_fputs 1F88  
                                     __end_of_i2c_lcd_home 1B9E  
                                     __end_of_i2c_lcd_init 14BD  
                                   _i2c_lcd_set_cursor_pos 10EA  
                                     __end_of_i2c_lcd_puts 1CC9  
                                            __end_of_putch 1AA2  
                                     __end_of_led_src_name 1944  
                              __size_ofi1_I2C1_SetCallback 0028  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0070  
                                  ??_I2C1_MasterSendTxData 0070  
                            i2c_lcd_send_data@lowerdata_en 0034  
                                           _OPTION_REGbits 0095  
                                  ??i1_I2C1_MasterClearIrq 0070  
                                    __end_of_I2C1_DO_RESET 1AFE  
                                             _get7seg_font 1CC9  
                                       chk6422warning@clip 0133  
                                       chk6422warning@ocdc 0136  
                                       chk6422warning@ilim 0132  
                                i2c_lcd_set_cursor_pos@col 003B  
                          i2c_lcd_send_upper4bit@upperdata 0033  
                                i2c_lcd_set_cursor_pos@pos 003A  
                                                  ??_fputc 0026  
                                __end_of_SYSTEM_Initialize 0813  
                                                  ??_fputs 002C  
                                                  ??_putch 0023  
                                               __pbssBANK0 006A  
                                               __pbssBANK1 00E6  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01CF  
                                               __pbssBANK5 02A0  
                           __size_of_rd2RegCompleteHandler 0015  
                            __end_of_rd2RegCompleteHandler 1C4B  
                                       _DELAY_milliseconds 1BCF  
                                         _TAS_DCDIAG_ABORT 0251  
                                     I2C1_Open@returnValue 0027  
                                         _TAS_DCDIAG_CLEAR 01B1  
                           __size_of_wr2RegCompleteHandler 0015  
                            __end_of_wr2RegCompleteHandler 1C60  
                                    _rd1RegCompleteHandler 1C21  
                                            i2c_lcd_puts@s 0037  
                                  __end_ofreadRE@RE_states 19BC  
                                        _I2C1_DO_SEND_STOP 1ADB  
                                    _wr1RegCompleteHandler 1C0C  
                      __size_of_I2C1_DO_SEND_RESTART_WRITE 0004  
                                      ?_DELAY_milliseconds 0023  
                                               __pmaintext 006F  
                             __end_of_i2c_lcd_send_command 1467  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                                  ?___wmul 0029  
                                         ?_TMR1_StartTimer 0070  
                                               ??_TMR1_ISR 0077  
                                          _I2C1_MasterOpen 1B3C  
                                               __pintentry 0004  
                                               _blink_rate 0123  
                                          _I2C1_MasterStop 1AA9  
                                          _I2C1_Initialize 1000  
                                                  _ADC_48K 0253  
                                                  _ADC_96K 01C1  
                                  __size_of_I2C1_DO_RX_ACK 0004  
                                                  _APFCON0 011D  
                                                  _APFCON1 011E  
                                                  _I2S_OUT 0166  
                                       __size_of_set_gains 006E  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strcat 003B  
                                      ??_I2C1_DO_SEND_STOP 0070  
                                                  ?_strcpy 002F  
                                                  ?_strlen 0023  
                                                  _DIT_ADC 014C  
                                         ?_DATAEE_ReadByte 0070  
                                                  _DIT_I2S 01C5  
                                                  _DIT_DIR 014E  
                                                  _DIR_OPT 0152  
                          __size_of_I2C1_DO_SEND_ADR_WRITE 0007  
                                  ?_i2c_lcd_send_upper4bit 0070  
                                        _I2C1_MasterIsNack 1AFE  
                                     ??_DELAY_milliseconds 0025  
                                                _I2C1_Open 11A6  
                                       __size_of_vfpfcnvrt 0255  
                                ??_I2C1_DO_RX_NACK_RESTART 0070  
                                                  _TAS_FC4 024D  
                                                  _TAS_FC7 024B  
                                                  _OSCTUNE 0098  
                                        _I2C1_MasterSetIrq 1AB2  
                       __size_of_I2C1_DO_SEND_RESTART_READ 0004  
                                                  _SSP1ADD 0212  
                                                  _TAS_RUN 01ED  
                                                  _TAS_HiZ 0239  
                                                  _SSP1BUF 0211  
                                 _I2C1_SetInterruptHandler 1B34  
                                       ?_I2C1_MasterIsNack 0070  
                                                  _SRC_ADC 0160  
                                                  _SRC_I2S 015C  
                                                  _SRC_DIR 0162  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                          readRE@direction 0140  
                           ??_I2C1_SetDataCompleteCallback 002B  
                                         ?_TMR1_WriteTimer 0070  
                                       ?_I2C1_MasterSetIrq 0070  
                                 i2c_lcd_send_command@data 0032  
                                     DATAEE_WriteByte@bAdd 002A  
                                                _CALC_MPIB 0265  
                                                _CALC_MPOB 0263  
                                      ??_I2C1_MasterIsNack 0070  
                                                _CALC_MOUT 01CD  
   __end_of_wr1RegCompleteHandler@i2c1_master_example$F212 1C9F  
  __size_of_wr1RegCompleteHandler@i2c1_master_example$F212 0015  
           _wr1RegCompleteHandler@i2c1_master_example$F212 1C8A  
   __end_of_rd2RegCompleteHandler@i2c1_master_example$F206 1C8A  
  __size_of_rd2RegCompleteHandler@i2c1_master_example$F206 0015  
           _rd2RegCompleteHandler@i2c1_master_example$F206 1C75  
   __end_of_wr2RegCompleteHandler@i2c1_master_example$F218 1C0C  
  __size_of_wr2RegCompleteHandler@i2c1_master_example$F218 0015  
           _wr2RegCompleteHandler@i2c1_master_example$F218 1BF7  
 __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F229 1D8A  
__size_of_rdBlkRegCompleteHandler@i2c1_master_example$F229 001A  
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 1D70  
   __end_of_rd1RegCompleteHandler@i2c1_master_example$F195 1C75  
  __size_of_rd1RegCompleteHandler@i2c1_master_example$F195 0015  
           _rd1RegCompleteHandler@i2c1_master_example$F195 1C60  
                                __end_of_I2C1_DO_SEND_STOP 1ADF  
                                ??_rdBlkRegCompleteHandler 007A  
                                       I2C1_SetCallback@cb 0023  
                                      ??_I2C1_MasterSetIrq 0070  
                                     __size_of_set_gainstr 009F  
                                                  ___aodiv 0B11  
                                                  ___aomod 0A33  
                                                  ___awdiv 1319  
                                                  ___lbmod 1E4C  
                                          __size_of___wmul 001B  
                                     __end_of_init_pcm9211 1800  
                                                ?_vfprintf 00B8  
                                     __end_of_init_tas6422 1526  
                                               _current_fs 0138  
                                                ?_puts_led 002F  
                     TMR1_DefaultInterruptHandler@pushstat 013B  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                                   i2c_writeNBytes@address 002F  
                                                  __ptext1 0C07  
                                                  __ptext2 0813  
                                                  __ptext3 1BE3  
                                                  __ptext4 1ED1  
                                                  __ptext5 1594  
                                                  __ptext6 1319  
                                                  __ptext7 1526  
                                                  __ptext8 0E6D  
                                                  __ptext9 1EAE  
                                 _I2C1_MasterEnableRestart 1AA6  
                                                  _lcdbuff 02A0  
                                                  _led_dot 01A0  
                           ??_TMR1_DefaultInterruptHandler 0075  
                                __end_of_I2C1_MasterIsNack 1B04  
                             ?_I2C1_SetAddressNackCallback 0028  
                                                  _ledbuff 0235  
                                          __size_of_strcat 0014  
                           __end_of_i2c_lcd_send_upper4bit 2000  
                                          __size_of_strcpy 0024  
                                          __size_of_strlen 0017  
                                                _T1CONbits 0018  
                                    _OSCILLATOR_Initialize 1B1D  
                                                  _button1 0141  
                                             __size_of_abs 0018  
                                             __size_of_pad 004C  
                                     __end_of_read_clickRE 1281  
                                                  _isalpha 1E2E  
                                                  _isdigit 1CF6  
                                __end_of_I2C1_MasterSetIrq 1AB5  
                                 __end_of_I2C1_DO_TX_EMPTY 108A  
                        __size_of_TMR1_SetInterruptHandler 0008  
                                                  _islower 1D3E  
                                 ??_PIN_MANAGER_Initialize 0023  
                                                  _isspace 1E11  
                                ?_TMR1_SetInterruptHandler 0023  
                                               ?_I2C1_Open 0070  
                                                  _tasbuff 0142  
                                                  _isupper 1D26  
                            __size_of_I2C1_MasterEnableIrq 0003  
                            __size_of_I2C1_MasterGetRxData 0003  
                                                  atoi@neg 0035  
                                        _i2c_lcd_send_data 13BC  
                                 ?_I2C1_CallbackReturnStop 0079  
                                        ?_I2C1_WriteNBytes 002C  
                               __size_of_SYSTEM_Initialize 000F  
                                  i2c_read1ByteRegister@d2 0032  
                                                  _sprintf 1EAE  
                                                  clrloop0 1B0B  
                                                  _toupper 1E8D  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1AD3  
                                     end_of_initialization 006B  
                               __end_of_I2C1_MasterSendAck 1ACF  
                                       ?_i2c_lcd_send_data 0070  
                                      _I2C1_MasterClearIrq 1ABB  
                                       ??_I2C1_WriteNBytes 002F  
                                     lcd_disp_param@otwarn 0323  
                                                  fputc@fp 0025  
                                     lcd_disp_param@otshut 0322  
                                                  init_ram 1B10  
                                        __end_of_set_gains 1594  
                               __end_of_I2C1_MasterStartRx 1AAF  
                                                  fputs@fp 002B  
                                   ?_rd1RegCompleteHandler 0079  
                                                  initloop 1B11  
                                          _i2c_writeNBytes 1F3E  
                                   _I2C1_DO_SEND_ADR_WRITE 1B16  
                                             _lcd_aux_name 19BC  
                             __end_of_I2C1_DO_SEND_RESTART 1ADB  
                                  __end_of_I2C1_MasterOpen 1B47  
                                   ?_wr1RegCompleteHandler 0079  
                                  __end_of_I2C1_MasterStop 1AAC  
                                  __end_of_I2C1_Initialize 1009  
                                      ??_i2c_lcd_send_data 0030  
                        __size_of_I2C1_CallbackReturnReset 0002  
                           __size_of_I2C1_MasterDisableIrq 0003  
                                    __size_of_i2c_lcd_home 000D  
                                    __size_of_i2c_lcd_init 0056  
                                ?_I2C1_CallbackReturnReset 0079  
                            __end_of_I2C1_MasterDisableIrq 1AC4  
                                              _I2C1_Status 01CF  
                                    __size_of_i2c_lcd_puts 0015  
                            __size_of_I2C1_DO_ADDRESS_NACK 002B  
                                        __end_of_vfpfcnvrt 06B3  
                                                _TAS_FC118 0243  
                                                _TAS_FC235 0241  
                                                _TAS_FC463 023F  
                                                _TAS_FS44K 01AD  
                                                _TAS_FS48K 01AB  
                                                _TAS_FS96K 014A  
                                  __size_of_I2C1_MasterFsm 002A  
                                  __size_of_I2C1_MasterIsr 0003  
                                      _I2C1_MasterSendNack 1AC7  
                                               _set_source 0C07  
                      __end_of_I2C1_SetAddressNackCallback 1B6B  
                              _I2C1_SetAddressNackCallback 1B5F  
                                     read_clickRE@interval 013D  
                                                _TAS_OSR64 023D  
                                                _TAS_RESET 01B3  
                                               ??_vfprintf 00BB  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0070  
                                           ??_I2C1_DO_RCEN 0070  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1AD7  
                               _I2C1_DO_SEND_RESTART_WRITE 1AD3  
                                               ??_puts_led 0031  
                                                  strcpy@d 0039  
                                                  strlen@a 0026  
                                                  strcpy@s 0037  
                                                  strlen@s 0023  
                                             _lcd_src_name 18F9  
                                __size_of_I2C1_MasterClose 0003  
                                        ?i1_I2C1_SetBuffer 0070  
                                         ??_WDT_Initialize 0023  
                                                _PORTAbits 000C  
                                  __size_of_I2C1_SetBuffer 0015  
                          __end_of_rdBlkRegCompleteHandler 1D70  
                                __size_of_I2C1_MasterStart 0003  
                                __size_of_I2C1_MasterWrite 0004  
                                     I2C1_WriteNBytes@data 002C  
                                       ??i1_I2C1_SetBuffer 0074  
                                  ??_i2c_read1ByteRegister 002D  
                                               _srcset9211 0230  
                            __size_of_I2C1_MasterOperation 001A  
                            ??_I2C1_SetAddressNackCallback 002B  
                                __end_of_i2c_lcd_send_data 1411  
                                         ___lbmod@dividend 0026  
                          I2C1_SetDataCompleteCallback@ptr 002A  
                        i1I2C1_SetDataCompleteCallback@ptr 0077  
                           I2C1_CallbackReturnReset@funPtr 0079  
                                     ?_I2C1_MasterSendNack 0070  
                                     _i2c_lcd_send_command 1411  
                                 __end_of_DATAEE_WriteByte 1E8D  
                                  __size_of_chk6422warning 0097  
                                             _i2c_lcd_home 1B91  
                                             _i2c_lcd_init 1467  
                         i2c_lcd_send_command@lowerdata_en 0034  
                                             _i2c_lcd_puts 1CB4  
                                              ___lbmod@rem 0028  
                                             _led_src_name 1921  
                                __size_of_I2C1_SetCallback 0028  
                               __size_of_I2C1_DO_SEND_STOP 0004  
                   __end_ofi1_I2C1_SetDataCompleteCallback 1B5F  
                  __size_ofi1_I2C1_SetDataCompleteCallback 000C  
                           i1_I2C1_SetDataCompleteCallback 1B53  
                                  ?_i2c_lcd_set_cursor_pos 0037  
                                    ??_I2C1_MasterClearIrq 0023  
                                              vfpfcnvrt@ap 0063  
                                              vfpfcnvrt@cp 00B0  
                                              vfpfcnvrt@fp 00B7  
                                              vfpfcnvrt@ll 00A0  
                                           __end_of___wmul 1DF4  
                                           _I2C1_DO_RX_ACK 1ADF  
                                        __size_of_TMR1_ISR 0014  
                                    __end_of_i2c_lcd_clear 1B91  
                                   ?_OSCILLATOR_Initialize 0070  
                            i2c_lcd_send_data@upperdata_en 0033  
                               __size_of_I2C1_MasterIsNack 0006  
                          __end_of_I2C1_CallbackReturnStop 1AA4  
                           __size_of_I2C1_MasterSendTxData 0005  
                             __end_of_i2c_lcd_ulcursor_off 1BAC  
                            __end_of_I2C1_MasterSendTxData 1AF4  
                                           __end_of_strcat 1BF7  
                               __size_of_I2C1_MasterSetIrq 0003  
                                           __end_of_strcpy 1EF5  
                                           __end_of_strlen 1CF6  
                                      start_initialization 0027  
                                              ??_I2C1_Open 0025  
                            __size_of_I2C1_DO_RX_NACK_STOP 0004  
                           __size_ofi1_I2C1_MasterClearIrq 0003  
                          __size_of_PIN_MANAGER_Initialize 001A  
                                              __end_of_abs 1D26  
                                            _TAS_CHK_RAILS 01A7  
                            __end_ofi1_I2C1_MasterClearIrq 1AB8  
                                              __end_of_pad 1319  
                                    ??_I2C1_MasterSendNack 0070  
                                  __end_of_i2c_writeNBytes 1F63  
                                    ?_i2c_lcd_send_command 0070  
                    TMR1_DefaultInterruptHandler@RE_offset 007D  
                                         _read_clickRE$509 0072  
                                   rd1RegCompleteHandler@p 0079  
                                      DATAEE_ReadByte@bAdd 0023  
                                 I2C1_SetBuffer@bufferSize 0025  
                                         ?_I2C1_MasterOpen 0070  
                           __end_of_i2c_lcd_set_cursor_pos 111D  
                                    __size_of_init_pcm9211 00BC  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                    __size_of_init_tas6422 0069  
                                      __end_of_led_i2s_dir 19D8  
                                 __size_of_TMR1_Initialize 001B  
                                              vfprintf@fmt 00B8  
                             i2c_read1ByteRegister@address 002E  
                                   __end_of_I2C1_DO_RX_ACK 1AE3  
                                                 ??___wmul 002D  
                                        get7seg_font@cdata 0072  
                                              ?_set_source 0070  
                                      chk6422warning@prail 0131  
                                   wr1RegCompleteHandler@p 0079  
                               i2c_lcd_set_cursor_pos@line 0037  
                                  ??_I2C1_DO_SEND_ADR_READ 0070  
                               __end_ofi1_I2C1_SetCallback 1FB0  
                                       lcd_disp_param@clip 0324  
                                      __end_of_lcd_fs_name 1870  
                                       lcd_disp_param@ocdc 0321  
                                              __pdataBANK2 0144  
                                              __pdataBANK3 01A0  
                                              __pdataBANK4 0220  
                                       lcd_disp_param@ilim 0325  
                                    __size_of_read_clickRE 004A  
                                  __size_of_lcd_disp_param 0193  
                               ??_I2C1_SetInterruptHandler 0025  
                                                 ??_strcat 003F  
                                                 ??_strcpy 0033  
                                                 ??_strlen 0025  
                                         I2C1_Open@address 0026  
                                      __end_of_led_fs_name 18F9  
                                              __pbssCOMMON 007D  
                               __size_of_i2c_lcd_send_data 0055  
                                     _I2C1_DO_SEND_RESTART 1AD7  
                                                ___latbits 0002  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00A0  
                                            __pcstackBANK2 0168  
                                            __pcstackBANK6 0320  
                                         ___aodiv@dividend 002B  
                                           _current_source 00E8  
                                           _current_volume 006C  
                              ??_I2C1_DO_SEND_RESTART_READ 0070  
                               i1I2C1_SetBuffer@bufferSize 0072  
                                             _init_pcm9211 1744  
                                     __end_of_I2C1_DO_IDLE 1AF9  
                                             _init_tas6422 14BD  
                                     __end_of_I2C1_DO_RCEN 1B0A  
                            I2C1_SetAddressNackCallback@cb 0028  
                                                _atoi$2367 0037  
                                                _atoi$2368 003B  
                                                _atoi$2369 0039  
                                                __pnvBANK4 0269  
                                    _rd2RegCompleteHandler 1C36  
                                              puts_led@str 002F  
                                             _read_clickRE 1237  
                                    __end_of_fsmStateTable 1985  
                                   _PIN_MANAGER_Initialize 1D8A  
                                                _dtoa$2311 004A  
                                    _wr2RegCompleteHandler 1C4B  
                                   _MSSP1_InterruptHandler 012E  
                               ??_I2C1_MasterEnableRestart 0070  
                                           _I2C1_MasterFsm 1009  
                                           _I2C1_MasterIsr 1AB8  
                         __end_of_TMR1_SetInterruptHandler 1B34  
                                   __size_of_I2C1_DO_RESET 0005  
                                                 ?___aodiv 0023  
                                                 ?___aomod 0023  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                 ?___awdiv 0023  
                                                __ptext100 1AEF  
                                                __ptext101 1ACB  
                                                __ptext110 1C60  
                                                __ptext102 1AAF  
                                         ___aodiv@quotient 0036  
                                                __ptext111 1D56  
                                                __ptext103 1AC7  
                                                __ptext120 1AA9  
                                                __ptext112 1C4B  
                                                __ptext104 1AAC  
                                                __ptext121 1AA6  
                                                __ptext113 1C36  
                                                __ptext105 1AA4  
                                                __ptext114 1C21  
                                                __ptext106 1AA2  
                                                __ptext115 1C0C  
                                                __ptext107 1D70  
                                                __ptext116 1BF7  
                                                __ptext108 1C8A  
                                                __ptext117 1B53  
                                                __ptext109 1C75  
                                                __ptext118 1F88  
                                                __ptext119 1B47  
                                                 ?___lbmod 0023  
                                         _I2C1_MasterClose 1ABE  
                                        read_clickRE@index 013E  
                                           _I2C1_SetBuffer 1C9F  
                             ??_INTERRUPT_InterruptManager 007D  
                                         _I2C1_MasterStart 1AC4  
                                        __size_of_vfprintf 0031  
                                         _I2C1_MasterWrite 0800  
                                        __size_of_puts_led 007A  
                                                 _CALC_ADC 0267  
                                                 _CALC_DIR 01A3  
                                                 _CALC_DIT 0261  
                                 __size_of_TMR1_StartTimer 0002  
                                                 ?_isalpha 0023  
                                                 ?_isdigit 0023  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                                 ?_islower 0023  
                                                 ?_isspace 0023  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                                 ?_isupper 0023  
                                   ??_i2c_lcd_send_command 0030  
                              __size_of_DELAY_milliseconds 0014  
                         __end_of_I2C1_CallbackReturnReset 1AA6  
                                         ?_i2c_writeNBytes 002C  
                      TMR1_DefaultInterruptHandler@pushcnt 012C  
                                       ??_I2C1_DO_TX_EMPTY 007A  
                                                 ?_sprintf 00C0  
                                           __size_of_fputc 004C  
                                           __size_of_fputs 0025  
                                           _chk6422warning 160E  
                                 __size_of_DATAEE_ReadByte 000D  
                                  ??_rd1RegCompleteHandler 007A  
                                                 ?_toupper 0029  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0070  
                                           __size_of_putch 0001  
                                                 _DIR_COAX 0150  
                                      __size_of_set_source 0113  
                                                 _DIT_LVDS 01C7  
                                  ??_wr1RegCompleteHandler 007A  
                                              _INIT9211_20 01BF  
                                              _INIT9211_31 01B5  
                                              _INIT9211_26 01B9  
                                              _INIT9211_27 01B7  
                                              _INIT9211_2B 01BB  
                                              _INIT9211_2E 01BD  
                                              _led_i2s_dir 19CA  
                                         _I2C1_SetCallback 1FB0  
                               i2c_lcd_send_data@lowerdata 0036  
                                           ___wmul@product 002D  
                                   i2c_read1ByteRegister@e 002F  
                                                 _LATAbits 010C  
                                                 _LATBbits 010D  
                                   i2c_read1ByteRegister@x 0030  
                                               _I2C1_DO_RX 111D  
                                               _I2C1_DO_TX 136A  
                                                clear_ram0 1B0A  
                                            ??_set_gainstr 00DA  
                                                 _PIE1bits 0091  
                                                 _PIE2bits 0092  
                                               _I2C1_Close 1DF4  
                                              _lcd_fs_name 1800  
                                   __end_of_I2C1_MasterFsm 1033  
                                   __end_of_I2C1_MasterIsr 1ABB  
                                 __size_of_TMR1_WriteTimer 000F  
                             __end_of_I2C1_MasterEnableIrq 0800  
                                     _i2c_lcd_ulcursor_off 1B9E  
                      __size_of_INTERRUPT_InterruptManager 0021  
                             __end_of_I2C1_MasterGetRxData 1AB2  
                                                _set_gains 1526  
                                                 _PIR1bits 0011  
                         __size_of_I2C1_CallbackReturnStop 0002  
                                                 _PIR2bits 0012  
                                                 _TAS_FC30 0247  
                                                 _TAS_FC15 0249  
                                                 _TAS_FC59 0245  
                                      read_clickRE@current 0074  
                                __size_of_I2C1_WriteNBytes 0025  
                                       _I2C1_MasterSendAck 1ACB  
                           DELAY_milliseconds@milliseconds 0023  
                                _I2C1_DO_SEND_RESTART_READ 1ACF  
                                                 _TAS_PLAY 0148  
                                                 _TAS_MUTE 01A9  
                                                 _SSP1CON1 0215  
                                                 _SSP1CON2 0216  
                                                 _TMR1_ISR 1BBB  
                                   __end_of_I2C1_SetBuffer 1CB4  
                                                 _SSP1STAT 0214  
                                          set_gainstr@gval 00DB  
                     __end_of_I2C1_SetDataCompleteCallback 1B77  
                    __size_of_I2C1_SetDataCompleteCallback 000C  
                             _I2C1_SetDataCompleteCallback 1B6B  
                                              _led_fs_name 18CF  
                                       _I2C1_MasterStartRx 1AAC  
                                                 _SRC_LVDS 015E  
                                                _vfpfcnvrt 045E  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                                _xtoa$2332 004E  
                                                _xtoa$2333 0050  
                                        ??_TMR1_Initialize 0025  
                                              _AUXSRC_AUTO 015A  
                               i2c_lcd_send_data@upperdata 0035  
                                              _AUXSRC_LVDS 0154  
                                      ?_I2C1_MasterSendAck 0070  
                    TMR1_DefaultInterruptHandler@led_blink 0120  
                                        ___wmul@multiplier 0029  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                                main@count 0130  
                                      ?_I2C1_MasterStartRx 0070  
                             __end_of_I2C1_DO_ADDRESS_NACK 105E  
                           __size_of_i2c_read1ByteRegister 0047  
                                   __end_of_chk6422warning 16A5  
                                    DATAEE_WriteByte@bData 0029  
                            __end_of_i2c_read1ByteRegister 11A6  
                                             _isspace$2394 0027  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1B1D  
                                            _I2C1_DO_RESET 1AF9  
                                               vfpfcnvrt@c 00B2  
                         i2c_lcd_send_command@upperdata_en 0033  
                                    I2C1_Close@returnValue 0024  
                                 ?_rdBlkRegCompleteHandler 0079  
                                        ?_DATAEE_WriteByte 0029  
                                      I2C1_SetCallback@idx 0027  
                                __size_ofi1_I2C1_SetBuffer 000C  
                                      I2C1_SetCallback@ptr 0025  
                                     ??_I2C1_MasterSendAck 0070  
                                   ?_rd2RegCompleteHandler 0079  
                                       ??_DATAEE_WriteByte 002A  
                             __end_of_I2C1_MasterOperation 1DBE  
                                               _EECON1bits 0195  
                                   ?_wr2RegCompleteHandler 0079  
                                     ??_I2C1_MasterStartRx 0070  
                                    ?_i2c_lcd_ulcursor_off 0070  
                                          ?_I2C1_MasterFsm 0070  
                                          ?_I2C1_MasterIsr 0070  
                                               ?_set_gains 003A  
                                               vfprintf@ap 00BA  
                                               vfprintf@fp 00BD  
                                      i2c_writeNBytes@data 002C  
                                    _I2C1_MasterDisableIrq 1AC1  
                                  ??_OSCILLATOR_Initialize 0023  
                                      __end_of_set_gainstr 08B2  
                                          ?_I2C1_SetBuffer 0023  
                                         __size_of___aodiv 00F6  
                                         __size_of___aomod 00DE  
                                         __size_of___awdiv 0051  
                                           _lcd_disp_param 0E6D  
                                         __size_of___lbmod 0020  
                                               ?_vfpfcnvrt 0062  
                                          ___aodiv@divisor 0023  
                                 _TMR1_SetInterruptHandler 1B2C  
                                          ___aodiv@counter 0034  
                                   ??_I2C1_DO_SEND_RESTART 0070  
                                    _TMR1_InterruptHandler 0269  
                                               sprintf@fmt 00C2  
                                              _current_aux 0139  
                                               strcat@dest 003B  
                                         __size_of_isalpha 001E  
                                         __size_of_isdigit 0018  
                                            ?_get7seg_font 0070  
                                           ?_I2C1_DO_RESET 0070  
                                          ?_chk6422warning 0070  
                                    __size_of_I2C1_DO_IDLE 0005  
                                         __size_of_islower 0018  
                                    __size_of_I2C1_DO_RCEN 0006  
                                         __size_of_isspace 001D  
                                             set_gains@bal 003A  
                                                 __ptext10 10B9  
                                                 __ptext11 045E  
                                                 __ptext20 1CDF  
                                                 __ptext12 0D1A  
                                                 __ptext21 1F63  
                                                 __ptext13 1E8D  
                                                 __ptext30 1DD9  
                                                 __ptext22 1281  
                                                 __ptext14 1D3E  
                                                 __ptext31 10EA  
                                                 __ptext23 1AA1  
                                                 __ptext15 1D26  
                                                 __ptext40 1467  
                                                 __ptext32 1CB4  
                                                 __ptext24 1D0E  
                                                 __ptext16 1E2E  
                                                 __ptext41 1FD8  
                                                 __ptext33 13BC  
                                                 __ptext25 0A33  
                                                 __ptext17 0971  
                                                 __ptext50 1B5F  
                                                 __ptext42 1B91  
                                                 __ptext34 1E4C  
                                                 __ptext26 0B11  
                                                 __ptext18 06B3  
                                                 __ptext51 1FB0  
                                                 __ptext43 1B84  
                                                 __ptext35 14BD  
                                                 __ptext27 16A5  
                                                 __ptext19 12CD  
                                                 __ptext60 1AC1  
                                                 __ptext52 11A6  
                                                 __ptext44 1411  
                                                 __ptext36 1BCF  
                                                 __ptext28 1E11  
                                                 __ptext61 1ABE  
                                                 __ptext53 1B34  
                                                 __ptext45 1F19  
                                                 __ptext37 1744  
                                                 __ptext29 1CF6  
                                                 __ptext70 1000  
                                                 __ptext62 1ABB  
                                                 __ptext54 1B3C  
                                                 __ptext46 160E  
                                                 __ptext38 1F3E  
                                                 __ptext71 1E6C  
                                                 __ptext63 0002  
                                                 __ptext55 07FD  
                                                 __ptext47 115F  
                                                 __ptext39 1B9E  
                                                 __ptext80 1009  
                                                 __ptext72 1B77  
                                                 __ptext64 0804  
                                                 __ptext56 0800  
                                                 __ptext48 1B6B  
                                                 __ptext81 1AB5  
                                                 __ptext65 1AEB  
                                                 __ptext57 1DA4  
                                                 __ptext49 1C9F  
                                                 __ptext90 1ACF  
                                                 __ptext82 1033  
                                                 __ptext74 1BBB  
                                                 __ptext66 1DBE  
                                                 __ptext58 1AC4  
                                                 __ptext91 1B04  
                                                 __ptext83 1AF9  
                                                 __ptext75 1BAC  
                                                 __ptext67 1B2C  
                                                 __ptext59 1DF4  
                                                 __ptext92 111D  
                                                 __ptext84 1AE7  
                                                 __ptext76 08B2  
                                                 __ptext68 1D8A  
                                                 __ptext93 136A  
                                                 __ptext85 1AE3  
                                                 __ptext77 1237  
                                                 __ptext69 1B1D  
                                                 __ptext94 1B16  
                                                 __ptext86 1ADF  
                                                 __ptext78 1CC9  
                                                 __ptext95 1B24  
                                                 __ptext87 1ADB  
                                                 __ptext79 1AB8  
                                                 __ptext96 1AF4  
                                                 __ptext88 1AD7  
                                                 __ptext97 105E  
                                                 __ptext89 1AD3  
                                                 __ptext98 1AB2  
                                                 __ptext99 1AFE  
                                         __size_of_isupper 0018  
                                             set_gains@vol 003C  
                                             _SSP1CON1bits 0215  
                                             _SSP1CON2bits 0216  
                                        ??_TMR1_StartTimer 0023  
                                         __size_of_sprintf 0023  
                                                 _font7seg 1870  
                              DATAEE_WriteByte@GIEBitValue 002B  
                                               strcpy@dest 002F  
                                         __size_of_toupper 0021  
                                   chk6422warning@lasttime 0137  
                                 _I2C1_CallbackReturnReset 1AA4  
                                            __size_of_atoi 009F  
                                            __size_of_main 03EF  
                                            __size_of_dtoa 014A  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
                                            __size_of_stoa 00C2  
                                            __size_of_xtoa 0153  
                                        ??_DATAEE_ReadByte 0023  
                              __end_of_I2C1_MasterClearIrq 1ABE  
                             __end_of_I2C1_DO_RX_NACK_STOP 1AE7  
                                              ?_I2C1_Close 0070  
                                                stoa@F1139 0229  
                                   __end_of_lcd_disp_param 1000  
                                             ??_set_source 0030  
                                                 int$flags 007E  
                                 ??_i2c_lcd_send_upper4bit 0030  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1AEB  
                                               _AUXSRC_ADC 0156  
                                               _AUXSRC_I2S 01A5  
                                               _AUXSRC_DIR 0158  
                                 I2C1_MasterOperation@read 0024  
                                                 _vfprintf 10B9  
                       __end_of_INTERRUPT_InterruptManager 0025  
                               _INTERRUPT_InterruptManager 0004  
                                        ??_TMR1_WriteTimer 0072  
                                                 _puts_led 1594  
                           __size_of_I2C1_DO_SEND_ADR_READ 0008  
                                     get7seg_font@fontdata 0071  
                                 i2c_read1ByteRegister@reg 002C  
                            __end_of_I2C1_DO_SEND_ADR_READ 1B2C  
                                             _I2C1_DO_IDLE 1AF4  
                                             _I2C1_DO_RCEN 1B04  
                                         ___aomod@dividend 002B  
                              __end_of_I2C1_MasterSendNack 1ACB  
                                           _vfpfcnvrt$2347 00B5  
                                               _INTCONbits 000B  
                                           ??_get7seg_font 0070  
                           I2C1_SetAddressNackCallback@ptr 002A  
                                     _I2C1_MasterEnableIrq 07FD  
                                       i1_I2C1_SetCallback 1F88  
                                       i2c_writeNBytes@len 002D  
                                           __pstringtext10 1944  
                                           __pstringtext11 1985  
                                           __pstringtext20 1A0E  
                                           __pstringtext12 1999  
                                           __pstringtext21 1A12  
                                           __pstringtext13 19D8  
                                           __pstringtext22 1A16  
                                           __pstringtext14 19E6  
                                           __pstringtext23 1A1A  
                                           __pstringtext15 19F3  
                                           __pstringtext24 1A1E  
                                           __pstringtext16 19FD  
                                           __pstringtext25 1A22  
                                           __pstringtext17 1A02  
                                           __pstringtext26 1A26  
                                           __pstringtext18 1A06  
                                           __pstringtext27 0000  
                                           __pstringtext19 1A0A  
                                     _I2C1_MasterGetRxData 1AAF  
                                    _I2C1_MasterSendTxData 1AEF  
                                                 isalpha@c 0023  
                                                 isdigit@c 0023  
                                  __size_of_WDT_Initialize 0004  
                                    i1_I2C1_MasterClearIrq 1AB5  
                                                 intlevel1 0000  
                                                sprintf@ap 00D3  
                                                strcat@src 003D  
                                       __end_of_set_source 0D1A  
                                 __end_of_I2C1_MasterClose 1AC1  
                                   rd2RegCompleteHandler@p 0079  
                                      ?i1_I2C1_SetCallback 0070  
                                                 islower@c 0023  
                                                 isspace@c 0023  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1AC7  
                                 __end_of_I2C1_MasterWrite 0804  
                                   ??_i2c_lcd_ulcursor_off 0037  
                                  I2C1_WriteNBytes@address 002F  
                                                strcpy@src 0031  
                                   __size_of_i2c_lcd_clear 000D  
                                         ??_I2C1_DO_RX_ACK 0070  
                                                 isupper@c 0023  
                                  _I2C1_CallbackReturnStop 1AA2  
                                              _set_gainstr 0813  
                                              ??_set_gains 003B  
                                     _I2C1_DO_ADDRESS_NACK 1033  
                                   ?_I2C1_MasterDisableIrq 0070  
                                         _I2C1_WriteNBytes 1F19  
                                          ?_lcd_disp_param 0070  
                                   wr2RegCompleteHandler@p 0079  
                                          ___aomod@divisor 0023  
                                              ??_vfpfcnvrt 0064  
                                                 stoa@nuls 0030  
                                          ___aomod@counter 0034  
                                      _lcd_disp_param$2844 0327  
                                 __size_of_I2C1_MasterOpen 000B  
                                   set_source@sourcenumber 0033  
                                 __size_of_I2C1_MasterStop 0003  
                                 __size_of_I2C1_Initialize 0009  
                                     ??i1_I2C1_SetCallback 0073  
                                            __pstringtext1 1870  
                                            __pstringtext2 18CF  
                                            __pstringtext3 1965  
                                            __pstringtext4 19AC  
                                            __pstringtext5 1800  
                                            __pstringtext6 18F9  
                                            __pstringtext7 1921  
                                            __pstringtext8 19BC  
                                            __pstringtext9 19CA  
                                               _TAS_OSR128 023B  
                                 __end_of_I2C1_SetCallback 1FD8  
                                               _TAS_NORMAL 0144  
                         i1I2C1_SetDataCompleteCallback@cb 0075  
                                                 sprintf@f 00D4  
                                                 sprintf@s 00C0  
                     ?_rd1RegCompleteHandler@islower$F2510 0079  
                     ?_wr1RegCompleteHandler@islower$F2502 0079  
                    ??_rd1RegCompleteHandler@islower$F2512 007A  
                    ??_wr1RegCompleteHandler@islower$F2504 007A  
                     ?_wr2RegCompleteHandler@islower$F2521 0079  
                    ??_wr2RegCompleteHandler@islower$F2523 007A  
                     ?_rd2RegCompleteHandler@islower$F2515 0079  
                    ??_rd2RegCompleteHandler@islower$F2517 007A  
                   ?_rdBlkRegCompleteHandler@islower$F2527 0079  
                  ??_rdBlkRegCompleteHandler@islower$F2529 007A  
                                      __size_of_I2C1_DO_RX 0042  
                                      __size_of_I2C1_DO_TX 0052  
                                          ??_I2C1_DO_RESET 0070  
                                     _I2C1_MasterOperation 1DA4  
                                                 toupper@c 0029  
                                    ?_I2C1_MasterEnableIrq 0070  
                                      __size_of_I2C1_Close 001D  
                                    ?_I2C1_MasterGetRxData 0070  
                                   i1I2C1_SetBuffer@buffer 0070  
                       i2c_lcd_send_upper4bit@upperdata_en 0032  
                                             ___aodiv@sign 0035  
                                         i1_I2C1_SetBuffer 1B47  
                           __end_of_PIN_MANAGER_Initialize 1DA4  
                        __size_of_I2C1_SetInterruptHandler 0008  
                           __size_of_rd1RegCompleteHandler 0015  
                                ?_I2C1_SetInterruptHandler 0023  
                            __end_of_rd1RegCompleteHandler 1C36  
                                       __size_of_I2C1_Open 0048  
                           __size_of_wr1RegCompleteHandler 0015  
                                        _current_direction 00E6  
                            __end_of_wr1RegCompleteHandler 1C21  
                                             ___aomod@sign 0035  
                                __size_of_I2C1_DO_TX_EMPTY 002C  
                                          _TMR1_Initialize 1DBE  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
