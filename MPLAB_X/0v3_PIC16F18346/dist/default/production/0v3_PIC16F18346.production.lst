

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Oct 11 00:06:55 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	16F18346
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     7                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    33                           	psect	cinit,global,class=CODE,merge=1,delta=2
    34                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    35                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    36                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    37                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    38                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    39                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    40                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    41                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    42                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    43                           	psect	inittext,global,class=CODE,delta=2
    44                           	psect	clrtext,global,class=CODE,delta=2
    45                           	psect	cstackBANK6,global,class=BANK6,space=1,delta=1,noexec
    46                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    47                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    48                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    49                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    50                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    51                           	psect	text1,local,class=CODE,merge=1,delta=2
    52                           	psect	text2,local,class=CODE,merge=1,delta=2
    53                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text4,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text5,local,class=CODE,merge=1,delta=2
    56                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text7,local,class=CODE,merge=1,delta=2
    58                           	psect	text8,local,class=CODE,merge=1,delta=2
    59                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    60                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    67                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    69                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text20,local,class=CODE,merge=1,delta=2,group=3
    71                           	psect	text21,local,class=CODE,merge=1,delta=2,group=3
    72                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    73                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    74                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    75                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	text27,local,class=CODE,merge=1,delta=2,group=3
    78                           	psect	text28,local,class=CODE,merge=1,delta=2,group=3
    79                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    80                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
    81                           	psect	text31,local,class=CODE,merge=1,delta=2
    82                           	psect	text32,local,class=CODE,merge=1,delta=2
    83                           	psect	text33,local,class=CODE,merge=1,delta=2
    84                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
    85                           	psect	text35,local,class=CODE,merge=1,delta=2
    86                           	psect	text36,local,class=CODE,merge=1,delta=2
    87                           	psect	text37,local,class=CODE,merge=1,delta=2
    88                           	psect	text38,local,class=CODE,merge=1,delta=2
    89                           	psect	text39,local,class=CODE,merge=1,delta=2
    90                           	psect	text40,local,class=CODE,merge=1,delta=2
    91                           	psect	text41,local,class=CODE,merge=1,delta=2
    92                           	psect	text42,local,class=CODE,merge=1,delta=2
    93                           	psect	text43,local,class=CODE,merge=1,delta=2
    94                           	psect	text44,local,class=CODE,merge=1,delta=2
    95                           	psect	text45,local,class=CODE,merge=1,delta=2
    96                           	psect	text46,local,class=CODE,merge=1,delta=2
    97                           	psect	text47,local,class=CODE,merge=1,delta=2
    98                           	psect	text48,local,class=CODE,merge=1,delta=2
    99                           	psect	text49,local,class=CODE,merge=1,delta=2
   100                           	psect	text50,local,class=CODE,merge=1,delta=2
   101                           	psect	text51,local,class=CODE,merge=1,delta=2
   102                           	psect	text52,local,class=CODE,merge=1,delta=2
   103                           	psect	text53,local,class=CODE,merge=1,delta=2
   104                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
   105                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
   106                           	psect	text56,local,class=CODE,merge=1,delta=2
   107                           	psect	text57,local,class=CODE,merge=1,delta=2
   108                           	psect	text58,local,class=CODE,merge=1,inline,delta=2
   109                           	psect	text59,local,class=CODE,merge=1,delta=2
   110                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
   111                           	psect	text61,local,class=CODE,merge=1,inline,delta=2
   112                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
   113                           	psect	text63,local,class=CODE,merge=1,delta=2
   114                           	psect	text64,local,class=CODE,merge=1,delta=2
   115                           	psect	text65,local,class=CODE,merge=1,delta=2
   116                           	psect	text66,local,class=CODE,merge=1,delta=2
   117                           	psect	text67,local,class=CODE,merge=1,delta=2
   118                           	psect	text68,local,class=CODE,merge=1,delta=2
   119                           	psect	text69,local,class=CODE,merge=1,delta=2
   120                           	psect	text70,local,class=CODE,merge=1,delta=2
   121                           	psect	text71,local,class=CODE,merge=1,delta=2
   122                           	psect	text72,local,class=CODE,merge=1,delta=2
   123                           	psect	text73,local,class=CODE,merge=1,delta=2
   124                           	psect	intentry,global,class=CODE,delta=2
   125                           	psect	text75,local,class=CODE,merge=1,delta=2
   126                           	psect	text76,local,class=CODE,merge=1,delta=2
   127                           	psect	text77,local,class=CODE,merge=1,delta=2
   128                           	psect	text78,local,class=CODE,merge=1,delta=2
   129                           	psect	text79,local,class=CODE,merge=1,delta=2
   130                           	psect	text80,local,class=CODE,merge=1,delta=2
   131                           	psect	text81,local,class=CODE,merge=1,inline,delta=2
   132                           	psect	text82,local,class=CODE,merge=1,inline,delta=2
   133                           	psect	text83,local,class=CODE,merge=1,delta=2
   134                           	psect	text84,local,class=CODE,merge=1,delta=2
   135                           	psect	text85,local,class=CODE,merge=1,delta=2
   136                           	psect	text86,local,class=CODE,merge=1,delta=2
   137                           	psect	text87,local,class=CODE,merge=1,delta=2
   138                           	psect	text88,local,class=CODE,merge=1,delta=2
   139                           	psect	text89,local,class=CODE,merge=1,delta=2
   140                           	psect	text90,local,class=CODE,merge=1,delta=2
   141                           	psect	text91,local,class=CODE,merge=1,delta=2
   142                           	psect	text92,local,class=CODE,merge=1,delta=2
   143                           	psect	text93,local,class=CODE,merge=1,delta=2
   144                           	psect	text94,local,class=CODE,merge=1,delta=2
   145                           	psect	text95,local,class=CODE,merge=1,delta=2
   146                           	psect	text96,local,class=CODE,merge=1,delta=2
   147                           	psect	text97,local,class=CODE,merge=1,delta=2
   148                           	psect	text98,local,class=CODE,merge=1,delta=2
   149                           	psect	text99,local,class=CODE,merge=1,inline,delta=2
   150                           	psect	text100,local,class=CODE,merge=1,inline,delta=2
   151                           	psect	text101,local,class=CODE,merge=1,inline,delta=2
   152                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   153                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   154                           	psect	text104,local,class=CODE,merge=1,inline,delta=2
   155                           	psect	text105,local,class=CODE,merge=1,inline,delta=2
   156                           	psect	text106,local,class=CODE,merge=1,delta=2
   157                           	psect	text107,local,class=CODE,merge=1,delta=2
   158                           	psect	text108,local,class=CODE,merge=1,delta=2
   159                           	psect	text109,local,class=CODE,merge=1,delta=2
   160                           	psect	text110,local,class=CODE,merge=1,delta=2
   161                           	psect	text111,local,class=CODE,merge=1,delta=2
   162                           	psect	text112,local,class=CODE,merge=1,delta=2
   163                           	psect	text113,local,class=CODE,merge=1,delta=2
   164                           	psect	text114,local,class=CODE,merge=1,delta=2
   165                           	psect	text115,local,class=CODE,merge=1,delta=2
   166                           	psect	text116,local,class=CODE,merge=1,delta=2
   167                           	psect	text117,local,class=CODE,merge=1,delta=2
   168                           	psect	text118,local,class=CODE,merge=1,delta=2
   169                           	psect	text119,local,class=CODE,merge=1,delta=2
   170                           	psect	text120,local,class=CODE,merge=1,delta=2
   171                           	psect	text121,local,class=CODE,merge=1,inline,delta=2
   172                           	psect	text122,local,class=CODE,merge=1,inline,delta=2
   173                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   174                           	dabs	1,0x7E,2
   175  0000                     
   176                           ; Version 2.20
   177                           ; Generated 30/04/2020 GMT
   178                           ; 
   179                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   180                           ; All rights reserved.
   181                           ; 
   182                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   183                           ; 
   184                           ; Redistribution and use in source and binary forms, with or without modification, are
   185                           ; permitted provided that the following conditions are met:
   186                           ; 
   187                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   188                           ;        conditions and the following disclaimer.
   189                           ; 
   190                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   191                           ;        of conditions and the following disclaimer in the documentation and/or other
   192                           ;        materials provided with the distribution.
   193                           ; 
   194                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   195                           ;        software without specific prior written permission.
   196                           ; 
   197                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   198                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   199                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   200                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   201                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   202                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   203                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   204                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   205                           ; 
   206                           ; 
   207                           ; Code-generator required, PIC16F18346 Definitions
   208                           ; 
   209                           ; SFR Addresses
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001C                     	;# 
   241  001D                     	;# 
   242  001E                     	;# 
   243  001F                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  0090                     	;# 
   248  0091                     	;# 
   249  0092                     	;# 
   250  0093                     	;# 
   251  0094                     	;# 
   252  0097                     	;# 
   253  009B                     	;# 
   254  009B                     	;# 
   255  009C                     	;# 
   256  009D                     	;# 
   257  009E                     	;# 
   258  009F                     	;# 
   259  010C                     	;# 
   260  010D                     	;# 
   261  010E                     	;# 
   262  0111                     	;# 
   263  0112                     	;# 
   264  0113                     	;# 
   265  0114                     	;# 
   266  0115                     	;# 
   267  0116                     	;# 
   268  0117                     	;# 
   269  0118                     	;# 
   270  0119                     	;# 
   271  018C                     	;# 
   272  018D                     	;# 
   273  018E                     	;# 
   274  0197                     	;# 
   275  0199                     	;# 
   276  0199                     	;# 
   277  0199                     	;# 
   278  019A                     	;# 
   279  019A                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019B                     	;# 
   286  019C                     	;# 
   287  019C                     	;# 
   288  019C                     	;# 
   289  019D                     	;# 
   290  019D                     	;# 
   291  019D                     	;# 
   292  019E                     	;# 
   293  019E                     	;# 
   294  019E                     	;# 
   295  019F                     	;# 
   296  019F                     	;# 
   297  019F                     	;# 
   298  019F                     	;# 
   299  019F                     	;# 
   300  020C                     	;# 
   301  020D                     	;# 
   302  020E                     	;# 
   303  0211                     	;# 
   304  0211                     	;# 
   305  0212                     	;# 
   306  0212                     	;# 
   307  0213                     	;# 
   308  0213                     	;# 
   309  0214                     	;# 
   310  0214                     	;# 
   311  0215                     	;# 
   312  0215                     	;# 
   313  0215                     	;# 
   314  0215                     	;# 
   315  0216                     	;# 
   316  0216                     	;# 
   317  0217                     	;# 
   318  0217                     	;# 
   319  0219                     	;# 
   320  021A                     	;# 
   321  021B                     	;# 
   322  021C                     	;# 
   323  021D                     	;# 
   324  021D                     	;# 
   325  021E                     	;# 
   326  021F                     	;# 
   327  028C                     	;# 
   328  028D                     	;# 
   329  028E                     	;# 
   330  0291                     	;# 
   331  0291                     	;# 
   332  0292                     	;# 
   333  0293                     	;# 
   334  0294                     	;# 
   335  0295                     	;# 
   336  0295                     	;# 
   337  0296                     	;# 
   338  0297                     	;# 
   339  0298                     	;# 
   340  029F                     	;# 
   341  030C                     	;# 
   342  030D                     	;# 
   343  030E                     	;# 
   344  0311                     	;# 
   345  0311                     	;# 
   346  0312                     	;# 
   347  0313                     	;# 
   348  0314                     	;# 
   349  0315                     	;# 
   350  0315                     	;# 
   351  0316                     	;# 
   352  0317                     	;# 
   353  0318                     	;# 
   354  038C                     	;# 
   355  038D                     	;# 
   356  038E                     	;# 
   357  0391                     	;# 
   358  0392                     	;# 
   359  0393                     	;# 
   360  0394                     	;# 
   361  0395                     	;# 
   362  0396                     	;# 
   363  0397                     	;# 
   364  0398                     	;# 
   365  0399                     	;# 
   366  039A                     	;# 
   367  039C                     	;# 
   368  039D                     	;# 
   369  039E                     	;# 
   370  039F                     	;# 
   371  0411                     	;# 
   372  0411                     	;# 
   373  0412                     	;# 
   374  0413                     	;# 
   375  0414                     	;# 
   376  0415                     	;# 
   377  0416                     	;# 
   378  0417                     	;# 
   379  0418                     	;# 
   380  0418                     	;# 
   381  0419                     	;# 
   382  041A                     	;# 
   383  041B                     	;# 
   384  041C                     	;# 
   385  041D                     	;# 
   386  041E                     	;# 
   387  041F                     	;# 
   388  0498                     	;# 
   389  0498                     	;# 
   390  0499                     	;# 
   391  049A                     	;# 
   392  049B                     	;# 
   393  049B                     	;# 
   394  049C                     	;# 
   395  049D                     	;# 
   396  049E                     	;# 
   397  049F                     	;# 
   398  0617                     	;# 
   399  0618                     	;# 
   400  0619                     	;# 
   401  0619                     	;# 
   402  061A                     	;# 
   403  061B                     	;# 
   404  061C                     	;# 
   405  061C                     	;# 
   406  061F                     	;# 
   407  0691                     	;# 
   408  0692                     	;# 
   409  0693                     	;# 
   410  0694                     	;# 
   411  0695                     	;# 
   412  0696                     	;# 
   413  0697                     	;# 
   414  0698                     	;# 
   415  0699                     	;# 
   416  0711                     	;# 
   417  0712                     	;# 
   418  0713                     	;# 
   419  0714                     	;# 
   420  0715                     	;# 
   421  0716                     	;# 
   422  0717                     	;# 
   423  0718                     	;# 
   424  0719                     	;# 
   425  0891                     	;# 
   426  0891                     	;# 
   427  0891                     	;# 
   428  0891                     	;# 
   429  0891                     	;# 
   430  0891                     	;# 
   431  0892                     	;# 
   432  0892                     	;# 
   433  0892                     	;# 
   434  0893                     	;# 
   435  0893                     	;# 
   436  0893                     	;# 
   437  0893                     	;# 
   438  0893                     	;# 
   439  0893                     	;# 
   440  0894                     	;# 
   441  0894                     	;# 
   442  0894                     	;# 
   443  0895                     	;# 
   444  0895                     	;# 
   445  0895                     	;# 
   446  0896                     	;# 
   447  0896                     	;# 
   448  0896                     	;# 
   449  089B                     	;# 
   450  0911                     	;# 
   451  0912                     	;# 
   452  0913                     	;# 
   453  0914                     	;# 
   454  0915                     	;# 
   455  0916                     	;# 
   456  0918                     	;# 
   457  0919                     	;# 
   458  091A                     	;# 
   459  091B                     	;# 
   460  091C                     	;# 
   461  091D                     	;# 
   462  091E                     	;# 
   463  091F                     	;# 
   464  0E0F                     	;# 
   465  0E10                     	;# 
   466  0E11                     	;# 
   467  0E12                     	;# 
   468  0E13                     	;# 
   469  0E14                     	;# 
   470  0E15                     	;# 
   471  0E16                     	;# 
   472  0E17                     	;# 
   473  0E18                     	;# 
   474  0E19                     	;# 
   475  0E1A                     	;# 
   476  0E1B                     	;# 
   477  0E1C                     	;# 
   478  0E1D                     	;# 
   479  0E1E                     	;# 
   480  0E1F                     	;# 
   481  0E20                     	;# 
   482  0E21                     	;# 
   483  0E22                     	;# 
   484  0E24                     	;# 
   485  0E25                     	;# 
   486  0E28                     	;# 
   487  0E29                     	;# 
   488  0E2A                     	;# 
   489  0E2B                     	;# 
   490  0E2C                     	;# 
   491  0E2D                     	;# 
   492  0E2E                     	;# 
   493  0E2F                     	;# 
   494  0E90                     	;# 
   495  0E91                     	;# 
   496  0E92                     	;# 
   497  0E94                     	;# 
   498  0E95                     	;# 
   499  0E9C                     	;# 
   500  0E9D                     	;# 
   501  0E9E                     	;# 
   502  0E9F                     	;# 
   503  0EA0                     	;# 
   504  0EA1                     	;# 
   505  0EA2                     	;# 
   506  0EA3                     	;# 
   507  0EA4                     	;# 
   508  0EA5                     	;# 
   509  0EA6                     	;# 
   510  0EA7                     	;# 
   511  0F0F                     	;# 
   512  0F10                     	;# 
   513  0F11                     	;# 
   514  0F12                     	;# 
   515  0F13                     	;# 
   516  0F14                     	;# 
   517  0F15                     	;# 
   518  0F16                     	;# 
   519  0F17                     	;# 
   520  0F18                     	;# 
   521  0F19                     	;# 
   522  0F1A                     	;# 
   523  0F1B                     	;# 
   524  0F1C                     	;# 
   525  0F1D                     	;# 
   526  0F1E                     	;# 
   527  0F1F                     	;# 
   528  0F20                     	;# 
   529  0F21                     	;# 
   530  0F22                     	;# 
   531  0F23                     	;# 
   532  0F24                     	;# 
   533  0F25                     	;# 
   534  0F26                     	;# 
   535  0F27                     	;# 
   536  0F28                     	;# 
   537  0F29                     	;# 
   538  0F2A                     	;# 
   539  0F2B                     	;# 
   540  0F2C                     	;# 
   541  0F2D                     	;# 
   542  0F2E                     	;# 
   543  0F2F                     	;# 
   544  0F30                     	;# 
   545  0F31                     	;# 
   546  0F32                     	;# 
   547  0F33                     	;# 
   548  0F34                     	;# 
   549  0F35                     	;# 
   550  0F36                     	;# 
   551  0F37                     	;# 
   552  0FE4                     	;# 
   553  0FE5                     	;# 
   554  0FE6                     	;# 
   555  0FE7                     	;# 
   556  0FE8                     	;# 
   557  0FE9                     	;# 
   558  0FEA                     	;# 
   559  0FEB                     	;# 
   560  0FED                     	;# 
   561  0FEE                     	;# 
   562  0FEF                     	;# 
   563  0000                     	;# 
   564  0001                     	;# 
   565  0002                     	;# 
   566  0003                     	;# 
   567  0004                     	;# 
   568  0005                     	;# 
   569  0006                     	;# 
   570  0007                     	;# 
   571  0008                     	;# 
   572  0009                     	;# 
   573  000A                     	;# 
   574  000B                     	;# 
   575  000C                     	;# 
   576  000D                     	;# 
   577  000E                     	;# 
   578  0010                     	;# 
   579  0011                     	;# 
   580  0012                     	;# 
   581  0013                     	;# 
   582  0014                     	;# 
   583  0015                     	;# 
   584  0015                     	;# 
   585  0016                     	;# 
   586  0016                     	;# 
   587  0017                     	;# 
   588  0018                     	;# 
   589  0019                     	;# 
   590  0019                     	;# 
   591  001A                     	;# 
   592  001B                     	;# 
   593  001C                     	;# 
   594  001D                     	;# 
   595  001E                     	;# 
   596  001F                     	;# 
   597  008C                     	;# 
   598  008D                     	;# 
   599  008E                     	;# 
   600  0090                     	;# 
   601  0091                     	;# 
   602  0092                     	;# 
   603  0093                     	;# 
   604  0094                     	;# 
   605  0097                     	;# 
   606  009B                     	;# 
   607  009B                     	;# 
   608  009C                     	;# 
   609  009D                     	;# 
   610  009E                     	;# 
   611  009F                     	;# 
   612  010C                     	;# 
   613  010D                     	;# 
   614  010E                     	;# 
   615  0111                     	;# 
   616  0112                     	;# 
   617  0113                     	;# 
   618  0114                     	;# 
   619  0115                     	;# 
   620  0116                     	;# 
   621  0117                     	;# 
   622  0118                     	;# 
   623  0119                     	;# 
   624  018C                     	;# 
   625  018D                     	;# 
   626  018E                     	;# 
   627  0197                     	;# 
   628  0199                     	;# 
   629  0199                     	;# 
   630  0199                     	;# 
   631  019A                     	;# 
   632  019A                     	;# 
   633  019A                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019B                     	;# 
   638  019B                     	;# 
   639  019C                     	;# 
   640  019C                     	;# 
   641  019C                     	;# 
   642  019D                     	;# 
   643  019D                     	;# 
   644  019D                     	;# 
   645  019E                     	;# 
   646  019E                     	;# 
   647  019E                     	;# 
   648  019F                     	;# 
   649  019F                     	;# 
   650  019F                     	;# 
   651  019F                     	;# 
   652  019F                     	;# 
   653  020C                     	;# 
   654  020D                     	;# 
   655  020E                     	;# 
   656  0211                     	;# 
   657  0211                     	;# 
   658  0212                     	;# 
   659  0212                     	;# 
   660  0213                     	;# 
   661  0213                     	;# 
   662  0214                     	;# 
   663  0214                     	;# 
   664  0215                     	;# 
   665  0215                     	;# 
   666  0215                     	;# 
   667  0215                     	;# 
   668  0216                     	;# 
   669  0216                     	;# 
   670  0217                     	;# 
   671  0217                     	;# 
   672  0219                     	;# 
   673  021A                     	;# 
   674  021B                     	;# 
   675  021C                     	;# 
   676  021D                     	;# 
   677  021D                     	;# 
   678  021E                     	;# 
   679  021F                     	;# 
   680  028C                     	;# 
   681  028D                     	;# 
   682  028E                     	;# 
   683  0291                     	;# 
   684  0291                     	;# 
   685  0292                     	;# 
   686  0293                     	;# 
   687  0294                     	;# 
   688  0295                     	;# 
   689  0295                     	;# 
   690  0296                     	;# 
   691  0297                     	;# 
   692  0298                     	;# 
   693  029F                     	;# 
   694  030C                     	;# 
   695  030D                     	;# 
   696  030E                     	;# 
   697  0311                     	;# 
   698  0311                     	;# 
   699  0312                     	;# 
   700  0313                     	;# 
   701  0314                     	;# 
   702  0315                     	;# 
   703  0315                     	;# 
   704  0316                     	;# 
   705  0317                     	;# 
   706  0318                     	;# 
   707  038C                     	;# 
   708  038D                     	;# 
   709  038E                     	;# 
   710  0391                     	;# 
   711  0392                     	;# 
   712  0393                     	;# 
   713  0394                     	;# 
   714  0395                     	;# 
   715  0396                     	;# 
   716  0397                     	;# 
   717  0398                     	;# 
   718  0399                     	;# 
   719  039A                     	;# 
   720  039C                     	;# 
   721  039D                     	;# 
   722  039E                     	;# 
   723  039F                     	;# 
   724  0411                     	;# 
   725  0411                     	;# 
   726  0412                     	;# 
   727  0413                     	;# 
   728  0414                     	;# 
   729  0415                     	;# 
   730  0416                     	;# 
   731  0417                     	;# 
   732  0418                     	;# 
   733  0418                     	;# 
   734  0419                     	;# 
   735  041A                     	;# 
   736  041B                     	;# 
   737  041C                     	;# 
   738  041D                     	;# 
   739  041E                     	;# 
   740  041F                     	;# 
   741  0498                     	;# 
   742  0498                     	;# 
   743  0499                     	;# 
   744  049A                     	;# 
   745  049B                     	;# 
   746  049B                     	;# 
   747  049C                     	;# 
   748  049D                     	;# 
   749  049E                     	;# 
   750  049F                     	;# 
   751  0617                     	;# 
   752  0618                     	;# 
   753  0619                     	;# 
   754  0619                     	;# 
   755  061A                     	;# 
   756  061B                     	;# 
   757  061C                     	;# 
   758  061C                     	;# 
   759  061F                     	;# 
   760  0691                     	;# 
   761  0692                     	;# 
   762  0693                     	;# 
   763  0694                     	;# 
   764  0695                     	;# 
   765  0696                     	;# 
   766  0697                     	;# 
   767  0698                     	;# 
   768  0699                     	;# 
   769  0711                     	;# 
   770  0712                     	;# 
   771  0713                     	;# 
   772  0714                     	;# 
   773  0715                     	;# 
   774  0716                     	;# 
   775  0717                     	;# 
   776  0718                     	;# 
   777  0719                     	;# 
   778  0891                     	;# 
   779  0891                     	;# 
   780  0891                     	;# 
   781  0891                     	;# 
   782  0891                     	;# 
   783  0891                     	;# 
   784  0892                     	;# 
   785  0892                     	;# 
   786  0892                     	;# 
   787  0893                     	;# 
   788  0893                     	;# 
   789  0893                     	;# 
   790  0893                     	;# 
   791  0893                     	;# 
   792  0893                     	;# 
   793  0894                     	;# 
   794  0894                     	;# 
   795  0894                     	;# 
   796  0895                     	;# 
   797  0895                     	;# 
   798  0895                     	;# 
   799  0896                     	;# 
   800  0896                     	;# 
   801  0896                     	;# 
   802  089B                     	;# 
   803  0911                     	;# 
   804  0912                     	;# 
   805  0913                     	;# 
   806  0914                     	;# 
   807  0915                     	;# 
   808  0916                     	;# 
   809  0918                     	;# 
   810  0919                     	;# 
   811  091A                     	;# 
   812  091B                     	;# 
   813  091C                     	;# 
   814  091D                     	;# 
   815  091E                     	;# 
   816  091F                     	;# 
   817  0E0F                     	;# 
   818  0E10                     	;# 
   819  0E11                     	;# 
   820  0E12                     	;# 
   821  0E13                     	;# 
   822  0E14                     	;# 
   823  0E15                     	;# 
   824  0E16                     	;# 
   825  0E17                     	;# 
   826  0E18                     	;# 
   827  0E19                     	;# 
   828  0E1A                     	;# 
   829  0E1B                     	;# 
   830  0E1C                     	;# 
   831  0E1D                     	;# 
   832  0E1E                     	;# 
   833  0E1F                     	;# 
   834  0E20                     	;# 
   835  0E21                     	;# 
   836  0E22                     	;# 
   837  0E24                     	;# 
   838  0E25                     	;# 
   839  0E28                     	;# 
   840  0E29                     	;# 
   841  0E2A                     	;# 
   842  0E2B                     	;# 
   843  0E2C                     	;# 
   844  0E2D                     	;# 
   845  0E2E                     	;# 
   846  0E2F                     	;# 
   847  0E90                     	;# 
   848  0E91                     	;# 
   849  0E92                     	;# 
   850  0E94                     	;# 
   851  0E95                     	;# 
   852  0E9C                     	;# 
   853  0E9D                     	;# 
   854  0E9E                     	;# 
   855  0E9F                     	;# 
   856  0EA0                     	;# 
   857  0EA1                     	;# 
   858  0EA2                     	;# 
   859  0EA3                     	;# 
   860  0EA4                     	;# 
   861  0EA5                     	;# 
   862  0EA6                     	;# 
   863  0EA7                     	;# 
   864  0F0F                     	;# 
   865  0F10                     	;# 
   866  0F11                     	;# 
   867  0F12                     	;# 
   868  0F13                     	;# 
   869  0F14                     	;# 
   870  0F15                     	;# 
   871  0F16                     	;# 
   872  0F17                     	;# 
   873  0F18                     	;# 
   874  0F19                     	;# 
   875  0F1A                     	;# 
   876  0F1B                     	;# 
   877  0F1C                     	;# 
   878  0F1D                     	;# 
   879  0F1E                     	;# 
   880  0F1F                     	;# 
   881  0F20                     	;# 
   882  0F21                     	;# 
   883  0F22                     	;# 
   884  0F23                     	;# 
   885  0F24                     	;# 
   886  0F25                     	;# 
   887  0F26                     	;# 
   888  0F27                     	;# 
   889  0F28                     	;# 
   890  0F29                     	;# 
   891  0F2A                     	;# 
   892  0F2B                     	;# 
   893  0F2C                     	;# 
   894  0F2D                     	;# 
   895  0F2E                     	;# 
   896  0F2F                     	;# 
   897  0F30                     	;# 
   898  0F31                     	;# 
   899  0F32                     	;# 
   900  0F33                     	;# 
   901  0F34                     	;# 
   902  0F35                     	;# 
   903  0F36                     	;# 
   904  0F37                     	;# 
   905  0FE4                     	;# 
   906  0FE5                     	;# 
   907  0FE6                     	;# 
   908  0FE7                     	;# 
   909  0FE8                     	;# 
   910  0FE9                     	;# 
   911  0FEA                     	;# 
   912  0FEB                     	;# 
   913  0FED                     	;# 
   914  0FEE                     	;# 
   915  0FEF                     	;# 
   916  0000                     	;# 
   917  0001                     	;# 
   918  0002                     	;# 
   919  0003                     	;# 
   920  0004                     	;# 
   921  0005                     	;# 
   922  0006                     	;# 
   923  0007                     	;# 
   924  0008                     	;# 
   925  0009                     	;# 
   926  000A                     	;# 
   927  000B                     	;# 
   928  000C                     	;# 
   929  000D                     	;# 
   930  000E                     	;# 
   931  0010                     	;# 
   932  0011                     	;# 
   933  0012                     	;# 
   934  0013                     	;# 
   935  0014                     	;# 
   936  0015                     	;# 
   937  0015                     	;# 
   938  0016                     	;# 
   939  0016                     	;# 
   940  0017                     	;# 
   941  0018                     	;# 
   942  0019                     	;# 
   943  0019                     	;# 
   944  001A                     	;# 
   945  001B                     	;# 
   946  001C                     	;# 
   947  001D                     	;# 
   948  001E                     	;# 
   949  001F                     	;# 
   950  008C                     	;# 
   951  008D                     	;# 
   952  008E                     	;# 
   953  0090                     	;# 
   954  0091                     	;# 
   955  0092                     	;# 
   956  0093                     	;# 
   957  0094                     	;# 
   958  0097                     	;# 
   959  009B                     	;# 
   960  009B                     	;# 
   961  009C                     	;# 
   962  009D                     	;# 
   963  009E                     	;# 
   964  009F                     	;# 
   965  010C                     	;# 
   966  010D                     	;# 
   967  010E                     	;# 
   968  0111                     	;# 
   969  0112                     	;# 
   970  0113                     	;# 
   971  0114                     	;# 
   972  0115                     	;# 
   973  0116                     	;# 
   974  0117                     	;# 
   975  0118                     	;# 
   976  0119                     	;# 
   977  018C                     	;# 
   978  018D                     	;# 
   979  018E                     	;# 
   980  0197                     	;# 
   981  0199                     	;# 
   982  0199                     	;# 
   983  0199                     	;# 
   984  019A                     	;# 
   985  019A                     	;# 
   986  019A                     	;# 
   987  019B                     	;# 
   988  019B                     	;# 
   989  019B                     	;# 
   990  019B                     	;# 
   991  019B                     	;# 
   992  019C                     	;# 
   993  019C                     	;# 
   994  019C                     	;# 
   995  019D                     	;# 
   996  019D                     	;# 
   997  019D                     	;# 
   998  019E                     	;# 
   999  019E                     	;# 
  1000  019E                     	;# 
  1001  019F                     	;# 
  1002  019F                     	;# 
  1003  019F                     	;# 
  1004  019F                     	;# 
  1005  019F                     	;# 
  1006  020C                     	;# 
  1007  020D                     	;# 
  1008  020E                     	;# 
  1009  0211                     	;# 
  1010  0211                     	;# 
  1011  0212                     	;# 
  1012  0212                     	;# 
  1013  0213                     	;# 
  1014  0213                     	;# 
  1015  0214                     	;# 
  1016  0214                     	;# 
  1017  0215                     	;# 
  1018  0215                     	;# 
  1019  0215                     	;# 
  1020  0215                     	;# 
  1021  0216                     	;# 
  1022  0216                     	;# 
  1023  0217                     	;# 
  1024  0217                     	;# 
  1025  0219                     	;# 
  1026  021A                     	;# 
  1027  021B                     	;# 
  1028  021C                     	;# 
  1029  021D                     	;# 
  1030  021D                     	;# 
  1031  021E                     	;# 
  1032  021F                     	;# 
  1033  028C                     	;# 
  1034  028D                     	;# 
  1035  028E                     	;# 
  1036  0291                     	;# 
  1037  0291                     	;# 
  1038  0292                     	;# 
  1039  0293                     	;# 
  1040  0294                     	;# 
  1041  0295                     	;# 
  1042  0295                     	;# 
  1043  0296                     	;# 
  1044  0297                     	;# 
  1045  0298                     	;# 
  1046  029F                     	;# 
  1047  030C                     	;# 
  1048  030D                     	;# 
  1049  030E                     	;# 
  1050  0311                     	;# 
  1051  0311                     	;# 
  1052  0312                     	;# 
  1053  0313                     	;# 
  1054  0314                     	;# 
  1055  0315                     	;# 
  1056  0315                     	;# 
  1057  0316                     	;# 
  1058  0317                     	;# 
  1059  0318                     	;# 
  1060  038C                     	;# 
  1061  038D                     	;# 
  1062  038E                     	;# 
  1063  0391                     	;# 
  1064  0392                     	;# 
  1065  0393                     	;# 
  1066  0394                     	;# 
  1067  0395                     	;# 
  1068  0396                     	;# 
  1069  0397                     	;# 
  1070  0398                     	;# 
  1071  0399                     	;# 
  1072  039A                     	;# 
  1073  039C                     	;# 
  1074  039D                     	;# 
  1075  039E                     	;# 
  1076  039F                     	;# 
  1077  0411                     	;# 
  1078  0411                     	;# 
  1079  0412                     	;# 
  1080  0413                     	;# 
  1081  0414                     	;# 
  1082  0415                     	;# 
  1083  0416                     	;# 
  1084  0417                     	;# 
  1085  0418                     	;# 
  1086  0418                     	;# 
  1087  0419                     	;# 
  1088  041A                     	;# 
  1089  041B                     	;# 
  1090  041C                     	;# 
  1091  041D                     	;# 
  1092  041E                     	;# 
  1093  041F                     	;# 
  1094  0498                     	;# 
  1095  0498                     	;# 
  1096  0499                     	;# 
  1097  049A                     	;# 
  1098  049B                     	;# 
  1099  049B                     	;# 
  1100  049C                     	;# 
  1101  049D                     	;# 
  1102  049E                     	;# 
  1103  049F                     	;# 
  1104  0617                     	;# 
  1105  0618                     	;# 
  1106  0619                     	;# 
  1107  0619                     	;# 
  1108  061A                     	;# 
  1109  061B                     	;# 
  1110  061C                     	;# 
  1111  061C                     	;# 
  1112  061F                     	;# 
  1113  0691                     	;# 
  1114  0692                     	;# 
  1115  0693                     	;# 
  1116  0694                     	;# 
  1117  0695                     	;# 
  1118  0696                     	;# 
  1119  0697                     	;# 
  1120  0698                     	;# 
  1121  0699                     	;# 
  1122  0711                     	;# 
  1123  0712                     	;# 
  1124  0713                     	;# 
  1125  0714                     	;# 
  1126  0715                     	;# 
  1127  0716                     	;# 
  1128  0717                     	;# 
  1129  0718                     	;# 
  1130  0719                     	;# 
  1131  0891                     	;# 
  1132  0891                     	;# 
  1133  0891                     	;# 
  1134  0891                     	;# 
  1135  0891                     	;# 
  1136  0891                     	;# 
  1137  0892                     	;# 
  1138  0892                     	;# 
  1139  0892                     	;# 
  1140  0893                     	;# 
  1141  0893                     	;# 
  1142  0893                     	;# 
  1143  0893                     	;# 
  1144  0893                     	;# 
  1145  0893                     	;# 
  1146  0894                     	;# 
  1147  0894                     	;# 
  1148  0894                     	;# 
  1149  0895                     	;# 
  1150  0895                     	;# 
  1151  0895                     	;# 
  1152  0896                     	;# 
  1153  0896                     	;# 
  1154  0896                     	;# 
  1155  089B                     	;# 
  1156  0911                     	;# 
  1157  0912                     	;# 
  1158  0913                     	;# 
  1159  0914                     	;# 
  1160  0915                     	;# 
  1161  0916                     	;# 
  1162  0918                     	;# 
  1163  0919                     	;# 
  1164  091A                     	;# 
  1165  091B                     	;# 
  1166  091C                     	;# 
  1167  091D                     	;# 
  1168  091E                     	;# 
  1169  091F                     	;# 
  1170  0E0F                     	;# 
  1171  0E10                     	;# 
  1172  0E11                     	;# 
  1173  0E12                     	;# 
  1174  0E13                     	;# 
  1175  0E14                     	;# 
  1176  0E15                     	;# 
  1177  0E16                     	;# 
  1178  0E17                     	;# 
  1179  0E18                     	;# 
  1180  0E19                     	;# 
  1181  0E1A                     	;# 
  1182  0E1B                     	;# 
  1183  0E1C                     	;# 
  1184  0E1D                     	;# 
  1185  0E1E                     	;# 
  1186  0E1F                     	;# 
  1187  0E20                     	;# 
  1188  0E21                     	;# 
  1189  0E22                     	;# 
  1190  0E24                     	;# 
  1191  0E25                     	;# 
  1192  0E28                     	;# 
  1193  0E29                     	;# 
  1194  0E2A                     	;# 
  1195  0E2B                     	;# 
  1196  0E2C                     	;# 
  1197  0E2D                     	;# 
  1198  0E2E                     	;# 
  1199  0E2F                     	;# 
  1200  0E90                     	;# 
  1201  0E91                     	;# 
  1202  0E92                     	;# 
  1203  0E94                     	;# 
  1204  0E95                     	;# 
  1205  0E9C                     	;# 
  1206  0E9D                     	;# 
  1207  0E9E                     	;# 
  1208  0E9F                     	;# 
  1209  0EA0                     	;# 
  1210  0EA1                     	;# 
  1211  0EA2                     	;# 
  1212  0EA3                     	;# 
  1213  0EA4                     	;# 
  1214  0EA5                     	;# 
  1215  0EA6                     	;# 
  1216  0EA7                     	;# 
  1217  0F0F                     	;# 
  1218  0F10                     	;# 
  1219  0F11                     	;# 
  1220  0F12                     	;# 
  1221  0F13                     	;# 
  1222  0F14                     	;# 
  1223  0F15                     	;# 
  1224  0F16                     	;# 
  1225  0F17                     	;# 
  1226  0F18                     	;# 
  1227  0F19                     	;# 
  1228  0F1A                     	;# 
  1229  0F1B                     	;# 
  1230  0F1C                     	;# 
  1231  0F1D                     	;# 
  1232  0F1E                     	;# 
  1233  0F1F                     	;# 
  1234  0F20                     	;# 
  1235  0F21                     	;# 
  1236  0F22                     	;# 
  1237  0F23                     	;# 
  1238  0F24                     	;# 
  1239  0F25                     	;# 
  1240  0F26                     	;# 
  1241  0F27                     	;# 
  1242  0F28                     	;# 
  1243  0F29                     	;# 
  1244  0F2A                     	;# 
  1245  0F2B                     	;# 
  1246  0F2C                     	;# 
  1247  0F2D                     	;# 
  1248  0F2E                     	;# 
  1249  0F2F                     	;# 
  1250  0F30                     	;# 
  1251  0F31                     	;# 
  1252  0F32                     	;# 
  1253  0F33                     	;# 
  1254  0F34                     	;# 
  1255  0F35                     	;# 
  1256  0F36                     	;# 
  1257  0F37                     	;# 
  1258  0FE4                     	;# 
  1259  0FE5                     	;# 
  1260  0FE6                     	;# 
  1261  0FE7                     	;# 
  1262  0FE8                     	;# 
  1263  0FE9                     	;# 
  1264  0FEA                     	;# 
  1265  0FEB                     	;# 
  1266  0FED                     	;# 
  1267  0FEE                     	;# 
  1268  0FEF                     	;# 
  1269  0000                     	;# 
  1270  0001                     	;# 
  1271  0002                     	;# 
  1272  0003                     	;# 
  1273  0004                     	;# 
  1274  0005                     	;# 
  1275  0006                     	;# 
  1276  0007                     	;# 
  1277  0008                     	;# 
  1278  0009                     	;# 
  1279  000A                     	;# 
  1280  000B                     	;# 
  1281  000C                     	;# 
  1282  000D                     	;# 
  1283  000E                     	;# 
  1284  0010                     	;# 
  1285  0011                     	;# 
  1286  0012                     	;# 
  1287  0013                     	;# 
  1288  0014                     	;# 
  1289  0015                     	;# 
  1290  0015                     	;# 
  1291  0016                     	;# 
  1292  0016                     	;# 
  1293  0017                     	;# 
  1294  0018                     	;# 
  1295  0019                     	;# 
  1296  0019                     	;# 
  1297  001A                     	;# 
  1298  001B                     	;# 
  1299  001C                     	;# 
  1300  001D                     	;# 
  1301  001E                     	;# 
  1302  001F                     	;# 
  1303  008C                     	;# 
  1304  008D                     	;# 
  1305  008E                     	;# 
  1306  0090                     	;# 
  1307  0091                     	;# 
  1308  0092                     	;# 
  1309  0093                     	;# 
  1310  0094                     	;# 
  1311  0097                     	;# 
  1312  009B                     	;# 
  1313  009B                     	;# 
  1314  009C                     	;# 
  1315  009D                     	;# 
  1316  009E                     	;# 
  1317  009F                     	;# 
  1318  010C                     	;# 
  1319  010D                     	;# 
  1320  010E                     	;# 
  1321  0111                     	;# 
  1322  0112                     	;# 
  1323  0113                     	;# 
  1324  0114                     	;# 
  1325  0115                     	;# 
  1326  0116                     	;# 
  1327  0117                     	;# 
  1328  0118                     	;# 
  1329  0119                     	;# 
  1330  018C                     	;# 
  1331  018D                     	;# 
  1332  018E                     	;# 
  1333  0197                     	;# 
  1334  0199                     	;# 
  1335  0199                     	;# 
  1336  0199                     	;# 
  1337  019A                     	;# 
  1338  019A                     	;# 
  1339  019A                     	;# 
  1340  019B                     	;# 
  1341  019B                     	;# 
  1342  019B                     	;# 
  1343  019B                     	;# 
  1344  019B                     	;# 
  1345  019C                     	;# 
  1346  019C                     	;# 
  1347  019C                     	;# 
  1348  019D                     	;# 
  1349  019D                     	;# 
  1350  019D                     	;# 
  1351  019E                     	;# 
  1352  019E                     	;# 
  1353  019E                     	;# 
  1354  019F                     	;# 
  1355  019F                     	;# 
  1356  019F                     	;# 
  1357  019F                     	;# 
  1358  019F                     	;# 
  1359  020C                     	;# 
  1360  020D                     	;# 
  1361  020E                     	;# 
  1362  0211                     	;# 
  1363  0211                     	;# 
  1364  0212                     	;# 
  1365  0212                     	;# 
  1366  0213                     	;# 
  1367  0213                     	;# 
  1368  0214                     	;# 
  1369  0214                     	;# 
  1370  0215                     	;# 
  1371  0215                     	;# 
  1372  0215                     	;# 
  1373  0215                     	;# 
  1374  0216                     	;# 
  1375  0216                     	;# 
  1376  0217                     	;# 
  1377  0217                     	;# 
  1378  0219                     	;# 
  1379  021A                     	;# 
  1380  021B                     	;# 
  1381  021C                     	;# 
  1382  021D                     	;# 
  1383  021D                     	;# 
  1384  021E                     	;# 
  1385  021F                     	;# 
  1386  028C                     	;# 
  1387  028D                     	;# 
  1388  028E                     	;# 
  1389  0291                     	;# 
  1390  0291                     	;# 
  1391  0292                     	;# 
  1392  0293                     	;# 
  1393  0294                     	;# 
  1394  0295                     	;# 
  1395  0295                     	;# 
  1396  0296                     	;# 
  1397  0297                     	;# 
  1398  0298                     	;# 
  1399  029F                     	;# 
  1400  030C                     	;# 
  1401  030D                     	;# 
  1402  030E                     	;# 
  1403  0311                     	;# 
  1404  0311                     	;# 
  1405  0312                     	;# 
  1406  0313                     	;# 
  1407  0314                     	;# 
  1408  0315                     	;# 
  1409  0315                     	;# 
  1410  0316                     	;# 
  1411  0317                     	;# 
  1412  0318                     	;# 
  1413  038C                     	;# 
  1414  038D                     	;# 
  1415  038E                     	;# 
  1416  0391                     	;# 
  1417  0392                     	;# 
  1418  0393                     	;# 
  1419  0394                     	;# 
  1420  0395                     	;# 
  1421  0396                     	;# 
  1422  0397                     	;# 
  1423  0398                     	;# 
  1424  0399                     	;# 
  1425  039A                     	;# 
  1426  039C                     	;# 
  1427  039D                     	;# 
  1428  039E                     	;# 
  1429  039F                     	;# 
  1430  0411                     	;# 
  1431  0411                     	;# 
  1432  0412                     	;# 
  1433  0413                     	;# 
  1434  0414                     	;# 
  1435  0415                     	;# 
  1436  0416                     	;# 
  1437  0417                     	;# 
  1438  0418                     	;# 
  1439  0418                     	;# 
  1440  0419                     	;# 
  1441  041A                     	;# 
  1442  041B                     	;# 
  1443  041C                     	;# 
  1444  041D                     	;# 
  1445  041E                     	;# 
  1446  041F                     	;# 
  1447  0498                     	;# 
  1448  0498                     	;# 
  1449  0499                     	;# 
  1450  049A                     	;# 
  1451  049B                     	;# 
  1452  049B                     	;# 
  1453  049C                     	;# 
  1454  049D                     	;# 
  1455  049E                     	;# 
  1456  049F                     	;# 
  1457  0617                     	;# 
  1458  0618                     	;# 
  1459  0619                     	;# 
  1460  0619                     	;# 
  1461  061A                     	;# 
  1462  061B                     	;# 
  1463  061C                     	;# 
  1464  061C                     	;# 
  1465  061F                     	;# 
  1466  0691                     	;# 
  1467  0692                     	;# 
  1468  0693                     	;# 
  1469  0694                     	;# 
  1470  0695                     	;# 
  1471  0696                     	;# 
  1472  0697                     	;# 
  1473  0698                     	;# 
  1474  0699                     	;# 
  1475  0711                     	;# 
  1476  0712                     	;# 
  1477  0713                     	;# 
  1478  0714                     	;# 
  1479  0715                     	;# 
  1480  0716                     	;# 
  1481  0717                     	;# 
  1482  0718                     	;# 
  1483  0719                     	;# 
  1484  0891                     	;# 
  1485  0891                     	;# 
  1486  0891                     	;# 
  1487  0891                     	;# 
  1488  0891                     	;# 
  1489  0891                     	;# 
  1490  0892                     	;# 
  1491  0892                     	;# 
  1492  0892                     	;# 
  1493  0893                     	;# 
  1494  0893                     	;# 
  1495  0893                     	;# 
  1496  0893                     	;# 
  1497  0893                     	;# 
  1498  0893                     	;# 
  1499  0894                     	;# 
  1500  0894                     	;# 
  1501  0894                     	;# 
  1502  0895                     	;# 
  1503  0895                     	;# 
  1504  0895                     	;# 
  1505  0896                     	;# 
  1506  0896                     	;# 
  1507  0896                     	;# 
  1508  089B                     	;# 
  1509  0911                     	;# 
  1510  0912                     	;# 
  1511  0913                     	;# 
  1512  0914                     	;# 
  1513  0915                     	;# 
  1514  0916                     	;# 
  1515  0918                     	;# 
  1516  0919                     	;# 
  1517  091A                     	;# 
  1518  091B                     	;# 
  1519  091C                     	;# 
  1520  091D                     	;# 
  1521  091E                     	;# 
  1522  091F                     	;# 
  1523  0E0F                     	;# 
  1524  0E10                     	;# 
  1525  0E11                     	;# 
  1526  0E12                     	;# 
  1527  0E13                     	;# 
  1528  0E14                     	;# 
  1529  0E15                     	;# 
  1530  0E16                     	;# 
  1531  0E17                     	;# 
  1532  0E18                     	;# 
  1533  0E19                     	;# 
  1534  0E1A                     	;# 
  1535  0E1B                     	;# 
  1536  0E1C                     	;# 
  1537  0E1D                     	;# 
  1538  0E1E                     	;# 
  1539  0E1F                     	;# 
  1540  0E20                     	;# 
  1541  0E21                     	;# 
  1542  0E22                     	;# 
  1543  0E24                     	;# 
  1544  0E25                     	;# 
  1545  0E28                     	;# 
  1546  0E29                     	;# 
  1547  0E2A                     	;# 
  1548  0E2B                     	;# 
  1549  0E2C                     	;# 
  1550  0E2D                     	;# 
  1551  0E2E                     	;# 
  1552  0E2F                     	;# 
  1553  0E90                     	;# 
  1554  0E91                     	;# 
  1555  0E92                     	;# 
  1556  0E94                     	;# 
  1557  0E95                     	;# 
  1558  0E9C                     	;# 
  1559  0E9D                     	;# 
  1560  0E9E                     	;# 
  1561  0E9F                     	;# 
  1562  0EA0                     	;# 
  1563  0EA1                     	;# 
  1564  0EA2                     	;# 
  1565  0EA3                     	;# 
  1566  0EA4                     	;# 
  1567  0EA5                     	;# 
  1568  0EA6                     	;# 
  1569  0EA7                     	;# 
  1570  0F0F                     	;# 
  1571  0F10                     	;# 
  1572  0F11                     	;# 
  1573  0F12                     	;# 
  1574  0F13                     	;# 
  1575  0F14                     	;# 
  1576  0F15                     	;# 
  1577  0F16                     	;# 
  1578  0F17                     	;# 
  1579  0F18                     	;# 
  1580  0F19                     	;# 
  1581  0F1A                     	;# 
  1582  0F1B                     	;# 
  1583  0F1C                     	;# 
  1584  0F1D                     	;# 
  1585  0F1E                     	;# 
  1586  0F1F                     	;# 
  1587  0F20                     	;# 
  1588  0F21                     	;# 
  1589  0F22                     	;# 
  1590  0F23                     	;# 
  1591  0F24                     	;# 
  1592  0F25                     	;# 
  1593  0F26                     	;# 
  1594  0F27                     	;# 
  1595  0F28                     	;# 
  1596  0F29                     	;# 
  1597  0F2A                     	;# 
  1598  0F2B                     	;# 
  1599  0F2C                     	;# 
  1600  0F2D                     	;# 
  1601  0F2E                     	;# 
  1602  0F2F                     	;# 
  1603  0F30                     	;# 
  1604  0F31                     	;# 
  1605  0F32                     	;# 
  1606  0F33                     	;# 
  1607  0F34                     	;# 
  1608  0F35                     	;# 
  1609  0F36                     	;# 
  1610  0F37                     	;# 
  1611  0FE4                     	;# 
  1612  0FE5                     	;# 
  1613  0FE6                     	;# 
  1614  0FE7                     	;# 
  1615  0FE8                     	;# 
  1616  0FE9                     	;# 
  1617  0FEA                     	;# 
  1618  0FEB                     	;# 
  1619  0FED                     	;# 
  1620  0FEE                     	;# 
  1621  0FEF                     	;# 
  1622  0000                     	;# 
  1623  0001                     	;# 
  1624  0002                     	;# 
  1625  0003                     	;# 
  1626  0004                     	;# 
  1627  0005                     	;# 
  1628  0006                     	;# 
  1629  0007                     	;# 
  1630  0008                     	;# 
  1631  0009                     	;# 
  1632  000A                     	;# 
  1633  000B                     	;# 
  1634  000C                     	;# 
  1635  000D                     	;# 
  1636  000E                     	;# 
  1637  0010                     	;# 
  1638  0011                     	;# 
  1639  0012                     	;# 
  1640  0013                     	;# 
  1641  0014                     	;# 
  1642  0015                     	;# 
  1643  0015                     	;# 
  1644  0016                     	;# 
  1645  0016                     	;# 
  1646  0017                     	;# 
  1647  0018                     	;# 
  1648  0019                     	;# 
  1649  0019                     	;# 
  1650  001A                     	;# 
  1651  001B                     	;# 
  1652  001C                     	;# 
  1653  001D                     	;# 
  1654  001E                     	;# 
  1655  001F                     	;# 
  1656  008C                     	;# 
  1657  008D                     	;# 
  1658  008E                     	;# 
  1659  0090                     	;# 
  1660  0091                     	;# 
  1661  0092                     	;# 
  1662  0093                     	;# 
  1663  0094                     	;# 
  1664  0097                     	;# 
  1665  009B                     	;# 
  1666  009B                     	;# 
  1667  009C                     	;# 
  1668  009D                     	;# 
  1669  009E                     	;# 
  1670  009F                     	;# 
  1671  010C                     	;# 
  1672  010D                     	;# 
  1673  010E                     	;# 
  1674  0111                     	;# 
  1675  0112                     	;# 
  1676  0113                     	;# 
  1677  0114                     	;# 
  1678  0115                     	;# 
  1679  0116                     	;# 
  1680  0117                     	;# 
  1681  0118                     	;# 
  1682  0119                     	;# 
  1683  018C                     	;# 
  1684  018D                     	;# 
  1685  018E                     	;# 
  1686  0197                     	;# 
  1687  0199                     	;# 
  1688  0199                     	;# 
  1689  0199                     	;# 
  1690  019A                     	;# 
  1691  019A                     	;# 
  1692  019A                     	;# 
  1693  019B                     	;# 
  1694  019B                     	;# 
  1695  019B                     	;# 
  1696  019B                     	;# 
  1697  019B                     	;# 
  1698  019C                     	;# 
  1699  019C                     	;# 
  1700  019C                     	;# 
  1701  019D                     	;# 
  1702  019D                     	;# 
  1703  019D                     	;# 
  1704  019E                     	;# 
  1705  019E                     	;# 
  1706  019E                     	;# 
  1707  019F                     	;# 
  1708  019F                     	;# 
  1709  019F                     	;# 
  1710  019F                     	;# 
  1711  019F                     	;# 
  1712  020C                     	;# 
  1713  020D                     	;# 
  1714  020E                     	;# 
  1715  0211                     	;# 
  1716  0211                     	;# 
  1717  0212                     	;# 
  1718  0212                     	;# 
  1719  0213                     	;# 
  1720  0213                     	;# 
  1721  0214                     	;# 
  1722  0214                     	;# 
  1723  0215                     	;# 
  1724  0215                     	;# 
  1725  0215                     	;# 
  1726  0215                     	;# 
  1727  0216                     	;# 
  1728  0216                     	;# 
  1729  0217                     	;# 
  1730  0217                     	;# 
  1731  0219                     	;# 
  1732  021A                     	;# 
  1733  021B                     	;# 
  1734  021C                     	;# 
  1735  021D                     	;# 
  1736  021D                     	;# 
  1737  021E                     	;# 
  1738  021F                     	;# 
  1739  028C                     	;# 
  1740  028D                     	;# 
  1741  028E                     	;# 
  1742  0291                     	;# 
  1743  0291                     	;# 
  1744  0292                     	;# 
  1745  0293                     	;# 
  1746  0294                     	;# 
  1747  0295                     	;# 
  1748  0295                     	;# 
  1749  0296                     	;# 
  1750  0297                     	;# 
  1751  0298                     	;# 
  1752  029F                     	;# 
  1753  030C                     	;# 
  1754  030D                     	;# 
  1755  030E                     	;# 
  1756  0311                     	;# 
  1757  0311                     	;# 
  1758  0312                     	;# 
  1759  0313                     	;# 
  1760  0314                     	;# 
  1761  0315                     	;# 
  1762  0315                     	;# 
  1763  0316                     	;# 
  1764  0317                     	;# 
  1765  0318                     	;# 
  1766  038C                     	;# 
  1767  038D                     	;# 
  1768  038E                     	;# 
  1769  0391                     	;# 
  1770  0392                     	;# 
  1771  0393                     	;# 
  1772  0394                     	;# 
  1773  0395                     	;# 
  1774  0396                     	;# 
  1775  0397                     	;# 
  1776  0398                     	;# 
  1777  0399                     	;# 
  1778  039A                     	;# 
  1779  039C                     	;# 
  1780  039D                     	;# 
  1781  039E                     	;# 
  1782  039F                     	;# 
  1783  0411                     	;# 
  1784  0411                     	;# 
  1785  0412                     	;# 
  1786  0413                     	;# 
  1787  0414                     	;# 
  1788  0415                     	;# 
  1789  0416                     	;# 
  1790  0417                     	;# 
  1791  0418                     	;# 
  1792  0418                     	;# 
  1793  0419                     	;# 
  1794  041A                     	;# 
  1795  041B                     	;# 
  1796  041C                     	;# 
  1797  041D                     	;# 
  1798  041E                     	;# 
  1799  041F                     	;# 
  1800  0498                     	;# 
  1801  0498                     	;# 
  1802  0499                     	;# 
  1803  049A                     	;# 
  1804  049B                     	;# 
  1805  049B                     	;# 
  1806  049C                     	;# 
  1807  049D                     	;# 
  1808  049E                     	;# 
  1809  049F                     	;# 
  1810  0617                     	;# 
  1811  0618                     	;# 
  1812  0619                     	;# 
  1813  0619                     	;# 
  1814  061A                     	;# 
  1815  061B                     	;# 
  1816  061C                     	;# 
  1817  061C                     	;# 
  1818  061F                     	;# 
  1819  0691                     	;# 
  1820  0692                     	;# 
  1821  0693                     	;# 
  1822  0694                     	;# 
  1823  0695                     	;# 
  1824  0696                     	;# 
  1825  0697                     	;# 
  1826  0698                     	;# 
  1827  0699                     	;# 
  1828  0711                     	;# 
  1829  0712                     	;# 
  1830  0713                     	;# 
  1831  0714                     	;# 
  1832  0715                     	;# 
  1833  0716                     	;# 
  1834  0717                     	;# 
  1835  0718                     	;# 
  1836  0719                     	;# 
  1837  0891                     	;# 
  1838  0891                     	;# 
  1839  0891                     	;# 
  1840  0891                     	;# 
  1841  0891                     	;# 
  1842  0891                     	;# 
  1843  0892                     	;# 
  1844  0892                     	;# 
  1845  0892                     	;# 
  1846  0893                     	;# 
  1847  0893                     	;# 
  1848  0893                     	;# 
  1849  0893                     	;# 
  1850  0893                     	;# 
  1851  0893                     	;# 
  1852  0894                     	;# 
  1853  0894                     	;# 
  1854  0894                     	;# 
  1855  0895                     	;# 
  1856  0895                     	;# 
  1857  0895                     	;# 
  1858  0896                     	;# 
  1859  0896                     	;# 
  1860  0896                     	;# 
  1861  089B                     	;# 
  1862  0911                     	;# 
  1863  0912                     	;# 
  1864  0913                     	;# 
  1865  0914                     	;# 
  1866  0915                     	;# 
  1867  0916                     	;# 
  1868  0918                     	;# 
  1869  0919                     	;# 
  1870  091A                     	;# 
  1871  091B                     	;# 
  1872  091C                     	;# 
  1873  091D                     	;# 
  1874  091E                     	;# 
  1875  091F                     	;# 
  1876  0E0F                     	;# 
  1877  0E10                     	;# 
  1878  0E11                     	;# 
  1879  0E12                     	;# 
  1880  0E13                     	;# 
  1881  0E14                     	;# 
  1882  0E15                     	;# 
  1883  0E16                     	;# 
  1884  0E17                     	;# 
  1885  0E18                     	;# 
  1886  0E19                     	;# 
  1887  0E1A                     	;# 
  1888  0E1B                     	;# 
  1889  0E1C                     	;# 
  1890  0E1D                     	;# 
  1891  0E1E                     	;# 
  1892  0E1F                     	;# 
  1893  0E20                     	;# 
  1894  0E21                     	;# 
  1895  0E22                     	;# 
  1896  0E24                     	;# 
  1897  0E25                     	;# 
  1898  0E28                     	;# 
  1899  0E29                     	;# 
  1900  0E2A                     	;# 
  1901  0E2B                     	;# 
  1902  0E2C                     	;# 
  1903  0E2D                     	;# 
  1904  0E2E                     	;# 
  1905  0E2F                     	;# 
  1906  0E90                     	;# 
  1907  0E91                     	;# 
  1908  0E92                     	;# 
  1909  0E94                     	;# 
  1910  0E95                     	;# 
  1911  0E9C                     	;# 
  1912  0E9D                     	;# 
  1913  0E9E                     	;# 
  1914  0E9F                     	;# 
  1915  0EA0                     	;# 
  1916  0EA1                     	;# 
  1917  0EA2                     	;# 
  1918  0EA3                     	;# 
  1919  0EA4                     	;# 
  1920  0EA5                     	;# 
  1921  0EA6                     	;# 
  1922  0EA7                     	;# 
  1923  0F0F                     	;# 
  1924  0F10                     	;# 
  1925  0F11                     	;# 
  1926  0F12                     	;# 
  1927  0F13                     	;# 
  1928  0F14                     	;# 
  1929  0F15                     	;# 
  1930  0F16                     	;# 
  1931  0F17                     	;# 
  1932  0F18                     	;# 
  1933  0F19                     	;# 
  1934  0F1A                     	;# 
  1935  0F1B                     	;# 
  1936  0F1C                     	;# 
  1937  0F1D                     	;# 
  1938  0F1E                     	;# 
  1939  0F1F                     	;# 
  1940  0F20                     	;# 
  1941  0F21                     	;# 
  1942  0F22                     	;# 
  1943  0F23                     	;# 
  1944  0F24                     	;# 
  1945  0F25                     	;# 
  1946  0F26                     	;# 
  1947  0F27                     	;# 
  1948  0F28                     	;# 
  1949  0F29                     	;# 
  1950  0F2A                     	;# 
  1951  0F2B                     	;# 
  1952  0F2C                     	;# 
  1953  0F2D                     	;# 
  1954  0F2E                     	;# 
  1955  0F2F                     	;# 
  1956  0F30                     	;# 
  1957  0F31                     	;# 
  1958  0F32                     	;# 
  1959  0F33                     	;# 
  1960  0F34                     	;# 
  1961  0F35                     	;# 
  1962  0F36                     	;# 
  1963  0F37                     	;# 
  1964  0FE4                     	;# 
  1965  0FE5                     	;# 
  1966  0FE6                     	;# 
  1967  0FE7                     	;# 
  1968  0FE8                     	;# 
  1969  0FE9                     	;# 
  1970  0FEA                     	;# 
  1971  0FEB                     	;# 
  1972  0FED                     	;# 
  1973  0FEE                     	;# 
  1974  0FEF                     	;# 
  1975  0000                     	;# 
  1976  0001                     	;# 
  1977  0002                     	;# 
  1978  0003                     	;# 
  1979  0004                     	;# 
  1980  0005                     	;# 
  1981  0006                     	;# 
  1982  0007                     	;# 
  1983  0008                     	;# 
  1984  0009                     	;# 
  1985  000A                     	;# 
  1986  000B                     	;# 
  1987  000C                     	;# 
  1988  000D                     	;# 
  1989  000E                     	;# 
  1990  0010                     	;# 
  1991  0011                     	;# 
  1992  0012                     	;# 
  1993  0013                     	;# 
  1994  0014                     	;# 
  1995  0015                     	;# 
  1996  0015                     	;# 
  1997  0016                     	;# 
  1998  0016                     	;# 
  1999  0017                     	;# 
  2000  0018                     	;# 
  2001  0019                     	;# 
  2002  0019                     	;# 
  2003  001A                     	;# 
  2004  001B                     	;# 
  2005  001C                     	;# 
  2006  001D                     	;# 
  2007  001E                     	;# 
  2008  001F                     	;# 
  2009  008C                     	;# 
  2010  008D                     	;# 
  2011  008E                     	;# 
  2012  0090                     	;# 
  2013  0091                     	;# 
  2014  0092                     	;# 
  2015  0093                     	;# 
  2016  0094                     	;# 
  2017  0097                     	;# 
  2018  009B                     	;# 
  2019  009B                     	;# 
  2020  009C                     	;# 
  2021  009D                     	;# 
  2022  009E                     	;# 
  2023  009F                     	;# 
  2024  010C                     	;# 
  2025  010D                     	;# 
  2026  010E                     	;# 
  2027  0111                     	;# 
  2028  0112                     	;# 
  2029  0113                     	;# 
  2030  0114                     	;# 
  2031  0115                     	;# 
  2032  0116                     	;# 
  2033  0117                     	;# 
  2034  0118                     	;# 
  2035  0119                     	;# 
  2036  018C                     	;# 
  2037  018D                     	;# 
  2038  018E                     	;# 
  2039  0197                     	;# 
  2040  0199                     	;# 
  2041  0199                     	;# 
  2042  0199                     	;# 
  2043  019A                     	;# 
  2044  019A                     	;# 
  2045  019A                     	;# 
  2046  019B                     	;# 
  2047  019B                     	;# 
  2048  019B                     	;# 
  2049  019B                     	;# 
  2050  019B                     	;# 
  2051  019C                     	;# 
  2052  019C                     	;# 
  2053  019C                     	;# 
  2054  019D                     	;# 
  2055  019D                     	;# 
  2056  019D                     	;# 
  2057  019E                     	;# 
  2058  019E                     	;# 
  2059  019E                     	;# 
  2060  019F                     	;# 
  2061  019F                     	;# 
  2062  019F                     	;# 
  2063  019F                     	;# 
  2064  019F                     	;# 
  2065  020C                     	;# 
  2066  020D                     	;# 
  2067  020E                     	;# 
  2068  0211                     	;# 
  2069  0211                     	;# 
  2070  0212                     	;# 
  2071  0212                     	;# 
  2072  0213                     	;# 
  2073  0213                     	;# 
  2074  0214                     	;# 
  2075  0214                     	;# 
  2076  0215                     	;# 
  2077  0215                     	;# 
  2078  0215                     	;# 
  2079  0215                     	;# 
  2080  0216                     	;# 
  2081  0216                     	;# 
  2082  0217                     	;# 
  2083  0217                     	;# 
  2084  0219                     	;# 
  2085  021A                     	;# 
  2086  021B                     	;# 
  2087  021C                     	;# 
  2088  021D                     	;# 
  2089  021D                     	;# 
  2090  021E                     	;# 
  2091  021F                     	;# 
  2092  028C                     	;# 
  2093  028D                     	;# 
  2094  028E                     	;# 
  2095  0291                     	;# 
  2096  0291                     	;# 
  2097  0292                     	;# 
  2098  0293                     	;# 
  2099  0294                     	;# 
  2100  0295                     	;# 
  2101  0295                     	;# 
  2102  0296                     	;# 
  2103  0297                     	;# 
  2104  0298                     	;# 
  2105  029F                     	;# 
  2106  030C                     	;# 
  2107  030D                     	;# 
  2108  030E                     	;# 
  2109  0311                     	;# 
  2110  0311                     	;# 
  2111  0312                     	;# 
  2112  0313                     	;# 
  2113  0314                     	;# 
  2114  0315                     	;# 
  2115  0315                     	;# 
  2116  0316                     	;# 
  2117  0317                     	;# 
  2118  0318                     	;# 
  2119  038C                     	;# 
  2120  038D                     	;# 
  2121  038E                     	;# 
  2122  0391                     	;# 
  2123  0392                     	;# 
  2124  0393                     	;# 
  2125  0394                     	;# 
  2126  0395                     	;# 
  2127  0396                     	;# 
  2128  0397                     	;# 
  2129  0398                     	;# 
  2130  0399                     	;# 
  2131  039A                     	;# 
  2132  039C                     	;# 
  2133  039D                     	;# 
  2134  039E                     	;# 
  2135  039F                     	;# 
  2136  0411                     	;# 
  2137  0411                     	;# 
  2138  0412                     	;# 
  2139  0413                     	;# 
  2140  0414                     	;# 
  2141  0415                     	;# 
  2142  0416                     	;# 
  2143  0417                     	;# 
  2144  0418                     	;# 
  2145  0418                     	;# 
  2146  0419                     	;# 
  2147  041A                     	;# 
  2148  041B                     	;# 
  2149  041C                     	;# 
  2150  041D                     	;# 
  2151  041E                     	;# 
  2152  041F                     	;# 
  2153  0498                     	;# 
  2154  0498                     	;# 
  2155  0499                     	;# 
  2156  049A                     	;# 
  2157  049B                     	;# 
  2158  049B                     	;# 
  2159  049C                     	;# 
  2160  049D                     	;# 
  2161  049E                     	;# 
  2162  049F                     	;# 
  2163  0617                     	;# 
  2164  0618                     	;# 
  2165  0619                     	;# 
  2166  0619                     	;# 
  2167  061A                     	;# 
  2168  061B                     	;# 
  2169  061C                     	;# 
  2170  061C                     	;# 
  2171  061F                     	;# 
  2172  0691                     	;# 
  2173  0692                     	;# 
  2174  0693                     	;# 
  2175  0694                     	;# 
  2176  0695                     	;# 
  2177  0696                     	;# 
  2178  0697                     	;# 
  2179  0698                     	;# 
  2180  0699                     	;# 
  2181  0711                     	;# 
  2182  0712                     	;# 
  2183  0713                     	;# 
  2184  0714                     	;# 
  2185  0715                     	;# 
  2186  0716                     	;# 
  2187  0717                     	;# 
  2188  0718                     	;# 
  2189  0719                     	;# 
  2190  0891                     	;# 
  2191  0891                     	;# 
  2192  0891                     	;# 
  2193  0891                     	;# 
  2194  0891                     	;# 
  2195  0891                     	;# 
  2196  0892                     	;# 
  2197  0892                     	;# 
  2198  0892                     	;# 
  2199  0893                     	;# 
  2200  0893                     	;# 
  2201  0893                     	;# 
  2202  0893                     	;# 
  2203  0893                     	;# 
  2204  0893                     	;# 
  2205  0894                     	;# 
  2206  0894                     	;# 
  2207  0894                     	;# 
  2208  0895                     	;# 
  2209  0895                     	;# 
  2210  0895                     	;# 
  2211  0896                     	;# 
  2212  0896                     	;# 
  2213  0896                     	;# 
  2214  089B                     	;# 
  2215  0911                     	;# 
  2216  0912                     	;# 
  2217  0913                     	;# 
  2218  0914                     	;# 
  2219  0915                     	;# 
  2220  0916                     	;# 
  2221  0918                     	;# 
  2222  0919                     	;# 
  2223  091A                     	;# 
  2224  091B                     	;# 
  2225  091C                     	;# 
  2226  091D                     	;# 
  2227  091E                     	;# 
  2228  091F                     	;# 
  2229  0E0F                     	;# 
  2230  0E10                     	;# 
  2231  0E11                     	;# 
  2232  0E12                     	;# 
  2233  0E13                     	;# 
  2234  0E14                     	;# 
  2235  0E15                     	;# 
  2236  0E16                     	;# 
  2237  0E17                     	;# 
  2238  0E18                     	;# 
  2239  0E19                     	;# 
  2240  0E1A                     	;# 
  2241  0E1B                     	;# 
  2242  0E1C                     	;# 
  2243  0E1D                     	;# 
  2244  0E1E                     	;# 
  2245  0E1F                     	;# 
  2246  0E20                     	;# 
  2247  0E21                     	;# 
  2248  0E22                     	;# 
  2249  0E24                     	;# 
  2250  0E25                     	;# 
  2251  0E28                     	;# 
  2252  0E29                     	;# 
  2253  0E2A                     	;# 
  2254  0E2B                     	;# 
  2255  0E2C                     	;# 
  2256  0E2D                     	;# 
  2257  0E2E                     	;# 
  2258  0E2F                     	;# 
  2259  0E90                     	;# 
  2260  0E91                     	;# 
  2261  0E92                     	;# 
  2262  0E94                     	;# 
  2263  0E95                     	;# 
  2264  0E9C                     	;# 
  2265  0E9D                     	;# 
  2266  0E9E                     	;# 
  2267  0E9F                     	;# 
  2268  0EA0                     	;# 
  2269  0EA1                     	;# 
  2270  0EA2                     	;# 
  2271  0EA3                     	;# 
  2272  0EA4                     	;# 
  2273  0EA5                     	;# 
  2274  0EA6                     	;# 
  2275  0EA7                     	;# 
  2276  0F0F                     	;# 
  2277  0F10                     	;# 
  2278  0F11                     	;# 
  2279  0F12                     	;# 
  2280  0F13                     	;# 
  2281  0F14                     	;# 
  2282  0F15                     	;# 
  2283  0F16                     	;# 
  2284  0F17                     	;# 
  2285  0F18                     	;# 
  2286  0F19                     	;# 
  2287  0F1A                     	;# 
  2288  0F1B                     	;# 
  2289  0F1C                     	;# 
  2290  0F1D                     	;# 
  2291  0F1E                     	;# 
  2292  0F1F                     	;# 
  2293  0F20                     	;# 
  2294  0F21                     	;# 
  2295  0F22                     	;# 
  2296  0F23                     	;# 
  2297  0F24                     	;# 
  2298  0F25                     	;# 
  2299  0F26                     	;# 
  2300  0F27                     	;# 
  2301  0F28                     	;# 
  2302  0F29                     	;# 
  2303  0F2A                     	;# 
  2304  0F2B                     	;# 
  2305  0F2C                     	;# 
  2306  0F2D                     	;# 
  2307  0F2E                     	;# 
  2308  0F2F                     	;# 
  2309  0F30                     	;# 
  2310  0F31                     	;# 
  2311  0F32                     	;# 
  2312  0F33                     	;# 
  2313  0F34                     	;# 
  2314  0F35                     	;# 
  2315  0F36                     	;# 
  2316  0F37                     	;# 
  2317  0FE4                     	;# 
  2318  0FE5                     	;# 
  2319  0FE6                     	;# 
  2320  0FE7                     	;# 
  2321  0FE8                     	;# 
  2322  0FE9                     	;# 
  2323  0FEA                     	;# 
  2324  0FEB                     	;# 
  2325  0FED                     	;# 
  2326  0FEE                     	;# 
  2327  0FEF                     	;# 
  2328  0000                     	;# 
  2329  0001                     	;# 
  2330  0002                     	;# 
  2331  0003                     	;# 
  2332  0004                     	;# 
  2333  0005                     	;# 
  2334  0006                     	;# 
  2335  0007                     	;# 
  2336  0008                     	;# 
  2337  0009                     	;# 
  2338  000A                     	;# 
  2339  000B                     	;# 
  2340  000C                     	;# 
  2341  000D                     	;# 
  2342  000E                     	;# 
  2343  0010                     	;# 
  2344  0011                     	;# 
  2345  0012                     	;# 
  2346  0013                     	;# 
  2347  0014                     	;# 
  2348  0015                     	;# 
  2349  0015                     	;# 
  2350  0016                     	;# 
  2351  0016                     	;# 
  2352  0017                     	;# 
  2353  0018                     	;# 
  2354  0019                     	;# 
  2355  0019                     	;# 
  2356  001A                     	;# 
  2357  001B                     	;# 
  2358  001C                     	;# 
  2359  001D                     	;# 
  2360  001E                     	;# 
  2361  001F                     	;# 
  2362  008C                     	;# 
  2363  008D                     	;# 
  2364  008E                     	;# 
  2365  0090                     	;# 
  2366  0091                     	;# 
  2367  0092                     	;# 
  2368  0093                     	;# 
  2369  0094                     	;# 
  2370  0097                     	;# 
  2371  009B                     	;# 
  2372  009B                     	;# 
  2373  009C                     	;# 
  2374  009D                     	;# 
  2375  009E                     	;# 
  2376  009F                     	;# 
  2377  010C                     	;# 
  2378  010D                     	;# 
  2379  010E                     	;# 
  2380  0111                     	;# 
  2381  0112                     	;# 
  2382  0113                     	;# 
  2383  0114                     	;# 
  2384  0115                     	;# 
  2385  0116                     	;# 
  2386  0117                     	;# 
  2387  0118                     	;# 
  2388  0119                     	;# 
  2389  018C                     	;# 
  2390  018D                     	;# 
  2391  018E                     	;# 
  2392  0197                     	;# 
  2393  0199                     	;# 
  2394  0199                     	;# 
  2395  0199                     	;# 
  2396  019A                     	;# 
  2397  019A                     	;# 
  2398  019A                     	;# 
  2399  019B                     	;# 
  2400  019B                     	;# 
  2401  019B                     	;# 
  2402  019B                     	;# 
  2403  019B                     	;# 
  2404  019C                     	;# 
  2405  019C                     	;# 
  2406  019C                     	;# 
  2407  019D                     	;# 
  2408  019D                     	;# 
  2409  019D                     	;# 
  2410  019E                     	;# 
  2411  019E                     	;# 
  2412  019E                     	;# 
  2413  019F                     	;# 
  2414  019F                     	;# 
  2415  019F                     	;# 
  2416  019F                     	;# 
  2417  019F                     	;# 
  2418  020C                     	;# 
  2419  020D                     	;# 
  2420  020E                     	;# 
  2421  0211                     	;# 
  2422  0211                     	;# 
  2423  0212                     	;# 
  2424  0212                     	;# 
  2425  0213                     	;# 
  2426  0213                     	;# 
  2427  0214                     	;# 
  2428  0214                     	;# 
  2429  0215                     	;# 
  2430  0215                     	;# 
  2431  0215                     	;# 
  2432  0215                     	;# 
  2433  0216                     	;# 
  2434  0216                     	;# 
  2435  0217                     	;# 
  2436  0217                     	;# 
  2437  0219                     	;# 
  2438  021A                     	;# 
  2439  021B                     	;# 
  2440  021C                     	;# 
  2441  021D                     	;# 
  2442  021D                     	;# 
  2443  021E                     	;# 
  2444  021F                     	;# 
  2445  028C                     	;# 
  2446  028D                     	;# 
  2447  028E                     	;# 
  2448  0291                     	;# 
  2449  0291                     	;# 
  2450  0292                     	;# 
  2451  0293                     	;# 
  2452  0294                     	;# 
  2453  0295                     	;# 
  2454  0295                     	;# 
  2455  0296                     	;# 
  2456  0297                     	;# 
  2457  0298                     	;# 
  2458  029F                     	;# 
  2459  030C                     	;# 
  2460  030D                     	;# 
  2461  030E                     	;# 
  2462  0311                     	;# 
  2463  0311                     	;# 
  2464  0312                     	;# 
  2465  0313                     	;# 
  2466  0314                     	;# 
  2467  0315                     	;# 
  2468  0315                     	;# 
  2469  0316                     	;# 
  2470  0317                     	;# 
  2471  0318                     	;# 
  2472  038C                     	;# 
  2473  038D                     	;# 
  2474  038E                     	;# 
  2475  0391                     	;# 
  2476  0392                     	;# 
  2477  0393                     	;# 
  2478  0394                     	;# 
  2479  0395                     	;# 
  2480  0396                     	;# 
  2481  0397                     	;# 
  2482  0398                     	;# 
  2483  0399                     	;# 
  2484  039A                     	;# 
  2485  039C                     	;# 
  2486  039D                     	;# 
  2487  039E                     	;# 
  2488  039F                     	;# 
  2489  0411                     	;# 
  2490  0411                     	;# 
  2491  0412                     	;# 
  2492  0413                     	;# 
  2493  0414                     	;# 
  2494  0415                     	;# 
  2495  0416                     	;# 
  2496  0417                     	;# 
  2497  0418                     	;# 
  2498  0418                     	;# 
  2499  0419                     	;# 
  2500  041A                     	;# 
  2501  041B                     	;# 
  2502  041C                     	;# 
  2503  041D                     	;# 
  2504  041E                     	;# 
  2505  041F                     	;# 
  2506  0498                     	;# 
  2507  0498                     	;# 
  2508  0499                     	;# 
  2509  049A                     	;# 
  2510  049B                     	;# 
  2511  049B                     	;# 
  2512  049C                     	;# 
  2513  049D                     	;# 
  2514  049E                     	;# 
  2515  049F                     	;# 
  2516  0617                     	;# 
  2517  0618                     	;# 
  2518  0619                     	;# 
  2519  0619                     	;# 
  2520  061A                     	;# 
  2521  061B                     	;# 
  2522  061C                     	;# 
  2523  061C                     	;# 
  2524  061F                     	;# 
  2525  0691                     	;# 
  2526  0692                     	;# 
  2527  0693                     	;# 
  2528  0694                     	;# 
  2529  0695                     	;# 
  2530  0696                     	;# 
  2531  0697                     	;# 
  2532  0698                     	;# 
  2533  0699                     	;# 
  2534  0711                     	;# 
  2535  0712                     	;# 
  2536  0713                     	;# 
  2537  0714                     	;# 
  2538  0715                     	;# 
  2539  0716                     	;# 
  2540  0717                     	;# 
  2541  0718                     	;# 
  2542  0719                     	;# 
  2543  0891                     	;# 
  2544  0891                     	;# 
  2545  0891                     	;# 
  2546  0891                     	;# 
  2547  0891                     	;# 
  2548  0891                     	;# 
  2549  0892                     	;# 
  2550  0892                     	;# 
  2551  0892                     	;# 
  2552  0893                     	;# 
  2553  0893                     	;# 
  2554  0893                     	;# 
  2555  0893                     	;# 
  2556  0893                     	;# 
  2557  0893                     	;# 
  2558  0894                     	;# 
  2559  0894                     	;# 
  2560  0894                     	;# 
  2561  0895                     	;# 
  2562  0895                     	;# 
  2563  0895                     	;# 
  2564  0896                     	;# 
  2565  0896                     	;# 
  2566  0896                     	;# 
  2567  089B                     	;# 
  2568  0911                     	;# 
  2569  0912                     	;# 
  2570  0913                     	;# 
  2571  0914                     	;# 
  2572  0915                     	;# 
  2573  0916                     	;# 
  2574  0918                     	;# 
  2575  0919                     	;# 
  2576  091A                     	;# 
  2577  091B                     	;# 
  2578  091C                     	;# 
  2579  091D                     	;# 
  2580  091E                     	;# 
  2581  091F                     	;# 
  2582  0E0F                     	;# 
  2583  0E10                     	;# 
  2584  0E11                     	;# 
  2585  0E12                     	;# 
  2586  0E13                     	;# 
  2587  0E14                     	;# 
  2588  0E15                     	;# 
  2589  0E16                     	;# 
  2590  0E17                     	;# 
  2591  0E18                     	;# 
  2592  0E19                     	;# 
  2593  0E1A                     	;# 
  2594  0E1B                     	;# 
  2595  0E1C                     	;# 
  2596  0E1D                     	;# 
  2597  0E1E                     	;# 
  2598  0E1F                     	;# 
  2599  0E20                     	;# 
  2600  0E21                     	;# 
  2601  0E22                     	;# 
  2602  0E24                     	;# 
  2603  0E25                     	;# 
  2604  0E28                     	;# 
  2605  0E29                     	;# 
  2606  0E2A                     	;# 
  2607  0E2B                     	;# 
  2608  0E2C                     	;# 
  2609  0E2D                     	;# 
  2610  0E2E                     	;# 
  2611  0E2F                     	;# 
  2612  0E90                     	;# 
  2613  0E91                     	;# 
  2614  0E92                     	;# 
  2615  0E94                     	;# 
  2616  0E95                     	;# 
  2617  0E9C                     	;# 
  2618  0E9D                     	;# 
  2619  0E9E                     	;# 
  2620  0E9F                     	;# 
  2621  0EA0                     	;# 
  2622  0EA1                     	;# 
  2623  0EA2                     	;# 
  2624  0EA3                     	;# 
  2625  0EA4                     	;# 
  2626  0EA5                     	;# 
  2627  0EA6                     	;# 
  2628  0EA7                     	;# 
  2629  0F0F                     	;# 
  2630  0F10                     	;# 
  2631  0F11                     	;# 
  2632  0F12                     	;# 
  2633  0F13                     	;# 
  2634  0F14                     	;# 
  2635  0F15                     	;# 
  2636  0F16                     	;# 
  2637  0F17                     	;# 
  2638  0F18                     	;# 
  2639  0F19                     	;# 
  2640  0F1A                     	;# 
  2641  0F1B                     	;# 
  2642  0F1C                     	;# 
  2643  0F1D                     	;# 
  2644  0F1E                     	;# 
  2645  0F1F                     	;# 
  2646  0F20                     	;# 
  2647  0F21                     	;# 
  2648  0F22                     	;# 
  2649  0F23                     	;# 
  2650  0F24                     	;# 
  2651  0F25                     	;# 
  2652  0F26                     	;# 
  2653  0F27                     	;# 
  2654  0F28                     	;# 
  2655  0F29                     	;# 
  2656  0F2A                     	;# 
  2657  0F2B                     	;# 
  2658  0F2C                     	;# 
  2659  0F2D                     	;# 
  2660  0F2E                     	;# 
  2661  0F2F                     	;# 
  2662  0F30                     	;# 
  2663  0F31                     	;# 
  2664  0F32                     	;# 
  2665  0F33                     	;# 
  2666  0F34                     	;# 
  2667  0F35                     	;# 
  2668  0F36                     	;# 
  2669  0F37                     	;# 
  2670  0FE4                     	;# 
  2671  0FE5                     	;# 
  2672  0FE6                     	;# 
  2673  0FE7                     	;# 
  2674  0FE8                     	;# 
  2675  0FE9                     	;# 
  2676  0FEA                     	;# 
  2677  0FEB                     	;# 
  2678  0FED                     	;# 
  2679  0FEE                     	;# 
  2680  0FEF                     	;# 
  2681  0000                     	;# 
  2682  0001                     	;# 
  2683  0002                     	;# 
  2684  0003                     	;# 
  2685  0004                     	;# 
  2686  0005                     	;# 
  2687  0006                     	;# 
  2688  0007                     	;# 
  2689  0008                     	;# 
  2690  0009                     	;# 
  2691  000A                     	;# 
  2692  000B                     	;# 
  2693  000C                     	;# 
  2694  000D                     	;# 
  2695  000E                     	;# 
  2696  0010                     	;# 
  2697  0011                     	;# 
  2698  0012                     	;# 
  2699  0013                     	;# 
  2700  0014                     	;# 
  2701  0015                     	;# 
  2702  0015                     	;# 
  2703  0016                     	;# 
  2704  0016                     	;# 
  2705  0017                     	;# 
  2706  0018                     	;# 
  2707  0019                     	;# 
  2708  0019                     	;# 
  2709  001A                     	;# 
  2710  001B                     	;# 
  2711  001C                     	;# 
  2712  001D                     	;# 
  2713  001E                     	;# 
  2714  001F                     	;# 
  2715  008C                     	;# 
  2716  008D                     	;# 
  2717  008E                     	;# 
  2718  0090                     	;# 
  2719  0091                     	;# 
  2720  0092                     	;# 
  2721  0093                     	;# 
  2722  0094                     	;# 
  2723  0097                     	;# 
  2724  009B                     	;# 
  2725  009B                     	;# 
  2726  009C                     	;# 
  2727  009D                     	;# 
  2728  009E                     	;# 
  2729  009F                     	;# 
  2730  010C                     	;# 
  2731  010D                     	;# 
  2732  010E                     	;# 
  2733  0111                     	;# 
  2734  0112                     	;# 
  2735  0113                     	;# 
  2736  0114                     	;# 
  2737  0115                     	;# 
  2738  0116                     	;# 
  2739  0117                     	;# 
  2740  0118                     	;# 
  2741  0119                     	;# 
  2742  018C                     	;# 
  2743  018D                     	;# 
  2744  018E                     	;# 
  2745  0197                     	;# 
  2746  0199                     	;# 
  2747  0199                     	;# 
  2748  0199                     	;# 
  2749  019A                     	;# 
  2750  019A                     	;# 
  2751  019A                     	;# 
  2752  019B                     	;# 
  2753  019B                     	;# 
  2754  019B                     	;# 
  2755  019B                     	;# 
  2756  019B                     	;# 
  2757  019C                     	;# 
  2758  019C                     	;# 
  2759  019C                     	;# 
  2760  019D                     	;# 
  2761  019D                     	;# 
  2762  019D                     	;# 
  2763  019E                     	;# 
  2764  019E                     	;# 
  2765  019E                     	;# 
  2766  019F                     	;# 
  2767  019F                     	;# 
  2768  019F                     	;# 
  2769  019F                     	;# 
  2770  019F                     	;# 
  2771  020C                     	;# 
  2772  020D                     	;# 
  2773  020E                     	;# 
  2774  0211                     	;# 
  2775  0211                     	;# 
  2776  0212                     	;# 
  2777  0212                     	;# 
  2778  0213                     	;# 
  2779  0213                     	;# 
  2780  0214                     	;# 
  2781  0214                     	;# 
  2782  0215                     	;# 
  2783  0215                     	;# 
  2784  0215                     	;# 
  2785  0215                     	;# 
  2786  0216                     	;# 
  2787  0216                     	;# 
  2788  0217                     	;# 
  2789  0217                     	;# 
  2790  0219                     	;# 
  2791  021A                     	;# 
  2792  021B                     	;# 
  2793  021C                     	;# 
  2794  021D                     	;# 
  2795  021D                     	;# 
  2796  021E                     	;# 
  2797  021F                     	;# 
  2798  028C                     	;# 
  2799  028D                     	;# 
  2800  028E                     	;# 
  2801  0291                     	;# 
  2802  0291                     	;# 
  2803  0292                     	;# 
  2804  0293                     	;# 
  2805  0294                     	;# 
  2806  0295                     	;# 
  2807  0295                     	;# 
  2808  0296                     	;# 
  2809  0297                     	;# 
  2810  0298                     	;# 
  2811  029F                     	;# 
  2812  030C                     	;# 
  2813  030D                     	;# 
  2814  030E                     	;# 
  2815  0311                     	;# 
  2816  0311                     	;# 
  2817  0312                     	;# 
  2818  0313                     	;# 
  2819  0314                     	;# 
  2820  0315                     	;# 
  2821  0315                     	;# 
  2822  0316                     	;# 
  2823  0317                     	;# 
  2824  0318                     	;# 
  2825  038C                     	;# 
  2826  038D                     	;# 
  2827  038E                     	;# 
  2828  0391                     	;# 
  2829  0392                     	;# 
  2830  0393                     	;# 
  2831  0394                     	;# 
  2832  0395                     	;# 
  2833  0396                     	;# 
  2834  0397                     	;# 
  2835  0398                     	;# 
  2836  0399                     	;# 
  2837  039A                     	;# 
  2838  039C                     	;# 
  2839  039D                     	;# 
  2840  039E                     	;# 
  2841  039F                     	;# 
  2842  0411                     	;# 
  2843  0411                     	;# 
  2844  0412                     	;# 
  2845  0413                     	;# 
  2846  0414                     	;# 
  2847  0415                     	;# 
  2848  0416                     	;# 
  2849  0417                     	;# 
  2850  0418                     	;# 
  2851  0418                     	;# 
  2852  0419                     	;# 
  2853  041A                     	;# 
  2854  041B                     	;# 
  2855  041C                     	;# 
  2856  041D                     	;# 
  2857  041E                     	;# 
  2858  041F                     	;# 
  2859  0498                     	;# 
  2860  0498                     	;# 
  2861  0499                     	;# 
  2862  049A                     	;# 
  2863  049B                     	;# 
  2864  049B                     	;# 
  2865  049C                     	;# 
  2866  049D                     	;# 
  2867  049E                     	;# 
  2868  049F                     	;# 
  2869  0617                     	;# 
  2870  0618                     	;# 
  2871  0619                     	;# 
  2872  0619                     	;# 
  2873  061A                     	;# 
  2874  061B                     	;# 
  2875  061C                     	;# 
  2876  061C                     	;# 
  2877  061F                     	;# 
  2878  0691                     	;# 
  2879  0692                     	;# 
  2880  0693                     	;# 
  2881  0694                     	;# 
  2882  0695                     	;# 
  2883  0696                     	;# 
  2884  0697                     	;# 
  2885  0698                     	;# 
  2886  0699                     	;# 
  2887  0711                     	;# 
  2888  0712                     	;# 
  2889  0713                     	;# 
  2890  0714                     	;# 
  2891  0715                     	;# 
  2892  0716                     	;# 
  2893  0717                     	;# 
  2894  0718                     	;# 
  2895  0719                     	;# 
  2896  0891                     	;# 
  2897  0891                     	;# 
  2898  0891                     	;# 
  2899  0891                     	;# 
  2900  0891                     	;# 
  2901  0891                     	;# 
  2902  0892                     	;# 
  2903  0892                     	;# 
  2904  0892                     	;# 
  2905  0893                     	;# 
  2906  0893                     	;# 
  2907  0893                     	;# 
  2908  0893                     	;# 
  2909  0893                     	;# 
  2910  0893                     	;# 
  2911  0894                     	;# 
  2912  0894                     	;# 
  2913  0894                     	;# 
  2914  0895                     	;# 
  2915  0895                     	;# 
  2916  0895                     	;# 
  2917  0896                     	;# 
  2918  0896                     	;# 
  2919  0896                     	;# 
  2920  089B                     	;# 
  2921  0911                     	;# 
  2922  0912                     	;# 
  2923  0913                     	;# 
  2924  0914                     	;# 
  2925  0915                     	;# 
  2926  0916                     	;# 
  2927  0918                     	;# 
  2928  0919                     	;# 
  2929  091A                     	;# 
  2930  091B                     	;# 
  2931  091C                     	;# 
  2932  091D                     	;# 
  2933  091E                     	;# 
  2934  091F                     	;# 
  2935  0E0F                     	;# 
  2936  0E10                     	;# 
  2937  0E11                     	;# 
  2938  0E12                     	;# 
  2939  0E13                     	;# 
  2940  0E14                     	;# 
  2941  0E15                     	;# 
  2942  0E16                     	;# 
  2943  0E17                     	;# 
  2944  0E18                     	;# 
  2945  0E19                     	;# 
  2946  0E1A                     	;# 
  2947  0E1B                     	;# 
  2948  0E1C                     	;# 
  2949  0E1D                     	;# 
  2950  0E1E                     	;# 
  2951  0E1F                     	;# 
  2952  0E20                     	;# 
  2953  0E21                     	;# 
  2954  0E22                     	;# 
  2955  0E24                     	;# 
  2956  0E25                     	;# 
  2957  0E28                     	;# 
  2958  0E29                     	;# 
  2959  0E2A                     	;# 
  2960  0E2B                     	;# 
  2961  0E2C                     	;# 
  2962  0E2D                     	;# 
  2963  0E2E                     	;# 
  2964  0E2F                     	;# 
  2965  0E90                     	;# 
  2966  0E91                     	;# 
  2967  0E92                     	;# 
  2968  0E94                     	;# 
  2969  0E95                     	;# 
  2970  0E9C                     	;# 
  2971  0E9D                     	;# 
  2972  0E9E                     	;# 
  2973  0E9F                     	;# 
  2974  0EA0                     	;# 
  2975  0EA1                     	;# 
  2976  0EA2                     	;# 
  2977  0EA3                     	;# 
  2978  0EA4                     	;# 
  2979  0EA5                     	;# 
  2980  0EA6                     	;# 
  2981  0EA7                     	;# 
  2982  0F0F                     	;# 
  2983  0F10                     	;# 
  2984  0F11                     	;# 
  2985  0F12                     	;# 
  2986  0F13                     	;# 
  2987  0F14                     	;# 
  2988  0F15                     	;# 
  2989  0F16                     	;# 
  2990  0F17                     	;# 
  2991  0F18                     	;# 
  2992  0F19                     	;# 
  2993  0F1A                     	;# 
  2994  0F1B                     	;# 
  2995  0F1C                     	;# 
  2996  0F1D                     	;# 
  2997  0F1E                     	;# 
  2998  0F1F                     	;# 
  2999  0F20                     	;# 
  3000  0F21                     	;# 
  3001  0F22                     	;# 
  3002  0F23                     	;# 
  3003  0F24                     	;# 
  3004  0F25                     	;# 
  3005  0F26                     	;# 
  3006  0F27                     	;# 
  3007  0F28                     	;# 
  3008  0F29                     	;# 
  3009  0F2A                     	;# 
  3010  0F2B                     	;# 
  3011  0F2C                     	;# 
  3012  0F2D                     	;# 
  3013  0F2E                     	;# 
  3014  0F2F                     	;# 
  3015  0F30                     	;# 
  3016  0F31                     	;# 
  3017  0F32                     	;# 
  3018  0F33                     	;# 
  3019  0F34                     	;# 
  3020  0F35                     	;# 
  3021  0F36                     	;# 
  3022  0F37                     	;# 
  3023  0FE4                     	;# 
  3024  0FE5                     	;# 
  3025  0FE6                     	;# 
  3026  0FE7                     	;# 
  3027  0FE8                     	;# 
  3028  0FE9                     	;# 
  3029  0FEA                     	;# 
  3030  0FEB                     	;# 
  3031  0FED                     	;# 
  3032  0FEE                     	;# 
  3033  0FEF                     	;# 
  3034  0000                     	;# 
  3035  0001                     	;# 
  3036  0002                     	;# 
  3037  0003                     	;# 
  3038  0004                     	;# 
  3039  0005                     	;# 
  3040  0006                     	;# 
  3041  0007                     	;# 
  3042  0008                     	;# 
  3043  0009                     	;# 
  3044  000A                     	;# 
  3045  000B                     	;# 
  3046  000C                     	;# 
  3047  000D                     	;# 
  3048  000E                     	;# 
  3049  0010                     	;# 
  3050  0011                     	;# 
  3051  0012                     	;# 
  3052  0013                     	;# 
  3053  0014                     	;# 
  3054  0015                     	;# 
  3055  0015                     	;# 
  3056  0016                     	;# 
  3057  0016                     	;# 
  3058  0017                     	;# 
  3059  0018                     	;# 
  3060  0019                     	;# 
  3061  0019                     	;# 
  3062  001A                     	;# 
  3063  001B                     	;# 
  3064  001C                     	;# 
  3065  001D                     	;# 
  3066  001E                     	;# 
  3067  001F                     	;# 
  3068  008C                     	;# 
  3069  008D                     	;# 
  3070  008E                     	;# 
  3071  0090                     	;# 
  3072  0091                     	;# 
  3073  0092                     	;# 
  3074  0093                     	;# 
  3075  0094                     	;# 
  3076  0097                     	;# 
  3077  009B                     	;# 
  3078  009B                     	;# 
  3079  009C                     	;# 
  3080  009D                     	;# 
  3081  009E                     	;# 
  3082  009F                     	;# 
  3083  010C                     	;# 
  3084  010D                     	;# 
  3085  010E                     	;# 
  3086  0111                     	;# 
  3087  0112                     	;# 
  3088  0113                     	;# 
  3089  0114                     	;# 
  3090  0115                     	;# 
  3091  0116                     	;# 
  3092  0117                     	;# 
  3093  0118                     	;# 
  3094  0119                     	;# 
  3095  018C                     	;# 
  3096  018D                     	;# 
  3097  018E                     	;# 
  3098  0197                     	;# 
  3099  0199                     	;# 
  3100  0199                     	;# 
  3101  0199                     	;# 
  3102  019A                     	;# 
  3103  019A                     	;# 
  3104  019A                     	;# 
  3105  019B                     	;# 
  3106  019B                     	;# 
  3107  019B                     	;# 
  3108  019B                     	;# 
  3109  019B                     	;# 
  3110  019C                     	;# 
  3111  019C                     	;# 
  3112  019C                     	;# 
  3113  019D                     	;# 
  3114  019D                     	;# 
  3115  019D                     	;# 
  3116  019E                     	;# 
  3117  019E                     	;# 
  3118  019E                     	;# 
  3119  019F                     	;# 
  3120  019F                     	;# 
  3121  019F                     	;# 
  3122  019F                     	;# 
  3123  019F                     	;# 
  3124  020C                     	;# 
  3125  020D                     	;# 
  3126  020E                     	;# 
  3127  0211                     	;# 
  3128  0211                     	;# 
  3129  0212                     	;# 
  3130  0212                     	;# 
  3131  0213                     	;# 
  3132  0213                     	;# 
  3133  0214                     	;# 
  3134  0214                     	;# 
  3135  0215                     	;# 
  3136  0215                     	;# 
  3137  0215                     	;# 
  3138  0215                     	;# 
  3139  0216                     	;# 
  3140  0216                     	;# 
  3141  0217                     	;# 
  3142  0217                     	;# 
  3143  0219                     	;# 
  3144  021A                     	;# 
  3145  021B                     	;# 
  3146  021C                     	;# 
  3147  021D                     	;# 
  3148  021D                     	;# 
  3149  021E                     	;# 
  3150  021F                     	;# 
  3151  028C                     	;# 
  3152  028D                     	;# 
  3153  028E                     	;# 
  3154  0291                     	;# 
  3155  0291                     	;# 
  3156  0292                     	;# 
  3157  0293                     	;# 
  3158  0294                     	;# 
  3159  0295                     	;# 
  3160  0295                     	;# 
  3161  0296                     	;# 
  3162  0297                     	;# 
  3163  0298                     	;# 
  3164  029F                     	;# 
  3165  030C                     	;# 
  3166  030D                     	;# 
  3167  030E                     	;# 
  3168  0311                     	;# 
  3169  0311                     	;# 
  3170  0312                     	;# 
  3171  0313                     	;# 
  3172  0314                     	;# 
  3173  0315                     	;# 
  3174  0315                     	;# 
  3175  0316                     	;# 
  3176  0317                     	;# 
  3177  0318                     	;# 
  3178  038C                     	;# 
  3179  038D                     	;# 
  3180  038E                     	;# 
  3181  0391                     	;# 
  3182  0392                     	;# 
  3183  0393                     	;# 
  3184  0394                     	;# 
  3185  0395                     	;# 
  3186  0396                     	;# 
  3187  0397                     	;# 
  3188  0398                     	;# 
  3189  0399                     	;# 
  3190  039A                     	;# 
  3191  039C                     	;# 
  3192  039D                     	;# 
  3193  039E                     	;# 
  3194  039F                     	;# 
  3195  0411                     	;# 
  3196  0411                     	;# 
  3197  0412                     	;# 
  3198  0413                     	;# 
  3199  0414                     	;# 
  3200  0415                     	;# 
  3201  0416                     	;# 
  3202  0417                     	;# 
  3203  0418                     	;# 
  3204  0418                     	;# 
  3205  0419                     	;# 
  3206  041A                     	;# 
  3207  041B                     	;# 
  3208  041C                     	;# 
  3209  041D                     	;# 
  3210  041E                     	;# 
  3211  041F                     	;# 
  3212  0498                     	;# 
  3213  0498                     	;# 
  3214  0499                     	;# 
  3215  049A                     	;# 
  3216  049B                     	;# 
  3217  049B                     	;# 
  3218  049C                     	;# 
  3219  049D                     	;# 
  3220  049E                     	;# 
  3221  049F                     	;# 
  3222  0617                     	;# 
  3223  0618                     	;# 
  3224  0619                     	;# 
  3225  0619                     	;# 
  3226  061A                     	;# 
  3227  061B                     	;# 
  3228  061C                     	;# 
  3229  061C                     	;# 
  3230  061F                     	;# 
  3231  0691                     	;# 
  3232  0692                     	;# 
  3233  0693                     	;# 
  3234  0694                     	;# 
  3235  0695                     	;# 
  3236  0696                     	;# 
  3237  0697                     	;# 
  3238  0698                     	;# 
  3239  0699                     	;# 
  3240  0711                     	;# 
  3241  0712                     	;# 
  3242  0713                     	;# 
  3243  0714                     	;# 
  3244  0715                     	;# 
  3245  0716                     	;# 
  3246  0717                     	;# 
  3247  0718                     	;# 
  3248  0719                     	;# 
  3249  0891                     	;# 
  3250  0891                     	;# 
  3251  0891                     	;# 
  3252  0891                     	;# 
  3253  0891                     	;# 
  3254  0891                     	;# 
  3255  0892                     	;# 
  3256  0892                     	;# 
  3257  0892                     	;# 
  3258  0893                     	;# 
  3259  0893                     	;# 
  3260  0893                     	;# 
  3261  0893                     	;# 
  3262  0893                     	;# 
  3263  0893                     	;# 
  3264  0894                     	;# 
  3265  0894                     	;# 
  3266  0894                     	;# 
  3267  0895                     	;# 
  3268  0895                     	;# 
  3269  0895                     	;# 
  3270  0896                     	;# 
  3271  0896                     	;# 
  3272  0896                     	;# 
  3273  089B                     	;# 
  3274  0911                     	;# 
  3275  0912                     	;# 
  3276  0913                     	;# 
  3277  0914                     	;# 
  3278  0915                     	;# 
  3279  0916                     	;# 
  3280  0918                     	;# 
  3281  0919                     	;# 
  3282  091A                     	;# 
  3283  091B                     	;# 
  3284  091C                     	;# 
  3285  091D                     	;# 
  3286  091E                     	;# 
  3287  091F                     	;# 
  3288  0E0F                     	;# 
  3289  0E10                     	;# 
  3290  0E11                     	;# 
  3291  0E12                     	;# 
  3292  0E13                     	;# 
  3293  0E14                     	;# 
  3294  0E15                     	;# 
  3295  0E16                     	;# 
  3296  0E17                     	;# 
  3297  0E18                     	;# 
  3298  0E19                     	;# 
  3299  0E1A                     	;# 
  3300  0E1B                     	;# 
  3301  0E1C                     	;# 
  3302  0E1D                     	;# 
  3303  0E1E                     	;# 
  3304  0E1F                     	;# 
  3305  0E20                     	;# 
  3306  0E21                     	;# 
  3307  0E22                     	;# 
  3308  0E24                     	;# 
  3309  0E25                     	;# 
  3310  0E28                     	;# 
  3311  0E29                     	;# 
  3312  0E2A                     	;# 
  3313  0E2B                     	;# 
  3314  0E2C                     	;# 
  3315  0E2D                     	;# 
  3316  0E2E                     	;# 
  3317  0E2F                     	;# 
  3318  0E90                     	;# 
  3319  0E91                     	;# 
  3320  0E92                     	;# 
  3321  0E94                     	;# 
  3322  0E95                     	;# 
  3323  0E9C                     	;# 
  3324  0E9D                     	;# 
  3325  0E9E                     	;# 
  3326  0E9F                     	;# 
  3327  0EA0                     	;# 
  3328  0EA1                     	;# 
  3329  0EA2                     	;# 
  3330  0EA3                     	;# 
  3331  0EA4                     	;# 
  3332  0EA5                     	;# 
  3333  0EA6                     	;# 
  3334  0EA7                     	;# 
  3335  0F0F                     	;# 
  3336  0F10                     	;# 
  3337  0F11                     	;# 
  3338  0F12                     	;# 
  3339  0F13                     	;# 
  3340  0F14                     	;# 
  3341  0F15                     	;# 
  3342  0F16                     	;# 
  3343  0F17                     	;# 
  3344  0F18                     	;# 
  3345  0F19                     	;# 
  3346  0F1A                     	;# 
  3347  0F1B                     	;# 
  3348  0F1C                     	;# 
  3349  0F1D                     	;# 
  3350  0F1E                     	;# 
  3351  0F1F                     	;# 
  3352  0F20                     	;# 
  3353  0F21                     	;# 
  3354  0F22                     	;# 
  3355  0F23                     	;# 
  3356  0F24                     	;# 
  3357  0F25                     	;# 
  3358  0F26                     	;# 
  3359  0F27                     	;# 
  3360  0F28                     	;# 
  3361  0F29                     	;# 
  3362  0F2A                     	;# 
  3363  0F2B                     	;# 
  3364  0F2C                     	;# 
  3365  0F2D                     	;# 
  3366  0F2E                     	;# 
  3367  0F2F                     	;# 
  3368  0F30                     	;# 
  3369  0F31                     	;# 
  3370  0F32                     	;# 
  3371  0F33                     	;# 
  3372  0F34                     	;# 
  3373  0F35                     	;# 
  3374  0F36                     	;# 
  3375  0F37                     	;# 
  3376  0FE4                     	;# 
  3377  0FE5                     	;# 
  3378  0FE6                     	;# 
  3379  0FE7                     	;# 
  3380  0FE8                     	;# 
  3381  0FE9                     	;# 
  3382  0FEA                     	;# 
  3383  0FEB                     	;# 
  3384  0FED                     	;# 
  3385  0FEE                     	;# 
  3386  0FEF                     	;# 
  3387  0000                     	;# 
  3388  0001                     	;# 
  3389  0002                     	;# 
  3390  0003                     	;# 
  3391  0004                     	;# 
  3392  0005                     	;# 
  3393  0006                     	;# 
  3394  0007                     	;# 
  3395  0008                     	;# 
  3396  0009                     	;# 
  3397  000A                     	;# 
  3398  000B                     	;# 
  3399  000C                     	;# 
  3400  000D                     	;# 
  3401  000E                     	;# 
  3402  0010                     	;# 
  3403  0011                     	;# 
  3404  0012                     	;# 
  3405  0013                     	;# 
  3406  0014                     	;# 
  3407  0015                     	;# 
  3408  0015                     	;# 
  3409  0016                     	;# 
  3410  0016                     	;# 
  3411  0017                     	;# 
  3412  0018                     	;# 
  3413  0019                     	;# 
  3414  0019                     	;# 
  3415  001A                     	;# 
  3416  001B                     	;# 
  3417  001C                     	;# 
  3418  001D                     	;# 
  3419  001E                     	;# 
  3420  001F                     	;# 
  3421  008C                     	;# 
  3422  008D                     	;# 
  3423  008E                     	;# 
  3424  0090                     	;# 
  3425  0091                     	;# 
  3426  0092                     	;# 
  3427  0093                     	;# 
  3428  0094                     	;# 
  3429  0097                     	;# 
  3430  009B                     	;# 
  3431  009B                     	;# 
  3432  009C                     	;# 
  3433  009D                     	;# 
  3434  009E                     	;# 
  3435  009F                     	;# 
  3436  010C                     	;# 
  3437  010D                     	;# 
  3438  010E                     	;# 
  3439  0111                     	;# 
  3440  0112                     	;# 
  3441  0113                     	;# 
  3442  0114                     	;# 
  3443  0115                     	;# 
  3444  0116                     	;# 
  3445  0117                     	;# 
  3446  0118                     	;# 
  3447  0119                     	;# 
  3448  018C                     	;# 
  3449  018D                     	;# 
  3450  018E                     	;# 
  3451  0197                     	;# 
  3452  0199                     	;# 
  3453  0199                     	;# 
  3454  0199                     	;# 
  3455  019A                     	;# 
  3456  019A                     	;# 
  3457  019A                     	;# 
  3458  019B                     	;# 
  3459  019B                     	;# 
  3460  019B                     	;# 
  3461  019B                     	;# 
  3462  019B                     	;# 
  3463  019C                     	;# 
  3464  019C                     	;# 
  3465  019C                     	;# 
  3466  019D                     	;# 
  3467  019D                     	;# 
  3468  019D                     	;# 
  3469  019E                     	;# 
  3470  019E                     	;# 
  3471  019E                     	;# 
  3472  019F                     	;# 
  3473  019F                     	;# 
  3474  019F                     	;# 
  3475  019F                     	;# 
  3476  019F                     	;# 
  3477  020C                     	;# 
  3478  020D                     	;# 
  3479  020E                     	;# 
  3480  0211                     	;# 
  3481  0211                     	;# 
  3482  0212                     	;# 
  3483  0212                     	;# 
  3484  0213                     	;# 
  3485  0213                     	;# 
  3486  0214                     	;# 
  3487  0214                     	;# 
  3488  0215                     	;# 
  3489  0215                     	;# 
  3490  0215                     	;# 
  3491  0215                     	;# 
  3492  0216                     	;# 
  3493  0216                     	;# 
  3494  0217                     	;# 
  3495  0217                     	;# 
  3496  0219                     	;# 
  3497  021A                     	;# 
  3498  021B                     	;# 
  3499  021C                     	;# 
  3500  021D                     	;# 
  3501  021D                     	;# 
  3502  021E                     	;# 
  3503  021F                     	;# 
  3504  028C                     	;# 
  3505  028D                     	;# 
  3506  028E                     	;# 
  3507  0291                     	;# 
  3508  0291                     	;# 
  3509  0292                     	;# 
  3510  0293                     	;# 
  3511  0294                     	;# 
  3512  0295                     	;# 
  3513  0295                     	;# 
  3514  0296                     	;# 
  3515  0297                     	;# 
  3516  0298                     	;# 
  3517  029F                     	;# 
  3518  030C                     	;# 
  3519  030D                     	;# 
  3520  030E                     	;# 
  3521  0311                     	;# 
  3522  0311                     	;# 
  3523  0312                     	;# 
  3524  0313                     	;# 
  3525  0314                     	;# 
  3526  0315                     	;# 
  3527  0315                     	;# 
  3528  0316                     	;# 
  3529  0317                     	;# 
  3530  0318                     	;# 
  3531  038C                     	;# 
  3532  038D                     	;# 
  3533  038E                     	;# 
  3534  0391                     	;# 
  3535  0392                     	;# 
  3536  0393                     	;# 
  3537  0394                     	;# 
  3538  0395                     	;# 
  3539  0396                     	;# 
  3540  0397                     	;# 
  3541  0398                     	;# 
  3542  0399                     	;# 
  3543  039A                     	;# 
  3544  039C                     	;# 
  3545  039D                     	;# 
  3546  039E                     	;# 
  3547  039F                     	;# 
  3548  0411                     	;# 
  3549  0411                     	;# 
  3550  0412                     	;# 
  3551  0413                     	;# 
  3552  0414                     	;# 
  3553  0415                     	;# 
  3554  0416                     	;# 
  3555  0417                     	;# 
  3556  0418                     	;# 
  3557  0418                     	;# 
  3558  0419                     	;# 
  3559  041A                     	;# 
  3560  041B                     	;# 
  3561  041C                     	;# 
  3562  041D                     	;# 
  3563  041E                     	;# 
  3564  041F                     	;# 
  3565  0498                     	;# 
  3566  0498                     	;# 
  3567  0499                     	;# 
  3568  049A                     	;# 
  3569  049B                     	;# 
  3570  049B                     	;# 
  3571  049C                     	;# 
  3572  049D                     	;# 
  3573  049E                     	;# 
  3574  049F                     	;# 
  3575  0617                     	;# 
  3576  0618                     	;# 
  3577  0619                     	;# 
  3578  0619                     	;# 
  3579  061A                     	;# 
  3580  061B                     	;# 
  3581  061C                     	;# 
  3582  061C                     	;# 
  3583  061F                     	;# 
  3584  0691                     	;# 
  3585  0692                     	;# 
  3586  0693                     	;# 
  3587  0694                     	;# 
  3588  0695                     	;# 
  3589  0696                     	;# 
  3590  0697                     	;# 
  3591  0698                     	;# 
  3592  0699                     	;# 
  3593  0711                     	;# 
  3594  0712                     	;# 
  3595  0713                     	;# 
  3596  0714                     	;# 
  3597  0715                     	;# 
  3598  0716                     	;# 
  3599  0717                     	;# 
  3600  0718                     	;# 
  3601  0719                     	;# 
  3602  0891                     	;# 
  3603  0891                     	;# 
  3604  0891                     	;# 
  3605  0891                     	;# 
  3606  0891                     	;# 
  3607  0891                     	;# 
  3608  0892                     	;# 
  3609  0892                     	;# 
  3610  0892                     	;# 
  3611  0893                     	;# 
  3612  0893                     	;# 
  3613  0893                     	;# 
  3614  0893                     	;# 
  3615  0893                     	;# 
  3616  0893                     	;# 
  3617  0894                     	;# 
  3618  0894                     	;# 
  3619  0894                     	;# 
  3620  0895                     	;# 
  3621  0895                     	;# 
  3622  0895                     	;# 
  3623  0896                     	;# 
  3624  0896                     	;# 
  3625  0896                     	;# 
  3626  089B                     	;# 
  3627  0911                     	;# 
  3628  0912                     	;# 
  3629  0913                     	;# 
  3630  0914                     	;# 
  3631  0915                     	;# 
  3632  0916                     	;# 
  3633  0918                     	;# 
  3634  0919                     	;# 
  3635  091A                     	;# 
  3636  091B                     	;# 
  3637  091C                     	;# 
  3638  091D                     	;# 
  3639  091E                     	;# 
  3640  091F                     	;# 
  3641  0E0F                     	;# 
  3642  0E10                     	;# 
  3643  0E11                     	;# 
  3644  0E12                     	;# 
  3645  0E13                     	;# 
  3646  0E14                     	;# 
  3647  0E15                     	;# 
  3648  0E16                     	;# 
  3649  0E17                     	;# 
  3650  0E18                     	;# 
  3651  0E19                     	;# 
  3652  0E1A                     	;# 
  3653  0E1B                     	;# 
  3654  0E1C                     	;# 
  3655  0E1D                     	;# 
  3656  0E1E                     	;# 
  3657  0E1F                     	;# 
  3658  0E20                     	;# 
  3659  0E21                     	;# 
  3660  0E22                     	;# 
  3661  0E24                     	;# 
  3662  0E25                     	;# 
  3663  0E28                     	;# 
  3664  0E29                     	;# 
  3665  0E2A                     	;# 
  3666  0E2B                     	;# 
  3667  0E2C                     	;# 
  3668  0E2D                     	;# 
  3669  0E2E                     	;# 
  3670  0E2F                     	;# 
  3671  0E90                     	;# 
  3672  0E91                     	;# 
  3673  0E92                     	;# 
  3674  0E94                     	;# 
  3675  0E95                     	;# 
  3676  0E9C                     	;# 
  3677  0E9D                     	;# 
  3678  0E9E                     	;# 
  3679  0E9F                     	;# 
  3680  0EA0                     	;# 
  3681  0EA1                     	;# 
  3682  0EA2                     	;# 
  3683  0EA3                     	;# 
  3684  0EA4                     	;# 
  3685  0EA5                     	;# 
  3686  0EA6                     	;# 
  3687  0EA7                     	;# 
  3688  0F0F                     	;# 
  3689  0F10                     	;# 
  3690  0F11                     	;# 
  3691  0F12                     	;# 
  3692  0F13                     	;# 
  3693  0F14                     	;# 
  3694  0F15                     	;# 
  3695  0F16                     	;# 
  3696  0F17                     	;# 
  3697  0F18                     	;# 
  3698  0F19                     	;# 
  3699  0F1A                     	;# 
  3700  0F1B                     	;# 
  3701  0F1C                     	;# 
  3702  0F1D                     	;# 
  3703  0F1E                     	;# 
  3704  0F1F                     	;# 
  3705  0F20                     	;# 
  3706  0F21                     	;# 
  3707  0F22                     	;# 
  3708  0F23                     	;# 
  3709  0F24                     	;# 
  3710  0F25                     	;# 
  3711  0F26                     	;# 
  3712  0F27                     	;# 
  3713  0F28                     	;# 
  3714  0F29                     	;# 
  3715  0F2A                     	;# 
  3716  0F2B                     	;# 
  3717  0F2C                     	;# 
  3718  0F2D                     	;# 
  3719  0F2E                     	;# 
  3720  0F2F                     	;# 
  3721  0F30                     	;# 
  3722  0F31                     	;# 
  3723  0F32                     	;# 
  3724  0F33                     	;# 
  3725  0F34                     	;# 
  3726  0F35                     	;# 
  3727  0F36                     	;# 
  3728  0F37                     	;# 
  3729  0FE4                     	;# 
  3730  0FE5                     	;# 
  3731  0FE6                     	;# 
  3732  0FE7                     	;# 
  3733  0FE8                     	;# 
  3734  0FE9                     	;# 
  3735  0FEA                     	;# 
  3736  0FEB                     	;# 
  3737  0FED                     	;# 
  3738  0FEE                     	;# 
  3739  0FEF                     	;# 
  3740                           
  3741                           	psect	idataBANK2
  3742  1E1B                     __pidataBANK2:
  3743                           
  3744                           ;initializer for _TAS_NORMAL
  3745  1E1B  3421               	retlw	33
  3746  1E1C  3408               	retlw	8
  3747                           
  3748                           ;initializer for _TAS_CLEAR_FALT
  3749  1E1D  3421               	retlw	33
  3750  1E1E  3488               	retlw	136
  3751                           
  3752                           ;initializer for _TAS_PLAY
  3753  1E1F  3404               	retlw	4
  3754  1E20  3405               	retlw	5
  3755                           
  3756                           ;initializer for _TAS_FS96K
  3757  1E21  3403               	retlw	3
  3758  1E22  3484               	retlw	132
  3759                           
  3760                           ;initializer for _DIT_ADC
  3761  1E23  3460               	retlw	96
  3762  1E24  3422               	retlw	34
  3763                           
  3764                           ;initializer for _DIT_DIR
  3765  1E25  3460               	retlw	96
  3766  1E26  3411               	retlw	17
  3767                           
  3768                           ;initializer for _DIR_OPT
  3769  1E27  3434               	retlw	52
  3770  1E28  3400               	retlw	0
  3771                           
  3772                           ;initializer for _AUXSRC_ADC
  3773  1E29  346C               	retlw	108
  3774  1E2A  3422               	retlw	34
  3775                           
  3776                           ;initializer for _AUXSRC_DIR
  3777  1E2B  346C               	retlw	108
  3778  1E2C  3411               	retlw	17
  3779                           
  3780                           ;initializer for _AUXSRC_AUTO
  3781  1E2D  346C               	retlw	108
  3782  1E2E  3400               	retlw	0
  3783                           
  3784                           ;initializer for _SRC_I2S
  3785  1E2F  346B               	retlw	107
  3786  1E30  3455               	retlw	85
  3787                           
  3788                           ;initializer for _SRC_LVDS
  3789  1E31  346B               	retlw	107
  3790  1E32  3433               	retlw	51
  3791                           
  3792                           ;initializer for _SRC_ADC
  3793  1E33  346B               	retlw	107
  3794  1E34  3422               	retlw	34
  3795                           
  3796                           ;initializer for _SRC_DIR
  3797  1E35  346B               	retlw	107
  3798  1E36  3411               	retlw	17
  3799                           
  3800                           ;initializer for _I2S_IN
  3801  1E37  346F               	retlw	111
  3802  1E38  3400               	retlw	0
  3803                           
  3804                           ;initializer for _I2S_OUT
  3805  1E39  346F               	retlw	111
  3806  1E3A  3408               	retlw	8
  3807                           
  3808                           	psect	idataBANK3
  3809  102E                     __pidataBANK3:
  3810                           
  3811                           ;initializer for _led_dot
  3812  102E  34FF               	retlw	255
  3813  102F  34FF               	retlw	255
  3814  1030  34FF               	retlw	255
  3815                           
  3816                           ;initializer for _TAS_CHK_RAILS
  3817  1031  3411               	retlw	17
  3818  1032  341F               	retlw	31
  3819                           
  3820                           ;initializer for _TAS_MUTE
  3821  1033  3404               	retlw	4
  3822  1034  34A5               	retlw	165
  3823                           
  3824                           ;initializer for _TAS_FS48K
  3825  1035  3403               	retlw	3
  3826  1036  3444               	retlw	68
  3827                           
  3828                           ;initializer for _TAS_FS44K
  3829  1037  3403               	retlw	3
  3830  1038  3404               	retlw	4
  3831                           
  3832                           ;initializer for _TAS_AC
  3833  1039  3401               	retlw	1
  3834  103A  3472               	retlw	114
  3835                           
  3836                           ;initializer for _TAS_DCDIAG_CLEAR
  3837  103B  3409               	retlw	9
  3838  103C  3401               	retlw	1
  3839                           
  3840                           ;initializer for _TAS_RESET
  3841  103D  3400               	retlw	0
  3842  103E  3480               	retlw	128
  3843                           
  3844                           ;initializer for _INIT9211_31
  3845  103F  3431               	retlw	49
  3846  1040  3405               	retlw	5
  3847                           
  3848                           ;initializer for _INIT9211_27
  3849  1041  3427               	retlw	39
  3850  1042  34DB               	retlw	219
  3851                           
  3852                           ;initializer for _INIT9211_26
  3853  1043  3426               	retlw	38
  3854  1044  3460               	retlw	96
  3855                           
  3856                           ;initializer for _INIT9211_2B
  3857  1045  342B               	retlw	43
  3858  1046  34FE               	retlw	254
  3859                           
  3860                           ;initializer for _INIT9211_2E
  3861  1047  342E               	retlw	46
  3862  1048  3408               	retlw	8
  3863                           
  3864                           ;initializer for _INIT9211_20
  3865  1049  3420               	retlw	32
  3866  104A  3401               	retlw	1
  3867                           
  3868                           ;initializer for _ADC_96K
  3869  104B  3431               	retlw	49
  3870  104C  3405               	retlw	5
  3871                           
  3872                           ;initializer for _ADC_DC
  3873  104D  3449               	retlw	73
  3874  104E  3408               	retlw	8
  3875                           
  3876                           ;initializer for _DIT_I2S
  3877  104F  3460               	retlw	96
  3878  1050  3455               	retlw	85
  3879                           
  3880                           ;initializer for _DIT_LVDS
  3881  1051  3460               	retlw	96
  3882  1052  3444               	retlw	68
  3883                           
  3884                           ;initializer for _ADC_ATTR_3dB
  3885  1053  3447               	retlw	71
  3886  1054  34D1               	retlw	209
  3887                           
  3888                           ;initializer for _ADC_ATTL_3dB
  3889  1055  3446               	retlw	70
  3890  1056  34D1               	retlw	209
  3891                           
  3892                           ;initializer for _CALC_MOUT
  3893  1057  3437               	retlw	55
  3894  1058  3405               	retlw	5
  3895                           
  3896                           ;initializer for _DIR_COAX
  3897  1059  3434               	retlw	52
  3898  105A  3401               	retlw	1
  3899                           
  3900                           ;initializer for _AUXSRC_LVDS
  3901  105B  346C               	retlw	108
  3902  105C  3433               	retlw	51
  3903                           
  3904                           	psect	idataBANK4
  3905  12A8                     __pidataBANK4:
  3906                           
  3907                           ;initializer for _ledstr
  3908  12A8  345F               	retlw	95
  3909  12A9  345F               	retlw	95
  3910  12AA  345F               	retlw	95
  3911  12AB  3400               	retlw	0
  3912  12AC  3400               	retlw	0
  3913  12AD  3400               	retlw	0
  3914  12AE  3400               	retlw	0
  3915  12AF  3400               	retlw	0
  3916  12B0  3400               	retlw	0
  3917                           
  3918                           ;initializer for stoa@F1141
  3919  12B1  3428               	retlw	40
  3920  12B2  346E               	retlw	110
  3921  12B3  3475               	retlw	117
  3922  12B4  346C               	retlw	108
  3923  12B5  346C               	retlw	108
  3924  12B6  3429               	retlw	41
  3925  12B7  3400               	retlw	0
  3926                           
  3927                           ;initializer for _srcset9211
  3928  12B8  34CB               	retlw	low (_DIR_COAX| (0+256))
  3929  12B9  3454               	retlw	low (_DIR_OPT| (0+256))
  3930  12BA  3460               	retlw	low (_SRC_ADC| (0+256))
  3931  12BB  345E               	retlw	low (_SRC_LVDS| (0+256))
  3932  12BC  345C               	retlw	low (_SRC_I2S| (0+256))
  3933                           
  3934                           ;initializer for _ledbuff
  3935  12BD  345F               	retlw	95
  3936  12BE  345F               	retlw	95
  3937  12BF  345F               	retlw	95
  3938  12C0  3400               	retlw	0
  3939                           
  3940                           ;initializer for _TAS_HiZ
  3941  12C1  3404               	retlw	4
  3942  12C2  3455               	retlw	85
  3943                           
  3944                           ;initializer for _TAS_OSR128
  3945  12C3  3402               	retlw	2
  3946  12C4  3466               	retlw	102
  3947                           
  3948                           ;initializer for _TAS_OSR64
  3949  12C5  3402               	retlw	2
  3950  12C6  3462               	retlw	98
  3951                           
  3952                           ;initializer for _TAS_FC463
  3953  12C7  3426               	retlw	38
  3954  12C8  3447               	retlw	71
  3955                           
  3956                           ;initializer for _TAS_FC235
  3957  12C9  3426               	retlw	38
  3958  12CA  3446               	retlw	70
  3959                           
  3960                           ;initializer for _TAS_FC118
  3961  12CB  3426               	retlw	38
  3962  12CC  3445               	retlw	69
  3963                           
  3964                           ;initializer for _TAS_FC59
  3965  12CD  3426               	retlw	38
  3966  12CE  3444               	retlw	68
  3967                           
  3968                           ;initializer for _TAS_FC30
  3969  12CF  3426               	retlw	38
  3970  12D0  3443               	retlw	67
  3971                           
  3972                           ;initializer for _TAS_FC15
  3973  12D1  3426               	retlw	38
  3974  12D2  3442               	retlw	66
  3975                           
  3976                           ;initializer for _TAS_FC7
  3977  12D3  3426               	retlw	38
  3978  12D4  3441               	retlw	65
  3979                           
  3980                           ;initializer for _TAS_FC4
  3981  12D5  3426               	retlw	38
  3982  12D6  3440               	retlw	64
  3983                           
  3984                           ;initializer for _TAS_DC
  3985  12D7  3401               	retlw	1
  3986  12D8  34F2               	retlw	242
  3987                           
  3988                           ;initializer for _TAS_DCDIAG_ABORT
  3989  12D9  3409               	retlw	9
  3990  12DA  3480               	retlw	128
  3991                           
  3992                           ;initializer for _ADC_48K
  3993  12DB  3431               	retlw	49
  3994  12DC  341A               	retlw	26
  3995                           
  3996                           ;initializer for _ADC_AC
  3997  12DD  3449               	retlw	73
  3998  12DE  3400               	retlw	0
  3999                           
  4000                           ;initializer for _ADC_I2S_MASTER_256
  4001  12DF  3448               	retlw	72
  4002  12E0  3440               	retlw	64
  4003                           
  4004                           ;initializer for _ADC_ATTR_6dB
  4005  12E1  3447               	retlw	71
  4006  12E2  34CB               	retlw	203
  4007                           
  4008                           ;initializer for _ADC_ATTL_6dB
  4009  12E3  3446               	retlw	70
  4010  12E4  34CB               	retlw	203
  4011                           
  4012                           ;initializer for _ADC_ATTR_0dB
  4013  12E5  3447               	retlw	71
  4014  12E6  34D7               	retlw	215
  4015                           
  4016                           ;initializer for _ADC_ATTL_0dB
  4017  12E7  3446               	retlw	70
  4018  12E8  34D7               	retlw	215
  4019                           
  4020                           ;initializer for _CALC_DIT
  4021  12E9  3437               	retlw	55
  4022  12EA  3407               	retlw	7
  4023                           
  4024                           ;initializer for _CALC_MPOB
  4025  12EB  3437               	retlw	55
  4026  12EC  3406               	retlw	6
  4027                           
  4028                           ;initializer for _CALC_MPIB
  4029  12ED  3437               	retlw	55
  4030  12EE  3403               	retlw	3
  4031                           
  4032                           ;initializer for _CALC_ADC
  4033  12EF  3437               	retlw	55
  4034  12F0  3401               	retlw	1
  4035                           
  4036                           ;initializer for _CALC_DIR
  4037  12F1  3437               	retlw	55
  4038  12F2  3400               	retlw	0
  4039                           
  4040                           ;initializer for _AUXSRC_I2S
  4041  12F3  346C               	retlw	108
  4042  12F4  3455               	retlw	85
  4043                           
  4044                           	psect	stringtext1
  4045  1870                     __pstringtext1:
  4046  1870                     _font7seg:
  4047  1870  34FF               	retlw	255
  4048  1871  34F9               	retlw	249
  4049  1872  34FF               	retlw	255
  4050  1873  34FF               	retlw	255
  4051  1874  34FF               	retlw	255
  4052  1875  349C               	retlw	156
  4053  1876  34FF               	retlw	255
  4054  1877  34FF               	retlw	255
  4055  1878  34FF               	retlw	255
  4056  1879  34FF               	retlw	255
  4057  187A  34FF               	retlw	255
  4058  187B  34FF               	retlw	255
  4059  187C  34FF               	retlw	255
  4060  187D  34BF               	retlw	191
  4061  187E  347F               	retlw	127
  4062  187F  34CF               	retlw	207
  4063  1880  34C0               	retlw	192
  4064  1881  34F9               	retlw	249
  4065  1882  34A4               	retlw	164
  4066  1883  34B0               	retlw	176
  4067  1884  3499               	retlw	153
  4068  1885  3492               	retlw	146
  4069  1886  3482               	retlw	130
  4070  1887  34F8               	retlw	248
  4071  1888  3480               	retlw	128
  4072  1889  3490               	retlw	144
  4073  188A  34F6               	retlw	246
  4074  188B  34B6               	retlw	182
  4075  188C  34FF               	retlw	255
  4076  188D  34B7               	retlw	183
  4077  188E  34FF               	retlw	255
  4078  188F  34FF               	retlw	255
  4079  1890  34A0               	retlw	160
  4080  1891  3488               	retlw	136
  4081  1892  3483               	retlw	131
  4082  1893  34C6               	retlw	198
  4083  1894  34A1               	retlw	161
  4084  1895  3486               	retlw	134
  4085  1896  348E               	retlw	142
  4086  1897  34C2               	retlw	194
  4087  1898  3489               	retlw	137
  4088  1899  34CF               	retlw	207
  4089  189A  34E1               	retlw	225
  4090  189B  3487               	retlw	135
  4091  189C  34C7               	retlw	199
  4092  189D  34C8               	retlw	200
  4093  189E  34AB               	retlw	171
  4094  189F  34C0               	retlw	192
  4095  18A0  348C               	retlw	140
  4096  18A1  3498               	retlw	152
  4097  18A2  3488               	retlw	136
  4098  18A3  3492               	retlw	146
  4099  18A4  34CE               	retlw	206
  4100  18A5  34C1               	retlw	193
  4101  18A6  34C1               	retlw	193
  4102  18A7  3481               	retlw	129
  4103  18A8  3489               	retlw	137
  4104  18A9  3491               	retlw	145
  4105  18AA  34E4               	retlw	228
  4106  18AB  34C6               	retlw	198
  4107  18AC  34FF               	retlw	255
  4108  18AD  34F0               	retlw	240
  4109  18AE  34BC               	retlw	188
  4110  18AF  34F7               	retlw	247
  4111  18B0  34DE               	retlw	222
  4112  18B1  34A0               	retlw	160
  4113  18B2  3483               	retlw	131
  4114  18B3  34A7               	retlw	167
  4115  18B4  34A1               	retlw	161
  4116  18B5  3486               	retlw	134
  4117  18B6  348E               	retlw	142
  4118  18B7  3490               	retlw	144
  4119  18B8  348B               	retlw	139
  4120  18B9  34FB               	retlw	251
  4121  18BA  34F1               	retlw	241
  4122  18BB  3487               	retlw	135
  4123  18BC  34C7               	retlw	199
  4124  18BD  34C8               	retlw	200
  4125  18BE  34AB               	retlw	171
  4126  18BF  34A3               	retlw	163
  4127  18C0  348C               	retlw	140
  4128  18C1  3498               	retlw	152
  4129  18C2  34AF               	retlw	175
  4130  18C3  3492               	retlw	146
  4131  18C4  3487               	retlw	135
  4132  18C5  34E3               	retlw	227
  4133  18C6  34E3               	retlw	227
  4134  18C7  3481               	retlw	129
  4135  18C8  3489               	retlw	137
  4136  18C9  3491               	retlw	145
  4137  18CA  34E4               	retlw	228
  4138  18CB  34FF               	retlw	255
  4139  18CC  34FF               	retlw	255
  4140  18CD  34FF               	retlw	255
  4141  18CE  34FE               	retlw	254
  4142  18CF                     __end_of_font7seg:
  4143                           
  4144                           	psect	stringtext2
  4145  2000                     __pstringtext2:
  4146  2000                     _led_fs_name:
  4147  2000  3434               	retlw	52
  4148  2001  3434               	retlw	52
  4149  2002  342E               	retlw	46
  4150  2003  3431               	retlw	49
  4151  2004  3400               	retlw	0
  4152  2005  3400               	retlw	0
  4153  2006  3400               	retlw	0
  4154  2007  3420               	retlw	32
  4155  2008  3434               	retlw	52
  4156  2009  3438               	retlw	56
  4157  200A  3400               	retlw	0
  4158  200B  3400               	retlw	0
  4159  200C  3400               	retlw	0
  4160  200D  3400               	retlw	0
  4161  200E  3420               	retlw	32
  4162  200F  3438               	retlw	56
  4163  2010  3438               	retlw	56
  4164  2011  342E               	retlw	46
  4165  2012  3432               	retlw	50
  4166  2013  3400               	retlw	0
  4167  2014  3400               	retlw	0
  4168  2015  3420               	retlw	32
  4169  2016  3439               	retlw	57
  4170  2017  3436               	retlw	54
  4171  2018  3400               	retlw	0
  4172  2019  3400               	retlw	0
  4173  201A  3400               	retlw	0
  4174  201B  3400               	retlw	0
  4175  201C  3431               	retlw	49
  4176  201D  3437               	retlw	55
  4177  201E  3436               	retlw	54
  4178  201F  3400               	retlw	0
  4179  2020  3400               	retlw	0
  4180  2021  3400               	retlw	0
  4181  2022  3400               	retlw	0
  4182  2023  3431               	retlw	49
  4183  2024  3439               	retlw	57
  4184  2025  3432               	retlw	50
  4185  2026  3400               	retlw	0
  4186  2027  3400               	retlw	0
  4187  2028  3400               	retlw	0
  4188  2029  3400               	retlw	0
  4189  202A                     __end_of_led_fs_name:
  4190                           
  4191                           	psect	stringtext3
  4192  2075                     __pstringtext3:
  4193  2075                     _fsmStateTable:
  4194  2075  3493               	retlw	low _I2C1_DO_IDLE
  4195  2076  341A               	retlw	high _I2C1_DO_IDLE
  4196  2077  34BC               	retlw	low _I2C1_DO_SEND_ADR_READ
  4197  2078  341A               	retlw	high _I2C1_DO_SEND_ADR_READ
  4198  2079  34B5               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  4199  207A  341A               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  4200  207B  3446               	retlw	low _I2C1_DO_TX
  4201  207C  3413               	retlw	high _I2C1_DO_TX
  4202  207D  34F5               	retlw	low _I2C1_DO_RX
  4203  207E  3410               	retlw	high _I2C1_DO_RX
  4204  207F  34A3               	retlw	low _I2C1_DO_RCEN
  4205  2080  341A               	retlw	high _I2C1_DO_RCEN
  4206  2081  3402               	retlw	low _I2C1_DO_TX_EMPTY
  4207  2082  3410               	retlw	high _I2C1_DO_TX_EMPTY
  4208  2083  346E               	retlw	low _I2C1_DO_SEND_RESTART_READ
  4209  2084  341A               	retlw	high _I2C1_DO_SEND_RESTART_READ
  4210  2085  3472               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  4211  2086  341A               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  4212  2087  3476               	retlw	low _I2C1_DO_SEND_RESTART
  4213  2088  341A               	retlw	high _I2C1_DO_SEND_RESTART
  4214  2089  347A               	retlw	low _I2C1_DO_SEND_STOP
  4215  208A  341A               	retlw	high _I2C1_DO_SEND_STOP
  4216  208B  347E               	retlw	low _I2C1_DO_RX_ACK
  4217  208C  341A               	retlw	high _I2C1_DO_RX_ACK
  4218  208D  3482               	retlw	low _I2C1_DO_RX_NACK_STOP
  4219  208E  341A               	retlw	high _I2C1_DO_RX_NACK_STOP
  4220  208F  3486               	retlw	low _I2C1_DO_RX_NACK_RESTART
  4221  2090  341A               	retlw	high _I2C1_DO_RX_NACK_RESTART
  4222  2091  3498               	retlw	low _I2C1_DO_RESET
  4223  2092  341A               	retlw	high _I2C1_DO_RESET
  4224  2093  34D5               	retlw	low _I2C1_DO_ADDRESS_NACK
  4225  2094  341F               	retlw	high _I2C1_DO_ADDRESS_NACK
  4226  2095                     __end_of_fsmStateTable:
  4227                           
  4228                           	psect	stringtext4
  4229  20BC                     __pstringtext4:
  4230  20BC                     readRE@RE_states:
  4231  20BC  3400               	retlw	0
  4232  20BD  34FF               	retlw	-1
  4233  20BE  3400               	retlw	0
  4234  20BF  3405               	retlw	5
  4235  20C0  3401               	retlw	1
  4236  20C1  3400               	retlw	0
  4237  20C2  3405               	retlw	5
  4238  20C3  3400               	retlw	0
  4239  20C4  3400               	retlw	0
  4240  20C5  3405               	retlw	5
  4241  20C6  3405               	retlw	5
  4242  20C7  3400               	retlw	0
  4243  20C8  3405               	retlw	5
  4244  20C9  3400               	retlw	0
  4245  20CA  3400               	retlw	0
  4246  20CB  3400               	retlw	0
  4247  20CC                     __end_ofreadRE@RE_states:
  4248                           
  4249                           	psect	stringtext5
  4250  1800                     __pstringtext5:
  4251  1800                     _lcd_fs_name:
  4252  1800  3455               	retlw	85
  4253  1801  344E               	retlw	78
  4254  1802  344C               	retlw	76
  4255  1803  344B               	retlw	75
  4256  1804  3400               	retlw	0
  4257  1805  3400               	retlw	0
  4258  1806  3400               	retlw	0
  4259  1807  3420               	retlw	32
  4260  1808  3420               	retlw	32
  4261  1809  3438               	retlw	56
  4262  180A  346B               	retlw	107
  4263  180B  3400               	retlw	0
  4264  180C  3400               	retlw	0
  4265  180D  3400               	retlw	0
  4266  180E  3420               	retlw	32
  4267  180F  3431               	retlw	49
  4268  1810  3431               	retlw	49
  4269  1811  346B               	retlw	107
  4270  1812  3400               	retlw	0
  4271  1813  3400               	retlw	0
  4272  1814  3400               	retlw	0
  4273  1815  3420               	retlw	32
  4274  1816  3431               	retlw	49
  4275  1817  3432               	retlw	50
  4276  1818  346B               	retlw	107
  4277  1819  3400               	retlw	0
  4278  181A  3400               	retlw	0
  4279  181B  3400               	retlw	0
  4280  181C  3420               	retlw	32
  4281  181D  3431               	retlw	49
  4282  181E  3436               	retlw	54
  4283  181F  346B               	retlw	107
  4284  1820  3400               	retlw	0
  4285  1821  3400               	retlw	0
  4286  1822  3400               	retlw	0
  4287  1823  3420               	retlw	32
  4288  1824  3432               	retlw	50
  4289  1825  3432               	retlw	50
  4290  1826  346B               	retlw	107
  4291  1827  3400               	retlw	0
  4292  1828  3400               	retlw	0
  4293  1829  3400               	retlw	0
  4294  182A  3420               	retlw	32
  4295  182B  3432               	retlw	50
  4296  182C  3434               	retlw	52
  4297  182D  346B               	retlw	107
  4298  182E  3400               	retlw	0
  4299  182F  3400               	retlw	0
  4300  1830  3400               	retlw	0
  4301  1831  3420               	retlw	32
  4302  1832  3433               	retlw	51
  4303  1833  3432               	retlw	50
  4304  1834  346B               	retlw	107
  4305  1835  3400               	retlw	0
  4306  1836  3400               	retlw	0
  4307  1837  3400               	retlw	0
  4308  1838  3434               	retlw	52
  4309  1839  3434               	retlw	52
  4310  183A  342E               	retlw	46
  4311  183B  3431               	retlw	49
  4312  183C  346B               	retlw	107
  4313  183D  3400               	retlw	0
  4314  183E  3400               	retlw	0
  4315  183F  3420               	retlw	32
  4316  1840  3434               	retlw	52
  4317  1841  3438               	retlw	56
  4318  1842  346B               	retlw	107
  4319  1843  3400               	retlw	0
  4320  1844  3400               	retlw	0
  4321  1845  3400               	retlw	0
  4322  1846  3420               	retlw	32
  4323  1847  3436               	retlw	54
  4324  1848  3434               	retlw	52
  4325  1849  346B               	retlw	107
  4326  184A  3400               	retlw	0
  4327  184B  3400               	retlw	0
  4328  184C  3400               	retlw	0
  4329  184D  3438               	retlw	56
  4330  184E  3438               	retlw	56
  4331  184F  342E               	retlw	46
  4332  1850  3432               	retlw	50
  4333  1851  346B               	retlw	107
  4334  1852  3400               	retlw	0
  4335  1853  3400               	retlw	0
  4336  1854  3420               	retlw	32
  4337  1855  3439               	retlw	57
  4338  1856  3436               	retlw	54
  4339  1857  346B               	retlw	107
  4340  1858  3400               	retlw	0
  4341  1859  3400               	retlw	0
  4342  185A  3400               	retlw	0
  4343  185B  3431               	retlw	49
  4344  185C  3432               	retlw	50
  4345  185D  3438               	retlw	56
  4346  185E  346B               	retlw	107
  4347  185F  3400               	retlw	0
  4348  1860  3400               	retlw	0
  4349  1861  3400               	retlw	0
  4350  1862  3431               	retlw	49
  4351  1863  3437               	retlw	55
  4352  1864  3436               	retlw	54
  4353  1865  346B               	retlw	107
  4354  1866  3400               	retlw	0
  4355  1867  3400               	retlw	0
  4356  1868  3400               	retlw	0
  4357  1869  3431               	retlw	49
  4358  186A  3439               	retlw	57
  4359  186B  3432               	retlw	50
  4360  186C  346B               	retlw	107
  4361  186D  3400               	retlw	0
  4362  186E  3400               	retlw	0
  4363  186F  3400               	retlw	0
  4364  1870                     __end_of_lcd_fs_name:
  4365                           
  4366                           	psect	stringtext6
  4367  202A                     __pstringtext6:
  4368  202A                     _lcd_src_name:
  4369  202A  3443               	retlw	67
  4370  202B  344F               	retlw	79
  4371  202C  3441               	retlw	65
  4372  202D  3458               	retlw	88
  4373  202E  3449               	retlw	73
  4374  202F  3441               	retlw	65
  4375  2030  344C               	retlw	76
  4376  2031  3400               	retlw	0
  4377  2032  344F               	retlw	79
  4378  2033  3450               	retlw	80
  4379  2034  3454               	retlw	84
  4380  2035  3449               	retlw	73
  4381  2036  3443               	retlw	67
  4382  2037  3441               	retlw	65
  4383  2038  344C               	retlw	76
  4384  2039  3400               	retlw	0
  4385  203A  3441               	retlw	65
  4386  203B  3444               	retlw	68
  4387  203C  3443               	retlw	67
  4388  203D  3420               	retlw	32
  4389  203E  3420               	retlw	32
  4390  203F  3420               	retlw	32
  4391  2040  3420               	retlw	32
  4392  2041  3400               	retlw	0
  4393  2042  3448               	retlw	72
  4394  2043  3444               	retlw	68
  4395  2044  344D               	retlw	77
  4396  2045  3449               	retlw	73
  4397  2046  3420               	retlw	32
  4398  2047  3420               	retlw	32
  4399  2048  3420               	retlw	32
  4400  2049  3400               	retlw	0
  4401  204A  3449               	retlw	73
  4402  204B  3432               	retlw	50
  4403  204C  3453               	retlw	83
  4404  204D  3420               	retlw	32
  4405  204E  3420               	retlw	32
  4406  204F  3420               	retlw	32
  4407  2050  3420               	retlw	32
  4408  2051  3400               	retlw	0
  4409  2052                     __end_of_lcd_src_name:
  4410                           
  4411                           	psect	stringtext7
  4412  2052                     __pstringtext7:
  4413  2052                     _led_src_name:
  4414  2052  3443               	retlw	67
  4415  2053  344F               	retlw	79
  4416  2054  3441               	retlw	65
  4417  2055  3400               	retlw	0
  4418  2056  3400               	retlw	0
  4419  2057  3400               	retlw	0
  4420  2058  3400               	retlw	0
  4421  2059  344F               	retlw	79
  4422  205A  3450               	retlw	80
  4423  205B  3454               	retlw	84
  4424  205C  3400               	retlw	0
  4425  205D  3400               	retlw	0
  4426  205E  3400               	retlw	0
  4427  205F  3400               	retlw	0
  4428  2060  3441               	retlw	65
  4429  2061  3464               	retlw	100
  4430  2062  3443               	retlw	67
  4431  2063  3400               	retlw	0
  4432  2064  3400               	retlw	0
  4433  2065  3400               	retlw	0
  4434  2066  3400               	retlw	0
  4435  2067  3448               	retlw	72
  4436  2068  3444               	retlw	68
  4437  2069  344D               	retlw	77
  4438  206A  3400               	retlw	0
  4439  206B  3400               	retlw	0
  4440  206C  3400               	retlw	0
  4441  206D  3400               	retlw	0
  4442  206E  3431               	retlw	49
  4443  206F  3432               	retlw	50
  4444  2070  3453               	retlw	83
  4445  2071  3400               	retlw	0
  4446  2072  3400               	retlw	0
  4447  2073  3400               	retlw	0
  4448  2074  3400               	retlw	0
  4449  2075                     __end_of_led_src_name:
  4450                           
  4451                           	psect	stringtext8
  4452  20CC                     __pstringtext8:
  4453  20CC                     _lcd_aux_name:
  4454  20CC  3449               	retlw	73
  4455  20CD  344E               	retlw	78
  4456  20CE  3450               	retlw	80
  4457  20CF  3455               	retlw	85
  4458  20D0  3454               	retlw	84
  4459  20D1  3420               	retlw	32
  4460  20D2  3400               	retlw	0
  4461  20D3  344F               	retlw	79
  4462  20D4  3455               	retlw	85
  4463  20D5  3454               	retlw	84
  4464  20D6  3450               	retlw	80
  4465  20D7  3455               	retlw	85
  4466  20D8  3454               	retlw	84
  4467  20D9  3400               	retlw	0
  4468  20DA                     __end_of_lcd_aux_name:
  4469                           
  4470                           	psect	stringtext9
  4471  18CF                     __pstringtext9:
  4472  18CF                     _led_i2s_dir:
  4473  18CF  3431               	retlw	49
  4474  18D0  346E               	retlw	110
  4475  18D1  3470               	retlw	112
  4476  18D2  3400               	retlw	0
  4477  18D3  3400               	retlw	0
  4478  18D4  3400               	retlw	0
  4479  18D5  3400               	retlw	0
  4480  18D6  344F               	retlw	79
  4481  18D7  3475               	retlw	117
  4482  18D8  3474               	retlw	116
  4483  18D9  3400               	retlw	0
  4484  18DA  3400               	retlw	0
  4485  18DB  3400               	retlw	0
  4486  18DC  3400               	retlw	0
  4487  18DD                     __end_of_led_i2s_dir:
  4488  000B                     _INTCONbits	set	11
  4489  000E                     _PORTC	set	14
  4490  000C                     _PORTAbits	set	12
  4491  001B                     _T1CONbits	set	27
  4492  001B                     _T1CON	set	27
  4493  0011                     _PIR1bits	set	17
  4494  0019                     _TMR1L	set	25
  4495  001A                     _TMR1H	set	26
  4496  001C                     _T1GCON	set	28
  4497  008E                     _TRISC	set	142
  4498  008D                     _TRISB	set	141
  4499  008C                     _TRISA	set	140
  4500  0097                     _WDTCON	set	151
  4501  0091                     _PIE1bits	set	145
  4502  010D                     _LATBbits	set	269
  4503  010E                     _LATC	set	270
  4504  010D                     _LATB	set	269
  4505  010C                     _LATA	set	268
  4506  010C                     _LATAbits	set	268
  4507  018C                     _ANSELA	set	396
  4508  018D                     _ANSELB	set	397
  4509  018E                     _ANSELC	set	398
  4510  020E                     _WPUC	set	526
  4511  020C                     _WPUA	set	524
  4512  020D                     _WPUB	set	525
  4513  0216                     _SSP1CON2bits	set	534
  4514  0211                     _SSP1BUF	set	529
  4515  0217                     _SSP1CON3	set	535
  4516  0215                     _SSP1CON1bits	set	533
  4517  0212                     _SSP1ADD	set	530
  4518  0216                     _SSP1CON2	set	534
  4519  0215                     _SSP1CON1	set	533
  4520  0214                     _SSP1STAT	set	532
  4521  028E                     _ODCONC	set	654
  4522  028D                     _ODCONB	set	653
  4523  028C                     _ODCONA	set	652
  4524  030E                     _SLRCONC	set	782
  4525  030D                     _SLRCONB	set	781
  4526  030C                     _SLRCONA	set	780
  4527  038E                     _INLVLC	set	910
  4528  038D                     _INLVLB	set	909
  4529  038C                     _INLVLA	set	908
  4530  0896                     _NVMCON2	set	2198
  4531  0893                     _NVMDATL	set	2195
  4532  0895                     _NVMCON1bits	set	2197
  4533  0892                     _NVMADRH	set	2194
  4534  0891                     _NVMADRL	set	2193
  4535  0916                     _PMD5	set	2326
  4536  0915                     _PMD4	set	2325
  4537  0914                     _PMD3	set	2324
  4538  0913                     _PMD2	set	2323
  4539  0912                     _PMD1	set	2322
  4540  0911                     _PMD0	set	2321
  4541  091E                     _OSCTUNE	set	2334
  4542  091F                     _OSCFRQ	set	2335
  4543  091D                     _OSCEN	set	2333
  4544  091B                     _OSCCON3	set	2331
  4545  0919                     _OSCCON1	set	2329
  4546  48E0                     _PLLR	set	18656
  4547  0E21                     _SSP1DATPPS	set	3617
  4548  0E20                     _SSP1CLKPPS	set	3616
  4549  0E9C                     _RB4PPS	set	3740
  4550  0E9E                     _RB6PPS	set	3742
  4551  18DD                     STR_20:
  4552  18DD  3457               	retlw	87	;'W'
  4553  18DE  3441               	retlw	65	;'A'
  4554  18DF  3452               	retlw	82	;'R'
  4555  18E0  343A               	retlw	58	;':'
  4556  18E1  3425               	retlw	37	;'%'
  4557  18E2  3430               	retlw	48	;'0'
  4558  18E3  3432               	retlw	50	;'2'
  4559  18E4  3458               	retlw	88	;'X'
  4560  18E5  3420               	retlw	32	;' '
  4561  18E6  3425               	retlw	37	;'%'
  4562  18E7  3430               	retlw	48	;'0'
  4563  18E8  3432               	retlw	50	;'2'
  4564  18E9  3458               	retlw	88	;'X'
  4565  18EA  3420               	retlw	32	;' '
  4566  18EB  3425               	retlw	37	;'%'
  4567  18EC  3430               	retlw	48	;'0'
  4568  18ED  3432               	retlw	50	;'2'
  4569  18EE  3458               	retlw	88	;'X'
  4570  18EF  3420               	retlw	32	;' '
  4571  18F0  3425               	retlw	37	;'%'
  4572  18F1  3430               	retlw	48	;'0'
  4573  18F2  3432               	retlw	50	;'2'
  4574  18F3  3458               	retlw	88	;'X'
  4575  18F4  3420               	retlw	32	;' '
  4576  18F5  3425               	retlw	37	;'%'
  4577  18F6  3430               	retlw	48	;'0'
  4578  18F7  3432               	retlw	50	;'2'
  4579  18F8  3458               	retlw	88	;'X'
  4580  18F9  3425               	retlw	37	;'%'
  4581  18FA  3430               	retlw	48	;'0'
  4582  18FB  3432               	retlw	50	;'2'
  4583  18FC  3458               	retlw	88	;'X'
  4584  18FD  3400               	retlw	0
  4585                           
  4586                           	psect	stringtext10
  4587  2095                     __pstringtext10:
  4588  2095                     STR_7:
  4589  2095  3446               	retlw	70	;'F'
  4590  2096  3469               	retlw	105	;'i'
  4591  2097  3472               	retlw	114	;'r'
  4592  2098  346D               	retlw	109	;'m'
  4593  2099  3477               	retlw	119	;'w'
  4594  209A  3461               	retlw	97	;'a'
  4595  209B  3472               	retlw	114	;'r'
  4596  209C  3465               	retlw	101	;'e'
  4597  209D  343A               	retlw	58	;':'
  4598  209E  3420               	retlw	32	;' '
  4599  209F  3432               	retlw	50	;'2'
  4600  20A0  3430               	retlw	48	;'0'
  4601  20A1  3432               	retlw	50	;'2'
  4602  20A2  3430               	retlw	48	;'0'
  4603  20A3  344F               	retlw	79	;'O'
  4604  20A4  3443               	retlw	67	;'C'
  4605  20A5  3454               	retlw	84	;'T'
  4606  20A6  3431               	retlw	49	;'1'
  4607  20A7  3431               	retlw	49	;'1'
  4608  20A8  3400               	retlw	0
  4609                           
  4610                           	psect	stringtext11
  4611  20A9                     __pstringtext11:
  4612  20A9                     STR_19:
  4613  20A9  3456               	retlw	86	;'V'
  4614  20AA  344F               	retlw	79	;'O'
  4615  20AB  344C               	retlw	76	;'L'
  4616  20AC  343A               	retlw	58	;':'
  4617  20AD  3425               	retlw	37	;'%'
  4618  20AE  3433               	retlw	51	;'3'
  4619  20AF  3464               	retlw	100	;'d'
  4620  20B0  3420               	retlw	32	;' '
  4621  20B1  3442               	retlw	66	;'B'
  4622  20B2  3441               	retlw	65	;'A'
  4623  20B3  344C               	retlw	76	;'L'
  4624  20B4  343A               	retlw	58	;':'
  4625  20B5  3425               	retlw	37	;'%'
  4626  20B6  3432               	retlw	50	;'2'
  4627  20B7  3464               	retlw	100	;'d'
  4628  20B8  3420               	retlw	32	;' '
  4629  20B9  3425               	retlw	37	;'%'
  4630  20BA  3473               	retlw	115	;'s'
  4631  20BB  3400               	retlw	0
  4632                           
  4633                           	psect	stringtext12
  4634  20DA                     __pstringtext12:
  4635  20DA                     STR_18:
  4636  20DA  3441               	retlw	65	;'A'
  4637  20DB  3455               	retlw	85	;'U'
  4638  20DC  3458               	retlw	88	;'X'
  4639  20DD  343A               	retlw	58	;':'
  4640  20DE  3425               	retlw	37	;'%'
  4641  20DF  3473               	retlw	115	;'s'
  4642  20E0  3420               	retlw	32	;' '
  4643  20E1  3448               	retlw	72	;'H'
  4644  20E2  3450               	retlw	80	;'P'
  4645  20E3  3446               	retlw	70	;'F'
  4646  20E4  343A               	retlw	58	;':'
  4647  20E5  3425               	retlw	37	;'%'
  4648  20E6  3473               	retlw	115	;'s'
  4649  20E7  3400               	retlw	0
  4650                           
  4651                           	psect	stringtext13
  4652  20E8                     __pstringtext13:
  4653  20E8                     STR_10:
  4654  20E8  341B               	retlw	27
  4655  20E9  3424               	retlw	36	;'$'
  4656  20EA  3442               	retlw	66	;'B'
  4657  20EB  3421               	retlw	33	;'!'
  4658  20EC  3421               	retlw	33	;'!'
  4659  20ED  3421               	retlw	33	;'!'
  4660  20EE  3421               	retlw	33	;'!'
  4661  20EF  3421               	retlw	33	;'!'
  4662  20F0  3421               	retlw	33	;'!'
  4663  20F1  341B               	retlw	27
  4664  20F2  3428               	retlw	40	;'('
  4665  20F3  3442               	retlw	66	;'B'
  4666  20F4  3400               	retlw	0
  4667                           
  4668                           	psect	stringtext14
  4669  20F5                     __pstringtext14:
  4670  20F5                     STR_17:
  4671  20F5  3453               	retlw	83	;'S'
  4672  20F6  344F               	retlw	79	;'O'
  4673  20F7  3455               	retlw	85	;'U'
  4674  20F8  3452               	retlw	82	;'R'
  4675  20F9  3443               	retlw	67	;'C'
  4676  20FA  3445               	retlw	69	;'E'
  4677  20FB  343A               	retlw	58	;':'
  4678  20FC  3425               	retlw	37	;'%'
  4679  20FD  3473               	retlw	115	;'s'
  4680  20FE  3400               	retlw	0
  4681                           
  4682                           	psect	stringtext15
  4683  20FF                     __pstringtext15:
  4684  20FF                     STR_13:
  4685  20FF  3425               	retlw	37	;'%'
  4686  2100  3430               	retlw	48	;'0'
  4687  2101  3433               	retlw	51	;'3'
  4688  2102  3464               	retlw	100	;'d'
  4689  2103  3400               	retlw	0
  4690                           
  4691                           	psect	stringtext16
  4692  2104                     __pstringtext16:
  4693  2104                     STR_3:
  4694  2104  342E               	retlw	46	;'.'
  4695  2105  3430               	retlw	48	;'0'
  4696  2106  3420               	retlw	32	;' '
  4697  2107  3400               	retlw	0
  4698                           
  4699                           	psect	stringtext17
  4700  2108                     __pstringtext17:
  4701  2108                     STR_4:
  4702  2108  342E               	retlw	46	;'.'
  4703  2109  3435               	retlw	53	;'5'
  4704  210A  3420               	retlw	32	;' '
  4705  210B  3400               	retlw	0
  4706                           
  4707                           	psect	stringtext18
  4708  210C                     __pstringtext18:
  4709  210C                     STR_9:
  4710  210C  3453               	retlw	83	;'S'
  4711  210D  344F               	retlw	79	;'O'
  4712  210E  3443               	retlw	67	;'C'
  4713  210F  3400               	retlw	0
  4714                           
  4715                           	psect	stringtext19
  4716  2110                     __pstringtext19:
  4717  2110                     STR_1:
  4718  2110  344F               	retlw	79	;'O'
  4719  2111  3446               	retlw	70	;'F'
  4720  2112  3446               	retlw	70	;'F'
  4721  2113  3400               	retlw	0
  4722                           
  4723                           	psect	stringtext20
  4724  2114                     __pstringtext20:
  4725  2114                     STR_11:
  4726  2114  3442               	retlw	66	;'B'
  4727  2115  3441               	retlw	65	;'A'
  4728  2116  344C               	retlw	76	;'L'
  4729  2117  3400               	retlw	0
  4730                           
  4731                           	psect	stringtext21
  4732  2118                     __pstringtext21:
  4733  2118                     STR_15:
  4734  2118  3431               	retlw	49	;'1'
  4735  2119  3432               	retlw	50	;'2'
  4736  211A  3453               	retlw	83	;'S'
  4737  211B  3400               	retlw	0
  4738                           
  4739                           	psect	stringtext22
  4740  211C                     __pstringtext22:
  4741  211C                     STR_2:
  4742  211C  3425               	retlw	37	;'%'
  4743  211D  3432               	retlw	50	;'2'
  4744  211E  3464               	retlw	100	;'d'
  4745  211F  3400               	retlw	0
  4746                           
  4747                           	psect	stringtext23
  4748  2120                     __pstringtext23:
  4749  2120                     STR_5:
  4750  2120  3425               	retlw	37	;'%'
  4751  2121  3433               	retlw	51	;'3'
  4752  2122  3464               	retlw	100	;'d'
  4753  2123  3400               	retlw	0
  4754                           
  4755                           	psect	stringtext24
  4756  2124                     __pstringtext24:
  4757  2124                     STR_8:
  4758  2124  3446               	retlw	70	;'F'
  4759  2125  3441               	retlw	65	;'A'
  4760  2126  3464               	retlw	100	;'d'
  4761  2127  3400               	retlw	0
  4762                           
  4763                           	psect	stringtext25
  4764  2128                     __pstringtext25:
  4765  2128                     STR_6:
  4766  2128  342E               	retlw	46	;'.'
  4767  2129  3400               	retlw	0
  4768                           
  4769                           	psect	stringtext26
  4770  0000                     __pstringtext26:
  4771  20E8                     
  4772                           	psect	cinit
  4773  0027                     start_initialization:	
  4774                           ; #config settings
  4775                           
  4776  0027                     __initialization:
  4777                           
  4778                           ; Initialize objects allocated to BANK2
  4779  0027  301B               	movlw	low __pidataBANK2
  4780  0028  0084               	movwf	4
  4781  0029  309E               	movlw	(high __pidataBANK2)| (0+128)
  4782  002A  0085               	movwf	5
  4783  002B  3048               	movlw	low __pdataBANK2
  4784  002C  0086               	movwf	6
  4785  002D  3001               	movlw	high __pdataBANK2
  4786  002E  0087               	movwf	7
  4787  002F  3020               	movlw	32
  4788  0030  319A  22AF  3180   	fcall	init_ram
  4789                           
  4790                           ; Initialize objects allocated to BANK3
  4791  0033  302E               	movlw	low __pidataBANK3
  4792  0034  0084               	movwf	4
  4793  0035  3090               	movlw	(high __pidataBANK3)| (0+128)
  4794  0036  0085               	movwf	5
  4795  0037  30A0               	movlw	low __pdataBANK3
  4796  0038  0086               	movwf	6
  4797  0039  3001               	movlw	high __pdataBANK3
  4798  003A  0087               	movwf	7
  4799  003B  302F               	movlw	47
  4800  003C  319A  22AF  3180   	fcall	init_ram
  4801                           
  4802                           ; Initialize objects allocated to BANK4
  4803  003F  30A8               	movlw	low __pidataBANK4
  4804  0040  0084               	movwf	4
  4805  0041  3092               	movlw	(high __pidataBANK4)| (0+128)
  4806  0042  0085               	movwf	5
  4807  0043  3020               	movlw	low __pdataBANK4
  4808  0044  0086               	movwf	6
  4809  0045  3002               	movlw	high __pdataBANK4
  4810  0046  0087               	movwf	7
  4811  0047  304D               	movlw	77
  4812  0048  319A  22AF  3180   	fcall	init_ram
  4813                           
  4814                           ; Clear objects allocated to COMMON
  4815  004B  01FD               	clrf	__pbssCOMMON& (0+127)
  4816                           
  4817                           ; Clear objects allocated to BANK0
  4818  004C  01EA               	clrf	__pbssBANK0& (0+127)
  4819  004D  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  4820  004E  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  4821                           
  4822                           ; Clear objects allocated to BANK1
  4823  004F  0021               	movlb	1	; select bank1
  4824  0050  01E6               	clrf	__pbssBANK1& (0+127)
  4825  0051  01E7               	clrf	(__pbssBANK1+1)& (0+127)
  4826  0052  01E8               	clrf	(__pbssBANK1+2)& (0+127)
  4827  0053  01E9               	clrf	(__pbssBANK1+3)& (0+127)
  4828                           
  4829                           ; Clear objects allocated to BANK2
  4830  0054  3020               	movlw	low __pbssBANK2
  4831  0055  0084               	movwf	4
  4832  0056  3001               	movlw	high __pbssBANK2
  4833  0057  0085               	movwf	5
  4834  0058  3028               	movlw	40
  4835  0059  319A  22A9  3180   	fcall	clear_ram0
  4836                           
  4837                           ; Clear objects allocated to BANK3
  4838  005C  30CF               	movlw	low __pbssBANK3
  4839  005D  0084               	movwf	4
  4840  005E  3001               	movlw	high __pbssBANK3
  4841  005F  0085               	movwf	5
  4842  0060  3020               	movlw	32
  4843  0061  319A  22A9  3180   	fcall	clear_ram0
  4844                           
  4845                           ; Clear objects allocated to BANK5
  4846  0064  30A0               	movlw	low __pbssBANK5
  4847  0065  0084               	movwf	4
  4848  0066  3002               	movlw	high __pbssBANK5
  4849  0067  0085               	movwf	5
  4850  0068  3049               	movlw	73
  4851  0069  319A  22A9         	fcall	clear_ram0
  4852  006B                     end_of_initialization:	
  4853                           ;End of C runtime variable initialization code
  4854                           
  4855  006B                     __end_of__initialization:
  4856  006B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4857  006C  0020               	movlb	0
  4858  006D  3180  286F         	ljmp	_main	;jump to C main() function
  4859                           
  4860                           	psect	bssCOMMON
  4861  007D                     __pbssCOMMON:
  4862  007D                     TMR1_DefaultInterruptHandler@RE_offset:
  4863  007D                     	ds	1
  4864                           
  4865                           	psect	bssBANK0
  4866  006A                     __pbssBANK0:
  4867  006A                     _flags:
  4868  006A                     	ds	2
  4869  006C                     _current_volume:
  4870  006C                     	ds	1
  4871                           
  4872                           	psect	bssBANK1
  4873  00E6                     __pbssBANK1:
  4874  00E6                     _current_direction:
  4875  00E6                     	ds	1
  4876  00E7                     _current_balance:
  4877  00E7                     	ds	1
  4878  00E8                     _current_source:
  4879  00E8                     	ds	1
  4880  00E9                     _RE_pos:
  4881  00E9                     	ds	1
  4882                           
  4883                           	psect	bssBANK2
  4884  0120                     __pbssBANK2:
  4885  0120                     TMR1_DefaultInterruptHandler@led_blink:
  4886  0120                     	ds	3
  4887  0123                     _blink_rate:
  4888  0123                     	ds	3
  4889  0126                     _nout:
  4890  0126                     	ds	2
  4891  0128                     _width:
  4892  0128                     	ds	2
  4893  012A                     _prec:
  4894  012A                     	ds	2
  4895  012C                     TMR1_DefaultInterruptHandler@pushcnt:
  4896  012C                     	ds	2
  4897  012E                     _TMR1_InterruptHandler:
  4898  012E                     	ds	2
  4899  0130                     _timer1ReloadVal:
  4900  0130                     	ds	2
  4901  0132                     _MSSP1_InterruptHandler:
  4902  0132                     	ds	2
  4903  0134                     main@count:
  4904  0134                     	ds	1
  4905  0135                     chk6422warning@prail:
  4906  0135                     	ds	1
  4907  0136                     chk6422warning@ilim:
  4908  0136                     	ds	1
  4909  0137                     chk6422warning@clip:
  4910  0137                     	ds	1
  4911  0138                     chk6422warning@otwarn:
  4912  0138                     	ds	1
  4913  0139                     chk6422warning@otshut:
  4914  0139                     	ds	1
  4915  013A                     chk6422warning@ocdc:
  4916  013A                     	ds	1
  4917  013B                     chk6422warning@lasttime:
  4918  013B                     	ds	1
  4919  013C                     _current_fs:
  4920  013C                     	ds	1
  4921  013D                     _current_aux:
  4922  013D                     	ds	1
  4923  013E                     _gain:
  4924  013E                     	ds	1
  4925  013F                     TMR1_DefaultInterruptHandler@pushstat:
  4926  013F                     	ds	1
  4927  0140                     TMR1_DefaultInterruptHandler@intcnt:
  4928  0140                     	ds	1
  4929  0141                     read_clickRE@interval:
  4930  0141                     	ds	1
  4931  0142                     read_clickRE@index:
  4932  0142                     	ds	1
  4933  0143                     readRE@RE_old:
  4934  0143                     	ds	1
  4935  0144                     readRE@direction:
  4936  0144                     	ds	1
  4937  0145                     _button1:
  4938  0145                     	ds	1
  4939  0146                     _tasbuff:
  4940  0146                     	ds	2
  4941                           
  4942                           	psect	dataBANK2
  4943  0148                     __pdataBANK2:
  4944  0148                     _TAS_NORMAL:
  4945  0148                     	ds	2
  4946  014A                     _TAS_CLEAR_FALT:
  4947  014A                     	ds	2
  4948  014C                     _TAS_PLAY:
  4949  014C                     	ds	2
  4950  014E                     _TAS_FS96K:
  4951  014E                     	ds	2
  4952  0150                     _DIT_ADC:
  4953  0150                     	ds	2
  4954  0152                     _DIT_DIR:
  4955  0152                     	ds	2
  4956  0154                     _DIR_OPT:
  4957  0154                     	ds	2
  4958  0156                     _AUXSRC_ADC:
  4959  0156                     	ds	2
  4960  0158                     _AUXSRC_DIR:
  4961  0158                     	ds	2
  4962  015A                     _AUXSRC_AUTO:
  4963  015A                     	ds	2
  4964  015C                     _SRC_I2S:
  4965  015C                     	ds	2
  4966  015E                     _SRC_LVDS:
  4967  015E                     	ds	2
  4968  0160                     _SRC_ADC:
  4969  0160                     	ds	2
  4970  0162                     _SRC_DIR:
  4971  0162                     	ds	2
  4972  0164                     _I2S_IN:
  4973  0164                     	ds	2
  4974  0166                     _I2S_OUT:
  4975  0166                     	ds	2
  4976                           
  4977                           	psect	bssBANK3
  4978  01CF                     __pbssBANK3:
  4979  01CF                     _I2C1_Status:
  4980  01CF                     	ds	30
  4981  01ED                     _TAS_RUN:
  4982  01ED                     	ds	2
  4983                           
  4984                           	psect	dataBANK3
  4985  01A0                     __pdataBANK3:
  4986  01A0                     _led_dot:
  4987  01A0                     	ds	3
  4988  01A3                     _TAS_CHK_RAILS:
  4989  01A3                     	ds	2
  4990  01A5                     _TAS_MUTE:
  4991  01A5                     	ds	2
  4992  01A7                     _TAS_FS48K:
  4993  01A7                     	ds	2
  4994  01A9                     _TAS_FS44K:
  4995  01A9                     	ds	2
  4996  01AB                     _TAS_AC:
  4997  01AB                     	ds	2
  4998  01AD                     _TAS_DCDIAG_CLEAR:
  4999  01AD                     	ds	2
  5000  01AF                     _TAS_RESET:
  5001  01AF                     	ds	2
  5002  01B1                     _INIT9211_31:
  5003  01B1                     	ds	2
  5004  01B3                     _INIT9211_27:
  5005  01B3                     	ds	2
  5006  01B5                     _INIT9211_26:
  5007  01B5                     	ds	2
  5008  01B7                     _INIT9211_2B:
  5009  01B7                     	ds	2
  5010  01B9                     _INIT9211_2E:
  5011  01B9                     	ds	2
  5012  01BB                     _INIT9211_20:
  5013  01BB                     	ds	2
  5014  01BD                     _ADC_96K:
  5015  01BD                     	ds	2
  5016  01BF                     _ADC_DC:
  5017  01BF                     	ds	2
  5018  01C1                     _DIT_I2S:
  5019  01C1                     	ds	2
  5020  01C3                     _DIT_LVDS:
  5021  01C3                     	ds	2
  5022  01C5                     _ADC_ATTR_3dB:
  5023  01C5                     	ds	2
  5024  01C7                     _ADC_ATTL_3dB:
  5025  01C7                     	ds	2
  5026  01C9                     _CALC_MOUT:
  5027  01C9                     	ds	2
  5028  01CB                     _DIR_COAX:
  5029  01CB                     	ds	2
  5030  01CD                     _AUXSRC_LVDS:
  5031  01CD                     	ds	2
  5032                           
  5033                           	psect	dataBANK4
  5034  0220                     __pdataBANK4:
  5035  0220                     _ledstr:
  5036  0220                     	ds	9
  5037  0229                     stoa@F1141:
  5038  0229                     	ds	7
  5039  0230                     _srcset9211:
  5040  0230                     	ds	5
  5041  0235                     _ledbuff:
  5042  0235                     	ds	4
  5043  0239                     _TAS_HiZ:
  5044  0239                     	ds	2
  5045  023B                     _TAS_OSR128:
  5046  023B                     	ds	2
  5047  023D                     _TAS_OSR64:
  5048  023D                     	ds	2
  5049  023F                     _TAS_FC463:
  5050  023F                     	ds	2
  5051  0241                     _TAS_FC235:
  5052  0241                     	ds	2
  5053  0243                     _TAS_FC118:
  5054  0243                     	ds	2
  5055  0245                     _TAS_FC59:
  5056  0245                     	ds	2
  5057  0247                     _TAS_FC30:
  5058  0247                     	ds	2
  5059  0249                     _TAS_FC15:
  5060  0249                     	ds	2
  5061  024B                     _TAS_FC7:
  5062  024B                     	ds	2
  5063  024D                     _TAS_FC4:
  5064  024D                     	ds	2
  5065  024F                     _TAS_DC:
  5066  024F                     	ds	2
  5067  0251                     _TAS_DCDIAG_ABORT:
  5068  0251                     	ds	2
  5069  0253                     _ADC_48K:
  5070  0253                     	ds	2
  5071  0255                     _ADC_AC:
  5072  0255                     	ds	2
  5073  0257                     _ADC_I2S_MASTER_256:
  5074  0257                     	ds	2
  5075  0259                     _ADC_ATTR_6dB:
  5076  0259                     	ds	2
  5077  025B                     _ADC_ATTL_6dB:
  5078  025B                     	ds	2
  5079  025D                     _ADC_ATTR_0dB:
  5080  025D                     	ds	2
  5081  025F                     _ADC_ATTL_0dB:
  5082  025F                     	ds	2
  5083  0261                     _CALC_DIT:
  5084  0261                     	ds	2
  5085  0263                     _CALC_MPOB:
  5086  0263                     	ds	2
  5087  0265                     _CALC_MPIB:
  5088  0265                     	ds	2
  5089  0267                     _CALC_ADC:
  5090  0267                     	ds	2
  5091  0269                     _CALC_DIR:
  5092  0269                     	ds	2
  5093  026B                     _AUXSRC_I2S:
  5094  026B                     	ds	2
  5095                           
  5096                           	psect	bssBANK5
  5097  02A0                     __pbssBANK5:
  5098  02A0                     _lcdbuff:
  5099  02A0                     	ds	41
  5100  02C9                     _dbuf:
  5101  02C9                     	ds	32
  5102                           
  5103                           	psect	inittext
  5104  1AAF                     init_ram:
  5105  1AAF  00FE               	movwf	126
  5106  1AB0                     initloop:
  5107  1AB0  0012               	moviw fsr0++
  5108  1AB1  001E               	movwi fsr1++
  5109  1AB2  0BFE               	decfsz	126,f
  5110  1AB3  2AB0               	goto	initloop
  5111  1AB4  3400               	retlw	0
  5112                           
  5113                           	psect	clrtext
  5114  1AA9                     clear_ram0:	
  5115                           ;	Called with FSR0 containing the base address, and
  5116                           ;	WREG with the size to clear
  5117                           
  5118  1AA9  0064               	clrwdt	;clear the watchdog before getting into this loop
  5119  1AAA                     clrloop0:
  5120  1AAA  0180               	clrf	0	;clear RAM location pointed to by FSR
  5121  1AAB  3101               	addfsr 0,1
  5122  1AAC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5123  1AAD  2AAA               	goto	clrloop0	;have we reached the end yet?
  5124  1AAE  3400               	retlw	0	;all done for this memory range, return
  5125                           
  5126                           	psect	cstackBANK6
  5127  0320                     __pcstackBANK6:
  5128  0320                     lcd_disp_param@pfspo:
  5129                           
  5130                           ; 1 bytes @ 0x0
  5131  0320                     	ds	1
  5132  0321                     lcd_disp_param@ocdc:
  5133                           
  5134                           ; 1 bytes @ 0x1
  5135  0321                     	ds	1
  5136  0322                     lcd_disp_param@otshut:
  5137                           
  5138                           ; 1 bytes @ 0x2
  5139  0322                     	ds	1
  5140  0323                     lcd_disp_param@otwarn:
  5141                           
  5142                           ; 1 bytes @ 0x3
  5143  0323                     	ds	1
  5144  0324                     lcd_disp_param@clip:
  5145                           
  5146                           ; 1 bytes @ 0x4
  5147  0324                     	ds	1
  5148  0325                     lcd_disp_param@ilim:
  5149                           
  5150                           ; 1 bytes @ 0x5
  5151  0325                     	ds	1
  5152  0326                     lcd_disp_param@prail:
  5153                           
  5154                           ; 1 bytes @ 0x6
  5155  0326                     	ds	1
  5156  0327                     _lcd_disp_param$2713:
  5157                           
  5158                           ; 2 bytes @ 0x7
  5159  0327                     	ds	2
  5160                           
  5161                           	psect	cstackBANK2
  5162  0168                     __pcstackBANK2:
  5163  0168                     ??_main:
  5164                           
  5165                           ; 1 bytes @ 0x0
  5166  0168                     	ds	7
  5167                           
  5168                           	psect	cstackBANK1
  5169  00A0                     __pcstackBANK1:
  5170  00A0                     vfpfcnvrt@ll:
  5171                           
  5172                           ; 8 bytes @ 0x0
  5173  00A0                     	ds	8
  5174  00A8                     vfpfcnvrt@llu:
  5175                           
  5176                           ; 8 bytes @ 0x8
  5177  00A8                     	ds	8
  5178  00B0                     vfpfcnvrt@cp:
  5179                           
  5180                           ; 2 bytes @ 0x10
  5181  00B0                     	ds	2
  5182  00B2                     vfpfcnvrt@c:
  5183                           
  5184                           ; 1 bytes @ 0x12
  5185  00B2                     	ds	1
  5186  00B3                     vfpfcnvrt@done:
  5187                           
  5188                           ; 2 bytes @ 0x13
  5189  00B3                     	ds	2
  5190  00B5                     _vfpfcnvrt$2216:
  5191                           
  5192                           ; 2 bytes @ 0x15
  5193  00B5                     	ds	2
  5194  00B7                     vfpfcnvrt@fp:
  5195                           
  5196                           ; 1 bytes @ 0x17
  5197  00B7                     	ds	1
  5198  00B8                     ?_vfprintf:
  5199  00B8                     vfprintf@fmt:	
  5200                           ; 2 bytes @ 0x18
  5201                           
  5202                           
  5203                           ; 2 bytes @ 0x18
  5204  00B8                     	ds	2
  5205  00BA                     vfprintf@ap:
  5206                           
  5207                           ; 1 bytes @ 0x1A
  5208  00BA                     	ds	1
  5209  00BB                     ??_vfprintf:
  5210                           
  5211                           ; 1 bytes @ 0x1B
  5212  00BB                     	ds	2
  5213  00BD                     vfprintf@fp:
  5214                           
  5215                           ; 1 bytes @ 0x1D
  5216  00BD                     	ds	1
  5217  00BE                     vfprintf@cfmt:
  5218                           
  5219                           ; 2 bytes @ 0x1E
  5220  00BE                     	ds	2
  5221  00C0                     ?_sprintf:
  5222  00C0                     sprintf@s:	
  5223                           ; 2 bytes @ 0x20
  5224                           
  5225                           
  5226                           ; 2 bytes @ 0x20
  5227  00C0                     	ds	2
  5228  00C2                     sprintf@fmt:
  5229                           
  5230                           ; 2 bytes @ 0x22
  5231  00C2                     	ds	14
  5232  00D0                     ??_sprintf:
  5233                           
  5234                           ; 1 bytes @ 0x30
  5235  00D0                     	ds	3
  5236  00D3                     sprintf@ap:
  5237                           
  5238                           ; 1 bytes @ 0x33
  5239  00D3                     	ds	1
  5240  00D4                     sprintf@f:
  5241                           
  5242                           ; 6 bytes @ 0x34
  5243  00D4                     	ds	6
  5244  00DA                     ??_lcd_disp_param:
  5245  00DA                     ??_set_gainstr:	
  5246                           ; 1 bytes @ 0x3A
  5247                           
  5248                           
  5249                           ; 1 bytes @ 0x3A
  5250  00DA                     	ds	1
  5251  00DB                     set_gainstr@gval:
  5252                           
  5253                           ; 1 bytes @ 0x3B
  5254  00DB                     	ds	11
  5255                           
  5256                           	psect	cstackCOMMON
  5257  0070                     __pcstackCOMMON:
  5258  0070                     ?_I2C1_Open:
  5259  0070                     ?_I2C1_MasterWrite:	
  5260                           ; 1 bytes @ 0x0
  5261                           
  5262  0070                     ?_I2C1_Close:	
  5263                           ; 1 bytes @ 0x0
  5264                           
  5265  0070                     ?_TMR1_DefaultInterruptHandler:	
  5266                           ; 1 bytes @ 0x0
  5267                           
  5268  0070                     ?_I2C1_DO_IDLE:	
  5269                           ; 1 bytes @ 0x0
  5270                           
  5271  0070                     ??_I2C1_DO_IDLE:	
  5272                           ; 1 bytes @ 0x0
  5273                           
  5274  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  5275                           ; 1 bytes @ 0x0
  5276                           
  5277  0070                     ??_I2C1_DO_SEND_ADR_READ:	
  5278                           ; 1 bytes @ 0x0
  5279                           
  5280  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  5281                           ; 1 bytes @ 0x0
  5282                           
  5283  0070                     ?_I2C1_DO_TX:	
  5284                           ; 1 bytes @ 0x0
  5285                           
  5286  0070                     ?_I2C1_DO_RX:	
  5287                           ; 1 bytes @ 0x0
  5288                           
  5289  0070                     ?_I2C1_DO_RCEN:	
  5290                           ; 1 bytes @ 0x0
  5291                           
  5292  0070                     ??_I2C1_DO_RCEN:	
  5293                           ; 1 bytes @ 0x0
  5294                           
  5295  0070                     ?_I2C1_DO_TX_EMPTY:	
  5296                           ; 1 bytes @ 0x0
  5297                           
  5298  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  5299                           ; 1 bytes @ 0x0
  5300                           
  5301  0070                     ??_I2C1_DO_SEND_RESTART_READ:	
  5302                           ; 1 bytes @ 0x0
  5303                           
  5304  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  5305                           ; 1 bytes @ 0x0
  5306                           
  5307  0070                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  5308                           ; 1 bytes @ 0x0
  5309                           
  5310  0070                     ?_I2C1_DO_SEND_RESTART:	
  5311                           ; 1 bytes @ 0x0
  5312                           
  5313  0070                     ??_I2C1_DO_SEND_RESTART:	
  5314                           ; 1 bytes @ 0x0
  5315                           
  5316  0070                     ?_I2C1_DO_SEND_STOP:	
  5317                           ; 1 bytes @ 0x0
  5318                           
  5319  0070                     ??_I2C1_DO_SEND_STOP:	
  5320                           ; 1 bytes @ 0x0
  5321                           
  5322  0070                     ?_I2C1_DO_RX_ACK:	
  5323                           ; 1 bytes @ 0x0
  5324                           
  5325  0070                     ??_I2C1_DO_RX_ACK:	
  5326                           ; 1 bytes @ 0x0
  5327                           
  5328  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  5329                           ; 1 bytes @ 0x0
  5330                           
  5331  0070                     ??_I2C1_DO_RX_NACK_STOP:	
  5332                           ; 1 bytes @ 0x0
  5333                           
  5334  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  5335                           ; 1 bytes @ 0x0
  5336                           
  5337  0070                     ??_I2C1_DO_RX_NACK_RESTART:	
  5338                           ; 1 bytes @ 0x0
  5339                           
  5340  0070                     ?_I2C1_DO_RESET:	
  5341                           ; 1 bytes @ 0x0
  5342                           
  5343  0070                     ??_I2C1_DO_RESET:	
  5344                           ; 1 bytes @ 0x0
  5345                           
  5346  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  5347                           ; 1 bytes @ 0x0
  5348                           
  5349  0070                     ?_I2C1_MasterIsr:	
  5350                           ; 1 bytes @ 0x0
  5351                           
  5352  0070                     ?_I2C1_MasterClearIrq:	
  5353                           ; 1 bytes @ 0x0
  5354                           
  5355  0070                     ?_I2C1_MasterOpen:	
  5356                           ; 1 bytes @ 0x0
  5357                           
  5358  0070                     ?_I2C1_MasterEnableIrq:	
  5359                           ; 1 bytes @ 0x0
  5360                           
  5361  0070                     ?_I2C1_MasterDisableIrq:	
  5362                           ; 1 bytes @ 0x0
  5363                           
  5364  0070                     ?_I2C1_MasterClose:	
  5365                           ; 1 bytes @ 0x0
  5366                           
  5367  0070                     ?_I2C1_MasterStart:	
  5368                           ; 1 bytes @ 0x0
  5369                           
  5370  0070                     ?_I2C1_MasterFsm:	
  5371                           ; 1 bytes @ 0x0
  5372                           
  5373  0070                     ?_I2C1_MasterIsNack:	
  5374                           ; 1 bytes @ 0x0
  5375                           
  5376  0070                     ??_I2C1_MasterIsNack:	
  5377                           ; 1 bytes @ 0x0
  5378                           
  5379  0070                     ?_I2C1_MasterSendTxData:	
  5380                           ; 1 bytes @ 0x0
  5381                           
  5382  0070                     ??_I2C1_MasterSendTxData:	
  5383                           ; 1 bytes @ 0x0
  5384                           
  5385  0070                     ?_I2C1_MasterGetRxData:	
  5386                           ; 1 bytes @ 0x0
  5387                           
  5388  0070                     ??_I2C1_MasterGetRxData:	
  5389                           ; 1 bytes @ 0x0
  5390                           
  5391  0070                     ?_I2C1_MasterSendAck:	
  5392                           ; 1 bytes @ 0x0
  5393                           
  5394  0070                     ??_I2C1_MasterSendAck:	
  5395                           ; 1 bytes @ 0x0
  5396                           
  5397  0070                     ?_I2C1_MasterStartRx:	
  5398                           ; 1 bytes @ 0x0
  5399                           
  5400  0070                     ??_I2C1_MasterStartRx:	
  5401                           ; 1 bytes @ 0x0
  5402                           
  5403  0070                     ?_I2C1_MasterSetIrq:	
  5404                           ; 1 bytes @ 0x0
  5405                           
  5406  0070                     ??_I2C1_MasterSetIrq:	
  5407                           ; 1 bytes @ 0x0
  5408                           
  5409  0070                     ?_I2C1_MasterEnableRestart:	
  5410                           ; 1 bytes @ 0x0
  5411                           
  5412  0070                     ??_I2C1_MasterEnableRestart:	
  5413                           ; 1 bytes @ 0x0
  5414                           
  5415  0070                     ?_I2C1_MasterStop:	
  5416                           ; 1 bytes @ 0x0
  5417                           
  5418  0070                     ??_I2C1_MasterStop:	
  5419                           ; 1 bytes @ 0x0
  5420                           
  5421  0070                     ?_I2C1_MasterSendNack:	
  5422                           ; 1 bytes @ 0x0
  5423                           
  5424  0070                     ??_I2C1_MasterSendNack:	
  5425                           ; 1 bytes @ 0x0
  5426                           
  5427  0070                     ?_PMD_Initialize:	
  5428                           ; 1 bytes @ 0x0
  5429                           
  5430  0070                     ?_PIN_MANAGER_Initialize:	
  5431                           ; 1 bytes @ 0x0
  5432                           
  5433  0070                     ?_OSCILLATOR_Initialize:	
  5434                           ; 1 bytes @ 0x0
  5435                           
  5436  0070                     ?_WDT_Initialize:	
  5437                           ; 1 bytes @ 0x0
  5438                           
  5439  0070                     ?_lcd_disp_param:	
  5440                           ; 1 bytes @ 0x0
  5441                           
  5442  0070                     ?_putch:	
  5443                           ; 1 bytes @ 0x0
  5444                           
  5445  0070                     ?_i2c_lcd_send_command:	
  5446                           ; 1 bytes @ 0x0
  5447                           
  5448  0070                     ?_i2c_lcd_send_upper4bit:	
  5449                           ; 1 bytes @ 0x0
  5450                           
  5451  0070                     ?_i2c_lcd_send_data:	
  5452                           ; 1 bytes @ 0x0
  5453                           
  5454  0070                     ?_i2c_lcd_init:	
  5455                           ; 1 bytes @ 0x0
  5456                           
  5457  0070                     ?_i2c_lcd_clear:	
  5458                           ; 1 bytes @ 0x0
  5459                           
  5460  0070                     ?_i2c_lcd_home:	
  5461                           ; 1 bytes @ 0x0
  5462                           
  5463  0070                     ?_i2c_lcd_ulcursor_off:	
  5464                           ; 1 bytes @ 0x0
  5465                           
  5466  0070                     ?_TMR1_Initialize:	
  5467                           ; 1 bytes @ 0x0
  5468                           
  5469  0070                     ?_TMR1_StartTimer:	
  5470                           ; 1 bytes @ 0x0
  5471                           
  5472  0070                     ?_TMR1_WriteTimer:	
  5473                           ; 1 bytes @ 0x0
  5474                           
  5475  0070                     ?_get7seg_font:	
  5476                           ; 1 bytes @ 0x0
  5477                           
  5478  0070                     ??_get7seg_font:	
  5479                           ; 1 bytes @ 0x0
  5480                           
  5481  0070                     ?_read_clickRE:	
  5482                           ; 1 bytes @ 0x0
  5483                           
  5484  0070                     ??_read_clickRE:	
  5485                           ; 1 bytes @ 0x0
  5486                           
  5487  0070                     ?_TMR1_ISR:	
  5488                           ; 1 bytes @ 0x0
  5489                           
  5490  0070                     ?_I2C1_Initialize:	
  5491                           ; 1 bytes @ 0x0
  5492                           
  5493  0070                     ?_I2C1_MasterOperation:	
  5494                           ; 1 bytes @ 0x0
  5495                           
  5496  0070                     ?_INTERRUPT_InterruptManager:	
  5497                           ; 1 bytes @ 0x0
  5498                           
  5499  0070                     ?_SYSTEM_Initialize:	
  5500                           ; 1 bytes @ 0x0
  5501                           
  5502  0070                     ?_set_gainstr:	
  5503                           ; 1 bytes @ 0x0
  5504                           
  5505  0070                     ?_init_pcm9211:	
  5506                           ; 1 bytes @ 0x0
  5507                           
  5508  0070                     ?_init_tas6422:	
  5509                           ; 1 bytes @ 0x0
  5510                           
  5511  0070                     ?_chk6422warning:	
  5512                           ; 1 bytes @ 0x0
  5513                           
  5514  0070                     ?_set_source:	
  5515                           ; 1 bytes @ 0x0
  5516                           
  5517  0070                     ?_main:	
  5518                           ; 1 bytes @ 0x0
  5519                           
  5520  0070                     ?i1_I2C1_SetBuffer:	
  5521                           ; 1 bytes @ 0x0
  5522                           
  5523  0070                     ?i1_I2C1_SetCallback:	
  5524                           ; 1 bytes @ 0x0
  5525                           
  5526  0070                     ?i1_I2C1_MasterClearIrq:	
  5527                           ; 1 bytes @ 0x0
  5528                           
  5529  0070                     ??i1_I2C1_MasterClearIrq:	
  5530                           ; 1 bytes @ 0x0
  5531                           
  5532  0070                     I2C1_MasterSendTxData@data:	
  5533                           ; 1 bytes @ 0x0
  5534                           
  5535  0070                     putch@c:	
  5536                           ; 1 bytes @ 0x0
  5537                           
  5538  0070                     TMR1_WriteTimer@timerVal:	
  5539                           ; 1 bytes @ 0x0
  5540                           
  5541  0070                     i1I2C1_SetBuffer@buffer:	
  5542                           ; 2 bytes @ 0x0
  5543                           
  5544  0070                     i1I2C1_SetCallback@cb:	
  5545                           ; 2 bytes @ 0x0
  5546                           
  5547                           
  5548                           ; 2 bytes @ 0x0
  5549  0070                     	ds	1
  5550  0071                     ??_I2C1_DO_SEND_ADR_WRITE:
  5551  0071                     get7seg_font@fontdata:	
  5552                           ; 1 bytes @ 0x1
  5553                           
  5554                           
  5555                           ; 1 bytes @ 0x1
  5556  0071                     	ds	1
  5557  0072                     ??_TMR1_WriteTimer:
  5558  0072                     get7seg_font@cdata:	
  5559                           ; 1 bytes @ 0x2
  5560                           
  5561  0072                     i1I2C1_SetCallback@ptr:	
  5562                           ; 1 bytes @ 0x2
  5563                           
  5564  0072                     _read_clickRE$506:	
  5565                           ; 1 bytes @ 0x2
  5566                           
  5567  0072                     i1I2C1_SetBuffer@bufferSize:	
  5568                           ; 2 bytes @ 0x2
  5569                           
  5570                           
  5571                           ; 2 bytes @ 0x2
  5572  0072                     	ds	1
  5573  0073                     ??i1_I2C1_SetCallback:
  5574                           
  5575                           ; 1 bytes @ 0x3
  5576  0073                     	ds	1
  5577  0074                     ??i1_I2C1_SetBuffer:
  5578  0074                     read_clickRE@current:	
  5579                           ; 1 bytes @ 0x4
  5580                           
  5581  0074                     i1I2C1_SetCallback@idx:	
  5582                           ; 1 bytes @ 0x4
  5583                           
  5584                           
  5585                           ; 1 bytes @ 0x4
  5586  0074                     	ds	1
  5587  0075                     ??_TMR1_DefaultInterruptHandler:
  5588  0075                     ?i1_I2C1_SetDataCompleteCallback:	
  5589                           ; 1 bytes @ 0x5
  5590                           
  5591  0075                     i1I2C1_SetDataCompleteCallback@cb:	
  5592                           ; 1 bytes @ 0x5
  5593                           
  5594                           
  5595                           ; 2 bytes @ 0x5
  5596  0075                     	ds	2
  5597  0077                     ??_TMR1_ISR:
  5598  0077                     i1I2C1_SetDataCompleteCallback@ptr:	
  5599                           ; 1 bytes @ 0x7
  5600                           
  5601                           
  5602                           ; 1 bytes @ 0x7
  5603  0077                     	ds	1
  5604  0078                     ??i1_I2C1_SetDataCompleteCallback:
  5605                           
  5606                           ; 1 bytes @ 0x8
  5607  0078                     	ds	1
  5608  0079                     ?_rd1RegCompleteHandler:
  5609  0079                     ?_rd2RegCompleteHandler:	
  5610                           ; 1 bytes @ 0x9
  5611                           
  5612  0079                     ?_wr1RegCompleteHandler:	
  5613                           ; 1 bytes @ 0x9
  5614                           
  5615  0079                     ?_wr2RegCompleteHandler:	
  5616                           ; 1 bytes @ 0x9
  5617                           
  5618  0079                     ?_rdBlkRegCompleteHandler:	
  5619                           ; 1 bytes @ 0x9
  5620                           
  5621  0079                     ?_I2C1_CallbackReturnStop:	
  5622                           ; 1 bytes @ 0x9
  5623                           
  5624  0079                     ?_I2C1_CallbackReturnReset:	
  5625                           ; 1 bytes @ 0x9
  5626                           
  5627  0079                     ?_wr1RegCompleteHandler@islower$F2371:	
  5628                           ; 1 bytes @ 0x9
  5629                           
  5630  0079                     ?_rd1RegCompleteHandler@islower$F2379:	
  5631                           ; 1 bytes @ 0x9
  5632                           
  5633  0079                     ?_rd2RegCompleteHandler@islower$F2384:	
  5634                           ; 1 bytes @ 0x9
  5635                           
  5636  0079                     ?_wr2RegCompleteHandler@islower$F2390:	
  5637                           ; 1 bytes @ 0x9
  5638                           
  5639  0079                     ?_rdBlkRegCompleteHandler@islower$F2396:	
  5640                           ; 1 bytes @ 0x9
  5641                           
  5642  0079                     wr1RegCompleteHandler@p:	
  5643                           ; 1 bytes @ 0x9
  5644                           
  5645  0079                     rd1RegCompleteHandler@p:	
  5646                           ; 1 bytes @ 0x9
  5647                           
  5648  0079                     rd2RegCompleteHandler@p:	
  5649                           ; 1 bytes @ 0x9
  5650                           
  5651  0079                     wr2RegCompleteHandler@p:	
  5652                           ; 1 bytes @ 0x9
  5653                           
  5654  0079                     rdBlkRegCompleteHandler@p:	
  5655                           ; 1 bytes @ 0x9
  5656                           
  5657  0079                     rd1RegCompleteHandler@i2c1_master_example$F195@ptr:	
  5658                           ; 1 bytes @ 0x9
  5659                           
  5660  0079                     rd2RegCompleteHandler@i2c1_master_example$F206@ptr:	
  5661                           ; 1 bytes @ 0x9
  5662                           
  5663  0079                     wr1RegCompleteHandler@i2c1_master_example$F212@ptr:	
  5664                           ; 1 bytes @ 0x9
  5665                           
  5666  0079                     wr2RegCompleteHandler@i2c1_master_example$F218@ptr:	
  5667                           ; 1 bytes @ 0x9
  5668                           
  5669  0079                     rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr:	
  5670                           ; 1 bytes @ 0x9
  5671                           
  5672  0079                     I2C1_CallbackReturnStop@funPtr:	
  5673                           ; 1 bytes @ 0x9
  5674                           
  5675  0079                     I2C1_CallbackReturnReset@funPtr:	
  5676                           ; 1 bytes @ 0x9
  5677                           
  5678                           
  5679                           ; 1 bytes @ 0x9
  5680  0079                     	ds	1
  5681  007A                     ??_rd1RegCompleteHandler:
  5682  007A                     ??_rd2RegCompleteHandler:	
  5683                           ; 1 bytes @ 0xA
  5684                           
  5685  007A                     ??_wr1RegCompleteHandler:	
  5686                           ; 1 bytes @ 0xA
  5687                           
  5688  007A                     ??_wr2RegCompleteHandler:	
  5689                           ; 1 bytes @ 0xA
  5690                           
  5691  007A                     ??_rdBlkRegCompleteHandler:	
  5692                           ; 1 bytes @ 0xA
  5693                           
  5694  007A                     ??_I2C1_DO_TX:	
  5695                           ; 1 bytes @ 0xA
  5696                           
  5697  007A                     ??_I2C1_DO_RX:	
  5698                           ; 1 bytes @ 0xA
  5699                           
  5700  007A                     ??_I2C1_DO_TX_EMPTY:	
  5701                           ; 1 bytes @ 0xA
  5702                           
  5703  007A                     ??_I2C1_DO_ADDRESS_NACK:	
  5704                           ; 1 bytes @ 0xA
  5705                           
  5706  007A                     ??_I2C1_CallbackReturnStop:	
  5707                           ; 1 bytes @ 0xA
  5708                           
  5709  007A                     ??_I2C1_CallbackReturnReset:	
  5710                           ; 1 bytes @ 0xA
  5711                           
  5712  007A                     ??_wr1RegCompleteHandler@islower$F2373:	
  5713                           ; 1 bytes @ 0xA
  5714                           
  5715  007A                     ??_rd1RegCompleteHandler@islower$F2381:	
  5716                           ; 1 bytes @ 0xA
  5717                           
  5718  007A                     ??_rd2RegCompleteHandler@islower$F2386:	
  5719                           ; 1 bytes @ 0xA
  5720                           
  5721  007A                     ??_wr2RegCompleteHandler@islower$F2392:	
  5722                           ; 1 bytes @ 0xA
  5723                           
  5724  007A                     ??_rdBlkRegCompleteHandler@islower$F2398:	
  5725                           ; 1 bytes @ 0xA
  5726                           
  5727                           
  5728                           ; 1 bytes @ 0xA
  5729  007A                     	ds	3
  5730  007D                     ??_I2C1_MasterIsr:
  5731  007D                     ??_INTERRUPT_InterruptManager:	
  5732                           ; 1 bytes @ 0xD
  5733                           
  5734                           
  5735                           	psect	cstackBANK0
  5736  0020                     __pcstackBANK0:	
  5737                           ; 1 bytes @ 0xD
  5738                           
  5739  0020                     ??_I2C1_MasterFsm:
  5740                           
  5741                           ; 1 bytes @ 0x0
  5742  0020                     	ds	3
  5743  0023                     ?_I2C1_SetBuffer:
  5744  0023                     ??_I2C1_Close:	
  5745                           ; 1 bytes @ 0x3
  5746                           
  5747  0023                     ?_TMR1_SetInterruptHandler:	
  5748                           ; 1 bytes @ 0x3
  5749                           
  5750  0023                     ?_I2C1_SetInterruptHandler:	
  5751                           ; 1 bytes @ 0x3
  5752                           
  5753  0023                     ??_I2C1_MasterClearIrq:	
  5754                           ; 1 bytes @ 0x3
  5755                           
  5756  0023                     ??_I2C1_MasterOpen:	
  5757                           ; 1 bytes @ 0x3
  5758                           
  5759  0023                     ??_I2C1_MasterEnableIrq:	
  5760                           ; 1 bytes @ 0x3
  5761                           
  5762  0023                     ??_I2C1_MasterDisableIrq:	
  5763                           ; 1 bytes @ 0x3
  5764                           
  5765  0023                     ??_I2C1_MasterClose:	
  5766                           ; 1 bytes @ 0x3
  5767                           
  5768  0023                     ??_I2C1_MasterStart:	
  5769                           ; 1 bytes @ 0x3
  5770                           
  5771  0023                     ?_I2C1_SetCallback:	
  5772                           ; 1 bytes @ 0x3
  5773                           
  5774  0023                     ??_PMD_Initialize:	
  5775                           ; 1 bytes @ 0x3
  5776                           
  5777  0023                     ??_PIN_MANAGER_Initialize:	
  5778                           ; 1 bytes @ 0x3
  5779                           
  5780  0023                     ??_OSCILLATOR_Initialize:	
  5781                           ; 1 bytes @ 0x3
  5782                           
  5783  0023                     ??_WDT_Initialize:	
  5784                           ; 1 bytes @ 0x3
  5785                           
  5786  0023                     ??_putch:	
  5787                           ; 1 bytes @ 0x3
  5788                           
  5789  0023                     ??_TMR1_StartTimer:	
  5790                           ; 1 bytes @ 0x3
  5791                           
  5792  0023                     ??_I2C1_Initialize:	
  5793                           ; 1 bytes @ 0x3
  5794                           
  5795  0023                     ??_I2C1_MasterOperation:	
  5796                           ; 1 bytes @ 0x3
  5797                           
  5798  0023                     ?_DELAY_milliseconds:	
  5799                           ; 1 bytes @ 0x3
  5800                           
  5801  0023                     ?_DATAEE_ReadByte:	
  5802                           ; 1 bytes @ 0x3
  5803                           
  5804  0023                     ?___lbmod:	
  5805                           ; 1 bytes @ 0x3
  5806                           
  5807  0023                     ?_fputc:	
  5808                           ; 1 bytes @ 0x3
  5809                           
  5810  0023                     ?_strlen:	
  5811                           ; 2 bytes @ 0x3
  5812                           
  5813  0023                     ?_isupper:	
  5814                           ; 2 bytes @ 0x3
  5815                           
  5816  0023                     ?_isalpha:	
  5817                           ; 2 bytes @ 0x3
  5818                           
  5819  0023                     ?_isdigit:	
  5820                           ; 2 bytes @ 0x3
  5821                           
  5822  0023                     ?_isspace:	
  5823                           ; 2 bytes @ 0x3
  5824                           
  5825  0023                     ?_islower:	
  5826                           ; 2 bytes @ 0x3
  5827                           
  5828  0023                     ?___awdiv:	
  5829                           ; 2 bytes @ 0x3
  5830                           
  5831  0023                     ?___aodiv:	
  5832                           ; 2 bytes @ 0x3
  5833                           
  5834  0023                     ?___aomod:	
  5835                           ; 8 bytes @ 0x3
  5836                           
  5837  0023                     ___lbmod@divisor:	
  5838                           ; 8 bytes @ 0x3
  5839                           
  5840  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
  5841                           ; 1 bytes @ 0x3
  5842                           
  5843  0023                     I2C1_SetBuffer@buffer:	
  5844                           ; 2 bytes @ 0x3
  5845                           
  5846  0023                     I2C1_SetInterruptHandler@InterruptHandler:	
  5847                           ; 2 bytes @ 0x3
  5848                           
  5849  0023                     I2C1_SetCallback@cb:	
  5850                           ; 2 bytes @ 0x3
  5851                           
  5852  0023                     DELAY_milliseconds@milliseconds:	
  5853                           ; 2 bytes @ 0x3
  5854                           
  5855  0023                     DATAEE_ReadByte@bAdd:	
  5856                           ; 2 bytes @ 0x3
  5857                           
  5858  0023                     ___awdiv@divisor:	
  5859                           ; 2 bytes @ 0x3
  5860                           
  5861  0023                     isalpha@c:	
  5862                           ; 2 bytes @ 0x3
  5863                           
  5864  0023                     isdigit@c:	
  5865                           ; 2 bytes @ 0x3
  5866                           
  5867  0023                     isspace@c:	
  5868                           ; 2 bytes @ 0x3
  5869                           
  5870  0023                     isupper@c:	
  5871                           ; 2 bytes @ 0x3
  5872                           
  5873  0023                     fputc@c:	
  5874                           ; 2 bytes @ 0x3
  5875                           
  5876  0023                     strlen@s:	
  5877                           ; 2 bytes @ 0x3
  5878                           
  5879  0023                     islower@c:	
  5880                           ; 2 bytes @ 0x3
  5881                           
  5882  0023                     ___aodiv@divisor:	
  5883                           ; 2 bytes @ 0x3
  5884                           
  5885  0023                     ___aomod@divisor:	
  5886                           ; 8 bytes @ 0x3
  5887                           
  5888                           
  5889                           ; 8 bytes @ 0x3
  5890  0023                     	ds	1
  5891  0024                     ??___lbmod:
  5892  0024                     I2C1_Close@returnValue:	
  5893                           ; 1 bytes @ 0x4
  5894                           
  5895  0024                     I2C1_MasterOperation@read:	
  5896                           ; 1 bytes @ 0x4
  5897                           
  5898                           
  5899                           ; 1 bytes @ 0x4
  5900  0024                     	ds	1
  5901  0025                     ??_I2C1_Open:
  5902  0025                     ??_TMR1_SetInterruptHandler:	
  5903                           ; 1 bytes @ 0x5
  5904                           
  5905  0025                     ??_I2C1_SetInterruptHandler:	
  5906                           ; 1 bytes @ 0x5
  5907                           
  5908  0025                     ??_strlen:	
  5909                           ; 1 bytes @ 0x5
  5910                           
  5911  0025                     ??_isupper:	
  5912                           ; 1 bytes @ 0x5
  5913                           
  5914  0025                     ??_isalpha:	
  5915                           ; 1 bytes @ 0x5
  5916                           
  5917  0025                     ??_isdigit:	
  5918                           ; 1 bytes @ 0x5
  5919                           
  5920  0025                     ??_isspace:	
  5921                           ; 1 bytes @ 0x5
  5922                           
  5923  0025                     ??_islower:	
  5924                           ; 1 bytes @ 0x5
  5925                           
  5926  0025                     ??_TMR1_Initialize:	
  5927                           ; 1 bytes @ 0x5
  5928                           
  5929  0025                     ??_DELAY_milliseconds:	
  5930                           ; 1 bytes @ 0x5
  5931                           
  5932  0025                     ??_SYSTEM_Initialize:	
  5933                           ; 1 bytes @ 0x5
  5934                           
  5935  0025                     ??_DATAEE_ReadByte:	
  5936                           ; 1 bytes @ 0x5
  5937                           
  5938  0025                     I2C1_MasterOperation@returnValue:	
  5939                           ; 1 bytes @ 0x5
  5940                           
  5941  0025                     I2C1_SetCallback@ptr:	
  5942                           ; 1 bytes @ 0x5
  5943                           
  5944  0025                     fputc@fp:	
  5945                           ; 1 bytes @ 0x5
  5946                           
  5947  0025                     I2C1_SetBuffer@bufferSize:	
  5948                           ; 1 bytes @ 0x5
  5949                           
  5950  0025                     ___awdiv@dividend:	
  5951                           ; 2 bytes @ 0x5
  5952                           
  5953                           
  5954                           ; 2 bytes @ 0x5
  5955  0025                     	ds	1
  5956  0026                     ??_I2C1_MasterWrite:
  5957  0026                     ??_I2C1_SetCallback:	
  5958                           ; 1 bytes @ 0x6
  5959                           
  5960  0026                     ??_fputc:	
  5961                           ; 1 bytes @ 0x6
  5962                           
  5963  0026                     I2C1_Open@address:	
  5964                           ; 1 bytes @ 0x6
  5965                           
  5966  0026                     ___lbmod@dividend:	
  5967                           ; 1 bytes @ 0x6
  5968                           
  5969  0026                     strlen@a:	
  5970                           ; 1 bytes @ 0x6
  5971                           
  5972                           
  5973                           ; 2 bytes @ 0x6
  5974  0026                     	ds	1
  5975  0027                     ??_I2C1_SetBuffer:
  5976  0027                     ??___awdiv:	
  5977                           ; 1 bytes @ 0x7
  5978                           
  5979  0027                     I2C1_Open@returnValue:	
  5980                           ; 1 bytes @ 0x7
  5981                           
  5982  0027                     I2C1_SetCallback@idx:	
  5983                           ; 1 bytes @ 0x7
  5984                           
  5985  0027                     ___lbmod@counter:	
  5986                           ; 1 bytes @ 0x7
  5987                           
  5988  0027                     _isspace$2263:	
  5989                           ; 1 bytes @ 0x7
  5990                           
  5991                           
  5992                           ; 1 bytes @ 0x7
  5993  0027                     	ds	1
  5994  0028                     ?_I2C1_SetDataCompleteCallback:
  5995  0028                     ?_I2C1_SetAddressNackCallback:	
  5996                           ; 1 bytes @ 0x8
  5997                           
  5998  0028                     ___awdiv@counter:	
  5999                           ; 1 bytes @ 0x8
  6000                           
  6001  0028                     ___lbmod@rem:	
  6002                           ; 1 bytes @ 0x8
  6003                           
  6004  0028                     I2C1_SetDataCompleteCallback@cb:	
  6005                           ; 1 bytes @ 0x8
  6006                           
  6007  0028                     I2C1_SetAddressNackCallback@cb:	
  6008                           ; 2 bytes @ 0x8
  6009                           
  6010                           
  6011                           ; 2 bytes @ 0x8
  6012  0028                     	ds	1
  6013  0029                     ?_DATAEE_WriteByte:
  6014  0029                     ?_toupper:	
  6015                           ; 1 bytes @ 0x9
  6016                           
  6017  0029                     ?___wmul:	
  6018                           ; 2 bytes @ 0x9
  6019                           
  6020  0029                     ___awdiv@sign:	
  6021                           ; 2 bytes @ 0x9
  6022                           
  6023  0029                     DATAEE_WriteByte@bAdd:	
  6024                           ; 1 bytes @ 0x9
  6025                           
  6026  0029                     ___wmul@multiplier:	
  6027                           ; 2 bytes @ 0x9
  6028                           
  6029  0029                     toupper@c:	
  6030                           ; 2 bytes @ 0x9
  6031                           
  6032                           
  6033                           ; 2 bytes @ 0x9
  6034  0029                     	ds	1
  6035  002A                     I2C1_SetDataCompleteCallback@ptr:
  6036  002A                     I2C1_SetAddressNackCallback@ptr:	
  6037                           ; 1 bytes @ 0xA
  6038                           
  6039  002A                     ___awdiv@quotient:	
  6040                           ; 1 bytes @ 0xA
  6041                           
  6042                           
  6043                           ; 2 bytes @ 0xA
  6044  002A                     	ds	1
  6045  002B                     ??_I2C1_SetDataCompleteCallback:
  6046  002B                     ??_I2C1_SetAddressNackCallback:	
  6047                           ; 1 bytes @ 0xB
  6048                           
  6049  002B                     ??_toupper:	
  6050                           ; 1 bytes @ 0xB
  6051                           
  6052  002B                     ?_fputs:	
  6053                           ; 1 bytes @ 0xB
  6054                           
  6055  002B                     ?_stoa:	
  6056                           ; 2 bytes @ 0xB
  6057                           
  6058  002B                     DATAEE_WriteByte@bData:	
  6059                           ; 2 bytes @ 0xB
  6060                           
  6061  002B                     fputs@fp:	
  6062                           ; 1 bytes @ 0xB
  6063                           
  6064  002B                     ___wmul@multiplicand:	
  6065                           ; 1 bytes @ 0xB
  6066                           
  6067  002B                     stoa@s:	
  6068                           ; 2 bytes @ 0xB
  6069                           
  6070  002B                     ___aodiv@dividend:	
  6071                           ; 2 bytes @ 0xB
  6072                           
  6073  002B                     ___aomod@dividend:	
  6074                           ; 8 bytes @ 0xB
  6075                           
  6076                           
  6077                           ; 8 bytes @ 0xB
  6078  002B                     	ds	1
  6079  002C                     ?_I2C1_WriteNBytes:
  6080  002C                     ??_fputs:	
  6081                           ; 1 bytes @ 0xC
  6082                           
  6083  002C                     ?_i2c_writeNBytes:	
  6084                           ; 1 bytes @ 0xC
  6085                           
  6086  002C                     ?_i2c_read1ByteRegister:	
  6087                           ; 1 bytes @ 0xC
  6088                           
  6089  002C                     ??_DATAEE_WriteByte:	
  6090                           ; 1 bytes @ 0xC
  6091                           
  6092  002C                     i2c_writeNBytes@data:	
  6093                           ; 1 bytes @ 0xC
  6094                           
  6095  002C                     i2c_read1ByteRegister@reg:	
  6096                           ; 1 bytes @ 0xC
  6097                           
  6098  002C                     I2C1_WriteNBytes@data:	
  6099                           ; 1 bytes @ 0xC
  6100                           
  6101  002C                     DATAEE_WriteByte@GIEBitValue:	
  6102                           ; 1 bytes @ 0xC
  6103                           
  6104                           
  6105                           ; 1 bytes @ 0xC
  6106  002C                     	ds	1
  6107  002D                     ??_i2c_read1ByteRegister:
  6108  002D                     ??___wmul:	
  6109                           ; 1 bytes @ 0xD
  6110                           
  6111  002D                     ??_stoa:	
  6112                           ; 1 bytes @ 0xD
  6113                           
  6114  002D                     i2c_writeNBytes@len:	
  6115                           ; 1 bytes @ 0xD
  6116                           
  6117  002D                     I2C1_WriteNBytes@len:	
  6118                           ; 2 bytes @ 0xD
  6119                           
  6120  002D                     ___wmul@product:	
  6121                           ; 2 bytes @ 0xD
  6122                           
  6123                           
  6124                           ; 2 bytes @ 0xD
  6125  002D                     	ds	1
  6126  002E                     i2c_read1ByteRegister@address:
  6127                           
  6128                           ; 1 bytes @ 0xE
  6129  002E                     	ds	1
  6130  002F                     ??_I2C1_WriteNBytes:
  6131  002F                     ??_i2c_writeNBytes:	
  6132                           ; 1 bytes @ 0xF
  6133                           
  6134  002F                     ?_puts_led:	
  6135                           ; 1 bytes @ 0xF
  6136                           
  6137  002F                     ?_strcpy:	
  6138                           ; 1 bytes @ 0xF
  6139                           
  6140  002F                     ?_atoi:	
  6141                           ; 2 bytes @ 0xF
  6142                           
  6143  002F                     i2c_writeNBytes@address:	
  6144                           ; 2 bytes @ 0xF
  6145                           
  6146  002F                     i2c_read1ByteRegister@e:	
  6147                           ; 1 bytes @ 0xF
  6148                           
  6149  002F                     I2C1_WriteNBytes@address:	
  6150                           ; 1 bytes @ 0xF
  6151                           
  6152  002F                     fputs@c:	
  6153                           ; 1 bytes @ 0xF
  6154                           
  6155  002F                     puts_led@str:	
  6156                           ; 1 bytes @ 0xF
  6157                           
  6158  002F                     atoi@s:	
  6159                           ; 2 bytes @ 0xF
  6160                           
  6161  002F                     strcpy@dest:	
  6162                           ; 2 bytes @ 0xF
  6163                           
  6164  002F                     _toupper$2331:	
  6165                           ; 2 bytes @ 0xF
  6166                           
  6167                           
  6168                           ; 2 bytes @ 0xF
  6169  002F                     	ds	1
  6170  0030                     ??_i2c_lcd_send_command:
  6171  0030                     ??_i2c_lcd_send_upper4bit:	
  6172                           ; 1 bytes @ 0x10
  6173                           
  6174  0030                     ??_i2c_lcd_send_data:	
  6175                           ; 1 bytes @ 0x10
  6176                           
  6177  0030                     ??_init_pcm9211:	
  6178                           ; 1 bytes @ 0x10
  6179                           
  6180  0030                     ??_init_tas6422:	
  6181                           ; 1 bytes @ 0x10
  6182                           
  6183  0030                     ??_set_source:	
  6184                           ; 1 bytes @ 0x10
  6185                           
  6186  0030                     i2c_read1ByteRegister@x:	
  6187                           ; 1 bytes @ 0x10
  6188                           
  6189  0030                     fputs@i:	
  6190                           ; 2 bytes @ 0x10
  6191                           
  6192  0030                     stoa@nuls:	
  6193                           ; 2 bytes @ 0x10
  6194                           
  6195                           
  6196                           ; 7 bytes @ 0x10
  6197  0030                     	ds	1
  6198  0031                     ??_atoi:
  6199  0031                     ??_puts_led:	
  6200                           ; 1 bytes @ 0x11
  6201                           
  6202  0031                     i2c_lcd_send_upper4bit@data:	
  6203                           ; 1 bytes @ 0x11
  6204                           
  6205  0031                     strcpy@src:	
  6206                           ; 1 bytes @ 0x11
  6207                           
  6208                           
  6209                           ; 2 bytes @ 0x11
  6210  0031                     	ds	1
  6211  0032                     i2c_lcd_send_command@data:
  6212  0032                     i2c_lcd_send_upper4bit@upperdata_en:	
  6213                           ; 1 bytes @ 0x12
  6214                           
  6215  0032                     i2c_lcd_send_data@data:	
  6216                           ; 1 bytes @ 0x12
  6217                           
  6218  0032                     i2c_read1ByteRegister@d2:	
  6219                           ; 1 bytes @ 0x12
  6220                           
  6221  0032                     fputs@s:	
  6222                           ; 1 bytes @ 0x12
  6223                           
  6224  0032                     puts_led@cpoint:	
  6225                           ; 1 bytes @ 0x12
  6226                           
  6227                           
  6228                           ; 2 bytes @ 0x12
  6229  0032                     	ds	1
  6230  0033                     ??_strcpy:
  6231  0033                     ??_chk6422warning:	
  6232                           ; 1 bytes @ 0x13
  6233                           
  6234  0033                     ??___aodiv:	
  6235                           ; 1 bytes @ 0x13
  6236                           
  6237  0033                     ??___aomod:	
  6238                           ; 1 bytes @ 0x13
  6239                           
  6240  0033                     ?_pad:	
  6241                           ; 1 bytes @ 0x13
  6242                           
  6243  0033                     i2c_lcd_send_command@upperdata_en:	
  6244                           ; 2 bytes @ 0x13
  6245                           
  6246  0033                     i2c_lcd_send_upper4bit@upperdata:	
  6247                           ; 1 bytes @ 0x13
  6248                           
  6249  0033                     i2c_lcd_send_data@upperdata_en:	
  6250                           ; 1 bytes @ 0x13
  6251                           
  6252  0033                     set_source@sourcenumber:	
  6253                           ; 1 bytes @ 0x13
  6254                           
  6255  0033                     pad@buf:	
  6256                           ; 1 bytes @ 0x13
  6257                           
  6258                           
  6259                           ; 1 bytes @ 0x13
  6260  0033                     	ds	1
  6261  0034                     i2c_lcd_send_command@lowerdata_en:
  6262  0034                     i2c_lcd_send_data@lowerdata_en:	
  6263                           ; 1 bytes @ 0x14
  6264                           
  6265  0034                     ___aodiv@counter:	
  6266                           ; 1 bytes @ 0x14
  6267                           
  6268  0034                     ___aomod@counter:	
  6269                           ; 1 bytes @ 0x14
  6270                           
  6271  0034                     pad@p:	
  6272                           ; 1 bytes @ 0x14
  6273                           
  6274                           
  6275                           ; 2 bytes @ 0x14
  6276  0034                     	ds	1
  6277  0035                     i2c_lcd_send_command@upperdata:
  6278  0035                     i2c_lcd_send_data@upperdata:	
  6279                           ; 1 bytes @ 0x15
  6280                           
  6281  0035                     ___aodiv@sign:	
  6282                           ; 1 bytes @ 0x15
  6283                           
  6284  0035                     ___aomod@sign:	
  6285                           ; 1 bytes @ 0x15
  6286                           
  6287  0035                     atoi@neg:	
  6288                           ; 1 bytes @ 0x15
  6289                           
  6290                           
  6291                           ; 2 bytes @ 0x15
  6292  0035                     	ds	1
  6293  0036                     ??_pad:
  6294  0036                     ?_abs:	
  6295                           ; 1 bytes @ 0x16
  6296                           
  6297  0036                     i2c_lcd_send_command@lowerdata:	
  6298                           ; 2 bytes @ 0x16
  6299                           
  6300  0036                     i2c_lcd_send_data@lowerdata:	
  6301                           ; 1 bytes @ 0x16
  6302                           
  6303  0036                     abs@a:	
  6304                           ; 1 bytes @ 0x16
  6305                           
  6306  0036                     ___aodiv@quotient:	
  6307                           ; 2 bytes @ 0x16
  6308                           
  6309                           
  6310                           ; 8 bytes @ 0x16
  6311  0036                     	ds	1
  6312  0037                     ??_i2c_lcd_init:
  6313  0037                     ?_i2c_lcd_puts:	
  6314                           ; 1 bytes @ 0x17
  6315                           
  6316  0037                     ??_i2c_lcd_clear:	
  6317                           ; 1 bytes @ 0x17
  6318                           
  6319  0037                     ??_i2c_lcd_home:	
  6320                           ; 1 bytes @ 0x17
  6321                           
  6322  0037                     ??_i2c_lcd_ulcursor_off:	
  6323                           ; 1 bytes @ 0x17
  6324                           
  6325  0037                     ?_i2c_lcd_set_cursor_pos:	
  6326                           ; 1 bytes @ 0x17
  6327                           
  6328  0037                     i2c_lcd_set_cursor_pos@line:	
  6329                           ; 1 bytes @ 0x17
  6330                           
  6331  0037                     i2c_lcd_puts@s:	
  6332                           ; 1 bytes @ 0x17
  6333                           
  6334  0037                     pad@i:	
  6335                           ; 2 bytes @ 0x17
  6336                           
  6337  0037                     stoa@i:	
  6338                           ; 2 bytes @ 0x17
  6339                           
  6340  0037                     _atoi$2236:	
  6341                           ; 2 bytes @ 0x17
  6342                           
  6343  0037                     strcpy@s:	
  6344                           ; 2 bytes @ 0x17
  6345                           
  6346                           
  6347                           ; 2 bytes @ 0x17
  6348  0037                     	ds	1
  6349  0038                     ??_abs:
  6350  0038                     ??_i2c_lcd_set_cursor_pos:	
  6351                           ; 1 bytes @ 0x18
  6352                           
  6353                           
  6354                           ; 1 bytes @ 0x18
  6355  0038                     	ds	1
  6356  0039                     ??_i2c_lcd_puts:
  6357  0039                     pad@w:	
  6358                           ; 1 bytes @ 0x19
  6359                           
  6360  0039                     stoa@w:	
  6361                           ; 2 bytes @ 0x19
  6362                           
  6363  0039                     _atoi$2238:	
  6364                           ; 2 bytes @ 0x19
  6365                           
  6366  0039                     strcpy@d:	
  6367                           ; 2 bytes @ 0x19
  6368                           
  6369                           
  6370                           ; 2 bytes @ 0x19
  6371  0039                     	ds	1
  6372  003A                     ?_set_gains:
  6373  003A                     i2c_lcd_set_cursor_pos@pos:	
  6374                           ; 1 bytes @ 0x1A
  6375                           
  6376  003A                     set_gains@bal:	
  6377                           ; 1 bytes @ 0x1A
  6378                           
  6379                           
  6380                           ; 1 bytes @ 0x1A
  6381  003A                     	ds	1
  6382  003B                     ??_set_gains:
  6383  003B                     ?_strcat:	
  6384                           ; 1 bytes @ 0x1B
  6385                           
  6386  003B                     i2c_lcd_set_cursor_pos@col:	
  6387                           ; 2 bytes @ 0x1B
  6388                           
  6389  003B                     pad@fp:	
  6390                           ; 1 bytes @ 0x1B
  6391                           
  6392  003B                     stoa@fp:	
  6393                           ; 1 bytes @ 0x1B
  6394                           
  6395  003B                     _atoi$2237:	
  6396                           ; 1 bytes @ 0x1B
  6397                           
  6398  003B                     strcat@dest:	
  6399                           ; 1 bytes @ 0x1B
  6400                           
  6401                           
  6402                           ; 2 bytes @ 0x1B
  6403  003B                     	ds	1
  6404  003C                     ?_xtoa:
  6405  003C                     set_gains@vol:	
  6406                           ; 2 bytes @ 0x1C
  6407                           
  6408  003C                     stoa@cp:	
  6409                           ; 1 bytes @ 0x1C
  6410                           
  6411  003C                     atoi@n:	
  6412                           ; 2 bytes @ 0x1C
  6413                           
  6414  003C                     xtoa@d:	
  6415                           ; 2 bytes @ 0x1C
  6416                           
  6417                           
  6418                           ; 8 bytes @ 0x1C
  6419  003C                     	ds	1
  6420  003D                     strcat@src:
  6421                           
  6422                           ; 2 bytes @ 0x1D
  6423  003D                     	ds	1
  6424  003E                     ?_dtoa:
  6425  003E                     stoa@p:	
  6426                           ; 2 bytes @ 0x1E
  6427                           
  6428  003E                     dtoa@d:	
  6429                           ; 2 bytes @ 0x1E
  6430                           
  6431                           
  6432                           ; 8 bytes @ 0x1E
  6433  003E                     	ds	1
  6434  003F                     ??_strcat:
  6435                           
  6436                           ; 1 bytes @ 0x1F
  6437  003F                     	ds	1
  6438  0040                     stoa@l:
  6439                           
  6440                           ; 2 bytes @ 0x20
  6441  0040                     	ds	4
  6442  0044                     xtoa@x:
  6443                           
  6444                           ; 1 bytes @ 0x24
  6445  0044                     	ds	1
  6446  0045                     ??_xtoa:
  6447                           
  6448                           ; 1 bytes @ 0x25
  6449  0045                     	ds	1
  6450  0046                     ??_dtoa:
  6451                           
  6452                           ; 1 bytes @ 0x26
  6453  0046                     	ds	3
  6454  0049                     dtoa@fp:
  6455                           
  6456                           ; 1 bytes @ 0x29
  6457  0049                     	ds	1
  6458  004A                     _dtoa$2180:
  6459                           
  6460                           ; 2 bytes @ 0x2A
  6461  004A                     	ds	2
  6462  004C                     dtoa@p:
  6463                           
  6464                           ; 2 bytes @ 0x2C
  6465  004C                     	ds	1
  6466  004D                     xtoa@fp:
  6467                           
  6468                           ; 1 bytes @ 0x2D
  6469  004D                     	ds	1
  6470  004E                     dtoa@w:
  6471  004E                     _xtoa$2201:	
  6472                           ; 2 bytes @ 0x2E
  6473                           
  6474                           
  6475                           ; 2 bytes @ 0x2E
  6476  004E                     	ds	2
  6477  0050                     dtoa@s:
  6478  0050                     _xtoa$2202:	
  6479                           ; 2 bytes @ 0x30
  6480                           
  6481                           
  6482                           ; 2 bytes @ 0x30
  6483  0050                     	ds	2
  6484  0052                     xtoa@p:
  6485  0052                     dtoa@n:	
  6486                           ; 2 bytes @ 0x32
  6487                           
  6488                           
  6489                           ; 8 bytes @ 0x32
  6490  0052                     	ds	2
  6491  0054                     xtoa@w:
  6492                           
  6493                           ; 2 bytes @ 0x34
  6494  0054                     	ds	2
  6495  0056                     xtoa@n:
  6496                           
  6497                           ; 8 bytes @ 0x36
  6498  0056                     	ds	4
  6499  005A                     dtoa@i:
  6500                           
  6501                           ; 2 bytes @ 0x3A
  6502  005A                     	ds	4
  6503  005E                     xtoa@i:
  6504                           
  6505                           ; 2 bytes @ 0x3E
  6506  005E                     	ds	2
  6507  0060                     xtoa@c:
  6508                           
  6509                           ; 2 bytes @ 0x40
  6510  0060                     	ds	2
  6511  0062                     ?_vfpfcnvrt:
  6512  0062                     vfpfcnvrt@fmt:	
  6513                           ; 2 bytes @ 0x42
  6514                           
  6515                           
  6516                           ; 1 bytes @ 0x42
  6517  0062                     	ds	1
  6518  0063                     vfpfcnvrt@ap:
  6519                           
  6520                           ; 1 bytes @ 0x43
  6521  0063                     	ds	1
  6522  0064                     ??_vfpfcnvrt:
  6523                           
  6524                           ; 1 bytes @ 0x44
  6525  0064                     	ds	6
  6526                           
  6527                           	psect	maintext
  6528  006F                     __pmaintext:	
  6529 ;;
  6530 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
  6531 ;;
  6532 ;; *************** function _main *****************
  6533 ;; Defined at:
  6534 ;;		line 376 in file "main.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;  textlen         1    0        unsigned char 
  6539 ;;  level           1    0        unsigned char 
  6540 ;; Return value:  Size  Location     Type
  6541 ;;                  1    wreg      void 
  6542 ;; Registers used:
  6543 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : B1F/0
  6546 ;;		On exit  : 1F/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6551 ;;      Temps:          0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6552 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6553 ;;Total ram usage:        7 bytes
  6554 ;; Hardware stack levels required when called:   16
  6555 ;; This function calls:
  6556 ;;		_DATAEE_ReadByte
  6557 ;;		_DATAEE_WriteByte
  6558 ;;		_DELAY_milliseconds
  6559 ;;		_SYSTEM_Initialize
  6560 ;;		_TMR1_Initialize
  6561 ;;		_TMR1_StartTimer
  6562 ;;		___lbmod
  6563 ;;		___wmul
  6564 ;;		_chk6422warning
  6565 ;;		_i2c_lcd_clear
  6566 ;;		_i2c_lcd_home
  6567 ;;		_i2c_lcd_init
  6568 ;;		_i2c_lcd_puts
  6569 ;;		_i2c_lcd_ulcursor_off
  6570 ;;		_i2c_read1ByteRegister
  6571 ;;		_i2c_writeNBytes
  6572 ;;		_init_pcm9211
  6573 ;;		_init_tas6422
  6574 ;;		_lcd_disp_param
  6575 ;;		_puts_led
  6576 ;;		_set_gains
  6577 ;;		_set_gainstr
  6578 ;;		_set_source
  6579 ;;		_sprintf
  6580 ;;		_strcpy
  6581 ;; This function is called by:
  6582 ;;		Startup code after reset
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           
  6587                           ;psect for function _main
  6588  006F                     _main:
  6589                           
  6590                           ;main.c: 378:     static unsigned char count;;main.c: 379:     char level;;main.c: 380: 
      +                              unsigned char textlen;;main.c: 386:     SYSTEM_Initialize();
  6591                           
  6592                           ;incstack = 0
  6593                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6594  006F  319B  2372  3180   	fcall	_SYSTEM_Initialize
  6595                           
  6596                           ;main.c: 387:     DELAY_milliseconds(500);
  6597  0072  30F4               	movlw	244
  6598  0073  00A3               	movwf	DELAY_milliseconds@milliseconds
  6599  0074  3001               	movlw	1
  6600  0075  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  6601  0076  319B  2398  3180   	fcall	_DELAY_milliseconds
  6602                           
  6603                           ;main.c: 389:     TMR1_Initialize();
  6604  0079  319D  256D  3180   	fcall	_TMR1_Initialize
  6605                           
  6606                           ;main.c: 390:     TMR1_StartTimer();
  6607  007C  3180  2002  3180   	fcall	_TMR1_StartTimer
  6608                           
  6609                           ;main.c: 392:      PIE1bits.TMR1IE = 1;
  6610  007F  0021               	movlb	1	; select bank1
  6611  0080  1411               	bsf	17,0	;volatile
  6612                           
  6613                           ;main.c: 393:      INTCONbits.PEIE = 1;
  6614  0081  170B               	bsf	11,6	;volatile
  6615                           
  6616                           ;main.c: 394:      INTCONbits.GIE = 1;
  6617  0082  178B               	bsf	11,7	;volatile
  6618                           
  6619                           ;main.c: 396:      (INTCONbits.GIE = 1);
  6620  0083  178B               	bsf	11,7	;volatile
  6621                           
  6622                           ;main.c: 398:     (INTCONbits.PEIE = 1);
  6623  0084  170B               	bsf	11,6	;volatile
  6624                           
  6625                           ;main.c: 401:     DELAY_milliseconds(100);
  6626  0085  3064               	movlw	100
  6627  0086  0020               	movlb	0	; select bank0
  6628  0087  00A3               	movwf	DELAY_milliseconds@milliseconds
  6629  0088  3000               	movlw	0
  6630  0089  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  6631  008A  319B  2398  3180   	fcall	_DELAY_milliseconds
  6632                           
  6633                           ;main.c: 404:  if(DATAEE_ReadByte(0x00 == 0xff))
  6634  008D  3000               	movlw	0
  6635  008E  00A3               	movwf	DATAEE_ReadByte@bAdd
  6636  008F  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6637  0090  319B  2339  3180   	fcall	_DATAEE_ReadByte
  6638  0093  3A00               	xorlw	0
  6639  0094  1903               	skipnz
  6640  0095  28CB               	goto	l7736
  6641                           
  6642                           ;main.c: 405:         {;main.c: 407:          DATAEE_WriteByte(0x10, current_volume=146)
      +                          ;
  6643  0096  3010               	movlw	16
  6644  0097  0020               	movlb	0	; select bank0
  6645  0098  00A9               	movwf	DATAEE_WriteByte@bAdd
  6646  0099  3000               	movlw	0
  6647  009A  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  6648  009B  3092               	movlw	146
  6649  009C  00EC               	movwf	_current_volume
  6650  009D  0022               	movlb	2	; select bank2
  6651  009E  00E8               	movwf	??_main^(0+256)
  6652  009F  0868               	movf	??_main^(0+256),w
  6653  00A0  0020               	movlb	0	; select bank0
  6654  00A1  00AB               	movwf	DATAEE_WriteByte@bData
  6655  00A2  319E  263B  3180   	fcall	_DATAEE_WriteByte
  6656                           
  6657                           ;main.c: 408:          DATAEE_WriteByte(0x11, current_balance=0);
  6658  00A5  3011               	movlw	17
  6659  00A6  00A9               	movwf	DATAEE_WriteByte@bAdd
  6660  00A7  3000               	movlw	0
  6661  00A8  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  6662  00A9  0021               	movlb	1	; select bank1
  6663  00AA  01E7               	clrf	_current_balance^(0+128)
  6664  00AB  0020               	movlb	0	; select bank0
  6665  00AC  01AB               	clrf	DATAEE_WriteByte@bData
  6666  00AD  319E  263B  3180   	fcall	_DATAEE_WriteByte
  6667                           
  6668                           ;main.c: 409:          DATAEE_WriteByte(0x12, current_source=2);
  6669  00B0  3012               	movlw	18
  6670  00B1  00A9               	movwf	DATAEE_WriteByte@bAdd
  6671  00B2  3000               	movlw	0
  6672  00B3  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  6673  00B4  3002               	movlw	2
  6674  00B5  0021               	movlb	1	; select bank1
  6675  00B6  00E8               	movwf	_current_source^(0+128)
  6676  00B7  0022               	movlb	2	; select bank2
  6677  00B8  00E8               	movwf	??_main^(0+256)
  6678  00B9  0868               	movf	??_main^(0+256),w
  6679  00BA  0020               	movlb	0	; select bank0
  6680  00BB  00AB               	movwf	DATAEE_WriteByte@bData
  6681  00BC  319E  263B  3180   	fcall	_DATAEE_WriteByte
  6682                           
  6683                           ;main.c: 410:          DATAEE_WriteByte(0x13, current_direction = 0);
  6684  00BF  3013               	movlw	19
  6685  00C0  00A9               	movwf	DATAEE_WriteByte@bAdd
  6686  00C1  3000               	movlw	0
  6687  00C2  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  6688  00C3  0021               	movlb	1	; select bank1
  6689  00C4  01E6               	clrf	_current_direction^(0+128)
  6690  00C5  0020               	movlb	0	; select bank0
  6691  00C6  01AB               	clrf	DATAEE_WriteByte@bData
  6692  00C7  319E  263B  3180   	fcall	_DATAEE_WriteByte
  6693                           
  6694                           ;main.c: 411:         }
  6695  00CA  28FE               	goto	l7738
  6696  00CB                     l7736:
  6697                           
  6698                           ;main.c: 413:         {;main.c: 415:         current_volume = DATAEE_ReadByte(0x10);
  6699  00CB  3010               	movlw	16
  6700  00CC  0020               	movlb	0	; select bank0
  6701  00CD  00A3               	movwf	DATAEE_ReadByte@bAdd
  6702  00CE  3000               	movlw	0
  6703  00CF  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6704  00D0  319B  2339  3180   	fcall	_DATAEE_ReadByte
  6705  00D3  0022               	movlb	2	; select bank2
  6706  00D4  00E8               	movwf	??_main^(0+256)
  6707  00D5  0868               	movf	??_main^(0+256),w
  6708  00D6  0020               	movlb	0	; select bank0
  6709  00D7  00EC               	movwf	_current_volume
  6710                           
  6711                           ;main.c: 416:         current_balance = DATAEE_ReadByte(0x11);
  6712  00D8  3011               	movlw	17
  6713  00D9  00A3               	movwf	DATAEE_ReadByte@bAdd
  6714  00DA  3000               	movlw	0
  6715  00DB  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6716  00DC  319B  2339  3180   	fcall	_DATAEE_ReadByte
  6717  00DF  0022               	movlb	2	; select bank2
  6718  00E0  00E8               	movwf	??_main^(0+256)
  6719  00E1  0868               	movf	??_main^(0+256),w
  6720  00E2  0021               	movlb	1	; select bank1
  6721  00E3  00E7               	movwf	_current_balance^(0+128)
  6722                           
  6723                           ;main.c: 417:         current_source = DATAEE_ReadByte(0x12);
  6724  00E4  3012               	movlw	18
  6725  00E5  0020               	movlb	0	; select bank0
  6726  00E6  00A3               	movwf	DATAEE_ReadByte@bAdd
  6727  00E7  3000               	movlw	0
  6728  00E8  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6729  00E9  319B  2339  3180   	fcall	_DATAEE_ReadByte
  6730  00EC  0022               	movlb	2	; select bank2
  6731  00ED  00E8               	movwf	??_main^(0+256)
  6732  00EE  0868               	movf	??_main^(0+256),w
  6733  00EF  0021               	movlb	1	; select bank1
  6734  00F0  00E8               	movwf	_current_source^(0+128)
  6735                           
  6736                           ;main.c: 418:         current_direction = DATAEE_ReadByte(0x13);
  6737  00F1  3013               	movlw	19
  6738  00F2  0020               	movlb	0	; select bank0
  6739  00F3  00A3               	movwf	DATAEE_ReadByte@bAdd
  6740  00F4  3000               	movlw	0
  6741  00F5  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6742  00F6  319B  2339  3180   	fcall	_DATAEE_ReadByte
  6743  00F9  0022               	movlb	2	; select bank2
  6744  00FA  00E8               	movwf	??_main^(0+256)
  6745  00FB  0868               	movf	??_main^(0+256),w
  6746  00FC  0021               	movlb	1	; select bank1
  6747  00FD  00E6               	movwf	_current_direction^(0+128)
  6748  00FE                     l7738:
  6749                           
  6750                           ;main.c: 422:      init_pcm9211();
  6751  00FE  3197  2744  3180   	fcall	_init_pcm9211
  6752                           
  6753                           ;main.c: 423:      init_tas6422();
  6754  0101  3194  2499  3180   	fcall	_init_tas6422
  6755                           
  6756                           ;main.c: 426:     i2c_lcd_init();
  6757  0104  3194  2443  3180   	fcall	_i2c_lcd_init
  6758                           
  6759                           ;main.c: 427:     i2c_lcd_ulcursor_off();
  6760  0107  319B  2355  3180   	fcall	_i2c_lcd_ulcursor_off
  6761                           
  6762                           ;main.c: 428:     i2c_lcd_home();
  6763  010A  319B  232C  3180   	fcall	_i2c_lcd_home
  6764                           
  6765                           ;main.c: 429:     sprintf(lcdbuff,"Firmware: 2020OCT11");
  6766  010D  30A0               	movlw	low _lcdbuff
  6767  010E  0021               	movlb	1	; select bank1
  6768  010F  00C0               	movwf	sprintf@s^(0+128)
  6769  0110  3002               	movlw	high _lcdbuff
  6770  0111  00C1               	movwf	(sprintf@s+1)^(0+128)
  6771  0112  3095               	movlw	low (STR_7| (0+32768))
  6772  0113  00C2               	movwf	sprintf@fmt^(0+128)
  6773  0114  30A0               	movlw	high (STR_7| (0+32768))
  6774  0115  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  6775  0116  319E  267D  3180   	fcall	_sprintf
  6776                           
  6777                           ;main.c: 430:     i2c_lcd_puts(lcdbuff);
  6778  0119  30A0               	movlw	low _lcdbuff
  6779  011A  0020               	movlb	0	; select bank0
  6780  011B  00B7               	movwf	i2c_lcd_puts@s
  6781  011C  3002               	movlw	high _lcdbuff
  6782  011D  00B8               	movwf	i2c_lcd_puts@s+1
  6783  011E  319C  247D  3180   	fcall	_i2c_lcd_puts
  6784                           
  6785                           ;main.c: 431:     DELAY_milliseconds(800);
  6786  0121  3020               	movlw	32
  6787  0122  00A3               	movwf	DELAY_milliseconds@milliseconds
  6788  0123  3003               	movlw	3
  6789  0124  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  6790  0125  319B  2398  3180   	fcall	_DELAY_milliseconds
  6791                           
  6792                           ;main.c: 432:     i2c_lcd_clear();
  6793  0128  319B  231F  3180   	fcall	_i2c_lcd_clear
  6794                           
  6795                           ;main.c: 435:  RE_pos = current_volume;
  6796  012B  0020               	movlb	0	; select bank0
  6797  012C  086C               	movf	_current_volume,w
  6798  012D  0022               	movlb	2	; select bank2
  6799  012E  00E8               	movwf	??_main^(0+256)
  6800  012F  0868               	movf	??_main^(0+256),w
  6801  0130  0021               	banksel	_RE_pos
  6802  0131  00E9               	movwf	_RE_pos& (0+127)
  6803                           
  6804                           ;main.c: 436:  set_gains(current_volume, current_balance);
  6805  0132  0021               	movlb	1	; select bank1
  6806  0133  0867               	movf	_current_balance^(0+128),w
  6807  0134  0022               	movlb	2	; select bank2
  6808  0135  00E8               	movwf	??_main^(0+256)
  6809  0136  0868               	movf	??_main^(0+256),w
  6810  0137  0020               	movlb	0	; select bank0
  6811  0138  00BA               	movwf	set_gains@bal
  6812  0139  086C               	movf	_current_volume,w
  6813  013A  3195  2502  3180   	fcall	_set_gains
  6814                           
  6815                           ;main.c: 437:   i2c_writeNBytes(0x6a, &TAS_PLAY, 2 );
  6816  013D  304C               	movlw	(low (_TAS_PLAY| (0+256)))& (0+255)
  6817  013E  0022               	movlb	2	; select bank2
  6818  013F  00E8               	movwf	??_main^(0+256)
  6819  0140  0868               	movf	??_main^(0+256),w
  6820  0141  0020               	movlb	0	; select bank0
  6821  0142  00AC               	movwf	i2c_writeNBytes@data
  6822  0143  3002               	movlw	2
  6823  0144  00AD               	movwf	i2c_writeNBytes@len
  6824  0145  3000               	movlw	0
  6825  0146  00AE               	movwf	i2c_writeNBytes@len+1
  6826  0147  306A               	movlw	106
  6827  0148  319E  26E9  3180   	fcall	_i2c_writeNBytes
  6828                           
  6829                           ;main.c: 440: i2c_writeNBytes(0x6a, &TAS_CLEAR_FALT, 2 );
  6830  014B  304A               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
  6831  014C  0022               	movlb	2	; select bank2
  6832  014D  00E8               	movwf	??_main^(0+256)
  6833  014E  0868               	movf	??_main^(0+256),w
  6834  014F  0020               	movlb	0	; select bank0
  6835  0150  00AC               	movwf	i2c_writeNBytes@data
  6836  0151  3002               	movlw	2
  6837  0152  00AD               	movwf	i2c_writeNBytes@len
  6838  0153  3000               	movlw	0
  6839  0154  00AE               	movwf	i2c_writeNBytes@len+1
  6840  0155  306A               	movlw	106
  6841  0156  319E  26E9  3180   	fcall	_i2c_writeNBytes
  6842                           
  6843                           ;main.c: 441: i2c_writeNBytes(0x6a, &TAS_NORMAL, 2 );
  6844  0159  3048               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
  6845  015A  0022               	movlb	2	; select bank2
  6846  015B  00E8               	movwf	??_main^(0+256)
  6847  015C  0868               	movf	??_main^(0+256),w
  6848  015D  0020               	movlb	0	; select bank0
  6849  015E  00AC               	movwf	i2c_writeNBytes@data
  6850  015F  3002               	movlw	2
  6851  0160  00AD               	movwf	i2c_writeNBytes@len
  6852  0161  3000               	movlw	0
  6853  0162  00AE               	movwf	i2c_writeNBytes@len+1
  6854  0163  306A               	movlw	106
  6855  0164  319E  26E9  3180   	fcall	_i2c_writeNBytes
  6856                           
  6857                           ;main.c: 443:   set_source(current_source);
  6858  0167  0021               	movlb	1	; select bank1
  6859  0168  0868               	movf	_current_source^(0+128),w
  6860  0169  3186  26E9  3180   	fcall	_set_source
  6861                           
  6862                           ;main.c: 445: blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  6863  016C  0022               	banksel	_blink_rate
  6864  016D  01A3               	clrf	_blink_rate& (0+127)
  6865  016E  01A4               	clrf	(_blink_rate& (0+127)+1)
  6866  016F  01A5               	clrf	(_blink_rate& (0+127)+2)
  6867                           
  6868                           ;main.c: 446: puts_led("FAd");
  6869  0170  3024               	movlw	low (STR_8| (0+32768))
  6870  0171  0020               	movlb	0	; select bank0
  6871  0172  00AF               	movwf	puts_led@str
  6872  0173  30A1               	movlw	high (STR_8| (0+32768))
  6873  0174  00B0               	movwf	puts_led@str+1
  6874  0175  3188  2002  3180   	fcall	_puts_led
  6875                           
  6876                           ;main.c: 447: DELAY_milliseconds(1000);
  6877  0178  30E8               	movlw	232
  6878  0179  00A3               	movwf	DELAY_milliseconds@milliseconds
  6879  017A  3003               	movlw	3
  6880  017B  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  6881  017C  319B  2398  3180   	fcall	_DELAY_milliseconds
  6882                           
  6883                           ;main.c: 450: lcd_disp_param();
  6884  017F  318E  266D  3180   	fcall	_lcd_disp_param
  6885                           
  6886                           ;main.c: 451: current_volume = RE_pos;
  6887  0182  0021               	banksel	_RE_pos
  6888  0183  0869               	movf	_RE_pos& (0+127),w
  6889  0184  0022               	movlb	2	; select bank2
  6890  0185  00E8               	movwf	??_main^(0+256)
  6891  0186  0868               	movf	??_main^(0+256),w
  6892  0187  0020               	movlb	0	; select bank0
  6893  0188  00EC               	movwf	_current_volume
  6894                           
  6895                           ;main.c: 452: set_gainstr(current_volume);
  6896  0189  086C               	movf	_current_volume,w
  6897  018A  3196  26A5  3180   	fcall	_set_gainstr
  6898  018D                     l7780:
  6899                           
  6900                           ;main.c: 454:         {;main.c: 455:         if (button1 == 1)
  6901  018D  0022               	banksel	_button1
  6902  018E  0345               	decf	_button1& (0+127),w
  6903  018F  1D03               	btfss	3,2
  6904  0190  2A66               	goto	l7824
  6905                           
  6906                           ;main.c: 456:                     {;main.c: 457:                     RE_pos = current_so
      +                          urce;
  6907  0191  0021               	movlb	1	; select bank1
  6908  0192  0868               	movf	_current_source^(0+128),w
  6909  0193  0022               	movlb	2	; select bank2
  6910  0194  00E8               	movwf	??_main^(0+256)
  6911  0195  0868               	movf	??_main^(0+256),w
  6912  0196  0021               	banksel	_RE_pos
  6913  0197  00E9               	movwf	_RE_pos& (0+127)
  6914                           
  6915                           ;main.c: 458:                     puts_led("SOC");
  6916  0198  300C               	movlw	low (STR_9| (0+32768))
  6917  0199  0020               	movlb	0	; select bank0
  6918  019A  00AF               	movwf	puts_led@str
  6919  019B  30A1               	movlw	high (STR_9| (0+32768))
  6920  019C  00B0               	movwf	puts_led@str+1
  6921  019D  3188  2002  3180   	fcall	_puts_led
  6922                           
  6923                           ;main.c: 459:                     button1 = 0;
  6924  01A0  0022               	banksel	_button1
  6925  01A1  01C5               	clrf	_button1& (0+127)
  6926                           
  6927                           ;main.c: 460:                     DELAY_milliseconds(800);
  6928  01A2  3020               	movlw	32
  6929  01A3  0020               	movlb	0	; select bank0
  6930  01A4  00A3               	movwf	DELAY_milliseconds@milliseconds
  6931  01A5  3003               	movlw	3
  6932  01A6  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  6933  01A7  319B  2398  3180   	fcall	_DELAY_milliseconds
  6934                           
  6935                           ;main.c: 461:                     puts_led("$B!!!!!!(B");
  6936  01AA  30E8               	movlw	low (STR_10| (0+32768))
  6937  01AB  00AF               	movwf	puts_led@str
  6938  01AC  30A0               	movlw	high (STR_10| (0+32768))
  6939  01AD  00B0               	movwf	puts_led@str+1
  6940  01AE  3188  2002  3180   	fcall	_puts_led
  6941                           
  6942                           ;main.c: 462:                     DELAY_milliseconds(200);
  6943  01B1  30C8               	movlw	200
  6944  01B2  00A3               	movwf	DELAY_milliseconds@milliseconds
  6945  01B3  3000               	movlw	0
  6946  01B4  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  6947  01B5  319B  2398  3180   	fcall	_DELAY_milliseconds
  6948                           
  6949                           ;main.c: 463:                     button1 = 0;
  6950  01B8  0022               	banksel	_button1
  6951  01B9  01C5               	clrf	_button1& (0+127)
  6952                           
  6953                           ;main.c: 465:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  6954  01BA  3023               	movlw	low _blink_rate
  6955  01BB  0086               	movwf	6
  6956  01BC  3001               	movlw	high _blink_rate
  6957  01BD  0087               	movwf	7
  6958  01BE  3141               	addfsr 1,1
  6959  01BF  3001               	movlw	1
  6960  01C0  0022               	banksel	_blink_rate
  6961  01C1  00A3               	movwf	_blink_rate& (0+127)
  6962  01C2  3FC0               	movwi [0]fsr1
  6963  01C3  0022               	movlb	2	; select bank2
  6964  01C4  00E8               	movwf	??_main^(0+256)
  6965  01C5  3025               	movlw	low (_blink_rate+2)
  6966  01C6  0086               	movwf	6
  6967  01C7  3001               	movlw	high (_blink_rate+2)
  6968  01C8  0087               	movwf	7
  6969  01C9  0868               	movf	??_main^(0+256),w
  6970  01CA  0081               	movwf	1
  6971  01CB                     l7802:	
  6972                           ;main.c: 466:                     while (button1 == 0)
  6973                           
  6974                           
  6975                           ;main.c: 466:                     while (button1 == 0)
  6976  01CB  0022               	banksel	_button1
  6977  01CC  0845               	movf	_button1& (0+127),w
  6978  01CD  1D03               	btfss	3,2
  6979  01CE  2A0F               	goto	l7804
  6980                           
  6981                           ;main.c: 467:                         {;main.c: 468:                          puts_led(l
      +                          ed_src_name[current_source % 5]);
  6982  01CF  3005               	movlw	5
  6983  01D0  0022               	movlb	2	; select bank2
  6984  01D1  00E8               	movwf	??_main^(0+256)
  6985  01D2  0868               	movf	??_main^(0+256),w
  6986  01D3  0020               	movlb	0	; select bank0
  6987  01D4  00A3               	movwf	___lbmod@divisor
  6988  01D5  0021               	movlb	1	; select bank1
  6989  01D6  0868               	movf	_current_source^(0+128),w
  6990  01D7  319D  25FB  3180   	fcall	___lbmod
  6991  01DA  0022               	movlb	2	; select bank2
  6992  01DB  00E9               	movwf	(??_main+1)^(0+256)
  6993  01DC  01EA               	clrf	((??_main+1)^(0+256)+1)
  6994  01DD  0869               	movf	(??_main+1)^(0+256),w
  6995  01DE  0020               	movlb	0	; select bank0
  6996  01DF  00A9               	movwf	___wmul@multiplier
  6997  01E0  0022               	movlb	2	; select bank2
  6998  01E1  086A               	movf	(??_main+2)^(0+256),w
  6999  01E2  0020               	movlb	0	; select bank0
  7000  01E3  00AA               	movwf	___wmul@multiplier+1
  7001  01E4  3007               	movlw	7
  7002  01E5  00AB               	movwf	___wmul@multiplicand
  7003  01E6  3000               	movlw	0
  7004  01E7  00AC               	movwf	___wmul@multiplicand+1
  7005  01E8  319D  2588  3180   	fcall	___wmul
  7006  01EB  3052               	movlw	low (_led_src_name| (0+32768))
  7007  01EC  0022               	movlb	2	; select bank2
  7008  01ED  00EB               	movwf	(??_main+3)^(0+256)
  7009  01EE  30A0               	movlw	high (_led_src_name| (0+32768))
  7010  01EF  00EC               	movwf	((??_main+3)^(0+256)+1)
  7011  01F0  0020               	movlb	0	; select bank0
  7012  01F1  0829               	movf	?___wmul,w
  7013  01F2  0022               	movlb	2	; select bank2
  7014  01F3  076B               	addwf	(??_main+3)^(0+256),w
  7015  01F4  00ED               	movwf	(??_main+5)^(0+256)
  7016  01F5  0020               	movlb	0	; select bank0
  7017  01F6  082A               	movf	?___wmul+1,w
  7018  01F7  0022               	movlb	2	; select bank2
  7019  01F8  3D6C               	addwfc	(??_main+4)^(0+256),w
  7020  01F9  00EE               	movwf	(??_main+6)^(0+256)
  7021  01FA  086D               	movf	(??_main+5)^(0+256),w
  7022  01FB  0020               	movlb	0	; select bank0
  7023  01FC  00AF               	movwf	puts_led@str
  7024  01FD  0022               	movlb	2	; select bank2
  7025  01FE  086E               	movf	(??_main+6)^(0+256),w
  7026  01FF  0020               	movlb	0	; select bank0
  7027  0200  00B0               	movwf	puts_led@str+1
  7028  0201  3188  2002  3180   	fcall	_puts_led
  7029                           
  7030                           ;main.c: 469:                          lcd_disp_param();
  7031  0204  318E  266D  3180   	fcall	_lcd_disp_param
  7032                           
  7033                           ;main.c: 470:                          current_source = RE_pos;
  7034  0207  0021               	banksel	_RE_pos
  7035  0208  0869               	movf	_RE_pos& (0+127),w
  7036  0209  0022               	movlb	2	; select bank2
  7037  020A  00E8               	movwf	??_main^(0+256)
  7038  020B  0868               	movf	??_main^(0+256),w
  7039  020C  0021               	movlb	1	; select bank1
  7040  020D  00E8               	movwf	_current_source^(0+128)
  7041  020E  29CB               	goto	l7802
  7042  020F                     l7804:
  7043                           
  7044                           ;main.c: 472:                     button1 = 0;
  7045  020F  01C5               	clrf	_button1& (0+127)
  7046                           
  7047                           ;main.c: 474:                     i2c_writeNBytes(0x6a,&TAS_MUTE, 2 );
  7048  0210  30A5               	movlw	(low (_TAS_MUTE| (0+256)))& (0+255)
  7049  0211  0022               	movlb	2	; select bank2
  7050  0212  00E8               	movwf	??_main^(0+256)
  7051  0213  0868               	movf	??_main^(0+256),w
  7052  0214  0020               	movlb	0	; select bank0
  7053  0215  00AC               	movwf	i2c_writeNBytes@data
  7054  0216  3002               	movlw	2
  7055  0217  00AD               	movwf	i2c_writeNBytes@len
  7056  0218  3000               	movlw	0
  7057  0219  00AE               	movwf	i2c_writeNBytes@len+1
  7058  021A  306A               	movlw	106
  7059  021B  319E  26E9  3180   	fcall	_i2c_writeNBytes
  7060                           
  7061                           ;main.c: 475:                     DATAEE_WriteByte(0x00, 0x00);
  7062  021E  3000               	movlw	0
  7063  021F  00A9               	movwf	DATAEE_WriteByte@bAdd
  7064  0220  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7065  0221  01AB               	clrf	DATAEE_WriteByte@bData
  7066  0222  319E  263B  3180   	fcall	_DATAEE_WriteByte
  7067                           
  7068                           ;main.c: 476:                     DATAEE_WriteByte(0x12, (current_source % 5));
  7069  0225  3012               	movlw	18
  7070  0226  00A9               	movwf	DATAEE_WriteByte@bAdd
  7071  0227  3000               	movlw	0
  7072  0228  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7073  0229  3005               	movlw	5
  7074  022A  0022               	movlb	2	; select bank2
  7075  022B  00E8               	movwf	??_main^(0+256)
  7076  022C  0868               	movf	??_main^(0+256),w
  7077  022D  0020               	movlb	0	; select bank0
  7078  022E  00A3               	movwf	___lbmod@divisor
  7079  022F  0021               	movlb	1	; select bank1
  7080  0230  0868               	movf	_current_source^(0+128),w
  7081  0231  319D  25FB  3180   	fcall	___lbmod
  7082  0234  0022               	movlb	2	; select bank2
  7083  0235  00E9               	movwf	(??_main+1)^(0+256)
  7084  0236  0869               	movf	(??_main+1)^(0+256),w
  7085  0237  0020               	movlb	0	; select bank0
  7086  0238  00AB               	movwf	DATAEE_WriteByte@bData
  7087  0239  319E  263B  3180   	fcall	_DATAEE_WriteByte
  7088                           
  7089                           ;main.c: 477:                     set_source(current_source);
  7090  023C  0021               	movlb	1	; select bank1
  7091  023D  0868               	movf	_current_source^(0+128),w
  7092  023E  3186  26E9  3180   	fcall	_set_source
  7093                           
  7094                           ;main.c: 478:                      RE_pos = current_volume;
  7095  0241  086C               	movf	_current_volume,w
  7096  0242  0022               	movlb	2	; select bank2
  7097  0243  00E8               	movwf	??_main^(0+256)
  7098  0244  0868               	movf	??_main^(0+256),w
  7099  0245  0021               	banksel	_RE_pos
  7100  0246  00E9               	movwf	_RE_pos& (0+127)
  7101                           
  7102                           ;main.c: 479:                     set_gainstr(current_volume);
  7103  0247  0020               	movlb	0	; select bank0
  7104  0248  086C               	movf	_current_volume,w
  7105  0249  3196  26A5  3180   	fcall	_set_gainstr
  7106                           
  7107                           ;main.c: 480:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  7108  024C  0022               	banksel	_blink_rate
  7109  024D  01A3               	clrf	_blink_rate& (0+127)
  7110  024E  01A4               	clrf	(_blink_rate& (0+127)+1)
  7111  024F  01A5               	clrf	(_blink_rate& (0+127)+2)
  7112                           
  7113                           ;main.c: 481:                     puts_led(ledstr);
  7114  0250  3020               	movlw	low _ledstr
  7115  0251  0020               	movlb	0	; select bank0
  7116  0252  00AF               	movwf	puts_led@str
  7117  0253  3002               	movlw	high _ledstr
  7118  0254  00B0               	movwf	puts_led@str+1
  7119  0255  3188  2002  3180   	fcall	_puts_led
  7120                           
  7121                           ;main.c: 483:                     i2c_writeNBytes(0x6a,&TAS_PLAY, 2 );
  7122  0258  304C               	movlw	(low (_TAS_PLAY| (0+256)))& (0+255)
  7123  0259  0022               	movlb	2	; select bank2
  7124  025A  00E8               	movwf	??_main^(0+256)
  7125  025B  0868               	movf	??_main^(0+256),w
  7126  025C  0020               	movlb	0	; select bank0
  7127  025D  00AC               	movwf	i2c_writeNBytes@data
  7128  025E  3002               	movlw	2
  7129  025F  00AD               	movwf	i2c_writeNBytes@len
  7130  0260  3000               	movlw	0
  7131  0261  00AE               	movwf	i2c_writeNBytes@len+1
  7132  0262  306A               	movlw	106
  7133  0263  319E  26E9  3180   	fcall	_i2c_writeNBytes
  7134  0266                     l7824:
  7135                           
  7136                           ;main.c: 485:         if (button1 == 2)
  7137  0266  3002               	movlw	2
  7138  0267  0022               	banksel	_button1
  7139  0268  0645               	xorwf	_button1& (0+127),w
  7140  0269  1D03               	btfss	3,2
  7141  026A  2BF6               	goto	l7910
  7142                           
  7143                           ;main.c: 486:                     {;main.c: 488:                      DATAEE_WriteByte(0
      +                          x00, 0x00);
  7144  026B  3000               	movlw	0
  7145  026C  0020               	movlb	0	; select bank0
  7146  026D  00A9               	movwf	DATAEE_WriteByte@bAdd
  7147  026E  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7148  026F  01AB               	clrf	DATAEE_WriteByte@bData
  7149  0270  319E  263B  3180   	fcall	_DATAEE_WriteByte
  7150                           
  7151                           ;main.c: 489:                     RE_pos = 64 + current_balance ;
  7152  0273  0021               	movlb	1	; select bank1
  7153  0274  0867               	movf	_current_balance^(0+128),w
  7154  0275  3E40               	addlw	64
  7155  0276  0022               	movlb	2	; select bank2
  7156  0277  00E8               	movwf	??_main^(0+256)
  7157  0278  0868               	movf	??_main^(0+256),w
  7158  0279  0021               	banksel	_RE_pos
  7159  027A  00E9               	movwf	_RE_pos& (0+127)
  7160                           
  7161                           ;main.c: 490:                     puts_led("BAL");
  7162  027B  3014               	movlw	low (STR_11| (0+32768))
  7163  027C  0020               	movlb	0	; select bank0
  7164  027D  00AF               	movwf	puts_led@str
  7165  027E  30A1               	movlw	high (STR_11| (0+32768))
  7166  027F  00B0               	movwf	puts_led@str+1
  7167  0280  3188  2002  3180   	fcall	_puts_led
  7168                           
  7169                           ;main.c: 491:                     DELAY_milliseconds(800);
  7170  0283  3020               	movlw	32
  7171  0284  00A3               	movwf	DELAY_milliseconds@milliseconds
  7172  0285  3003               	movlw	3
  7173  0286  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7174  0287  319B  2398  3180   	fcall	_DELAY_milliseconds
  7175                           
  7176                           ;main.c: 492:                     puts_led("$B!!!!!!(B");
  7177  028A  30E8               	movlw	low (STR_10| (0+32768))
  7178  028B  00AF               	movwf	puts_led@str
  7179  028C  30A0               	movlw	high (STR_10| (0+32768))
  7180  028D  00B0               	movwf	puts_led@str+1
  7181  028E  3188  2002  3180   	fcall	_puts_led
  7182                           
  7183                           ;main.c: 493:                     DELAY_milliseconds(200);
  7184  0291  30C8               	movlw	200
  7185  0292  00A3               	movwf	DELAY_milliseconds@milliseconds
  7186  0293  3000               	movlw	0
  7187  0294  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7188  0295  319B  2398  3180   	fcall	_DELAY_milliseconds
  7189                           
  7190                           ;main.c: 494:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  7191  0298  3023               	movlw	low _blink_rate
  7192  0299  0086               	movwf	6
  7193  029A  3001               	movlw	high _blink_rate
  7194  029B  0087               	movwf	7
  7195  029C  3141               	addfsr 1,1
  7196  029D  3001               	movlw	1
  7197  029E  0022               	banksel	_blink_rate
  7198  029F  00A3               	movwf	_blink_rate& (0+127)
  7199  02A0  3FC0               	movwi [0]fsr1
  7200  02A1  0022               	movlb	2	; select bank2
  7201  02A2  00E8               	movwf	??_main^(0+256)
  7202  02A3  3025               	movlw	low (_blink_rate+2)
  7203  02A4  0086               	movwf	6
  7204  02A5  3001               	movlw	high (_blink_rate+2)
  7205  02A6  0087               	movwf	7
  7206  02A7  0868               	movf	??_main^(0+256),w
  7207  02A8  0081               	movwf	1
  7208                           
  7209                           ;main.c: 495:                     button1 = 0;
  7210  02A9  0022               	banksel	_button1
  7211  02AA  01C5               	clrf	_button1& (0+127)
  7212  02AB                     l7844:	
  7213                           ;main.c: 496:                     while (button1 == 0)
  7214                           
  7215                           
  7216                           ;main.c: 496:                     while (button1 == 0)
  7217  02AB  0022               	banksel	_button1
  7218  02AC  0845               	movf	_button1& (0+127),w
  7219  02AD  1D03               	btfss	3,2
  7220  02AE  2AD0               	goto	l7846
  7221                           
  7222                           ;main.c: 497:                         {;main.c: 498:                         sprintf(led
      +                          buff, "%03d",(current_balance=(signed char)(RE_pos-64)));
  7223  02AF  3035               	movlw	low _ledbuff
  7224  02B0  0021               	movlb	1	; select bank1
  7225  02B1  00C0               	movwf	sprintf@s^(0+128)
  7226  02B2  3002               	movlw	high _ledbuff
  7227  02B3  00C1               	movwf	(sprintf@s^(0+128)+1)
  7228  02B4  30FF               	movlw	low (STR_13| (0+32768))
  7229  02B5  00C2               	movwf	sprintf@fmt^(0+128)
  7230  02B6  30A0               	movlw	high (STR_13| (0+32768))
  7231  02B7  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  7232  02B8  0021               	banksel	_RE_pos
  7233  02B9  0869               	movf	_RE_pos& (0+127),w
  7234  02BA  3EC0               	addlw	-64
  7235  02BB  0021               	movlb	1	; select bank1
  7236  02BC  00E7               	movwf	_current_balance^(0+128)
  7237  02BD  00C4               	movwf	(?_sprintf^(0+128)+4)
  7238  02BE  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  7239  02BF  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  7240  02C0  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  7241  02C1  319E  267D  3180   	fcall	_sprintf
  7242                           
  7243                           ;main.c: 499:                         puts_led(ledbuff);
  7244  02C4  3035               	movlw	low _ledbuff
  7245  02C5  0020               	movlb	0	; select bank0
  7246  02C6  00AF               	movwf	puts_led@str
  7247  02C7  3002               	movlw	high _ledbuff
  7248  02C8  00B0               	movwf	puts_led@str+1
  7249  02C9  3188  2002  3180   	fcall	_puts_led
  7250                           
  7251                           ;main.c: 500:                         lcd_disp_param();
  7252  02CC  318E  266D  3180   	fcall	_lcd_disp_param
  7253  02CF  2AAB               	goto	l7844
  7254  02D0                     l7846:
  7255                           
  7256                           ;main.c: 502:                     button1 = 0;
  7257  02D0  01C5               	clrf	_button1& (0+127)
  7258                           
  7259                           ;main.c: 504:                     DATAEE_WriteByte(0x11, current_balance);
  7260  02D1  3011               	movlw	17
  7261  02D2  0020               	movlb	0	; select bank0
  7262  02D3  00A9               	movwf	DATAEE_WriteByte@bAdd
  7263  02D4  3000               	movlw	0
  7264  02D5  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7265  02D6  0021               	movlb	1	; select bank1
  7266  02D7  0867               	movf	_current_balance^(0+128),w
  7267  02D8  0022               	movlb	2	; select bank2
  7268  02D9  00E8               	movwf	??_main^(0+256)
  7269  02DA  0868               	movf	??_main^(0+256),w
  7270  02DB  0020               	movlb	0	; select bank0
  7271  02DC  00AB               	movwf	DATAEE_WriteByte@bData
  7272  02DD  319E  263B  3180   	fcall	_DATAEE_WriteByte
  7273                           
  7274                           ;main.c: 505:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  7275  02E0  0022               	banksel	_blink_rate
  7276  02E1  01A3               	clrf	_blink_rate& (0+127)
  7277  02E2  01A4               	clrf	(_blink_rate& (0+127)+1)
  7278  02E3  01A5               	clrf	(_blink_rate& (0+127)+2)
  7279                           
  7280                           ;main.c: 506:                     sprintf(ledbuff, "%03d",current_balance);
  7281  02E4  3035               	movlw	low _ledbuff
  7282  02E5  0021               	movlb	1	; select bank1
  7283  02E6  00C0               	movwf	sprintf@s^(0+128)
  7284  02E7  3002               	movlw	high _ledbuff
  7285  02E8  00C1               	movwf	(sprintf@s^(0+128)+1)
  7286  02E9  30FF               	movlw	low (STR_13| (0+32768))
  7287  02EA  00C2               	movwf	sprintf@fmt^(0+128)
  7288  02EB  30A0               	movlw	high (STR_13| (0+32768))
  7289  02EC  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  7290  02ED  0867               	movf	_current_balance^(0+128),w
  7291  02EE  00C4               	movwf	(?_sprintf^(0+128)+4)
  7292  02EF  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  7293  02F0  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  7294  02F1  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  7295  02F2  319E  267D  3180   	fcall	_sprintf
  7296                           
  7297                           ;main.c: 507:                     set_gains(current_volume, current_balance);
  7298  02F5  0867               	movf	_current_balance^(0+128),w
  7299  02F6  0022               	movlb	2	; select bank2
  7300  02F7  00E8               	movwf	??_main^(0+256)
  7301  02F8  0868               	movf	??_main^(0+256),w
  7302  02F9  0020               	movlb	0	; select bank0
  7303  02FA  00BA               	movwf	set_gains@bal
  7304  02FB  086C               	movf	_current_volume,w
  7305  02FC  3195  2502  3180   	fcall	_set_gains
  7306                           
  7307                           ;main.c: 508:                     puts_led(ledbuff);
  7308  02FF  3035               	movlw	low _ledbuff
  7309  0300  00AF               	movwf	puts_led@str
  7310  0301  3002               	movlw	high _ledbuff
  7311  0302  00B0               	movwf	puts_led@str+1
  7312  0303  3188  2002  3180   	fcall	_puts_led
  7313                           
  7314                           ;main.c: 509:                     DELAY_milliseconds(1400);
  7315  0306  3078               	movlw	120
  7316  0307  00A3               	movwf	DELAY_milliseconds@milliseconds
  7317  0308  3005               	movlw	5
  7318  0309  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7319  030A  319B  2398  3180   	fcall	_DELAY_milliseconds
  7320                           
  7321                           ;main.c: 511:                     RE_pos = current_direction;
  7322  030D  0021               	movlb	1	; select bank1
  7323  030E  0866               	movf	_current_direction^(0+128),w
  7324  030F  0022               	movlb	2	; select bank2
  7325  0310  00E8               	movwf	??_main^(0+256)
  7326  0311  0868               	movf	??_main^(0+256),w
  7327  0312  0021               	banksel	_RE_pos
  7328  0313  00E9               	movwf	_RE_pos& (0+127)
  7329                           
  7330                           ;main.c: 512:                     puts_led("12S");
  7331  0314  3018               	movlw	low (STR_15| (0+32768))
  7332  0315  0020               	movlb	0	; select bank0
  7333  0316  00AF               	movwf	puts_led@str
  7334  0317  30A1               	movlw	high (STR_15| (0+32768))
  7335  0318  00B0               	movwf	puts_led@str+1
  7336  0319  3188  2002  3180   	fcall	_puts_led
  7337                           
  7338                           ;main.c: 513:                     DELAY_milliseconds(800);
  7339  031C  3020               	movlw	32
  7340  031D  00A3               	movwf	DELAY_milliseconds@milliseconds
  7341  031E  3003               	movlw	3
  7342  031F  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7343  0320  319B  2398  3180   	fcall	_DELAY_milliseconds
  7344                           
  7345                           ;main.c: 514:                     puts_led("$B!!!!!!(B");
  7346  0323  30E8               	movlw	low (STR_10| (0+32768))
  7347  0324  00AF               	movwf	puts_led@str
  7348  0325  30A0               	movlw	high (STR_10| (0+32768))
  7349  0326  00B0               	movwf	puts_led@str+1
  7350  0327  3188  2002  3180   	fcall	_puts_led
  7351                           
  7352                           ;main.c: 515:                     DELAY_milliseconds(200);
  7353  032A  30C8               	movlw	200
  7354  032B  00A3               	movwf	DELAY_milliseconds@milliseconds
  7355  032C  3000               	movlw	0
  7356  032D  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7357  032E  319B  2398  3180   	fcall	_DELAY_milliseconds
  7358                           
  7359                           ;main.c: 516:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  7360  0331  3023               	movlw	low _blink_rate
  7361  0332  0086               	movwf	6
  7362  0333  3001               	movlw	high _blink_rate
  7363  0334  0087               	movwf	7
  7364  0335  3141               	addfsr 1,1
  7365  0336  3001               	movlw	1
  7366  0337  0022               	banksel	_blink_rate
  7367  0338  00A3               	movwf	_blink_rate& (0+127)
  7368  0339  3FC0               	movwi [0]fsr1
  7369  033A  0022               	movlb	2	; select bank2
  7370  033B  00E8               	movwf	??_main^(0+256)
  7371  033C  3025               	movlw	low (_blink_rate+2)
  7372  033D  0086               	movwf	6
  7373  033E  3001               	movlw	high (_blink_rate+2)
  7374  033F  0087               	movwf	7
  7375  0340  0868               	movf	??_main^(0+256),w
  7376  0341  0081               	movwf	1
  7377                           
  7378                           ;main.c: 517:                     button1 = 0;
  7379  0342  0022               	banksel	_button1
  7380  0343  01C5               	clrf	_button1& (0+127)
  7381  0344                     l7882:	
  7382                           ;main.c: 518:                     while (button1 == 0)
  7383                           
  7384                           
  7385                           ;main.c: 518:                     while (button1 == 0)
  7386  0344  0022               	banksel	_button1
  7387  0345  0845               	movf	_button1& (0+127),w
  7388  0346  1D03               	btfss	3,2
  7389  0347  2B86               	goto	l7884
  7390                           
  7391                           ;main.c: 519:                         {;main.c: 520:                         current_dir
      +                          ection = RE_pos%2;
  7392  0348  0021               	banksel	_RE_pos
  7393  0349  0869               	movf	_RE_pos& (0+127),w
  7394  034A  3901               	andlw	1
  7395  034B  0022               	movlb	2	; select bank2
  7396  034C  00E8               	movwf	??_main^(0+256)
  7397  034D  0868               	movf	??_main^(0+256),w
  7398  034E  0021               	movlb	1	; select bank1
  7399  034F  00E6               	movwf	_current_direction^(0+128)
  7400                           
  7401                           ;main.c: 521:                         strcpy(ledbuff, led_i2s_dir[current_direction]);
  7402  0350  3035               	movlw	low _ledbuff
  7403  0351  0020               	movlb	0	; select bank0
  7404  0352  00AF               	movwf	strcpy@dest
  7405  0353  3002               	movlw	high _ledbuff
  7406  0354  00B0               	movwf	strcpy@dest+1
  7407  0355  0021               	movlb	1	; select bank1
  7408  0356  0866               	movf	_current_direction^(0+128),w
  7409  0357  0022               	movlb	2	; select bank2
  7410  0358  00E8               	movwf	??_main^(0+256)
  7411  0359  01E9               	clrf	(??_main^(0+256)+1)
  7412  035A  0868               	movf	??_main^(0+256),w
  7413  035B  0020               	movlb	0	; select bank0
  7414  035C  00A9               	movwf	___wmul@multiplier
  7415  035D  0022               	movlb	2	; select bank2
  7416  035E  0869               	movf	(??_main+1)^(0+256),w
  7417  035F  0020               	movlb	0	; select bank0
  7418  0360  00AA               	movwf	___wmul@multiplier+1
  7419  0361  3007               	movlw	7
  7420  0362  00AB               	movwf	___wmul@multiplicand
  7421  0363  3000               	movlw	0
  7422  0364  00AC               	movwf	___wmul@multiplicand+1
  7423  0365  319D  2588  3180   	fcall	___wmul
  7424  0368  30CF               	movlw	low (_led_i2s_dir| (0+32768))
  7425  0369  0022               	movlb	2	; select bank2
  7426  036A  00EA               	movwf	(??_main+2)^(0+256)
  7427  036B  3098               	movlw	high (_led_i2s_dir| (0+32768))
  7428  036C  00EB               	movwf	((??_main+2)^(0+256)+1)
  7429  036D  0020               	movlb	0	; select bank0
  7430  036E  0829               	movf	?___wmul,w
  7431  036F  0022               	movlb	2	; select bank2
  7432  0370  076A               	addwf	(??_main+2)^(0+256),w
  7433  0371  0020               	movlb	0	; select bank0
  7434  0372  00B1               	movwf	strcpy@src
  7435  0373  082A               	movf	?___wmul+1,w
  7436  0374  0022               	movlb	2	; select bank2
  7437  0375  3D6B               	addwfc	(??_main+3)^(0+256),w
  7438  0376  0020               	movlb	0	; select bank0
  7439  0377  00B2               	movwf	strcpy@src+1
  7440  0378  319E  26A0  3180   	fcall	_strcpy
  7441                           
  7442                           ;main.c: 522:                         puts_led(ledbuff);
  7443  037B  3035               	movlw	low _ledbuff
  7444  037C  00AF               	movwf	puts_led@str
  7445  037D  3002               	movlw	high _ledbuff
  7446  037E  00B0               	movwf	puts_led@str+1
  7447  037F  3188  2002  3180   	fcall	_puts_led
  7448                           
  7449                           ;main.c: 523:                         lcd_disp_param();
  7450  0382  318E  266D  3180   	fcall	_lcd_disp_param
  7451  0385  2B44               	goto	l7882
  7452  0386                     l7884:
  7453                           
  7454                           ;main.c: 525:                     button1 = 0;
  7455  0386  01C5               	clrf	_button1& (0+127)
  7456                           
  7457                           ;main.c: 526:                     DATAEE_WriteByte(0x13, current_direction);
  7458  0387  3013               	movlw	19
  7459  0388  0020               	movlb	0	; select bank0
  7460  0389  00A9               	movwf	DATAEE_WriteByte@bAdd
  7461  038A  3000               	movlw	0
  7462  038B  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7463  038C  0021               	movlb	1	; select bank1
  7464  038D  0866               	movf	_current_direction^(0+128),w
  7465  038E  0022               	movlb	2	; select bank2
  7466  038F  00E8               	movwf	??_main^(0+256)
  7467  0390  0868               	movf	??_main^(0+256),w
  7468  0391  0020               	movlb	0	; select bank0
  7469  0392  00AB               	movwf	DATAEE_WriteByte@bData
  7470  0393  319E  263B  3180   	fcall	_DATAEE_WriteByte
  7471                           
  7472                           ;main.c: 527:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  7473  0396  0022               	banksel	_blink_rate
  7474  0397  01A3               	clrf	_blink_rate& (0+127)
  7475  0398  01A4               	clrf	(_blink_rate& (0+127)+1)
  7476  0399  01A5               	clrf	(_blink_rate& (0+127)+2)
  7477                           
  7478                           ;main.c: 528:                     if( current_direction == 1)
  7479  039A  0021               	movlb	1	; select bank1
  7480  039B  0366               	decf	_current_direction^(0+128),w
  7481  039C  1D03               	btfss	3,2
  7482  039D  2BA0               	goto	l7894
  7483                           
  7484                           ;main.c: 529:                               i2c_writeNBytes(0x40,&I2S_OUT, 2 );
  7485  039E  3066               	movlw	(low (_I2S_OUT| (0+256)))& (0+255)
  7486  039F  2BA1               	goto	L1
  7487  03A0                     l7894:
  7488  03A0  3064               	movlw	(low (_I2S_IN| (0+256)))& (0+255)
  7489  03A1                     L1:
  7490  03A1  0022               	movlb	2	; select bank2
  7491  03A2  00E8               	movwf	??_main^(0+256)
  7492  03A3  0868               	movf	??_main^(0+256),w
  7493  03A4  0020               	movlb	0	; select bank0
  7494  03A5  00AC               	movwf	i2c_writeNBytes@data
  7495  03A6  3002               	movlw	2
  7496  03A7  00AD               	movwf	i2c_writeNBytes@len
  7497  03A8  3000               	movlw	0
  7498  03A9  00AE               	movwf	i2c_writeNBytes@len+1
  7499  03AA  3040               	movlw	64
  7500  03AB  319E  26E9  3180   	fcall	_i2c_writeNBytes
  7501                           
  7502                           ;main.c: 531:                     strcpy(ledbuff, led_i2s_dir[current_direction]);
  7503  03AE  3035               	movlw	low _ledbuff
  7504  03AF  00AF               	movwf	strcpy@dest
  7505  03B0  3002               	movlw	high _ledbuff
  7506  03B1  00B0               	movwf	strcpy@dest+1
  7507  03B2  0021               	movlb	1	; select bank1
  7508  03B3  0866               	movf	_current_direction^(0+128),w
  7509  03B4  0022               	movlb	2	; select bank2
  7510  03B5  00E8               	movwf	??_main^(0+256)
  7511  03B6  01E9               	clrf	(??_main^(0+256)+1)
  7512  03B7  0868               	movf	??_main^(0+256),w
  7513  03B8  0020               	movlb	0	; select bank0
  7514  03B9  00A9               	movwf	___wmul@multiplier
  7515  03BA  0022               	movlb	2	; select bank2
  7516  03BB  0869               	movf	(??_main+1)^(0+256),w
  7517  03BC  0020               	movlb	0	; select bank0
  7518  03BD  00AA               	movwf	___wmul@multiplier+1
  7519  03BE  3007               	movlw	7
  7520  03BF  00AB               	movwf	___wmul@multiplicand
  7521  03C0  3000               	movlw	0
  7522  03C1  00AC               	movwf	___wmul@multiplicand+1
  7523  03C2  319D  2588  3180   	fcall	___wmul
  7524  03C5  30CF               	movlw	low (_led_i2s_dir| (0+32768))
  7525  03C6  0022               	movlb	2	; select bank2
  7526  03C7  00EA               	movwf	(??_main+2)^(0+256)
  7527  03C8  3098               	movlw	high (_led_i2s_dir| (0+32768))
  7528  03C9  00EB               	movwf	((??_main+2)^(0+256)+1)
  7529  03CA  0020               	movlb	0	; select bank0
  7530  03CB  0829               	movf	?___wmul,w
  7531  03CC  0022               	movlb	2	; select bank2
  7532  03CD  076A               	addwf	(??_main+2)^(0+256),w
  7533  03CE  0020               	movlb	0	; select bank0
  7534  03CF  00B1               	movwf	strcpy@src
  7535  03D0  082A               	movf	?___wmul+1,w
  7536  03D1  0022               	movlb	2	; select bank2
  7537  03D2  3D6B               	addwfc	(??_main+3)^(0+256),w
  7538  03D3  0020               	movlb	0	; select bank0
  7539  03D4  00B2               	movwf	strcpy@src+1
  7540  03D5  319E  26A0  3180   	fcall	_strcpy
  7541                           
  7542                           ;main.c: 532:                     puts_led(ledbuff);
  7543  03D8  3035               	movlw	low _ledbuff
  7544  03D9  00AF               	movwf	puts_led@str
  7545  03DA  3002               	movlw	high _ledbuff
  7546  03DB  00B0               	movwf	puts_led@str+1
  7547  03DC  3188  2002  3180   	fcall	_puts_led
  7548                           
  7549                           ;main.c: 533:                     DELAY_milliseconds(1400);
  7550  03DF  3078               	movlw	120
  7551  03E0  00A3               	movwf	DELAY_milliseconds@milliseconds
  7552  03E1  3005               	movlw	5
  7553  03E2  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7554  03E3  319B  2398  3180   	fcall	_DELAY_milliseconds
  7555                           
  7556                           ;main.c: 537:                     RE_pos = current_volume;
  7557  03E6  086C               	movf	_current_volume,w
  7558  03E7  0022               	movlb	2	; select bank2
  7559  03E8  00E8               	movwf	??_main^(0+256)
  7560  03E9  0868               	movf	??_main^(0+256),w
  7561  03EA  0021               	banksel	_RE_pos
  7562  03EB  00E9               	movwf	_RE_pos& (0+127)
  7563                           
  7564                           ;main.c: 538:                     set_gainstr(current_volume);
  7565  03EC  0020               	movlb	0	; select bank0
  7566  03ED  086C               	movf	_current_volume,w
  7567  03EE  3196  26A5  3180   	fcall	_set_gainstr
  7568                           
  7569                           ;main.c: 539:                     lcd_disp_param();
  7570  03F1  318E  266D  3180   	fcall	_lcd_disp_param
  7571                           
  7572                           ;main.c: 540:                     button1 = 0;
  7573  03F4  0022               	banksel	_button1
  7574  03F5  01C5               	clrf	_button1& (0+127)
  7575  03F6                     l7910:
  7576                           
  7577                           ;main.c: 542:          if (current_volume != RE_pos)
  7578  03F6  0020               	movlb	0	; select bank0
  7579  03F7  086C               	movf	_current_volume,w
  7580  03F8  0021               	banksel	_RE_pos
  7581  03F9  0669               	xorwf	_RE_pos& (0+127),w
  7582  03FA  1903               	skipnz
  7583  03FB  2C46               	goto	l7930
  7584                           
  7585                           ;main.c: 543:                     {;main.c: 544:                     current_volume = RE
      +                          _pos;
  7586  03FC  0869               	movf	_RE_pos& (0+127),w
  7587  03FD  0022               	movlb	2	; select bank2
  7588  03FE  00E8               	movwf	??_main^(0+256)
  7589  03FF  0868               	movf	??_main^(0+256),w
  7590  0400  0020               	movlb	0	; select bank0
  7591  0401  00EC               	movwf	_current_volume
  7592                           
  7593                           ;main.c: 545:                     set_gainstr(current_volume);
  7594  0402  086C               	movf	_current_volume,w
  7595  0403  3196  26A5  3180   	fcall	_set_gainstr
  7596                           
  7597                           ;main.c: 546:                     set_gains(current_volume, current_balance);
  7598  0406  0021               	movlb	1	; select bank1
  7599  0407  0867               	movf	_current_balance^(0+128),w
  7600  0408  0022               	movlb	2	; select bank2
  7601  0409  00E8               	movwf	??_main^(0+256)
  7602  040A  0868               	movf	??_main^(0+256),w
  7603  040B  0020               	movlb	0	; select bank0
  7604  040C  00BA               	movwf	set_gains@bal
  7605  040D  086C               	movf	_current_volume,w
  7606  040E  3195  2502  3180   	fcall	_set_gains
  7607                           
  7608                           ;main.c: 547:                     lcd_disp_param();
  7609  0411  318E  266D  3180   	fcall	_lcd_disp_param
  7610                           
  7611                           ;main.c: 548:                    puts_led(ledstr);
  7612  0414  3020               	movlw	low _ledstr
  7613  0415  00AF               	movwf	puts_led@str
  7614  0416  3002               	movlw	high _ledstr
  7615  0417  00B0               	movwf	puts_led@str+1
  7616  0418  3188  2002  3180   	fcall	_puts_led
  7617  041B  2C46               	goto	l7930
  7618  041C                     l7922:
  7619                           
  7620                           ;main.c: 553:                     i2c_writeNBytes(0x6a,&TAS_FS44K, 2 );
  7621  041C  30A9               	movlw	(low (_TAS_FS44K| (0+256)))& (0+255)
  7622  041D  00E8               	movwf	??_main^(0+256)
  7623  041E  0868               	movf	??_main^(0+256),w
  7624  041F  0020               	movlb	0	; select bank0
  7625  0420  00AC               	movwf	i2c_writeNBytes@data
  7626  0421  3002               	movlw	2
  7627  0422  00AD               	movwf	i2c_writeNBytes@len
  7628  0423  3000               	movlw	0
  7629  0424  00AE               	movwf	i2c_writeNBytes@len+1
  7630  0425  306A               	movlw	106
  7631  0426  319E  26E9  3180   	fcall	_i2c_writeNBytes
  7632                           
  7633                           ;main.c: 554:                     break;
  7634  0429  2C64               	goto	l7932
  7635  042A                     l7924:
  7636                           
  7637                           ;main.c: 556:                     i2c_writeNBytes(0x6a,&TAS_FS48K, 2 );
  7638  042A  30A7               	movlw	(low (_TAS_FS48K| (0+256)))& (0+255)
  7639  042B  00E8               	movwf	??_main^(0+256)
  7640  042C  0868               	movf	??_main^(0+256),w
  7641  042D  0020               	movlb	0	; select bank0
  7642  042E  00AC               	movwf	i2c_writeNBytes@data
  7643  042F  3002               	movlw	2
  7644  0430  00AD               	movwf	i2c_writeNBytes@len
  7645  0431  3000               	movlw	0
  7646  0432  00AE               	movwf	i2c_writeNBytes@len+1
  7647  0433  306A               	movlw	106
  7648  0434  319E  26E9  3180   	fcall	_i2c_writeNBytes
  7649                           
  7650                           ;main.c: 557:                     break;
  7651  0437  2C64               	goto	l7932
  7652  0438                     l7926:
  7653                           
  7654                           ;main.c: 559:                     i2c_writeNBytes(0x6a,&TAS_FS96K, 2 );
  7655  0438  304E               	movlw	(low (_TAS_FS96K| (0+256)))& (0+255)
  7656  0439  00E8               	movwf	??_main^(0+256)
  7657  043A  0868               	movf	??_main^(0+256),w
  7658  043B  0020               	movlb	0	; select bank0
  7659  043C  00AC               	movwf	i2c_writeNBytes@data
  7660  043D  3002               	movlw	2
  7661  043E  00AD               	movwf	i2c_writeNBytes@len
  7662  043F  3000               	movlw	0
  7663  0440  00AE               	movwf	i2c_writeNBytes@len+1
  7664  0441  306A               	movlw	106
  7665  0442  319E  26E9  3180   	fcall	_i2c_writeNBytes
  7666                           
  7667                           ;main.c: 560:                     break;
  7668  0445  2C64               	goto	l7932
  7669  0446                     l7930:
  7670  0446  3038               	movlw	56
  7671  0447  0022               	movlb	2	; select bank2
  7672  0448  00E8               	movwf	??_main^(0+256)
  7673  0449  0868               	movf	??_main^(0+256),w
  7674  044A  0020               	movlb	0	; select bank0
  7675  044B  00AC               	movwf	i2c_read1ByteRegister@reg
  7676  044C  3040               	movlw	64
  7677  044D  3191  2137  3180   	fcall	_i2c_read1ByteRegister
  7678  0450  390F               	andlw	15
  7679  0451  0022               	movlb	2	; select bank2
  7680  0452  00E9               	movwf	(??_main+1)^(0+256)
  7681  0453  01EA               	clrf	((??_main+1)^(0+256)+1)
  7682                           
  7683                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7684                           ; Switch size 1, requested type "simple"
  7685                           ; Number of cases is 1, Range of values is 0 to 0
  7686                           ; switch strategies available:
  7687                           ; Name         Instructions Cycles
  7688                           ; simple_byte            4     3 (average)
  7689                           ; direct_byte            8     6 (fixed)
  7690                           ; jumptable            260     6 (fixed)
  7691                           ;	Chosen strategy is simple_byte
  7692  0454  086A               	movf	(??_main+2)^(0+256),w
  7693  0455  3A00               	xorlw	0	; case 0
  7694  0456  1903               	skipnz
  7695  0457  2C59               	goto	l8166
  7696  0458  2C64               	goto	l7932
  7697  0459                     l8166:
  7698                           
  7699                           ; Switch size 1, requested type "simple"
  7700                           ; Number of cases is 3, Range of values is 8 to 12
  7701                           ; switch strategies available:
  7702                           ; Name         Instructions Cycles
  7703                           ; simple_byte           10     6 (average)
  7704                           ; direct_byte           19     9 (fixed)
  7705                           ; jumptable            263     9 (fixed)
  7706                           ;	Chosen strategy is simple_byte
  7707  0459  0869               	movf	(??_main+1)^(0+256),w
  7708  045A  3A08               	xorlw	8	; case 8
  7709  045B  1903               	skipnz
  7710  045C  2C1C               	goto	l7922
  7711  045D  3A01               	xorlw	1	; case 9
  7712  045E  1903               	skipnz
  7713  045F  2C2A               	goto	l7924
  7714  0460  3A05               	xorlw	5	; case 12
  7715  0461  1903               	skipnz
  7716  0462  2C38               	goto	l7926
  7717  0463  2C64               	goto	l7932
  7718  0464                     l7932:
  7719                           
  7720                           ;main.c: 562:          i2c_read1ByteRegister(0x40, 0x2d);
  7721  0464  302D               	movlw	45
  7722  0465  0022               	movlb	2	; select bank2
  7723  0466  00E8               	movwf	??_main^(0+256)
  7724  0467  0868               	movf	??_main^(0+256),w
  7725  0468  0020               	movlb	0	; select bank0
  7726  0469  00AC               	movwf	i2c_read1ByteRegister@reg
  7727  046A  3040               	movlw	64
  7728  046B  3191  2137  3180   	fcall	_i2c_read1ByteRegister
  7729                           
  7730                           ;main.c: 563:          if (chk6422warning())
  7731  046E  3195  2570  3180   	fcall	_chk6422warning
  7732  0471  3A00               	xorlw	0
  7733  0472  1903               	skipnz
  7734  0473  298D               	goto	l7780
  7735                           
  7736                           ;main.c: 564:                 {;main.c: 565:                 lcd_disp_param();
  7737  0474  318E  266D  3180   	fcall	_lcd_disp_param
  7738                           
  7739                           ;main.c: 566:                 i2c_writeNBytes(0x6a, &TAS_CLEAR_FALT, 2 );
  7740  0477  304A               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
  7741  0478  0022               	movlb	2	; select bank2
  7742  0479  00E8               	movwf	??_main^(0+256)
  7743  047A  0868               	movf	??_main^(0+256),w
  7744  047B  0020               	movlb	0	; select bank0
  7745  047C  00AC               	movwf	i2c_writeNBytes@data
  7746  047D  3002               	movlw	2
  7747  047E  00AD               	movwf	i2c_writeNBytes@len
  7748  047F  3000               	movlw	0
  7749  0480  00AE               	movwf	i2c_writeNBytes@len+1
  7750  0481  306A               	movlw	106
  7751  0482  319E  26E9  3180   	fcall	_i2c_writeNBytes
  7752                           
  7753                           ;main.c: 567:                 i2c_writeNBytes(0x6a, &TAS_NORMAL, 2 );
  7754  0485  3048               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
  7755  0486  0022               	movlb	2	; select bank2
  7756  0487  00E8               	movwf	??_main^(0+256)
  7757  0488  0868               	movf	??_main^(0+256),w
  7758  0489  0020               	movlb	0	; select bank0
  7759  048A  00AC               	movwf	i2c_writeNBytes@data
  7760  048B  3002               	movlw	2
  7761  048C  00AD               	movwf	i2c_writeNBytes@len
  7762  048D  3000               	movlw	0
  7763  048E  00AE               	movwf	i2c_writeNBytes@len+1
  7764  048F  306A               	movlw	106
  7765  0490  319E  26E9  3180   	fcall	_i2c_writeNBytes
  7766  0493  298D               	goto	l7780
  7767  0494                     __end_of_main:
  7768                           
  7769                           	psect	text1
  7770  06E9                     __ptext1:	
  7771 ;; *************** function _set_source *****************
  7772 ;; Defined at:
  7773 ;;		line 336 in file "main.c"
  7774 ;; Parameters:    Size  Location     Type
  7775 ;;  sourcenumber    1    wreg     unsigned char 
  7776 ;; Auto vars:     Size  Location     Type
  7777 ;;  sourcenumber    1   19[BANK0 ] unsigned char 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  1    wreg      void 
  7780 ;; Registers used:
  7781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7782 ;; Tracked objects:
  7783 ;;		On entry : 1F/4900001
  7784 ;;		On exit  : 1F/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7789 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7790 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7791 ;;Total ram usage:        4 bytes
  7792 ;; Hardware stack levels used:    1
  7793 ;; Hardware stack levels required when called:   11
  7794 ;; This function calls:
  7795 ;;		_DELAY_milliseconds
  7796 ;;		___lbmod
  7797 ;;		_i2c_writeNBytes
  7798 ;; This function is called by:
  7799 ;;		_main
  7800 ;; This function uses a non-reentrant model
  7801 ;;
  7802                           
  7803                           
  7804                           ;psect for function _set_source
  7805  06E9                     _set_source:
  7806                           
  7807                           ;incstack = 0
  7808                           ; Regs used in _set_source: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7809                           ;set_source@sourcenumber stored from wreg
  7810  06E9  0020               	movlb	0	; select bank0
  7811  06EA  00B3               	movwf	set_source@sourcenumber
  7812                           
  7813                           ;main.c: 336: void set_source(unsigned char sourcenumber);main.c: 337: { switch(sourcenu
      +                          mber % 5)
  7814  06EB  2FBD               	goto	l7650
  7815  06EC                     l7638:
  7816                           
  7817                           ;main.c: 340:                                 i2c_writeNBytes(0x40,&SRC_DIR, 2 );
  7818  06EC  3062               	movlw	(low (_SRC_DIR| (0+256)))& (0+255)
  7819  06ED  00B0               	movwf	??_set_source
  7820  06EE  0830               	movf	??_set_source,w
  7821  06EF  00AC               	movwf	i2c_writeNBytes@data
  7822  06F0  3002               	movlw	2
  7823  06F1  00AD               	movwf	i2c_writeNBytes@len
  7824  06F2  3000               	movlw	0
  7825  06F3  00AE               	movwf	i2c_writeNBytes@len+1
  7826  06F4  3040               	movlw	64
  7827  06F5  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7828                           
  7829                           ;main.c: 341:                                 i2c_writeNBytes(0x40,&DIR_COAX, 2 );
  7830  06F8  30CB               	movlw	(low (_DIR_COAX| (0+256)))& (0+255)
  7831  06F9  00B0               	movwf	??_set_source
  7832  06FA  0830               	movf	??_set_source,w
  7833  06FB  00AC               	movwf	i2c_writeNBytes@data
  7834  06FC  3002               	movlw	2
  7835  06FD  00AD               	movwf	i2c_writeNBytes@len
  7836  06FE  3000               	movlw	0
  7837  06FF  00AE               	movwf	i2c_writeNBytes@len+1
  7838  0700  3040               	movlw	64
  7839  0701  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7840                           
  7841                           ;main.c: 342:                                 i2c_writeNBytes(0x40,&DIT_DIR, 2 );
  7842  0704  3052               	movlw	(low (_DIT_DIR| (0+256)))& (0+255)
  7843  0705  00B0               	movwf	??_set_source
  7844  0706  0830               	movf	??_set_source,w
  7845  0707  00AC               	movwf	i2c_writeNBytes@data
  7846  0708  3002               	movlw	2
  7847  0709  00AD               	movwf	i2c_writeNBytes@len
  7848  070A  3000               	movlw	0
  7849  070B  00AE               	movwf	i2c_writeNBytes@len+1
  7850  070C  3040               	movlw	64
  7851  070D  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7852                           
  7853                           ;main.c: 343:                                 i2c_writeNBytes(0x40,&AUXSRC_DIR, 2 );
  7854  0710  3058               	movlw	(low (_AUXSRC_DIR| (0+256)))& (0+255)
  7855  0711  00B0               	movwf	??_set_source
  7856  0712  0830               	movf	??_set_source,w
  7857  0713  00AC               	movwf	i2c_writeNBytes@data
  7858  0714  3002               	movlw	2
  7859  0715  00AD               	movwf	i2c_writeNBytes@len
  7860  0716  3000               	movlw	0
  7861  0717  00AE               	movwf	i2c_writeNBytes@len+1
  7862  0718  3040               	movlw	64
  7863  0719  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7864                           
  7865                           ;main.c: 344:                                  break;
  7866  071C  2FDD               	goto	l7652
  7867  071D                     l7640:
  7868                           
  7869                           ;main.c: 346:                                 i2c_writeNBytes(0x40,&SRC_DIR, 2 );
  7870  071D  3062               	movlw	(low (_SRC_DIR| (0+256)))& (0+255)
  7871  071E  00B0               	movwf	??_set_source
  7872  071F  0830               	movf	??_set_source,w
  7873  0720  00AC               	movwf	i2c_writeNBytes@data
  7874  0721  3002               	movlw	2
  7875  0722  00AD               	movwf	i2c_writeNBytes@len
  7876  0723  3000               	movlw	0
  7877  0724  00AE               	movwf	i2c_writeNBytes@len+1
  7878  0725  3040               	movlw	64
  7879  0726  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7880                           
  7881                           ;main.c: 347:                                 i2c_writeNBytes(0x40,&DIR_OPT, 2 );
  7882  0729  3054               	movlw	(low (_DIR_OPT| (0+256)))& (0+255)
  7883  072A  00B0               	movwf	??_set_source
  7884  072B  0830               	movf	??_set_source,w
  7885  072C  00AC               	movwf	i2c_writeNBytes@data
  7886  072D  3002               	movlw	2
  7887  072E  00AD               	movwf	i2c_writeNBytes@len
  7888  072F  3000               	movlw	0
  7889  0730  00AE               	movwf	i2c_writeNBytes@len+1
  7890  0731  3040               	movlw	64
  7891  0732  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7892                           
  7893                           ;main.c: 348:                                 i2c_writeNBytes(0x40,&DIT_DIR, 2 );
  7894  0735  3052               	movlw	(low (_DIT_DIR| (0+256)))& (0+255)
  7895  0736  00B0               	movwf	??_set_source
  7896  0737  0830               	movf	??_set_source,w
  7897  0738  00AC               	movwf	i2c_writeNBytes@data
  7898  0739  3002               	movlw	2
  7899  073A  00AD               	movwf	i2c_writeNBytes@len
  7900  073B  3000               	movlw	0
  7901  073C  00AE               	movwf	i2c_writeNBytes@len+1
  7902  073D  3040               	movlw	64
  7903  073E  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7904                           
  7905                           ;main.c: 349:                                 i2c_writeNBytes(0x40,&AUXSRC_DIR, 2 );
  7906  0741  3058               	movlw	(low (_AUXSRC_DIR| (0+256)))& (0+255)
  7907  0742  00B0               	movwf	??_set_source
  7908  0743  0830               	movf	??_set_source,w
  7909  0744  00AC               	movwf	i2c_writeNBytes@data
  7910  0745  3002               	movlw	2
  7911  0746  00AD               	movwf	i2c_writeNBytes@len
  7912  0747  3000               	movlw	0
  7913  0748  00AE               	movwf	i2c_writeNBytes@len+1
  7914  0749  3040               	movlw	64
  7915  074A  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7916                           
  7917                           ;main.c: 350:                                 break;
  7918  074D  2FDD               	goto	l7652
  7919  074E                     l7642:
  7920                           
  7921                           ;main.c: 352:                                  i2c_writeNBytes(0x40,&SRC_ADC, 2 );
  7922  074E  3060               	movlw	(low (_SRC_ADC| (0+256)))& (0+255)
  7923  074F  00B0               	movwf	??_set_source
  7924  0750  0830               	movf	??_set_source,w
  7925  0751  00AC               	movwf	i2c_writeNBytes@data
  7926  0752  3002               	movlw	2
  7927  0753  00AD               	movwf	i2c_writeNBytes@len
  7928  0754  3000               	movlw	0
  7929  0755  00AE               	movwf	i2c_writeNBytes@len+1
  7930  0756  3040               	movlw	64
  7931  0757  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7932                           
  7933                           ;main.c: 353:                                  i2c_writeNBytes(0x40,&DIT_ADC, 2 );
  7934  075A  3050               	movlw	(low (_DIT_ADC| (0+256)))& (0+255)
  7935  075B  00B0               	movwf	??_set_source
  7936  075C  0830               	movf	??_set_source,w
  7937  075D  00AC               	movwf	i2c_writeNBytes@data
  7938  075E  3002               	movlw	2
  7939  075F  00AD               	movwf	i2c_writeNBytes@len
  7940  0760  3000               	movlw	0
  7941  0761  00AE               	movwf	i2c_writeNBytes@len+1
  7942  0762  3040               	movlw	64
  7943  0763  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7944                           
  7945                           ;main.c: 354:                                 i2c_writeNBytes(0x40,&AUXSRC_ADC, 2 );
  7946  0766  3056               	movlw	(low (_AUXSRC_ADC| (0+256)))& (0+255)
  7947  0767  00B0               	movwf	??_set_source
  7948  0768  0830               	movf	??_set_source,w
  7949  0769  00AC               	movwf	i2c_writeNBytes@data
  7950  076A  3002               	movlw	2
  7951  076B  00AD               	movwf	i2c_writeNBytes@len
  7952  076C  3000               	movlw	0
  7953  076D  00AE               	movwf	i2c_writeNBytes@len+1
  7954  076E  3040               	movlw	64
  7955  076F  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7956                           
  7957                           ;main.c: 355:                                  break;
  7958  0772  2FDD               	goto	l7652
  7959  0773                     l7644:
  7960                           
  7961                           ;main.c: 357:                                  i2c_writeNBytes(0x40,&SRC_LVDS, 2 );
  7962  0773  305E               	movlw	(low (_SRC_LVDS| (0+256)))& (0+255)
  7963  0774  00B0               	movwf	??_set_source
  7964  0775  0830               	movf	??_set_source,w
  7965  0776  00AC               	movwf	i2c_writeNBytes@data
  7966  0777  3002               	movlw	2
  7967  0778  00AD               	movwf	i2c_writeNBytes@len
  7968  0779  3000               	movlw	0
  7969  077A  00AE               	movwf	i2c_writeNBytes@len+1
  7970  077B  3040               	movlw	64
  7971  077C  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7972                           
  7973                           ;main.c: 358:                                  i2c_writeNBytes(0x40,&DIT_LVDS, 2 );
  7974  077F  30C3               	movlw	(low (_DIT_LVDS| (0+256)))& (0+255)
  7975  0780  00B0               	movwf	??_set_source
  7976  0781  0830               	movf	??_set_source,w
  7977  0782  00AC               	movwf	i2c_writeNBytes@data
  7978  0783  3002               	movlw	2
  7979  0784  00AD               	movwf	i2c_writeNBytes@len
  7980  0785  3000               	movlw	0
  7981  0786  00AE               	movwf	i2c_writeNBytes@len+1
  7982  0787  3040               	movlw	64
  7983  0788  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7984                           
  7985                           ;main.c: 359:                                  i2c_writeNBytes(0x40,&AUXSRC_LVDS, 2 );
  7986  078B  30CD               	movlw	(low (_AUXSRC_LVDS| (0+256)))& (0+255)
  7987  078C  00B0               	movwf	??_set_source
  7988  078D  0830               	movf	??_set_source,w
  7989  078E  00AC               	movwf	i2c_writeNBytes@data
  7990  078F  3002               	movlw	2
  7991  0790  00AD               	movwf	i2c_writeNBytes@len
  7992  0791  3000               	movlw	0
  7993  0792  00AE               	movwf	i2c_writeNBytes@len+1
  7994  0793  3040               	movlw	64
  7995  0794  319E  26E9  3186   	fcall	_i2c_writeNBytes
  7996                           
  7997                           ;main.c: 360:                                 break;
  7998  0797  2FDD               	goto	l7652
  7999  0798                     l7646:
  8000                           
  8001                           ;main.c: 362:                                  i2c_writeNBytes(0x40,&SRC_I2S, 2 );
  8002  0798  305C               	movlw	(low (_SRC_I2S| (0+256)))& (0+255)
  8003  0799  00B0               	movwf	??_set_source
  8004  079A  0830               	movf	??_set_source,w
  8005  079B  00AC               	movwf	i2c_writeNBytes@data
  8006  079C  3002               	movlw	2
  8007  079D  00AD               	movwf	i2c_writeNBytes@len
  8008  079E  3000               	movlw	0
  8009  079F  00AE               	movwf	i2c_writeNBytes@len+1
  8010  07A0  3040               	movlw	64
  8011  07A1  319E  26E9  3186   	fcall	_i2c_writeNBytes
  8012                           
  8013                           ;main.c: 363:                                  i2c_writeNBytes(0x40,&DIT_I2S, 2 );
  8014  07A4  30C1               	movlw	(low (_DIT_I2S| (0+256)))& (0+255)
  8015  07A5  00B0               	movwf	??_set_source
  8016  07A6  0830               	movf	??_set_source,w
  8017  07A7  00AC               	movwf	i2c_writeNBytes@data
  8018  07A8  3002               	movlw	2
  8019  07A9  00AD               	movwf	i2c_writeNBytes@len
  8020  07AA  3000               	movlw	0
  8021  07AB  00AE               	movwf	i2c_writeNBytes@len+1
  8022  07AC  3040               	movlw	64
  8023  07AD  319E  26E9  3186   	fcall	_i2c_writeNBytes
  8024                           
  8025                           ;main.c: 364:                                 i2c_writeNBytes(0x40,&AUXSRC_AUTO, 2 );
  8026  07B0  305A               	movlw	(low (_AUXSRC_AUTO| (0+256)))& (0+255)
  8027  07B1  00B0               	movwf	??_set_source
  8028  07B2  0830               	movf	??_set_source,w
  8029  07B3  00AC               	movwf	i2c_writeNBytes@data
  8030  07B4  3002               	movlw	2
  8031  07B5  00AD               	movwf	i2c_writeNBytes@len
  8032  07B6  3000               	movlw	0
  8033  07B7  00AE               	movwf	i2c_writeNBytes@len+1
  8034  07B8  3040               	movlw	64
  8035  07B9  319E  26E9  3186   	fcall	_i2c_writeNBytes
  8036                           
  8037                           ;main.c: 365:                                  break;
  8038  07BC  2FDD               	goto	l7652
  8039  07BD                     l7650:
  8040  07BD  3005               	movlw	5
  8041  07BE  00B0               	movwf	??_set_source
  8042  07BF  0830               	movf	??_set_source,w
  8043  07C0  00A3               	movwf	___lbmod@divisor
  8044  07C1  0833               	movf	set_source@sourcenumber,w
  8045  07C2  319D  25FB  3186   	fcall	___lbmod
  8046  07C5  00B1               	movwf	??_set_source+1
  8047  07C6  01B2               	clrf	??_set_source+2
  8048                           
  8049                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8050                           ; Switch size 1, requested type "simple"
  8051                           ; Number of cases is 1, Range of values is 0 to 0
  8052                           ; switch strategies available:
  8053                           ; Name         Instructions Cycles
  8054                           ; simple_byte            4     3 (average)
  8055                           ; direct_byte            8     6 (fixed)
  8056                           ; jumptable            260     6 (fixed)
  8057                           ;	Chosen strategy is simple_byte
  8058  07C7  0832               	movf	??_set_source+2,w
  8059  07C8  3A00               	xorlw	0	; case 0
  8060  07C9  1903               	skipnz
  8061  07CA  2FCC               	goto	l8168
  8062  07CB  2FDD               	goto	l7652
  8063  07CC                     l8168:
  8064                           
  8065                           ; Switch size 1, requested type "simple"
  8066                           ; Number of cases is 5, Range of values is 0 to 4
  8067                           ; switch strategies available:
  8068                           ; Name         Instructions Cycles
  8069                           ; direct_byte           16     6 (fixed)
  8070                           ; simple_byte           16     9 (average)
  8071                           ; jumptable            260     6 (fixed)
  8072                           ;	Chosen strategy is simple_byte
  8073  07CC  0831               	movf	??_set_source+1,w
  8074  07CD  3A00               	xorlw	0	; case 0
  8075  07CE  1903               	skipnz
  8076  07CF  2EEC               	goto	l7638
  8077  07D0  3A01               	xorlw	1	; case 1
  8078  07D1  1903               	skipnz
  8079  07D2  2F1D               	goto	l7640
  8080  07D3  3A03               	xorlw	3	; case 2
  8081  07D4  1903               	skipnz
  8082  07D5  2F4E               	goto	l7642
  8083  07D6  3A01               	xorlw	1	; case 3
  8084  07D7  1903               	skipnz
  8085  07D8  2F73               	goto	l7644
  8086  07D9  3A07               	xorlw	7	; case 4
  8087  07DA  1903               	skipnz
  8088  07DB  2F98               	goto	l7646
  8089  07DC  2FDD               	goto	l7652
  8090  07DD                     l7652:
  8091                           
  8092                           ;main.c: 367: DELAY_milliseconds(5);
  8093  07DD  3005               	movlw	5
  8094  07DE  00A3               	movwf	DELAY_milliseconds@milliseconds
  8095  07DF  3000               	movlw	0
  8096  07E0  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  8097  07E1  319B  2398  3186   	fcall	_DELAY_milliseconds
  8098                           
  8099                           ;main.c: 368:  i2c_writeNBytes(0x6a, &TAS_CLEAR_FALT, 2 );
  8100  07E4  304A               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
  8101  07E5  00B0               	movwf	??_set_source
  8102  07E6  0830               	movf	??_set_source,w
  8103  07E7  00AC               	movwf	i2c_writeNBytes@data
  8104  07E8  3002               	movlw	2
  8105  07E9  00AD               	movwf	i2c_writeNBytes@len
  8106  07EA  3000               	movlw	0
  8107  07EB  00AE               	movwf	i2c_writeNBytes@len+1
  8108  07EC  306A               	movlw	106
  8109  07ED  319E  26E9  3186   	fcall	_i2c_writeNBytes
  8110                           
  8111                           ;main.c: 369: i2c_writeNBytes(0x6a, &TAS_NORMAL, 2 );
  8112  07F0  3048               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
  8113  07F1  00B0               	movwf	??_set_source
  8114  07F2  0830               	movf	??_set_source,w
  8115  07F3  00AC               	movwf	i2c_writeNBytes@data
  8116  07F4  3002               	movlw	2
  8117  07F5  00AD               	movwf	i2c_writeNBytes@len
  8118  07F6  3000               	movlw	0
  8119  07F7  00AE               	movwf	i2c_writeNBytes@len+1
  8120  07F8  306A               	movlw	106
  8121  07F9  319E  26E9         	fcall	_i2c_writeNBytes
  8122  07FB  0008               	return
  8123  07FC                     __end_of_set_source:
  8124                           
  8125                           	psect	text2
  8126  16A5                     __ptext2:	
  8127 ;; *************** function _set_gainstr *****************
  8128 ;; Defined at:
  8129 ;;		line 135 in file "main.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;  gval            1    wreg     unsigned char 
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;  gval            1   59[BANK1 ] unsigned char 
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  1    wreg      void 
  8136 ;; Registers used:
  8137 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8138 ;; Tracked objects:
  8139 ;;		On entry : 1F/4B00000
  8140 ;;		On exit  : 1F/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8144 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8145 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8146 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8147 ;;Total ram usage:        2 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:   15
  8150 ;; This function calls:
  8151 ;;		___awdiv
  8152 ;;		_puts_led
  8153 ;;		_sprintf
  8154 ;;		_strcat
  8155 ;;		_strcpy
  8156 ;; This function is called by:
  8157 ;;		_main
  8158 ;; This function uses a non-reentrant model
  8159 ;;
  8160                           
  8161                           
  8162                           ;psect for function _set_gainstr
  8163  16A5                     _set_gainstr:
  8164                           
  8165                           ;incstack = 0
  8166                           ; Regs used in _set_gainstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8167                           ;set_gainstr@gval stored from wreg
  8168  16A5  0021               	movlb	1	; select bank1
  8169  16A6  00DB               	movwf	set_gainstr@gval^(0+128)
  8170                           
  8171                           ;main.c: 135: void set_gainstr(unsigned char gval);main.c: 136: {;main.c: 137: if (gval 
      +                          <9)
  8172  16A7  3009               	movlw	9
  8173  16A8  025B               	subwf	set_gainstr@gval^(0+128),w
  8174  16A9  1803               	skipnc
  8175  16AA  2EB8               	goto	l7544
  8176                           
  8177                           ;main.c: 138:          strcpy( ledstr, "OFF");
  8178  16AB  3020               	movlw	low _ledstr
  8179  16AC  0020               	movlb	0	; select bank0
  8180  16AD  00AF               	movwf	strcpy@dest
  8181  16AE  3002               	movlw	high _ledstr
  8182  16AF  00B0               	movwf	strcpy@dest+1
  8183  16B0  3010               	movlw	low (STR_1| (0+32768))
  8184  16B1  00B1               	movwf	strcpy@src
  8185  16B2  30A1               	movlw	high (STR_1| (0+32768))
  8186  16B3  00B2               	movwf	strcpy@src+1
  8187  16B4  319E  26A0  3196   	fcall	_strcpy
  8188  16B7  2F3C               	goto	l1055
  8189  16B8                     l7544:
  8190                           
  8191                           ;main.c: 140:          {;main.c: 141:          if (gval > 0xba)
  8192  16B8  30BB               	movlw	187
  8193  16B9  025B               	subwf	set_gainstr@gval^(0+128),w
  8194  16BA  1C03               	skipc
  8195  16BB  2F04               	goto	l7560
  8196                           
  8197                           ;main.c: 142:                   {;main.c: 143:                    gain = (signed char) (
      +                          ((signed int)gval - (signed int)0x00cf)/2);
  8198  16BC  3002               	movlw	2
  8199  16BD  0020               	movlb	0	; select bank0
  8200  16BE  00A3               	movwf	___awdiv@divisor
  8201  16BF  3000               	movlw	0
  8202  16C0  00A4               	movwf	___awdiv@divisor+1
  8203  16C1  0021               	movlb	1	; select bank1
  8204  16C2  085B               	movf	set_gainstr@gval^(0+128),w
  8205  16C3  3E31               	addlw	49
  8206  16C4  0020               	movlb	0	; select bank0
  8207  16C5  00A5               	movwf	___awdiv@dividend
  8208  16C6  30FF               	movlw	255
  8209  16C7  1803               	skipnc
  8210  16C8  3000               	movlw	0
  8211  16C9  00A6               	movwf	___awdiv@dividend+1
  8212  16CA  3192  22F5  3196   	fcall	___awdiv
  8213  16CD  0823               	movf	?___awdiv,w
  8214  16CE  0021               	movlb	1	; select bank1
  8215  16CF  00DA               	movwf	??_set_gainstr^(0+128)
  8216  16D0  085A               	movf	??_set_gainstr^(0+128),w
  8217  16D1  0022               	movlb	2	; select bank2
  8218  16D2  00BE               	movwf	_gain^(0+256)
  8219                           
  8220                           ;main.c: 144:                    sprintf(ledstr, "%2d", (signed char)gain);
  8221  16D3  3020               	movlw	low _ledstr
  8222  16D4  0021               	movlb	1	; select bank1
  8223  16D5  00C0               	movwf	sprintf@s^(0+128)
  8224  16D6  3002               	movlw	high _ledstr
  8225  16D7  00C1               	movwf	(sprintf@s^(0+128)+1)
  8226  16D8  301C               	movlw	low (STR_2| (0+32768))
  8227  16D9  00C2               	movwf	sprintf@fmt^(0+128)
  8228  16DA  30A1               	movlw	high (STR_2| (0+32768))
  8229  16DB  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  8230  16DC  0022               	movlb	2	; select bank2
  8231  16DD  083E               	movf	_gain^(0+256),w
  8232  16DE  0021               	movlb	1	; select bank1
  8233  16DF  00C4               	movwf	(?_sprintf^(0+128)+4)
  8234  16E0  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  8235  16E1  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  8236  16E2  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  8237  16E3  319E  267D  3196   	fcall	_sprintf
  8238                           
  8239                           ;main.c: 145:                    if (gval == 0xce)
  8240  16E6  30CE               	movlw	206
  8241  16E7  065B               	xorwf	set_gainstr@gval^(0+128),w
  8242  16E8  1D03               	btfss	3,2
  8243  16E9  2EEF               	goto	l7554
  8244                           
  8245                           ;main.c: 146:                            ledstr[0] = 0x2d;
  8246  16EA  302D               	movlw	45
  8247  16EB  00DA               	movwf	??_set_gainstr^(0+128)
  8248  16EC  085A               	movf	??_set_gainstr^(0+128),w
  8249  16ED  0024               	banksel	_ledstr
  8250  16EE  00A0               	movwf	_ledstr& (0+127)
  8251  16EF                     l7554:
  8252                           
  8253                           ;main.c: 147:                    if(gval & 0x01)
  8254  16EF  0021               	movlb	1	; select bank1
  8255  16F0  1C5B               	btfss	set_gainstr@gval^(0+128),0
  8256  16F1  2EFB               	goto	l7558
  8257                           
  8258                           ;main.c: 148:                            strcat(ledstr, ".0 ");
  8259  16F2  3020               	movlw	low _ledstr
  8260  16F3  0020               	movlb	0	; select bank0
  8261  16F4  00BB               	movwf	strcat@dest
  8262  16F5  3002               	movlw	high _ledstr
  8263  16F6  00BC               	movwf	strcat@dest+1
  8264  16F7  3004               	movlw	low (STR_3| (0+32768))
  8265  16F8  00BD               	movwf	strcat@src
  8266  16F9  30A1               	movlw	high (STR_3| (0+32768))
  8267  16FA  2F38               	goto	L2
  8268  16FB                     l7558:
  8269  16FB  3020               	movlw	low _ledstr
  8270  16FC  0020               	movlb	0	; select bank0
  8271  16FD  00BB               	movwf	strcat@dest
  8272  16FE  3002               	movlw	high _ledstr
  8273  16FF  00BC               	movwf	strcat@dest+1
  8274  1700  3008               	movlw	low (STR_4| (0+32768))
  8275  1701  00BD               	movwf	strcat@src
  8276  1702  30A1               	movlw	high (STR_4| (0+32768))
  8277  1703  2F38               	goto	L2
  8278  1704                     l7560:
  8279                           
  8280                           ;main.c: 152:                   {;main.c: 153:                   gain =(signed char)((((
      +                          int)gval - (int)0xcf))/2);
  8281  1704  3002               	movlw	2
  8282  1705  0020               	movlb	0	; select bank0
  8283  1706  00A3               	movwf	___awdiv@divisor
  8284  1707  3000               	movlw	0
  8285  1708  00A4               	movwf	___awdiv@divisor+1
  8286  1709  0021               	movlb	1	; select bank1
  8287  170A  085B               	movf	set_gainstr@gval^(0+128),w
  8288  170B  3E31               	addlw	49
  8289  170C  0020               	movlb	0	; select bank0
  8290  170D  00A5               	movwf	___awdiv@dividend
  8291  170E  30FF               	movlw	255
  8292  170F  1803               	skipnc
  8293  1710  3000               	movlw	0
  8294  1711  00A6               	movwf	___awdiv@dividend+1
  8295  1712  3192  22F5  3196   	fcall	___awdiv
  8296  1715  0823               	movf	?___awdiv,w
  8297  1716  0021               	movlb	1	; select bank1
  8298  1717  00DA               	movwf	??_set_gainstr^(0+128)
  8299  1718  085A               	movf	??_set_gainstr^(0+128),w
  8300  1719  0022               	movlb	2	; select bank2
  8301  171A  00BE               	movwf	_gain^(0+256)
  8302                           
  8303                           ;main.c: 154:                   sprintf(ledstr, "%3d",(signed char)gain);
  8304  171B  3020               	movlw	low _ledstr
  8305  171C  0021               	movlb	1	; select bank1
  8306  171D  00C0               	movwf	sprintf@s^(0+128)
  8307  171E  3002               	movlw	high _ledstr
  8308  171F  00C1               	movwf	(sprintf@s^(0+128)+1)
  8309  1720  3020               	movlw	low (STR_5| (0+32768))
  8310  1721  00C2               	movwf	sprintf@fmt^(0+128)
  8311  1722  30A1               	movlw	high (STR_5| (0+32768))
  8312  1723  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  8313  1724  0022               	movlb	2	; select bank2
  8314  1725  083E               	movf	_gain^(0+256),w
  8315  1726  0021               	movlb	1	; select bank1
  8316  1727  00C4               	movwf	(?_sprintf^(0+128)+4)
  8317  1728  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  8318  1729  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  8319  172A  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  8320  172B  319E  267D  3196   	fcall	_sprintf
  8321                           
  8322                           ;main.c: 155:                   if((gval & 0x01) != 0x01)
  8323  172E  185B               	btfsc	set_gainstr@gval^(0+128),0
  8324  172F  2F3C               	goto	l1055
  8325                           
  8326                           ;main.c: 156:                            strcat (ledstr, ".");
  8327  1730  3020               	movlw	low _ledstr
  8328  1731  0020               	movlb	0	; select bank0
  8329  1732  00BB               	movwf	strcat@dest
  8330  1733  3002               	movlw	high _ledstr
  8331  1734  00BC               	movwf	strcat@dest+1
  8332  1735  3028               	movlw	low (STR_6| (0+32768))
  8333  1736  00BD               	movwf	strcat@src
  8334  1737  30A1               	movlw	high (STR_6| (0+32768))
  8335  1738                     L2:
  8336  1738  00BE               	movwf	strcat@src+1
  8337  1739  319B  23AC  3196   	fcall	_strcat
  8338  173C                     l1055:	
  8339                           ;main.c: 158:          }
  8340                           
  8341                           
  8342                           ;main.c: 159:  puts_led(ledstr);
  8343  173C  3020               	movlw	low _ledstr
  8344  173D  0020               	movlb	0	; select bank0
  8345  173E  00AF               	movwf	puts_led@str
  8346  173F  3002               	movlw	high _ledstr
  8347  1740  00B0               	movwf	puts_led@str+1
  8348  1741  3188  2002         	fcall	_puts_led
  8349  1743  0008               	return
  8350  1744                     __end_of_set_gainstr:
  8351                           
  8352                           	psect	text3
  8353  1BAC                     __ptext3:	
  8354 ;; *************** function _strcat *****************
  8355 ;; Defined at:
  8356 ;;		line 3 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/strcat.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  dest            2   27[BANK0 ] PTR unsigned char 
  8359 ;;		 -> ledstr(0), 
  8360 ;;  src             2   29[BANK0 ] PTR const unsigned char 
  8361 ;;		 -> STR_6(2), STR_4(4), STR_3(4), 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;		None
  8364 ;; Return value:  Size  Location     Type
  8365 ;;                  2   27[BANK0 ] PTR unsigned char 
  8366 ;; Registers used:
  8367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8368 ;; Tracked objects:
  8369 ;;		On entry : 1F/4B00000
  8370 ;;		On exit  : 1F/0
  8371 ;;		Unchanged: 0/0
  8372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8373 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8376 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8377 ;;Total ram usage:        4 bytes
  8378 ;; Hardware stack levels used:    1
  8379 ;; Hardware stack levels required when called:    8
  8380 ;; This function calls:
  8381 ;;		_strcpy
  8382 ;;		_strlen
  8383 ;; This function is called by:
  8384 ;;		_set_gainstr
  8385 ;; This function uses a non-reentrant model
  8386 ;;
  8387                           
  8388                           
  8389                           ;psect for function _strcat
  8390  1BAC                     _strcat:
  8391                           
  8392                           ;incstack = 0
  8393                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8394  1BAC  083C               	movf	strcat@dest+1,w
  8395  1BAD  00A4               	movwf	strlen@s+1
  8396  1BAE  083B               	movf	strcat@dest,w
  8397  1BAF  00A3               	movwf	strlen@s
  8398  1BB0  319C  24A8  319B   	fcall	_strlen
  8399  1BB3  0823               	movf	?_strlen,w
  8400  1BB4  073B               	addwf	strcat@dest,w
  8401  1BB5  00AF               	movwf	strcpy@dest
  8402  1BB6  0824               	movf	?_strlen+1,w
  8403  1BB7  3D3C               	addwfc	strcat@dest+1,w
  8404  1BB8  00B0               	movwf	strcpy@dest+1
  8405  1BB9  083E               	movf	strcat@src+1,w
  8406  1BBA  00B2               	movwf	strcpy@src+1
  8407  1BBB  083D               	movf	strcat@src,w
  8408  1BBC  00B1               	movwf	strcpy@src
  8409  1BBD  319E  26A0         	fcall	_strcpy
  8410  1BBF  0008               	return
  8411  1BC0                     __end_of_strcat:
  8412                           
  8413                           	psect	text4
  8414  1EA0                     __ptext4:	
  8415 ;; *************** function _strcpy *****************
  8416 ;; Defined at:
  8417 ;;		line 3 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/strcpy.c"
  8418 ;; Parameters:    Size  Location     Type
  8419 ;;  dest            2   15[BANK0 ] PTR unsigned char 
  8420 ;;		 -> ledstr(0), ledbuff(0), 
  8421 ;;  src             2   17[BANK0 ] PTR const unsigned char 
  8422 ;;		 -> led_i2s_dir(14), STR_6(2), STR_4(4), STR_3(4), 
  8423 ;;		 -> STR_1(4), 
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;  d               2   25[BANK0 ] PTR unsigned char 
  8426 ;;		 -> ledstr(0), ledbuff(0), 
  8427 ;;  s               2   23[BANK0 ] PTR const unsigned char 
  8428 ;;		 -> led_i2s_dir(14), STR_6(2), STR_4(4), STR_3(4), 
  8429 ;;		 -> STR_1(4), 
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  2   15[BANK0 ] PTR unsigned char 
  8432 ;; Registers used:
  8433 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  8434 ;; Tracked objects:
  8435 ;;		On entry : 1F/4800000
  8436 ;;		On exit  : 1F/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8439 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8440 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8441 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8442 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8443 ;;Total ram usage:       12 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:    7
  8446 ;; This function calls:
  8447 ;;		Nothing
  8448 ;; This function is called by:
  8449 ;;		_set_gainstr
  8450 ;;		_main
  8451 ;;		_strcat
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           
  8455                           
  8456                           ;psect for function _strcpy
  8457  1EA0                     _strcpy:
  8458                           
  8459                           ;incstack = 0
  8460                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  8461  1EA0  0832               	movf	strcpy@src+1,w
  8462  1EA1  00B8               	movwf	strcpy@s+1
  8463  1EA2  0831               	movf	strcpy@src,w
  8464  1EA3  00B7               	movwf	strcpy@s
  8465  1EA4  0830               	movf	strcpy@dest+1,w
  8466  1EA5  00BA               	movwf	strcpy@d+1
  8467  1EA6  082F               	movf	strcpy@dest,w
  8468  1EA7  00B9               	movwf	strcpy@d
  8469  1EA8                     l5390:
  8470  1EA8  083A               	movf	strcpy@d+1,w
  8471  1EA9  00B4               	movwf	??_strcpy+1
  8472  1EAA  0839               	movf	strcpy@d,w
  8473  1EAB  00B3               	movwf	??_strcpy
  8474  1EAC  0AB9               	incf	strcpy@d,f
  8475  1EAD  1903               	skipnz
  8476  1EAE  0ABA               	incf	strcpy@d+1,f
  8477  1EAF  0833               	movf	??_strcpy,w
  8478  1EB0  0086               	movwf	6
  8479  1EB1  0834               	movf	??_strcpy+1,w
  8480  1EB2  0087               	movwf	7
  8481  1EB3  0838               	movf	strcpy@s+1,w
  8482  1EB4  00B6               	movwf	??_strcpy+3
  8483  1EB5  0837               	movf	strcpy@s,w
  8484  1EB6  00B5               	movwf	??_strcpy+2
  8485  1EB7  0AB7               	incf	strcpy@s,f
  8486  1EB8  1903               	skipnz
  8487  1EB9  0AB8               	incf	strcpy@s+1,f
  8488  1EBA  0835               	movf	??_strcpy+2,w
  8489  1EBB  0084               	movwf	4
  8490  1EBC  0836               	movf	??_strcpy+3,w
  8491  1EBD  0085               	movwf	5
  8492  1EBE  0800               	movf	0,w	;code access
  8493  1EBF  3FC0               	movwi [0]fsr1
  8494  1EC0  0889               	movf	9,f
  8495  1EC1  1903               	btfsc	3,2
  8496  1EC2  0008               	return
  8497  1EC3  2EA8               	goto	l5390
  8498  1EC4                     __end_of_strcpy:
  8499                           
  8500                           	psect	text5
  8501  0802                     __ptext5:	
  8502 ;; *************** function _puts_led *****************
  8503 ;; Defined at:
  8504 ;;		line 99 in file "main.c"
  8505 ;; Parameters:    Size  Location     Type
  8506 ;;  str             2   15[BANK0 ] PTR unsigned char 
  8507 ;;		 -> STR_16(13), STR_15(4), STR_12(13), STR_11(4), 
  8508 ;;		 -> led_src_name(35), STR_10(13), STR_9(4), STR_8(4), 
  8509 ;;		 -> ledstr(0), ledbuff(0), 
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;  cpoint          2   18[BANK0 ] PTR unsigned char 
  8512 ;;		 -> STR_16(13), STR_15(4), STR_12(13), STR_11(4), 
  8513 ;;		 -> led_src_name(35), STR_10(13), STR_9(4), STR_8(4), 
  8514 ;;		 -> ledstr(0), ledbuff(0), 
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1    wreg      void 
  8517 ;; Registers used:
  8518 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  8519 ;; Tracked objects:
  8520 ;;		On entry : 1F/4B00000
  8521 ;;		On exit  : 1F/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8524 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8525 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8526 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8527 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8528 ;;Total ram usage:        5 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:    7
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_set_gainstr
  8535 ;;		_main
  8536 ;; This function uses a non-reentrant model
  8537 ;;
  8538                           
  8539                           
  8540                           ;psect for function _puts_led
  8541  0802                     _puts_led:
  8542                           
  8543                           ;main.c: 99: void puts_led(char *str);main.c: 100: {;main.c: 101:     unsigned char *cpo
      +                          int;;main.c: 103: cpoint =(unsigned char *)(str);
  8544                           
  8545                           ;incstack = 0
  8546                           ; Regs used in _puts_led: [wreg-fsr1h+status,2+status,0+pclath]
  8547  0802  0830               	movf	puts_led@str+1,w
  8548  0803  00B3               	movwf	puts_led@cpoint+1
  8549  0804  082F               	movf	puts_led@str,w
  8550  0805  00B2               	movwf	puts_led@cpoint
  8551                           
  8552                           ;main.c: 104:          {;main.c: 105:             ledbuff[0] = *(cpoint++);
  8553  0806  0832               	movf	puts_led@cpoint,w
  8554  0807  0084               	movwf	4
  8555  0808  0833               	movf	puts_led@cpoint+1,w
  8556  0809  0085               	movwf	5
  8557  080A  0800               	movf	0,w	;code access
  8558  080B  00B1               	movwf	??_puts_led
  8559  080C  0831               	movf	??_puts_led,w
  8560  080D  0024               	banksel	_ledbuff
  8561  080E  00B5               	movwf	_ledbuff& (0+127)
  8562  080F  3001               	movlw	1
  8563  0810  0020               	movlb	0	; select bank0
  8564  0811  07B2               	addwf	puts_led@cpoint,f
  8565  0812  3000               	movlw	0
  8566  0813  3DB3               	addwfc	puts_led@cpoint+1,f
  8567                           
  8568                           ;main.c: 106:             if (*cpoint == '.')
  8569  0814  0832               	movf	puts_led@cpoint,w
  8570  0815  0084               	movwf	4
  8571  0816  0833               	movf	puts_led@cpoint+1,w
  8572  0817  0085               	movwf	5
  8573  0818  0012               	moviw fsr0++
  8574  0819  3A2E               	xorlw	46
  8575  081A  1D03               	btfss	3,2
  8576  081B  2827               	goto	l5672
  8577                           
  8578                           ;main.c: 107:                 {;main.c: 108:                 led_dot[0]= 0x7f;
  8579  081C  307F               	movlw	127
  8580  081D  00B1               	movwf	??_puts_led
  8581  081E  0831               	movf	??_puts_led,w
  8582  081F  0023               	banksel	_led_dot
  8583  0820  00A0               	movwf	_led_dot& (0+127)
  8584                           
  8585                           ;main.c: 109:                 ++cpoint;
  8586  0821  3001               	movlw	1
  8587  0822  0020               	movlb	0	; select bank0
  8588  0823  07B2               	addwf	puts_led@cpoint,f
  8589  0824  3000               	movlw	0
  8590  0825  3DB3               	addwfc	puts_led@cpoint+1,f
  8591                           
  8592                           ;main.c: 110:                 }
  8593  0826  282C               	goto	l5674
  8594  0827                     l5672:
  8595                           
  8596                           ;main.c: 112:                 led_dot[0]= 0xff;
  8597  0827  30FF               	movlw	255
  8598  0828  00B1               	movwf	??_puts_led
  8599  0829  0831               	movf	??_puts_led,w
  8600  082A  0023               	banksel	_led_dot
  8601  082B  00A0               	movwf	_led_dot& (0+127)
  8602  082C                     l5674:
  8603                           
  8604                           ;main.c: 113:              ledbuff[1] = *(cpoint++);
  8605  082C  0020               	movlb	0	; select bank0
  8606  082D  0832               	movf	puts_led@cpoint,w
  8607  082E  0084               	movwf	4
  8608  082F  0833               	movf	puts_led@cpoint+1,w
  8609  0830  0085               	movwf	5
  8610  0831  0800               	movf	0,w	;code access
  8611  0832  00B1               	movwf	??_puts_led
  8612  0833  3036               	movlw	low (_ledbuff+1)
  8613  0834  0086               	movwf	6
  8614  0835  3002               	movlw	high (_ledbuff+1)
  8615  0836  0087               	movwf	7
  8616  0837  0831               	movf	??_puts_led,w
  8617  0838  0081               	movwf	1
  8618  0839  3001               	movlw	1
  8619  083A  07B2               	addwf	puts_led@cpoint,f
  8620  083B  3000               	movlw	0
  8621  083C  3DB3               	addwfc	puts_led@cpoint+1,f
  8622                           
  8623                           ;main.c: 114:             if (*cpoint == '.')
  8624  083D  0832               	movf	puts_led@cpoint,w
  8625  083E  0084               	movwf	4
  8626  083F  0833               	movf	puts_led@cpoint+1,w
  8627  0840  0085               	movwf	5
  8628  0841  0012               	moviw fsr0++
  8629  0842  3A2E               	xorlw	46
  8630  0843  1D03               	btfss	3,2
  8631  0844  2850               	goto	l5684
  8632                           
  8633                           ;main.c: 115:                 {;main.c: 116:                 led_dot[1]= 0x7f;
  8634  0845  30A1               	movlw	low (_led_dot+1)
  8635  0846  0086               	movwf	6
  8636  0847  3001               	movlw	high (_led_dot+1)
  8637  0848  0087               	movwf	7
  8638  0849  307F               	movlw	127
  8639  084A  0081               	movwf	1
  8640                           
  8641                           ;main.c: 117:                 ++cpoint;
  8642  084B  3001               	movlw	1
  8643  084C  07B2               	addwf	puts_led@cpoint,f
  8644  084D  3000               	movlw	0
  8645  084E  3DB3               	addwfc	puts_led@cpoint+1,f
  8646                           
  8647                           ;main.c: 118:                 }
  8648  084F  2856               	goto	l5686
  8649  0850                     l5684:
  8650                           
  8651                           ;main.c: 120:                 led_dot[1]= 0xff;
  8652  0850  30A1               	movlw	low (_led_dot+1)
  8653  0851  0086               	movwf	6
  8654  0852  3001               	movlw	high (_led_dot+1)
  8655  0853  0087               	movwf	7
  8656  0854  30FF               	movlw	255
  8657  0855  0081               	movwf	1
  8658  0856                     l5686:
  8659                           
  8660                           ;main.c: 121:              ledbuff[2] = *(cpoint++);
  8661  0856  0832               	movf	puts_led@cpoint,w
  8662  0857  0084               	movwf	4
  8663  0858  0833               	movf	puts_led@cpoint+1,w
  8664  0859  0085               	movwf	5
  8665  085A  0800               	movf	0,w	;code access
  8666  085B  00B1               	movwf	??_puts_led
  8667  085C  3037               	movlw	low (_ledbuff+2)
  8668  085D  0086               	movwf	6
  8669  085E  3002               	movlw	high (_ledbuff+2)
  8670  085F  0087               	movwf	7
  8671  0860  0831               	movf	??_puts_led,w
  8672  0861  0081               	movwf	1
  8673  0862  3001               	movlw	1
  8674  0863  07B2               	addwf	puts_led@cpoint,f
  8675  0864  3000               	movlw	0
  8676  0865  3DB3               	addwfc	puts_led@cpoint+1,f
  8677                           
  8678                           ;main.c: 122:             if (*cpoint == '.')
  8679  0866  0832               	movf	puts_led@cpoint,w
  8680  0867  0084               	movwf	4
  8681  0868  0833               	movf	puts_led@cpoint+1,w
  8682  0869  0085               	movwf	5
  8683  086A  0012               	moviw fsr0++
  8684  086B  3A2E               	xorlw	46
  8685  086C  1D03               	btfss	3,2
  8686  086D  2875               	goto	l5694
  8687                           
  8688                           ;main.c: 123:                 {;main.c: 124:                 led_dot[2]= 0x7f;
  8689  086E  30A2               	movlw	low (_led_dot+2)
  8690  086F  0086               	movwf	6
  8691  0870  3001               	movlw	high (_led_dot+2)
  8692  0871  0087               	movwf	7
  8693  0872  307F               	movlw	127
  8694  0873  0081               	movwf	1
  8695                           
  8696                           ;main.c: 126:                 }
  8697  0874  0008               	return
  8698  0875                     l5694:
  8699                           
  8700                           ;main.c: 128:                 led_dot[2]= 0xff;
  8701  0875  30A2               	movlw	low (_led_dot+2)
  8702  0876  0086               	movwf	6
  8703  0877  3001               	movlw	high (_led_dot+2)
  8704  0878  0087               	movwf	7
  8705  0879  30FF               	movlw	255
  8706  087A  0081               	movwf	1
  8707  087B  0008               	return
  8708  087C                     __end_of_puts_led:
  8709                           
  8710                           	psect	text6
  8711  12F5                     __ptext6:	
  8712 ;; *************** function ___awdiv *****************
  8713 ;; Defined at:
  8714 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/awdiv.c"
  8715 ;; Parameters:    Size  Location     Type
  8716 ;;  divisor         2    3[BANK0 ] int 
  8717 ;;  dividend        2    5[BANK0 ] int 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  quotient        2   10[BANK0 ] int 
  8720 ;;  sign            1    9[BANK0 ] unsigned char 
  8721 ;;  counter         1    8[BANK0 ] unsigned char 
  8722 ;; Return value:  Size  Location     Type
  8723 ;;                  2    3[BANK0 ] int 
  8724 ;; Registers used:
  8725 ;;		wreg, status,2, status,0
  8726 ;; Tracked objects:
  8727 ;;		On entry : 1F/4B00000
  8728 ;;		On exit  : 1F/0
  8729 ;;		Unchanged: 0/0
  8730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8732 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8733 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8734 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8735 ;;Total ram usage:        9 bytes
  8736 ;; Hardware stack levels used:    1
  8737 ;; Hardware stack levels required when called:    7
  8738 ;; This function calls:
  8739 ;;		Nothing
  8740 ;; This function is called by:
  8741 ;;		_set_gainstr
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           
  8746                           ;psect for function ___awdiv
  8747  12F5                     ___awdiv:
  8748                           
  8749                           ;incstack = 0
  8750                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8751  12F5  01A9               	clrf	___awdiv@sign
  8752  12F6  1FA4               	btfss	___awdiv@divisor+1,7
  8753  12F7  2AFF               	goto	l5720
  8754  12F8  09A3               	comf	___awdiv@divisor,f
  8755  12F9  09A4               	comf	___awdiv@divisor+1,f
  8756  12FA  0AA3               	incf	___awdiv@divisor,f
  8757  12FB  1903               	skipnz
  8758  12FC  0AA4               	incf	___awdiv@divisor+1,f
  8759  12FD  01A9               	clrf	___awdiv@sign
  8760  12FE  0AA9               	incf	___awdiv@sign,f
  8761  12FF                     l5720:
  8762  12FF  1FA6               	btfss	___awdiv@dividend+1,7
  8763  1300  2B0A               	goto	l5726
  8764  1301  09A5               	comf	___awdiv@dividend,f
  8765  1302  09A6               	comf	___awdiv@dividend+1,f
  8766  1303  0AA5               	incf	___awdiv@dividend,f
  8767  1304  1903               	skipnz
  8768  1305  0AA6               	incf	___awdiv@dividend+1,f
  8769  1306  3001               	movlw	1
  8770  1307  00A7               	movwf	??___awdiv
  8771  1308  0827               	movf	??___awdiv,w
  8772  1309  06A9               	xorwf	___awdiv@sign,f
  8773  130A                     l5726:
  8774  130A  01AA               	clrf	___awdiv@quotient
  8775  130B  01AB               	clrf	___awdiv@quotient+1
  8776  130C  0823               	movf	___awdiv@divisor,w
  8777  130D  0424               	iorwf	___awdiv@divisor+1,w
  8778  130E  1903               	btfsc	3,2
  8779  130F  2B39               	goto	l5748
  8780  1310  01A8               	clrf	___awdiv@counter
  8781  1311  0AA8               	incf	___awdiv@counter,f
  8782  1312                     l5736:
  8783  1312  1BA4               	btfsc	___awdiv@divisor+1,7
  8784  1313  2B1E               	goto	l5738
  8785  1314  3001               	movlw	1
  8786  1315                     u3795:
  8787  1315  35A3               	lslf	___awdiv@divisor,f
  8788  1316  0DA4               	rlf	___awdiv@divisor+1,f
  8789  1317  0B89               	decfsz	9,f
  8790  1318  2B15               	goto	u3795
  8791  1319  3001               	movlw	1
  8792  131A  00A7               	movwf	??___awdiv
  8793  131B  0827               	movf	??___awdiv,w
  8794  131C  07A8               	addwf	___awdiv@counter,f
  8795  131D  2B12               	goto	l5736
  8796  131E                     l5738:
  8797  131E  3001               	movlw	1
  8798  131F                     u3815:
  8799  131F  35AA               	lslf	___awdiv@quotient,f
  8800  1320  0DAB               	rlf	___awdiv@quotient+1,f
  8801  1321  0B89               	decfsz	9,f
  8802  1322  2B1F               	goto	u3815
  8803  1323  0824               	movf	___awdiv@divisor+1,w
  8804  1324  0226               	subwf	___awdiv@dividend+1,w
  8805  1325  1D03               	skipz
  8806  1326  2B29               	goto	u3825
  8807  1327  0823               	movf	___awdiv@divisor,w
  8808  1328  0225               	subwf	___awdiv@dividend,w
  8809  1329                     u3825:
  8810  1329  1C03               	skipc
  8811  132A  2B30               	goto	l5744
  8812  132B  0823               	movf	___awdiv@divisor,w
  8813  132C  02A5               	subwf	___awdiv@dividend,f
  8814  132D  0824               	movf	___awdiv@divisor+1,w
  8815  132E  3BA6               	subwfb	___awdiv@dividend+1,f
  8816  132F  142A               	bsf	___awdiv@quotient,0
  8817  1330                     l5744:
  8818  1330  3001               	movlw	1
  8819  1331                     u3835:
  8820  1331  36A4               	lsrf	___awdiv@divisor+1,f
  8821  1332  0CA3               	rrf	___awdiv@divisor,f
  8822  1333  0B89               	decfsz	9,f
  8823  1334  2B31               	goto	u3835
  8824  1335  3001               	movlw	1
  8825  1336  02A8               	subwf	___awdiv@counter,f
  8826  1337  1D03               	btfss	3,2
  8827  1338  2B1E               	goto	l5738
  8828  1339                     l5748:
  8829  1339  0829               	movf	___awdiv@sign,w
  8830  133A  1903               	btfsc	3,2
  8831  133B  2B41               	goto	l5752
  8832  133C  09AA               	comf	___awdiv@quotient,f
  8833  133D  09AB               	comf	___awdiv@quotient+1,f
  8834  133E  0AAA               	incf	___awdiv@quotient,f
  8835  133F  1903               	skipnz
  8836  1340  0AAB               	incf	___awdiv@quotient+1,f
  8837  1341                     l5752:
  8838  1341  082B               	movf	___awdiv@quotient+1,w
  8839  1342  00A4               	movwf	?___awdiv+1
  8840  1343  082A               	movf	___awdiv@quotient,w
  8841  1344  00A3               	movwf	?___awdiv
  8842  1345  0008               	return
  8843  1346                     __end_of___awdiv:
  8844                           
  8845                           	psect	text7
  8846  1502                     __ptext7:	
  8847 ;; *************** function _set_gains *****************
  8848 ;; Defined at:
  8849 ;;		line 314 in file "main.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;  vol             1    wreg     unsigned char 
  8852 ;;  bal             1   26[BANK0 ] char 
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;  vol             1   28[BANK0 ] unsigned char 
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8859 ;; Tracked objects:
  8860 ;;		On entry : 1F/4900000
  8861 ;;		On exit  : 1F/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8864 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8865 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8866 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8867 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8868 ;;Total ram usage:        3 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; Hardware stack levels required when called:   11
  8871 ;; This function calls:
  8872 ;;		_abs
  8873 ;;		_i2c_writeNBytes
  8874 ;; This function is called by:
  8875 ;;		_main
  8876 ;; This function uses a non-reentrant model
  8877 ;;
  8878                           
  8879                           
  8880                           ;psect for function _set_gains
  8881  1502                     _set_gains:
  8882                           
  8883                           ;incstack = 0
  8884                           ; Regs used in _set_gains: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8885                           ;set_gains@vol stored from wreg
  8886  1502  00BC               	movwf	set_gains@vol
  8887                           
  8888                           ;main.c: 314: void set_gains(unsigned char vol, signed char bal);main.c: 315: {;main.c: 
      +                          316:  if (bal < 0)
  8889  1503  1FBA               	btfss	set_gains@bal,7
  8890  1504  2D3F               	goto	l7624
  8891                           
  8892                           ;main.c: 317:     {;main.c: 318:      tasbuff[0] = 0x05;
  8893  1505  3005               	movlw	5
  8894  1506  00BB               	movwf	??_set_gains
  8895  1507  083B               	movf	??_set_gains,w
  8896  1508  0022               	movlb	2	; select bank2
  8897  1509  00C6               	movwf	_tasbuff^(0+256)
  8898                           
  8899                           ;main.c: 319:      tasbuff[1] =vol;
  8900  150A  0020               	movlb	0	; select bank0
  8901  150B  083C               	movf	set_gains@vol,w
  8902  150C  00BB               	movwf	??_set_gains
  8903  150D  083B               	movf	??_set_gains,w
  8904  150E  0022               	movlb	2	; select bank2
  8905  150F  00C7               	movwf	(_tasbuff^(0+256)+1)
  8906                           
  8907                           ;main.c: 320:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
  8908  1510  3046               	movlw	(low (_tasbuff| (0+256)))& (0+255)
  8909  1511  0020               	movlb	0	; select bank0
  8910  1512  00BB               	movwf	??_set_gains
  8911  1513  083B               	movf	??_set_gains,w
  8912  1514  00AC               	movwf	i2c_writeNBytes@data
  8913  1515  3002               	movlw	2
  8914  1516  00AD               	movwf	i2c_writeNBytes@len
  8915  1517  3000               	movlw	0
  8916  1518  00AE               	movwf	i2c_writeNBytes@len+1
  8917  1519  306A               	movlw	106
  8918  151A  319E  26E9  3195   	fcall	_i2c_writeNBytes
  8919                           
  8920                           ;main.c: 321:     tasbuff[0] = 0x06;
  8921  151D  3006               	movlw	6
  8922  151E  00BB               	movwf	??_set_gains
  8923  151F  083B               	movf	??_set_gains,w
  8924  1520  0022               	movlb	2	; select bank2
  8925  1521  00C6               	movwf	_tasbuff^(0+256)
  8926                           
  8927                           ;main.c: 322:     tasbuff[1] = vol - abs(bal);
  8928  1522  0020               	movlb	0	; select bank0
  8929  1523  083A               	movf	set_gains@bal,w
  8930  1524  00B6               	movwf	abs@a
  8931  1525  01B7               	clrf	abs@a+1
  8932  1526  1BB6               	btfsc	abs@a,7
  8933  1527  03B7               	decf	abs@a+1,f
  8934  1528  319C  24D7  3195   	fcall	_abs
  8935  152B  0020               	movlb	0	; select bank0
  8936  152C  0836               	movf	?_abs,w
  8937  152D  023C               	subwf	set_gains@vol,w
  8938  152E  00BB               	movwf	??_set_gains
  8939  152F  083B               	movf	??_set_gains,w
  8940  1530  0022               	movlb	2	; select bank2
  8941  1531  00C7               	movwf	(_tasbuff^(0+256)+1)
  8942                           
  8943                           ;main.c: 323:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
  8944  1532  3046               	movlw	(low (_tasbuff| (0+256)))& (0+255)
  8945  1533  0020               	movlb	0	; select bank0
  8946  1534  00BB               	movwf	??_set_gains
  8947  1535  083B               	movf	??_set_gains,w
  8948  1536  00AC               	movwf	i2c_writeNBytes@data
  8949  1537  3002               	movlw	2
  8950  1538  00AD               	movwf	i2c_writeNBytes@len
  8951  1539  3000               	movlw	0
  8952  153A  00AE               	movwf	i2c_writeNBytes@len+1
  8953  153B  306A               	movlw	106
  8954  153C  319E  26E9         	fcall	_i2c_writeNBytes
  8955                           
  8956                           ;main.c: 324:     }
  8957  153E  0008               	return
  8958  153F                     l7624:
  8959                           
  8960                           ;main.c: 326:     {;main.c: 327:      tasbuff[0] = 0x05;
  8961  153F  3005               	movlw	5
  8962  1540  00BB               	movwf	??_set_gains
  8963  1541  083B               	movf	??_set_gains,w
  8964  1542  0022               	movlb	2	; select bank2
  8965  1543  00C6               	movwf	_tasbuff^(0+256)
  8966                           
  8967                           ;main.c: 328:      tasbuff[1] =vol - bal;
  8968  1544  0020               	movlb	0	; select bank0
  8969  1545  083A               	movf	set_gains@bal,w
  8970  1546  023C               	subwf	set_gains@vol,w
  8971  1547  00BB               	movwf	??_set_gains
  8972  1548  083B               	movf	??_set_gains,w
  8973  1549  0022               	movlb	2	; select bank2
  8974  154A  00C7               	movwf	(_tasbuff^(0+256)+1)
  8975                           
  8976                           ;main.c: 329:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
  8977  154B  3046               	movlw	(low (_tasbuff| (0+256)))& (0+255)
  8978  154C  0020               	movlb	0	; select bank0
  8979  154D  00BB               	movwf	??_set_gains
  8980  154E  083B               	movf	??_set_gains,w
  8981  154F  00AC               	movwf	i2c_writeNBytes@data
  8982  1550  3002               	movlw	2
  8983  1551  00AD               	movwf	i2c_writeNBytes@len
  8984  1552  3000               	movlw	0
  8985  1553  00AE               	movwf	i2c_writeNBytes@len+1
  8986  1554  306A               	movlw	106
  8987  1555  319E  26E9  3195   	fcall	_i2c_writeNBytes
  8988                           
  8989                           ;main.c: 330:     tasbuff[0] = 0x06;
  8990  1558  3006               	movlw	6
  8991  1559  00BB               	movwf	??_set_gains
  8992  155A  083B               	movf	??_set_gains,w
  8993  155B  0022               	movlb	2	; select bank2
  8994  155C  00C6               	movwf	_tasbuff^(0+256)
  8995                           
  8996                           ;main.c: 331:     tasbuff[1] = vol ;
  8997  155D  0020               	movlb	0	; select bank0
  8998  155E  083C               	movf	set_gains@vol,w
  8999  155F  00BB               	movwf	??_set_gains
  9000  1560  083B               	movf	??_set_gains,w
  9001  1561  0022               	movlb	2	; select bank2
  9002  1562  00C7               	movwf	(_tasbuff^(0+256)+1)
  9003                           
  9004                           ;main.c: 332:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
  9005  1563  3046               	movlw	(low (_tasbuff| (0+256)))& (0+255)
  9006  1564  0020               	movlb	0	; select bank0
  9007  1565  00BB               	movwf	??_set_gains
  9008  1566  083B               	movf	??_set_gains,w
  9009  1567  00AC               	movwf	i2c_writeNBytes@data
  9010  1568  3002               	movlw	2
  9011  1569  00AD               	movwf	i2c_writeNBytes@len
  9012  156A  3000               	movlw	0
  9013  156B  00AE               	movwf	i2c_writeNBytes@len+1
  9014  156C  306A               	movlw	106
  9015  156D  319E  26E9         	fcall	_i2c_writeNBytes
  9016  156F  0008               	return
  9017  1570                     __end_of_set_gains:
  9018                           
  9019                           	psect	text8
  9020  0E6D                     __ptext8:	
  9021 ;; *************** function _lcd_disp_param *****************
  9022 ;; Defined at:
  9023 ;;		line 40 in file "disp_param.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;		None
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;  prail           1    6[BANK6 ] unsigned char 
  9028 ;;  ilim            1    5[BANK6 ] unsigned char 
  9029 ;;  clip            1    4[BANK6 ] unsigned char 
  9030 ;;  otwarn          1    3[BANK6 ] unsigned char 
  9031 ;;  otshut          1    2[BANK6 ] unsigned char 
  9032 ;;  ocdc            1    1[BANK6 ] unsigned char 
  9033 ;;  pfspo           1    0[BANK6 ] unsigned char 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9038 ;; Tracked objects:
  9039 ;;		On entry : 1D/4B00000
  9040 ;;		On exit  : 1F/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9044 ;;      Locals:         0       0       0       0       0       0       0       9       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9045 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9046 ;;      Totals:         0       0      12       0       0       0       0       9       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9047 ;;Total ram usage:       21 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:   15
  9050 ;; This function calls:
  9051 ;;		___lbmod
  9052 ;;		___wmul
  9053 ;;		_i2c_lcd_puts
  9054 ;;		_i2c_lcd_set_cursor_pos
  9055 ;;		_i2c_read1ByteRegister
  9056 ;;		_sprintf
  9057 ;; This function is called by:
  9058 ;;		_main
  9059 ;; This function uses a non-reentrant model
  9060 ;;
  9061                           
  9062                           
  9063                           ;psect for function _lcd_disp_param
  9064  0E6D                     _lcd_disp_param:
  9065                           
  9066                           ;disp_param.c: 42: uint8_t pfspo,ocdc, otshut, otwarn,clip,ilim,prail;;disp_param.c: 44:
      +                               i2c_lcd_set_cursor_pos(0, 0);
  9067                           
  9068                           ;incstack = 0
  9069                           ; Regs used in _lcd_disp_param: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9070  0E6D  0020               	movlb	0	; select bank0
  9071  0E6E  01B7               	clrf	i2c_lcd_set_cursor_pos@line
  9072  0E6F  3000               	movlw	0
  9073  0E70  3190  208E  318E   	fcall	_i2c_lcd_set_cursor_pos
  9074                           
  9075                           ;disp_param.c: 45:     sprintf(lcdbuff,"SOURCE:%s", lcd_src_name[current_source % 5]);
  9076  0E73  30A0               	movlw	low _lcdbuff
  9077  0E74  0021               	movlb	1	; select bank1
  9078  0E75  00C0               	movwf	sprintf@s^(0+128)
  9079  0E76  3002               	movlw	high _lcdbuff
  9080  0E77  00C1               	movwf	(sprintf@s^(0+128)+1)
  9081  0E78  30F5               	movlw	low (STR_17| (0+32768))
  9082  0E79  00C2               	movwf	sprintf@fmt^(0+128)
  9083  0E7A  30A0               	movlw	high (STR_17| (0+32768))
  9084  0E7B  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  9085  0E7C  3005               	movlw	5
  9086  0E7D  00DA               	movwf	??_lcd_disp_param^(0+128)
  9087  0E7E  085A               	movf	??_lcd_disp_param^(0+128),w
  9088  0E7F  0020               	movlb	0	; select bank0
  9089  0E80  00A3               	movwf	___lbmod@divisor
  9090  0E81  0021               	banksel	_current_source
  9091  0E82  0868               	movf	_current_source& (0+127),w
  9092  0E83  319D  25FB  318E   	fcall	___lbmod
  9093  0E86  0021               	movlb	1	; select bank1
  9094  0E87  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  9095  0E88  01DC               	clrf	((??_lcd_disp_param+1)^(0+128)+1)
  9096  0E89  35DB               	lslf	(??_lcd_disp_param+1)^(0+128),f
  9097  0E8A  0DDC               	rlf	((??_lcd_disp_param+1)^(0+128)+1),f
  9098  0E8B  35DB               	lslf	(??_lcd_disp_param+1)^(0+128),f
  9099  0E8C  0DDC               	rlf	((??_lcd_disp_param+1)^(0+128)+1),f
  9100  0E8D  35DB               	lslf	(??_lcd_disp_param+1)^(0+128),f
  9101  0E8E  0DDC               	rlf	((??_lcd_disp_param+1)^(0+128)+1),f
  9102  0E8F  302A               	movlw	low (_lcd_src_name| (0+32768))
  9103  0E90  00DD               	movwf	(??_lcd_disp_param+3)^(0+128)
  9104  0E91  30A0               	movlw	high (_lcd_src_name| (0+32768))
  9105  0E92  00DE               	movwf	((??_lcd_disp_param+3)^(0+128)+1)
  9106  0E93  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9107  0E94  075D               	addwf	(??_lcd_disp_param+3)^(0+128),w
  9108  0E95  00C4               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  9109  0E96  085C               	movf	(??_lcd_disp_param+2)^(0+128),w
  9110  0E97  3D5E               	addwfc	(??_lcd_disp_param+4)^(0+128),w
  9111  0E98  00C5               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  9112  0E99  319E  267D  318E   	fcall	_sprintf
  9113                           
  9114                           ;disp_param.c: 46:     i2c_lcd_puts(lcdbuff);
  9115  0E9C  30A0               	movlw	low _lcdbuff
  9116  0E9D  0020               	movlb	0	; select bank0
  9117  0E9E  00B7               	movwf	i2c_lcd_puts@s
  9118  0E9F  3002               	movlw	high _lcdbuff
  9119  0EA0  00B8               	movwf	i2c_lcd_puts@s+1
  9120  0EA1  319C  247D  318E   	fcall	_i2c_lcd_puts
  9121                           
  9122                           ;disp_param.c: 48:    i2c_lcd_set_cursor_pos(0, 1);
  9123  0EA4  01B7               	clrf	i2c_lcd_set_cursor_pos@line
  9124  0EA5  0AB7               	incf	i2c_lcd_set_cursor_pos@line,f
  9125  0EA6  3000               	movlw	0
  9126  0EA7  3190  208E  318E   	fcall	_i2c_lcd_set_cursor_pos
  9127                           
  9128                           ;disp_param.c: 49:     sprintf(lcdbuff,"AUX:%s HPF:%s", lcd_aux_name[current_direction %
      +                          2],lcd_aux_name[0]);
  9129  0EAA  3001               	movlw	1
  9130  0EAB  0021               	banksel	_current_direction
  9131  0EAC  0566               	andwf	_current_direction& (0+127),w
  9132  0EAD  0020               	movlb	0	; select bank0
  9133  0EAE  00A9               	movwf	___wmul@multiplier
  9134  0EAF  01AA               	clrf	___wmul@multiplier+1
  9135  0EB0  3007               	movlw	7
  9136  0EB1  00AB               	movwf	___wmul@multiplicand
  9137  0EB2  3000               	movlw	0
  9138  0EB3  00AC               	movwf	___wmul@multiplicand+1
  9139  0EB4  319D  2588  318E   	fcall	___wmul
  9140  0EB7  30CC               	movlw	low (_lcd_aux_name| (0+32768))
  9141  0EB8  0021               	movlb	1	; select bank1
  9142  0EB9  00DA               	movwf	??_lcd_disp_param^(0+128)
  9143  0EBA  30A0               	movlw	high (_lcd_aux_name| (0+32768))
  9144  0EBB  00DB               	movwf	(??_lcd_disp_param^(0+128)+1)
  9145  0EBC  0020               	movlb	0	; select bank0
  9146  0EBD  0829               	movf	?___wmul,w
  9147  0EBE  0021               	movlb	1	; select bank1
  9148  0EBF  075A               	addwf	??_lcd_disp_param^(0+128),w
  9149  0EC0  0026               	movlb	6	; select bank6
  9150  0EC1  00A7               	movwf	_lcd_disp_param$2713^(0+768)
  9151  0EC2  0020               	movlb	0	; select bank0
  9152  0EC3  082A               	movf	?___wmul+1,w
  9153  0EC4  0021               	movlb	1	; select bank1
  9154  0EC5  3D5B               	addwfc	(??_lcd_disp_param+1)^(0+128),w
  9155  0EC6  0026               	movlb	6	; select bank6
  9156  0EC7  00A8               	movwf	(_lcd_disp_param$2713+1)^(0+768)
  9157                           
  9158                           ;disp_param.c: 49:     sprintf(lcdbuff,"AUX:%s HPF:%s", lcd_aux_name[current_direction %
      +                          2],lcd_aux_name[0]);
  9159  0EC8  30A0               	movlw	low _lcdbuff
  9160  0EC9  0021               	movlb	1	; select bank1
  9161  0ECA  00C0               	movwf	sprintf@s^(0+128)
  9162  0ECB  3002               	movlw	high _lcdbuff
  9163  0ECC  00C1               	movwf	(sprintf@s^(0+128)+1)
  9164  0ECD  30DA               	movlw	low (STR_18| (0+32768))
  9165  0ECE  00C2               	movwf	sprintf@fmt^(0+128)
  9166  0ECF  30A0               	movlw	high (STR_18| (0+32768))
  9167  0ED0  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  9168  0ED1  0026               	movlb	6	; select bank6
  9169  0ED2  0828               	movf	(_lcd_disp_param$2713+1)^(0+768),w
  9170  0ED3  0021               	movlb	1	; select bank1
  9171  0ED4  00C5               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
  9172  0ED5  0026               	movlb	6	; select bank6
  9173  0ED6  0827               	movf	_lcd_disp_param$2713^(0+768),w
  9174  0ED7  0021               	movlb	1	; select bank1
  9175  0ED8  00C4               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
  9176  0ED9  30CC               	movlw	low (_lcd_aux_name| (0+32768))
  9177  0EDA  00C6               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
  9178  0EDB  30A0               	movlw	high (_lcd_aux_name| (0+32768))
  9179  0EDC  00C7               	movwf	((low ((?_sprintf| 0+6)))^(0+128)+1)
  9180  0EDD  319E  267D  318E   	fcall	_sprintf
  9181                           
  9182                           ;disp_param.c: 50:     i2c_lcd_puts(lcdbuff);
  9183  0EE0  30A0               	movlw	low _lcdbuff
  9184  0EE1  0020               	movlb	0	; select bank0
  9185  0EE2  00B7               	movwf	i2c_lcd_puts@s
  9186  0EE3  3002               	movlw	high _lcdbuff
  9187  0EE4  00B8               	movwf	i2c_lcd_puts@s+1
  9188  0EE5  319C  247D  318E   	fcall	_i2c_lcd_puts
  9189                           
  9190                           ;disp_param.c: 52:     pfspo = i2c_read1ByteRegister(0x40, 0x38);
  9191  0EE8  3038               	movlw	56
  9192  0EE9  0021               	movlb	1	; select bank1
  9193  0EEA  00DA               	movwf	??_lcd_disp_param^(0+128)
  9194  0EEB  085A               	movf	??_lcd_disp_param^(0+128),w
  9195  0EEC  0020               	movlb	0	; select bank0
  9196  0EED  00AC               	movwf	i2c_read1ByteRegister@reg
  9197  0EEE  3040               	movlw	64
  9198  0EEF  3191  2137  318E   	fcall	_i2c_read1ByteRegister
  9199  0EF2  0021               	movlb	1	; select bank1
  9200  0EF3  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  9201  0EF4  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9202  0EF5  0026               	movlb	6	; select bank6
  9203  0EF6  00A0               	movwf	lcd_disp_param@pfspo^(0+768)
  9204                           
  9205                           ;disp_param.c: 53:     i2c_lcd_set_cursor_pos(0, 2);
  9206  0EF7  3002               	movlw	2
  9207  0EF8  0021               	movlb	1	; select bank1
  9208  0EF9  00DA               	movwf	??_lcd_disp_param^(0+128)
  9209  0EFA  085A               	movf	??_lcd_disp_param^(0+128),w
  9210  0EFB  0020               	movlb	0	; select bank0
  9211  0EFC  00B7               	movwf	i2c_lcd_set_cursor_pos@line
  9212  0EFD  3000               	movlw	0
  9213  0EFE  3190  208E  318E   	fcall	_i2c_lcd_set_cursor_pos
  9214                           
  9215                           ;disp_param.c: 54:     sprintf(lcdbuff,"VOL:%3d BAL:%2d %s",current_volume, (signed char
      +                          )current_balance, lcd_fs_name[(0x0F &pfspo)]);
  9216  0F01  0026               	movlb	6	; select bank6
  9217  0F02  0820               	movf	lcd_disp_param@pfspo^(0+768),w
  9218  0F03  390F               	andlw	15
  9219  0F04  0021               	movlb	1	; select bank1
  9220  0F05  00DA               	movwf	??_lcd_disp_param^(0+128)
  9221  0F06  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
  9222  0F07  085A               	movf	??_lcd_disp_param^(0+128),w
  9223  0F08  0020               	movlb	0	; select bank0
  9224  0F09  00A9               	movwf	___wmul@multiplier
  9225  0F0A  0021               	movlb	1	; select bank1
  9226  0F0B  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9227  0F0C  0020               	movlb	0	; select bank0
  9228  0F0D  00AA               	movwf	___wmul@multiplier+1
  9229  0F0E  3007               	movlw	7
  9230  0F0F  00AB               	movwf	___wmul@multiplicand
  9231  0F10  3000               	movlw	0
  9232  0F11  00AC               	movwf	___wmul@multiplicand+1
  9233  0F12  319D  2588  318E   	fcall	___wmul
  9234  0F15  3000               	movlw	low (_lcd_fs_name| (0+32768))
  9235  0F16  0021               	movlb	1	; select bank1
  9236  0F17  00DC               	movwf	(??_lcd_disp_param+2)^(0+128)
  9237  0F18  3098               	movlw	high (_lcd_fs_name| (0+32768))
  9238  0F19  00DD               	movwf	((??_lcd_disp_param+2)^(0+128)+1)
  9239  0F1A  0020               	movlb	0	; select bank0
  9240  0F1B  0829               	movf	?___wmul,w
  9241  0F1C  0021               	movlb	1	; select bank1
  9242  0F1D  075C               	addwf	(??_lcd_disp_param+2)^(0+128),w
  9243  0F1E  0026               	movlb	6	; select bank6
  9244  0F1F  00A7               	movwf	_lcd_disp_param$2713^(0+768)
  9245  0F20  0020               	movlb	0	; select bank0
  9246  0F21  082A               	movf	?___wmul+1,w
  9247  0F22  0021               	movlb	1	; select bank1
  9248  0F23  3D5D               	addwfc	(??_lcd_disp_param+3)^(0+128),w
  9249  0F24  0026               	movlb	6	; select bank6
  9250  0F25  00A8               	movwf	(_lcd_disp_param$2713+1)^(0+768)
  9251                           
  9252                           ;disp_param.c: 54:     sprintf(lcdbuff,"VOL:%3d BAL:%2d %s",current_volume, (signed char
      +                          )current_balance, lcd_fs_name[(0x0F &pfspo)]);
  9253  0F26  30A0               	movlw	low _lcdbuff
  9254  0F27  0021               	movlb	1	; select bank1
  9255  0F28  00C0               	movwf	sprintf@s^(0+128)
  9256  0F29  3002               	movlw	high _lcdbuff
  9257  0F2A  00C1               	movwf	(sprintf@s^(0+128)+1)
  9258  0F2B  30A9               	movlw	low (STR_19| (0+32768))
  9259  0F2C  00C2               	movwf	sprintf@fmt^(0+128)
  9260  0F2D  30A0               	movlw	high (STR_19| (0+32768))
  9261  0F2E  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  9262  0F2F  0020               	banksel	_current_volume
  9263  0F30  086C               	movf	_current_volume& (0+127),w
  9264  0F31  0021               	movlb	1	; select bank1
  9265  0F32  00DA               	movwf	??_lcd_disp_param^(0+128)
  9266  0F33  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
  9267  0F34  085A               	movf	??_lcd_disp_param^(0+128),w
  9268  0F35  00C4               	movwf	(?_sprintf^(0+128)+4)
  9269  0F36  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9270  0F37  00C5               	movwf	((?_sprintf+1)^(0+128)+4)
  9271  0F38  0021               	banksel	_current_balance
  9272  0F39  0867               	movf	_current_balance& (0+127),w
  9273  0F3A  0021               	movlb	1	; select bank1
  9274  0F3B  00C6               	movwf	(?_sprintf^(0+128)+6)
  9275  0F3C  01C7               	clrf	((?_sprintf+1)^(0+128)+6)
  9276  0F3D  1BC6               	btfsc	(?_sprintf^(0+128)+6),7
  9277  0F3E  03C7               	decf	((?_sprintf+1)^(0+128)+6),f
  9278  0F3F  0026               	movlb	6	; select bank6
  9279  0F40  0828               	movf	(_lcd_disp_param$2713+1)^(0+768),w
  9280  0F41  0021               	movlb	1	; select bank1
  9281  0F42  00C9               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
  9282  0F43  0026               	movlb	6	; select bank6
  9283  0F44  0827               	movf	_lcd_disp_param$2713^(0+768),w
  9284  0F45  0021               	movlb	1	; select bank1
  9285  0F46  00C8               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
  9286  0F47  319E  267D  318E   	fcall	_sprintf
  9287                           
  9288                           ;disp_param.c: 55:     i2c_lcd_puts(lcdbuff);
  9289  0F4A  30A0               	movlw	low _lcdbuff
  9290  0F4B  0020               	movlb	0	; select bank0
  9291  0F4C  00B7               	movwf	i2c_lcd_puts@s
  9292  0F4D  3002               	movlw	high _lcdbuff
  9293  0F4E  00B8               	movwf	i2c_lcd_puts@s+1
  9294  0F4F  319C  247D  318E   	fcall	_i2c_lcd_puts
  9295                           
  9296                           ;disp_param.c: 57:     ocdc = i2c_read1ByteRegister(0x6a, 0x10);
  9297  0F52  3010               	movlw	16
  9298  0F53  0021               	movlb	1	; select bank1
  9299  0F54  00DA               	movwf	??_lcd_disp_param^(0+128)
  9300  0F55  085A               	movf	??_lcd_disp_param^(0+128),w
  9301  0F56  0020               	movlb	0	; select bank0
  9302  0F57  00AC               	movwf	i2c_read1ByteRegister@reg
  9303  0F58  306A               	movlw	106
  9304  0F59  3191  2137  318E   	fcall	_i2c_read1ByteRegister
  9305  0F5C  0021               	movlb	1	; select bank1
  9306  0F5D  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  9307  0F5E  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9308  0F5F  0026               	movlb	6	; select bank6
  9309  0F60  00A1               	movwf	lcd_disp_param@ocdc^(0+768)
  9310                           
  9311                           ;disp_param.c: 58:     otwarn = i2c_read1ByteRegister(0x6a, 0x13);
  9312  0F61  3013               	movlw	19
  9313  0F62  0021               	movlb	1	; select bank1
  9314  0F63  00DA               	movwf	??_lcd_disp_param^(0+128)
  9315  0F64  085A               	movf	??_lcd_disp_param^(0+128),w
  9316  0F65  0020               	movlb	0	; select bank0
  9317  0F66  00AC               	movwf	i2c_read1ByteRegister@reg
  9318  0F67  306A               	movlw	106
  9319  0F68  3191  2137  318E   	fcall	_i2c_read1ByteRegister
  9320  0F6B  0021               	movlb	1	; select bank1
  9321  0F6C  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  9322  0F6D  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9323  0F6E  0026               	movlb	6	; select bank6
  9324  0F6F  00A3               	movwf	lcd_disp_param@otwarn^(0+768)
  9325                           
  9326                           ;disp_param.c: 59:     clip = i2c_read1ByteRegister(0x6a, 0x24);
  9327  0F70  3024               	movlw	36
  9328  0F71  0021               	movlb	1	; select bank1
  9329  0F72  00DA               	movwf	??_lcd_disp_param^(0+128)
  9330  0F73  085A               	movf	??_lcd_disp_param^(0+128),w
  9331  0F74  0020               	movlb	0	; select bank0
  9332  0F75  00AC               	movwf	i2c_read1ByteRegister@reg
  9333  0F76  306A               	movlw	106
  9334  0F77  3191  2137  318E   	fcall	_i2c_read1ByteRegister
  9335  0F7A  0021               	movlb	1	; select bank1
  9336  0F7B  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  9337  0F7C  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9338  0F7D  0026               	movlb	6	; select bank6
  9339  0F7E  00A4               	movwf	lcd_disp_param@clip^(0+768)
  9340                           
  9341                           ;disp_param.c: 60:     ilim = i2c_read1ByteRegister(0x6a, 0x25);
  9342  0F7F  3025               	movlw	37
  9343  0F80  0021               	movlb	1	; select bank1
  9344  0F81  00DA               	movwf	??_lcd_disp_param^(0+128)
  9345  0F82  085A               	movf	??_lcd_disp_param^(0+128),w
  9346  0F83  0020               	movlb	0	; select bank0
  9347  0F84  00AC               	movwf	i2c_read1ByteRegister@reg
  9348  0F85  306A               	movlw	106
  9349  0F86  3191  2137  318E   	fcall	_i2c_read1ByteRegister
  9350  0F89  0021               	movlb	1	; select bank1
  9351  0F8A  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  9352  0F8B  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9353  0F8C  0026               	movlb	6	; select bank6
  9354  0F8D  00A5               	movwf	lcd_disp_param@ilim^(0+768)
  9355                           
  9356                           ;disp_param.c: 61:     otshut = i2c_read1ByteRegister(0x6a, 0x12);
  9357  0F8E  3012               	movlw	18
  9358  0F8F  0021               	movlb	1	; select bank1
  9359  0F90  00DA               	movwf	??_lcd_disp_param^(0+128)
  9360  0F91  085A               	movf	??_lcd_disp_param^(0+128),w
  9361  0F92  0020               	movlb	0	; select bank0
  9362  0F93  00AC               	movwf	i2c_read1ByteRegister@reg
  9363  0F94  306A               	movlw	106
  9364  0F95  3191  2137  318E   	fcall	_i2c_read1ByteRegister
  9365  0F98  0021               	movlb	1	; select bank1
  9366  0F99  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  9367  0F9A  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9368  0F9B  0026               	movlb	6	; select bank6
  9369  0F9C  00A2               	movwf	lcd_disp_param@otshut^(0+768)
  9370                           
  9371                           ;disp_param.c: 62:     prail = i2c_read1ByteRegister(0x6a, 0x11);
  9372  0F9D  3011               	movlw	17
  9373  0F9E  0021               	movlb	1	; select bank1
  9374  0F9F  00DA               	movwf	??_lcd_disp_param^(0+128)
  9375  0FA0  085A               	movf	??_lcd_disp_param^(0+128),w
  9376  0FA1  0020               	movlb	0	; select bank0
  9377  0FA2  00AC               	movwf	i2c_read1ByteRegister@reg
  9378  0FA3  306A               	movlw	106
  9379  0FA4  3191  2137  318E   	fcall	_i2c_read1ByteRegister
  9380  0FA7  0021               	movlb	1	; select bank1
  9381  0FA8  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
  9382  0FA9  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9383  0FAA  0026               	movlb	6	; select bank6
  9384  0FAB  00A6               	movwf	lcd_disp_param@prail^(0+768)
  9385                           
  9386                           ;disp_param.c: 63:  i2c_lcd_set_cursor_pos(0, 3);
  9387  0FAC  3003               	movlw	3
  9388  0FAD  0021               	movlb	1	; select bank1
  9389  0FAE  00DA               	movwf	??_lcd_disp_param^(0+128)
  9390  0FAF  085A               	movf	??_lcd_disp_param^(0+128),w
  9391  0FB0  0020               	movlb	0	; select bank0
  9392  0FB1  00B7               	movwf	i2c_lcd_set_cursor_pos@line
  9393  0FB2  3000               	movlw	0
  9394  0FB3  3190  208E  318E   	fcall	_i2c_lcd_set_cursor_pos
  9395                           
  9396                           ;disp_param.c: 64:     sprintf(lcdbuff,"WAR:%02X %02X %02X %02X %02X%02X",ocdc, otshut, 
      +                          otwarn,clip,ilim,prail);
  9397  0FB6  30A0               	movlw	low _lcdbuff
  9398  0FB7  0021               	movlb	1	; select bank1
  9399  0FB8  00C0               	movwf	sprintf@s^(0+128)
  9400  0FB9  3002               	movlw	high _lcdbuff
  9401  0FBA  00C1               	movwf	(sprintf@s^(0+128)+1)
  9402  0FBB  30DD               	movlw	low (STR_20| (0+32768))
  9403  0FBC  00C2               	movwf	sprintf@fmt^(0+128)
  9404  0FBD  3098               	movlw	high (STR_20| (0+32768))
  9405  0FBE  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  9406  0FBF  0026               	movlb	6	; select bank6
  9407  0FC0  0821               	movf	lcd_disp_param@ocdc^(0+768),w
  9408  0FC1  0021               	movlb	1	; select bank1
  9409  0FC2  00DA               	movwf	??_lcd_disp_param^(0+128)
  9410  0FC3  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
  9411  0FC4  085A               	movf	??_lcd_disp_param^(0+128),w
  9412  0FC5  00C4               	movwf	(?_sprintf^(0+128)+4)
  9413  0FC6  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
  9414  0FC7  00C5               	movwf	((?_sprintf+1)^(0+128)+4)
  9415  0FC8  0026               	movlb	6	; select bank6
  9416  0FC9  0822               	movf	lcd_disp_param@otshut^(0+768),w
  9417  0FCA  0021               	movlb	1	; select bank1
  9418  0FCB  00DC               	movwf	(??_lcd_disp_param+2)^(0+128)
  9419  0FCC  01DD               	clrf	((??_lcd_disp_param+2)^(0+128)+1)
  9420  0FCD  085C               	movf	(??_lcd_disp_param+2)^(0+128),w
  9421  0FCE  00C6               	movwf	(?_sprintf^(0+128)+6)
  9422  0FCF  085D               	movf	(??_lcd_disp_param+3)^(0+128),w
  9423  0FD0  00C7               	movwf	((?_sprintf+1)^(0+128)+6)
  9424  0FD1  0026               	movlb	6	; select bank6
  9425  0FD2  0823               	movf	lcd_disp_param@otwarn^(0+768),w
  9426  0FD3  0021               	movlb	1	; select bank1
  9427  0FD4  00DE               	movwf	(??_lcd_disp_param+4)^(0+128)
  9428  0FD5  01DF               	clrf	((??_lcd_disp_param+4)^(0+128)+1)
  9429  0FD6  085E               	movf	(??_lcd_disp_param+4)^(0+128),w
  9430  0FD7  00C8               	movwf	(?_sprintf^(0+128)+8)
  9431  0FD8  085F               	movf	(??_lcd_disp_param+5)^(0+128),w
  9432  0FD9  00C9               	movwf	((?_sprintf+1)^(0+128)+8)
  9433  0FDA  0026               	movlb	6	; select bank6
  9434  0FDB  0824               	movf	lcd_disp_param@clip^(0+768),w
  9435  0FDC  0021               	movlb	1	; select bank1
  9436  0FDD  00E0               	movwf	(??_lcd_disp_param+6)^(0+128)
  9437  0FDE  01E1               	clrf	((??_lcd_disp_param+6)^(0+128)+1)
  9438  0FDF  0860               	movf	(??_lcd_disp_param+6)^(0+128),w
  9439  0FE0  00CA               	movwf	(?_sprintf^(0+128)+10)
  9440  0FE1  0861               	movf	(??_lcd_disp_param+7)^(0+128),w
  9441  0FE2  00CB               	movwf	((?_sprintf+1)^(0+128)+10)
  9442  0FE3  0026               	movlb	6	; select bank6
  9443  0FE4  0825               	movf	lcd_disp_param@ilim^(0+768),w
  9444  0FE5  0021               	movlb	1	; select bank1
  9445  0FE6  00E2               	movwf	(??_lcd_disp_param+8)^(0+128)
  9446  0FE7  01E3               	clrf	((??_lcd_disp_param+8)^(0+128)+1)
  9447  0FE8  0862               	movf	(??_lcd_disp_param+8)^(0+128),w
  9448  0FE9  00CC               	movwf	(?_sprintf^(0+128)+12)
  9449  0FEA  0863               	movf	(??_lcd_disp_param+9)^(0+128),w
  9450  0FEB  00CD               	movwf	((?_sprintf+1)^(0+128)+12)
  9451  0FEC  0026               	movlb	6	; select bank6
  9452  0FED  0826               	movf	lcd_disp_param@prail^(0+768),w
  9453  0FEE  0021               	movlb	1	; select bank1
  9454  0FEF  00E4               	movwf	(??_lcd_disp_param+10)^(0+128)
  9455  0FF0  01E5               	clrf	((??_lcd_disp_param+10)^(0+128)+1)
  9456  0FF1  0864               	movf	(??_lcd_disp_param+10)^(0+128),w
  9457  0FF2  00CE               	movwf	(?_sprintf^(0+128)+14)
  9458  0FF3  0865               	movf	(??_lcd_disp_param+11)^(0+128),w
  9459  0FF4  00CF               	movwf	((?_sprintf+1)^(0+128)+14)
  9460  0FF5  319E  267D  318E   	fcall	_sprintf
  9461                           
  9462                           ;disp_param.c: 65:     i2c_lcd_puts(lcdbuff);
  9463  0FF8  30A0               	movlw	low _lcdbuff
  9464  0FF9  0020               	movlb	0	; select bank0
  9465  0FFA  00B7               	movwf	i2c_lcd_puts@s
  9466  0FFB  3002               	movlw	high _lcdbuff
  9467  0FFC  00B8               	movwf	i2c_lcd_puts@s+1
  9468  0FFD  319C  247D         	fcall	_i2c_lcd_puts
  9469  0FFF  0008               	return
  9470  1000                     __end_of_lcd_disp_param:
  9471                           
  9472                           	psect	text9
  9473  1E7D                     __ptext9:	
  9474 ;; *************** function _sprintf *****************
  9475 ;; Defined at:
  9476 ;;		line 9 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/nf_sprintf.c"
  9477 ;; Parameters:    Size  Location     Type
  9478 ;;  s               2   32[BANK1 ] PTR unsigned char 
  9479 ;;		 -> lcdbuff(0), lcdbuff(41), ledstr(0), ledbuff(0), 
  9480 ;;  fmt             2   34[BANK1 ] PTR const unsigned char 
  9481 ;;		 -> STR_20(33), STR_19(19), STR_18(14), STR_17(10), 
  9482 ;;		 -> STR_14(5), STR_13(5), STR_7(20), STR_5(4), 
  9483 ;;		 -> STR_2(4), 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  f               6   52[BANK1 ] struct _IO_FILE
  9486 ;;  ret             2    0        int 
  9487 ;;  ap              1   51[BANK1 ] PTR void [1]
  9488 ;;		 -> ?_sprintf(2), 
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  2   32[BANK1 ] int 
  9491 ;; Registers used:
  9492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9493 ;; Tracked objects:
  9494 ;;		On entry : 1F/1
  9495 ;;		On exit  : 1F/1
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9498 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9499 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9500 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9501 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9502 ;;Total ram usage:       26 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:   14
  9505 ;; This function calls:
  9506 ;;		_vfprintf
  9507 ;; This function is called by:
  9508 ;;		_set_gainstr
  9509 ;;		_main
  9510 ;;		_lcd_disp_param
  9511 ;; This function uses a non-reentrant model
  9512 ;;
  9513                           
  9514                           
  9515                           ;psect for function _sprintf
  9516  1E7D                     _sprintf:
  9517                           
  9518                           ;incstack = 0
  9519                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9520  1E7D  30C4               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  9521  1E7E  00D0               	movwf	??_sprintf^(0+128)
  9522  1E7F  0850               	movf	??_sprintf^(0+128),w
  9523  1E80  00D3               	movwf	sprintf@ap^(0+128)
  9524  1E81  0841               	movf	(sprintf@s+1)^(0+128),w
  9525  1E82  00D5               	movwf	(sprintf@f+1)^(0+128)
  9526  1E83  0840               	movf	sprintf@s^(0+128),w
  9527  1E84  00D4               	movwf	sprintf@f^(0+128)
  9528  1E85  01D6               	clrf	(sprintf@f^(0+128)+2)
  9529  1E86  01D7               	clrf	((sprintf@f+1)^(0+128)+2)
  9530  1E87  01D8               	clrf	(sprintf@f^(0+128)+4)
  9531  1E88  01D9               	clrf	((sprintf@f+1)^(0+128)+4)
  9532  1E89  0843               	movf	(sprintf@fmt+1)^(0+128),w
  9533  1E8A  00B9               	movwf	(vfprintf@fmt+1)^(0+128)
  9534  1E8B  0842               	movf	sprintf@fmt^(0+128),w
  9535  1E8C  00B8               	movwf	vfprintf@fmt^(0+128)
  9536  1E8D  30D3               	movlw	(low (sprintf@ap| 0))& (0+255)
  9537  1E8E  00D0               	movwf	??_sprintf^(0+128)
  9538  1E8F  0850               	movf	??_sprintf^(0+128),w
  9539  1E90  00BA               	movwf	vfprintf@ap^(0+128)
  9540  1E91  30D4               	movlw	(low (sprintf@f| 0))& (0+255)
  9541  1E92  3190  205D         	fcall	_vfprintf
  9542  1E94  3002               	movlw	2
  9543  1E95  3ED4               	addlw	(low (sprintf@f| 0))& (0+255)
  9544  1E96  0086               	movwf	6
  9545  1E97  0187               	clrf	7
  9546  1E98  3F40               	moviw [0]fsr1
  9547  1E99  0740               	addwf	sprintf@s^(0+128),w
  9548  1E9A  0084               	movwf	4
  9549  1E9B  3F41               	moviw [1]fsr1
  9550  1E9C  3D41               	addwfc	(sprintf@s+1)^(0+128),w
  9551  1E9D  0085               	movwf	5
  9552  1E9E  0180               	clrf	0
  9553  1E9F  0008               	return
  9554  1EA0                     __end_of_sprintf:
  9555                           
  9556                           	psect	text10
  9557  105D                     __ptext10:	
  9558 ;; *************** function _vfprintf *****************
  9559 ;; Defined at:
  9560 ;;		line 1390 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  9561 ;; Parameters:    Size  Location     Type
  9562 ;;  fp              1    wreg     PTR struct _IO_FILE
  9563 ;;		 -> sprintf@f(6), 
  9564 ;;  fmt             2   24[BANK1 ] PTR const unsigned char 
  9565 ;;		 -> STR_20(33), STR_19(19), STR_18(14), STR_17(10), 
  9566 ;;		 -> STR_14(5), STR_13(5), STR_7(20), STR_5(4), 
  9567 ;;		 -> STR_2(4), 
  9568 ;;  ap              1   26[BANK1 ] PTR PTR void 
  9569 ;;		 -> sprintf@ap(1), 
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;  fp              1   29[BANK1 ] PTR struct _IO_FILE
  9572 ;;		 -> sprintf@f(6), 
  9573 ;;  cfmt            2   30[BANK1 ] PTR unsigned char 
  9574 ;;		 -> STR_20(33), STR_19(19), STR_18(14), STR_17(10), 
  9575 ;;		 -> STR_14(5), STR_13(5), STR_7(20), STR_5(4), 
  9576 ;;		 -> STR_2(4), 
  9577 ;; Return value:  Size  Location     Type
  9578 ;;                  2   24[BANK1 ] int 
  9579 ;; Registers used:
  9580 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9581 ;; Tracked objects:
  9582 ;;		On entry : 1F/1
  9583 ;;		On exit  : 1F/1
  9584 ;;		Unchanged: 0/0
  9585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9586 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9587 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9588 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9589 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9590 ;;Total ram usage:        8 bytes
  9591 ;; Hardware stack levels used:    1
  9592 ;; Hardware stack levels required when called:   13
  9593 ;; This function calls:
  9594 ;;		_vfpfcnvrt
  9595 ;; This function is called by:
  9596 ;;		_sprintf
  9597 ;; This function uses a non-reentrant model
  9598 ;;
  9599                           
  9600                           
  9601                           ;psect for function _vfprintf
  9602  105D                     _vfprintf:
  9603                           
  9604                           ;incstack = 0
  9605                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9606                           ;vfprintf@fp stored from wreg
  9607  105D  00BD               	movwf	vfprintf@fp^(0+128)
  9608                           
  9609                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.30/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
  9610  105E  0839               	movf	(vfprintf@fmt+1)^(0+128),w
  9611  105F  00BF               	movwf	(vfprintf@cfmt+1)^(0+128)
  9612  1060  0838               	movf	vfprintf@fmt^(0+128),w
  9613  1061  00BE               	movwf	vfprintf@cfmt^(0+128)
  9614                           
  9615                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  9616  1062  0022               	movlb	2	; select bank2
  9617  1063  01A6               	clrf	_nout^(0+256)
  9618  1064  01A7               	clrf	(_nout+1)^(0+256)
  9619  1065                     l7374:	
  9620                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  9621                           
  9622                           
  9623                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
  9624  1065  0021               	movlb	1	; select bank1
  9625  1066  083E               	movf	vfprintf@cfmt^(0+128),w
  9626  1067  0084               	movwf	4
  9627  1068  083F               	movf	(vfprintf@cfmt+1)^(0+128),w
  9628  1069  0085               	movwf	5
  9629  106A  0012               	moviw fsr0++
  9630  106B  1903               	btfsc	3,2
  9631  106C  2885               	goto	l7376
  9632                           
  9633                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
  9634  106D  30BE               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  9635  106E  00BB               	movwf	??_vfprintf^(0+128)
  9636  106F  083B               	movf	??_vfprintf^(0+128),w
  9637  1070  0020               	movlb	0	; select bank0
  9638  1071  00E2               	movwf	vfpfcnvrt@fmt
  9639  1072  0021               	movlb	1	; select bank1
  9640  1073  083A               	movf	vfprintf@ap^(0+128),w
  9641  1074  00BC               	movwf	(??_vfprintf+1)^(0+128)
  9642  1075  083C               	movf	(??_vfprintf+1)^(0+128),w
  9643  1076  0020               	movlb	0	; select bank0
  9644  1077  00E3               	movwf	vfpfcnvrt@ap
  9645  1078  0021               	movlb	1	; select bank1
  9646  1079  083D               	movf	vfprintf@fp^(0+128),w
  9647  107A  3184  2494  3190   	fcall	_vfpfcnvrt
  9648  107D  0862               	movf	?_vfpfcnvrt,w
  9649  107E  0022               	movlb	2	; select bank2
  9650  107F  07A6               	addwf	_nout^(0+256),f
  9651  1080  0020               	movlb	0	; select bank0
  9652  1081  0863               	movf	?_vfpfcnvrt+1,w
  9653  1082  0022               	movlb	2	; select bank2
  9654  1083  3DA7               	addwfc	(_nout+1)^(0+256),f
  9655  1084  2865               	goto	l7374
  9656  1085                     l7376:
  9657                           
  9658                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
  9659  1085  0022               	movlb	2	; select bank2
  9660  1086  0827               	movf	(_nout+1)^(0+256),w
  9661  1087  0021               	movlb	1	; select bank1
  9662  1088  00B9               	movwf	(?_vfprintf+1)^(0+128)
  9663  1089  0022               	movlb	2	; select bank2
  9664  108A  0826               	movf	_nout^(0+256),w
  9665  108B  0021               	movlb	1	; select bank1
  9666  108C  00B8               	movwf	?_vfprintf^(0+128)
  9667  108D  0008               	return
  9668  108E                     __end_of_vfprintf:
  9669                           
  9670                           	psect	text11
  9671  0494                     __ptext11:	
  9672 ;; *************** function _vfpfcnvrt *****************
  9673 ;; Defined at:
  9674 ;;		line 692 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
  9675 ;; Parameters:    Size  Location     Type
  9676 ;;  fp              1    wreg     PTR struct _IO_FILE
  9677 ;;		 -> sprintf@f(6), 
  9678 ;;  fmt             1   66[BANK0 ] PTR PTR unsigned char 
  9679 ;;		 -> vfprintf@cfmt(2), 
  9680 ;;  ap              1   67[BANK0 ] PTR PTR void 
  9681 ;;		 -> sprintf@ap(1), 
  9682 ;; Auto vars:     Size  Location     Type
  9683 ;;  fp              1   23[BANK1 ] PTR struct _IO_FILE
  9684 ;;		 -> sprintf@f(6), 
  9685 ;;  llu             8    8[BANK1 ] unsigned long long 
  9686 ;;  ll              8    0[BANK1 ] long long 
  9687 ;;  f               4    0        long long 
  9688 ;;  ct              3    0        unsigned char [3]
  9689 ;;  done            2   19[BANK1 ] int 
  9690 ;;  cp              2   16[BANK1 ] PTR unsigned char 
  9691 ;;		 -> ?_sprintf(2), lcd_fs_name(112), lcd_aux_name(14), lcd_src_name(40), 
  9692 ;;  vp              2    0        PTR void 
  9693 ;;  i               2    0        int 
  9694 ;;  c               1   18[BANK1 ] unsigned char 
  9695 ;; Return value:  Size  Location     Type
  9696 ;;                  2   66[BANK0 ] int 
  9697 ;; Registers used:
  9698 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9699 ;; Tracked objects:
  9700 ;;		On entry : 1F/1
  9701 ;;		On exit  : 1F/0
  9702 ;;		Unchanged: 0/0
  9703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9704 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9705 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9706 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9707 ;;      Totals:         0       8      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9708 ;;Total ram usage:       32 bytes
  9709 ;; Hardware stack levels used:    1
  9710 ;; Hardware stack levels required when called:   12
  9711 ;; This function calls:
  9712 ;;		_atoi
  9713 ;;		_dtoa
  9714 ;;		_fputc
  9715 ;;		_isdigit
  9716 ;;		_stoa
  9717 ;;		_xtoa
  9718 ;; This function is called by:
  9719 ;;		_vfprintf
  9720 ;; This function uses a non-reentrant model
  9721 ;;
  9722                           
  9723                           
  9724                           ;psect for function _vfpfcnvrt
  9725  0494                     _vfpfcnvrt:
  9726                           
  9727                           ;incstack = 0
  9728                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9729                           ;vfpfcnvrt@fp stored from wreg
  9730  0494  00B7               	movwf	vfpfcnvrt@fp^(0+128)
  9731                           
  9732                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.30/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.30/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.30/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.30/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
  9733  0495  0020               	movlb	0	; select bank0
  9734  0496  0862               	movf	vfpfcnvrt@fmt,w
  9735  0497  0086               	movwf	6
  9736  0498  0187               	clrf	7
  9737  0499  3F40               	moviw [0]fsr1
  9738  049A  00E4               	movwf	??_vfpfcnvrt
  9739  049B  3F41               	moviw [1]fsr1
  9740  049C  00E5               	movwf	??_vfpfcnvrt+1
  9741  049D  0864               	movf	??_vfpfcnvrt,w
  9742  049E  0084               	movwf	4
  9743  049F  0865               	movf	??_vfpfcnvrt+1,w
  9744  04A0  0085               	movwf	5
  9745  04A1  0012               	moviw fsr0++
  9746  04A2  3A25               	xorlw	37
  9747  04A3  1D03               	btfss	3,2
  9748  04A4  2EC4               	goto	l7202
  9749                           
  9750                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  9751  04A5  0862               	movf	vfpfcnvrt@fmt,w
  9752  04A6  0086               	movwf	6
  9753  04A7  0187               	clrf	7
  9754  04A8  3001               	movlw	1
  9755  04A9  0781               	addwf	1,f
  9756  04AA  3141               	addfsr 1,1
  9757  04AB  1803               	skipnc
  9758  04AC  0A81               	incf	1,f
  9759                           
  9760                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
  9761  04AD  0022               	movlb	2	; select bank2
  9762  04AE  01A8               	clrf	_width^(0+256)
  9763  04AF  01A9               	clrf	(_width+1)^(0+256)
  9764  04B0  0020               	movlb	0	; select bank0
  9765  04B1  01EA               	clrf	_flags
  9766  04B2  01EB               	clrf	_flags+1
  9767                           
  9768                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
  9769  04B3  30FF               	movlw	255
  9770  04B4  0022               	movlb	2	; select bank2
  9771  04B5  00AA               	movwf	_prec^(0+256)
  9772  04B6  30FF               	movlw	255
  9773  04B7  00AB               	movwf	(_prec^(0+256)+1)
  9774                           
  9775                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 710:         done = 
      +                          0;
  9776  04B8  0021               	movlb	1	; select bank1
  9777  04B9  01B3               	clrf	vfpfcnvrt@done^(0+128)
  9778  04BA  01B4               	clrf	(vfpfcnvrt@done+1)^(0+128)
  9779                           
  9780                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 711:         while (
      +                          !done) {
  9781  04BB  2CD3               	goto	l7124
  9782  04BC                     l2049:	
  9783                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 713:                
      +                           case '-' :
  9784                           
  9785                           
  9786                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 714:                
      +                               flags |= (1 << 0);
  9787  04BC  146A               	bsf	_flags,0
  9788  04BD                     l7108:
  9789                           
  9790                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 715:                
      +                               ++*fmt;
  9791  04BD  0862               	movf	vfpfcnvrt@fmt,w
  9792  04BE  0086               	movwf	6
  9793  04BF  0187               	clrf	7
  9794  04C0  3001               	movlw	1
  9795  04C1  0781               	addwf	1,f
  9796  04C2  3141               	addfsr 1,1
  9797  04C3  1803               	skipnc
  9798  04C4  0A81               	incf	1,f
  9799                           
  9800                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 716:                
      +                               break;
  9801  04C5  2CD3               	goto	l7124
  9802  04C6                     l2051:	
  9803                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 717:                
      +                           case '0' :
  9804                           
  9805                           
  9806                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 718:                
      +                               flags |= (1 << 1);
  9807  04C6  14EA               	bsf	_flags,1
  9808  04C7  2CBD               	goto	l7108
  9809  04C8                     l2052:	
  9810                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 721:                
      +                           case '+' :
  9811                           
  9812                           
  9813                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 722:                
      +                               flags |= (1 << 2);
  9814  04C8  156A               	bsf	_flags,2
  9815  04C9  2CBD               	goto	l7108
  9816  04CA                     l2053:	
  9817                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 725:                
      +                           case ' ' :
  9818                           
  9819                           
  9820                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 726:                
      +                               flags |= (1 << 3);
  9821  04CA  15EA               	bsf	_flags,3
  9822  04CB  2CBD               	goto	l7108
  9823  04CC                     l2054:	
  9824                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 729:                
      +                           case '#' :
  9825                           
  9826                           
  9827                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 730:                
      +                               flags |= (1 << 4);
  9828  04CC  166A               	bsf	_flags,4
  9829  04CD  2CBD               	goto	l7108
  9830  04CE                     l7118:
  9831                           
  9832                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 734:                
      +                               done = 1;
  9833  04CE  3001               	movlw	1
  9834  04CF  0021               	movlb	1	; select bank1
  9835  04D0  00B3               	movwf	vfpfcnvrt@done^(0+128)
  9836  04D1  3000               	movlw	0
  9837  04D2  00B4               	movwf	(vfpfcnvrt@done^(0+128)+1)
  9838  04D3                     l7124:	
  9839                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 735:                
      +                               break;
  9840                           
  9841                           
  9842                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 711:         while (
      +                          !done) {
  9843  04D3  0021               	movlb	1	; select bank1
  9844  04D4  0833               	movf	vfpfcnvrt@done^(0+128),w
  9845  04D5  0434               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
  9846  04D6  1D03               	btfss	3,2
  9847  04D7  2CFE               	goto	l2056
  9848  04D8  0020               	movlb	0	; select bank0
  9849  04D9  0862               	movf	vfpfcnvrt@fmt,w
  9850  04DA  0086               	movwf	6
  9851  04DB  0187               	clrf	7
  9852  04DC  3F40               	moviw [0]fsr1
  9853  04DD  00E4               	movwf	??_vfpfcnvrt
  9854  04DE  3F41               	moviw [1]fsr1
  9855  04DF  00E5               	movwf	??_vfpfcnvrt+1
  9856  04E0  0864               	movf	??_vfpfcnvrt,w
  9857  04E1  0084               	movwf	4
  9858  04E2  0865               	movf	??_vfpfcnvrt+1,w
  9859  04E3  0085               	movwf	5
  9860  04E4  0800               	movf	0,w	;code access
  9861  04E5  00E6               	movwf	??_vfpfcnvrt+2
  9862  04E6  01E7               	clrf	??_vfpfcnvrt+3
  9863                           
  9864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9865                           ; Switch size 1, requested type "simple"
  9866                           ; Number of cases is 1, Range of values is 0 to 0
  9867                           ; switch strategies available:
  9868                           ; Name         Instructions Cycles
  9869                           ; simple_byte            4     3 (average)
  9870                           ; direct_byte            8     6 (fixed)
  9871                           ; jumptable            260     6 (fixed)
  9872                           ;	Chosen strategy is simple_byte
  9873  04E7  0867               	movf	??_vfpfcnvrt+3,w
  9874  04E8  3A00               	xorlw	0	; case 0
  9875  04E9  1903               	skipnz
  9876  04EA  2CEC               	goto	l8170
  9877  04EB  2CCE               	goto	l7118
  9878  04EC                     l8170:
  9879                           
  9880                           ; Switch size 1, requested type "simple"
  9881                           ; Number of cases is 5, Range of values is 32 to 48
  9882                           ; switch strategies available:
  9883                           ; Name         Instructions Cycles
  9884                           ; simple_byte           16     9 (average)
  9885                           ; direct_byte           43     9 (fixed)
  9886                           ; jumptable            263     9 (fixed)
  9887                           ;	Chosen strategy is simple_byte
  9888  04EC  0866               	movf	??_vfpfcnvrt+2,w
  9889  04ED  3A20               	xorlw	32	; case 32
  9890  04EE  1903               	skipnz
  9891  04EF  2CCA               	goto	l2053
  9892  04F0  3A03               	xorlw	3	; case 35
  9893  04F1  1903               	skipnz
  9894  04F2  2CCC               	goto	l2054
  9895  04F3  3A08               	xorlw	8	; case 43
  9896  04F4  1903               	skipnz
  9897  04F5  2CC8               	goto	l2052
  9898  04F6  3A06               	xorlw	6	; case 45
  9899  04F7  1903               	skipnz
  9900  04F8  2CBC               	goto	l2049
  9901  04F9  3A1D               	xorlw	29	; case 48
  9902  04FA  1903               	skipnz
  9903  04FB  2CC6               	goto	l2051
  9904  04FC  2CCE               	goto	l7118
  9905  04FD  2CD3               	goto	l7124
  9906  04FE                     l2056:
  9907                           
  9908                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 738:         if (fla
      +                          gs & (1 << 0)) {
  9909  04FE  0020               	movlb	0	; select bank0
  9910  04FF  1C6A               	btfss	_flags,0
  9911  0500  2D05               	goto	l7128
  9912                           
  9913                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 739:             fla
      +                          gs &= ~(1 << 1);
  9914  0501  30FD               	movlw	253
  9915  0502  05EA               	andwf	_flags,f
  9916  0503  30FF               	movlw	255
  9917  0504  05EB               	andwf	_flags+1,f
  9918  0505                     l7128:
  9919                           
  9920                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 745:         if ((*f
      +                          mt)[0] == '*') {
  9921  0505  0862               	movf	vfpfcnvrt@fmt,w
  9922  0506  0086               	movwf	6
  9923  0507  0187               	clrf	7
  9924  0508  3F40               	moviw [0]fsr1
  9925  0509  00E4               	movwf	??_vfpfcnvrt
  9926  050A  3F41               	moviw [1]fsr1
  9927  050B  00E5               	movwf	??_vfpfcnvrt+1
  9928  050C  0864               	movf	??_vfpfcnvrt,w
  9929  050D  0084               	movwf	4
  9930  050E  0865               	movf	??_vfpfcnvrt+1,w
  9931  050F  0085               	movwf	5
  9932  0510  0012               	moviw fsr0++
  9933  0511  3A2A               	xorlw	42
  9934  0512  1D03               	btfss	3,2
  9935  0513  2D34               	goto	l7140
  9936                           
  9937                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 746:             ++*
      +                          fmt;
  9938  0514  0862               	movf	vfpfcnvrt@fmt,w
  9939  0515  0086               	movwf	6
  9940  0516  0187               	clrf	7
  9941  0517  3001               	movlw	1
  9942  0518  0781               	addwf	1,f
  9943  0519  3141               	addfsr 1,1
  9944  051A  1803               	skipnc
  9945  051B  0A81               	incf	1,f
  9946                           
  9947                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 747:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
  9948  051C  0863               	movf	vfpfcnvrt@ap,w
  9949  051D  0086               	movwf	6
  9950  051E  0187               	clrf	7
  9951  051F  0801               	movf	1,w
  9952  0520  0084               	movwf	4
  9953  0521  0185               	clrf	5
  9954  0522  3002               	movlw	2
  9955  0523  0781               	addwf	1,f
  9956  0524  3F00               	moviw [0]fsr0
  9957  0525  0022               	movlb	2	; select bank2
  9958  0526  00A8               	movwf	_width^(0+256)
  9959  0527  3F01               	moviw [1]fsr0
  9960  0528  00A9               	movwf	(_width+1)^(0+256)
  9961                           
  9962                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 748:             if 
      +                          (width < 0) {
  9963  0529  1FA9               	btfss	(_width+1)^(0+256),7
  9964  052A  2D79               	goto	l7150
  9965                           
  9966                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 749:                
      +                           flags |= (1 << 0);
  9967  052B  0020               	movlb	0	; select bank0
  9968  052C  146A               	bsf	_flags,0
  9969                           
  9970                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 750:                
      +                           width = -width;
  9971  052D  0022               	movlb	2	; select bank2
  9972  052E  09A8               	comf	_width^(0+256),f
  9973  052F  09A9               	comf	(_width+1)^(0+256),f
  9974  0530  0AA8               	incf	_width^(0+256),f
  9975  0531  1903               	skipnz
  9976  0532  0AA9               	incf	(_width+1)^(0+256),f
  9977  0533  2D79               	goto	l7150
  9978  0534                     l7140:
  9979                           
  9980                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 753:             wid
      +                          th = atoi(*fmt);
  9981  0534  0862               	movf	vfpfcnvrt@fmt,w
  9982  0535  0086               	movwf	6
  9983  0536  0187               	clrf	7
  9984  0537  3F40               	moviw [0]fsr1
  9985  0538  00AF               	movwf	atoi@s
  9986  0539  3F41               	moviw [1]fsr1
  9987  053A  00B0               	movwf	atoi@s+1
  9988  053B  3196  2606  3184   	fcall	_atoi
  9989  053E  0830               	movf	?_atoi+1,w
  9990  053F  0022               	movlb	2	; select bank2
  9991  0540  00A9               	movwf	(_width+1)^(0+256)
  9992  0541  0020               	movlb	0	; select bank0
  9993  0542  082F               	movf	?_atoi,w
  9994  0543  0022               	movlb	2	; select bank2
  9995  0544  00A8               	movwf	_width^(0+256)
  9996                           
  9997                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 754:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9998  0545  2D4F               	goto	l7144
  9999  0546                     l7142:
 10000                           
 10001                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 755:                
      +                           ++*fmt;
 10002  0546  0020               	movlb	0	; select bank0
 10003  0547  0862               	movf	vfpfcnvrt@fmt,w
 10004  0548  0086               	movwf	6
 10005  0549  0187               	clrf	7
 10006  054A  3001               	movlw	1
 10007  054B  0781               	addwf	1,f
 10008  054C  3141               	addfsr 1,1
 10009  054D  1803               	skipnc
 10010  054E  0A81               	incf	1,f
 10011  054F                     l7144:
 10012  054F  0020               	movlb	0	; select bank0
 10013  0550  0862               	movf	vfpfcnvrt@fmt,w
 10014  0551  0086               	movwf	6
 10015  0552  0187               	clrf	7
 10016  0553  3F40               	moviw [0]fsr1
 10017  0554  00E4               	movwf	??_vfpfcnvrt
 10018  0555  3F41               	moviw [1]fsr1
 10019  0556  00E5               	movwf	??_vfpfcnvrt+1
 10020  0557  0864               	movf	??_vfpfcnvrt,w
 10021  0558  0084               	movwf	4
 10022  0559  0865               	movf	??_vfpfcnvrt+1,w
 10023  055A  0085               	movwf	5
 10024  055B  0800               	movf	0,w	;code access
 10025  055C  3ED0               	addlw	208
 10026  055D  00E6               	movwf	??_vfpfcnvrt+2
 10027  055E  30FF               	movlw	255
 10028  055F  1803               	skipnc
 10029  0560  3000               	movlw	0
 10030  0561  00E7               	movwf	??_vfpfcnvrt+3
 10031  0562  3000               	movlw	0
 10032  0563  0267               	subwf	??_vfpfcnvrt+3,w
 10033  0564  300A               	movlw	10
 10034  0565  1903               	skipnz
 10035  0566  0266               	subwf	??_vfpfcnvrt+2,w
 10036  0567  1803               	btfsc	3,0
 10037  0568  2D6B               	goto	u5280
 10038  0569  3001               	movlw	1
 10039  056A  2D6C               	goto	u5290
 10040  056B                     u5280:
 10041  056B  3000               	movlw	0
 10042  056C                     u5290:
 10043  056C  00E8               	movwf	??_vfpfcnvrt+4
 10044  056D  01E9               	clrf	??_vfpfcnvrt+5
 10045  056E  0868               	movf	??_vfpfcnvrt+4,w
 10046  056F  0021               	movlb	1	; select bank1
 10047  0570  00B5               	movwf	_vfpfcnvrt$2216^(0+128)
 10048  0571  0020               	movlb	0	; select bank0
 10049  0572  0869               	movf	??_vfpfcnvrt+5,w
 10050  0573  0021               	movlb	1	; select bank1
 10051  0574  00B6               	movwf	(_vfpfcnvrt$2216+1)^(0+128)
 10052  0575  0835               	movf	_vfpfcnvrt$2216^(0+128),w
 10053  0576  0436               	iorwf	(_vfpfcnvrt$2216+1)^(0+128),w
 10054  0577  1D03               	btfss	3,2
 10055  0578  2D46               	goto	l7142
 10056  0579                     l7150:
 10057                           
 10058                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 10059  0579  0020               	movlb	0	; select bank0
 10060  057A  0862               	movf	vfpfcnvrt@fmt,w
 10061  057B  0086               	movwf	6
 10062  057C  0187               	clrf	7
 10063  057D  3F40               	moviw [0]fsr1
 10064  057E  00E4               	movwf	??_vfpfcnvrt
 10065  057F  3F41               	moviw [1]fsr1
 10066  0580  00E5               	movwf	??_vfpfcnvrt+1
 10067  0581  0864               	movf	??_vfpfcnvrt,w
 10068  0582  0084               	movwf	4
 10069  0583  0865               	movf	??_vfpfcnvrt+1,w
 10070  0584  0085               	movwf	5
 10071  0585  0012               	moviw fsr0++
 10072  0586  3A64               	xorlw	100
 10073  0587  1903               	btfsc	3,2
 10074  0588  2D98               	goto	l7154
 10075  0589  0862               	movf	vfpfcnvrt@fmt,w
 10076  058A  0086               	movwf	6
 10077  058B  0187               	clrf	7
 10078  058C  3F40               	moviw [0]fsr1
 10079  058D  00E4               	movwf	??_vfpfcnvrt
 10080  058E  3F41               	moviw [1]fsr1
 10081  058F  00E5               	movwf	??_vfpfcnvrt+1
 10082  0590  0864               	movf	??_vfpfcnvrt,w
 10083  0591  0084               	movwf	4
 10084  0592  0865               	movf	??_vfpfcnvrt+1,w
 10085  0593  0085               	movwf	5
 10086  0594  0012               	moviw fsr0++
 10087  0595  3A69               	xorlw	105
 10088  0596  1D03               	btfss	3,2
 10089  0597  2DE4               	goto	l7162
 10090  0598                     l7154:
 10091                           
 10092                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
 10093  0598  0862               	movf	vfpfcnvrt@fmt,w
 10094  0599  0086               	movwf	6
 10095  059A  0187               	clrf	7
 10096  059B  3001               	movlw	1
 10097  059C  0781               	addwf	1,f
 10098  059D  3141               	addfsr 1,1
 10099  059E  1803               	skipnc
 10100  059F  0A81               	incf	1,f
 10101                           
 10102                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 10103  05A0  0863               	movf	vfpfcnvrt@ap,w
 10104  05A1  0086               	movwf	6
 10105  05A2  0187               	clrf	7
 10106  05A3  0801               	movf	1,w
 10107  05A4  0084               	movwf	4
 10108  05A5  0185               	clrf	5
 10109  05A6  3002               	movlw	2
 10110  05A7  0781               	addwf	1,f
 10111  05A8  3F00               	moviw [0]fsr0
 10112  05A9  00E4               	movwf	??_vfpfcnvrt
 10113  05AA  3F01               	moviw [1]fsr0
 10114  05AB  00E5               	movwf	??_vfpfcnvrt+1
 10115  05AC  0864               	movf	??_vfpfcnvrt,w
 10116  05AD  0021               	movlb	1	; select bank1
 10117  05AE  00A0               	movwf	vfpfcnvrt@ll^(0+128)
 10118  05AF  0020               	movlb	0	; select bank0
 10119  05B0  0865               	movf	??_vfpfcnvrt+1,w
 10120  05B1  0021               	movlb	1	; select bank1
 10121  05B2  00A1               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 10122  05B3  0D89               	rlf	9,f
 10123  05B4  3B89               	subwfb	9,f
 10124  05B5  0989               	comf	9,f
 10125  05B6  00A2               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 10126  05B7  00A3               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 10127  05B8  00A4               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 10128  05B9  00A5               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 10129  05BA  00A6               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 10130  05BB  00A7               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 10131                           
 10132                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
 10133  05BC  0820               	movf	vfpfcnvrt@ll^(0+128),w
 10134  05BD  0020               	movlb	0	; select bank0
 10135  05BE  00BE               	movwf	dtoa@d
 10136  05BF  0021               	movlb	1	; select bank1
 10137  05C0  0821               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 10138  05C1  0020               	movlb	0	; select bank0
 10139  05C2  00BF               	movwf	dtoa@d+1
 10140  05C3  0021               	movlb	1	; select bank1
 10141  05C4  0822               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 10142  05C5  0020               	movlb	0	; select bank0
 10143  05C6  00C0               	movwf	dtoa@d+2
 10144  05C7  0021               	movlb	1	; select bank1
 10145  05C8  0823               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 10146  05C9  0020               	movlb	0	; select bank0
 10147  05CA  00C1               	movwf	dtoa@d+3
 10148  05CB  0021               	movlb	1	; select bank1
 10149  05CC  0824               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 10150  05CD  0020               	movlb	0	; select bank0
 10151  05CE  00C2               	movwf	dtoa@d+4
 10152  05CF  0021               	movlb	1	; select bank1
 10153  05D0  0825               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 10154  05D1  0020               	movlb	0	; select bank0
 10155  05D2  00C3               	movwf	dtoa@d+5
 10156  05D3  0021               	movlb	1	; select bank1
 10157  05D4  0826               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 10158  05D5  0020               	movlb	0	; select bank0
 10159  05D6  00C4               	movwf	dtoa@d+6
 10160  05D7  0021               	movlb	1	; select bank1
 10161  05D8  0827               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 10162  05D9  0020               	movlb	0	; select bank0
 10163  05DA  00C5               	movwf	dtoa@d+7
 10164  05DB  0021               	movlb	1	; select bank1
 10165  05DC  0837               	movf	vfpfcnvrt@fp^(0+128),w
 10166  05DD  318B  23D0         	fcall	_dtoa
 10167  05DF  083F               	movf	?_dtoa+1,w
 10168  05E0  00E3               	movwf	?_vfpfcnvrt+1
 10169  05E1  083E               	movf	?_dtoa,w
 10170  05E2  00E2               	movwf	?_vfpfcnvrt
 10171  05E3  0008               	return
 10172  05E4                     l7162:
 10173                           
 10174                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1171:         if (*f
      +                          mt[0] == 's') {
 10175  05E4  0862               	movf	vfpfcnvrt@fmt,w
 10176  05E5  0086               	movwf	6
 10177  05E6  0187               	clrf	7
 10178  05E7  3F40               	moviw [0]fsr1
 10179  05E8  00E4               	movwf	??_vfpfcnvrt
 10180  05E9  3F41               	moviw [1]fsr1
 10181  05EA  00E5               	movwf	??_vfpfcnvrt+1
 10182  05EB  0864               	movf	??_vfpfcnvrt,w
 10183  05EC  0084               	movwf	4
 10184  05ED  0865               	movf	??_vfpfcnvrt+1,w
 10185  05EE  0085               	movwf	5
 10186  05EF  0012               	moviw fsr0++
 10187  05F0  3A73               	xorlw	115
 10188  05F1  1D03               	btfss	3,2
 10189  05F2  2E18               	goto	l7172
 10190                           
 10191                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1173:             ++
      +                          *fmt;
 10192  05F3  0862               	movf	vfpfcnvrt@fmt,w
 10193  05F4  0086               	movwf	6
 10194  05F5  0187               	clrf	7
 10195  05F6  3001               	movlw	1
 10196  05F7  0781               	addwf	1,f
 10197  05F8  3141               	addfsr 1,1
 10198  05F9  1803               	skipnc
 10199  05FA  0A81               	incf	1,f
 10200                           
 10201                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1174:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 10202  05FB  0863               	movf	vfpfcnvrt@ap,w
 10203  05FC  0086               	movwf	6
 10204  05FD  0187               	clrf	7
 10205  05FE  0801               	movf	1,w
 10206  05FF  0084               	movwf	4
 10207  0600  0185               	clrf	5
 10208  0601  3002               	movlw	2
 10209  0602  0781               	addwf	1,f
 10210  0603  3F00               	moviw [0]fsr0
 10211  0604  0021               	movlb	1	; select bank1
 10212  0605  00B0               	movwf	vfpfcnvrt@cp^(0+128)
 10213  0606  3F01               	moviw [1]fsr0
 10214  0607  00B1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 10215                           
 10216                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1176:             re
      +                          turn stoa(fp, cp);
 10217  0608  0831               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 10218  0609  0020               	movlb	0	; select bank0
 10219  060A  00AC               	movwf	stoa@s+1
 10220  060B  0021               	movlb	1	; select bank1
 10221  060C  0830               	movf	vfpfcnvrt@cp^(0+128),w
 10222  060D  0020               	movlb	0	; select bank0
 10223  060E  00AB               	movwf	stoa@s
 10224  060F  0021               	movlb	1	; select bank1
 10225  0610  0837               	movf	vfpfcnvrt@fp^(0+128),w
 10226  0611  3189  213A         	fcall	_stoa
 10227  0613  082C               	movf	?_stoa+1,w
 10228  0614  00E3               	movwf	?_vfpfcnvrt+1
 10229  0615  082B               	movf	?_stoa,w
 10230  0616  00E2               	movwf	?_vfpfcnvrt
 10231  0617  0008               	return
 10232  0618                     l7172:
 10233                           
 10234                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1296:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 10235  0618  0862               	movf	vfpfcnvrt@fmt,w
 10236  0619  0086               	movwf	6
 10237  061A  0187               	clrf	7
 10238  061B  3F40               	moviw [0]fsr1
 10239  061C  00E4               	movwf	??_vfpfcnvrt
 10240  061D  3F41               	moviw [1]fsr1
 10241  061E  00E5               	movwf	??_vfpfcnvrt+1
 10242  061F  0864               	movf	??_vfpfcnvrt,w
 10243  0620  0084               	movwf	4
 10244  0621  0865               	movf	??_vfpfcnvrt+1,w
 10245  0622  0085               	movwf	5
 10246  0623  0012               	moviw fsr0++
 10247  0624  3A78               	xorlw	120
 10248  0625  1903               	btfsc	3,2
 10249  0626  2E36               	goto	l7176
 10250  0627  0862               	movf	vfpfcnvrt@fmt,w
 10251  0628  0086               	movwf	6
 10252  0629  0187               	clrf	7
 10253  062A  3F40               	moviw [0]fsr1
 10254  062B  00E4               	movwf	??_vfpfcnvrt
 10255  062C  3F41               	moviw [1]fsr1
 10256  062D  00E5               	movwf	??_vfpfcnvrt+1
 10257  062E  0864               	movf	??_vfpfcnvrt,w
 10258  062F  0084               	movwf	4
 10259  0630  0865               	movf	??_vfpfcnvrt+1,w
 10260  0631  0085               	movwf	5
 10261  0632  0012               	moviw fsr0++
 10262  0633  3A58               	xorlw	88
 10263  0634  1D03               	btfss	3,2
 10264  0635  2E90               	goto	l7186
 10265  0636                     l7176:
 10266                           
 10267                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1298:             c 
      +                          = (*fmt)[0];
 10268  0636  0862               	movf	vfpfcnvrt@fmt,w
 10269  0637  0086               	movwf	6
 10270  0638  0187               	clrf	7
 10271  0639  3F40               	moviw [0]fsr1
 10272  063A  00E4               	movwf	??_vfpfcnvrt
 10273  063B  3F41               	moviw [1]fsr1
 10274  063C  00E5               	movwf	??_vfpfcnvrt+1
 10275  063D  0864               	movf	??_vfpfcnvrt,w
 10276  063E  0084               	movwf	4
 10277  063F  0865               	movf	??_vfpfcnvrt+1,w
 10278  0640  0085               	movwf	5
 10279  0641  0800               	movf	0,w	;code access
 10280  0642  00E6               	movwf	??_vfpfcnvrt+2
 10281  0643  0866               	movf	??_vfpfcnvrt+2,w
 10282  0644  0021               	movlb	1	; select bank1
 10283  0645  00B2               	movwf	vfpfcnvrt@c^(0+128)
 10284                           
 10285                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1299:             ++
      +                          *fmt;
 10286  0646  0020               	movlb	0	; select bank0
 10287  0647  0862               	movf	vfpfcnvrt@fmt,w
 10288  0648  0086               	movwf	6
 10289  0649  0187               	clrf	7
 10290  064A  3001               	movlw	1
 10291  064B  0781               	addwf	1,f
 10292  064C  3141               	addfsr 1,1
 10293  064D  1803               	skipnc
 10294  064E  0A81               	incf	1,f
 10295                           
 10296                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1300:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 10297  064F  0863               	movf	vfpfcnvrt@ap,w
 10298  0650  0086               	movwf	6
 10299  0651  0187               	clrf	7
 10300  0652  0801               	movf	1,w
 10301  0653  0084               	movwf	4
 10302  0654  0185               	clrf	5
 10303  0655  3002               	movlw	2
 10304  0656  0781               	addwf	1,f
 10305  0657  3F00               	moviw [0]fsr0
 10306  0658  0021               	movlb	1	; select bank1
 10307  0659  00A8               	movwf	vfpfcnvrt@llu^(0+128)
 10308  065A  3F01               	moviw [1]fsr0
 10309  065B  00A9               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 10310  065C  01AA               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 10311  065D  01AB               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 10312  065E  01AC               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 10313  065F  01AD               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 10314  0660  01AE               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 10315  0661  01AF               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 10316                           
 10317                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1302:             re
      +                          turn xtoa(fp, llu, c);
 10318  0662  0828               	movf	vfpfcnvrt@llu^(0+128),w
 10319  0663  0020               	movlb	0	; select bank0
 10320  0664  00BC               	movwf	xtoa@d
 10321  0665  0021               	movlb	1	; select bank1
 10322  0666  0829               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 10323  0667  0020               	movlb	0	; select bank0
 10324  0668  00BD               	movwf	xtoa@d+1
 10325  0669  0021               	movlb	1	; select bank1
 10326  066A  082A               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 10327  066B  0020               	movlb	0	; select bank0
 10328  066C  00BE               	movwf	xtoa@d+2
 10329  066D  0021               	movlb	1	; select bank1
 10330  066E  082B               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 10331  066F  0020               	movlb	0	; select bank0
 10332  0670  00BF               	movwf	xtoa@d+3
 10333  0671  0021               	movlb	1	; select bank1
 10334  0672  082C               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 10335  0673  0020               	movlb	0	; select bank0
 10336  0674  00C0               	movwf	xtoa@d+4
 10337  0675  0021               	movlb	1	; select bank1
 10338  0676  082D               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 10339  0677  0020               	movlb	0	; select bank0
 10340  0678  00C1               	movwf	xtoa@d+5
 10341  0679  0021               	movlb	1	; select bank1
 10342  067A  082E               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 10343  067B  0020               	movlb	0	; select bank0
 10344  067C  00C2               	movwf	xtoa@d+6
 10345  067D  0021               	movlb	1	; select bank1
 10346  067E  082F               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 10347  067F  0020               	movlb	0	; select bank0
 10348  0680  00C3               	movwf	xtoa@d+7
 10349  0681  0021               	movlb	1	; select bank1
 10350  0682  0832               	movf	vfpfcnvrt@c^(0+128),w
 10351  0683  0020               	movlb	0	; select bank0
 10352  0684  00E4               	movwf	??_vfpfcnvrt
 10353  0685  0864               	movf	??_vfpfcnvrt,w
 10354  0686  00C4               	movwf	xtoa@x
 10355  0687  0021               	movlb	1	; select bank1
 10356  0688  0837               	movf	vfpfcnvrt@fp^(0+128),w
 10357  0689  318D  251A         	fcall	_xtoa
 10358  068B  083D               	movf	?_xtoa+1,w
 10359  068C  00E3               	movwf	?_vfpfcnvrt+1
 10360  068D  083C               	movf	?_xtoa,w
 10361  068E  00E2               	movwf	?_vfpfcnvrt
 10362  068F  0008               	return
 10363  0690                     l7186:
 10364                           
 10365                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
 10366  0690  0862               	movf	vfpfcnvrt@fmt,w
 10367  0691  0086               	movwf	6
 10368  0692  0187               	clrf	7
 10369  0693  3F40               	moviw [0]fsr1
 10370  0694  00E4               	movwf	??_vfpfcnvrt
 10371  0695  3F41               	moviw [1]fsr1
 10372  0696  00E5               	movwf	??_vfpfcnvrt+1
 10373  0697  0864               	movf	??_vfpfcnvrt,w
 10374  0698  0084               	movwf	4
 10375  0699  0865               	movf	??_vfpfcnvrt+1,w
 10376  069A  0085               	movwf	5
 10377  069B  0012               	moviw fsr0++
 10378  069C  3A25               	xorlw	37
 10379  069D  1D03               	btfss	3,2
 10380  069E  2EB9               	goto	l7196
 10381                           
 10382                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
 10383  069F  0862               	movf	vfpfcnvrt@fmt,w
 10384  06A0  0086               	movwf	6
 10385  06A1  0187               	clrf	7
 10386  06A2  3001               	movlw	1
 10387  06A3  0781               	addwf	1,f
 10388  06A4  3141               	addfsr 1,1
 10389  06A5  1803               	skipnc
 10390  06A6  0A81               	incf	1,f
 10391                           
 10392                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
 10393  06A7  3025               	movlw	37
 10394  06A8  00A3               	movwf	fputc@c
 10395  06A9  3000               	movlw	0
 10396  06AA  00A4               	movwf	fputc@c+1
 10397  06AB  0021               	movlb	1	; select bank1
 10398  06AC  0837               	movf	vfpfcnvrt@fp^(0+128),w
 10399  06AD  0020               	movlb	0	; select bank0
 10400  06AE  00E4               	movwf	??_vfpfcnvrt
 10401  06AF  0864               	movf	??_vfpfcnvrt,w
 10402  06B0  00A5               	movwf	fputc@fp
 10403  06B1  3192  2210         	fcall	_fputc
 10404  06B3                     l7192:
 10405                           
 10406                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
 10407  06B3  3001               	movlw	1
 10408  06B4  0020               	movlb	0	; select bank0
 10409  06B5  00E2               	movwf	?_vfpfcnvrt
 10410  06B6  3000               	movlw	0
 10411  06B7  00E3               	movwf	?_vfpfcnvrt+1
 10412  06B8  0008               	return
 10413  06B9                     l7196:
 10414                           
 10415                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
 10416  06B9  0862               	movf	vfpfcnvrt@fmt,w
 10417  06BA  0086               	movwf	6
 10418  06BB  0187               	clrf	7
 10419  06BC  3001               	movlw	1
 10420  06BD  0781               	addwf	1,f
 10421  06BE  3141               	addfsr 1,1
 10422  06BF  1803               	skipnc
 10423  06C0  0A81               	incf	1,f
 10424                           
 10425                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
 10426  06C1  01E2               	clrf	?_vfpfcnvrt
 10427  06C2  01E3               	clrf	?_vfpfcnvrt+1
 10428  06C3  0008               	return
 10429  06C4                     l7202:
 10430                           
 10431                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
 10432  06C4  0862               	movf	vfpfcnvrt@fmt,w
 10433  06C5  0086               	movwf	6
 10434  06C6  0187               	clrf	7
 10435  06C7  3F40               	moviw [0]fsr1
 10436  06C8  00E4               	movwf	??_vfpfcnvrt
 10437  06C9  3F41               	moviw [1]fsr1
 10438  06CA  00E5               	movwf	??_vfpfcnvrt+1
 10439  06CB  0864               	movf	??_vfpfcnvrt,w
 10440  06CC  0084               	movwf	4
 10441  06CD  0865               	movf	??_vfpfcnvrt+1,w
 10442  06CE  0085               	movwf	5
 10443  06CF  0800               	movf	0,w	;code access
 10444  06D0  00E6               	movwf	??_vfpfcnvrt+2
 10445  06D1  01E7               	clrf	??_vfpfcnvrt+3
 10446  06D2  0866               	movf	??_vfpfcnvrt+2,w
 10447  06D3  00A3               	movwf	fputc@c
 10448  06D4  0867               	movf	??_vfpfcnvrt+3,w
 10449  06D5  00A4               	movwf	fputc@c+1
 10450  06D6  0021               	movlb	1	; select bank1
 10451  06D7  0837               	movf	vfpfcnvrt@fp^(0+128),w
 10452  06D8  0020               	movlb	0	; select bank0
 10453  06D9  00E8               	movwf	??_vfpfcnvrt+4
 10454  06DA  0868               	movf	??_vfpfcnvrt+4,w
 10455  06DB  00A5               	movwf	fputc@fp
 10456  06DC  3192  2210  3184   	fcall	_fputc
 10457                           
 10458                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
 10459  06DF  0020               	movlb	0	; select bank0
 10460  06E0  0862               	movf	vfpfcnvrt@fmt,w
 10461  06E1  0086               	movwf	6
 10462  06E2  0187               	clrf	7
 10463  06E3  3001               	movlw	1
 10464  06E4  0781               	addwf	1,f
 10465  06E5  3141               	addfsr 1,1
 10466  06E6  1803               	skipnc
 10467  06E7  0A81               	incf	1,f
 10468  06E8  2EB3               	goto	l7192
 10469  06E9                     __end_of_vfpfcnvrt:
 10470                           
 10471                           	psect	text12
 10472  0D1A                     __ptext12:	
 10473 ;; *************** function _xtoa *****************
 10474 ;; Defined at:
 10475 ;;		line 645 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 10476 ;; Parameters:    Size  Location     Type
 10477 ;;  fp              1    wreg     PTR struct _IO_FILE
 10478 ;;		 -> sprintf@f(6), 
 10479 ;;  d               8   28[BANK0 ] unsigned long long 
 10480 ;;  x               1   36[BANK0 ] unsigned char 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;  fp              1   45[BANK0 ] PTR struct _IO_FILE
 10483 ;;		 -> sprintf@f(6), 
 10484 ;;  n               8   54[BANK0 ] unsigned long long 
 10485 ;;  c               2   64[BANK0 ] int 
 10486 ;;  i               2   62[BANK0 ] int 
 10487 ;;  w               2   52[BANK0 ] int 
 10488 ;;  p               2   50[BANK0 ] int 
 10489 ;; Return value:  Size  Location     Type
 10490 ;;                  2   28[BANK0 ] int 
 10491 ;; Registers used:
 10492 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10493 ;; Tracked objects:
 10494 ;;		On entry : 1F/1
 10495 ;;		On exit  : 1F/0
 10496 ;;		Unchanged: 0/0
 10497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10498 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10499 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10500 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10501 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10502 ;;Total ram usage:       38 bytes
 10503 ;; Hardware stack levels used:    1
 10504 ;; Hardware stack levels required when called:   11
 10505 ;; This function calls:
 10506 ;;		_isalpha
 10507 ;;		_isupper
 10508 ;;		_pad
 10509 ;;		_toupper
 10510 ;; This function is called by:
 10511 ;;		_vfpfcnvrt
 10512 ;; This function uses a non-reentrant model
 10513 ;;
 10514                           
 10515                           
 10516                           ;psect for function _xtoa
 10517  0D1A                     _xtoa:
 10518                           
 10519                           ;incstack = 0
 10520                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10521                           ;xtoa@fp stored from wreg
 10522  0D1A  0020               	movlb	0	; select bank0
 10523  0D1B  00CD               	movwf	xtoa@fp
 10524                           
 10525                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 645: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.30/pic/sources/c
      +                          99/common/doprnt.c: 646: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/dopr
      +                          nt.c: 647:     int c, i, p, w;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/
      +                          doprnt.c: 648:     unsigned long long n;;/Applications/microchip/xc8/v2.30/pic/sources/c
      +                          99/common/doprnt.c: 651:     if (!(prec < 0)) {
 10526  0D1C  0022               	movlb	2	; select bank2
 10527  0D1D  1BAB               	btfsc	(_prec+1)^(0+256),7
 10528  0D1E  2D24               	goto	l2015
 10529                           
 10530                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 652:         flags &
      +                          = ~(1 << 1);
 10531  0D1F  30FD               	movlw	253
 10532  0D20  0020               	movlb	0	; select bank0
 10533  0D21  05EA               	andwf	_flags,f
 10534  0D22  30FF               	movlw	255
 10535  0D23  05EB               	andwf	_flags+1,f
 10536  0D24                     l2015:	
 10537                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 653:     }
 10538                           
 10539                           
 10540                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 654:     p = (0 < pr
      +                          ec) ? prec : 1;
 10541  0D24  0022               	movlb	2	; select bank2
 10542  0D25  082B               	movf	(_prec+1)^(0+256),w
 10543  0D26  3A80               	xorlw	128
 10544  0D27  0020               	movlb	0	; select bank0
 10545  0D28  00C5               	movwf	??_xtoa
 10546  0D29  3080               	movlw	128
 10547  0D2A  0245               	subwf	??_xtoa,w
 10548  0D2B  1D03               	skipz
 10549  0D2C  2D30               	goto	u4975
 10550  0D2D  3001               	movlw	1
 10551  0D2E  0022               	movlb	2	; select bank2
 10552  0D2F  022A               	subwf	_prec^(0+256),w
 10553  0D30                     u4975:
 10554  0D30  1803               	skipnc
 10555  0D31  2D38               	goto	l6902
 10556  0D32  3001               	movlw	1
 10557  0D33  0020               	movlb	0	; select bank0
 10558  0D34  00D2               	movwf	xtoa@p
 10559  0D35  3000               	movlw	0
 10560  0D36  00D3               	movwf	xtoa@p+1
 10561  0D37  2D40               	goto	l2019
 10562  0D38                     l6902:
 10563  0D38  0022               	movlb	2	; select bank2
 10564  0D39  082B               	movf	(_prec+1)^(0+256),w
 10565  0D3A  0020               	movlb	0	; select bank0
 10566  0D3B  00D3               	movwf	xtoa@p+1
 10567  0D3C  0022               	movlb	2	; select bank2
 10568  0D3D  082A               	movf	_prec^(0+256),w
 10569  0D3E  0020               	movlb	0	; select bank0
 10570  0D3F  00D2               	movwf	xtoa@p
 10571  0D40                     l2019:
 10572                           
 10573                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 655:     w = width;
 10574  0D40  0022               	movlb	2	; select bank2
 10575  0D41  0829               	movf	(_width+1)^(0+256),w
 10576  0D42  0020               	movlb	0	; select bank0
 10577  0D43  00D5               	movwf	xtoa@w+1
 10578  0D44  0022               	movlb	2	; select bank2
 10579  0D45  0828               	movf	_width^(0+256),w
 10580  0D46  0020               	movlb	0	; select bank0
 10581  0D47  00D4               	movwf	xtoa@w
 10582                           
 10583                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 10584  0D48  1E6A               	btfss	_flags,4
 10585  0D49  2D4E               	goto	l6908
 10586                           
 10587                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 657:         w -= 2;
 10588  0D4A  30FE               	movlw	254
 10589  0D4B  07D4               	addwf	xtoa@w,f
 10590  0D4C  30FF               	movlw	255
 10591  0D4D  3DD5               	addwfc	xtoa@w+1,f
 10592  0D4E                     l6908:
 10593                           
 10594                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 661:     n = d;
 10595  0D4E  083C               	movf	xtoa@d,w
 10596  0D4F  00D6               	movwf	xtoa@n
 10597  0D50  083D               	movf	xtoa@d+1,w
 10598  0D51  00D7               	movwf	xtoa@n+1
 10599  0D52  083E               	movf	xtoa@d+2,w
 10600  0D53  00D8               	movwf	xtoa@n+2
 10601  0D54  083F               	movf	xtoa@d+3,w
 10602  0D55  00D9               	movwf	xtoa@n+3
 10603  0D56  0840               	movf	xtoa@d+4,w
 10604  0D57  00DA               	movwf	xtoa@n+4
 10605  0D58  0841               	movf	xtoa@d+5,w
 10606  0D59  00DB               	movwf	xtoa@n+5
 10607  0D5A  0842               	movf	xtoa@d+6,w
 10608  0D5B  00DC               	movwf	xtoa@n+6
 10609  0D5C  0843               	movf	xtoa@d+7,w
 10610  0D5D  00DD               	movwf	xtoa@n+7
 10611                           
 10612                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 662:     i = sizeof(
      +                          dbuf) - 1;
 10613  0D5E  301F               	movlw	31
 10614  0D5F  00DE               	movwf	xtoa@i
 10615  0D60  3000               	movlw	0
 10616  0D61  00DF               	movwf	xtoa@i+1
 10617                           
 10618                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 663:     dbuf[i] = '
      +                          \0';
 10619  0D62  0025               	movlb	5	; select bank5
 10620  0D63  01E8               	clrf	(_dbuf^(0+640)+31)
 10621                           
 10622                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 664:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10623  0D64  2E0E               	goto	l6940
 10624  0D65                     l6912:
 10625                           
 10626                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 665:         --i;
 10627  0D65  30FF               	movlw	255
 10628  0D66  0020               	movlb	0	; select bank0
 10629  0D67  07DE               	addwf	xtoa@i,f
 10630  0D68  30FF               	movlw	255
 10631  0D69  3DDF               	addwfc	xtoa@i+1,f
 10632                           
 10633                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 666:         c = n &
      +                           0x0f;
 10634  0D6A  300F               	movlw	15
 10635  0D6B  0556               	andwf	xtoa@n,w
 10636  0D6C  00E0               	movwf	xtoa@c
 10637  0D6D  3000               	movlw	0
 10638  0D6E  0557               	andwf	xtoa@n+1,w
 10639  0D6F  00E1               	movwf	xtoa@c+1
 10640                           
 10641                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 667:         c = (c 
      +                          < 10) ? (int)'0' + c : (int)'a' + (c - 10);
 10642  0D70  0861               	movf	xtoa@c+1,w
 10643  0D71  3A80               	xorlw	128
 10644  0D72  00C5               	movwf	??_xtoa
 10645  0D73  3080               	movlw	128
 10646  0D74  0245               	subwf	??_xtoa,w
 10647  0D75  1D03               	skipz
 10648  0D76  2D79               	goto	u4995
 10649  0D77  300A               	movlw	10
 10650  0D78  0260               	subwf	xtoa@c,w
 10651  0D79                     u4995:
 10652  0D79  1C03               	skipc
 10653  0D7A  2D7F               	goto	l6916
 10654  0D7B  0020               	movlb	0	; select bank0
 10655  0D7C  0860               	movf	xtoa@c,w
 10656  0D7D  3E57               	addlw	87
 10657  0D7E  2D82               	goto	L3
 10658  0D7F                     l6916:
 10659  0D7F  0020               	movlb	0	; select bank0
 10660  0D80  0860               	movf	xtoa@c,w
 10661  0D81  3E30               	addlw	48
 10662  0D82                     L3:
 10663  0D82  00E0               	movwf	xtoa@c
 10664  0D83  3000               	movlw	0
 10665  0D84  3D61               	addwfc	xtoa@c+1,w
 10666  0D85  00E1               	movwf	xtoa@c+1
 10667  0D86  0844               	movf	xtoa@x,w
 10668  0D87  3EBF               	addlw	191
 10669  0D88  00C5               	movwf	??_xtoa
 10670  0D89  30FF               	movlw	255
 10671  0D8A  1803               	skipnc
 10672  0D8B  3000               	movlw	0
 10673  0D8C  00C6               	movwf	??_xtoa+1
 10674  0D8D  3000               	movlw	0
 10675  0D8E  0246               	subwf	??_xtoa+1,w
 10676  0D8F  301A               	movlw	26
 10677  0D90  1903               	skipnz
 10678  0D91  0245               	subwf	??_xtoa,w
 10679  0D92  1803               	btfsc	3,0
 10680  0D93  2D96               	goto	u5000
 10681  0D94  3001               	movlw	1
 10682  0D95  2D97               	goto	u5010
 10683  0D96                     u5000:
 10684  0D96  3000               	movlw	0
 10685  0D97                     u5010:
 10686  0D97  00C7               	movwf	??_xtoa+2
 10687  0D98  01C8               	clrf	??_xtoa+3
 10688  0D99  0847               	movf	??_xtoa+2,w
 10689  0D9A  00CE               	movwf	_xtoa$2201
 10690  0D9B  0848               	movf	??_xtoa+3,w
 10691  0D9C  00CF               	movwf	_xtoa$2201+1
 10692  0D9D  084E               	movf	_xtoa$2201,w
 10693  0D9E  044F               	iorwf	_xtoa$2201+1,w
 10694  0D9F  1903               	btfsc	3,2
 10695  0DA0  2DCC               	goto	l6932
 10696  0DA1  3020               	movlw	32
 10697  0DA2  0460               	iorwf	xtoa@c,w
 10698  0DA3  00C5               	movwf	??_xtoa
 10699  0DA4  3000               	movlw	0
 10700  0DA5  0461               	iorwf	xtoa@c+1,w
 10701  0DA6  00C6               	movwf	??_xtoa+1
 10702  0DA7  0845               	movf	??_xtoa,w
 10703  0DA8  3E9F               	addlw	159
 10704  0DA9  00C7               	movwf	??_xtoa+2
 10705  0DAA  30FF               	movlw	255
 10706  0DAB  3D46               	addwfc	??_xtoa+1,w
 10707  0DAC  00C8               	movwf	??_xtoa+3
 10708  0DAD  3000               	movlw	0
 10709  0DAE  0248               	subwf	??_xtoa+3,w
 10710  0DAF  301A               	movlw	26
 10711  0DB0  1903               	skipnz
 10712  0DB1  0247               	subwf	??_xtoa+2,w
 10713  0DB2  1803               	btfsc	3,0
 10714  0DB3  2DB6               	goto	u5030
 10715  0DB4  3001               	movlw	1
 10716  0DB5  2DB7               	goto	u5040
 10717  0DB6                     u5030:
 10718  0DB6  3000               	movlw	0
 10719  0DB7                     u5040:
 10720  0DB7  00C9               	movwf	??_xtoa+4
 10721  0DB8  01CA               	clrf	??_xtoa+5
 10722  0DB9  0849               	movf	??_xtoa+4,w
 10723  0DBA  00D0               	movwf	_xtoa$2202
 10724  0DBB  084A               	movf	??_xtoa+5,w
 10725  0DBC  00D1               	movwf	_xtoa$2202+1
 10726  0DBD  0850               	movf	_xtoa$2202,w
 10727  0DBE  0451               	iorwf	_xtoa$2202+1,w
 10728  0DBF  1903               	btfsc	3,2
 10729  0DC0  2DCC               	goto	l6932
 10730                           
 10731                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 669:             c =
      +                           toupper(c);
 10732  0DC1  0861               	movf	xtoa@c+1,w
 10733  0DC2  00AA               	movwf	toupper@c+1
 10734  0DC3  0860               	movf	xtoa@c,w
 10735  0DC4  00A9               	movwf	toupper@c
 10736  0DC5  319E  265C  318D   	fcall	_toupper
 10737  0DC8  082A               	movf	?_toupper+1,w
 10738  0DC9  00E1               	movwf	xtoa@c+1
 10739  0DCA  0829               	movf	?_toupper,w
 10740  0DCB  00E0               	movwf	xtoa@c
 10741  0DCC                     l6932:
 10742                           
 10743                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 671:         dbuf[i]
      +                           = (char)c;
 10744  0DCC  0860               	movf	xtoa@c,w
 10745  0DCD  00C5               	movwf	??_xtoa
 10746  0DCE  085E               	movf	xtoa@i,w
 10747  0DCF  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10748  0DD0  0086               	movwf	6
 10749  0DD1  3002               	movlw	2	; select bank5/6
 10750  0DD2  0087               	movwf	7
 10751  0DD3  0845               	movf	??_xtoa,w
 10752  0DD4  0081               	movwf	1
 10753                           
 10754                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 672:         --p;
 10755  0DD5  30FF               	movlw	255
 10756  0DD6  07D2               	addwf	xtoa@p,f
 10757  0DD7  30FF               	movlw	255
 10758  0DD8  3DD3               	addwfc	xtoa@p+1,f
 10759                           
 10760                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 673:         --w;
 10761  0DD9  30FF               	movlw	255
 10762  0DDA  07D4               	addwf	xtoa@w,f
 10763  0DDB  30FF               	movlw	255
 10764  0DDC  3DD5               	addwfc	xtoa@w+1,f
 10765                           
 10766                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 674:         n = n >
      +                          > 4;
 10767  0DDD  3056               	movlw	low xtoa@n
 10768  0DDE  0086               	movwf	6
 10769  0DDF  3000               	movlw	high xtoa@n
 10770  0DE0  0087               	movwf	7
 10771  0DE1  3F40               	moviw [0]fsr1
 10772  0DE2  00C5               	movwf	??_xtoa
 10773  0DE3  3F41               	moviw [1]fsr1
 10774  0DE4  00C6               	movwf	??_xtoa+1
 10775  0DE5  3F42               	moviw [2]fsr1
 10776  0DE6  00C7               	movwf	??_xtoa+2
 10777  0DE7  3F43               	moviw [3]fsr1
 10778  0DE8  00C8               	movwf	??_xtoa+3
 10779  0DE9  3F44               	moviw [4]fsr1
 10780  0DEA  00C9               	movwf	??_xtoa+4
 10781  0DEB  3F45               	moviw [5]fsr1
 10782  0DEC  00CA               	movwf	??_xtoa+5
 10783  0DED  3F46               	moviw [6]fsr1
 10784  0DEE  00CB               	movwf	??_xtoa+6
 10785  0DEF  3F47               	moviw [7]fsr1
 10786  0DF0  00CC               	movwf	??_xtoa+7
 10787  0DF1  3004               	movlw	4
 10788  0DF2                     u5065:
 10789  0DF2  0020               	movlb	0	; select bank0
 10790  0DF3  36CC               	lsrf	??_xtoa+7,f
 10791  0DF4  0CCB               	rrf	??_xtoa+6,f
 10792  0DF5  0CCA               	rrf	??_xtoa+5,f
 10793  0DF6  0CC9               	rrf	??_xtoa+4,f
 10794  0DF7  0CC8               	rrf	??_xtoa+3,f
 10795  0DF8  0CC7               	rrf	??_xtoa+2,f
 10796  0DF9  0CC6               	rrf	??_xtoa+1,f
 10797  0DFA  0CC5               	rrf	??_xtoa,f
 10798  0DFB  0B89               	decfsz	9,f
 10799  0DFC  2DF2               	goto	u5065
 10800  0DFD  0020               	movlb	0	; select bank0
 10801  0DFE  084C               	movf	??_xtoa+7,w
 10802  0DFF  00DD               	movwf	xtoa@n+7
 10803  0E00  084B               	movf	??_xtoa+6,w
 10804  0E01  00DC               	movwf	xtoa@n+6
 10805  0E02  084A               	movf	??_xtoa+5,w
 10806  0E03  00DB               	movwf	xtoa@n+5
 10807  0E04  0849               	movf	??_xtoa+4,w
 10808  0E05  00DA               	movwf	xtoa@n+4
 10809  0E06  0848               	movf	??_xtoa+3,w
 10810  0E07  00D9               	movwf	xtoa@n+3
 10811  0E08  0847               	movf	??_xtoa+2,w
 10812  0E09  00D8               	movwf	xtoa@n+2
 10813  0E0A  0846               	movf	??_xtoa+1,w
 10814  0E0B  00D7               	movwf	xtoa@n+1
 10815  0E0C  0845               	movf	??_xtoa,w
 10816  0E0D  00D6               	movwf	xtoa@n
 10817  0E0E                     l6940:
 10818                           
 10819                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 664:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10820  0E0E  0020               	movlb	0	; select bank0
 10821  0E0F  085F               	movf	xtoa@i+1,w
 10822  0E10  3A80               	xorlw	128
 10823  0E11  00C5               	movwf	??_xtoa
 10824  0E12  3080               	movlw	128
 10825  0E13  0245               	subwf	??_xtoa,w
 10826  0E14  1D03               	skipz
 10827  0E15  2E18               	goto	u5075
 10828  0E16  3002               	movlw	2
 10829  0E17  025E               	subwf	xtoa@i,w
 10830  0E18                     u5075:
 10831  0E18  1C03               	skipc
 10832  0E19  2E3F               	goto	l2040
 10833  0E1A  0020               	movlb	0	; select bank0
 10834  0E1B  0856               	movf	xtoa@n,w
 10835  0E1C  0457               	iorwf	xtoa@n+1,w
 10836  0E1D  0458               	iorwf	xtoa@n+2,w
 10837  0E1E  0459               	iorwf	xtoa@n+3,w
 10838  0E1F  045A               	iorwf	xtoa@n+4,w
 10839  0E20  045B               	iorwf	xtoa@n+5,w
 10840  0E21  045C               	iorwf	xtoa@n+6,w
 10841  0E22  045D               	iorwf	xtoa@n+7,w
 10842  0E23  1D03               	skipz
 10843  0E24  2D65               	goto	l6912
 10844  0E25  0853               	movf	xtoa@p+1,w
 10845  0E26  3A80               	xorlw	128
 10846  0E27  00C5               	movwf	??_xtoa
 10847  0E28  3080               	movlw	128
 10848  0E29  0245               	subwf	??_xtoa,w
 10849  0E2A  1D03               	skipz
 10850  0E2B  2E2E               	goto	u5095
 10851  0E2C  3001               	movlw	1
 10852  0E2D  0252               	subwf	xtoa@p,w
 10853  0E2E                     u5095:
 10854  0E2E  1803               	skipnc
 10855  0E2F  2D65               	goto	l6912
 10856  0E30  0020               	movlb	0	; select bank0
 10857  0E31  0855               	movf	xtoa@w+1,w
 10858  0E32  3A80               	xorlw	128
 10859  0E33  00C5               	movwf	??_xtoa
 10860  0E34  3080               	movlw	128
 10861  0E35  0245               	subwf	??_xtoa,w
 10862  0E36  1D03               	skipz
 10863  0E37  2E3A               	goto	u5105
 10864  0E38  3001               	movlw	1
 10865  0E39  0254               	subwf	xtoa@w,w
 10866  0E3A                     u5105:
 10867  0E3A  1C03               	skipc
 10868  0E3B  2E3F               	goto	l2040
 10869  0E3C  0020               	movlb	0	; select bank0
 10870  0E3D  18EA               	btfsc	_flags,1
 10871  0E3E  2D65               	goto	l6912
 10872  0E3F                     l2040:
 10873                           
 10874                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 678:     if (flags &
      +                           (1 << 4)) {
 10875  0E3F  0020               	movlb	0	; select bank0
 10876  0E40  1E6A               	btfss	_flags,4
 10877  0E41  2E5C               	goto	l6956
 10878                           
 10879                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 679:         --i;
 10880  0E42  30FF               	movlw	255
 10881  0E43  07DE               	addwf	xtoa@i,f
 10882  0E44  30FF               	movlw	255
 10883  0E45  3DDF               	addwfc	xtoa@i+1,f
 10884                           
 10885                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 680:         dbuf[i]
      +                           = x;
 10886  0E46  0844               	movf	xtoa@x,w
 10887  0E47  00C5               	movwf	??_xtoa
 10888  0E48  085E               	movf	xtoa@i,w
 10889  0E49  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10890  0E4A  0086               	movwf	6
 10891  0E4B  3002               	movlw	2	; select bank5/6
 10892  0E4C  0087               	movwf	7
 10893  0E4D  0845               	movf	??_xtoa,w
 10894  0E4E  0081               	movwf	1
 10895                           
 10896                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 681:         --i;
 10897  0E4F  30FF               	movlw	255
 10898  0E50  07DE               	addwf	xtoa@i,f
 10899  0E51  30FF               	movlw	255
 10900  0E52  3DDF               	addwfc	xtoa@i+1,f
 10901                           
 10902                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 682:         dbuf[i]
      +                           = '0';
 10903  0E53  3030               	movlw	48
 10904  0E54  00C5               	movwf	??_xtoa
 10905  0E55  085E               	movf	xtoa@i,w
 10906  0E56  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10907  0E57  0086               	movwf	6
 10908  0E58  3002               	movlw	2	; select bank5/6
 10909  0E59  0087               	movwf	7
 10910  0E5A  0845               	movf	??_xtoa,w
 10911  0E5B  0081               	movwf	1
 10912  0E5C                     l6956:
 10913                           
 10914                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 686:     return pad(
      +                          fp, &dbuf[i], w);
 10915  0E5C  085E               	movf	xtoa@i,w
 10916  0E5D  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
 10917  0E5E  00C5               	movwf	??_xtoa
 10918  0E5F  0845               	movf	??_xtoa,w
 10919  0E60  00B3               	movwf	pad@buf
 10920  0E61  0855               	movf	xtoa@w+1,w
 10921  0E62  00B5               	movwf	pad@p+1
 10922  0E63  0854               	movf	xtoa@w,w
 10923  0E64  00B4               	movwf	pad@p
 10924  0E65  084D               	movf	xtoa@fp,w
 10925  0E66  3192  225C         	fcall	_pad
 10926  0E68  0834               	movf	?_pad+1,w
 10927  0E69  00BD               	movwf	?_xtoa+1
 10928  0E6A  0833               	movf	?_pad,w
 10929  0E6B  00BC               	movwf	?_xtoa
 10930  0E6C  0008               	return
 10931  0E6D                     __end_of_xtoa:
 10932                           
 10933                           	psect	text13
 10934  1E5C                     __ptext13:	
 10935 ;; *************** function _toupper *****************
 10936 ;; Defined at:
 10937 ;;		line 4 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/toupper.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  c               2    9[BANK0 ] int 
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;		None
 10942 ;; Return value:  Size  Location     Type
 10943 ;;                  2    9[BANK0 ] int 
 10944 ;; Registers used:
 10945 ;;		wreg, status,2, status,0
 10946 ;; Tracked objects:
 10947 ;;		On entry : 1F/0
 10948 ;;		On exit  : 1F/0
 10949 ;;		Unchanged: 0/0
 10950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10952 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10953 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10954 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10955 ;;Total ram usage:        8 bytes
 10956 ;; Hardware stack levels used:    1
 10957 ;; Hardware stack levels required when called:    8
 10958 ;; This function calls:
 10959 ;;		_islower
 10960 ;; This function is called by:
 10961 ;;		_xtoa
 10962 ;; This function uses a non-reentrant model
 10963 ;;
 10964                           
 10965                           
 10966                           ;psect for function _toupper
 10967  1E5C                     _toupper:
 10968                           
 10969                           ;incstack = 0
 10970                           ; Regs used in _toupper: [wreg+status,2+status,0]
 10971  1E5C  0829               	movf	toupper@c,w
 10972  1E5D  3E9F               	addlw	159
 10973  1E5E  00AB               	movwf	??_toupper
 10974  1E5F  30FF               	movlw	255
 10975  1E60  3D2A               	addwfc	toupper@c+1,w
 10976  1E61  00AC               	movwf	??_toupper+1
 10977  1E62  3000               	movlw	0
 10978  1E63  022C               	subwf	??_toupper+1,w
 10979  1E64  301A               	movlw	26
 10980  1E65  1903               	skipnz
 10981  1E66  022B               	subwf	??_toupper,w
 10982  1E67  1803               	btfsc	3,0
 10983  1E68  2E6B               	goto	u4610
 10984  1E69  3001               	movlw	1
 10985  1E6A  2E6C               	goto	u4620
 10986  1E6B                     u4610:
 10987  1E6B  3000               	movlw	0
 10988  1E6C                     u4620:
 10989  1E6C  00AD               	movwf	??_toupper+2
 10990  1E6D  01AE               	clrf	??_toupper+3
 10991  1E6E  082D               	movf	??_toupper+2,w
 10992  1E6F  00AF               	movwf	_toupper$2331
 10993  1E70  082E               	movf	??_toupper+3,w
 10994  1E71  00B0               	movwf	_toupper$2331+1
 10995  1E72  082F               	movf	_toupper$2331,w
 10996  1E73  0430               	iorwf	_toupper$2331+1,w
 10997  1E74  1903               	btfsc	3,2
 10998  1E75  0008               	return
 10999  1E76  305F               	movlw	95
 11000  1E77  0529               	andwf	toupper@c,w
 11001  1E78  00A9               	movwf	?_toupper
 11002  1E79  3000               	movlw	0
 11003  1E7A  052A               	andwf	toupper@c+1,w
 11004  1E7B  00AA               	movwf	?_toupper+1
 11005  1E7C  0008               	return
 11006  1E7D                     __end_of_toupper:
 11007                           
 11008                           	psect	text14
 11009  1D07                     __ptext14:	
 11010 ;; *************** function _islower *****************
 11011 ;; Defined at:
 11012 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/islower.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  c               2    3[BANK0 ] int 
 11015 ;; Auto vars:     Size  Location     Type
 11016 ;;		None
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  2    3[BANK0 ] int 
 11019 ;; Registers used:
 11020 ;;		wreg, status,2, status,0
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 1F/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11026 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11028 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11029 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11030 ;;Total ram usage:        6 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; Hardware stack levels required when called:    7
 11033 ;; This function calls:
 11034 ;;		Nothing
 11035 ;; This function is called by:
 11036 ;;		_toupper
 11037 ;; This function uses a non-reentrant model
 11038 ;;
 11039                           
 11040                           
 11041                           ;psect for function _islower
 11042  1D07                     _islower:
 11043                           
 11044                           ;incstack = 0
 11045                           ; Regs used in _islower: [wreg+status,2+status,0]
 11046  1D07  0020               	movlb	0	; select bank0
 11047  1D08  0823               	movf	islower@c,w
 11048  1D09  3E9F               	addlw	159
 11049  1D0A  00A5               	movwf	??_islower
 11050  1D0B  30FF               	movlw	255
 11051  1D0C  3D24               	addwfc	islower@c+1,w
 11052  1D0D  00A6               	movwf	??_islower+1
 11053  1D0E  3000               	movlw	0
 11054  1D0F  0226               	subwf	??_islower+1,w
 11055  1D10  301A               	movlw	26
 11056  1D11  1903               	skipnz
 11057  1D12  0225               	subwf	??_islower,w
 11058  1D13  1803               	btfsc	3,0
 11059  1D14  2D17               	goto	u4210
 11060  1D15  3001               	movlw	1
 11061  1D16  2D18               	goto	u4220
 11062  1D17                     u4210:
 11063  1D17  3000               	movlw	0
 11064  1D18                     u4220:
 11065  1D18  00A7               	movwf	??_islower+2
 11066  1D19  01A8               	clrf	??_islower+3
 11067  1D1A  0827               	movf	??_islower+2,w
 11068  1D1B  00A3               	movwf	?_islower
 11069  1D1C  0828               	movf	??_islower+3,w
 11070  1D1D  00A4               	movwf	?_islower+1
 11071  1D1E  0008               	return
 11072  1D1F                     __end_of_islower:
 11073                           
 11074                           	psect	text15
 11075  1CEF                     __ptext15:	
 11076 ;; *************** function _isupper *****************
 11077 ;; Defined at:
 11078 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/isupper.c"
 11079 ;; Parameters:    Size  Location     Type
 11080 ;;  c               2    3[BANK0 ] int 
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;		None
 11083 ;; Return value:  Size  Location     Type
 11084 ;;                  2    3[BANK0 ] int 
 11085 ;; Registers used:
 11086 ;;		wreg, status,2, status,0
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 1F/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11094 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11095 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11096 ;;Total ram usage:        6 bytes
 11097 ;; Hardware stack levels used:    1
 11098 ;; Hardware stack levels required when called:    7
 11099 ;; This function calls:
 11100 ;;		Nothing
 11101 ;; This function is called by:
 11102 ;;		_xtoa
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           
 11107                           ;psect for function _isupper
 11108  1CEF                     _isupper:
 11109                           
 11110                           ;incstack = 0
 11111                           ; Regs used in _isupper: [wreg+status,2+status,0]
 11112  1CEF  0020               	movlb	0	; select bank0
 11113  1CF0  0823               	movf	isupper@c,w
 11114  1CF1  3EBF               	addlw	191
 11115  1CF2  00A5               	movwf	??_isupper
 11116  1CF3  30FF               	movlw	255
 11117  1CF4  3D24               	addwfc	isupper@c+1,w
 11118  1CF5  00A6               	movwf	??_isupper+1
 11119  1CF6  3000               	movlw	0
 11120  1CF7  0226               	subwf	??_isupper+1,w
 11121  1CF8  301A               	movlw	26
 11122  1CF9  1903               	skipnz
 11123  1CFA  0225               	subwf	??_isupper,w
 11124  1CFB  1803               	btfsc	3,0
 11125  1CFC  2CFF               	goto	u4570
 11126  1CFD  3001               	movlw	1
 11127  1CFE  2D00               	goto	u4580
 11128  1CFF                     u4570:
 11129  1CFF  3000               	movlw	0
 11130  1D00                     u4580:
 11131  1D00  00A7               	movwf	??_isupper+2
 11132  1D01  01A8               	clrf	??_isupper+3
 11133  1D02  0827               	movf	??_isupper+2,w
 11134  1D03  00A3               	movwf	?_isupper
 11135  1D04  0828               	movf	??_isupper+3,w
 11136  1D05  00A4               	movwf	?_isupper+1
 11137  1D06  0008               	return
 11138  1D07                     __end_of_isupper:
 11139                           
 11140                           	psect	text16
 11141  1DDD                     __ptext16:	
 11142 ;; *************** function _isalpha *****************
 11143 ;; Defined at:
 11144 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/isalpha.c"
 11145 ;; Parameters:    Size  Location     Type
 11146 ;;  c               2    3[BANK0 ] int 
 11147 ;; Auto vars:     Size  Location     Type
 11148 ;;		None
 11149 ;; Return value:  Size  Location     Type
 11150 ;;                  2    3[BANK0 ] int 
 11151 ;; Registers used:
 11152 ;;		wreg, status,2, status,0
 11153 ;; Tracked objects:
 11154 ;;		On entry : 0/0
 11155 ;;		On exit  : 1F/0
 11156 ;;		Unchanged: 0/0
 11157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11158 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11160 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11161 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11162 ;;Total ram usage:        8 bytes
 11163 ;; Hardware stack levels used:    1
 11164 ;; Hardware stack levels required when called:    7
 11165 ;; This function calls:
 11166 ;;		Nothing
 11167 ;; This function is called by:
 11168 ;;		_xtoa
 11169 ;; This function uses a non-reentrant model
 11170 ;;
 11171                           
 11172                           
 11173                           ;psect for function _isalpha
 11174  1DDD                     _isalpha:
 11175                           
 11176                           ;incstack = 0
 11177                           ; Regs used in _isalpha: [wreg+status,2+status,0]
 11178  1DDD  3020               	movlw	32
 11179  1DDE  0020               	movlb	0	; select bank0
 11180  1DDF  0423               	iorwf	isalpha@c,w
 11181  1DE0  00A5               	movwf	??_isalpha
 11182  1DE1  3000               	movlw	0
 11183  1DE2  0424               	iorwf	isalpha@c+1,w
 11184  1DE3  00A6               	movwf	??_isalpha+1
 11185  1DE4  0825               	movf	??_isalpha,w
 11186  1DE5  3E9F               	addlw	159
 11187  1DE6  00A7               	movwf	??_isalpha+2
 11188  1DE7  30FF               	movlw	255
 11189  1DE8  3D26               	addwfc	??_isalpha+1,w
 11190  1DE9  00A8               	movwf	??_isalpha+3
 11191  1DEA  3000               	movlw	0
 11192  1DEB  0228               	subwf	??_isalpha+3,w
 11193  1DEC  301A               	movlw	26
 11194  1DED  1903               	skipnz
 11195  1DEE  0227               	subwf	??_isalpha+2,w
 11196  1DEF  1803               	btfsc	3,0
 11197  1DF0  2DF3               	goto	u4590
 11198  1DF1  3001               	movlw	1
 11199  1DF2  2DF4               	goto	u4600
 11200  1DF3                     u4590:
 11201  1DF3  3000               	movlw	0
 11202  1DF4                     u4600:
 11203  1DF4  00A9               	movwf	??_isalpha+4
 11204  1DF5  01AA               	clrf	??_isalpha+5
 11205  1DF6  0829               	movf	??_isalpha+4,w
 11206  1DF7  00A3               	movwf	?_isalpha
 11207  1DF8  082A               	movf	??_isalpha+5,w
 11208  1DF9  00A4               	movwf	?_isalpha+1
 11209  1DFA  0008               	return
 11210  1DFB                     __end_of_isalpha:
 11211                           
 11212                           	psect	text17
 11213  093A                     __ptext17:	
 11214 ;; *************** function _stoa *****************
 11215 ;; Defined at:
 11216 ;;		line 568 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 11217 ;; Parameters:    Size  Location     Type
 11218 ;;  fp              1    wreg     PTR struct _IO_FILE
 11219 ;;		 -> sprintf@f(6), 
 11220 ;;  s               2   11[BANK0 ] PTR unsigned char 
 11221 ;;		 -> ?_sprintf(2), lcd_fs_name(112), lcd_aux_name(14), lcd_src_name(40), 
 11222 ;; Auto vars:     Size  Location     Type
 11223 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 11224 ;;		 -> sprintf@f(6), 
 11225 ;;  nuls            7   16[BANK0 ] unsigned char [7]
 11226 ;;  l               2   32[BANK0 ] int 
 11227 ;;  p               2   30[BANK0 ] int 
 11228 ;;  cp              2   28[BANK0 ] PTR unsigned char 
 11229 ;;		 -> stoa@nuls(7), ?_sprintf(2), lcd_fs_name(112), lcd_aux_name(14), 
 11230 ;;		 -> lcd_src_name(40), 
 11231 ;;  w               2   25[BANK0 ] int 
 11232 ;;  i               2   23[BANK0 ] int 
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  2   11[BANK0 ] int 
 11235 ;; Registers used:
 11236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11237 ;; Tracked objects:
 11238 ;;		On entry : 1F/1
 11239 ;;		On exit  : 1F/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11242 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11243 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11244 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11245 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11246 ;;Total ram usage:       23 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; Hardware stack levels required when called:    9
 11249 ;; This function calls:
 11250 ;;		_fputc
 11251 ;;		_strlen
 11252 ;; This function is called by:
 11253 ;;		_vfpfcnvrt
 11254 ;; This function uses a non-reentrant model
 11255 ;;
 11256                           
 11257                           
 11258                           ;psect for function _stoa
 11259  093A                     _stoa:
 11260                           
 11261                           ;incstack = 0
 11262                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11263                           ;stoa@fp stored from wreg
 11264  093A  0020               	movlb	0	; select bank0
 11265  093B  00BB               	movwf	stoa@fp
 11266                           
 11267                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 568: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 5
      +                          69: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 570:     char *
      +                          cp, nuls[] = "(null)";
 11268  093C  3029               	movlw	low stoa@F1141
 11269  093D  0086               	movwf	6
 11270  093E  3002               	movlw	high stoa@F1141
 11271  093F  0087               	movwf	7
 11272  0940  3030               	movlw	low stoa@nuls
 11273  0941  0084               	movwf	4
 11274  0942  3000               	movlw	high stoa@nuls
 11275  0943  0085               	movwf	5
 11276  0944  3007               	movlw	7
 11277  0945  00AD               	movwf	??_stoa
 11278  0946                     u4870:
 11279  0946  0016               	moviw fsr1++
 11280  0947  001A               	movwi fsr0++
 11281  0948  0BAD               	decfsz	??_stoa,f
 11282  0949  2946               	goto	u4870
 11283                           
 11284                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 571:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 574:     cp = s;
 11285  094A  082C               	movf	stoa@s+1,w
 11286  094B  00BD               	movwf	stoa@cp+1
 11287  094C  082B               	movf	stoa@s,w
 11288  094D  00BC               	movwf	stoa@cp
 11289                           
 11290                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
 11291  094E  083C               	movf	stoa@cp,w
 11292  094F  043D               	iorwf	stoa@cp+1,w
 11293  0950  1D03               	btfss	3,2
 11294  0951  2956               	goto	l6854
 11295                           
 11296                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 576:         cp = nu
      +                          ls;
 11297  0952  3030               	movlw	low stoa@nuls
 11298  0953  00BC               	movwf	stoa@cp
 11299  0954  3000               	movlw	high stoa@nuls
 11300  0955  00BD               	movwf	stoa@cp+1
 11301  0956                     l6854:
 11302                           
 11303                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 580:     l = (int)st
      +                          rlen(cp);
 11304  0956  083D               	movf	stoa@cp+1,w
 11305  0957  00A4               	movwf	strlen@s+1
 11306  0958  083C               	movf	stoa@cp,w
 11307  0959  00A3               	movwf	strlen@s
 11308  095A  319C  24A8  3189   	fcall	_strlen
 11309  095D  0824               	movf	?_strlen+1,w
 11310  095E  00C1               	movwf	stoa@l+1
 11311  095F  0823               	movf	?_strlen,w
 11312  0960  00C0               	movwf	stoa@l
 11313                           
 11314                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 581:     p = prec;
 11315  0961  0022               	movlb	2	; select bank2
 11316  0962  082B               	movf	(_prec+1)^(0+256),w
 11317  0963  0020               	movlb	0	; select bank0
 11318  0964  00BF               	movwf	stoa@p+1
 11319  0965  0022               	movlb	2	; select bank2
 11320  0966  082A               	movf	_prec^(0+256),w
 11321  0967  0020               	movlb	0	; select bank0
 11322  0968  00BE               	movwf	stoa@p
 11323                           
 11324                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 11325  0969  1BBF               	btfsc	stoa@p+1,7
 11326  096A  297C               	goto	l1998
 11327  096B  083F               	movf	stoa@p+1,w
 11328  096C  3A80               	xorlw	128
 11329  096D  00AD               	movwf	??_stoa
 11330  096E  0841               	movf	stoa@l+1,w
 11331  096F  3A80               	xorlw	128
 11332  0970  022D               	subwf	??_stoa,w
 11333  0971  1D03               	skipz
 11334  0972  2975               	goto	u4905
 11335  0973  0840               	movf	stoa@l,w
 11336  0974  023E               	subwf	stoa@p,w
 11337  0975                     u4905:
 11338  0975  1803               	btfsc	3,0
 11339  0976  297C               	goto	l1998
 11340  0977  0020               	movlb	0	; select bank0
 11341  0978  083F               	movf	stoa@p+1,w
 11342  0979  00C1               	movwf	stoa@l+1
 11343  097A  083E               	movf	stoa@p,w
 11344  097B  00C0               	movwf	stoa@l
 11345  097C                     l1998:
 11346                           
 11347                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 583:     p = l;
 11348  097C  0020               	movlb	0	; select bank0
 11349  097D  0841               	movf	stoa@l+1,w
 11350  097E  00BF               	movwf	stoa@p+1
 11351  097F  0840               	movf	stoa@l,w
 11352  0980  00BE               	movwf	stoa@p
 11353                           
 11354                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 584:     w = width;
 11355  0981  0022               	movlb	2	; select bank2
 11356  0982  0829               	movf	(_width+1)^(0+256),w
 11357  0983  0020               	movlb	0	; select bank0
 11358  0984  00BA               	movwf	stoa@w+1
 11359  0985  0022               	movlb	2	; select bank2
 11360  0986  0828               	movf	_width^(0+256),w
 11361  0987  0020               	movlb	0	; select bank0
 11362  0988  00B9               	movwf	stoa@w
 11363                           
 11364                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 587:     if (!(flags
      +                           & (1 << 0))) {
 11365  0989  1C6A               	btfss	_flags,0
 11366  098A  299D               	goto	l6872
 11367  098B  29A9               	goto	l6874
 11368  098C                     l6868:
 11369                           
 11370                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 589:             fpu
      +                          tc(' ', fp);
 11371  098C  3020               	movlw	32
 11372  098D  0020               	movlb	0	; select bank0
 11373  098E  00A3               	movwf	fputc@c
 11374  098F  3000               	movlw	0
 11375  0990  00A4               	movwf	fputc@c+1
 11376  0991  083B               	movf	stoa@fp,w
 11377  0992  00AD               	movwf	??_stoa
 11378  0993  082D               	movf	??_stoa,w
 11379  0994  00A5               	movwf	fputc@fp
 11380  0995  3192  2210  3189   	fcall	_fputc
 11381                           
 11382                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 590:             ++l
      +                          ;
 11383  0998  3001               	movlw	1
 11384  0999  0020               	movlb	0	; select bank0
 11385  099A  07C0               	addwf	stoa@l,f
 11386  099B  3000               	movlw	0
 11387  099C  3DC1               	addwfc	stoa@l+1,f
 11388  099D                     l6872:
 11389                           
 11390                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 588:         while (
      +                          l < w) {
 11391  099D  0841               	movf	stoa@l+1,w
 11392  099E  3A80               	xorlw	128
 11393  099F  00AD               	movwf	??_stoa
 11394  09A0  083A               	movf	stoa@w+1,w
 11395  09A1  3A80               	xorlw	128
 11396  09A2  022D               	subwf	??_stoa,w
 11397  09A3  1D03               	skipz
 11398  09A4  29A7               	goto	u4925
 11399  09A5  0839               	movf	stoa@w,w
 11400  09A6  0240               	subwf	stoa@l,w
 11401  09A7                     u4925:
 11402  09A7  1C03               	skipc
 11403  09A8  298C               	goto	l6868
 11404  09A9                     l6874:
 11405                           
 11406                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 595:     i = 0;
 11407  09A9  0020               	movlb	0	; select bank0
 11408  09AA  01B7               	clrf	stoa@i
 11409  09AB  01B8               	clrf	stoa@i+1
 11410  09AC                     l6882:	
 11411                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 596:     while (i < 
      +                          p) {
 11412                           
 11413                           
 11414                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 596:     while (i < 
      +                          p) {
 11415  09AC  0838               	movf	stoa@i+1,w
 11416  09AD  3A80               	xorlw	128
 11417  09AE  00AD               	movwf	??_stoa
 11418  09AF  083F               	movf	stoa@p+1,w
 11419  09B0  3A80               	xorlw	128
 11420  09B1  022D               	subwf	??_stoa,w
 11421  09B2  1D03               	skipz
 11422  09B3  29B6               	goto	u4935
 11423  09B4  083E               	movf	stoa@p,w
 11424  09B5  0237               	subwf	stoa@i,w
 11425  09B6                     u4935:
 11426  09B6  1803               	btfsc	3,0
 11427  09B7  29D5               	goto	l2007
 11428                           
 11429                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 597:         fputc(*
      +                          cp, fp);
 11430  09B8  0020               	movlb	0	; select bank0
 11431  09B9  083C               	movf	stoa@cp,w
 11432  09BA  0084               	movwf	4
 11433  09BB  083D               	movf	stoa@cp+1,w
 11434  09BC  0085               	movwf	5
 11435  09BD  0800               	movf	0,w	;code access
 11436  09BE  00AD               	movwf	??_stoa
 11437  09BF  01AE               	clrf	??_stoa+1
 11438  09C0  082D               	movf	??_stoa,w
 11439  09C1  00A3               	movwf	fputc@c
 11440  09C2  082E               	movf	??_stoa+1,w
 11441  09C3  00A4               	movwf	fputc@c+1
 11442  09C4  083B               	movf	stoa@fp,w
 11443  09C5  00AF               	movwf	??_stoa+2
 11444  09C6  082F               	movf	??_stoa+2,w
 11445  09C7  00A5               	movwf	fputc@fp
 11446  09C8  3192  2210  3189   	fcall	_fputc
 11447                           
 11448                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 598:         ++cp;
 11449  09CB  3001               	movlw	1
 11450  09CC  0020               	movlb	0	; select bank0
 11451  09CD  07BC               	addwf	stoa@cp,f
 11452  09CE  3000               	movlw	0
 11453  09CF  3DBD               	addwfc	stoa@cp+1,f
 11454                           
 11455                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 599:         ++i;
 11456  09D0  3001               	movlw	1
 11457  09D1  07B7               	addwf	stoa@i,f
 11458  09D2  3000               	movlw	0
 11459  09D3  3DB8               	addwfc	stoa@i+1,f
 11460  09D4  29AC               	goto	l6882
 11461  09D5                     l2007:
 11462                           
 11463                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 603:     if (flags &
      +                           (1 << 0)) {
 11464  09D5  0020               	movlb	0	; select bank0
 11465  09D6  186A               	btfsc	_flags,0
 11466  09D7  29EA               	goto	l6890
 11467  09D8  29F6               	goto	l6892
 11468  09D9                     l6886:
 11469                           
 11470                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 605:             fpu
      +                          tc(' ', fp);
 11471  09D9  3020               	movlw	32
 11472  09DA  0020               	movlb	0	; select bank0
 11473  09DB  00A3               	movwf	fputc@c
 11474  09DC  3000               	movlw	0
 11475  09DD  00A4               	movwf	fputc@c+1
 11476  09DE  083B               	movf	stoa@fp,w
 11477  09DF  00AD               	movwf	??_stoa
 11478  09E0  082D               	movf	??_stoa,w
 11479  09E1  00A5               	movwf	fputc@fp
 11480  09E2  3192  2210  3189   	fcall	_fputc
 11481                           
 11482                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 606:             ++l
      +                          ;
 11483  09E5  3001               	movlw	1
 11484  09E6  0020               	movlb	0	; select bank0
 11485  09E7  07C0               	addwf	stoa@l,f
 11486  09E8  3000               	movlw	0
 11487  09E9  3DC1               	addwfc	stoa@l+1,f
 11488  09EA                     l6890:
 11489                           
 11490                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 604:         while (
      +                          l < w) {
 11491  09EA  0841               	movf	stoa@l+1,w
 11492  09EB  3A80               	xorlw	128
 11493  09EC  00AD               	movwf	??_stoa
 11494  09ED  083A               	movf	stoa@w+1,w
 11495  09EE  3A80               	xorlw	128
 11496  09EF  022D               	subwf	??_stoa,w
 11497  09F0  1D03               	skipz
 11498  09F1  29F4               	goto	u4955
 11499  09F2  0839               	movf	stoa@w,w
 11500  09F3  0240               	subwf	stoa@l,w
 11501  09F4                     u4955:
 11502  09F4  1C03               	skipc
 11503  09F5  29D9               	goto	l6886
 11504  09F6                     l6892:
 11505                           
 11506                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 610:     return l;
 11507  09F6  0020               	movlb	0	; select bank0
 11508  09F7  0841               	movf	stoa@l+1,w
 11509  09F8  00AC               	movwf	?_stoa+1
 11510  09F9  0840               	movf	stoa@l,w
 11511  09FA  00AB               	movwf	?_stoa
 11512  09FB  0008               	return
 11513  09FC                     __end_of_stoa:
 11514                           
 11515                           	psect	text18
 11516  0BD0                     __ptext18:	
 11517 ;; *************** function _dtoa *****************
 11518 ;; Defined at:
 11519 ;;		line 287 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;  fp              1    wreg     PTR struct _IO_FILE
 11522 ;;		 -> sprintf@f(6), 
 11523 ;;  d               8   30[BANK0 ] long long 
 11524 ;; Auto vars:     Size  Location     Type
 11525 ;;  fp              1   41[BANK0 ] PTR struct _IO_FILE
 11526 ;;		 -> sprintf@f(6), 
 11527 ;;  n               8   50[BANK0 ] long long 
 11528 ;;  i               2   58[BANK0 ] int 
 11529 ;;  s               2   48[BANK0 ] int 
 11530 ;;  w               2   46[BANK0 ] int 
 11531 ;;  p               2   44[BANK0 ] int 
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  2   30[BANK0 ] int 
 11534 ;; Registers used:
 11535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11536 ;; Tracked objects:
 11537 ;;		On entry : 1F/1
 11538 ;;		On exit  : 1F/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11541 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11542 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11543 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11544 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11545 ;;Total ram usage:       30 bytes
 11546 ;; Hardware stack levels used:    1
 11547 ;; Hardware stack levels required when called:   11
 11548 ;; This function calls:
 11549 ;;		___aodiv
 11550 ;;		___aomod
 11551 ;;		_abs
 11552 ;;		_pad
 11553 ;; This function is called by:
 11554 ;;		_vfpfcnvrt
 11555 ;; This function uses a non-reentrant model
 11556 ;;
 11557                           
 11558                           
 11559                           ;psect for function _dtoa
 11560  0BD0                     _dtoa:
 11561                           
 11562                           ;incstack = 0
 11563                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11564                           ;dtoa@fp stored from wreg
 11565  0BD0  0020               	movlb	0	; select bank0
 11566  0BD1  00C9               	movwf	dtoa@fp
 11567                           
 11568                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
 11569  0BD2  083E               	movf	dtoa@d,w
 11570  0BD3  00D2               	movwf	dtoa@n
 11571  0BD4  083F               	movf	dtoa@d+1,w
 11572  0BD5  00D3               	movwf	dtoa@n+1
 11573  0BD6  0840               	movf	dtoa@d+2,w
 11574  0BD7  00D4               	movwf	dtoa@n+2
 11575  0BD8  0841               	movf	dtoa@d+3,w
 11576  0BD9  00D5               	movwf	dtoa@n+3
 11577  0BDA  0842               	movf	dtoa@d+4,w
 11578  0BDB  00D6               	movwf	dtoa@n+4
 11579  0BDC  0843               	movf	dtoa@d+5,w
 11580  0BDD  00D7               	movwf	dtoa@n+5
 11581  0BDE  0844               	movf	dtoa@d+6,w
 11582  0BDF  00D8               	movwf	dtoa@n+6
 11583  0BE0  0845               	movf	dtoa@d+7,w
 11584  0BE1  00D9               	movwf	dtoa@n+7
 11585                           
 11586                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
 11587  0BE2  3052               	movlw	low dtoa@n
 11588  0BE3  0086               	movwf	6
 11589  0BE4  3000               	movlw	high dtoa@n
 11590  0BE5  0087               	movwf	7
 11591  0BE6  3F47               	moviw [7]fsr1
 11592  0BE7  00C6               	movwf	??_dtoa
 11593  0BE8  1FC6               	btfss	??_dtoa,7
 11594  0BE9  2BEC               	goto	u4710
 11595  0BEA  3001               	movlw	1
 11596  0BEB  2BED               	goto	u4720
 11597  0BEC                     u4710:
 11598  0BEC  3000               	movlw	0
 11599  0BED                     u4720:
 11600  0BED  0020               	movlb	0	; select bank0
 11601  0BEE  00C7               	movwf	??_dtoa+1
 11602  0BEF  01C8               	clrf	??_dtoa+2
 11603  0BF0  0847               	movf	??_dtoa+1,w
 11604  0BF1  00D0               	movwf	dtoa@s
 11605  0BF2  0848               	movf	??_dtoa+2,w
 11606  0BF3  00D1               	movwf	dtoa@s+1
 11607                           
 11608                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 295:     if (s) {
 11609  0BF4  0850               	movf	dtoa@s,w
 11610  0BF5  0451               	iorwf	dtoa@s+1,w
 11611  0BF6  1903               	btfsc	3,2
 11612  0BF7  2C16               	goto	l1966
 11613                           
 11614                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 296:         n = -n;
 11615  0BF8  09D2               	comf	dtoa@n,f
 11616  0BF9  09D3               	comf	dtoa@n+1,f
 11617  0BFA  09D4               	comf	dtoa@n+2,f
 11618  0BFB  09D5               	comf	dtoa@n+3,f
 11619  0BFC  09D6               	comf	dtoa@n+4,f
 11620  0BFD  09D7               	comf	dtoa@n+5,f
 11621  0BFE  09D8               	comf	dtoa@n+6,f
 11622  0BFF  09D9               	comf	dtoa@n+7,f
 11623  0C00  0AD2               	incf	dtoa@n,f
 11624  0C01  1D03               	skipz
 11625  0C02  2C16               	goto	l1966
 11626  0C03  0AD3               	incf	dtoa@n+1,f
 11627  0C04  1D03               	skipz
 11628  0C05  2C16               	goto	l1966
 11629  0C06  0AD4               	incf	dtoa@n+2,f
 11630  0C07  1D03               	skipz
 11631  0C08  2C16               	goto	l1966
 11632  0C09  0AD5               	incf	dtoa@n+3,f
 11633  0C0A  1D03               	skipz
 11634  0C0B  2C16               	goto	l1966
 11635  0C0C  0AD6               	incf	dtoa@n+4,f
 11636  0C0D  1D03               	skipz
 11637  0C0E  2C16               	goto	l1966
 11638  0C0F  0AD7               	incf	dtoa@n+5,f
 11639  0C10  1D03               	skipz
 11640  0C11  2C16               	goto	l1966
 11641  0C12  0AD8               	incf	dtoa@n+6,f
 11642  0C13  1D03               	skipz
 11643  0C14  2C16               	goto	l1966
 11644  0C15  0AD9               	incf	dtoa@n+7,f
 11645  0C16                     l1966:	
 11646                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 297:     }
 11647                           
 11648                           
 11649                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
 11650  0C16  0022               	movlb	2	; select bank2
 11651  0C17  1BAB               	btfsc	(_prec+1)^(0+256),7
 11652  0C18  2C1E               	goto	l1967
 11653                           
 11654                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
 11655  0C19  30FD               	movlw	253
 11656  0C1A  0020               	movlb	0	; select bank0
 11657  0C1B  05EA               	andwf	_flags,f
 11658  0C1C  30FF               	movlw	255
 11659  0C1D  05EB               	andwf	_flags+1,f
 11660  0C1E                     l1967:	
 11661                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 302:     }
 11662                           
 11663                           
 11664                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
 11665  0C1E  0022               	movlb	2	; select bank2
 11666  0C1F  082B               	movf	(_prec+1)^(0+256),w
 11667  0C20  3A80               	xorlw	128
 11668  0C21  0020               	movlb	0	; select bank0
 11669  0C22  00C6               	movwf	??_dtoa
 11670  0C23  3080               	movlw	128
 11671  0C24  0246               	subwf	??_dtoa,w
 11672  0C25  1D03               	skipz
 11673  0C26  2C2A               	goto	u4765
 11674  0C27  3001               	movlw	1
 11675  0C28  0022               	movlb	2	; select bank2
 11676  0C29  022A               	subwf	_prec^(0+256),w
 11677  0C2A                     u4765:
 11678  0C2A  1803               	skipnc
 11679  0C2B  2C32               	goto	l6800
 11680  0C2C  3001               	movlw	1
 11681  0C2D  0020               	movlb	0	; select bank0
 11682  0C2E  00CC               	movwf	dtoa@p
 11683  0C2F  3000               	movlw	0
 11684  0C30  00CD               	movwf	dtoa@p+1
 11685  0C31  2C3A               	goto	l1971
 11686  0C32                     l6800:
 11687  0C32  0022               	movlb	2	; select bank2
 11688  0C33  082B               	movf	(_prec+1)^(0+256),w
 11689  0C34  0020               	movlb	0	; select bank0
 11690  0C35  00CD               	movwf	dtoa@p+1
 11691  0C36  0022               	movlb	2	; select bank2
 11692  0C37  082A               	movf	_prec^(0+256),w
 11693  0C38  0020               	movlb	0	; select bank0
 11694  0C39  00CC               	movwf	dtoa@p
 11695  0C3A                     l1971:
 11696                           
 11697                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 304:     w = width;
 11698  0C3A  0022               	movlb	2	; select bank2
 11699  0C3B  0829               	movf	(_width+1)^(0+256),w
 11700  0C3C  0020               	movlb	0	; select bank0
 11701  0C3D  00CF               	movwf	dtoa@w+1
 11702  0C3E  0022               	movlb	2	; select bank2
 11703  0C3F  0828               	movf	_width^(0+256),w
 11704  0C40  0020               	movlb	0	; select bank0
 11705  0C41  00CE               	movwf	dtoa@w
 11706                           
 11707                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
 11708  0C42  0850               	movf	dtoa@s,w
 11709  0C43  0451               	iorwf	dtoa@s+1,w
 11710  0C44  1D03               	btfss	3,2
 11711  0C45  2C48               	goto	l6806
 11712  0C46  1D6A               	btfss	_flags,2
 11713  0C47  2C4C               	goto	l1972
 11714  0C48                     l6806:
 11715                           
 11716                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 306:         --w;
 11717  0C48  30FF               	movlw	255
 11718  0C49  07CE               	addwf	dtoa@w,f
 11719  0C4A  30FF               	movlw	255
 11720  0C4B  3DCF               	addwfc	dtoa@w+1,f
 11721  0C4C                     l1972:	
 11722                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 307:     }
 11723                           
 11724                           
 11725                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
 11726  0C4C  301F               	movlw	31
 11727  0C4D  00DA               	movwf	dtoa@i
 11728  0C4E  3000               	movlw	0
 11729  0C4F  00DB               	movwf	dtoa@i+1
 11730                           
 11731                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
 11732  0C50  0025               	movlb	5	; select bank5
 11733  0C51  01E8               	clrf	(_dbuf^(0+640)+31)
 11734                           
 11735                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11736  0C52  2CDF               	goto	l1975
 11737  0C53                     l6820:
 11738  0C53  0020               	movlb	0	; select bank0
 11739  0C54  0852               	movf	dtoa@n,w
 11740  0C55  0453               	iorwf	dtoa@n+1,w
 11741  0C56  0454               	iorwf	dtoa@n+2,w
 11742  0C57  0455               	iorwf	dtoa@n+3,w
 11743  0C58  0456               	iorwf	dtoa@n+4,w
 11744  0C59  0457               	iorwf	dtoa@n+5,w
 11745  0C5A  0458               	iorwf	dtoa@n+6,w
 11746  0C5B  0459               	iorwf	dtoa@n+7,w
 11747  0C5C  1D03               	skipz
 11748  0C5D  2C78               	goto	l6810
 11749  0C5E  084D               	movf	dtoa@p+1,w
 11750  0C5F  3A80               	xorlw	128
 11751  0C60  00C6               	movwf	??_dtoa
 11752  0C61  3080               	movlw	128
 11753  0C62  0246               	subwf	??_dtoa,w
 11754  0C63  1D03               	skipz
 11755  0C64  2C67               	goto	u4815
 11756  0C65  3001               	movlw	1
 11757  0C66  024C               	subwf	dtoa@p,w
 11758  0C67                     u4815:
 11759  0C67  1803               	skipnc
 11760  0C68  2C78               	goto	l6810
 11761  0C69  0020               	movlb	0	; select bank0
 11762  0C6A  084F               	movf	dtoa@w+1,w
 11763  0C6B  3A80               	xorlw	128
 11764  0C6C  00C6               	movwf	??_dtoa
 11765  0C6D  3080               	movlw	128
 11766  0C6E  0246               	subwf	??_dtoa,w
 11767  0C6F  1D03               	skipz
 11768  0C70  2C73               	goto	u4825
 11769  0C71  3001               	movlw	1
 11770  0C72  024E               	subwf	dtoa@w,w
 11771  0C73                     u4825:
 11772  0C73  1C03               	skipc
 11773  0C74  2CEB               	goto	l6828
 11774  0C75  0020               	movlb	0	; select bank0
 11775  0C76  1CEA               	btfss	_flags,1
 11776  0C77  2CEB               	goto	l6828
 11777  0C78                     l6810:
 11778                           
 11779                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 313:         --i;
 11780  0C78  30FF               	movlw	255
 11781  0C79  0020               	movlb	0	; select bank0
 11782  0C7A  07DA               	addwf	dtoa@i,f
 11783  0C7B  30FF               	movlw	255
 11784  0C7C  3DDB               	addwfc	dtoa@i+1,f
 11785                           
 11786                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
 11787  0C7D  300A               	movlw	10
 11788  0C7E  00A3               	movwf	___aomod@divisor
 11789  0C7F  01A4               	clrf	___aomod@divisor+1
 11790  0C80  01A5               	clrf	___aomod@divisor+2
 11791  0C81  01A6               	clrf	___aomod@divisor+3
 11792  0C82  01A7               	clrf	___aomod@divisor+4
 11793  0C83  01A8               	clrf	___aomod@divisor+5
 11794  0C84  01A9               	clrf	___aomod@divisor+6
 11795  0C85  01AA               	clrf	___aomod@divisor+7
 11796  0C86  0852               	movf	dtoa@n,w
 11797  0C87  00AB               	movwf	___aomod@dividend
 11798  0C88  0853               	movf	dtoa@n+1,w
 11799  0C89  00AC               	movwf	___aomod@dividend+1
 11800  0C8A  0854               	movf	dtoa@n+2,w
 11801  0C8B  00AD               	movwf	___aomod@dividend+2
 11802  0C8C  0855               	movf	dtoa@n+3,w
 11803  0C8D  00AE               	movwf	___aomod@dividend+3
 11804  0C8E  0856               	movf	dtoa@n+4,w
 11805  0C8F  00AF               	movwf	___aomod@dividend+4
 11806  0C90  0857               	movf	dtoa@n+5,w
 11807  0C91  00B0               	movwf	___aomod@dividend+5
 11808  0C92  0858               	movf	dtoa@n+6,w
 11809  0C93  00B1               	movwf	___aomod@dividend+6
 11810  0C94  0859               	movf	dtoa@n+7,w
 11811  0C95  00B2               	movwf	___aomod@dividend+7
 11812  0C96  3189  21FC  318B   	fcall	___aomod
 11813  0C99  0824               	movf	?___aomod+1,w
 11814  0C9A  00B7               	movwf	abs@a+1
 11815  0C9B  0823               	movf	?___aomod,w
 11816  0C9C  00B6               	movwf	abs@a
 11817  0C9D  319C  24D7  318B   	fcall	_abs
 11818  0CA0  0020               	movlb	0	; select bank0
 11819  0CA1  0836               	movf	?_abs,w
 11820  0CA2  3E30               	addlw	48
 11821  0CA3  00C6               	movwf	??_dtoa
 11822  0CA4  085A               	movf	dtoa@i,w
 11823  0CA5  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11824  0CA6  0086               	movwf	6
 11825  0CA7  3002               	movlw	2	; select bank5/6
 11826  0CA8  0087               	movwf	7
 11827  0CA9  0846               	movf	??_dtoa,w
 11828  0CAA  0081               	movwf	1
 11829                           
 11830                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 315:         --p;
 11831  0CAB  30FF               	movlw	255
 11832  0CAC  07CC               	addwf	dtoa@p,f
 11833  0CAD  30FF               	movlw	255
 11834  0CAE  3DCD               	addwfc	dtoa@p+1,f
 11835                           
 11836                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 316:         --w;
 11837  0CAF  30FF               	movlw	255
 11838  0CB0  07CE               	addwf	dtoa@w,f
 11839  0CB1  30FF               	movlw	255
 11840  0CB2  3DCF               	addwfc	dtoa@w+1,f
 11841                           
 11842                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
 11843  0CB3  300A               	movlw	10
 11844  0CB4  00A3               	movwf	___aodiv@divisor
 11845  0CB5  01A4               	clrf	___aodiv@divisor+1
 11846  0CB6  01A5               	clrf	___aodiv@divisor+2
 11847  0CB7  01A6               	clrf	___aodiv@divisor+3
 11848  0CB8  01A7               	clrf	___aodiv@divisor+4
 11849  0CB9  01A8               	clrf	___aodiv@divisor+5
 11850  0CBA  01A9               	clrf	___aodiv@divisor+6
 11851  0CBB  01AA               	clrf	___aodiv@divisor+7
 11852  0CBC  0852               	movf	dtoa@n,w
 11853  0CBD  00AB               	movwf	___aodiv@dividend
 11854  0CBE  0853               	movf	dtoa@n+1,w
 11855  0CBF  00AC               	movwf	___aodiv@dividend+1
 11856  0CC0  0854               	movf	dtoa@n+2,w
 11857  0CC1  00AD               	movwf	___aodiv@dividend+2
 11858  0CC2  0855               	movf	dtoa@n+3,w
 11859  0CC3  00AE               	movwf	___aodiv@dividend+3
 11860  0CC4  0856               	movf	dtoa@n+4,w
 11861  0CC5  00AF               	movwf	___aodiv@dividend+4
 11862  0CC6  0857               	movf	dtoa@n+5,w
 11863  0CC7  00B0               	movwf	___aodiv@dividend+5
 11864  0CC8  0858               	movf	dtoa@n+6,w
 11865  0CC9  00B1               	movwf	___aodiv@dividend+6
 11866  0CCA  0859               	movf	dtoa@n+7,w
 11867  0CCB  00B2               	movwf	___aodiv@dividend+7
 11868  0CCC  318A  22DA  318B   	fcall	___aodiv
 11869  0CCF  0823               	movf	?___aodiv,w
 11870  0CD0  00D2               	movwf	dtoa@n
 11871  0CD1  0824               	movf	?___aodiv+1,w
 11872  0CD2  00D3               	movwf	dtoa@n+1
 11873  0CD3  0825               	movf	?___aodiv+2,w
 11874  0CD4  00D4               	movwf	dtoa@n+2
 11875  0CD5  0826               	movf	?___aodiv+3,w
 11876  0CD6  00D5               	movwf	dtoa@n+3
 11877  0CD7  0827               	movf	?___aodiv+4,w
 11878  0CD8  00D6               	movwf	dtoa@n+4
 11879  0CD9  0828               	movf	?___aodiv+5,w
 11880  0CDA  00D7               	movwf	dtoa@n+5
 11881  0CDB  0829               	movf	?___aodiv+6,w
 11882  0CDC  00D8               	movwf	dtoa@n+6
 11883  0CDD  082A               	movf	?___aodiv+7,w
 11884  0CDE  00D9               	movwf	dtoa@n+7
 11885  0CDF                     l1975:	
 11886                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 318:     }
 11887                           
 11888                           
 11889                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11890  0CDF  0020               	movlb	0	; select bank0
 11891  0CE0  085B               	movf	dtoa@i+1,w
 11892  0CE1  3A80               	xorlw	128
 11893  0CE2  00C6               	movwf	??_dtoa
 11894  0CE3  3080               	movlw	128
 11895  0CE4  0246               	subwf	??_dtoa,w
 11896  0CE5  1D03               	skipz
 11897  0CE6  2CE9               	goto	u4795
 11898  0CE7  3001               	movlw	1
 11899  0CE8  025A               	subwf	dtoa@i,w
 11900  0CE9                     u4795:
 11901  0CE9  1803               	btfsc	3,0
 11902  0CEA  2C53               	goto	l6820
 11903  0CEB                     l6828:
 11904                           
 11905                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
 11906  0CEB  0020               	movlb	0	; select bank0
 11907  0CEC  0850               	movf	dtoa@s,w
 11908  0CED  0451               	iorwf	dtoa@s+1,w
 11909  0CEE  1D03               	btfss	3,2
 11910  0CEF  2CF2               	goto	l6832
 11911  0CF0  1D6A               	btfss	_flags,2
 11912  0CF1  2D09               	goto	l6842
 11913  0CF2                     l6832:
 11914                           
 11915                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 322:         --i;
 11916  0CF2  30FF               	movlw	255
 11917  0CF3  07DA               	addwf	dtoa@i,f
 11918  0CF4  30FF               	movlw	255
 11919  0CF5  3DDB               	addwfc	dtoa@i+1,f
 11920                           
 11921                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
 11922  0CF6  0850               	movf	dtoa@s,w
 11923  0CF7  0451               	iorwf	dtoa@s+1,w
 11924  0CF8  1D03               	btfss	3,2
 11925  0CF9  2CFC               	goto	l6838
 11926  0CFA  302B               	movlw	43
 11927  0CFB  2CFD               	goto	L4
 11928  0CFC                     l6838:
 11929  0CFC  302D               	movlw	45
 11930  0CFD                     L4:
 11931  0CFD  00CA               	movwf	_dtoa$2180
 11932  0CFE  3000               	movlw	0
 11933  0CFF  00CB               	movwf	_dtoa$2180+1
 11934  0D00  084A               	movf	_dtoa$2180,w
 11935  0D01  00C6               	movwf	??_dtoa
 11936  0D02  085A               	movf	dtoa@i,w
 11937  0D03  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11938  0D04  0086               	movwf	6
 11939  0D05  3002               	movlw	2	; select bank5/6
 11940  0D06  0087               	movwf	7
 11941  0D07  0846               	movf	??_dtoa,w
 11942  0D08  0081               	movwf	1
 11943  0D09                     l6842:
 11944                           
 11945                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
 11946  0D09  085A               	movf	dtoa@i,w
 11947  0D0A  3EC9               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11948  0D0B  00C6               	movwf	??_dtoa
 11949  0D0C  0846               	movf	??_dtoa,w
 11950  0D0D  00B3               	movwf	pad@buf
 11951  0D0E  084F               	movf	dtoa@w+1,w
 11952  0D0F  00B5               	movwf	pad@p+1
 11953  0D10  084E               	movf	dtoa@w,w
 11954  0D11  00B4               	movwf	pad@p
 11955  0D12  0849               	movf	dtoa@fp,w
 11956  0D13  3192  225C         	fcall	_pad
 11957  0D15  0834               	movf	?_pad+1,w
 11958  0D16  00BF               	movwf	?_dtoa+1
 11959  0D17  0833               	movf	?_pad,w
 11960  0D18  00BE               	movwf	?_dtoa
 11961  0D19  0008               	return
 11962  0D1A                     __end_of_dtoa:
 11963                           
 11964                           	psect	text19
 11965  125C                     __ptext19:	
 11966 ;; *************** function _pad *****************
 11967 ;; Defined at:
 11968 ;;		line 72 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 11969 ;; Parameters:    Size  Location     Type
 11970 ;;  fp              1    wreg     PTR struct _IO_FILE
 11971 ;;		 -> sprintf@f(6), 
 11972 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 11973 ;;		 -> dbuf(32), 
 11974 ;;  p               2   20[BANK0 ] int 
 11975 ;; Auto vars:     Size  Location     Type
 11976 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 11977 ;;		 -> sprintf@f(6), 
 11978 ;;  w               2   25[BANK0 ] int 
 11979 ;;  i               2   23[BANK0 ] int 
 11980 ;; Return value:  Size  Location     Type
 11981 ;;                  2   19[BANK0 ] int 
 11982 ;; Registers used:
 11983 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11984 ;; Tracked objects:
 11985 ;;		On entry : 1F/0
 11986 ;;		On exit  : 1F/0
 11987 ;;		Unchanged: 0/0
 11988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11989 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11990 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11991 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11992 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11993 ;;Total ram usage:        9 bytes
 11994 ;; Hardware stack levels used:    1
 11995 ;; Hardware stack levels required when called:   10
 11996 ;; This function calls:
 11997 ;;		_fputc
 11998 ;;		_fputs
 11999 ;;		_strlen
 12000 ;; This function is called by:
 12001 ;;		_dtoa
 12002 ;;		_xtoa
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           
 12007                           ;psect for function _pad
 12008  125C                     _pad:
 12009                           
 12010                           ;incstack = 0
 12011                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12012                           ;pad@fp stored from wreg
 12013  125C  00BB               	movwf	pad@fp
 12014                           
 12015                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.30/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 12016  125D  1C6A               	btfss	_flags,0
 12017  125E  2A67               	goto	l6670
 12018                           
 12019                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 12020  125F  083B               	movf	pad@fp,w
 12021  1260  00B6               	movwf	??_pad
 12022  1261  0836               	movf	??_pad,w
 12023  1262  00AB               	movwf	fputs@fp
 12024  1263  0833               	movf	pad@buf,w
 12025  1264  319F  270E  3192   	fcall	_fputs
 12026  1267                     l6670:
 12027                           
 12028                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 12029  1267  1BB5               	btfsc	pad@p+1,7
 12030  1268  2A6E               	goto	l6674
 12031  1269  0835               	movf	pad@p+1,w
 12032  126A  00BA               	movwf	pad@w+1
 12033  126B  0834               	movf	pad@p,w
 12034  126C  00B9               	movwf	pad@w
 12035  126D  2A70               	goto	l1958
 12036  126E                     l6674:
 12037  126E  01B9               	clrf	pad@w
 12038  126F  01BA               	clrf	pad@w+1
 12039  1270                     l1958:
 12040                           
 12041                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 12042  1270  01B7               	clrf	pad@i
 12043  1271  01B8               	clrf	pad@i+1
 12044  1272                     l6680:	
 12045                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 12046                           
 12047                           
 12048                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 12049  1272  0838               	movf	pad@i+1,w
 12050  1273  3A80               	xorlw	128
 12051  1274  00B6               	movwf	??_pad
 12052  1275  083A               	movf	pad@w+1,w
 12053  1276  3A80               	xorlw	128
 12054  1277  0236               	subwf	??_pad,w
 12055  1278  1D03               	skipz
 12056  1279  2A7C               	goto	u4555
 12057  127A  0839               	movf	pad@w,w
 12058  127B  0237               	subwf	pad@i,w
 12059  127C                     u4555:
 12060  127C  1803               	btfsc	3,0
 12061  127D  2A90               	goto	l1961
 12062                           
 12063                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 12064  127E  3020               	movlw	32
 12065  127F  0020               	movlb	0	; select bank0
 12066  1280  00A3               	movwf	fputc@c
 12067  1281  3000               	movlw	0
 12068  1282  00A4               	movwf	fputc@c+1
 12069  1283  083B               	movf	pad@fp,w
 12070  1284  00B6               	movwf	??_pad
 12071  1285  0836               	movf	??_pad,w
 12072  1286  00A5               	movwf	fputc@fp
 12073  1287  3192  2210  3192   	fcall	_fputc
 12074                           
 12075                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 86:         ++i;
 12076  128A  3001               	movlw	1
 12077  128B  0020               	movlb	0	; select bank0
 12078  128C  07B7               	addwf	pad@i,f
 12079  128D  3000               	movlw	0
 12080  128E  3DB8               	addwfc	pad@i+1,f
 12081  128F  2A72               	goto	l6680
 12082  1290                     l1961:
 12083                           
 12084                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 12085  1290  0020               	movlb	0	; select bank0
 12086  1291  186A               	btfsc	_flags,0
 12087  1292  2A9B               	goto	l6684
 12088                           
 12089                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 12090  1293  083B               	movf	pad@fp,w
 12091  1294  00B6               	movwf	??_pad
 12092  1295  0836               	movf	??_pad,w
 12093  1296  00AB               	movwf	fputs@fp
 12094  1297  0833               	movf	pad@buf,w
 12095  1298  319F  270E  3192   	fcall	_fputs
 12096  129B                     l6684:
 12097                           
 12098                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
 12099  129B  0833               	movf	pad@buf,w
 12100  129C  00A3               	movwf	strlen@s
 12101  129D  3002               	movlw	2
 12102  129E  00A4               	movwf	strlen@s+1
 12103  129F  319C  24A8         	fcall	_strlen
 12104  12A1  0839               	movf	pad@w,w
 12105  12A2  0723               	addwf	?_strlen,w
 12106  12A3  00B3               	movwf	?_pad
 12107  12A4  083A               	movf	pad@w+1,w
 12108  12A5  3D24               	addwfc	?_strlen+1,w
 12109  12A6  00B4               	movwf	?_pad+1
 12110  12A7  0008               	return
 12111  12A8                     __end_of_pad:
 12112                           
 12113                           	psect	text20
 12114  1CA8                     __ptext20:	
 12115 ;; *************** function _strlen *****************
 12116 ;; Defined at:
 12117 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/strlen.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  s               2    3[BANK0 ] PTR const unsigned char 
 12120 ;;		 -> stoa@nuls(7), dbuf(32), ?_sprintf(2), lcd_fs_name(112), 
 12121 ;;		 -> lcd_aux_name(14), lcd_src_name(40), ledstr(0), 
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;  a               2    6[BANK0 ] PTR const unsigned char 
 12124 ;;		 -> stoa@nuls(7), dbuf(32), ?_sprintf(2), lcd_fs_name(112), 
 12125 ;;		 -> lcd_aux_name(14), lcd_src_name(40), ledstr(0), 
 12126 ;; Return value:  Size  Location     Type
 12127 ;;                  2    3[BANK0 ] unsigned int 
 12128 ;; Registers used:
 12129 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12130 ;; Tracked objects:
 12131 ;;		On entry : 1F/4B00000
 12132 ;;		On exit  : 1F/0
 12133 ;;		Unchanged: 0/0
 12134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12135 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12137 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12138 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12139 ;;Total ram usage:        5 bytes
 12140 ;; Hardware stack levels used:    1
 12141 ;; Hardware stack levels required when called:    7
 12142 ;; This function calls:
 12143 ;;		Nothing
 12144 ;; This function is called by:
 12145 ;;		_pad
 12146 ;;		_stoa
 12147 ;;		_strcat
 12148 ;; This function uses a non-reentrant model
 12149 ;;
 12150                           
 12151                           
 12152                           ;psect for function _strlen
 12153  1CA8                     _strlen:
 12154                           
 12155                           ;incstack = 0
 12156                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 12157  1CA8  0824               	movf	strlen@s+1,w
 12158  1CA9  00A7               	movwf	strlen@a+1
 12159  1CAA  0823               	movf	strlen@s,w
 12160  1CAB  00A6               	movwf	strlen@a
 12161  1CAC                     l6520:
 12162  1CAC  0823               	movf	strlen@s,w
 12163  1CAD  0084               	movwf	4
 12164  1CAE  0824               	movf	strlen@s+1,w
 12165  1CAF  0085               	movwf	5
 12166  1CB0  0012               	moviw fsr0++
 12167  1CB1  1903               	btfsc	3,2
 12168  1CB2  2CB8               	goto	l6522
 12169  1CB3  3001               	movlw	1
 12170  1CB4  07A3               	addwf	strlen@s,f
 12171  1CB5  3000               	movlw	0
 12172  1CB6  3DA4               	addwfc	strlen@s+1,f
 12173  1CB7  2CAC               	goto	l6520
 12174  1CB8                     l6522:
 12175  1CB8  0826               	movf	strlen@a,w
 12176  1CB9  0223               	subwf	strlen@s,w
 12177  1CBA  00A3               	movwf	?_strlen
 12178  1CBB  0827               	movf	strlen@a+1,w
 12179  1CBC  3B24               	subwfb	strlen@s+1,w
 12180  1CBD  00A4               	movwf	?_strlen+1
 12181  1CBE  0008               	return
 12182  1CBF                     __end_of_strlen:
 12183                           
 12184                           	psect	text21
 12185  1F0E                     __ptext21:	
 12186 ;; *************** function _fputs *****************
 12187 ;; Defined at:
 12188 ;;		line 8 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputs.c"
 12189 ;; Parameters:    Size  Location     Type
 12190 ;;  s               1    wreg     PTR const unsigned char 
 12191 ;;		 -> dbuf(32), 
 12192 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 12193 ;;		 -> sprintf@f(6), 
 12194 ;; Auto vars:     Size  Location     Type
 12195 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 12196 ;;		 -> dbuf(32), 
 12197 ;;  i               2   16[BANK0 ] int 
 12198 ;;  c               1   15[BANK0 ] unsigned char 
 12199 ;; Return value:  Size  Location     Type
 12200 ;;                  2   11[BANK0 ] int 
 12201 ;; Registers used:
 12202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12203 ;; Tracked objects:
 12204 ;;		On entry : 1F/0
 12205 ;;		On exit  : 1F/0
 12206 ;;		Unchanged: 0/0
 12207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12208 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12209 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12210 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12211 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12212 ;;Total ram usage:        8 bytes
 12213 ;; Hardware stack levels used:    1
 12214 ;; Hardware stack levels required when called:    9
 12215 ;; This function calls:
 12216 ;;		_fputc
 12217 ;; This function is called by:
 12218 ;;		_pad
 12219 ;; This function uses a non-reentrant model
 12220 ;;
 12221                           
 12222                           
 12223                           ;psect for function _fputs
 12224  1F0E                     _fputs:
 12225                           
 12226                           ;incstack = 0
 12227                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12228                           ;fputs@s stored from wreg
 12229  1F0E  00B2               	movwf	fputs@s
 12230  1F0F  01B0               	clrf	fputs@i
 12231  1F10  01B1               	clrf	fputs@i+1
 12232  1F11                     l6514:
 12233  1F11  0830               	movf	fputs@i,w
 12234  1F12  0732               	addwf	fputs@s,w
 12235  1F13  00AC               	movwf	??_fputs
 12236  1F14  082C               	movf	??_fputs,w
 12237  1F15  0086               	movwf	6
 12238  1F16  3002               	movlw	2	; select bank4/5
 12239  1F17  0087               	movwf	7
 12240  1F18  0801               	movf	1,w
 12241  1F19  00AD               	movwf	??_fputs+1
 12242  1F1A  082D               	movf	??_fputs+1,w
 12243  1F1B  00AF               	movwf	fputs@c
 12244  1F1C  082F               	movf	fputs@c,w
 12245  1F1D  1903               	btfsc	3,2
 12246  1F1E  0008               	return
 12247  1F1F  082F               	movf	fputs@c,w
 12248  1F20  00AC               	movwf	??_fputs
 12249  1F21  01AD               	clrf	??_fputs+1
 12250  1F22  082C               	movf	??_fputs,w
 12251  1F23  00A3               	movwf	fputc@c
 12252  1F24  082D               	movf	??_fputs+1,w
 12253  1F25  00A4               	movwf	fputc@c+1
 12254  1F26  082B               	movf	fputs@fp,w
 12255  1F27  00AE               	movwf	??_fputs+2
 12256  1F28  082E               	movf	??_fputs+2,w
 12257  1F29  00A5               	movwf	fputc@fp
 12258  1F2A  3192  2210  319F   	fcall	_fputc
 12259  1F2D  3001               	movlw	1
 12260  1F2E  0020               	movlb	0	; select bank0
 12261  1F2F  07B0               	addwf	fputs@i,f
 12262  1F30  3000               	movlw	0
 12263  1F31  3DB1               	addwfc	fputs@i+1,f
 12264  1F32  2F11               	goto	l6514
 12265  1F33                     __end_of_fputs:
 12266                           
 12267                           	psect	text22
 12268  1210                     __ptext22:	
 12269 ;; *************** function _fputc *****************
 12270 ;; Defined at:
 12271 ;;		line 8 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputc.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;  c               2    3[BANK0 ] int 
 12274 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 12275 ;;		 -> sprintf@f(6), 
 12276 ;; Auto vars:     Size  Location     Type
 12277 ;;		None
 12278 ;; Return value:  Size  Location     Type
 12279 ;;                  2    3[BANK0 ] int 
 12280 ;; Registers used:
 12281 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12282 ;; Tracked objects:
 12283 ;;		On entry : 1F/0
 12284 ;;		On exit  : 0/0
 12285 ;;		Unchanged: 0/0
 12286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12287 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12289 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12290 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12291 ;;Total ram usage:        8 bytes
 12292 ;; Hardware stack levels used:    1
 12293 ;; Hardware stack levels required when called:    8
 12294 ;; This function calls:
 12295 ;;		_putch
 12296 ;; This function is called by:
 12297 ;;		_pad
 12298 ;;		_stoa
 12299 ;;		_vfpfcnvrt
 12300 ;;		_fputs
 12301 ;; This function uses a non-reentrant model
 12302 ;;
 12303                           
 12304                           
 12305                           ;psect for function _fputc
 12306  1210                     _fputc:
 12307                           
 12308                           ;incstack = 0
 12309                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12310  1210  0825               	movf	fputc@fp,w
 12311  1211  1D03               	btfss	3,2
 12312  1212  0825               	movf	fputc@fp,w
 12313  1213  1D03               	btfss	3,2
 12314  1214  2A19               	goto	l6496
 12315  1215  0823               	movf	fputc@c,w
 12316  1216  319A  2241         	fcall	_putch
 12317  1218  0008               	return
 12318  1219                     l6496:
 12319  1219  0825               	movf	fputc@fp,w
 12320  121A  3E04               	addlw	4
 12321  121B  0086               	movwf	6
 12322  121C  0187               	clrf	7
 12323  121D  0016               	moviw fsr1++
 12324  121E  0401               	iorwf	1,w
 12325  121F  1903               	btfsc	3,2
 12326  1220  2A3D               	goto	l6500
 12327  1221  0825               	movf	fputc@fp,w
 12328  1222  3E04               	addlw	4
 12329  1223  0086               	movwf	6
 12330  1224  0187               	clrf	7
 12331  1225  3F40               	moviw [0]fsr1
 12332  1226  00A6               	movwf	??_fputc
 12333  1227  3F41               	moviw [1]fsr1
 12334  1228  00A7               	movwf	??_fputc+1
 12335  1229  0825               	movf	fputc@fp,w
 12336  122A  3E02               	addlw	2
 12337  122B  0086               	movwf	6
 12338  122C  0187               	clrf	7
 12339  122D  3F40               	moviw [0]fsr1
 12340  122E  00A8               	movwf	??_fputc+2
 12341  122F  3F41               	moviw [1]fsr1
 12342  1230  00A9               	movwf	??_fputc+3
 12343  1231  0829               	movf	??_fputc+3,w
 12344  1232  3A80               	xorlw	128
 12345  1233  00AA               	movwf	??_fputc+4
 12346  1234  0827               	movf	??_fputc+1,w
 12347  1235  3A80               	xorlw	128
 12348  1236  022A               	subwf	??_fputc+4,w
 12349  1237  1D03               	skipz
 12350  1238  2A3B               	goto	u4185
 12351  1239  0826               	movf	??_fputc,w
 12352  123A  0228               	subwf	??_fputc+2,w
 12353  123B                     u4185:
 12354  123B  1803               	skipnc
 12355  123C  0008               	return
 12356  123D                     l6500:
 12357  123D  0020               	movlb	0	; select bank0
 12358  123E  0825               	movf	fputc@fp,w
 12359  123F  3E02               	addlw	2
 12360  1240  0086               	movwf	6
 12361  1241  0187               	clrf	7
 12362  1242  0825               	movf	fputc@fp,w
 12363  1243  0084               	movwf	4
 12364  1244  0185               	clrf	5
 12365  1245  3F40               	moviw [0]fsr1
 12366  1246  0700               	addwf	0,w
 12367  1247  00A6               	movwf	??_fputc
 12368  1248  3101               	addfsr 0,1
 12369  1249  3F41               	moviw [1]fsr1
 12370  124A  3D00               	addwfc	0,w
 12371  124B  00A7               	movwf	??_fputc+1
 12372  124C  0826               	movf	??_fputc,w
 12373  124D  0086               	movwf	6
 12374  124E  0827               	movf	??_fputc+1,w
 12375  124F  0087               	movwf	7
 12376  1250  0823               	movf	fputc@c,w
 12377  1251  0081               	movwf	1
 12378  1252  0825               	movf	fputc@fp,w
 12379  1253  3E02               	addlw	2
 12380  1254  0086               	movwf	6
 12381  1255  0187               	clrf	7
 12382  1256  3001               	movlw	1
 12383  1257  0781               	addwf	1,f
 12384  1258  3141               	addfsr 1,1
 12385  1259  1803               	skipnc
 12386  125A  0A81               	incf	1,f
 12387  125B  0008               	return
 12388  125C                     __end_of_fputc:
 12389                           
 12390                           	psect	text23
 12391  1A41                     __ptext23:	
 12392 ;; *************** function _putch *****************
 12393 ;; Defined at:
 12394 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/putch.c"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;  c               1    wreg     unsigned char 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;  c               1    0[COMMON] unsigned char 
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  1    wreg      void 
 12401 ;; Registers used:
 12402 ;;		wreg
 12403 ;; Tracked objects:
 12404 ;;		On entry : 1F/0
 12405 ;;		On exit  : 1F/0
 12406 ;;		Unchanged: 1F/0
 12407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12412 ;;Total ram usage:        0 bytes
 12413 ;; Hardware stack levels used:    1
 12414 ;; Hardware stack levels required when called:    7
 12415 ;; This function calls:
 12416 ;;		Nothing
 12417 ;; This function is called by:
 12418 ;;		_fputc
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           
 12423                           ;psect for function _putch
 12424  1A41                     _putch:
 12425                           
 12426                           ;incstack = 0
 12427                           ; Regs used in _putch: [wreg]
 12428  1A41  0008               	return
 12429  1A42                     __end_of_putch:
 12430                           
 12431                           	psect	text24
 12432  1CD7                     __ptext24:	
 12433 ;; *************** function _abs *****************
 12434 ;; Defined at:
 12435 ;;		line 1 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/abs.c"
 12436 ;; Parameters:    Size  Location     Type
 12437 ;;  a               2   22[BANK0 ] int 
 12438 ;; Auto vars:     Size  Location     Type
 12439 ;;		None
 12440 ;; Return value:  Size  Location     Type
 12441 ;;                  2   22[BANK0 ] int 
 12442 ;; Registers used:
 12443 ;;		wreg, status,2, status,0
 12444 ;; Tracked objects:
 12445 ;;		On entry : 1F/4900000
 12446 ;;		On exit  : 0/0
 12447 ;;		Unchanged: 0/0
 12448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12449 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12451 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12452 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12453 ;;Total ram usage:        4 bytes
 12454 ;; Hardware stack levels used:    1
 12455 ;; Hardware stack levels required when called:    7
 12456 ;; This function calls:
 12457 ;;		Nothing
 12458 ;; This function is called by:
 12459 ;;		_set_gains
 12460 ;;		_dtoa
 12461 ;; This function uses a non-reentrant model
 12462 ;;
 12463                           
 12464                           
 12465                           ;psect for function _abs
 12466  1CD7                     _abs:
 12467                           
 12468                           ;incstack = 0
 12469                           ; Regs used in _abs: [wreg+status,2+status,0]
 12470  1CD7  0837               	movf	abs@a+1,w
 12471  1CD8  3A80               	xorlw	128
 12472  1CD9  00B8               	movwf	??_abs
 12473  1CDA  3080               	movlw	128
 12474  1CDB  0238               	subwf	??_abs,w
 12475  1CDC  1D03               	skipz
 12476  1CDD  2CE0               	goto	u4275
 12477  1CDE  3001               	movlw	1
 12478  1CDF  0236               	subwf	abs@a,w
 12479  1CE0                     u4275:
 12480  1CE0  1803               	skipnc
 12481  1CE1  0008               	return
 12482  1CE2  0020               	movlb	0	; select bank0
 12483  1CE3  0936               	comf	abs@a,w
 12484  1CE4  00B8               	movwf	??_abs
 12485  1CE5  0937               	comf	abs@a+1,w
 12486  1CE6  00B9               	movwf	??_abs+1
 12487  1CE7  0AB8               	incf	??_abs,f
 12488  1CE8  1903               	skipnz
 12489  1CE9  0AB9               	incf	??_abs+1,f
 12490  1CEA  0838               	movf	??_abs,w
 12491  1CEB  00B6               	movwf	?_abs
 12492  1CEC  0839               	movf	??_abs+1,w
 12493  1CED  00B7               	movwf	?_abs+1
 12494  1CEE  0008               	return
 12495  1CEF                     __end_of_abs:
 12496                           
 12497                           	psect	text25
 12498  09FC                     __ptext25:	
 12499 ;; *************** function ___aomod *****************
 12500 ;; Defined at:
 12501 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/aomod.c"
 12502 ;; Parameters:    Size  Location     Type
 12503 ;;  divisor         8    3[BANK0 ] long long 
 12504 ;;  dividend        8   11[BANK0 ] long long 
 12505 ;; Auto vars:     Size  Location     Type
 12506 ;;  sign            1   21[BANK0 ] unsigned char 
 12507 ;;  counter         1   20[BANK0 ] unsigned char 
 12508 ;; Return value:  Size  Location     Type
 12509 ;;                  8    3[BANK0 ] long long 
 12510 ;; Registers used:
 12511 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12512 ;; Tracked objects:
 12513 ;;		On entry : 1F/0
 12514 ;;		On exit  : 1F/0
 12515 ;;		Unchanged: 0/0
 12516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12517 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12518 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12519 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12520 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12521 ;;Total ram usage:       19 bytes
 12522 ;; Hardware stack levels used:    1
 12523 ;; Hardware stack levels required when called:    7
 12524 ;; This function calls:
 12525 ;;		Nothing
 12526 ;; This function is called by:
 12527 ;;		_dtoa
 12528 ;; This function uses a non-reentrant model
 12529 ;;
 12530                           
 12531                           
 12532                           ;psect for function ___aomod
 12533  09FC                     ___aomod:
 12534                           
 12535                           ;incstack = 0
 12536                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 12537  09FC  01B5               	clrf	___aomod@sign
 12538  09FD  302B               	movlw	low ___aomod@dividend
 12539  09FE  0086               	movwf	6
 12540  09FF  3000               	movlw	high ___aomod@dividend
 12541  0A00  0087               	movwf	7
 12542  0A01  3F47               	moviw [7]fsr1
 12543  0A02  00B3               	movwf	??___aomod
 12544  0A03  1FB3               	btfss	??___aomod,7
 12545  0A04  2A27               	goto	l6642
 12546  0A05  0020               	movlb	0	; select bank0
 12547  0A06  09AB               	comf	___aomod@dividend,f
 12548  0A07  09AC               	comf	___aomod@dividend+1,f
 12549  0A08  09AD               	comf	___aomod@dividend+2,f
 12550  0A09  09AE               	comf	___aomod@dividend+3,f
 12551  0A0A  09AF               	comf	___aomod@dividend+4,f
 12552  0A0B  09B0               	comf	___aomod@dividend+5,f
 12553  0A0C  09B1               	comf	___aomod@dividend+6,f
 12554  0A0D  09B2               	comf	___aomod@dividend+7,f
 12555  0A0E  0AAB               	incf	___aomod@dividend,f
 12556  0A0F  1D03               	skipz
 12557  0A10  2A24               	goto	u444lld
 12558  0A11  0AAC               	incf	___aomod@dividend+1,f
 12559  0A12  1D03               	skipz
 12560  0A13  2A24               	goto	u444lld
 12561  0A14  0AAD               	incf	___aomod@dividend+2,f
 12562  0A15  1D03               	skipz
 12563  0A16  2A24               	goto	u444lld
 12564  0A17  0AAE               	incf	___aomod@dividend+3,f
 12565  0A18  1D03               	skipz
 12566  0A19  2A24               	goto	u444lld
 12567  0A1A  0AAF               	incf	___aomod@dividend+4,f
 12568  0A1B  1D03               	skipz
 12569  0A1C  2A24               	goto	u444lld
 12570  0A1D  0AB0               	incf	___aomod@dividend+5,f
 12571  0A1E  1D03               	skipz
 12572  0A1F  2A24               	goto	u444lld
 12573  0A20  0AB1               	incf	___aomod@dividend+6,f
 12574  0A21  1D03               	skipz
 12575  0A22  2A24               	goto	u444lld
 12576  0A23  0AB2               	incf	___aomod@dividend+7,f
 12577  0A24                     u444lld:
 12578  0A24  0020               	movlb	0	; select bank0
 12579  0A25  01B5               	clrf	___aomod@sign
 12580  0A26  0AB5               	incf	___aomod@sign,f
 12581  0A27                     l6642:
 12582  0A27  3023               	movlw	low ___aomod@divisor
 12583  0A28  0086               	movwf	6
 12584  0A29  3000               	movlw	high ___aomod@divisor
 12585  0A2A  0087               	movwf	7
 12586  0A2B  3F47               	moviw [7]fsr1
 12587  0A2C  0020               	movlb	0	; select bank0
 12588  0A2D  00B3               	movwf	??___aomod
 12589  0A2E  1FB3               	btfss	??___aomod,7
 12590  0A2F  2A4F               	goto	l6646
 12591  0A30  0020               	movlb	0	; select bank0
 12592  0A31  09A3               	comf	___aomod@divisor,f
 12593  0A32  09A4               	comf	___aomod@divisor+1,f
 12594  0A33  09A5               	comf	___aomod@divisor+2,f
 12595  0A34  09A6               	comf	___aomod@divisor+3,f
 12596  0A35  09A7               	comf	___aomod@divisor+4,f
 12597  0A36  09A8               	comf	___aomod@divisor+5,f
 12598  0A37  09A9               	comf	___aomod@divisor+6,f
 12599  0A38  09AA               	comf	___aomod@divisor+7,f
 12600  0A39  0AA3               	incf	___aomod@divisor,f
 12601  0A3A  1D03               	skipz
 12602  0A3B  2A4F               	goto	l6646
 12603  0A3C  0AA4               	incf	___aomod@divisor+1,f
 12604  0A3D  1D03               	skipz
 12605  0A3E  2A4F               	goto	l6646
 12606  0A3F  0AA5               	incf	___aomod@divisor+2,f
 12607  0A40  1D03               	skipz
 12608  0A41  2A4F               	goto	l6646
 12609  0A42  0AA6               	incf	___aomod@divisor+3,f
 12610  0A43  1D03               	skipz
 12611  0A44  2A4F               	goto	l6646
 12612  0A45  0AA7               	incf	___aomod@divisor+4,f
 12613  0A46  1D03               	skipz
 12614  0A47  2A4F               	goto	l6646
 12615  0A48  0AA8               	incf	___aomod@divisor+5,f
 12616  0A49  1D03               	skipz
 12617  0A4A  2A4F               	goto	l6646
 12618  0A4B  0AA9               	incf	___aomod@divisor+6,f
 12619  0A4C  1D03               	skipz
 12620  0A4D  2A4F               	goto	l6646
 12621  0A4E  0AAA               	incf	___aomod@divisor+7,f
 12622  0A4F                     l6646:
 12623  0A4F  0020               	movlb	0	; select bank0
 12624  0A50  0823               	movf	___aomod@divisor,w
 12625  0A51  0424               	iorwf	___aomod@divisor+1,w
 12626  0A52  0425               	iorwf	___aomod@divisor+2,w
 12627  0A53  0426               	iorwf	___aomod@divisor+3,w
 12628  0A54  0427               	iorwf	___aomod@divisor+4,w
 12629  0A55  0428               	iorwf	___aomod@divisor+5,w
 12630  0A56  0429               	iorwf	___aomod@divisor+6,w
 12631  0A57  042A               	iorwf	___aomod@divisor+7,w
 12632  0A58  1903               	skipnz
 12633  0A59  2AA7               	goto	l6662
 12634  0A5A  01B4               	clrf	___aomod@counter
 12635  0A5B  0AB4               	incf	___aomod@counter,f
 12636  0A5C                     l6654:
 12637  0A5C  1BAA               	btfsc	___aomod@divisor+7,7
 12638  0A5D  2A6B               	goto	l6656
 12639  0A5E  35A3               	lslf	___aomod@divisor,f
 12640  0A5F  0DA4               	rlf	___aomod@divisor+1,f
 12641  0A60  0DA5               	rlf	___aomod@divisor+2,f
 12642  0A61  0DA6               	rlf	___aomod@divisor+3,f
 12643  0A62  0DA7               	rlf	___aomod@divisor+4,f
 12644  0A63  0DA8               	rlf	___aomod@divisor+5,f
 12645  0A64  0DA9               	rlf	___aomod@divisor+6,f
 12646  0A65  0DAA               	rlf	___aomod@divisor+7,f
 12647  0A66  3001               	movlw	1
 12648  0A67  00B3               	movwf	??___aomod
 12649  0A68  0833               	movf	??___aomod,w
 12650  0A69  07B4               	addwf	___aomod@counter,f
 12651  0A6A  2A5C               	goto	l6654
 12652  0A6B                     l6656:
 12653  0A6B  082A               	movf	___aomod@divisor+7,w
 12654  0A6C  0232               	subwf	___aomod@dividend+7,w
 12655  0A6D  1D03               	skipz
 12656  0A6E  2A89               	goto	u4495
 12657  0A6F  0829               	movf	___aomod@divisor+6,w
 12658  0A70  0231               	subwf	___aomod@dividend+6,w
 12659  0A71  1D03               	skipz
 12660  0A72  2A89               	goto	u4495
 12661  0A73  0828               	movf	___aomod@divisor+5,w
 12662  0A74  0230               	subwf	___aomod@dividend+5,w
 12663  0A75  1D03               	skipz
 12664  0A76  2A89               	goto	u4495
 12665  0A77  0827               	movf	___aomod@divisor+4,w
 12666  0A78  022F               	subwf	___aomod@dividend+4,w
 12667  0A79  1D03               	skipz
 12668  0A7A  2A89               	goto	u4495
 12669  0A7B  0826               	movf	___aomod@divisor+3,w
 12670  0A7C  022E               	subwf	___aomod@dividend+3,w
 12671  0A7D  1D03               	skipz
 12672  0A7E  2A89               	goto	u4495
 12673  0A7F  0825               	movf	___aomod@divisor+2,w
 12674  0A80  022D               	subwf	___aomod@dividend+2,w
 12675  0A81  1D03               	skipz
 12676  0A82  2A89               	goto	u4495
 12677  0A83  0824               	movf	___aomod@divisor+1,w
 12678  0A84  022C               	subwf	___aomod@dividend+1,w
 12679  0A85  1D03               	skipz
 12680  0A86  2A89               	goto	u4495
 12681  0A87  0823               	movf	___aomod@divisor,w
 12682  0A88  022B               	subwf	___aomod@dividend,w
 12683  0A89                     u4495:
 12684  0A89  1C03               	skipc
 12685  0A8A  2A9B               	goto	l6660
 12686  0A8B  0823               	movf	___aomod@divisor,w
 12687  0A8C  02AB               	subwf	___aomod@dividend,f
 12688  0A8D  0824               	movf	___aomod@divisor+1,w
 12689  0A8E  3BAC               	subwfb	___aomod@dividend+1,f
 12690  0A8F  0825               	movf	___aomod@divisor+2,w
 12691  0A90  3BAD               	subwfb	___aomod@dividend+2,f
 12692  0A91  0826               	movf	___aomod@divisor+3,w
 12693  0A92  3BAE               	subwfb	___aomod@dividend+3,f
 12694  0A93  0827               	movf	___aomod@divisor+4,w
 12695  0A94  3BAF               	subwfb	___aomod@dividend+4,f
 12696  0A95  0828               	movf	___aomod@divisor+5,w
 12697  0A96  3BB0               	subwfb	___aomod@dividend+5,f
 12698  0A97  0829               	movf	___aomod@divisor+6,w
 12699  0A98  3BB1               	subwfb	___aomod@dividend+6,f
 12700  0A99  082A               	movf	___aomod@divisor+7,w
 12701  0A9A  3BB2               	subwfb	___aomod@dividend+7,f
 12702  0A9B                     l6660:
 12703  0A9B  36AA               	lsrf	___aomod@divisor+7,f
 12704  0A9C  0CA9               	rrf	___aomod@divisor+6,f
 12705  0A9D  0CA8               	rrf	___aomod@divisor+5,f
 12706  0A9E  0CA7               	rrf	___aomod@divisor+4,f
 12707  0A9F  0CA6               	rrf	___aomod@divisor+3,f
 12708  0AA0  0CA5               	rrf	___aomod@divisor+2,f
 12709  0AA1  0CA4               	rrf	___aomod@divisor+1,f
 12710  0AA2  0CA3               	rrf	___aomod@divisor,f
 12711  0AA3  3001               	movlw	1
 12712  0AA4  02B4               	subwf	___aomod@counter,f
 12713  0AA5  1D03               	btfss	3,2
 12714  0AA6  2A6B               	goto	l6656
 12715  0AA7                     l6662:
 12716  0AA7  0835               	movf	___aomod@sign,w
 12717  0AA8  1903               	btfsc	3,2
 12718  0AA9  2AC8               	goto	l1564
 12719  0AAA  09AB               	comf	___aomod@dividend,f
 12720  0AAB  09AC               	comf	___aomod@dividend+1,f
 12721  0AAC  09AD               	comf	___aomod@dividend+2,f
 12722  0AAD  09AE               	comf	___aomod@dividend+3,f
 12723  0AAE  09AF               	comf	___aomod@dividend+4,f
 12724  0AAF  09B0               	comf	___aomod@dividend+5,f
 12725  0AB0  09B1               	comf	___aomod@dividend+6,f
 12726  0AB1  09B2               	comf	___aomod@dividend+7,f
 12727  0AB2  0AAB               	incf	___aomod@dividend,f
 12728  0AB3  1D03               	skipz
 12729  0AB4  2AC8               	goto	l1564
 12730  0AB5  0AAC               	incf	___aomod@dividend+1,f
 12731  0AB6  1D03               	skipz
 12732  0AB7  2AC8               	goto	l1564
 12733  0AB8  0AAD               	incf	___aomod@dividend+2,f
 12734  0AB9  1D03               	skipz
 12735  0ABA  2AC8               	goto	l1564
 12736  0ABB  0AAE               	incf	___aomod@dividend+3,f
 12737  0ABC  1D03               	skipz
 12738  0ABD  2AC8               	goto	l1564
 12739  0ABE  0AAF               	incf	___aomod@dividend+4,f
 12740  0ABF  1D03               	skipz
 12741  0AC0  2AC8               	goto	l1564
 12742  0AC1  0AB0               	incf	___aomod@dividend+5,f
 12743  0AC2  1D03               	skipz
 12744  0AC3  2AC8               	goto	l1564
 12745  0AC4  0AB1               	incf	___aomod@dividend+6,f
 12746  0AC5  1D03               	skipz
 12747  0AC6  2AC8               	goto	l1564
 12748  0AC7  0AB2               	incf	___aomod@dividend+7,f
 12749  0AC8                     l1564:
 12750  0AC8  0020               	movlb	0	; select bank0
 12751  0AC9  082B               	movf	___aomod@dividend,w
 12752  0ACA  00A3               	movwf	?___aomod
 12753  0ACB  082C               	movf	___aomod@dividend+1,w
 12754  0ACC  00A4               	movwf	?___aomod+1
 12755  0ACD  082D               	movf	___aomod@dividend+2,w
 12756  0ACE  00A5               	movwf	?___aomod+2
 12757  0ACF  082E               	movf	___aomod@dividend+3,w
 12758  0AD0  00A6               	movwf	?___aomod+3
 12759  0AD1  082F               	movf	___aomod@dividend+4,w
 12760  0AD2  00A7               	movwf	?___aomod+4
 12761  0AD3  0830               	movf	___aomod@dividend+5,w
 12762  0AD4  00A8               	movwf	?___aomod+5
 12763  0AD5  0831               	movf	___aomod@dividend+6,w
 12764  0AD6  00A9               	movwf	?___aomod+6
 12765  0AD7  0832               	movf	___aomod@dividend+7,w
 12766  0AD8  00AA               	movwf	?___aomod+7
 12767  0AD9  0008               	return
 12768  0ADA                     __end_of___aomod:
 12769                           
 12770                           	psect	text26
 12771  0ADA                     __ptext26:	
 12772 ;; *************** function ___aodiv *****************
 12773 ;; Defined at:
 12774 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/aodiv.c"
 12775 ;; Parameters:    Size  Location     Type
 12776 ;;  divisor         8    3[BANK0 ] long long 
 12777 ;;  dividend        8   11[BANK0 ] long long 
 12778 ;; Auto vars:     Size  Location     Type
 12779 ;;  quotient        8   22[BANK0 ] long long 
 12780 ;;  sign            1   21[BANK0 ] unsigned char 
 12781 ;;  counter         1   20[BANK0 ] unsigned char 
 12782 ;; Return value:  Size  Location     Type
 12783 ;;                  8    3[BANK0 ] long long 
 12784 ;; Registers used:
 12785 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12786 ;; Tracked objects:
 12787 ;;		On entry : 1F/0
 12788 ;;		On exit  : 1F/0
 12789 ;;		Unchanged: 0/0
 12790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12791 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12792 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12793 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12794 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12795 ;;Total ram usage:       27 bytes
 12796 ;; Hardware stack levels used:    1
 12797 ;; Hardware stack levels required when called:    7
 12798 ;; This function calls:
 12799 ;;		Nothing
 12800 ;; This function is called by:
 12801 ;;		_dtoa
 12802 ;; This function uses a non-reentrant model
 12803 ;;
 12804                           
 12805                           
 12806                           ;psect for function ___aodiv
 12807  0ADA                     ___aodiv:
 12808                           
 12809                           ;incstack = 0
 12810                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 12811  0ADA  01B5               	clrf	___aodiv@sign
 12812  0ADB  3023               	movlw	low ___aodiv@divisor
 12813  0ADC  0086               	movwf	6
 12814  0ADD  3000               	movlw	high ___aodiv@divisor
 12815  0ADE  0087               	movwf	7
 12816  0ADF  3F47               	moviw [7]fsr1
 12817  0AE0  00B3               	movwf	??___aodiv
 12818  0AE1  1FB3               	btfss	??___aodiv,7
 12819  0AE2  2B05               	goto	l6604
 12820  0AE3  0020               	movlb	0	; select bank0
 12821  0AE4  09A3               	comf	___aodiv@divisor,f
 12822  0AE5  09A4               	comf	___aodiv@divisor+1,f
 12823  0AE6  09A5               	comf	___aodiv@divisor+2,f
 12824  0AE7  09A6               	comf	___aodiv@divisor+3,f
 12825  0AE8  09A7               	comf	___aodiv@divisor+4,f
 12826  0AE9  09A8               	comf	___aodiv@divisor+5,f
 12827  0AEA  09A9               	comf	___aodiv@divisor+6,f
 12828  0AEB  09AA               	comf	___aodiv@divisor+7,f
 12829  0AEC  0AA3               	incf	___aodiv@divisor,f
 12830  0AED  1D03               	skipz
 12831  0AEE  2B02               	goto	u433lld
 12832  0AEF  0AA4               	incf	___aodiv@divisor+1,f
 12833  0AF0  1D03               	skipz
 12834  0AF1  2B02               	goto	u433lld
 12835  0AF2  0AA5               	incf	___aodiv@divisor+2,f
 12836  0AF3  1D03               	skipz
 12837  0AF4  2B02               	goto	u433lld
 12838  0AF5  0AA6               	incf	___aodiv@divisor+3,f
 12839  0AF6  1D03               	skipz
 12840  0AF7  2B02               	goto	u433lld
 12841  0AF8  0AA7               	incf	___aodiv@divisor+4,f
 12842  0AF9  1D03               	skipz
 12843  0AFA  2B02               	goto	u433lld
 12844  0AFB  0AA8               	incf	___aodiv@divisor+5,f
 12845  0AFC  1D03               	skipz
 12846  0AFD  2B02               	goto	u433lld
 12847  0AFE  0AA9               	incf	___aodiv@divisor+6,f
 12848  0AFF  1D03               	skipz
 12849  0B00  2B02               	goto	u433lld
 12850  0B01  0AAA               	incf	___aodiv@divisor+7,f
 12851  0B02                     u433lld:
 12852  0B02  0020               	movlb	0	; select bank0
 12853  0B03  01B5               	clrf	___aodiv@sign
 12854  0B04  0AB5               	incf	___aodiv@sign,f
 12855  0B05                     l6604:
 12856  0B05  302B               	movlw	low ___aodiv@dividend
 12857  0B06  0086               	movwf	6
 12858  0B07  3000               	movlw	high ___aodiv@dividend
 12859  0B08  0087               	movwf	7
 12860  0B09  3F47               	moviw [7]fsr1
 12861  0B0A  0020               	movlb	0	; select bank0
 12862  0B0B  00B3               	movwf	??___aodiv
 12863  0B0C  1FB3               	btfss	??___aodiv,7
 12864  0B0D  2B32               	goto	l6610
 12865  0B0E  0020               	movlb	0	; select bank0
 12866  0B0F  09AB               	comf	___aodiv@dividend,f
 12867  0B10  09AC               	comf	___aodiv@dividend+1,f
 12868  0B11  09AD               	comf	___aodiv@dividend+2,f
 12869  0B12  09AE               	comf	___aodiv@dividend+3,f
 12870  0B13  09AF               	comf	___aodiv@dividend+4,f
 12871  0B14  09B0               	comf	___aodiv@dividend+5,f
 12872  0B15  09B1               	comf	___aodiv@dividend+6,f
 12873  0B16  09B2               	comf	___aodiv@dividend+7,f
 12874  0B17  0AAB               	incf	___aodiv@dividend,f
 12875  0B18  1D03               	skipz
 12876  0B19  2B2D               	goto	l6608
 12877  0B1A  0AAC               	incf	___aodiv@dividend+1,f
 12878  0B1B  1D03               	skipz
 12879  0B1C  2B2D               	goto	l6608
 12880  0B1D  0AAD               	incf	___aodiv@dividend+2,f
 12881  0B1E  1D03               	skipz
 12882  0B1F  2B2D               	goto	l6608
 12883  0B20  0AAE               	incf	___aodiv@dividend+3,f
 12884  0B21  1D03               	skipz
 12885  0B22  2B2D               	goto	l6608
 12886  0B23  0AAF               	incf	___aodiv@dividend+4,f
 12887  0B24  1D03               	skipz
 12888  0B25  2B2D               	goto	l6608
 12889  0B26  0AB0               	incf	___aodiv@dividend+5,f
 12890  0B27  1D03               	skipz
 12891  0B28  2B2D               	goto	l6608
 12892  0B29  0AB1               	incf	___aodiv@dividend+6,f
 12893  0B2A  1D03               	skipz
 12894  0B2B  2B2D               	goto	l6608
 12895  0B2C  0AB2               	incf	___aodiv@dividend+7,f
 12896  0B2D                     l6608:
 12897  0B2D  3001               	movlw	1
 12898  0B2E  0020               	movlb	0	; select bank0
 12899  0B2F  00B3               	movwf	??___aodiv
 12900  0B30  0833               	movf	??___aodiv,w
 12901  0B31  06B5               	xorwf	___aodiv@sign,f
 12902  0B32                     l6610:
 12903  0B32  3036               	movlw	low ___aodiv@quotient
 12904  0B33  0086               	movwf	6
 12905  0B34  3000               	movlw	high ___aodiv@quotient
 12906  0B35  0087               	movwf	7
 12907  0B36  3008               	movlw	8
 12908  0B37  0020               	movlb	0	; select bank0
 12909  0B38  00B3               	movwf	??___aodiv
 12910  0B39  3000               	movlw	0
 12911  0B3A                     u4360:
 12912  0B3A  001E               	movwi fsr1++
 12913  0B3B  0BB3               	decfsz	??___aodiv,f
 12914  0B3C  2B3A               	goto	u4360
 12915  0B3D  0823               	movf	___aodiv@divisor,w
 12916  0B3E  0424               	iorwf	___aodiv@divisor+1,w
 12917  0B3F  0425               	iorwf	___aodiv@divisor+2,w
 12918  0B40  0426               	iorwf	___aodiv@divisor+3,w
 12919  0B41  0427               	iorwf	___aodiv@divisor+4,w
 12920  0B42  0428               	iorwf	___aodiv@divisor+5,w
 12921  0B43  0429               	iorwf	___aodiv@divisor+6,w
 12922  0B44  042A               	iorwf	___aodiv@divisor+7,w
 12923  0B45  1903               	skipnz
 12924  0B46  2B9D               	goto	l6632
 12925  0B47  01B4               	clrf	___aodiv@counter
 12926  0B48  0AB4               	incf	___aodiv@counter,f
 12927  0B49                     l6620:
 12928  0B49  1BAA               	btfsc	___aodiv@divisor+7,7
 12929  0B4A  2B58               	goto	l6622
 12930  0B4B  35A3               	lslf	___aodiv@divisor,f
 12931  0B4C  0DA4               	rlf	___aodiv@divisor+1,f
 12932  0B4D  0DA5               	rlf	___aodiv@divisor+2,f
 12933  0B4E  0DA6               	rlf	___aodiv@divisor+3,f
 12934  0B4F  0DA7               	rlf	___aodiv@divisor+4,f
 12935  0B50  0DA8               	rlf	___aodiv@divisor+5,f
 12936  0B51  0DA9               	rlf	___aodiv@divisor+6,f
 12937  0B52  0DAA               	rlf	___aodiv@divisor+7,f
 12938  0B53  3001               	movlw	1
 12939  0B54  00B3               	movwf	??___aodiv
 12940  0B55  0833               	movf	??___aodiv,w
 12941  0B56  07B4               	addwf	___aodiv@counter,f
 12942  0B57  2B49               	goto	l6620
 12943  0B58                     l6622:
 12944  0B58  35B6               	lslf	___aodiv@quotient,f
 12945  0B59  0DB7               	rlf	___aodiv@quotient+1,f
 12946  0B5A  0DB8               	rlf	___aodiv@quotient+2,f
 12947  0B5B  0DB9               	rlf	___aodiv@quotient+3,f
 12948  0B5C  0DBA               	rlf	___aodiv@quotient+4,f
 12949  0B5D  0DBB               	rlf	___aodiv@quotient+5,f
 12950  0B5E  0DBC               	rlf	___aodiv@quotient+6,f
 12951  0B5F  0DBD               	rlf	___aodiv@quotient+7,f
 12952  0B60  082A               	movf	___aodiv@divisor+7,w
 12953  0B61  0232               	subwf	___aodiv@dividend+7,w
 12954  0B62  1D03               	skipz
 12955  0B63  2B7E               	goto	u4395
 12956  0B64  0829               	movf	___aodiv@divisor+6,w
 12957  0B65  0231               	subwf	___aodiv@dividend+6,w
 12958  0B66  1D03               	skipz
 12959  0B67  2B7E               	goto	u4395
 12960  0B68  0828               	movf	___aodiv@divisor+5,w
 12961  0B69  0230               	subwf	___aodiv@dividend+5,w
 12962  0B6A  1D03               	skipz
 12963  0B6B  2B7E               	goto	u4395
 12964  0B6C  0827               	movf	___aodiv@divisor+4,w
 12965  0B6D  022F               	subwf	___aodiv@dividend+4,w
 12966  0B6E  1D03               	skipz
 12967  0B6F  2B7E               	goto	u4395
 12968  0B70  0826               	movf	___aodiv@divisor+3,w
 12969  0B71  022E               	subwf	___aodiv@dividend+3,w
 12970  0B72  1D03               	skipz
 12971  0B73  2B7E               	goto	u4395
 12972  0B74  0825               	movf	___aodiv@divisor+2,w
 12973  0B75  022D               	subwf	___aodiv@dividend+2,w
 12974  0B76  1D03               	skipz
 12975  0B77  2B7E               	goto	u4395
 12976  0B78  0824               	movf	___aodiv@divisor+1,w
 12977  0B79  022C               	subwf	___aodiv@dividend+1,w
 12978  0B7A  1D03               	skipz
 12979  0B7B  2B7E               	goto	u4395
 12980  0B7C  0823               	movf	___aodiv@divisor,w
 12981  0B7D  022B               	subwf	___aodiv@dividend,w
 12982  0B7E                     u4395:
 12983  0B7E  1C03               	skipc
 12984  0B7F  2B91               	goto	l6630
 12985  0B80  0823               	movf	___aodiv@divisor,w
 12986  0B81  02AB               	subwf	___aodiv@dividend,f
 12987  0B82  0824               	movf	___aodiv@divisor+1,w
 12988  0B83  3BAC               	subwfb	___aodiv@dividend+1,f
 12989  0B84  0825               	movf	___aodiv@divisor+2,w
 12990  0B85  3BAD               	subwfb	___aodiv@dividend+2,f
 12991  0B86  0826               	movf	___aodiv@divisor+3,w
 12992  0B87  3BAE               	subwfb	___aodiv@dividend+3,f
 12993  0B88  0827               	movf	___aodiv@divisor+4,w
 12994  0B89  3BAF               	subwfb	___aodiv@dividend+4,f
 12995  0B8A  0828               	movf	___aodiv@divisor+5,w
 12996  0B8B  3BB0               	subwfb	___aodiv@dividend+5,f
 12997  0B8C  0829               	movf	___aodiv@divisor+6,w
 12998  0B8D  3BB1               	subwfb	___aodiv@dividend+6,f
 12999  0B8E  082A               	movf	___aodiv@divisor+7,w
 13000  0B8F  3BB2               	subwfb	___aodiv@dividend+7,f
 13001  0B90  1436               	bsf	___aodiv@quotient,0
 13002  0B91                     l6630:
 13003  0B91  36AA               	lsrf	___aodiv@divisor+7,f
 13004  0B92  0CA9               	rrf	___aodiv@divisor+6,f
 13005  0B93  0CA8               	rrf	___aodiv@divisor+5,f
 13006  0B94  0CA7               	rrf	___aodiv@divisor+4,f
 13007  0B95  0CA6               	rrf	___aodiv@divisor+3,f
 13008  0B96  0CA5               	rrf	___aodiv@divisor+2,f
 13009  0B97  0CA4               	rrf	___aodiv@divisor+1,f
 13010  0B98  0CA3               	rrf	___aodiv@divisor,f
 13011  0B99  3001               	movlw	1
 13012  0B9A  02B4               	subwf	___aodiv@counter,f
 13013  0B9B  1D03               	btfss	3,2
 13014  0B9C  2B58               	goto	l6622
 13015  0B9D                     l6632:
 13016  0B9D  0835               	movf	___aodiv@sign,w
 13017  0B9E  1903               	btfsc	3,2
 13018  0B9F  2BBE               	goto	l1551
 13019  0BA0  09B6               	comf	___aodiv@quotient,f
 13020  0BA1  09B7               	comf	___aodiv@quotient+1,f
 13021  0BA2  09B8               	comf	___aodiv@quotient+2,f
 13022  0BA3  09B9               	comf	___aodiv@quotient+3,f
 13023  0BA4  09BA               	comf	___aodiv@quotient+4,f
 13024  0BA5  09BB               	comf	___aodiv@quotient+5,f
 13025  0BA6  09BC               	comf	___aodiv@quotient+6,f
 13026  0BA7  09BD               	comf	___aodiv@quotient+7,f
 13027  0BA8  0AB6               	incf	___aodiv@quotient,f
 13028  0BA9  1D03               	skipz
 13029  0BAA  2BBE               	goto	l1551
 13030  0BAB  0AB7               	incf	___aodiv@quotient+1,f
 13031  0BAC  1D03               	skipz
 13032  0BAD  2BBE               	goto	l1551
 13033  0BAE  0AB8               	incf	___aodiv@quotient+2,f
 13034  0BAF  1D03               	skipz
 13035  0BB0  2BBE               	goto	l1551
 13036  0BB1  0AB9               	incf	___aodiv@quotient+3,f
 13037  0BB2  1D03               	skipz
 13038  0BB3  2BBE               	goto	l1551
 13039  0BB4  0ABA               	incf	___aodiv@quotient+4,f
 13040  0BB5  1D03               	skipz
 13041  0BB6  2BBE               	goto	l1551
 13042  0BB7  0ABB               	incf	___aodiv@quotient+5,f
 13043  0BB8  1D03               	skipz
 13044  0BB9  2BBE               	goto	l1551
 13045  0BBA  0ABC               	incf	___aodiv@quotient+6,f
 13046  0BBB  1D03               	skipz
 13047  0BBC  2BBE               	goto	l1551
 13048  0BBD  0ABD               	incf	___aodiv@quotient+7,f
 13049  0BBE                     l1551:
 13050  0BBE  0020               	movlb	0	; select bank0
 13051  0BBF  0836               	movf	___aodiv@quotient,w
 13052  0BC0  00A3               	movwf	?___aodiv
 13053  0BC1  0837               	movf	___aodiv@quotient+1,w
 13054  0BC2  00A4               	movwf	?___aodiv+1
 13055  0BC3  0838               	movf	___aodiv@quotient+2,w
 13056  0BC4  00A5               	movwf	?___aodiv+2
 13057  0BC5  0839               	movf	___aodiv@quotient+3,w
 13058  0BC6  00A6               	movwf	?___aodiv+3
 13059  0BC7  083A               	movf	___aodiv@quotient+4,w
 13060  0BC8  00A7               	movwf	?___aodiv+4
 13061  0BC9  083B               	movf	___aodiv@quotient+5,w
 13062  0BCA  00A8               	movwf	?___aodiv+5
 13063  0BCB  083C               	movf	___aodiv@quotient+6,w
 13064  0BCC  00A9               	movwf	?___aodiv+6
 13065  0BCD  083D               	movf	___aodiv@quotient+7,w
 13066  0BCE  00AA               	movwf	?___aodiv+7
 13067  0BCF  0008               	return
 13068  0BD0                     __end_of___aodiv:
 13069                           
 13070                           	psect	text27
 13071  1606                     __ptext27:	
 13072 ;; *************** function _atoi *****************
 13073 ;; Defined at:
 13074 ;;		line 4 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/atoi.c"
 13075 ;; Parameters:    Size  Location     Type
 13076 ;;  s               2   15[BANK0 ] PTR const unsigned char 
 13077 ;;		 -> STR_20(33), STR_19(19), STR_18(14), STR_17(10), 
 13078 ;;		 -> STR_14(5), STR_13(5), STR_7(20), STR_5(4), 
 13079 ;;		 -> STR_2(4), 
 13080 ;; Auto vars:     Size  Location     Type
 13081 ;;  n               2   28[BANK0 ] int 
 13082 ;;  neg             2   21[BANK0 ] int 
 13083 ;; Return value:  Size  Location     Type
 13084 ;;                  2   15[BANK0 ] int 
 13085 ;; Registers used:
 13086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13087 ;; Tracked objects:
 13088 ;;		On entry : 1F/0
 13089 ;;		On exit  : 1F/0
 13090 ;;		Unchanged: 0/0
 13091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13093 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13094 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13095 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13096 ;;Total ram usage:       15 bytes
 13097 ;; Hardware stack levels used:    1
 13098 ;; Hardware stack levels required when called:    8
 13099 ;; This function calls:
 13100 ;;		___wmul
 13101 ;;		_isdigit
 13102 ;;		_isspace
 13103 ;; This function is called by:
 13104 ;;		_vfpfcnvrt
 13105 ;; This function uses a non-reentrant model
 13106 ;;
 13107                           
 13108                           
 13109                           ;psect for function _atoi
 13110  1606                     _atoi:
 13111                           
 13112                           ;incstack = 0
 13113                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13114  1606  01BC               	clrf	atoi@n
 13115  1607  01BD               	clrf	atoi@n+1
 13116  1608  01B5               	clrf	atoi@neg
 13117  1609  01B6               	clrf	atoi@neg+1
 13118  160A                     l6964:
 13119  160A  01BB               	clrf	_atoi$2237
 13120  160B  0ABB               	incf	_atoi$2237,f
 13121  160C  082F               	movf	atoi@s,w
 13122  160D  0084               	movwf	4
 13123  160E  0830               	movf	atoi@s+1,w
 13124  160F  0085               	movwf	5
 13125  1610  0012               	moviw fsr0++
 13126  1611  3A20               	xorlw	32
 13127  1612  1903               	btfsc	3,2
 13128  1613  2E26               	goto	l6972
 13129  1614  082F               	movf	atoi@s,w
 13130  1615  0084               	movwf	4
 13131  1616  0830               	movf	atoi@s+1,w
 13132  1617  0085               	movwf	5
 13133  1618  0800               	movf	0,w	;code access
 13134  1619  3EF7               	addlw	247
 13135  161A  00B1               	movwf	??_atoi
 13136  161B  30FF               	movlw	255
 13137  161C  1803               	skipnc
 13138  161D  3000               	movlw	0
 13139  161E  00B2               	movwf	??_atoi+1
 13140  161F  3000               	movlw	0
 13141  1620  0232               	subwf	??_atoi+1,w
 13142  1621  3005               	movlw	5
 13143  1622  1903               	skipnz
 13144  1623  0231               	subwf	??_atoi,w
 13145  1624  1803               	btfsc	3,0
 13146  1625  01BB               	clrf	_atoi$2237
 13147  1626                     l6972:
 13148  1626  083B               	movf	_atoi$2237,w
 13149  1627  00B1               	movwf	??_atoi
 13150  1628  01B2               	clrf	??_atoi+1
 13151  1629  0831               	movf	??_atoi,w
 13152  162A  00B7               	movwf	_atoi$2236
 13153  162B  0832               	movf	??_atoi+1,w
 13154  162C  00B8               	movwf	_atoi$2236+1
 13155  162D  0837               	movf	_atoi$2236,w
 13156  162E  0438               	iorwf	_atoi$2236+1,w
 13157  162F  1903               	btfsc	3,2
 13158  1630  2E3B               	goto	l6980
 13159  1631  3001               	movlw	1
 13160  1632  07AF               	addwf	atoi@s,f
 13161  1633  3000               	movlw	0
 13162  1634  3DB0               	addwfc	atoi@s+1,f
 13163  1635  2E0A               	goto	l6964
 13164  1636                     l6978:
 13165  1636  3001               	movlw	1
 13166  1637  00B5               	movwf	atoi@neg
 13167  1638  3000               	movlw	0
 13168  1639  00B6               	movwf	atoi@neg+1
 13169  163A  2E6D               	goto	l2100
 13170  163B                     l6980:
 13171  163B  082F               	movf	atoi@s,w
 13172  163C  0084               	movwf	4
 13173  163D  0830               	movf	atoi@s+1,w
 13174  163E  0085               	movwf	5
 13175  163F  0800               	movf	0,w	;code access
 13176  1640  00B1               	movwf	??_atoi
 13177  1641  01B2               	clrf	??_atoi+1
 13178                           
 13179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13180                           ; Switch size 1, requested type "simple"
 13181                           ; Number of cases is 1, Range of values is 0 to 0
 13182                           ; switch strategies available:
 13183                           ; Name         Instructions Cycles
 13184                           ; simple_byte            4     3 (average)
 13185                           ; direct_byte            8     6 (fixed)
 13186                           ; jumptable            260     6 (fixed)
 13187                           ;	Chosen strategy is simple_byte
 13188  1642  0832               	movf	??_atoi+1,w
 13189  1643  3A00               	xorlw	0	; case 0
 13190  1644  1903               	skipnz
 13191  1645  2E47               	goto	l8172
 13192  1646  2E71               	goto	l6986
 13193  1647                     l8172:
 13194                           
 13195                           ; Switch size 1, requested type "simple"
 13196                           ; Number of cases is 2, Range of values is 43 to 45
 13197                           ; switch strategies available:
 13198                           ; Name         Instructions Cycles
 13199                           ; simple_byte            7     4 (average)
 13200                           ; direct_byte           15     9 (fixed)
 13201                           ; jumptable            263     9 (fixed)
 13202                           ;	Chosen strategy is simple_byte
 13203  1647  0831               	movf	??_atoi,w
 13204  1648  3A2B               	xorlw	43	; case 43
 13205  1649  1903               	skipnz
 13206  164A  2E6D               	goto	l2100
 13207  164B  3A06               	xorlw	6	; case 45
 13208  164C  1903               	skipnz
 13209  164D  2E36               	goto	l6978
 13210  164E  2E71               	goto	l6986
 13211  164F                     l6982:
 13212  164F  082F               	movf	atoi@s,w
 13213  1650  0084               	movwf	4
 13214  1651  0830               	movf	atoi@s+1,w
 13215  1652  0085               	movwf	5
 13216  1653  0800               	movf	0,w	;code access
 13217  1654  00B1               	movwf	??_atoi
 13218  1655  083D               	movf	atoi@n+1,w
 13219  1656  00AA               	movwf	___wmul@multiplier+1
 13220  1657  083C               	movf	atoi@n,w
 13221  1658  00A9               	movwf	___wmul@multiplier
 13222  1659  300A               	movlw	10
 13223  165A  00AB               	movwf	___wmul@multiplicand
 13224  165B  3000               	movlw	0
 13225  165C  00AC               	movwf	___wmul@multiplicand+1
 13226  165D  319D  2588  3196   	fcall	___wmul
 13227  1660  082A               	movf	?___wmul+1,w
 13228  1661  00B3               	movwf	??_atoi+2
 13229  1662  0831               	movf	??_atoi,w
 13230  1663  0229               	subwf	?___wmul,w
 13231  1664  00B2               	movwf	??_atoi+1
 13232  1665  1C03               	skipc
 13233  1666  03B3               	decf	??_atoi+2,f
 13234  1667  0832               	movf	??_atoi+1,w
 13235  1668  3E30               	addlw	48
 13236  1669  00BC               	movwf	atoi@n
 13237  166A  3000               	movlw	0
 13238  166B  3D33               	addwfc	??_atoi+2,w
 13239  166C  00BD               	movwf	atoi@n+1
 13240  166D                     l2100:
 13241  166D  3001               	movlw	1
 13242  166E  07AF               	addwf	atoi@s,f
 13243  166F  3000               	movlw	0
 13244  1670  3DB0               	addwfc	atoi@s+1,f
 13245  1671                     l6986:
 13246  1671  082F               	movf	atoi@s,w
 13247  1672  0084               	movwf	4
 13248  1673  0830               	movf	atoi@s+1,w
 13249  1674  0085               	movwf	5
 13250  1675  0800               	movf	0,w	;code access
 13251  1676  3ED0               	addlw	208
 13252  1677  00B1               	movwf	??_atoi
 13253  1678  30FF               	movlw	255
 13254  1679  1803               	skipnc
 13255  167A  3000               	movlw	0
 13256  167B  00B2               	movwf	??_atoi+1
 13257  167C  3000               	movlw	0
 13258  167D  0232               	subwf	??_atoi+1,w
 13259  167E  300A               	movlw	10
 13260  167F  1903               	skipnz
 13261  1680  0231               	subwf	??_atoi,w
 13262  1681  1803               	btfsc	3,0
 13263  1682  2E85               	goto	u5160
 13264  1683  3001               	movlw	1
 13265  1684  2E86               	goto	u5170
 13266  1685                     u5160:
 13267  1685  3000               	movlw	0
 13268  1686                     u5170:
 13269  1686  00B3               	movwf	??_atoi+2
 13270  1687  01B4               	clrf	??_atoi+3
 13271  1688  0833               	movf	??_atoi+2,w
 13272  1689  00B9               	movwf	_atoi$2238
 13273  168A  0834               	movf	??_atoi+3,w
 13274  168B  00BA               	movwf	_atoi$2238+1
 13275  168C  0839               	movf	_atoi$2238,w
 13276  168D  043A               	iorwf	_atoi$2238+1,w
 13277  168E  1D03               	btfss	3,2
 13278  168F  2E4F               	goto	l6982
 13279  1690  0835               	movf	atoi@neg,w
 13280  1691  0436               	iorwf	atoi@neg+1,w
 13281  1692  1D03               	btfss	3,2
 13282  1693  2EA0               	goto	l6996
 13283  1694  093C               	comf	atoi@n,w
 13284  1695  00B1               	movwf	??_atoi
 13285  1696  093D               	comf	atoi@n+1,w
 13286  1697  00B2               	movwf	??_atoi+1
 13287  1698  0AB1               	incf	??_atoi,f
 13288  1699  1903               	skipnz
 13289  169A  0AB2               	incf	??_atoi+1,f
 13290  169B  0831               	movf	??_atoi,w
 13291  169C  00AF               	movwf	?_atoi
 13292  169D  0832               	movf	??_atoi+1,w
 13293  169E  00B0               	movwf	?_atoi+1
 13294  169F  0008               	return
 13295  16A0                     l6996:
 13296  16A0  083D               	movf	atoi@n+1,w
 13297  16A1  00B0               	movwf	?_atoi+1
 13298  16A2  083C               	movf	atoi@n,w
 13299  16A3  00AF               	movwf	?_atoi
 13300  16A4  0008               	return
 13301  16A5                     __end_of_atoi:
 13302                           
 13303                           	psect	text28
 13304  1DC0                     __ptext28:	
 13305 ;; *************** function _isspace *****************
 13306 ;; Defined at:
 13307 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/isspace.c"
 13308 ;; Parameters:    Size  Location     Type
 13309 ;;  c               2    3[BANK0 ] int 
 13310 ;; Auto vars:     Size  Location     Type
 13311 ;;		None
 13312 ;; Return value:  Size  Location     Type
 13313 ;;                  2    3[BANK0 ] int 
 13314 ;; Registers used:
 13315 ;;		wreg, status,2, status,0
 13316 ;; Tracked objects:
 13317 ;;		On entry : 0/0
 13318 ;;		On exit  : 1F/0
 13319 ;;		Unchanged: 0/0
 13320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13321 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13322 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13323 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13324 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13325 ;;Total ram usage:        5 bytes
 13326 ;; Hardware stack levels used:    1
 13327 ;; Hardware stack levels required when called:    7
 13328 ;; This function calls:
 13329 ;;		Nothing
 13330 ;; This function is called by:
 13331 ;;		_atoi
 13332 ;; This function uses a non-reentrant model
 13333 ;;
 13334                           
 13335                           
 13336                           ;psect for function _isspace
 13337  1DC0                     _isspace:
 13338                           
 13339                           ;incstack = 0
 13340                           ; Regs used in _isspace: [wreg+status,2+status,0]
 13341  1DC0  0020               	movlb	0	; select bank0
 13342  1DC1  01A7               	clrf	_isspace$2263
 13343  1DC2  0AA7               	incf	_isspace$2263,f
 13344  1DC3  3020               	movlw	32
 13345  1DC4  0623               	xorwf	isspace@c,w
 13346  1DC5  0424               	iorwf	isspace@c+1,w
 13347  1DC6  1903               	btfsc	3,2
 13348  1DC7  2DD5               	goto	l6718
 13349  1DC8  0823               	movf	isspace@c,w
 13350  1DC9  3EF7               	addlw	247
 13351  1DCA  00A5               	movwf	??_isspace
 13352  1DCB  30FF               	movlw	255
 13353  1DCC  3D24               	addwfc	isspace@c+1,w
 13354  1DCD  00A6               	movwf	??_isspace+1
 13355  1DCE  3000               	movlw	0
 13356  1DCF  0226               	subwf	??_isspace+1,w
 13357  1DD0  3005               	movlw	5
 13358  1DD1  1903               	skipnz
 13359  1DD2  0225               	subwf	??_isspace,w
 13360  1DD3  1803               	btfsc	3,0
 13361  1DD4  01A7               	clrf	_isspace$2263
 13362  1DD5                     l6718:
 13363  1DD5  0827               	movf	_isspace$2263,w
 13364  1DD6  00A5               	movwf	??_isspace
 13365  1DD7  01A6               	clrf	??_isspace+1
 13366  1DD8  0825               	movf	??_isspace,w
 13367  1DD9  00A3               	movwf	?_isspace
 13368  1DDA  0826               	movf	??_isspace+1,w
 13369  1DDB  00A4               	movwf	?_isspace+1
 13370  1DDC  0008               	return
 13371  1DDD                     __end_of_isspace:
 13372                           
 13373                           	psect	text29
 13374  1CBF                     __ptext29:	
 13375 ;; *************** function _isdigit *****************
 13376 ;; Defined at:
 13377 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/isdigit.c"
 13378 ;; Parameters:    Size  Location     Type
 13379 ;;  c               2    3[BANK0 ] int 
 13380 ;; Auto vars:     Size  Location     Type
 13381 ;;		None
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  2    3[BANK0 ] int 
 13384 ;; Registers used:
 13385 ;;		wreg, status,2, status,0
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 1F/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13393 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13394 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13395 ;;Total ram usage:        6 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:    7
 13398 ;; This function calls:
 13399 ;;		Nothing
 13400 ;; This function is called by:
 13401 ;;		_vfpfcnvrt
 13402 ;;		_atoi
 13403 ;; This function uses a non-reentrant model
 13404 ;;
 13405                           
 13406                           
 13407                           ;psect for function _isdigit
 13408  1CBF                     _isdigit:
 13409                           
 13410                           ;incstack = 0
 13411                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13412  1CBF  0020               	movlb	0	; select bank0
 13413  1CC0  0823               	movf	isdigit@c,w
 13414  1CC1  3ED0               	addlw	208
 13415  1CC2  00A5               	movwf	??_isdigit
 13416  1CC3  30FF               	movlw	255
 13417  1CC4  3D24               	addwfc	isdigit@c+1,w
 13418  1CC5  00A6               	movwf	??_isdigit+1
 13419  1CC6  3000               	movlw	0
 13420  1CC7  0226               	subwf	??_isdigit+1,w
 13421  1CC8  300A               	movlw	10
 13422  1CC9  1903               	skipnz
 13423  1CCA  0225               	subwf	??_isdigit,w
 13424  1CCB  1803               	btfsc	3,0
 13425  1CCC  2CCF               	goto	u4640
 13426  1CCD  3001               	movlw	1
 13427  1CCE  2CD0               	goto	u4650
 13428  1CCF                     u4640:
 13429  1CCF  3000               	movlw	0
 13430  1CD0                     u4650:
 13431  1CD0  00A7               	movwf	??_isdigit+2
 13432  1CD1  01A8               	clrf	??_isdigit+3
 13433  1CD2  0827               	movf	??_isdigit+2,w
 13434  1CD3  00A3               	movwf	?_isdigit
 13435  1CD4  0828               	movf	??_isdigit+3,w
 13436  1CD5  00A4               	movwf	?_isdigit+1
 13437  1CD6  0008               	return
 13438  1CD7                     __end_of_isdigit:
 13439                           
 13440                           	psect	text30
 13441  1D88                     __ptext30:	
 13442 ;; *************** function ___wmul *****************
 13443 ;; Defined at:
 13444 ;;		line 15 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;  multiplier      2    9[BANK0 ] unsigned int 
 13447 ;;  multiplicand    2   11[BANK0 ] unsigned int 
 13448 ;; Auto vars:     Size  Location     Type
 13449 ;;  product         2   13[BANK0 ] unsigned int 
 13450 ;; Return value:  Size  Location     Type
 13451 ;;                  2    9[BANK0 ] unsigned int 
 13452 ;; Registers used:
 13453 ;;		wreg, status,2, status,0
 13454 ;; Tracked objects:
 13455 ;;		On entry : 1F/4800000
 13456 ;;		On exit  : 1F/0
 13457 ;;		Unchanged: 0/0
 13458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13459 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13460 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13462 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13463 ;;Total ram usage:        6 bytes
 13464 ;; Hardware stack levels used:    1
 13465 ;; Hardware stack levels required when called:    7
 13466 ;; This function calls:
 13467 ;;		Nothing
 13468 ;; This function is called by:
 13469 ;;		_main
 13470 ;;		_lcd_disp_param
 13471 ;;		_atoi
 13472 ;; This function uses a non-reentrant model
 13473 ;;
 13474                           
 13475                           
 13476                           ;psect for function ___wmul
 13477  1D88                     ___wmul:
 13478                           
 13479                           ;incstack = 0
 13480                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13481  1D88  01AD               	clrf	___wmul@product
 13482  1D89  01AE               	clrf	___wmul@product+1
 13483  1D8A                     l6586:
 13484  1D8A  1C29               	btfss	___wmul@multiplier,0
 13485  1D8B  2D90               	goto	l1451
 13486  1D8C  082B               	movf	___wmul@multiplicand,w
 13487  1D8D  07AD               	addwf	___wmul@product,f
 13488  1D8E  082C               	movf	___wmul@multiplicand+1,w
 13489  1D8F  3DAE               	addwfc	___wmul@product+1,f
 13490  1D90                     l1451:
 13491  1D90  3001               	movlw	1
 13492  1D91                     u4295:
 13493  1D91  35AB               	lslf	___wmul@multiplicand,f
 13494  1D92  0DAC               	rlf	___wmul@multiplicand+1,f
 13495  1D93  0B89               	decfsz	9,f
 13496  1D94  2D91               	goto	u4295
 13497  1D95  3001               	movlw	1
 13498  1D96                     u4305:
 13499  1D96  36AA               	lsrf	___wmul@multiplier+1,f
 13500  1D97  0CA9               	rrf	___wmul@multiplier,f
 13501  1D98  0B89               	decfsz	9,f
 13502  1D99  2D96               	goto	u4305
 13503  1D9A  0829               	movf	___wmul@multiplier,w
 13504  1D9B  042A               	iorwf	___wmul@multiplier+1,w
 13505  1D9C  1D03               	btfss	3,2
 13506  1D9D  2D8A               	goto	l6586
 13507  1D9E  082E               	movf	___wmul@product+1,w
 13508  1D9F  00AA               	movwf	?___wmul+1
 13509  1DA0  082D               	movf	___wmul@product,w
 13510  1DA1  00A9               	movwf	?___wmul
 13511  1DA2  0008               	return
 13512  1DA3                     __end_of___wmul:
 13513                           
 13514                           	psect	text31
 13515  108E                     __ptext31:	
 13516 ;; *************** function _i2c_lcd_set_cursor_pos *****************
 13517 ;; Defined at:
 13518 ;;		line 190 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 13519 ;; Parameters:    Size  Location     Type
 13520 ;;  col             1    wreg     unsigned char 
 13521 ;;  line            1   23[BANK0 ] unsigned char 
 13522 ;; Auto vars:     Size  Location     Type
 13523 ;;  col             1   27[BANK0 ] unsigned char 
 13524 ;;  pos             1   26[BANK0 ] unsigned char 
 13525 ;; Return value:  Size  Location     Type
 13526 ;;                  1    wreg      void 
 13527 ;; Registers used:
 13528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13529 ;; Tracked objects:
 13530 ;;		On entry : 1F/4B00000
 13531 ;;		On exit  : 0/0
 13532 ;;		Unchanged: 0/0
 13533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13534 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13535 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13536 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13537 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13538 ;;Total ram usage:        5 bytes
 13539 ;; Hardware stack levels used:    1
 13540 ;; Hardware stack levels required when called:   12
 13541 ;; This function calls:
 13542 ;;		_i2c_lcd_send_command
 13543 ;; This function is called by:
 13544 ;;		_lcd_disp_param
 13545 ;; This function uses a non-reentrant model
 13546 ;;
 13547                           
 13548                           
 13549                           ;psect for function _i2c_lcd_set_cursor_pos
 13550  108E                     _i2c_lcd_set_cursor_pos:
 13551                           
 13552                           ;incstack = 0
 13553                           ; Regs used in _i2c_lcd_set_cursor_pos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13554                           ;i2c_lcd_set_cursor_pos@col stored from wreg
 13555  108E  00BB               	movwf	i2c_lcd_set_cursor_pos@col
 13556                           
 13557                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 195:    unsigned char pos;;lcd_driver_files/i2
      +                          c-lcdlib-ceg003400.c: 197:     switch( line )
 13558  108F  289E               	goto	l7408
 13559  1090                     l7400:
 13560  1090  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 13561  1091  289A               	goto	L7
 13562  1092                     l7402:	
 13563                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 200:                     break;
 13564                           
 13565  1092  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 13566  1093  3E40               	addlw	64
 13567  1094  289A               	goto	L7
 13568  1095                     l7404:	
 13569                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 202:                     break;
 13570                           
 13571  1095  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 13572  1096  3E14               	addlw	20
 13573  1097  289A               	goto	L7
 13574  1098                     l7406:	
 13575                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 204:                     break;
 13576                           
 13577  1098  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 13578  1099  3E54               	addlw	84
 13579  109A                     L7:
 13580  109A  00B8               	movwf	??_i2c_lcd_set_cursor_pos
 13581  109B  0838               	movf	??_i2c_lcd_set_cursor_pos,w
 13582  109C  00BA               	movwf	i2c_lcd_set_cursor_pos@pos
 13583                           
 13584                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 206:     }
 13585  109D  28B4               	goto	l7410
 13586  109E                     l7408:
 13587  109E  0837               	movf	i2c_lcd_set_cursor_pos@line,w
 13588  109F  00B8               	movwf	??_i2c_lcd_set_cursor_pos
 13589  10A0  01B9               	clrf	??_i2c_lcd_set_cursor_pos+1
 13590                           
 13591                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13592                           ; Switch size 1, requested type "simple"
 13593                           ; Number of cases is 1, Range of values is 0 to 0
 13594                           ; switch strategies available:
 13595                           ; Name         Instructions Cycles
 13596                           ; simple_byte            4     3 (average)
 13597                           ; direct_byte            8     6 (fixed)
 13598                           ; jumptable            260     6 (fixed)
 13599                           ;	Chosen strategy is simple_byte
 13600  10A1  0839               	movf	??_i2c_lcd_set_cursor_pos+1,w
 13601  10A2  3A00               	xorlw	0	; case 0
 13602  10A3  1903               	skipnz
 13603  10A4  28A6               	goto	l8174
 13604  10A5  28B4               	goto	l7410
 13605  10A6                     l8174:
 13606                           
 13607                           ; Switch size 1, requested type "simple"
 13608                           ; Number of cases is 4, Range of values is 0 to 3
 13609                           ; switch strategies available:
 13610                           ; Name         Instructions Cycles
 13611                           ; simple_byte           13     7 (average)
 13612                           ; direct_byte           14     6 (fixed)
 13613                           ; jumptable            260     6 (fixed)
 13614                           ;	Chosen strategy is simple_byte
 13615  10A6  0838               	movf	??_i2c_lcd_set_cursor_pos,w
 13616  10A7  3A00               	xorlw	0	; case 0
 13617  10A8  1903               	skipnz
 13618  10A9  2890               	goto	l7400
 13619  10AA  3A01               	xorlw	1	; case 1
 13620  10AB  1903               	skipnz
 13621  10AC  2892               	goto	l7402
 13622  10AD  3A03               	xorlw	3	; case 2
 13623  10AE  1903               	skipnz
 13624  10AF  2895               	goto	l7404
 13625  10B0  3A01               	xorlw	1	; case 3
 13626  10B1  1903               	skipnz
 13627  10B2  2898               	goto	l7406
 13628  10B3  28B4               	goto	l7410
 13629  10B4                     l7410:
 13630                           
 13631                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 207:     pos += 0x80;
 13632  10B4  3080               	movlw	128
 13633  10B5  00B8               	movwf	??_i2c_lcd_set_cursor_pos
 13634  10B6  0838               	movf	??_i2c_lcd_set_cursor_pos,w
 13635  10B7  07BA               	addwf	i2c_lcd_set_cursor_pos@pos,f
 13636                           
 13637                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 208:   i2c_lcd_send_command(pos);
 13638  10B8  083A               	movf	i2c_lcd_set_cursor_pos@pos,w
 13639  10B9  3193  23ED  3190   	fcall	_i2c_lcd_send_command
 13640                           
 13641                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 209:   _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
 13642  10BC  3003               	movlw	3
 13643  10BD                     u5797:
 13644  10BD  0B89               	decfsz	9,f
 13645  10BE  28BD               	goto	u5797
 13646  10BF  0000               	nop
 13647  10C0  0008               	return
 13648  10C1                     __end_of_i2c_lcd_set_cursor_pos:
 13649                           
 13650                           	psect	text32
 13651  1C7D                     __ptext32:	
 13652 ;; *************** function _i2c_lcd_puts *****************
 13653 ;; Defined at:
 13654 ;;		line 156 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;  s               2   23[BANK0 ] PTR unsigned char 
 13657 ;;		 -> lcdbuff(0), lcdbuff(41), 
 13658 ;; Auto vars:     Size  Location     Type
 13659 ;;		None
 13660 ;; Return value:  Size  Location     Type
 13661 ;;                  1    wreg      void 
 13662 ;; Registers used:
 13663 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13664 ;; Tracked objects:
 13665 ;;		On entry : 1F/0
 13666 ;;		On exit  : 1F/0
 13667 ;;		Unchanged: 0/0
 13668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13669 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13672 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13673 ;;Total ram usage:        2 bytes
 13674 ;; Hardware stack levels used:    1
 13675 ;; Hardware stack levels required when called:   12
 13676 ;; This function calls:
 13677 ;;		_i2c_lcd_send_data
 13678 ;; This function is called by:
 13679 ;;		_main
 13680 ;;		_lcd_disp_param
 13681 ;; This function uses a non-reentrant model
 13682 ;;
 13683                           
 13684                           
 13685                           ;psect for function _i2c_lcd_puts
 13686  1C7D                     _i2c_lcd_puts:
 13687  1C7D                     l7396:	
 13688                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 157:     while(*s)
 13689                           
 13690                           ;incstack = 0
 13691                           ; Regs used in _i2c_lcd_puts: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13692                           
 13693                           
 13694                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 157:     while(*s)
 13695  1C7D  0837               	movf	i2c_lcd_puts@s,w
 13696  1C7E  0086               	movwf	6
 13697  1C7F  0838               	movf	i2c_lcd_puts@s+1,w
 13698  1C80  0087               	movwf	7
 13699  1C81  0801               	movf	1,w
 13700  1C82  1903               	btfsc	3,2
 13701  1C83  0008               	return
 13702                           
 13703                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 158:         i2c_lcd_send_data(*s++);
 13704  1C84  0837               	movf	i2c_lcd_puts@s,w
 13705  1C85  0086               	movwf	6
 13706  1C86  0838               	movf	i2c_lcd_puts@s+1,w
 13707  1C87  0087               	movwf	7
 13708  1C88  0801               	movf	1,w
 13709  1C89  3193  2398  319C   	fcall	_i2c_lcd_send_data
 13710  1C8C  3001               	movlw	1
 13711  1C8D  0020               	movlb	0	; select bank0
 13712  1C8E  07B7               	addwf	i2c_lcd_puts@s,f
 13713  1C8F  3000               	movlw	0
 13714  1C90  3DB8               	addwfc	i2c_lcd_puts@s+1,f
 13715  1C91  2C7D               	goto	l7396
 13716  1C92                     __end_of_i2c_lcd_puts:
 13717                           
 13718                           	psect	text33
 13719  1398                     __ptext33:	
 13720 ;; *************** function _i2c_lcd_send_data *****************
 13721 ;; Defined at:
 13722 ;;		line 92 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 13723 ;; Parameters:    Size  Location     Type
 13724 ;;  data            1    wreg     unsigned char 
 13725 ;; Auto vars:     Size  Location     Type
 13726 ;;  data            1   18[BANK0 ] unsigned char 
 13727 ;;  lowerdata       1   22[BANK0 ] unsigned char 
 13728 ;;  upperdata       1   21[BANK0 ] unsigned char 
 13729 ;;  lowerdata_en    1   20[BANK0 ] unsigned char 
 13730 ;;  upperdata_en    1   19[BANK0 ] unsigned char 
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1    wreg      void 
 13733 ;; Registers used:
 13734 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13735 ;; Tracked objects:
 13736 ;;		On entry : 1F/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13741 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13742 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13743 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13744 ;;Total ram usage:        7 bytes
 13745 ;; Hardware stack levels used:    1
 13746 ;; Hardware stack levels required when called:   11
 13747 ;; This function calls:
 13748 ;;		_I2C1_WriteNBytes
 13749 ;; This function is called by:
 13750 ;;		_i2c_lcd_puts
 13751 ;; This function uses a non-reentrant model
 13752 ;;
 13753                           
 13754                           
 13755                           ;psect for function _i2c_lcd_send_data
 13756  1398                     _i2c_lcd_send_data:
 13757                           
 13758                           ;incstack = 0
 13759                           ; Regs used in _i2c_lcd_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13760                           ;i2c_lcd_send_data@data stored from wreg
 13761  1398  00B2               	movwf	i2c_lcd_send_data@data
 13762                           
 13763                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 92: void i2c_lcd_send_data(unsigned char data)
      +                          ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 93: {;lcd_driver_files/i2c-lcdlib-ceg003400.c:
      +                           94:    unsigned char upperdata, upperdata_en, lowerdata, lowerdata_en;;lcd_driver_files
      +                          /i2c-lcdlib-ceg003400.c: 97:     upperdata = (data & 0xf0) | 0b00001000 | 0b00000001;
 13764  1399  0832               	movf	i2c_lcd_send_data@data,w
 13765  139A  39F0               	andlw	240
 13766  139B  3809               	iorlw	9
 13767  139C  00B0               	movwf	??_i2c_lcd_send_data
 13768  139D  0830               	movf	??_i2c_lcd_send_data,w
 13769  139E  00B5               	movwf	i2c_lcd_send_data@upperdata
 13770                           
 13771                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 98:     upperdata_en = upperdata | 0b00000100;
 13772  139F  0835               	movf	i2c_lcd_send_data@upperdata,w
 13773  13A0  3804               	iorlw	4
 13774  13A1  00B0               	movwf	??_i2c_lcd_send_data
 13775  13A2  0830               	movf	??_i2c_lcd_send_data,w
 13776  13A3  00B3               	movwf	i2c_lcd_send_data@upperdata_en
 13777                           
 13778                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 99:     lowerdata = ((data << 4) & 0xf0) | 0b0
      +                          0001000 | 0b00000001 ;
 13779  13A4  0832               	movf	i2c_lcd_send_data@data,w
 13780  13A5  00B0               	movwf	??_i2c_lcd_send_data
 13781  13A6  3003               	movlw	3
 13782  13A7                     u5385:
 13783  13A7  35B0               	lslf	??_i2c_lcd_send_data,f
 13784  13A8  3EFF               	addlw	-1
 13785  13A9  1D03               	skipz
 13786  13AA  2BA7               	goto	u5385
 13787  13AB  3530               	lslf	??_i2c_lcd_send_data,w
 13788  13AC  39F0               	andlw	240
 13789  13AD  3809               	iorlw	9
 13790  13AE  00B1               	movwf	??_i2c_lcd_send_data+1
 13791  13AF  0831               	movf	??_i2c_lcd_send_data+1,w
 13792  13B0  00B6               	movwf	i2c_lcd_send_data@lowerdata
 13793                           
 13794                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 100:     lowerdata_en = lowerdata | 0b00000100
      +                          ;
 13795  13B1  0836               	movf	i2c_lcd_send_data@lowerdata,w
 13796  13B2  3804               	iorlw	4
 13797  13B3  00B0               	movwf	??_i2c_lcd_send_data
 13798  13B4  0830               	movf	??_i2c_lcd_send_data,w
 13799  13B5  00B4               	movwf	i2c_lcd_send_data@lowerdata_en
 13800                           
 13801                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 101:       I2C1_WriteNBytes(0x25, &upperdata_e
      +                          n,1);
 13802  13B6  3033               	movlw	(low (i2c_lcd_send_data@upperdata_en| 0))& (0+255)
 13803  13B7  00B0               	movwf	??_i2c_lcd_send_data
 13804  13B8  0830               	movf	??_i2c_lcd_send_data,w
 13805  13B9  00AC               	movwf	I2C1_WriteNBytes@data
 13806  13BA  3001               	movlw	1
 13807  13BB  00AD               	movwf	I2C1_WriteNBytes@len
 13808  13BC  3000               	movlw	0
 13809  13BD  00AE               	movwf	I2C1_WriteNBytes@len+1
 13810  13BE  3025               	movlw	37
 13811  13BF  319E  26C4  3193   	fcall	_I2C1_WriteNBytes
 13812                           
 13813                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 102:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 13814  13C2  0000               	nop
 13815                           
 13816                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 104:      I2C1_WriteNBytes(0x25, &upperdata, 1
      +                          );
 13817  13C3  3035               	movlw	(low (i2c_lcd_send_data@upperdata| 0))& (0+255)
 13818  13C4  0020               	movlb	0	; select bank0
 13819  13C5  00B0               	movwf	??_i2c_lcd_send_data
 13820  13C6  0830               	movf	??_i2c_lcd_send_data,w
 13821  13C7  00AC               	movwf	I2C1_WriteNBytes@data
 13822  13C8  3001               	movlw	1
 13823  13C9  00AD               	movwf	I2C1_WriteNBytes@len
 13824  13CA  3000               	movlw	0
 13825  13CB  00AE               	movwf	I2C1_WriteNBytes@len+1
 13826  13CC  3025               	movlw	37
 13827  13CD  319E  26C4  3193   	fcall	_I2C1_WriteNBytes
 13828                           
 13829                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 105:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 13830  13D0  0000               	nop
 13831                           
 13832                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 109:     I2C1_WriteNBytes(0x25, &lowerdata_en,
      +                           1);
 13833  13D1  3034               	movlw	(low (i2c_lcd_send_data@lowerdata_en| 0))& (0+255)
 13834  13D2  0020               	movlb	0	; select bank0
 13835  13D3  00B0               	movwf	??_i2c_lcd_send_data
 13836  13D4  0830               	movf	??_i2c_lcd_send_data,w
 13837  13D5  00AC               	movwf	I2C1_WriteNBytes@data
 13838  13D6  3001               	movlw	1
 13839  13D7  00AD               	movwf	I2C1_WriteNBytes@len
 13840  13D8  3000               	movlw	0
 13841  13D9  00AE               	movwf	I2C1_WriteNBytes@len+1
 13842  13DA  3025               	movlw	37
 13843  13DB  319E  26C4  3193   	fcall	_I2C1_WriteNBytes
 13844                           
 13845                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 110:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 13846  13DE  0000               	nop
 13847                           
 13848                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 112:     I2C1_WriteNBytes(0x25, &lowerdata, 1)
      +                          ;
 13849  13DF  3036               	movlw	(low (i2c_lcd_send_data@lowerdata| 0))& (0+255)
 13850  13E0  0020               	movlb	0	; select bank0
 13851  13E1  00B0               	movwf	??_i2c_lcd_send_data
 13852  13E2  0830               	movf	??_i2c_lcd_send_data,w
 13853  13E3  00AC               	movwf	I2C1_WriteNBytes@data
 13854  13E4  3001               	movlw	1
 13855  13E5  00AD               	movwf	I2C1_WriteNBytes@len
 13856  13E6  3000               	movlw	0
 13857  13E7  00AE               	movwf	I2C1_WriteNBytes@len+1
 13858  13E8  3025               	movlw	37
 13859  13E9  319E  26C4         	fcall	_I2C1_WriteNBytes
 13860                           
 13861                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 113:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 13862  13EB  0000               	nop
 13863  13EC  0008               	return
 13864  13ED                     __end_of_i2c_lcd_send_data:
 13865                           
 13866                           	psect	text34
 13867  1DFB                     __ptext34:	
 13868 ;; *************** function ___lbmod *****************
 13869 ;; Defined at:
 13870 ;;		line 4 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/lbmod.c"
 13871 ;; Parameters:    Size  Location     Type
 13872 ;;  dividend        1    wreg     unsigned char 
 13873 ;;  divisor         1    3[BANK0 ] unsigned char 
 13874 ;; Auto vars:     Size  Location     Type
 13875 ;;  dividend        1    6[BANK0 ] unsigned char 
 13876 ;;  rem             1    8[BANK0 ] unsigned char 
 13877 ;;  counter         1    7[BANK0 ] unsigned char 
 13878 ;; Return value:  Size  Location     Type
 13879 ;;                  1    wreg      unsigned char 
 13880 ;; Registers used:
 13881 ;;		wreg, status,2, status,0
 13882 ;; Tracked objects:
 13883 ;;		On entry : 0/4800001
 13884 ;;		On exit  : 1F/0
 13885 ;;		Unchanged: 0/0
 13886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13887 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13888 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13889 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13890 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13891 ;;Total ram usage:        6 bytes
 13892 ;; Hardware stack levels used:    1
 13893 ;; Hardware stack levels required when called:    7
 13894 ;; This function calls:
 13895 ;;		Nothing
 13896 ;; This function is called by:
 13897 ;;		_set_source
 13898 ;;		_main
 13899 ;;		_lcd_disp_param
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           
 13904                           ;psect for function ___lbmod
 13905  1DFB                     ___lbmod:
 13906                           
 13907                           ;incstack = 0
 13908                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 13909                           ;___lbmod@dividend stored from wreg
 13910  1DFB  0020               	movlb	0	; select bank0
 13911  1DFC  00A6               	movwf	___lbmod@dividend
 13912  1DFD  3008               	movlw	8
 13913  1DFE  00A4               	movwf	??___lbmod
 13914  1DFF  0824               	movf	??___lbmod,w
 13915  1E00  00A7               	movwf	___lbmod@counter
 13916  1E01  01A8               	clrf	___lbmod@rem
 13917  1E02                     l7490:
 13918  1E02  0826               	movf	___lbmod@dividend,w
 13919  1E03  00A4               	movwf	??___lbmod
 13920  1E04  3007               	movlw	7
 13921  1E05                     u5525:
 13922  1E05  36A4               	lsrf	??___lbmod,f
 13923  1E06  0B89               	decfsz	9,f
 13924  1E07  2E05               	goto	u5525
 13925  1E08  3528               	lslf	___lbmod@rem,w
 13926  1E09  0424               	iorwf	??___lbmod,w
 13927  1E0A  00A5               	movwf	??___lbmod+1
 13928  1E0B  0825               	movf	??___lbmod+1,w
 13929  1E0C  00A8               	movwf	___lbmod@rem
 13930  1E0D  1003               	clrc
 13931  1E0E  0DA6               	rlf	___lbmod@dividend,f
 13932  1E0F  0823               	movf	___lbmod@divisor,w
 13933  1E10  0228               	subwf	___lbmod@rem,w
 13934  1E11  1C03               	skipc
 13935  1E12  2E15               	goto	l1669
 13936  1E13  0823               	movf	___lbmod@divisor,w
 13937  1E14  02A8               	subwf	___lbmod@rem,f
 13938  1E15                     l1669:
 13939  1E15  3001               	movlw	1
 13940  1E16  02A7               	subwf	___lbmod@counter,f
 13941  1E17  1D03               	btfss	3,2
 13942  1E18  2E02               	goto	l7490
 13943  1E19  0828               	movf	___lbmod@rem,w
 13944  1E1A  0008               	return
 13945  1E1B                     __end_of___lbmod:
 13946                           
 13947                           	psect	text35
 13948  1499                     __ptext35:	
 13949 ;; *************** function _init_tas6422 *****************
 13950 ;; Defined at:
 13951 ;;		line 282 in file "main.c"
 13952 ;; Parameters:    Size  Location     Type
 13953 ;;		None
 13954 ;; Auto vars:     Size  Location     Type
 13955 ;;		None
 13956 ;; Return value:  Size  Location     Type
 13957 ;;                  1    wreg      void 
 13958 ;; Registers used:
 13959 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13960 ;; Tracked objects:
 13961 ;;		On entry : 1F/0
 13962 ;;		On exit  : 1F/2
 13963 ;;		Unchanged: 0/0
 13964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13967 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13968 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13969 ;;Total ram usage:        1 bytes
 13970 ;; Hardware stack levels used:    1
 13971 ;; Hardware stack levels required when called:   11
 13972 ;; This function calls:
 13973 ;;		_DELAY_milliseconds
 13974 ;;		_i2c_writeNBytes
 13975 ;; This function is called by:
 13976 ;;		_main
 13977 ;; This function uses a non-reentrant model
 13978 ;;
 13979                           
 13980                           
 13981                           ;psect for function _init_tas6422
 13982  1499                     _init_tas6422:
 13983                           
 13984                           ;main.c: 284: i2c_writeNBytes(0x6a,&TAS_RESET, 2 );
 13985                           
 13986                           ;incstack = 0
 13987                           ; Regs used in _init_tas6422: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13988  1499  30AF               	movlw	(low (_TAS_RESET| (0+256)))& (0+255)
 13989  149A  00B0               	movwf	??_init_tas6422
 13990  149B  0830               	movf	??_init_tas6422,w
 13991  149C  00AC               	movwf	i2c_writeNBytes@data
 13992  149D  3002               	movlw	2
 13993  149E  00AD               	movwf	i2c_writeNBytes@len
 13994  149F  3000               	movlw	0
 13995  14A0  00AE               	movwf	i2c_writeNBytes@len+1
 13996  14A1  306A               	movlw	106
 13997  14A2  319E  26E9  3194   	fcall	_i2c_writeNBytes
 13998                           
 13999                           ;main.c: 285:   DELAY_milliseconds(5);
 14000  14A5  3005               	movlw	5
 14001  14A6  00A3               	movwf	DELAY_milliseconds@milliseconds
 14002  14A7  3000               	movlw	0
 14003  14A8  00A4               	movwf	DELAY_milliseconds@milliseconds+1
 14004  14A9  319B  2398  3194   	fcall	_DELAY_milliseconds
 14005                           
 14006                           ;main.c: 286: i2c_writeNBytes(0x6a,&TAS_RUN, 2 );
 14007  14AC  30ED               	movlw	(low (_TAS_RUN| (0+256)))& (0+255)
 14008  14AD  00B0               	movwf	??_init_tas6422
 14009  14AE  0830               	movf	??_init_tas6422,w
 14010  14AF  00AC               	movwf	i2c_writeNBytes@data
 14011  14B0  3002               	movlw	2
 14012  14B1  00AD               	movwf	i2c_writeNBytes@len
 14013  14B2  3000               	movlw	0
 14014  14B3  00AE               	movwf	i2c_writeNBytes@len+1
 14015  14B4  306A               	movlw	106
 14016  14B5  319E  26E9  3194   	fcall	_i2c_writeNBytes
 14017                           
 14018                           ;main.c: 288: i2c_writeNBytes(0x6a,&TAS_DCDIAG_CLEAR, 2 );
 14019  14B8  30AD               	movlw	(low (_TAS_DCDIAG_CLEAR| (0+256)))& (0+255)
 14020  14B9  00B0               	movwf	??_init_tas6422
 14021  14BA  0830               	movf	??_init_tas6422,w
 14022  14BB  00AC               	movwf	i2c_writeNBytes@data
 14023  14BC  3002               	movlw	2
 14024  14BD  00AD               	movwf	i2c_writeNBytes@len
 14025  14BE  3000               	movlw	0
 14026  14BF  00AE               	movwf	i2c_writeNBytes@len+1
 14027  14C0  306A               	movlw	106
 14028  14C1  319E  26E9  3194   	fcall	_i2c_writeNBytes
 14029                           
 14030                           ;main.c: 289: i2c_writeNBytes(0x6a,&TAS_FS96K, 2 );
 14031  14C4  304E               	movlw	(low (_TAS_FS96K| (0+256)))& (0+255)
 14032  14C5  00B0               	movwf	??_init_tas6422
 14033  14C6  0830               	movf	??_init_tas6422,w
 14034  14C7  00AC               	movwf	i2c_writeNBytes@data
 14035  14C8  3002               	movlw	2
 14036  14C9  00AD               	movwf	i2c_writeNBytes@len
 14037  14CA  3000               	movlw	0
 14038  14CB  00AE               	movwf	i2c_writeNBytes@len+1
 14039  14CC  306A               	movlw	106
 14040  14CD  319E  26E9  3194   	fcall	_i2c_writeNBytes
 14041                           
 14042                           ;main.c: 290: i2c_writeNBytes(0x6a,&TAS_AC, 2 );
 14043  14D0  30AB               	movlw	(low (_TAS_AC| (0+256)))& (0+255)
 14044  14D1  00B0               	movwf	??_init_tas6422
 14045  14D2  0830               	movf	??_init_tas6422,w
 14046  14D3  00AC               	movwf	i2c_writeNBytes@data
 14047  14D4  3002               	movlw	2
 14048  14D5  00AD               	movwf	i2c_writeNBytes@len
 14049  14D6  3000               	movlw	0
 14050  14D7  00AE               	movwf	i2c_writeNBytes@len+1
 14051  14D8  306A               	movlw	106
 14052  14D9  319E  26E9  3194   	fcall	_i2c_writeNBytes
 14053                           
 14054                           ;main.c: 291: i2c_writeNBytes(0x6a,&TAS_CHK_RAILS, 2 );
 14055  14DC  30A3               	movlw	(low (_TAS_CHK_RAILS| (0+256)))& (0+255)
 14056  14DD  00B0               	movwf	??_init_tas6422
 14057  14DE  0830               	movf	??_init_tas6422,w
 14058  14DF  00AC               	movwf	i2c_writeNBytes@data
 14059  14E0  3002               	movlw	2
 14060  14E1  00AD               	movwf	i2c_writeNBytes@len
 14061  14E2  3000               	movlw	0
 14062  14E3  00AE               	movwf	i2c_writeNBytes@len+1
 14063  14E4  306A               	movlw	106
 14064  14E5  319E  26E9  3194   	fcall	_i2c_writeNBytes
 14065                           
 14066                           ;main.c: 292: i2c_writeNBytes(0x6a,&TAS_CLEAR_FALT, 2 );
 14067  14E8  304A               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
 14068  14E9  00B0               	movwf	??_init_tas6422
 14069  14EA  0830               	movf	??_init_tas6422,w
 14070  14EB  00AC               	movwf	i2c_writeNBytes@data
 14071  14EC  3002               	movlw	2
 14072  14ED  00AD               	movwf	i2c_writeNBytes@len
 14073  14EE  3000               	movlw	0
 14074  14EF  00AE               	movwf	i2c_writeNBytes@len+1
 14075  14F0  306A               	movlw	106
 14076  14F1  319E  26E9  3194   	fcall	_i2c_writeNBytes
 14077                           
 14078                           ;main.c: 293: i2c_writeNBytes(0x6a,&TAS_NORMAL, 2 );
 14079  14F4  3048               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
 14080  14F5  00B0               	movwf	??_init_tas6422
 14081  14F6  0830               	movf	??_init_tas6422,w
 14082  14F7  00AC               	movwf	i2c_writeNBytes@data
 14083  14F8  3002               	movlw	2
 14084  14F9  00AD               	movwf	i2c_writeNBytes@len
 14085  14FA  3000               	movlw	0
 14086  14FB  00AE               	movwf	i2c_writeNBytes@len+1
 14087  14FC  306A               	movlw	106
 14088  14FD  319E  26E9         	fcall	_i2c_writeNBytes
 14089  14FF  0022               	movlb	2	; select bank2
 14090  1500  178D               	bsf	13,7	;volatile
 14091  1501  0008               	return
 14092  1502                     __end_of_init_tas6422:
 14093                           
 14094                           	psect	text36
 14095  1B98                     __ptext36:	
 14096 ;; *************** function _DELAY_milliseconds *****************
 14097 ;; Defined at:
 14098 ;;		line 27 in file "mcc_generated_files/delay.c"
 14099 ;; Parameters:    Size  Location     Type
 14100 ;;  milliseconds    2    3[BANK0 ] unsigned short 
 14101 ;; Auto vars:     Size  Location     Type
 14102 ;;		None
 14103 ;; Return value:  Size  Location     Type
 14104 ;;                  1    wreg      void 
 14105 ;; Registers used:
 14106 ;;		wreg, status,2, status,0
 14107 ;; Tracked objects:
 14108 ;;		On entry : 1F/0
 14109 ;;		On exit  : 1F/0
 14110 ;;		Unchanged: 0/0
 14111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14112 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14114 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14115 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14116 ;;Total ram usage:        3 bytes
 14117 ;; Hardware stack levels used:    1
 14118 ;; Hardware stack levels required when called:    7
 14119 ;; This function calls:
 14120 ;;		Nothing
 14121 ;; This function is called by:
 14122 ;;		_init_tas6422
 14123 ;;		_set_source
 14124 ;;		_main
 14125 ;; This function uses a non-reentrant model
 14126 ;;
 14127                           
 14128                           
 14129                           ;psect for function _DELAY_milliseconds
 14130  1B98                     _DELAY_milliseconds:
 14131  1B98                     l5610:	
 14132                           ;mcc_generated_files/delay.c: 28:     while(milliseconds--){
 14133                           
 14134                           ;incstack = 0
 14135                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 14136                           
 14137                           
 14138                           ;mcc_generated_files/delay.c: 28:     while(milliseconds--){
 14139  1B98  3001               	movlw	1
 14140  1B99  0020               	movlb	0	; select bank0
 14141  1B9A  02A3               	subwf	DELAY_milliseconds@milliseconds,f
 14142  1B9B  3000               	movlw	0
 14143  1B9C  3BA4               	subwfb	DELAY_milliseconds@milliseconds+1,f
 14144  1B9D  0A23               	incf	DELAY_milliseconds@milliseconds,w
 14145  1B9E  1903               	btfsc	3,2
 14146  1B9F  0A24               	incf	DELAY_milliseconds@milliseconds+1,w
 14147  1BA0  1903               	btfsc	3,2
 14148  1BA1  0008               	return
 14149                           
 14150                           ;mcc_generated_files/delay.c: 29:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 14151  1BA2  300B               	movlw	11
 14152  1BA3  0020               	movlb	0	; select bank0
 14153  1BA4  00A5               	movwf	??_DELAY_milliseconds
 14154  1BA5  3062               	movlw	98
 14155  1BA6                     u5807:
 14156  1BA6  0B89               	decfsz	9,f
 14157  1BA7  2BA6               	goto	u5807
 14158  1BA8  0BA5               	decfsz	??_DELAY_milliseconds,f
 14159  1BA9  2BA6               	goto	u5807
 14160  1BAA  0000               	nop
 14161  1BAB  2B98               	goto	l5610
 14162  1BAC                     __end_of_DELAY_milliseconds:
 14163                           
 14164                           	psect	text37
 14165  1744                     __ptext37:	
 14166 ;; *************** function _init_pcm9211 *****************
 14167 ;; Defined at:
 14168 ;;		line 260 in file "main.c"
 14169 ;; Parameters:    Size  Location     Type
 14170 ;;		None
 14171 ;; Auto vars:     Size  Location     Type
 14172 ;;		None
 14173 ;; Return value:  Size  Location     Type
 14174 ;;                  1    wreg      void 
 14175 ;; Registers used:
 14176 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14177 ;; Tracked objects:
 14178 ;;		On entry : 1E/0
 14179 ;;		On exit  : 1F/0
 14180 ;;		Unchanged: 0/0
 14181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14184 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14185 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14186 ;;Total ram usage:        1 bytes
 14187 ;; Hardware stack levels used:    1
 14188 ;; Hardware stack levels required when called:   11
 14189 ;; This function calls:
 14190 ;;		_i2c_writeNBytes
 14191 ;; This function is called by:
 14192 ;;		_main
 14193 ;; This function uses a non-reentrant model
 14194 ;;
 14195                           
 14196                           
 14197                           ;psect for function _init_pcm9211
 14198  1744                     _init_pcm9211:
 14199                           
 14200                           ;main.c: 262: i2c_writeNBytes(0x40,&INIT9211_20, 2 );
 14201                           
 14202                           ;incstack = 0
 14203                           ; Regs used in _init_pcm9211: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14204  1744  30BB               	movlw	(low (_INIT9211_20| (0+256)))& (0+255)
 14205  1745  0020               	movlb	0	; select bank0
 14206  1746  00B0               	movwf	??_init_pcm9211
 14207  1747  0830               	movf	??_init_pcm9211,w
 14208  1748  00AC               	movwf	i2c_writeNBytes@data
 14209  1749  3002               	movlw	2
 14210  174A  00AD               	movwf	i2c_writeNBytes@len
 14211  174B  3000               	movlw	0
 14212  174C  00AE               	movwf	i2c_writeNBytes@len+1
 14213  174D  3040               	movlw	64
 14214  174E  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14215                           
 14216                           ;main.c: 263: i2c_writeNBytes(0x40,&INIT9211_26, 2 );
 14217  1751  30B5               	movlw	(low (_INIT9211_26| (0+256)))& (0+255)
 14218  1752  00B0               	movwf	??_init_pcm9211
 14219  1753  0830               	movf	??_init_pcm9211,w
 14220  1754  00AC               	movwf	i2c_writeNBytes@data
 14221  1755  3002               	movlw	2
 14222  1756  00AD               	movwf	i2c_writeNBytes@len
 14223  1757  3000               	movlw	0
 14224  1758  00AE               	movwf	i2c_writeNBytes@len+1
 14225  1759  3040               	movlw	64
 14226  175A  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14227                           
 14228                           ;main.c: 264: i2c_writeNBytes(0x40,&INIT9211_27, 2 );
 14229  175D  30B3               	movlw	(low (_INIT9211_27| (0+256)))& (0+255)
 14230  175E  00B0               	movwf	??_init_pcm9211
 14231  175F  0830               	movf	??_init_pcm9211,w
 14232  1760  00AC               	movwf	i2c_writeNBytes@data
 14233  1761  3002               	movlw	2
 14234  1762  00AD               	movwf	i2c_writeNBytes@len
 14235  1763  3000               	movlw	0
 14236  1764  00AE               	movwf	i2c_writeNBytes@len+1
 14237  1765  3040               	movlw	64
 14238  1766  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14239                           
 14240                           ;main.c: 265: i2c_writeNBytes(0x40,&INIT9211_2E, 2 );
 14241  1769  30B9               	movlw	(low (_INIT9211_2E| (0+256)))& (0+255)
 14242  176A  00B0               	movwf	??_init_pcm9211
 14243  176B  0830               	movf	??_init_pcm9211,w
 14244  176C  00AC               	movwf	i2c_writeNBytes@data
 14245  176D  3002               	movlw	2
 14246  176E  00AD               	movwf	i2c_writeNBytes@len
 14247  176F  3000               	movlw	0
 14248  1770  00AE               	movwf	i2c_writeNBytes@len+1
 14249  1771  3040               	movlw	64
 14250  1772  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14251                           
 14252                           ;main.c: 266: i2c_writeNBytes(0x40,&INIT9211_2B, 2 );
 14253  1775  30B7               	movlw	(low (_INIT9211_2B| (0+256)))& (0+255)
 14254  1776  00B0               	movwf	??_init_pcm9211
 14255  1777  0830               	movf	??_init_pcm9211,w
 14256  1778  00AC               	movwf	i2c_writeNBytes@data
 14257  1779  3002               	movlw	2
 14258  177A  00AD               	movwf	i2c_writeNBytes@len
 14259  177B  3000               	movlw	0
 14260  177C  00AE               	movwf	i2c_writeNBytes@len+1
 14261  177D  3040               	movlw	64
 14262  177E  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14263                           
 14264                           ;main.c: 267: i2c_writeNBytes(0x40,&INIT9211_31, 2 );
 14265  1781  30B1               	movlw	(low (_INIT9211_31| (0+256)))& (0+255)
 14266  1782  00B0               	movwf	??_init_pcm9211
 14267  1783  0830               	movf	??_init_pcm9211,w
 14268  1784  00AC               	movwf	i2c_writeNBytes@data
 14269  1785  3002               	movlw	2
 14270  1786  00AD               	movwf	i2c_writeNBytes@len
 14271  1787  3000               	movlw	0
 14272  1788  00AE               	movwf	i2c_writeNBytes@len+1
 14273  1789  3040               	movlw	64
 14274  178A  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14275                           
 14276                           ;main.c: 268:  if( current_direction == 1)
 14277  178D  0021               	movlb	1	; select bank1
 14278  178E  0366               	decf	_current_direction^(0+128),w
 14279  178F  1D03               	btfss	3,2
 14280  1790  2F93               	goto	l7574
 14281                           
 14282                           ;main.c: 269:            i2c_writeNBytes(0x40,&I2S_OUT, 2 );
 14283  1791  3066               	movlw	(low (_I2S_OUT| (0+256)))& (0+255)
 14284  1792  2F94               	goto	L8
 14285  1793                     l7574:
 14286  1793  3064               	movlw	(low (_I2S_IN| (0+256)))& (0+255)
 14287  1794                     L8:
 14288  1794  0020               	movlb	0	; select bank0
 14289  1795  00B0               	movwf	??_init_pcm9211
 14290  1796  0830               	movf	??_init_pcm9211,w
 14291  1797  00AC               	movwf	i2c_writeNBytes@data
 14292  1798  3002               	movlw	2
 14293  1799  00AD               	movwf	i2c_writeNBytes@len
 14294  179A  3000               	movlw	0
 14295  179B  00AE               	movwf	i2c_writeNBytes@len+1
 14296  179C  3040               	movlw	64
 14297  179D  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14298                           
 14299                           ;main.c: 271:  i2c_writeNBytes(0x40,&ADC_96K, 2 );
 14300  17A0  30BD               	movlw	(low (_ADC_96K| (0+256)))& (0+255)
 14301  17A1  00B0               	movwf	??_init_pcm9211
 14302  17A2  0830               	movf	??_init_pcm9211,w
 14303  17A3  00AC               	movwf	i2c_writeNBytes@data
 14304  17A4  3002               	movlw	2
 14305  17A5  00AD               	movwf	i2c_writeNBytes@len
 14306  17A6  3000               	movlw	0
 14307  17A7  00AE               	movwf	i2c_writeNBytes@len+1
 14308  17A8  3040               	movlw	64
 14309  17A9  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14310                           
 14311                           ;main.c: 272:  i2c_writeNBytes(0x40,&ADC_DC, 2 );
 14312  17AC  30BF               	movlw	(low (_ADC_DC| (0+256)))& (0+255)
 14313  17AD  00B0               	movwf	??_init_pcm9211
 14314  17AE  0830               	movf	??_init_pcm9211,w
 14315  17AF  00AC               	movwf	i2c_writeNBytes@data
 14316  17B0  3002               	movlw	2
 14317  17B1  00AD               	movwf	i2c_writeNBytes@len
 14318  17B2  3000               	movlw	0
 14319  17B3  00AE               	movwf	i2c_writeNBytes@len+1
 14320  17B4  3040               	movlw	64
 14321  17B5  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14322                           
 14323                           ;main.c: 273: i2c_writeNBytes(0x40,&ADC_ATTL_3dB, 2 );
 14324  17B8  30C7               	movlw	(low (_ADC_ATTL_3dB| (0+256)))& (0+255)
 14325  17B9  00B0               	movwf	??_init_pcm9211
 14326  17BA  0830               	movf	??_init_pcm9211,w
 14327  17BB  00AC               	movwf	i2c_writeNBytes@data
 14328  17BC  3002               	movlw	2
 14329  17BD  00AD               	movwf	i2c_writeNBytes@len
 14330  17BE  3000               	movlw	0
 14331  17BF  00AE               	movwf	i2c_writeNBytes@len+1
 14332  17C0  3040               	movlw	64
 14333  17C1  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14334                           
 14335                           ;main.c: 274: i2c_writeNBytes(0x40,&ADC_ATTR_3dB, 2 );
 14336  17C4  30C5               	movlw	(low (_ADC_ATTR_3dB| (0+256)))& (0+255)
 14337  17C5  00B0               	movwf	??_init_pcm9211
 14338  17C6  0830               	movf	??_init_pcm9211,w
 14339  17C7  00AC               	movwf	i2c_writeNBytes@data
 14340  17C8  3002               	movlw	2
 14341  17C9  00AD               	movwf	i2c_writeNBytes@len
 14342  17CA  3000               	movlw	0
 14343  17CB  00AE               	movwf	i2c_writeNBytes@len+1
 14344  17CC  3040               	movlw	64
 14345  17CD  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14346                           
 14347                           ;main.c: 275:  i2c_writeNBytes(0x40,&SRC_ADC, 2 );
 14348  17D0  3060               	movlw	(low (_SRC_ADC| (0+256)))& (0+255)
 14349  17D1  00B0               	movwf	??_init_pcm9211
 14350  17D2  0830               	movf	??_init_pcm9211,w
 14351  17D3  00AC               	movwf	i2c_writeNBytes@data
 14352  17D4  3002               	movlw	2
 14353  17D5  00AD               	movwf	i2c_writeNBytes@len
 14354  17D6  3000               	movlw	0
 14355  17D7  00AE               	movwf	i2c_writeNBytes@len+1
 14356  17D8  3040               	movlw	64
 14357  17D9  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14358                           
 14359                           ;main.c: 276:  i2c_writeNBytes(0x40,&DIR_OPT, 2 );
 14360  17DC  3054               	movlw	(low (_DIR_OPT| (0+256)))& (0+255)
 14361  17DD  00B0               	movwf	??_init_pcm9211
 14362  17DE  0830               	movf	??_init_pcm9211,w
 14363  17DF  00AC               	movwf	i2c_writeNBytes@data
 14364  17E0  3002               	movlw	2
 14365  17E1  00AD               	movwf	i2c_writeNBytes@len
 14366  17E2  3000               	movlw	0
 14367  17E3  00AE               	movwf	i2c_writeNBytes@len+1
 14368  17E4  3040               	movlw	64
 14369  17E5  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14370                           
 14371                           ;main.c: 277:  i2c_writeNBytes(0x40,&DIT_ADC, 2 );
 14372  17E8  3050               	movlw	(low (_DIT_ADC| (0+256)))& (0+255)
 14373  17E9  00B0               	movwf	??_init_pcm9211
 14374  17EA  0830               	movf	??_init_pcm9211,w
 14375  17EB  00AC               	movwf	i2c_writeNBytes@data
 14376  17EC  3002               	movlw	2
 14377  17ED  00AD               	movwf	i2c_writeNBytes@len
 14378  17EE  3000               	movlw	0
 14379  17EF  00AE               	movwf	i2c_writeNBytes@len+1
 14380  17F0  3040               	movlw	64
 14381  17F1  319E  26E9  3197   	fcall	_i2c_writeNBytes
 14382                           
 14383                           ;main.c: 278:  i2c_writeNBytes(0x40,&CALC_MOUT, 2);
 14384  17F4  30C9               	movlw	(low (_CALC_MOUT| (0+256)))& (0+255)
 14385  17F5  00B0               	movwf	??_init_pcm9211
 14386  17F6  0830               	movf	??_init_pcm9211,w
 14387  17F7  00AC               	movwf	i2c_writeNBytes@data
 14388  17F8  3002               	movlw	2
 14389  17F9  00AD               	movwf	i2c_writeNBytes@len
 14390  17FA  3000               	movlw	0
 14391  17FB  00AE               	movwf	i2c_writeNBytes@len+1
 14392  17FC  3040               	movlw	64
 14393  17FD  319E  26E9         	fcall	_i2c_writeNBytes
 14394  17FF  0008               	return
 14395  1800                     __end_of_init_pcm9211:
 14396                           
 14397                           	psect	text38
 14398  1EE9                     __ptext38:	
 14399 ;; *************** function _i2c_writeNBytes *****************
 14400 ;; Defined at:
 14401 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 14402 ;; Parameters:    Size  Location     Type
 14403 ;;  address         1    wreg     unsigned char 
 14404 ;;  data            1   12[BANK0 ] PTR void 
 14405 ;;		 -> tasbuff(2), TAS_NORMAL(2), TAS_CLEAR_FALT(2), TAS_CHK_RAILS(2), 
 14406 ;;		 -> TAS_PLAY(2), TAS_MUTE(2), TAS_FS96K(2), TAS_FS48K(2), 
 14407 ;;		 -> TAS_FS44K(2), TAS_AC(2), TAS_DCDIAG_CLEAR(2), TAS_RUN(2), 
 14408 ;;		 -> TAS_RESET(2), INIT9211_31(2), INIT9211_27(2), INIT9211_26(2), 
 14409 ;;		 -> INIT9211_2B(2), INIT9211_2E(2), INIT9211_20(2), ADC_96K(2), 
 14410 ;;		 -> ADC_DC(2), DIT_I2S(2), DIT_LVDS(2), DIT_ADC(2), 
 14411 ;;		 -> DIT_DIR(2), ADC_ATTR_3dB(2), ADC_ATTL_3dB(2), CALC_MOUT(2), 
 14412 ;;		 -> DIR_COAX(2), DIR_OPT(2), AUXSRC_LVDS(2), AUXSRC_ADC(2), 
 14413 ;;		 -> AUXSRC_DIR(2), AUXSRC_AUTO(2), SRC_I2S(2), SRC_LVDS(2), 
 14414 ;;		 -> SRC_ADC(2), SRC_DIR(2), I2S_IN(2), I2S_OUT(2), 
 14415 ;;  len             2   13[BANK0 ] unsigned int 
 14416 ;; Auto vars:     Size  Location     Type
 14417 ;;  address         1   15[BANK0 ] unsigned char 
 14418 ;; Return value:  Size  Location     Type
 14419 ;;                  1    wreg      void 
 14420 ;; Registers used:
 14421 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14422 ;; Tracked objects:
 14423 ;;		On entry : 1F/4900000
 14424 ;;		On exit  : 1F/0
 14425 ;;		Unchanged: 0/0
 14426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14427 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14428 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14430 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14431 ;;Total ram usage:        4 bytes
 14432 ;; Hardware stack levels used:    1
 14433 ;; Hardware stack levels required when called:   10
 14434 ;; This function calls:
 14435 ;;		_I2C1_Close
 14436 ;;		_I2C1_MasterWrite
 14437 ;;		_I2C1_Open
 14438 ;;		_I2C1_SetAddressNackCallback
 14439 ;;		_I2C1_SetBuffer
 14440 ;; This function is called by:
 14441 ;;		_init_pcm9211
 14442 ;;		_init_tas6422
 14443 ;;		_set_gains
 14444 ;;		_set_source
 14445 ;;		_main
 14446 ;; This function uses a non-reentrant model
 14447 ;;
 14448                           
 14449                           
 14450                           ;psect for function _i2c_writeNBytes
 14451  1EE9                     _i2c_writeNBytes:
 14452                           
 14453                           ;incstack = 0
 14454                           ; Regs used in _i2c_writeNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14455                           ;i2c_writeNBytes@address stored from wreg
 14456  1EE9  00AF               	movwf	i2c_writeNBytes@address
 14457  1EEA                     l7422:	
 14458                           ;mcc_generated_files/drivers/i2c_simple_master.c: 48: void i2c_writeNBytes(i2c1_address_
      +                          t address, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 49: 
      +                          {;mcc_generated_files/drivers/i2c_simple_master.c: 50:     while(!I2C1_Open(address));
 14459                           
 14460  1EEA  082F               	movf	i2c_writeNBytes@address,w
 14461  1EEB  3191  217E  319E   	fcall	_I2C1_Open
 14462  1EEE  3A00               	xorlw	0
 14463  1EEF  1903               	skipnz
 14464  1EF0  2EEA               	goto	l7422
 14465                           
 14466                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51:     I2C1_SetBuffer(data,len);
 14467  1EF1  082C               	movf	i2c_writeNBytes@data,w
 14468  1EF2  00A3               	movwf	I2C1_SetBuffer@buffer
 14469  1EF3  3001               	movlw	1
 14470  1EF4  00A4               	movwf	I2C1_SetBuffer@buffer+1
 14471  1EF5  082E               	movf	i2c_writeNBytes@len+1,w
 14472  1EF6  00A6               	movwf	I2C1_SetBuffer@bufferSize+1
 14473  1EF7  082D               	movf	i2c_writeNBytes@len,w
 14474  1EF8  00A5               	movwf	I2C1_SetBuffer@bufferSize
 14475  1EF9  319C  2468  319E   	fcall	_I2C1_SetBuffer
 14476                           
 14477                           ;mcc_generated_files/drivers/i2c_simple_master.c: 52:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 14478  1EFC  3000               	movlw	0
 14479  1EFD  0020               	movlb	0	; select bank0
 14480  1EFE  00A8               	movwf	I2C1_SetAddressNackCallback@cb
 14481  1EFF  00A9               	movwf	I2C1_SetAddressNackCallback@cb+1
 14482  1F00  01AA               	clrf	I2C1_SetAddressNackCallback@ptr
 14483  1F01  319B  2307  319E   	fcall	_I2C1_SetAddressNackCallback
 14484                           
 14485                           ;mcc_generated_files/drivers/i2c_simple_master.c: 53:     I2C1_MasterWrite();
 14486  1F04  3187  27FC  319E   	fcall	_I2C1_MasterWrite
 14487  1F07                     l7430:	
 14488                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 14489                           
 14490  1F07  319D  25A3  319E   	fcall	_I2C1_Close
 14491  1F0A  3A01               	xorlw	1
 14492  1F0B  1D03               	btfss	3,2
 14493  1F0C  0008               	return
 14494  1F0D  2F07               	goto	l7430
 14495  1F0E                     __end_of_i2c_writeNBytes:
 14496                           
 14497                           	psect	text39
 14498  1B55                     __ptext39:	
 14499 ;; *************** function _i2c_lcd_ulcursor_off *****************
 14500 ;; Defined at:
 14501 ;;		line 185 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 14502 ;; Parameters:    Size  Location     Type
 14503 ;;		None
 14504 ;; Auto vars:     Size  Location     Type
 14505 ;;		None
 14506 ;; Return value:  Size  Location     Type
 14507 ;;                  1    wreg      void 
 14508 ;; Registers used:
 14509 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14510 ;; Tracked objects:
 14511 ;;		On entry : 0/2
 14512 ;;		On exit  : 0/0
 14513 ;;		Unchanged: 0/0
 14514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14517 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14518 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14519 ;;Total ram usage:        1 bytes
 14520 ;; Hardware stack levels used:    1
 14521 ;; Hardware stack levels required when called:   12
 14522 ;; This function calls:
 14523 ;;		_i2c_lcd_send_command
 14524 ;; This function is called by:
 14525 ;;		_main
 14526 ;; This function uses a non-reentrant model
 14527 ;;
 14528                           
 14529                           
 14530                           ;psect for function _i2c_lcd_ulcursor_off
 14531  1B55                     _i2c_lcd_ulcursor_off:
 14532                           
 14533                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 186:    i2c_lcd_send_command(0x0c);
 14534                           
 14535                           ;incstack = 0
 14536                           ; Regs used in _i2c_lcd_ulcursor_off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14537  1B55  300C               	movlw	12
 14538  1B56  3193  23ED  319B   	fcall	_i2c_lcd_send_command
 14539                           
 14540                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 187:     _delay((unsigned long)((2)*(4000000/4
      +                          000.0)));
 14541  1B59  3003               	movlw	3
 14542  1B5A  0020               	movlb	0	; select bank0
 14543  1B5B  00B7               	movwf	??_i2c_lcd_ulcursor_off
 14544  1B5C  3097               	movlw	151
 14545  1B5D                     u5817:
 14546  1B5D  0B89               	decfsz	9,f
 14547  1B5E  2B5D               	goto	u5817
 14548  1B5F  0BB7               	decfsz	??_i2c_lcd_ulcursor_off,f
 14549  1B60  2B5D               	goto	u5817
 14550  1B61  3200               	nop2
 14551  1B62  0008               	return
 14552  1B63                     __end_of_i2c_lcd_ulcursor_off:
 14553                           
 14554                           	psect	text40
 14555  1443                     __ptext40:	
 14556 ;; *************** function _i2c_lcd_init *****************
 14557 ;; Defined at:
 14558 ;;		line 117 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 14559 ;; Parameters:    Size  Location     Type
 14560 ;;		None
 14561 ;; Auto vars:     Size  Location     Type
 14562 ;;		None
 14563 ;; Return value:  Size  Location     Type
 14564 ;;                  1    wreg      void 
 14565 ;; Registers used:
 14566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14567 ;; Tracked objects:
 14568 ;;		On entry : 1F/2
 14569 ;;		On exit  : 0/0
 14570 ;;		Unchanged: 0/0
 14571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14574 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14575 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14576 ;;Total ram usage:        1 bytes
 14577 ;; Hardware stack levels used:    1
 14578 ;; Hardware stack levels required when called:   12
 14579 ;; This function calls:
 14580 ;;		_i2c_lcd_send_command
 14581 ;;		_i2c_lcd_send_upper4bit
 14582 ;; This function is called by:
 14583 ;;		_main
 14584 ;; This function uses a non-reentrant model
 14585 ;;
 14586                           
 14587                           
 14588                           ;psect for function _i2c_lcd_init
 14589  1443                     _i2c_lcd_init:
 14590                           
 14591                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 119:     _delay((unsigned long)((100)*(4000000
      +                          /4000.0)));
 14592                           
 14593                           ;incstack = 0
 14594                           ; Regs used in _i2c_lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14595  1443  3082               	movlw	130
 14596  1444  0020               	movlb	0	; select bank0
 14597  1445  00B7               	movwf	??_i2c_lcd_init
 14598  1446  30DD               	movlw	221
 14599  1447                     u5827:
 14600  1447  0B89               	decfsz	9,f
 14601  1448  2C47               	goto	u5827
 14602  1449  0BB7               	decfsz	??_i2c_lcd_init,f
 14603  144A  2C47               	goto	u5827
 14604  144B  3200               	nop2
 14605                           
 14606                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 121:     i2c_lcd_send_upper4bit(0x30);
 14607  144C  3030               	movlw	48
 14608  144D  319F  2783  3194   	fcall	_i2c_lcd_send_upper4bit
 14609                           
 14610                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 123:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 14611  1450  3007               	movlw	7
 14612  1451  0020               	movlb	0	; select bank0
 14613  1452  00B7               	movwf	??_i2c_lcd_init
 14614  1453  307D               	movlw	125
 14615  1454                     u5837:
 14616  1454  0B89               	decfsz	9,f
 14617  1455  2C54               	goto	u5837
 14618  1456  0BB7               	decfsz	??_i2c_lcd_init,f
 14619  1457  2C54               	goto	u5837
 14620                           
 14621                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 125:     i2c_lcd_send_upper4bit(0x30);
 14622  1458  3030               	movlw	48
 14623  1459  319F  2783  3194   	fcall	_i2c_lcd_send_upper4bit
 14624                           
 14625                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 127:     _delay((unsigned long)((200)*(4000000
      +                          /4000000.0)));
 14626  145C  3042               	movlw	66
 14627  145D                     u5847:
 14628  145D  0B89               	decfsz	9,f
 14629  145E  2C5D               	goto	u5847
 14630  145F  3200               	nop2
 14631                           
 14632                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 129:     i2c_lcd_send_upper4bit(0x30);
 14633  1460  3030               	movlw	48
 14634  1461  319F  2783  3194   	fcall	_i2c_lcd_send_upper4bit
 14635                           
 14636                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 131:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 14637  1464  3021               	movlw	33
 14638  1465                     u5857:
 14639  1465  0B89               	decfsz	9,f
 14640  1466  2C65               	goto	u5857
 14641  1467  0000               	nop
 14642                           
 14643                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 133:     i2c_lcd_send_upper4bit(0x20);
 14644  1468  3020               	movlw	32
 14645  1469  319F  2783  3194   	fcall	_i2c_lcd_send_upper4bit
 14646                           
 14647                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 134:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 14648  146C  3021               	movlw	33
 14649  146D                     u5867:
 14650  146D  0B89               	decfsz	9,f
 14651  146E  2C6D               	goto	u5867
 14652  146F  0000               	nop
 14653                           
 14654                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 136:     i2c_lcd_send_command(0x28);
 14655  1470  3028               	movlw	40
 14656  1471  3193  23ED  3194   	fcall	_i2c_lcd_send_command
 14657                           
 14658                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 137:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 14659  1474  3021               	movlw	33
 14660  1475                     u5877:
 14661  1475  0B89               	decfsz	9,f
 14662  1476  2C75               	goto	u5877
 14663  1477  0000               	nop
 14664                           
 14665                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 139:     i2c_lcd_send_command(0x0C);
 14666  1478  300C               	movlw	12
 14667  1479  3193  23ED  3194   	fcall	_i2c_lcd_send_command
 14668                           
 14669                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 140:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 14670  147C  3021               	movlw	33
 14671  147D                     u5887:
 14672  147D  0B89               	decfsz	9,f
 14673  147E  2C7D               	goto	u5887
 14674  147F  0000               	nop
 14675                           
 14676                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 142:     i2c_lcd_send_command(0x01);
 14677  1480  3001               	movlw	1
 14678  1481  3193  23ED  3194   	fcall	_i2c_lcd_send_command
 14679                           
 14680                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 143:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 14681  1484  3007               	movlw	7
 14682  1485  0020               	movlb	0	; select bank0
 14683  1486  00B7               	movwf	??_i2c_lcd_init
 14684  1487  307D               	movlw	125
 14685  1488                     u5897:
 14686  1488  0B89               	decfsz	9,f
 14687  1489  2C88               	goto	u5897
 14688  148A  0BB7               	decfsz	??_i2c_lcd_init,f
 14689  148B  2C88               	goto	u5897
 14690                           
 14691                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 145:     i2c_lcd_send_command(0x06);
 14692  148C  3006               	movlw	6
 14693  148D  3193  23ED  3194   	fcall	_i2c_lcd_send_command
 14694                           
 14695                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 146:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 14696  1490  3007               	movlw	7
 14697  1491  0020               	movlb	0	; select bank0
 14698  1492  00B7               	movwf	??_i2c_lcd_init
 14699  1493  307D               	movlw	125
 14700  1494                     u5907:
 14701  1494  0B89               	decfsz	9,f
 14702  1495  2C94               	goto	u5907
 14703  1496  0BB7               	decfsz	??_i2c_lcd_init,f
 14704  1497  2C94               	goto	u5907
 14705  1498  0008               	return
 14706  1499                     __end_of_i2c_lcd_init:
 14707                           
 14708                           	psect	text41
 14709  1F83                     __ptext41:	
 14710 ;; *************** function _i2c_lcd_send_upper4bit *****************
 14711 ;; Defined at:
 14712 ;;		line 75 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 14713 ;; Parameters:    Size  Location     Type
 14714 ;;  data            1    wreg     unsigned char 
 14715 ;; Auto vars:     Size  Location     Type
 14716 ;;  data            1   17[BANK0 ] unsigned char 
 14717 ;;  upperdata       1   19[BANK0 ] unsigned char 
 14718 ;;  upperdata_en    1   18[BANK0 ] unsigned char 
 14719 ;; Return value:  Size  Location     Type
 14720 ;;                  1    wreg      void 
 14721 ;; Registers used:
 14722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14723 ;; Tracked objects:
 14724 ;;		On entry : 0/2
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14729 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14730 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14731 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14732 ;;Total ram usage:        4 bytes
 14733 ;; Hardware stack levels used:    1
 14734 ;; Hardware stack levels required when called:   11
 14735 ;; This function calls:
 14736 ;;		_I2C1_WriteNBytes
 14737 ;; This function is called by:
 14738 ;;		_i2c_lcd_init
 14739 ;; This function uses a non-reentrant model
 14740 ;;
 14741                           
 14742                           
 14743                           ;psect for function _i2c_lcd_send_upper4bit
 14744  1F83                     _i2c_lcd_send_upper4bit:
 14745                           
 14746                           ;incstack = 0
 14747                           ; Regs used in _i2c_lcd_send_upper4bit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 14748                           ;i2c_lcd_send_upper4bit@data stored from wreg
 14749  1F83  0020               	movlb	0	; select bank0
 14750  1F84  00B1               	movwf	i2c_lcd_send_upper4bit@data
 14751                           
 14752                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 75: void i2c_lcd_send_upper4bit(unsigned char 
      +                          data);lcd_driver_files/i2c-lcdlib-ceg003400.c: 76:     {;lcd_driver_files/i2c-lcdlib-ceg
      +                          003400.c: 77:     unsigned char upperdata, upperdata_en;;lcd_driver_files/i2c-lcdlib-ceg
      +                          003400.c: 80:     upperdata = (data & 0xf0) | 0b00001000;
 14753  1F85  0831               	movf	i2c_lcd_send_upper4bit@data,w
 14754  1F86  39F0               	andlw	240
 14755  1F87  3808               	iorlw	8
 14756  1F88  00B0               	movwf	??_i2c_lcd_send_upper4bit
 14757  1F89  0830               	movf	??_i2c_lcd_send_upper4bit,w
 14758  1F8A  00B3               	movwf	i2c_lcd_send_upper4bit@upperdata
 14759                           
 14760                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 81:     upperdata_en = upperdata | 0b00000100;
 14761  1F8B  0833               	movf	i2c_lcd_send_upper4bit@upperdata,w
 14762  1F8C  3804               	iorlw	4
 14763  1F8D  00B0               	movwf	??_i2c_lcd_send_upper4bit
 14764  1F8E  0830               	movf	??_i2c_lcd_send_upper4bit,w
 14765  1F8F  00B2               	movwf	i2c_lcd_send_upper4bit@upperdata_en
 14766                           
 14767                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 82:       I2C1_WriteNBytes(0x25, &upperdata_en
      +                           ,1);
 14768  1F90  3032               	movlw	(low (i2c_lcd_send_upper4bit@upperdata_en| 0))& (0+255)
 14769  1F91  00B0               	movwf	??_i2c_lcd_send_upper4bit
 14770  1F92  0830               	movf	??_i2c_lcd_send_upper4bit,w
 14771  1F93  00AC               	movwf	I2C1_WriteNBytes@data
 14772  1F94  3001               	movlw	1
 14773  1F95  00AD               	movwf	I2C1_WriteNBytes@len
 14774  1F96  3000               	movlw	0
 14775  1F97  00AE               	movwf	I2C1_WriteNBytes@len+1
 14776  1F98  3025               	movlw	37
 14777  1F99  319E  26C4  319F   	fcall	_I2C1_WriteNBytes
 14778                           
 14779                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 83:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 14780  1F9C  0000               	nop
 14781                           
 14782                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 85:      I2C1_WriteNBytes(0x25, &upperdata, 1)
      +                          ;
 14783  1F9D  3033               	movlw	(low (i2c_lcd_send_upper4bit@upperdata| 0))& (0+255)
 14784  1F9E  0020               	movlb	0	; select bank0
 14785  1F9F  00B0               	movwf	??_i2c_lcd_send_upper4bit
 14786  1FA0  0830               	movf	??_i2c_lcd_send_upper4bit,w
 14787  1FA1  00AC               	movwf	I2C1_WriteNBytes@data
 14788  1FA2  3001               	movlw	1
 14789  1FA3  00AD               	movwf	I2C1_WriteNBytes@len
 14790  1FA4  3000               	movlw	0
 14791  1FA5  00AE               	movwf	I2C1_WriteNBytes@len+1
 14792  1FA6  3025               	movlw	37
 14793  1FA7  319E  26C4         	fcall	_I2C1_WriteNBytes
 14794                           
 14795                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 86:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 14796  1FA9  0000               	nop
 14797  1FAA  0008               	return
 14798  1FAB                     __end_of_i2c_lcd_send_upper4bit:
 14799                           
 14800                           	psect	text42
 14801  1B2C                     __ptext42:	
 14802 ;; *************** function _i2c_lcd_home *****************
 14803 ;; Defined at:
 14804 ;;		line 174 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 14805 ;; Parameters:    Size  Location     Type
 14806 ;;		None
 14807 ;; Auto vars:     Size  Location     Type
 14808 ;;		None
 14809 ;; Return value:  Size  Location     Type
 14810 ;;                  1    wreg      void 
 14811 ;; Registers used:
 14812 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14813 ;; Tracked objects:
 14814 ;;		On entry : 0/2
 14815 ;;		On exit  : 0/0
 14816 ;;		Unchanged: 0/0
 14817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14820 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14821 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14822 ;;Total ram usage:        1 bytes
 14823 ;; Hardware stack levels used:    1
 14824 ;; Hardware stack levels required when called:   12
 14825 ;; This function calls:
 14826 ;;		_i2c_lcd_send_command
 14827 ;; This function is called by:
 14828 ;;		_main
 14829 ;; This function uses a non-reentrant model
 14830 ;;
 14831                           
 14832                           
 14833                           ;psect for function _i2c_lcd_home
 14834  1B2C                     _i2c_lcd_home:
 14835                           
 14836                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 175:     i2c_lcd_send_command(0x02);
 14837                           
 14838                           ;incstack = 0
 14839                           ; Regs used in _i2c_lcd_home: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14840  1B2C  3002               	movlw	2
 14841  1B2D  3193  23ED  319B   	fcall	_i2c_lcd_send_command
 14842                           
 14843                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 176:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 14844  1B30  3007               	movlw	7
 14845  1B31  0020               	movlb	0	; select bank0
 14846  1B32  00B7               	movwf	??_i2c_lcd_home
 14847  1B33  307D               	movlw	125
 14848  1B34                     u5917:
 14849  1B34  0B89               	decfsz	9,f
 14850  1B35  2B34               	goto	u5917
 14851  1B36  0BB7               	decfsz	??_i2c_lcd_home,f
 14852  1B37  2B34               	goto	u5917
 14853  1B38  0008               	return
 14854  1B39                     __end_of_i2c_lcd_home:
 14855                           
 14856                           	psect	text43
 14857  1B1F                     __ptext43:	
 14858 ;; *************** function _i2c_lcd_clear *****************
 14859 ;; Defined at:
 14860 ;;		line 168 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 14861 ;; Parameters:    Size  Location     Type
 14862 ;;		None
 14863 ;; Auto vars:     Size  Location     Type
 14864 ;;		None
 14865 ;; Return value:  Size  Location     Type
 14866 ;;                  1    wreg      void 
 14867 ;; Registers used:
 14868 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14869 ;; Tracked objects:
 14870 ;;		On entry : 1F/0
 14871 ;;		On exit  : 0/0
 14872 ;;		Unchanged: 0/0
 14873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14876 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14877 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14878 ;;Total ram usage:        1 bytes
 14879 ;; Hardware stack levels used:    1
 14880 ;; Hardware stack levels required when called:   12
 14881 ;; This function calls:
 14882 ;;		_i2c_lcd_send_command
 14883 ;; This function is called by:
 14884 ;;		_main
 14885 ;; This function uses a non-reentrant model
 14886 ;;
 14887                           
 14888                           
 14889                           ;psect for function _i2c_lcd_clear
 14890  1B1F                     _i2c_lcd_clear:
 14891                           
 14892                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 169:     i2c_lcd_send_command(0x01);
 14893                           
 14894                           ;incstack = 0
 14895                           ; Regs used in _i2c_lcd_clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14896  1B1F  3001               	movlw	1
 14897  1B20  3193  23ED  319B   	fcall	_i2c_lcd_send_command
 14898                           
 14899                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 170:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 14900  1B23  3007               	movlw	7
 14901  1B24  0020               	movlb	0	; select bank0
 14902  1B25  00B7               	movwf	??_i2c_lcd_clear
 14903  1B26  307D               	movlw	125
 14904  1B27                     u5927:
 14905  1B27  0B89               	decfsz	9,f
 14906  1B28  2B27               	goto	u5927
 14907  1B29  0BB7               	decfsz	??_i2c_lcd_clear,f
 14908  1B2A  2B27               	goto	u5927
 14909  1B2B  0008               	return
 14910  1B2C                     __end_of_i2c_lcd_clear:
 14911                           
 14912                           	psect	text44
 14913  13ED                     __ptext44:	
 14914 ;; *************** function _i2c_lcd_send_command *****************
 14915 ;; Defined at:
 14916 ;;		line 49 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 14917 ;; Parameters:    Size  Location     Type
 14918 ;;  data            1    wreg     unsigned char 
 14919 ;; Auto vars:     Size  Location     Type
 14920 ;;  data            1   18[BANK0 ] unsigned char 
 14921 ;;  lowerdata       1   22[BANK0 ] unsigned char 
 14922 ;;  upperdata       1   21[BANK0 ] unsigned char 
 14923 ;;  lowerdata_en    1   20[BANK0 ] unsigned char 
 14924 ;;  upperdata_en    1   19[BANK0 ] unsigned char 
 14925 ;; Return value:  Size  Location     Type
 14926 ;;                  1    wreg      void 
 14927 ;; Registers used:
 14928 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14929 ;; Tracked objects:
 14930 ;;		On entry : 0/4B00000
 14931 ;;		On exit  : 0/0
 14932 ;;		Unchanged: 0/0
 14933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14935 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14936 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14937 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14938 ;;Total ram usage:        7 bytes
 14939 ;; Hardware stack levels used:    1
 14940 ;; Hardware stack levels required when called:   11
 14941 ;; This function calls:
 14942 ;;		_I2C1_WriteNBytes
 14943 ;; This function is called by:
 14944 ;;		_i2c_lcd_init
 14945 ;;		_i2c_lcd_clear
 14946 ;;		_i2c_lcd_home
 14947 ;;		_i2c_lcd_ulcursor_off
 14948 ;;		_i2c_lcd_set_cursor_pos
 14949 ;; This function uses a non-reentrant model
 14950 ;;
 14951                           
 14952                           
 14953                           ;psect for function _i2c_lcd_send_command
 14954  13ED                     _i2c_lcd_send_command:
 14955                           
 14956                           ;incstack = 0
 14957                           ; Regs used in _i2c_lcd_send_command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14958                           ;i2c_lcd_send_command@data stored from wreg
 14959  13ED  0020               	movlb	0	; select bank0
 14960  13EE  00B2               	movwf	i2c_lcd_send_command@data
 14961                           
 14962                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 49: void i2c_lcd_send_command(unsigned char da
      +                          ta);lcd_driver_files/i2c-lcdlib-ceg003400.c: 50:     {;lcd_driver_files/i2c-lcdlib-ceg00
      +                          3400.c: 51:     unsigned char upperdata, upperdata_en, lowerdata, lowerdata_en;;lcd_driv
      +                          er_files/i2c-lcdlib-ceg003400.c: 54:     upperdata = (data & 0xf0) | 0b00001000;
 14963  13EF  0832               	movf	i2c_lcd_send_command@data,w
 14964  13F0  39F0               	andlw	240
 14965  13F1  3808               	iorlw	8
 14966  13F2  00B0               	movwf	??_i2c_lcd_send_command
 14967  13F3  0830               	movf	??_i2c_lcd_send_command,w
 14968  13F4  00B5               	movwf	i2c_lcd_send_command@upperdata
 14969                           
 14970                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 55:     upperdata_en = upperdata | 0b00000100;
 14971  13F5  0835               	movf	i2c_lcd_send_command@upperdata,w
 14972  13F6  3804               	iorlw	4
 14973  13F7  00B0               	movwf	??_i2c_lcd_send_command
 14974  13F8  0830               	movf	??_i2c_lcd_send_command,w
 14975  13F9  00B3               	movwf	i2c_lcd_send_command@upperdata_en
 14976                           
 14977                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 56:     lowerdata = ((data << 4) & 0xf0) | 0b0
      +                          0001000 ;
 14978  13FA  0832               	movf	i2c_lcd_send_command@data,w
 14979  13FB  00B0               	movwf	??_i2c_lcd_send_command
 14980  13FC  3003               	movlw	3
 14981  13FD                     u5375:
 14982  13FD  35B0               	lslf	??_i2c_lcd_send_command,f
 14983  13FE  3EFF               	addlw	-1
 14984  13FF  1D03               	skipz
 14985  1400  2BFD               	goto	u5375
 14986  1401  3530               	lslf	??_i2c_lcd_send_command,w
 14987  1402  39F0               	andlw	240
 14988  1403  3808               	iorlw	8
 14989  1404  00B1               	movwf	??_i2c_lcd_send_command+1
 14990  1405  0831               	movf	??_i2c_lcd_send_command+1,w
 14991  1406  00B6               	movwf	i2c_lcd_send_command@lowerdata
 14992                           
 14993                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 57:     lowerdata_en = lowerdata | 0b00000100;
 14994  1407  0836               	movf	i2c_lcd_send_command@lowerdata,w
 14995  1408  3804               	iorlw	4
 14996  1409  00B0               	movwf	??_i2c_lcd_send_command
 14997  140A  0830               	movf	??_i2c_lcd_send_command,w
 14998  140B  00B4               	movwf	i2c_lcd_send_command@lowerdata_en
 14999                           
 15000                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 58:       I2C1_WriteNBytes(0x25, &upperdata_en
      +                          ,1);
 15001  140C  3033               	movlw	(low (i2c_lcd_send_command@upperdata_en| 0))& (0+255)
 15002  140D  00B0               	movwf	??_i2c_lcd_send_command
 15003  140E  0830               	movf	??_i2c_lcd_send_command,w
 15004  140F  00AC               	movwf	I2C1_WriteNBytes@data
 15005  1410  3001               	movlw	1
 15006  1411  00AD               	movwf	I2C1_WriteNBytes@len
 15007  1412  3000               	movlw	0
 15008  1413  00AE               	movwf	I2C1_WriteNBytes@len+1
 15009  1414  3025               	movlw	37
 15010  1415  319E  26C4  3193   	fcall	_I2C1_WriteNBytes
 15011                           
 15012                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 59:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 15013  1418  0000               	nop
 15014                           
 15015                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 61:      I2C1_WriteNBytes(0x25, &upperdata, 1)
      +                          ;
 15016  1419  3035               	movlw	(low (i2c_lcd_send_command@upperdata| 0))& (0+255)
 15017  141A  0020               	movlb	0	; select bank0
 15018  141B  00B0               	movwf	??_i2c_lcd_send_command
 15019  141C  0830               	movf	??_i2c_lcd_send_command,w
 15020  141D  00AC               	movwf	I2C1_WriteNBytes@data
 15021  141E  3001               	movlw	1
 15022  141F  00AD               	movwf	I2C1_WriteNBytes@len
 15023  1420  3000               	movlw	0
 15024  1421  00AE               	movwf	I2C1_WriteNBytes@len+1
 15025  1422  3025               	movlw	37
 15026  1423  319E  26C4  3193   	fcall	_I2C1_WriteNBytes
 15027                           
 15028                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 62:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 15029  1426  0000               	nop
 15030                           
 15031                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 66:     I2C1_WriteNBytes(0x25, &lowerdata_en, 
      +                          1);
 15032  1427  3034               	movlw	(low (i2c_lcd_send_command@lowerdata_en| 0))& (0+255)
 15033  1428  0020               	movlb	0	; select bank0
 15034  1429  00B0               	movwf	??_i2c_lcd_send_command
 15035  142A  0830               	movf	??_i2c_lcd_send_command,w
 15036  142B  00AC               	movwf	I2C1_WriteNBytes@data
 15037  142C  3001               	movlw	1
 15038  142D  00AD               	movwf	I2C1_WriteNBytes@len
 15039  142E  3000               	movlw	0
 15040  142F  00AE               	movwf	I2C1_WriteNBytes@len+1
 15041  1430  3025               	movlw	37
 15042  1431  319E  26C4  3193   	fcall	_I2C1_WriteNBytes
 15043                           
 15044                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 67:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 15045  1434  0000               	nop
 15046                           
 15047                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 69:     I2C1_WriteNBytes(0x25, &lowerdata, 1);
 15048  1435  3036               	movlw	(low (i2c_lcd_send_command@lowerdata| 0))& (0+255)
 15049  1436  0020               	movlb	0	; select bank0
 15050  1437  00B0               	movwf	??_i2c_lcd_send_command
 15051  1438  0830               	movf	??_i2c_lcd_send_command,w
 15052  1439  00AC               	movwf	I2C1_WriteNBytes@data
 15053  143A  3001               	movlw	1
 15054  143B  00AD               	movwf	I2C1_WriteNBytes@len
 15055  143C  3000               	movlw	0
 15056  143D  00AE               	movwf	I2C1_WriteNBytes@len+1
 15057  143E  3025               	movlw	37
 15058  143F  319E  26C4         	fcall	_I2C1_WriteNBytes
 15059                           
 15060                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 70:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 15061  1441  0000               	nop
 15062  1442  0008               	return
 15063  1443                     __end_of_i2c_lcd_send_command:
 15064                           
 15065                           	psect	text45
 15066  1EC4                     __ptext45:	
 15067 ;; *************** function _I2C1_WriteNBytes *****************
 15068 ;; Defined at:
 15069 ;;		line 111 in file "mcc_generated_files/examples/i2c1_master_example.c"
 15070 ;; Parameters:    Size  Location     Type
 15071 ;;  address         1    wreg     unsigned char 
 15072 ;;  data            1   12[BANK0 ] PTR unsigned char 
 15073 ;;		 -> i2c_lcd_send_data@lowerdata_en(1), i2c_lcd_send_data@lowerdata(1), i2c_lcd_send_data@upperdata_en(1), i2c_lcd_se
      +nd_data@upperdata(1), 
 15074 ;;		 -> i2c_lcd_send_upper4bit@upperdata_en(1), i2c_lcd_send_upper4bit@upperdata(1), i2c_lcd_send_command@lowerdata_en(1
      +), i2c_lcd_send_command@lowerdata(1), 
 15075 ;;		 -> i2c_lcd_send_command@upperdata_en(1), i2c_lcd_send_command@upperdata(1), 
 15076 ;;  len             2   13[BANK0 ] unsigned int 
 15077 ;; Auto vars:     Size  Location     Type
 15078 ;;  address         1   15[BANK0 ] unsigned char 
 15079 ;; Return value:  Size  Location     Type
 15080 ;;                  1    wreg      void 
 15081 ;; Registers used:
 15082 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15083 ;; Tracked objects:
 15084 ;;		On entry : 1F/0
 15085 ;;		On exit  : 1F/0
 15086 ;;		Unchanged: 0/0
 15087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15088 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15089 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15091 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15092 ;;Total ram usage:        4 bytes
 15093 ;; Hardware stack levels used:    1
 15094 ;; Hardware stack levels required when called:   10
 15095 ;; This function calls:
 15096 ;;		_I2C1_Close
 15097 ;;		_I2C1_MasterWrite
 15098 ;;		_I2C1_Open
 15099 ;;		_I2C1_SetAddressNackCallback
 15100 ;;		_I2C1_SetBuffer
 15101 ;; This function is called by:
 15102 ;;		_i2c_lcd_send_command
 15103 ;;		_i2c_lcd_send_upper4bit
 15104 ;;		_i2c_lcd_send_data
 15105 ;; This function uses a non-reentrant model
 15106 ;;
 15107                           
 15108                           
 15109                           ;psect for function _I2C1_WriteNBytes
 15110  1EC4                     _I2C1_WriteNBytes:
 15111                           
 15112                           ;incstack = 0
 15113                           ; Regs used in _I2C1_WriteNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15114                           ;I2C1_WriteNBytes@address stored from wreg
 15115  1EC4  00AF               	movwf	I2C1_WriteNBytes@address
 15116  1EC5                     l7012:	
 15117                           ;mcc_generated_files/examples/i2c1_master_example.c: 111: void I2C1_WriteNBytes(i2c1_add
      +                          ress_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c1_master_exam
      +                          ple.c: 112: {;mcc_generated_files/examples/i2c1_master_example.c: 113:     while(!I2C1_O
      +                          pen(address));
 15118                           
 15119  1EC5  082F               	movf	I2C1_WriteNBytes@address,w
 15120  1EC6  3191  217E  319E   	fcall	_I2C1_Open
 15121  1EC9  3A00               	xorlw	0
 15122  1ECA  1903               	skipnz
 15123  1ECB  2EC5               	goto	l7012
 15124                           
 15125                           ;mcc_generated_files/examples/i2c1_master_example.c: 114:     I2C1_SetBuffer(data,len);
 15126  1ECC  082C               	movf	I2C1_WriteNBytes@data,w
 15127  1ECD  00A3               	movwf	I2C1_SetBuffer@buffer
 15128  1ECE  3000               	movlw	0
 15129  1ECF  00A4               	movwf	I2C1_SetBuffer@buffer+1
 15130  1ED0  082E               	movf	I2C1_WriteNBytes@len+1,w
 15131  1ED1  00A6               	movwf	I2C1_SetBuffer@bufferSize+1
 15132  1ED2  082D               	movf	I2C1_WriteNBytes@len,w
 15133  1ED3  00A5               	movwf	I2C1_SetBuffer@bufferSize
 15134  1ED4  319C  2468  319E   	fcall	_I2C1_SetBuffer
 15135                           
 15136                           ;mcc_generated_files/examples/i2c1_master_example.c: 115:     I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 15137  1ED7  3000               	movlw	0
 15138  1ED8  0020               	movlb	0	; select bank0
 15139  1ED9  00A8               	movwf	I2C1_SetAddressNackCallback@cb
 15140  1EDA  00A9               	movwf	I2C1_SetAddressNackCallback@cb+1
 15141  1EDB  01AA               	clrf	I2C1_SetAddressNackCallback@ptr
 15142  1EDC  319B  2307  319E   	fcall	_I2C1_SetAddressNackCallback
 15143                           
 15144                           ;mcc_generated_files/examples/i2c1_master_example.c: 116:     I2C1_MasterWrite();
 15145  1EDF  3187  27FC  319E   	fcall	_I2C1_MasterWrite
 15146  1EE2                     l7020:	
 15147                           ;mcc_generated_files/examples/i2c1_master_example.c: 117:     while(I2C1_BUSY == I2C1_Cl
      +                          ose());
 15148                           
 15149  1EE2  319D  25A3  319E   	fcall	_I2C1_Close
 15150  1EE5  3A01               	xorlw	1
 15151  1EE6  1D03               	btfss	3,2
 15152  1EE7  0008               	return
 15153  1EE8  2EE2               	goto	l7020
 15154  1EE9                     __end_of_I2C1_WriteNBytes:
 15155                           
 15156                           	psect	text46
 15157  1570                     __ptext46:	
 15158 ;; *************** function _chk6422warning *****************
 15159 ;; Defined at:
 15160 ;;		line 297 in file "main.c"
 15161 ;; Parameters:    Size  Location     Type
 15162 ;;		None
 15163 ;; Auto vars:     Size  Location     Type
 15164 ;;		None
 15165 ;; Return value:  Size  Location     Type
 15166 ;;                  1    wreg      unsigned char 
 15167 ;; Registers used:
 15168 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15169 ;; Tracked objects:
 15170 ;;		On entry : 1F/4900000
 15171 ;;		On exit  : 1D/0
 15172 ;;		Unchanged: 0/0
 15173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15176 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15177 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15178 ;;Total ram usage:       18 bytes
 15179 ;; Hardware stack levels used:    1
 15180 ;; Hardware stack levels required when called:   11
 15181 ;; This function calls:
 15182 ;;		_i2c_read1ByteRegister
 15183 ;; This function is called by:
 15184 ;;		_main
 15185 ;; This function uses a non-reentrant model
 15186 ;;
 15187                           
 15188                           
 15189                           ;psect for function _chk6422warning
 15190  1570                     _chk6422warning:
 15191                           
 15192                           ;main.c: 299: static uint8_t lasttime, ocdc, otshut, otwarn,clip,ilim,prail;;main.c: 300
      +                          :     ocdc = i2c_read1ByteRegister(0x6a, 0x10);
 15193                           
 15194                           ;incstack = 0
 15195                           ; Regs used in _chk6422warning: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15196  1570  3010               	movlw	16
 15197  1571  00B3               	movwf	??_chk6422warning
 15198  1572  0833               	movf	??_chk6422warning,w
 15199  1573  00AC               	movwf	i2c_read1ByteRegister@reg
 15200  1574  306A               	movlw	106
 15201  1575  3191  2137  3195   	fcall	_i2c_read1ByteRegister
 15202  1578  00B4               	movwf	??_chk6422warning+1
 15203  1579  0834               	movf	??_chk6422warning+1,w
 15204  157A  0022               	movlb	2	; select bank2
 15205  157B  00BA               	movwf	chk6422warning@ocdc^(0+256)
 15206                           
 15207                           ;main.c: 301:     otwarn = i2c_read1ByteRegister(0x6a, 0x13);
 15208  157C  3013               	movlw	19
 15209  157D  0020               	movlb	0	; select bank0
 15210  157E  00B3               	movwf	??_chk6422warning
 15211  157F  0833               	movf	??_chk6422warning,w
 15212  1580  00AC               	movwf	i2c_read1ByteRegister@reg
 15213  1581  306A               	movlw	106
 15214  1582  3191  2137  3195   	fcall	_i2c_read1ByteRegister
 15215  1585  00B4               	movwf	??_chk6422warning+1
 15216  1586  0834               	movf	??_chk6422warning+1,w
 15217  1587  0022               	movlb	2	; select bank2
 15218  1588  00B8               	movwf	chk6422warning@otwarn^(0+256)
 15219                           
 15220                           ;main.c: 302:     clip = i2c_read1ByteRegister(0x6a, 0x24);
 15221  1589  3024               	movlw	36
 15222  158A  0020               	movlb	0	; select bank0
 15223  158B  00B3               	movwf	??_chk6422warning
 15224  158C  0833               	movf	??_chk6422warning,w
 15225  158D  00AC               	movwf	i2c_read1ByteRegister@reg
 15226  158E  306A               	movlw	106
 15227  158F  3191  2137  3195   	fcall	_i2c_read1ByteRegister
 15228  1592  00B4               	movwf	??_chk6422warning+1
 15229  1593  0834               	movf	??_chk6422warning+1,w
 15230  1594  0022               	movlb	2	; select bank2
 15231  1595  00B7               	movwf	chk6422warning@clip^(0+256)
 15232                           
 15233                           ;main.c: 303:     ilim = i2c_read1ByteRegister(0x6a, 0x25);
 15234  1596  3025               	movlw	37
 15235  1597  0020               	movlb	0	; select bank0
 15236  1598  00B3               	movwf	??_chk6422warning
 15237  1599  0833               	movf	??_chk6422warning,w
 15238  159A  00AC               	movwf	i2c_read1ByteRegister@reg
 15239  159B  306A               	movlw	106
 15240  159C  3191  2137  3195   	fcall	_i2c_read1ByteRegister
 15241  159F  00B4               	movwf	??_chk6422warning+1
 15242  15A0  0834               	movf	??_chk6422warning+1,w
 15243  15A1  0022               	movlb	2	; select bank2
 15244  15A2  00B6               	movwf	chk6422warning@ilim^(0+256)
 15245                           
 15246                           ;main.c: 304:     otshut = i2c_read1ByteRegister(0x6a, 0x12);
 15247  15A3  3012               	movlw	18
 15248  15A4  0020               	movlb	0	; select bank0
 15249  15A5  00B3               	movwf	??_chk6422warning
 15250  15A6  0833               	movf	??_chk6422warning,w
 15251  15A7  00AC               	movwf	i2c_read1ByteRegister@reg
 15252  15A8  306A               	movlw	106
 15253  15A9  3191  2137  3195   	fcall	_i2c_read1ByteRegister
 15254  15AC  00B4               	movwf	??_chk6422warning+1
 15255  15AD  0834               	movf	??_chk6422warning+1,w
 15256  15AE  0022               	movlb	2	; select bank2
 15257  15AF  00B9               	movwf	chk6422warning@otshut^(0+256)
 15258                           
 15259                           ;main.c: 305:     prail = i2c_read1ByteRegister(0x6a, 0x11);
 15260  15B0  3011               	movlw	17
 15261  15B1  0020               	movlb	0	; select bank0
 15262  15B2  00B3               	movwf	??_chk6422warning
 15263  15B3  0833               	movf	??_chk6422warning,w
 15264  15B4  00AC               	movwf	i2c_read1ByteRegister@reg
 15265  15B5  306A               	movlw	106
 15266  15B6  3191  2137  3195   	fcall	_i2c_read1ByteRegister
 15267  15B9  00B4               	movwf	??_chk6422warning+1
 15268  15BA  0834               	movf	??_chk6422warning+1,w
 15269  15BB  0022               	movlb	2	; select bank2
 15270  15BC  00B5               	movwf	chk6422warning@prail^(0+256)
 15271                           
 15272                           ;main.c: 306:     if(lasttime == (ocdc + otshut + otwarn + clip +ilim + prail ))
 15273  15BD  0835               	movf	chk6422warning@prail^(0+256),w
 15274  15BE  0020               	movlb	0	; select bank0
 15275  15BF  00B3               	movwf	??_chk6422warning
 15276  15C0  01B4               	clrf	??_chk6422warning+1
 15277  15C1  0022               	movlb	2	; select bank2
 15278  15C2  0836               	movf	chk6422warning@ilim^(0+256),w
 15279  15C3  0020               	movlb	0	; select bank0
 15280  15C4  00B5               	movwf	??_chk6422warning+2
 15281  15C5  01B6               	clrf	??_chk6422warning+3
 15282  15C6  0022               	movlb	2	; select bank2
 15283  15C7  0837               	movf	chk6422warning@clip^(0+256),w
 15284  15C8  0020               	movlb	0	; select bank0
 15285  15C9  00B7               	movwf	??_chk6422warning+4
 15286  15CA  01B8               	clrf	??_chk6422warning+5
 15287  15CB  0022               	movlb	2	; select bank2
 15288  15CC  0838               	movf	chk6422warning@otwarn^(0+256),w
 15289  15CD  0020               	movlb	0	; select bank0
 15290  15CE  00B9               	movwf	??_chk6422warning+6
 15291  15CF  01BA               	clrf	??_chk6422warning+7
 15292  15D0  0022               	movlb	2	; select bank2
 15293  15D1  083A               	movf	chk6422warning@ocdc^(0+256),w
 15294  15D2  0739               	addwf	chk6422warning@otshut^(0+256),w
 15295  15D3  0020               	movlb	0	; select bank0
 15296  15D4  00BB               	movwf	??_chk6422warning+8
 15297  15D5  01BC               	clrf	??_chk6422warning+9
 15298  15D6  0DBC               	rlf	??_chk6422warning+9,f
 15299  15D7  0839               	movf	??_chk6422warning+6,w
 15300  15D8  073B               	addwf	??_chk6422warning+8,w
 15301  15D9  00BD               	movwf	??_chk6422warning+10
 15302  15DA  083A               	movf	??_chk6422warning+7,w
 15303  15DB  3D3C               	addwfc	??_chk6422warning+9,w
 15304  15DC  00BE               	movwf	??_chk6422warning+11
 15305  15DD  0837               	movf	??_chk6422warning+4,w
 15306  15DE  073D               	addwf	??_chk6422warning+10,w
 15307  15DF  00BF               	movwf	??_chk6422warning+12
 15308  15E0  0838               	movf	??_chk6422warning+5,w
 15309  15E1  3D3E               	addwfc	??_chk6422warning+11,w
 15310  15E2  00C0               	movwf	??_chk6422warning+13
 15311  15E3  0835               	movf	??_chk6422warning+2,w
 15312  15E4  073F               	addwf	??_chk6422warning+12,w
 15313  15E5  00C1               	movwf	??_chk6422warning+14
 15314  15E6  0836               	movf	??_chk6422warning+3,w
 15315  15E7  3D40               	addwfc	??_chk6422warning+13,w
 15316  15E8  00C2               	movwf	??_chk6422warning+15
 15317  15E9  0833               	movf	??_chk6422warning,w
 15318  15EA  0741               	addwf	??_chk6422warning+14,w
 15319  15EB  00C3               	movwf	??_chk6422warning+16
 15320  15EC  0834               	movf	??_chk6422warning+1,w
 15321  15ED  3D42               	addwfc	??_chk6422warning+15,w
 15322  15EE  00C4               	movwf	??_chk6422warning+17
 15323  15EF  0022               	movlb	2	; select bank2
 15324  15F0  083B               	movf	chk6422warning@lasttime^(0+256),w
 15325  15F1  0020               	movlb	0	; select bank0
 15326  15F2  0643               	xorwf	??_chk6422warning+16,w
 15327  15F3  0444               	iorwf	??_chk6422warning+17,w
 15328  15F4  1D03               	skipz
 15329  15F5  2DF8               	goto	l7606
 15330                           
 15331                           ;main.c: 307:              return(0);
 15332  15F6  3000               	movlw	0
 15333  15F7  0008               	return
 15334  15F8                     l7606:
 15335                           
 15336                           ;main.c: 309:      {;main.c: 310:       lasttime = ocdc + otshut + otwarn + clip +ilim +
      +                           prail ;
 15337  15F8  0022               	movlb	2	; select bank2
 15338  15F9  083A               	movf	chk6422warning@ocdc^(0+256),w
 15339  15FA  0739               	addwf	chk6422warning@otshut^(0+256),w
 15340  15FB  0738               	addwf	chk6422warning@otwarn^(0+256),w
 15341  15FC  0737               	addwf	chk6422warning@clip^(0+256),w
 15342  15FD  0736               	addwf	chk6422warning@ilim^(0+256),w
 15343  15FE  0735               	addwf	chk6422warning@prail^(0+256),w
 15344  15FF  0020               	movlb	0	; select bank0
 15345  1600  00B3               	movwf	??_chk6422warning
 15346  1601  0833               	movf	??_chk6422warning,w
 15347  1602  0022               	movlb	2	; select bank2
 15348  1603  00BB               	movwf	chk6422warning@lasttime^(0+256)
 15349                           
 15350                           ;main.c: 311:       return(1);
 15351  1604  3001               	movlw	1
 15352  1605  0008               	return
 15353  1606                     __end_of_chk6422warning:
 15354                           
 15355                           	psect	text47
 15356  1137                     __ptext47:	
 15357 ;; *************** function _i2c_read1ByteRegister *****************
 15358 ;; Defined at:
 15359 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15360 ;; Parameters:    Size  Location     Type
 15361 ;;  address         1    wreg     unsigned char 
 15362 ;;  reg             1   12[BANK0 ] unsigned char 
 15363 ;; Auto vars:     Size  Location     Type
 15364 ;;  address         1   14[BANK0 ] unsigned char 
 15365 ;;  x               2   16[BANK0 ] int 
 15366 ;;  d2              1   18[BANK0 ] unsigned char 
 15367 ;;  e               1   15[BANK0 ] enum E355
 15368 ;; Return value:  Size  Location     Type
 15369 ;;                  1    wreg      unsigned char 
 15370 ;; Registers used:
 15371 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15372 ;; Tracked objects:
 15373 ;;		On entry : 1F/4900000
 15374 ;;		On exit  : 1F/0
 15375 ;;		Unchanged: 0/0
 15376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15377 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15378 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15379 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15380 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15381 ;;Total ram usage:        7 bytes
 15382 ;; Hardware stack levels used:    1
 15383 ;; Hardware stack levels required when called:   10
 15384 ;; This function calls:
 15385 ;;		_I2C1_Close
 15386 ;;		_I2C1_MasterWrite
 15387 ;;		_I2C1_Open
 15388 ;;		_I2C1_SetAddressNackCallback
 15389 ;;		_I2C1_SetBuffer
 15390 ;;		_I2C1_SetDataCompleteCallback
 15391 ;; This function is called by:
 15392 ;;		_chk6422warning
 15393 ;;		_main
 15394 ;;		_lcd_disp_param
 15395 ;; This function uses a non-reentrant model
 15396 ;;
 15397                           
 15398                           
 15399                           ;psect for function _i2c_read1ByteRegister
 15400  1137                     _i2c_read1ByteRegister:
 15401                           
 15402                           ;incstack = 0
 15403                           ; Regs used in _i2c_read1ByteRegister: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 15404                           ;i2c_read1ByteRegister@address stored from wreg
 15405  1137  00AE               	movwf	i2c_read1ByteRegister@address
 15406                           
 15407                           ;mcc_generated_files/drivers/i2c_simple_master.c: 65: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 66: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 67:     uint8_t d2=42;
 15408  1138  302A               	movlw	42
 15409  1139  00AD               	movwf	??_i2c_read1ByteRegister
 15410  113A  082D               	movf	??_i2c_read1ByteRegister,w
 15411  113B  00B2               	movwf	i2c_read1ByteRegister@d2
 15412                           
 15413                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     i2c1_error_t e;;mcc_generated_
      +                          files/drivers/i2c_simple_master.c: 69:     int x;;mcc_generated_files/drivers/i2c_simple
      +                          _master.c: 71:     for(x = 2; x != 0; x--)
 15414  113C  3002               	movlw	2
 15415  113D  00B0               	movwf	i2c_read1ByteRegister@x
 15416  113E  3000               	movlw	0
 15417  113F  00B1               	movwf	i2c_read1ByteRegister@x+1
 15418  1140                     l7438:
 15419  1140  082E               	movf	i2c_read1ByteRegister@address,w
 15420  1141  3191  217E  3191   	fcall	_I2C1_Open
 15421  1144  3A00               	xorlw	0
 15422  1145  1903               	skipnz
 15423  1146  2940               	goto	l7438
 15424                           
 15425                           ;mcc_generated_files/drivers/i2c_simple_master.c: 74:         I2C1_SetDataCompleteCallba
      +                          ck(rd1RegCompleteHandler,&d2);
 15426  1147  30EA               	movlw	low _rd1RegCompleteHandler
 15427  1148  00A8               	movwf	I2C1_SetDataCompleteCallback@cb
 15428  1149  301B               	movlw	high _rd1RegCompleteHandler
 15429  114A  00A9               	movwf	I2C1_SetDataCompleteCallback@cb+1
 15430  114B  3032               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 15431  114C  00AD               	movwf	??_i2c_read1ByteRegister
 15432  114D  082D               	movf	??_i2c_read1ByteRegister,w
 15433  114E  00AA               	movwf	I2C1_SetDataCompleteCallback@ptr
 15434  114F  319B  2313  3191   	fcall	_I2C1_SetDataCompleteCallback
 15435                           
 15436                           ;mcc_generated_files/drivers/i2c_simple_master.c: 75:         I2C1_SetBuffer(&reg,1);
 15437  1152  302C               	movlw	low i2c_read1ByteRegister@reg
 15438  1153  00A3               	movwf	I2C1_SetBuffer@buffer
 15439  1154  3000               	movlw	high i2c_read1ByteRegister@reg
 15440  1155  00A4               	movwf	I2C1_SetBuffer@buffer+1
 15441  1156  3001               	movlw	1
 15442  1157  00A5               	movwf	I2C1_SetBuffer@bufferSize
 15443  1158  3000               	movlw	0
 15444  1159  00A6               	movwf	I2C1_SetBuffer@bufferSize+1
 15445  115A  319C  2468  3191   	fcall	_I2C1_SetBuffer
 15446                           
 15447                           ;mcc_generated_files/drivers/i2c_simple_master.c: 76:         I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 15448  115D  3000               	movlw	0
 15449  115E  0020               	movlb	0	; select bank0
 15450  115F  00A8               	movwf	I2C1_SetAddressNackCallback@cb
 15451  1160  00A9               	movwf	I2C1_SetAddressNackCallback@cb+1
 15452  1161  01AA               	clrf	I2C1_SetAddressNackCallback@ptr
 15453  1162  319B  2307  3191   	fcall	_I2C1_SetAddressNackCallback
 15454                           
 15455                           ;mcc_generated_files/drivers/i2c_simple_master.c: 77:         I2C1_MasterWrite();
 15456  1165  3187  27FC  3191   	fcall	_I2C1_MasterWrite
 15457  1168                     l7446:	
 15458                           ;mcc_generated_files/drivers/i2c_simple_master.c: 78:         while(I2C1_BUSY == (e = I2
      +                          C1_Close()));
 15459                           
 15460  1168  319D  25A3  3191   	fcall	_I2C1_Close
 15461  116B  00AD               	movwf	??_i2c_read1ByteRegister
 15462  116C  082D               	movf	??_i2c_read1ByteRegister,w
 15463  116D  00AF               	movwf	i2c_read1ByteRegister@e
 15464  116E  032F               	decf	i2c_read1ByteRegister@e,w
 15465  116F  1903               	btfsc	3,2
 15466  1170  2968               	goto	l7446
 15467                           
 15468                           ;mcc_generated_files/drivers/i2c_simple_master.c: 79:         if(e==I2C1_NOERR) break;
 15469  1171  082F               	movf	i2c_read1ByteRegister@e,w
 15470  1172  1903               	btfsc	3,2
 15471  1173  297C               	goto	l7456
 15472                           
 15473                           ;mcc_generated_files/drivers/i2c_simple_master.c: 80:     }
 15474  1174  30FF               	movlw	255
 15475  1175  07B0               	addwf	i2c_read1ByteRegister@x,f
 15476  1176  30FF               	movlw	255
 15477  1177  3DB1               	addwfc	i2c_read1ByteRegister@x+1,f
 15478  1178  0830               	movf	i2c_read1ByteRegister@x,w
 15479  1179  0431               	iorwf	i2c_read1ByteRegister@x+1,w
 15480  117A  1D03               	btfss	3,2
 15481  117B  2940               	goto	l7438
 15482  117C                     l7456:
 15483                           
 15484                           ;mcc_generated_files/drivers/i2c_simple_master.c: 83:     return d2;
 15485  117C  0832               	movf	i2c_read1ByteRegister@d2,w
 15486  117D  0008               	return
 15487  117E                     __end_of_i2c_read1ByteRegister:
 15488                           
 15489                           	psect	text48
 15490  1B13                     __ptext48:	
 15491 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 15492 ;; Defined at:
 15493 ;;		line 275 in file "mcc_generated_files/i2c1_master.c"
 15494 ;; Parameters:    Size  Location     Type
 15495 ;;  cb              2    8[BANK0 ] PTR FTN(PTR void ,)enum 
 15496 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 15497 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 15498 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15499 ;;  ptr             1   10[BANK0 ] PTR void 
 15500 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15501 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 15502 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 15503 ;; Auto vars:     Size  Location     Type
 15504 ;;		None
 15505 ;; Return value:  Size  Location     Type
 15506 ;;                  1    wreg      void 
 15507 ;; Registers used:
 15508 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15509 ;; Tracked objects:
 15510 ;;		On entry : 1F/4900000
 15511 ;;		On exit  : 1F/0
 15512 ;;		Unchanged: 0/0
 15513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15514 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15516 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15517 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15518 ;;Total ram usage:        4 bytes
 15519 ;; Hardware stack levels used:    1
 15520 ;; Hardware stack levels required when called:    8
 15521 ;; This function calls:
 15522 ;;		_I2C1_SetCallback
 15523 ;; This function is called by:
 15524 ;;		_i2c_read1ByteRegister
 15525 ;; This function uses a non-reentrant model
 15526 ;;
 15527                           
 15528                           
 15529                           ;psect for function _I2C1_SetDataCompleteCallback
 15530  1B13                     _I2C1_SetDataCompleteCallback:
 15531                           
 15532                           ;mcc_generated_files/i2c1_master.c: 275: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 276: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 277:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 15533                           
 15534                           ;incstack = 0
 15535                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 15536  1B13  0829               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 15537  1B14  00A4               	movwf	I2C1_SetCallback@cb+1
 15538  1B15  0828               	movf	I2C1_SetDataCompleteCallback@cb,w
 15539  1B16  00A3               	movwf	I2C1_SetCallback@cb
 15540  1B17  082A               	movf	I2C1_SetDataCompleteCallback@ptr,w
 15541  1B18  00AB               	movwf	??_I2C1_SetDataCompleteCallback
 15542  1B19  082B               	movf	??_I2C1_SetDataCompleteCallback,w
 15543  1B1A  00A5               	movwf	I2C1_SetCallback@ptr
 15544  1B1B  3000               	movlw	0
 15545  1B1C  319F  275B         	fcall	_I2C1_SetCallback
 15546  1B1E  0008               	return
 15547  1B1F                     __end_of_I2C1_SetDataCompleteCallback:
 15548                           
 15549                           	psect	text49
 15550  1C68                     __ptext49:	
 15551 ;; *************** function _I2C1_SetBuffer *****************
 15552 ;; Defined at:
 15553 ;;		line 265 in file "mcc_generated_files/i2c1_master.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;  buffer          2    3[BANK0 ] PTR void 
 15556 ;;		 -> tasbuff(2), TAS_NORMAL(2), TAS_CLEAR_FALT(2), TAS_CHK_RAILS(2), 
 15557 ;;		 -> TAS_PLAY(2), TAS_MUTE(2), TAS_FS96K(2), TAS_FS48K(2), 
 15558 ;;		 -> TAS_FS44K(2), TAS_AC(2), TAS_DCDIAG_CLEAR(2), TAS_RUN(2), 
 15559 ;;		 -> TAS_RESET(2), INIT9211_31(2), INIT9211_27(2), INIT9211_26(2), 
 15560 ;;		 -> INIT9211_2B(2), INIT9211_2E(2), INIT9211_20(2), ADC_96K(2), 
 15561 ;;		 -> ADC_DC(2), DIT_I2S(2), DIT_LVDS(2), DIT_ADC(2), 
 15562 ;;		 -> DIT_DIR(2), ADC_ATTR_3dB(2), ADC_ATTL_3dB(2), CALC_MOUT(2), 
 15563 ;;		 -> DIR_COAX(2), DIR_OPT(2), AUXSRC_LVDS(2), AUXSRC_ADC(2), 
 15564 ;;		 -> AUXSRC_DIR(2), AUXSRC_AUTO(2), SRC_I2S(2), SRC_LVDS(2), 
 15565 ;;		 -> SRC_ADC(2), SRC_DIR(2), I2S_IN(2), I2S_OUT(2), 
 15566 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 15567 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 15568 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBloc
      +k@d(3), 
 15569 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 15570 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 15571 ;;		 -> NULL(0), i2c_lcd_send_data@lowerdata_en(1), i2c_lcd_send_data@lowerdata(1), i2c_lcd_send_data@upperdata_en(1), 
 15572 ;;		 -> i2c_lcd_send_data@upperdata(1), i2c_lcd_send_upper4bit@upperdata_en(1), i2c_lcd_send_upper4bit@upperdata(1), i2c
      +_lcd_send_command@lowerdata_en(1), 
 15573 ;;		 -> i2c_lcd_send_command@lowerdata(1), i2c_lcd_send_command@upperdata_en(1), i2c_lcd_send_command@upperdata(1), 
 15574 ;;  bufferSize      2    5[BANK0 ] unsigned int 
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;		None
 15577 ;; Return value:  Size  Location     Type
 15578 ;;                  1    wreg      void 
 15579 ;; Registers used:
 15580 ;;		wreg
 15581 ;; Tracked objects:
 15582 ;;		On entry : 1F/4900000
 15583 ;;		On exit  : 1F/3
 15584 ;;		Unchanged: 0/0
 15585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15586 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15589 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15590 ;;Total ram usage:        4 bytes
 15591 ;; Hardware stack levels used:    1
 15592 ;; Hardware stack levels required when called:    7
 15593 ;; This function calls:
 15594 ;;		Nothing
 15595 ;; This function is called by:
 15596 ;;		_i2c_writeNBytes
 15597 ;;		_i2c_read1ByteRegister
 15598 ;;		_I2C1_WriteNBytes
 15599 ;; This function uses a non-reentrant model
 15600 ;;
 15601                           
 15602                           
 15603                           ;psect for function _I2C1_SetBuffer
 15604  1C68                     _I2C1_SetBuffer:
 15605                           
 15606                           ;mcc_generated_files/i2c1_master.c: 265: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 266: {;mcc_generated_files/i2c1_master.c: 267: 
      +                              if(I2C1_Status.bufferFree)
 15607                           
 15608                           ;incstack = 0
 15609                           ; Regs used in _I2C1_SetBuffer: [wreg]
 15610  1C68  0023               	movlb	3	; select bank3
 15611  1C69  1DEC               	btfss	(_I2C1_Status^(0+384)+29),3
 15612  1C6A  0008               	return
 15613                           
 15614                           ;mcc_generated_files/i2c1_master.c: 268:     {;mcc_generated_files/i2c1_master.c: 269:  
      +                                 I2C1_Status.data_ptr = buffer;
 15615  1C6B  0020               	movlb	0	; select bank0
 15616  1C6C  0824               	movf	I2C1_SetBuffer@buffer+1,w
 15617  1C6D  0023               	movlb	3	; select bank3
 15618  1C6E  00E7               	movwf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128)
 15619  1C6F  0020               	movlb	0	; select bank0
 15620  1C70  0823               	movf	I2C1_SetBuffer@buffer,w
 15621  1C71  0023               	movlb	3	; select bank3
 15622  1C72  00E6               	movwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128)
 15623                           
 15624                           ;mcc_generated_files/i2c1_master.c: 270:         I2C1_Status.data_length = bufferSize;
 15625  1C73  0020               	movlb	0	; select bank0
 15626  1C74  0826               	movf	I2C1_SetBuffer@bufferSize+1,w
 15627  1C75  0023               	movlb	3	; select bank3
 15628  1C76  00E9               	movwf	((_I2C1_Status+1)^(0+384)+25)
 15629  1C77  0020               	movlb	0	; select bank0
 15630  1C78  0825               	movf	I2C1_SetBuffer@bufferSize,w
 15631  1C79  0023               	movlb	3	; select bank3
 15632  1C7A  00E8               	movwf	(_I2C1_Status^(0+384)+25)
 15633                           
 15634                           ;mcc_generated_files/i2c1_master.c: 271:         I2C1_Status.bufferFree = 0;
 15635  1C7B  11EC               	bcf	(_I2C1_Status^(0+384)+29),3
 15636  1C7C  0008               	return
 15637  1C7D                     __end_of_I2C1_SetBuffer:
 15638                           
 15639                           	psect	text50
 15640  1B07                     __ptext50:	
 15641 ;; *************** function _I2C1_SetAddressNackCallback *****************
 15642 ;; Defined at:
 15643 ;;		line 285 in file "mcc_generated_files/i2c1_master.c"
 15644 ;; Parameters:    Size  Location     Type
 15645 ;;  cb              2    8[BANK0 ] PTR FTN(PTR void ,)enum 
 15646 ;;		 -> Absolute function(1), 
 15647 ;;  ptr             1   10[BANK0 ] PTR void 
 15648 ;;		 -> NULL(0), 
 15649 ;; Auto vars:     Size  Location     Type
 15650 ;;		None
 15651 ;; Return value:  Size  Location     Type
 15652 ;;                  1    wreg      void 
 15653 ;; Registers used:
 15654 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15655 ;; Tracked objects:
 15656 ;;		On entry : 1F/4900000
 15657 ;;		On exit  : 1F/0
 15658 ;;		Unchanged: 0/0
 15659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15660 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15662 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15663 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15664 ;;Total ram usage:        4 bytes
 15665 ;; Hardware stack levels used:    1
 15666 ;; Hardware stack levels required when called:    8
 15667 ;; This function calls:
 15668 ;;		_I2C1_SetCallback
 15669 ;; This function is called by:
 15670 ;;		_i2c_writeNBytes
 15671 ;;		_i2c_read1ByteRegister
 15672 ;;		_I2C1_WriteNBytes
 15673 ;; This function uses a non-reentrant model
 15674 ;;
 15675                           
 15676                           
 15677                           ;psect for function _I2C1_SetAddressNackCallback
 15678  1B07                     _I2C1_SetAddressNackCallback:
 15679                           
 15680                           ;mcc_generated_files/i2c1_master.c: 285: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 286: {;mcc_generated_files/i2c1_mast
      +                          er.c: 287:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 15681                           
 15682                           ;incstack = 0
 15683                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 15684  1B07  0829               	movf	I2C1_SetAddressNackCallback@cb+1,w
 15685  1B08  00A4               	movwf	I2C1_SetCallback@cb+1
 15686  1B09  0828               	movf	I2C1_SetAddressNackCallback@cb,w
 15687  1B0A  00A3               	movwf	I2C1_SetCallback@cb
 15688  1B0B  082A               	movf	I2C1_SetAddressNackCallback@ptr,w
 15689  1B0C  00AB               	movwf	??_I2C1_SetAddressNackCallback
 15690  1B0D  082B               	movf	??_I2C1_SetAddressNackCallback,w
 15691  1B0E  00A5               	movwf	I2C1_SetCallback@ptr
 15692  1B0F  3002               	movlw	2
 15693  1B10  319F  275B         	fcall	_I2C1_SetCallback
 15694  1B12  0008               	return
 15695  1B13                     __end_of_I2C1_SetAddressNackCallback:
 15696                           
 15697                           	psect	text51
 15698  1F5B                     __ptext51:	
 15699 ;; *************** function _I2C1_SetCallback *****************
 15700 ;; Defined at:
 15701 ;;		line 305 in file "mcc_generated_files/i2c1_master.c"
 15702 ;; Parameters:    Size  Location     Type
 15703 ;;  idx             1    wreg     enum E7176
 15704 ;;  cb              2    3[BANK0 ] PTR FTN(PTR void ,)enum 
 15705 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 15706 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 15707 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 15708 ;;  ptr             1    5[BANK0 ] PTR void 
 15709 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 15710 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 15711 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 15712 ;; Auto vars:     Size  Location     Type
 15713 ;;  idx             1    7[BANK0 ] enum E7176
 15714 ;; Return value:  Size  Location     Type
 15715 ;;                  1    wreg      void 
 15716 ;; Registers used:
 15717 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15718 ;; Tracked objects:
 15719 ;;		On entry : 1F/4900000
 15720 ;;		On exit  : 1F/0
 15721 ;;		Unchanged: 0/0
 15722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15723 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15725 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15726 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15727 ;;Total ram usage:        5 bytes
 15728 ;; Hardware stack levels used:    1
 15729 ;; Hardware stack levels required when called:    7
 15730 ;; This function calls:
 15731 ;;		Nothing
 15732 ;; This function is called by:
 15733 ;;		_I2C1_SetDataCompleteCallback
 15734 ;;		_I2C1_SetAddressNackCallback
 15735 ;; This function uses a non-reentrant model
 15736 ;;
 15737                           
 15738                           
 15739                           ;psect for function _I2C1_SetCallback
 15740  1F5B                     _I2C1_SetCallback:
 15741                           
 15742                           ;incstack = 0
 15743                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 15744                           ;I2C1_SetCallback@idx stored from wreg
 15745  1F5B  00A7               	movwf	I2C1_SetCallback@idx
 15746                           
 15747                           ;mcc_generated_files/i2c1_master.c: 305: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 306: {;mcc_gen
      +                          erated_files/i2c1_master.c: 307:     if(cb)
 15748  1F5C  0823               	movf	I2C1_SetCallback@cb,w
 15749  1F5D  0424               	iorwf	I2C1_SetCallback@cb+1,w
 15750  1F5E  1903               	btfsc	3,2
 15751  1F5F  2F73               	goto	l6578
 15752                           
 15753                           ;mcc_generated_files/i2c1_master.c: 308:     {;mcc_generated_files/i2c1_master.c: 309:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 15754  1F60  3527               	lslf	I2C1_SetCallback@idx,w
 15755  1F61  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15756  1F62  0086               	movwf	6
 15757  1F63  3001               	movlw	1	; select bank3/4
 15758  1F64  0087               	movwf	7
 15759  1F65  0823               	movf	I2C1_SetCallback@cb,w
 15760  1F66  3FC0               	movwi [0]fsr1
 15761  1F67  0824               	movf	I2C1_SetCallback@cb+1,w
 15762  1F68  3FC1               	movwi [1]fsr1
 15763                           
 15764                           ;mcc_generated_files/i2c1_master.c: 310:         I2C1_Status.callbackPayload[idx] = ptr;
 15765  1F69  0825               	movf	I2C1_SetCallback@ptr,w
 15766  1F6A  00A6               	movwf	??_I2C1_SetCallback
 15767  1F6B  0827               	movf	I2C1_SetCallback@idx,w
 15768  1F6C  3EDB               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15769  1F6D  0086               	movwf	6
 15770  1F6E  3001               	movlw	1	; select bank3/4
 15771  1F6F  0087               	movwf	7
 15772  1F70  0826               	movf	??_I2C1_SetCallback,w
 15773  1F71  0081               	movwf	1
 15774                           
 15775                           ;mcc_generated_files/i2c1_master.c: 311:     }
 15776  1F72  0008               	return
 15777  1F73                     l6578:
 15778                           
 15779                           ;mcc_generated_files/i2c1_master.c: 313:     {;mcc_generated_files/i2c1_master.c: 314:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 15780  1F73  3527               	lslf	I2C1_SetCallback@idx,w
 15781  1F74  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 15782  1F75  0086               	movwf	6
 15783  1F76  3001               	movlw	1	; select bank3/4
 15784  1F77  0087               	movwf	7
 15785  1F78  3000               	movlw	low _I2C1_CallbackReturnStop
 15786  1F79  3FC0               	movwi [0]fsr1
 15787  1F7A  3010               	movlw	high _I2C1_CallbackReturnStop
 15788  1F7B  3FC1               	movwi [1]fsr1
 15789                           
 15790                           ;mcc_generated_files/i2c1_master.c: 315:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 15791  1F7C  0827               	movf	I2C1_SetCallback@idx,w
 15792  1F7D  3EDB               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 15793  1F7E  0086               	movwf	6
 15794  1F7F  3001               	movlw	1	; select bank3/4
 15795  1F80  0087               	movwf	7
 15796  1F81  0181               	clrf	1
 15797  1F82  0008               	return
 15798  1F83                     __end_of_I2C1_SetCallback:
 15799                           
 15800                           	psect	text52
 15801  117E                     __ptext52:	
 15802 ;; *************** function _I2C1_Open *****************
 15803 ;; Defined at:
 15804 ;;		line 177 in file "mcc_generated_files/i2c1_master.c"
 15805 ;; Parameters:    Size  Location     Type
 15806 ;;  address         1    wreg     unsigned char 
 15807 ;; Auto vars:     Size  Location     Type
 15808 ;;  address         1    6[BANK0 ] unsigned char 
 15809 ;;  returnValue     1    7[BANK0 ] enum E355
 15810 ;; Return value:  Size  Location     Type
 15811 ;;                  1    wreg      enum E355
 15812 ;; Registers used:
 15813 ;;		wreg, status,2, status,0, pclath, cstack
 15814 ;; Tracked objects:
 15815 ;;		On entry : 1F/4900000
 15816 ;;		On exit  : 1F/0
 15817 ;;		Unchanged: 0/0
 15818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15820 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15821 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15822 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15823 ;;Total ram usage:        3 bytes
 15824 ;; Hardware stack levels used:    1
 15825 ;; Hardware stack levels required when called:    8
 15826 ;; This function calls:
 15827 ;;		_I2C1_MasterClearIrq
 15828 ;;		_I2C1_MasterEnableIrq
 15829 ;;		_I2C1_MasterOpen
 15830 ;;		_I2C1_SetInterruptHandler
 15831 ;; This function is called by:
 15832 ;;		_i2c_writeNBytes
 15833 ;;		_i2c_read1ByteRegister
 15834 ;;		_I2C1_WriteNBytes
 15835 ;; This function uses a non-reentrant model
 15836 ;;
 15837                           
 15838                           
 15839                           ;psect for function _I2C1_Open
 15840  117E                     _I2C1_Open:
 15841                           
 15842                           ;incstack = 0
 15843                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 15844                           ;I2C1_Open@address stored from wreg
 15845  117E  00A6               	movwf	I2C1_Open@address
 15846                           
 15847                           ;mcc_generated_files/i2c1_master.c: 177: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 178: {;mcc_generated_files/i2c1_master.c: 179:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 15848  117F  01A7               	clrf	I2C1_Open@returnValue
 15849  1180  0AA7               	incf	I2C1_Open@returnValue,f
 15850                           
 15851                           ;mcc_generated_files/i2c1_master.c: 181:     if(!I2C1_Status.inUse)
 15852  1181  0023               	movlb	3	; select bank3
 15853  1182  196C               	btfsc	(_I2C1_Status^(0+384)+29),2
 15854  1183  29C3               	goto	l6760
 15855                           
 15856                           ;mcc_generated_files/i2c1_master.c: 182:     {;mcc_generated_files/i2c1_master.c: 183:  
      +                                 I2C1_Status.address = address;
 15857  1184  0020               	movlb	0	; select bank0
 15858  1185  0826               	movf	I2C1_Open@address,w
 15859  1186  00A5               	movwf	??_I2C1_Open
 15860  1187  0825               	movf	??_I2C1_Open,w
 15861  1188  0023               	movlb	3	; select bank3
 15862  1189  00E5               	movwf	(_I2C1_Status^(0+384)+22)
 15863                           
 15864                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.busy = 0;
 15865  118A  10EC               	bcf	(_I2C1_Status^(0+384)+29),1
 15866                           
 15867                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.inUse = 1;
 15868  118B  156C               	bsf	(_I2C1_Status^(0+384)+29),2
 15869                           
 15870                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.addressNackCheck = 0;
 15871  118C  106C               	bcf	(_I2C1_Status^(0+384)+29),0
 15872                           
 15873                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.state = I2C1_RESET;
 15874  118D  300E               	movlw	14
 15875  118E  0020               	movlb	0	; select bank0
 15876  118F  00A5               	movwf	??_I2C1_Open
 15877  1190  0825               	movf	??_I2C1_Open,w
 15878  1191  0023               	movlb	3	; select bank3
 15879  1192  00EA               	movwf	(_I2C1_Status^(0+384)+27)
 15880                           
 15881                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.time_out_value = 500;
 15882  1193  30F4               	movlw	244
 15883  1194  00E3               	movwf	(_I2C1_Status^(0+384)+20)
 15884  1195  3001               	movlw	1
 15885  1196  00E4               	movwf	(_I2C1_Status^(0+384)+21)
 15886                           
 15887                           ;mcc_generated_files/i2c1_master.c: 189:         I2C1_Status.bufferFree = 1;
 15888  1197  15EC               	bsf	(_I2C1_Status^(0+384)+29),3
 15889                           
 15890                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 15891  1198  3000               	movlw	low _I2C1_CallbackReturnStop
 15892  1199  00CF               	movwf	_I2C1_Status^(0+384)
 15893  119A  3010               	movlw	high _I2C1_CallbackReturnStop
 15894  119B  00D0               	movwf	(_I2C1_Status^(0+384)+1)
 15895                           
 15896                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 15897  119C  01DB               	clrf	(low ((_I2C1_Status| (0+256)+12)))^(0+128)
 15898                           
 15899                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 15900  119D  3000               	movlw	low _I2C1_CallbackReturnStop
 15901  119E  00D1               	movwf	(low ((_I2C1_Status| (0+256)+2)))^(0+128)
 15902  119F  3010               	movlw	high _I2C1_CallbackReturnStop
 15903  11A0  00D2               	movwf	((low ((_I2C1_Status| (0+256)+2)))^(0+128)+1)
 15904                           
 15905                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 15906  11A1  01DC               	clrf	(low ((_I2C1_Status| (0+256)+13)))^(0+128)
 15907                           
 15908                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 15909  11A2  3000               	movlw	low _I2C1_CallbackReturnStop
 15910  11A3  00D3               	movwf	(low ((_I2C1_Status| (0+256)+4)))^(0+128)
 15911  11A4  3010               	movlw	high _I2C1_CallbackReturnStop
 15912  11A5  00D4               	movwf	((low ((_I2C1_Status| (0+256)+4)))^(0+128)+1)
 15913                           
 15914                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 15915  11A6  01DD               	clrf	(low ((_I2C1_Status| (0+256)+14)))^(0+128)
 15916                           
 15917                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 15918  11A7  3000               	movlw	low _I2C1_CallbackReturnStop
 15919  11A8  00D5               	movwf	(low ((_I2C1_Status| (0+256)+6)))^(0+128)
 15920  11A9  3010               	movlw	high _I2C1_CallbackReturnStop
 15921  11AA  00D6               	movwf	((low ((_I2C1_Status| (0+256)+6)))^(0+128)+1)
 15922                           
 15923                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 15924  11AB  01DE               	clrf	(low ((_I2C1_Status| (0+256)+15)))^(0+128)
 15925                           
 15926                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 15927  11AC  3000               	movlw	low _I2C1_CallbackReturnReset
 15928  11AD  00D7               	movwf	(low ((_I2C1_Status| (0+256)+8)))^(0+128)
 15929  11AE  3008               	movlw	high _I2C1_CallbackReturnReset
 15930  11AF  00D8               	movwf	((low ((_I2C1_Status| (0+256)+8)))^(0+128)+1)
 15931                           
 15932                           ;mcc_generated_files/i2c1_master.c: 201:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 15933  11B0  01DF               	clrf	(low ((_I2C1_Status| (0+256)+16)))^(0+128)
 15934                           
 15935                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_SetInterruptHandler(I2C1_MasterIsr
      +                          );
 15936  11B1  3054               	movlw	low _I2C1_MasterIsr
 15937  11B2  0020               	movlb	0	; select bank0
 15938  11B3  00A3               	movwf	I2C1_SetInterruptHandler@InterruptHandler
 15939  11B4  301A               	movlw	high _I2C1_MasterIsr
 15940  11B5  00A4               	movwf	I2C1_SetInterruptHandler@InterruptHandler+1
 15941  11B6  319A  22D4  3191   	fcall	_I2C1_SetInterruptHandler
 15942                           
 15943                           ;mcc_generated_files/i2c1_master.c: 204:         I2C1_MasterClearIrq();
 15944  11B9  319A  2257  3191   	fcall	_I2C1_MasterClearIrq
 15945                           
 15946                           ;mcc_generated_files/i2c1_master.c: 205:         I2C1_MasterOpen();
 15947  11BC  319B  2347  3191   	fcall	_I2C1_MasterOpen
 15948                           
 15949                           ;mcc_generated_files/i2c1_master.c: 206:         I2C1_MasterEnableIrq();
 15950  11BF  319A  2263         	fcall	_I2C1_MasterEnableIrq
 15951                           
 15952                           ;mcc_generated_files/i2c1_master.c: 207:         returnValue = I2C1_NOERR;
 15953  11C1  0020               	movlb	0	; select bank0
 15954  11C2  01A7               	clrf	I2C1_Open@returnValue
 15955  11C3                     l6760:
 15956                           
 15957                           ;mcc_generated_files/i2c1_master.c: 209:     return returnValue;
 15958  11C3  0020               	movlb	0	; select bank0
 15959  11C4  0827               	movf	I2C1_Open@returnValue,w
 15960  11C5  0008               	return
 15961  11C6                     __end_of_I2C1_Open:
 15962                           
 15963                           	psect	text53
 15964  1AD4                     __ptext53:	
 15965 ;; *************** function _I2C1_SetInterruptHandler *****************
 15966 ;; Defined at:
 15967 ;;		line 300 in file "mcc_generated_files/i2c1_master.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 15970 ;;		 -> I2C1_MasterIsr(1), 
 15971 ;; Auto vars:     Size  Location     Type
 15972 ;;		None
 15973 ;; Return value:  Size  Location     Type
 15974 ;;                  1    wreg      void 
 15975 ;; Registers used:
 15976 ;;		wreg
 15977 ;; Tracked objects:
 15978 ;;		On entry : 1F/4900000
 15979 ;;		On exit  : 1F/2
 15980 ;;		Unchanged: 0/0
 15981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15982 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15985 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15986 ;;Total ram usage:        2 bytes
 15987 ;; Hardware stack levels used:    1
 15988 ;; Hardware stack levels required when called:    7
 15989 ;; This function calls:
 15990 ;;		Nothing
 15991 ;; This function is called by:
 15992 ;;		_I2C1_Open
 15993 ;; This function uses a non-reentrant model
 15994 ;;
 15995                           
 15996                           
 15997                           ;psect for function _I2C1_SetInterruptHandler
 15998  1AD4                     _I2C1_SetInterruptHandler:
 15999                           
 16000                           ;mcc_generated_files/i2c1_master.c: 300: void I2C1_SetInterruptHandler(void (* Interrupt
      +                          Handler)(void));mcc_generated_files/i2c1_master.c: 301: {;mcc_generated_files/i2c1_maste
      +                          r.c: 302:     MSSP1_InterruptHandler = InterruptHandler;
 16001                           
 16002                           ;incstack = 0
 16003                           ; Regs used in _I2C1_SetInterruptHandler: [wreg]
 16004  1AD4  0824               	movf	I2C1_SetInterruptHandler@InterruptHandler+1,w
 16005  1AD5  0022               	movlb	2	; select bank2
 16006  1AD6  00B3               	movwf	(_MSSP1_InterruptHandler+1)^(0+256)
 16007  1AD7  0020               	movlb	0	; select bank0
 16008  1AD8  0823               	movf	I2C1_SetInterruptHandler@InterruptHandler,w
 16009  1AD9  0022               	movlb	2	; select bank2
 16010  1ADA  00B2               	movwf	_MSSP1_InterruptHandler^(0+256)
 16011  1ADB  0008               	return
 16012  1ADC                     __end_of_I2C1_SetInterruptHandler:
 16013                           
 16014                           	psect	text54
 16015  1B47                     __ptext54:	
 16016 ;; *************** function _I2C1_MasterOpen *****************
 16017 ;; Defined at:
 16018 ;;		line 545 in file "mcc_generated_files/i2c1_master.c"
 16019 ;; Parameters:    Size  Location     Type
 16020 ;;		None
 16021 ;; Auto vars:     Size  Location     Type
 16022 ;;		None
 16023 ;; Return value:  Size  Location     Type
 16024 ;;                  1    wreg      _Bool 
 16025 ;; Registers used:
 16026 ;;		wreg, status,2
 16027 ;; Tracked objects:
 16028 ;;		On entry : 1F/4900000
 16029 ;;		On exit  : 1F/4
 16030 ;;		Unchanged: 0/0
 16031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16036 ;;Total ram usage:        0 bytes
 16037 ;; Hardware stack levels used:    1
 16038 ;; Hardware stack levels required when called:    7
 16039 ;; This function calls:
 16040 ;;		Nothing
 16041 ;; This function is called by:
 16042 ;;		_I2C1_Open
 16043 ;; This function uses a non-reentrant model
 16044 ;;
 16045                           
 16046                           
 16047                           ;psect for function _I2C1_MasterOpen
 16048  1B47                     _I2C1_MasterOpen:
 16049                           
 16050                           ;mcc_generated_files/i2c1_master.c: 547:     if(!SSP1CON1bits.SSPEN)
 16051                           
 16052                           ;incstack = 0
 16053                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 16054  1B47  0024               	movlb	4	; select bank4
 16055  1B48  1A95               	btfsc	21,5	;volatile
 16056  1B49  0008               	return
 16057                           
 16058                           ;mcc_generated_files/i2c1_master.c: 548:     {;mcc_generated_files/i2c1_master.c: 549:  
      +                                 SSP1STAT = 0x00;
 16059  1B4A  0194               	clrf	20	;volatile
 16060                           
 16061                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1CON1 = 0x38;
 16062  1B4B  3038               	movlw	56
 16063  1B4C  0095               	movwf	21	;volatile
 16064                           
 16065                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON2 = 0x1F;
 16066  1B4D  301F               	movlw	31
 16067  1B4E  0096               	movwf	22	;volatile
 16068                           
 16069                           ;mcc_generated_files/i2c1_master.c: 552:         SSP1CON3 = 0x60;
 16070  1B4F  3060               	movlw	96
 16071  1B50  0097               	movwf	23	;volatile
 16072                           
 16073                           ;mcc_generated_files/i2c1_master.c: 553:         SSP1ADD = 0x27;
 16074  1B51  3027               	movlw	39
 16075  1B52  0092               	movwf	18	;volatile
 16076                           
 16077                           ;mcc_generated_files/i2c1_master.c: 554:         SSP1CON1bits.SSPEN = 1;
 16078  1B53  1695               	bsf	21,5	;volatile
 16079  1B54  0008               	return
 16080  1B55                     __end_of_I2C1_MasterOpen:
 16081                           
 16082                           	psect	text55
 16083  1A63                     __ptext55:	
 16084 ;; *************** function _I2C1_MasterEnableIrq *****************
 16085 ;; Defined at:
 16086 ;;		line 629 in file "mcc_generated_files/i2c1_master.c"
 16087 ;; Parameters:    Size  Location     Type
 16088 ;;		None
 16089 ;; Auto vars:     Size  Location     Type
 16090 ;;		None
 16091 ;; Return value:  Size  Location     Type
 16092 ;;                  1    wreg      void 
 16093 ;; Registers used:
 16094 ;;		None
 16095 ;; Tracked objects:
 16096 ;;		On entry : 1F/4900004
 16097 ;;		On exit  : 1F/1
 16098 ;;		Unchanged: 0/0
 16099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16104 ;;Total ram usage:        0 bytes
 16105 ;; Hardware stack levels used:    1
 16106 ;; Hardware stack levels required when called:    7
 16107 ;; This function calls:
 16108 ;;		Nothing
 16109 ;; This function is called by:
 16110 ;;		_I2C1_Open
 16111 ;; This function uses a non-reentrant model
 16112 ;;
 16113                           
 16114                           
 16115                           ;psect for function _I2C1_MasterEnableIrq
 16116  1A63                     _I2C1_MasterEnableIrq:
 16117                           
 16118                           ;mcc_generated_files/i2c1_master.c: 631:     PIE1bits.SSP1IE = 1;
 16119                           
 16120                           ;incstack = 0
 16121                           ; Regs used in _I2C1_MasterEnableIrq: []
 16122  1A63  0021               	movlb	1	; select bank1
 16123  1A64  1591               	bsf	17,3	;volatile
 16124  1A65  0008               	return
 16125  1A66                     __end_of_I2C1_MasterEnableIrq:
 16126                           
 16127                           	psect	text56
 16128  07FC                     __ptext56:	
 16129 ;; *************** function _I2C1_MasterWrite *****************
 16130 ;; Defined at:
 16131 ;;		line 253 in file "mcc_generated_files/i2c1_master.c"
 16132 ;; Parameters:    Size  Location     Type
 16133 ;;		None
 16134 ;; Auto vars:     Size  Location     Type
 16135 ;;		None
 16136 ;; Return value:  Size  Location     Type
 16137 ;;                  1    wreg      enum E355
 16138 ;; Registers used:
 16139 ;;		wreg, status,2, status,0, pclath, cstack
 16140 ;; Tracked objects:
 16141 ;;		On entry : 1F/4900000
 16142 ;;		On exit  : 1F/0
 16143 ;;		Unchanged: 0/0
 16144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16149 ;;Total ram usage:        0 bytes
 16150 ;; Hardware stack levels used:    1
 16151 ;; Hardware stack levels required when called:    9
 16152 ;; This function calls:
 16153 ;;		_I2C1_MasterOperation
 16154 ;; This function is called by:
 16155 ;;		_i2c_writeNBytes
 16156 ;;		_i2c_read1ByteRegister
 16157 ;;		_I2C1_WriteNBytes
 16158 ;; This function uses a non-reentrant model
 16159 ;;
 16160                           
 16161                           
 16162                           ;psect for function _I2C1_MasterWrite
 16163  07FC                     _I2C1_MasterWrite:
 16164                           
 16165                           ;mcc_generated_files/i2c1_master.c: 255:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 16166                           
 16167                           ;incstack = 0
 16168                           ; Regs used in _I2C1_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
 16169  07FC  3000               	movlw	0
 16170  07FD  319D  2553         	fcall	_I2C1_MasterOperation
 16171  07FF  0008               	return
 16172  0800                     __end_of_I2C1_MasterWrite:
 16173                           
 16174                           	psect	text57
 16175  1D53                     __ptext57:	
 16176 ;; *************** function _I2C1_MasterOperation *****************
 16177 ;; Defined at:
 16178 ;;		line 227 in file "mcc_generated_files/i2c1_master.c"
 16179 ;; Parameters:    Size  Location     Type
 16180 ;;  read            1    wreg     _Bool 
 16181 ;; Auto vars:     Size  Location     Type
 16182 ;;  read            1    4[BANK0 ] _Bool 
 16183 ;;  returnValue     1    5[BANK0 ] enum E355
 16184 ;; Return value:  Size  Location     Type
 16185 ;;                  1    wreg      enum E355
 16186 ;; Registers used:
 16187 ;;		wreg, status,2, status,0, pclath, cstack
 16188 ;; Tracked objects:
 16189 ;;		On entry : 1F/4900000
 16190 ;;		On exit  : 1F/0
 16191 ;;		Unchanged: 0/0
 16192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16194 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16195 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16196 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16197 ;;Total ram usage:        3 bytes
 16198 ;; Hardware stack levels used:    1
 16199 ;; Hardware stack levels required when called:    8
 16200 ;; This function calls:
 16201 ;;		_I2C1_MasterStart
 16202 ;; This function is called by:
 16203 ;;		_I2C1_MasterWrite
 16204 ;; This function uses a non-reentrant model
 16205 ;;
 16206                           
 16207                           
 16208                           ;psect for function _I2C1_MasterOperation
 16209  1D53                     _I2C1_MasterOperation:
 16210                           
 16211                           ;incstack = 0
 16212                           ; Regs used in _I2C1_MasterOperation: [wreg+status,2+status,0+pclath+cstack]
 16213                           ;I2C1_MasterOperation@read stored from wreg
 16214  1D53  00A4               	movwf	I2C1_MasterOperation@read
 16215                           
 16216                           ;mcc_generated_files/i2c1_master.c: 227: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 228: {;mcc_generated_files/i2c1_master.c: 229:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 16217  1D54  01A5               	clrf	I2C1_MasterOperation@returnValue
 16218  1D55  0AA5               	incf	I2C1_MasterOperation@returnValue,f
 16219                           
 16220                           ;mcc_generated_files/i2c1_master.c: 230:     if(!I2C1_Status.busy)
 16221  1D56  0023               	movlb	3	; select bank3
 16222  1D57  18EC               	btfsc	(_I2C1_Status^(0+384)+29),1
 16223  1D58  2D6A               	goto	l6570
 16224                           
 16225                           ;mcc_generated_files/i2c1_master.c: 231:     {;mcc_generated_files/i2c1_master.c: 232:  
      +                                 I2C1_Status.busy = 1;
 16226  1D59  14EC               	bsf	(_I2C1_Status^(0+384)+29),1
 16227                           
 16228                           ;mcc_generated_files/i2c1_master.c: 233:         returnValue = I2C1_NOERR;
 16229  1D5A  0020               	movlb	0	; select bank0
 16230  1D5B  01A5               	clrf	I2C1_MasterOperation@returnValue
 16231                           
 16232                           ;mcc_generated_files/i2c1_master.c: 235:         if(read)
 16233  1D5C  0824               	movf	I2C1_MasterOperation@read,w
 16234  1D5D  1903               	btfsc	3,2
 16235  1D5E  2D63               	goto	l6566
 16236                           
 16237                           ;mcc_generated_files/i2c1_master.c: 236:         {;mcc_generated_files/i2c1_master.c: 23
      +                          7:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 16238  1D5F  0023               	movlb	3	; select bank3
 16239  1D60  01EA               	clrf	(_I2C1_Status^(0+384)+27)
 16240  1D61  0AEA               	incf	(_I2C1_Status^(0+384)+27),f
 16241                           
 16242                           ;mcc_generated_files/i2c1_master.c: 238:         }
 16243  1D62  2D68               	goto	l6568
 16244  1D63                     l6566:
 16245                           
 16246                           ;mcc_generated_files/i2c1_master.c: 240:         {;mcc_generated_files/i2c1_master.c: 24
      +                          1:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 16247  1D63  3002               	movlw	2
 16248  1D64  00A3               	movwf	??_I2C1_MasterOperation
 16249  1D65  0823               	movf	??_I2C1_MasterOperation,w
 16250  1D66  0023               	movlb	3	; select bank3
 16251  1D67  00EA               	movwf	(_I2C1_Status^(0+384)+27)
 16252  1D68                     l6568:
 16253                           
 16254                           ;mcc_generated_files/i2c1_master.c: 243:         I2C1_MasterStart();
 16255  1D68  319A  2260         	fcall	_I2C1_MasterStart
 16256  1D6A                     l6570:
 16257                           
 16258                           ;mcc_generated_files/i2c1_master.c: 245:     return returnValue;
 16259  1D6A  0020               	movlb	0	; select bank0
 16260  1D6B  0825               	movf	I2C1_MasterOperation@returnValue,w
 16261  1D6C  0008               	return
 16262  1D6D                     __end_of_I2C1_MasterOperation:
 16263                           
 16264                           	psect	text58
 16265  1A60                     __ptext58:	
 16266 ;; *************** function _I2C1_MasterStart *****************
 16267 ;; Defined at:
 16268 ;;		line 591 in file "mcc_generated_files/i2c1_master.c"
 16269 ;; Parameters:    Size  Location     Type
 16270 ;;		None
 16271 ;; Auto vars:     Size  Location     Type
 16272 ;;		None
 16273 ;; Return value:  Size  Location     Type
 16274 ;;                  1    wreg      void 
 16275 ;; Registers used:
 16276 ;;		None
 16277 ;; Tracked objects:
 16278 ;;		On entry : 1F/4900003
 16279 ;;		On exit  : 1F/4
 16280 ;;		Unchanged: 0/0
 16281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16286 ;;Total ram usage:        0 bytes
 16287 ;; Hardware stack levels used:    1
 16288 ;; Hardware stack levels required when called:    7
 16289 ;; This function calls:
 16290 ;;		Nothing
 16291 ;; This function is called by:
 16292 ;;		_I2C1_MasterOperation
 16293 ;; This function uses a non-reentrant model
 16294 ;;
 16295                           
 16296                           
 16297                           ;psect for function _I2C1_MasterStart
 16298  1A60                     _I2C1_MasterStart:
 16299                           
 16300                           ;mcc_generated_files/i2c1_master.c: 593:     SSP1CON2bits.SEN = 1;
 16301                           
 16302                           ;incstack = 0
 16303                           ; Regs used in _I2C1_MasterStart: []
 16304  1A60  0024               	movlb	4	; select bank4
 16305  1A61  1416               	bsf	22,0	;volatile
 16306  1A62  0008               	return
 16307  1A63                     __end_of_I2C1_MasterStart:
 16308                           
 16309                           	psect	text59
 16310  1DA3                     __ptext59:	
 16311 ;; *************** function _I2C1_Close *****************
 16312 ;; Defined at:
 16313 ;;		line 212 in file "mcc_generated_files/i2c1_master.c"
 16314 ;; Parameters:    Size  Location     Type
 16315 ;;		None
 16316 ;; Auto vars:     Size  Location     Type
 16317 ;;  returnValue     1    4[BANK0 ] enum E355
 16318 ;; Return value:  Size  Location     Type
 16319 ;;                  1    wreg      enum E355
 16320 ;; Registers used:
 16321 ;;		wreg, status,2, status,0, pclath, cstack
 16322 ;; Tracked objects:
 16323 ;;		On entry : 1F/4900000
 16324 ;;		On exit  : 1F/0
 16325 ;;		Unchanged: 0/0
 16326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16329 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16331 ;;Total ram usage:        2 bytes
 16332 ;; Hardware stack levels used:    1
 16333 ;; Hardware stack levels required when called:    8
 16334 ;; This function calls:
 16335 ;;		_I2C1_MasterClearIrq
 16336 ;;		_I2C1_MasterClose
 16337 ;;		_I2C1_MasterDisableIrq
 16338 ;; This function is called by:
 16339 ;;		_i2c_writeNBytes
 16340 ;;		_i2c_read1ByteRegister
 16341 ;;		_I2C1_WriteNBytes
 16342 ;; This function uses a non-reentrant model
 16343 ;;
 16344                           
 16345                           
 16346                           ;psect for function _I2C1_Close
 16347  1DA3                     _I2C1_Close:
 16348                           
 16349                           ;mcc_generated_files/i2c1_master.c: 214:     i2c1_error_t returnValue = I2C1_BUSY;
 16350                           
 16351                           ;incstack = 0
 16352                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 16353  1DA3  01A4               	clrf	I2C1_Close@returnValue
 16354  1DA4  0AA4               	incf	I2C1_Close@returnValue,f
 16355                           
 16356                           ;mcc_generated_files/i2c1_master.c: 215:     if(!I2C1_Status.busy)
 16357  1DA5  0023               	movlb	3	; select bank3
 16358  1DA6  18EC               	btfsc	(_I2C1_Status^(0+384)+29),1
 16359  1DA7  2DBD               	goto	l6784
 16360                           
 16361                           ;mcc_generated_files/i2c1_master.c: 216:     {;mcc_generated_files/i2c1_master.c: 217:  
      +                                 I2C1_Status.inUse = 0;
 16362  1DA8  116C               	bcf	(_I2C1_Status^(0+384)+29),2
 16363                           
 16364                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_Status.address = 0xff;
 16365  1DA9  30FF               	movlw	255
 16366  1DAA  0020               	movlb	0	; select bank0
 16367  1DAB  00A3               	movwf	??_I2C1_Close
 16368  1DAC  0823               	movf	??_I2C1_Close,w
 16369  1DAD  0023               	movlb	3	; select bank3
 16370  1DAE  00E5               	movwf	(_I2C1_Status^(0+384)+22)
 16371                           
 16372                           ;mcc_generated_files/i2c1_master.c: 219:         I2C1_MasterClearIrq();
 16373  1DAF  319A  2257  319D   	fcall	_I2C1_MasterClearIrq
 16374                           
 16375                           ;mcc_generated_files/i2c1_master.c: 220:         I2C1_MasterDisableIrq();
 16376  1DB2  319A  225D  319D   	fcall	_I2C1_MasterDisableIrq
 16377                           
 16378                           ;mcc_generated_files/i2c1_master.c: 221:         I2C1_MasterClose();
 16379  1DB5  319A  225A         	fcall	_I2C1_MasterClose
 16380                           
 16381                           ;mcc_generated_files/i2c1_master.c: 222:         returnValue = I2C1_Status.error;
 16382  1DB7  0023               	movlb	3	; select bank3
 16383  1DB8  086B               	movf	(_I2C1_Status^(0+384)+28),w
 16384  1DB9  0020               	movlb	0	; select bank0
 16385  1DBA  00A3               	movwf	??_I2C1_Close
 16386  1DBB  0823               	movf	??_I2C1_Close,w
 16387  1DBC  00A4               	movwf	I2C1_Close@returnValue
 16388  1DBD                     l6784:
 16389                           
 16390                           ;mcc_generated_files/i2c1_master.c: 224:     return returnValue;
 16391  1DBD  0020               	movlb	0	; select bank0
 16392  1DBE  0824               	movf	I2C1_Close@returnValue,w
 16393  1DBF  0008               	return
 16394  1DC0                     __end_of_I2C1_Close:
 16395                           
 16396                           	psect	text60
 16397  1A5D                     __ptext60:	
 16398 ;; *************** function _I2C1_MasterDisableIrq *****************
 16399 ;; Defined at:
 16400 ;;		line 639 in file "mcc_generated_files/i2c1_master.c"
 16401 ;; Parameters:    Size  Location     Type
 16402 ;;		None
 16403 ;; Auto vars:     Size  Location     Type
 16404 ;;		None
 16405 ;; Return value:  Size  Location     Type
 16406 ;;                  1    wreg      void 
 16407 ;; Registers used:
 16408 ;;		None
 16409 ;; Tracked objects:
 16410 ;;		On entry : 1F/4900000
 16411 ;;		On exit  : 1F/1
 16412 ;;		Unchanged: 0/0
 16413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16418 ;;Total ram usage:        0 bytes
 16419 ;; Hardware stack levels used:    1
 16420 ;; Hardware stack levels required when called:    7
 16421 ;; This function calls:
 16422 ;;		Nothing
 16423 ;; This function is called by:
 16424 ;;		_I2C1_Close
 16425 ;; This function uses a non-reentrant model
 16426 ;;
 16427                           
 16428                           
 16429                           ;psect for function _I2C1_MasterDisableIrq
 16430  1A5D                     _I2C1_MasterDisableIrq:
 16431                           
 16432                           ;mcc_generated_files/i2c1_master.c: 641:     PIE1bits.SSP1IE = 0;
 16433                           
 16434                           ;incstack = 0
 16435                           ; Regs used in _I2C1_MasterDisableIrq: []
 16436  1A5D  0021               	movlb	1	; select bank1
 16437  1A5E  1191               	bcf	17,3	;volatile
 16438  1A5F  0008               	return
 16439  1A60                     __end_of_I2C1_MasterDisableIrq:
 16440                           
 16441                           	psect	text61
 16442  1A5A                     __ptext61:	
 16443 ;; *************** function _I2C1_MasterClose *****************
 16444 ;; Defined at:
 16445 ;;		line 560 in file "mcc_generated_files/i2c1_master.c"
 16446 ;; Parameters:    Size  Location     Type
 16447 ;;		None
 16448 ;; Auto vars:     Size  Location     Type
 16449 ;;		None
 16450 ;; Return value:  Size  Location     Type
 16451 ;;                  1    wreg      void 
 16452 ;; Registers used:
 16453 ;;		None
 16454 ;; Tracked objects:
 16455 ;;		On entry : 1F/4900001
 16456 ;;		On exit  : 1F/4
 16457 ;;		Unchanged: 0/0
 16458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16463 ;;Total ram usage:        0 bytes
 16464 ;; Hardware stack levels used:    1
 16465 ;; Hardware stack levels required when called:    7
 16466 ;; This function calls:
 16467 ;;		Nothing
 16468 ;; This function is called by:
 16469 ;;		_I2C1_Close
 16470 ;; This function uses a non-reentrant model
 16471 ;;
 16472                           
 16473                           
 16474                           ;psect for function _I2C1_MasterClose
 16475  1A5A                     _I2C1_MasterClose:
 16476                           
 16477                           ;mcc_generated_files/i2c1_master.c: 563:     SSP1CON1bits.SSPEN = 0;
 16478                           
 16479                           ;incstack = 0
 16480                           ; Regs used in _I2C1_MasterClose: []
 16481  1A5A  0024               	movlb	4	; select bank4
 16482  1A5B  1295               	bcf	21,5	;volatile
 16483  1A5C  0008               	return
 16484  1A5D                     __end_of_I2C1_MasterClose:
 16485                           
 16486                           	psect	text62
 16487  1A57                     __ptext62:	
 16488 ;; *************** function _I2C1_MasterClearIrq *****************
 16489 ;; Defined at:
 16490 ;;		line 644 in file "mcc_generated_files/i2c1_master.c"
 16491 ;; Parameters:    Size  Location     Type
 16492 ;;		None
 16493 ;; Auto vars:     Size  Location     Type
 16494 ;;		None
 16495 ;; Return value:  Size  Location     Type
 16496 ;;                  1    wreg      void 
 16497 ;; Registers used:
 16498 ;;		None
 16499 ;; Tracked objects:
 16500 ;;		On entry : 1E/4900002
 16501 ;;		On exit  : 1F/0
 16502 ;;		Unchanged: 0/0
 16503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16508 ;;Total ram usage:        0 bytes
 16509 ;; Hardware stack levels used:    1
 16510 ;; Hardware stack levels required when called:    7
 16511 ;; This function calls:
 16512 ;;		Nothing
 16513 ;; This function is called by:
 16514 ;;		_I2C1_Open
 16515 ;;		_I2C1_Close
 16516 ;; This function uses a non-reentrant model
 16517 ;;
 16518                           
 16519                           
 16520                           ;psect for function _I2C1_MasterClearIrq
 16521  1A57                     _I2C1_MasterClearIrq:
 16522                           
 16523                           ;mcc_generated_files/i2c1_master.c: 646:     PIR1bits.SSP1IF = 0;
 16524                           
 16525                           ;incstack = 0
 16526                           ; Regs used in _I2C1_MasterClearIrq: []
 16527  1A57  0020               	movlb	0	; select bank0
 16528  1A58  1191               	bcf	17,3	;volatile
 16529  1A59  0008               	return
 16530  1A5A                     __end_of_I2C1_MasterClearIrq:
 16531                           
 16532                           	psect	text63
 16533  0002                     __ptext63:	
 16534 ;; *************** function _TMR1_StartTimer *****************
 16535 ;; Defined at:
 16536 ;;		line 212 in file "mcc_generated_files/tmr1.c"
 16537 ;; Parameters:    Size  Location     Type
 16538 ;;		None
 16539 ;; Auto vars:     Size  Location     Type
 16540 ;;		None
 16541 ;; Return value:  Size  Location     Type
 16542 ;;                  1    wreg      void 
 16543 ;; Registers used:
 16544 ;;		None
 16545 ;; Tracked objects:
 16546 ;;		On entry : 1F/0
 16547 ;;		On exit  : 1F/0
 16548 ;;		Unchanged: 0/0
 16549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16554 ;;Total ram usage:        0 bytes
 16555 ;; Hardware stack levels used:    1
 16556 ;; Hardware stack levels required when called:    7
 16557 ;; This function calls:
 16558 ;;		Nothing
 16559 ;; This function is called by:
 16560 ;;		_main
 16561 ;; This function uses a non-reentrant model
 16562 ;;
 16563                           
 16564                           
 16565                           ;psect for function _TMR1_StartTimer
 16566  0002                     _TMR1_StartTimer:
 16567                           
 16568                           ;mcc_generated_files/tmr1.c: 215:     T1CONbits.TMR1ON = 1;
 16569                           
 16570                           ;incstack = 0
 16571                           ; Regs used in _TMR1_StartTimer: []
 16572  0002  141B               	bsf	27,0	;volatile
 16573  0003  0008               	return
 16574  0004                     __end_of_TMR1_StartTimer:
 16575                           
 16576                           	psect	text64
 16577  1B72                     __ptext64:	
 16578 ;; *************** function _SYSTEM_Initialize *****************
 16579 ;; Defined at:
 16580 ;;		line 50 in file "mcc_generated_files/mcc.c"
 16581 ;; Parameters:    Size  Location     Type
 16582 ;;		None
 16583 ;; Auto vars:     Size  Location     Type
 16584 ;;		None
 16585 ;; Return value:  Size  Location     Type
 16586 ;;                  1    wreg      void 
 16587 ;; Registers used:
 16588 ;;		wreg, status,2, status,0, pclath, cstack
 16589 ;; Tracked objects:
 16590 ;;		On entry : B1F/0
 16591 ;;		On exit  : 1F/0
 16592 ;;		Unchanged: 0/0
 16593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16598 ;;Total ram usage:        0 bytes
 16599 ;; Hardware stack levels used:    1
 16600 ;; Hardware stack levels required when called:    9
 16601 ;; This function calls:
 16602 ;;		_I2C1_Initialize
 16603 ;;		_OSCILLATOR_Initialize
 16604 ;;		_PIN_MANAGER_Initialize
 16605 ;;		_PMD_Initialize
 16606 ;;		_TMR1_Initialize
 16607 ;;		_WDT_Initialize
 16608 ;; This function is called by:
 16609 ;;		_main
 16610 ;; This function uses a non-reentrant model
 16611 ;;
 16612                           
 16613                           
 16614                           ;psect for function _SYSTEM_Initialize
 16615  1B72                     _SYSTEM_Initialize:
 16616                           
 16617                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 16618                           
 16619                           ;incstack = 0
 16620                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16621  1B72  319A  22C4  319B   	fcall	_PMD_Initialize
 16622                           
 16623                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 16624  1B75  319A  22DC  319B   	fcall	_I2C1_Initialize
 16625                           
 16626                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 16627  1B78  3190  20C1  319B   	fcall	_PIN_MANAGER_Initialize
 16628                           
 16629                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 16630  1B7B  319A  22E5  319B   	fcall	_OSCILLATOR_Initialize
 16631                           
 16632                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 16633  1B7E  319A  228A  319B   	fcall	_WDT_Initialize
 16634                           
 16635                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 16636  1B81  319D  256D         	fcall	_TMR1_Initialize
 16637  1B83  0008               	return
 16638  1B84                     __end_of_SYSTEM_Initialize:
 16639                           
 16640                           	psect	text65
 16641  1A8A                     __ptext65:	
 16642 ;; *************** function _WDT_Initialize *****************
 16643 ;; Defined at:
 16644 ;;		line 79 in file "mcc_generated_files/mcc.c"
 16645 ;; Parameters:    Size  Location     Type
 16646 ;;		None
 16647 ;; Auto vars:     Size  Location     Type
 16648 ;;		None
 16649 ;; Return value:  Size  Location     Type
 16650 ;;                  1    wreg      void 
 16651 ;; Registers used:
 16652 ;;		wreg
 16653 ;; Tracked objects:
 16654 ;;		On entry : B1F/12
 16655 ;;		On exit  : B1F/1
 16656 ;;		Unchanged: B00/0
 16657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16662 ;;Total ram usage:        0 bytes
 16663 ;; Hardware stack levels used:    1
 16664 ;; Hardware stack levels required when called:    7
 16665 ;; This function calls:
 16666 ;;		Nothing
 16667 ;; This function is called by:
 16668 ;;		_SYSTEM_Initialize
 16669 ;; This function uses a non-reentrant model
 16670 ;;
 16671                           
 16672                           
 16673                           ;psect for function _WDT_Initialize
 16674  1A8A                     _WDT_Initialize:
 16675                           
 16676                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
 16677                           
 16678                           ;incstack = 0
 16679                           ; Regs used in _WDT_Initialize: [wreg]
 16680  1A8A  3016               	movlw	22
 16681  1A8B  0021               	movlb	1	; select bank1
 16682  1A8C  0097               	movwf	23	;volatile
 16683  1A8D  0008               	return
 16684  1A8E                     __end_of_WDT_Initialize:
 16685                           
 16686                           	psect	text66
 16687  1D6D                     __ptext66:	
 16688 ;; *************** function _TMR1_Initialize *****************
 16689 ;; Defined at:
 16690 ;;		line 184 in file "mcc_generated_files/tmr1.c"
 16691 ;; Parameters:    Size  Location     Type
 16692 ;;		None
 16693 ;; Auto vars:     Size  Location     Type
 16694 ;;		None
 16695 ;; Return value:  Size  Location     Type
 16696 ;;                  1    wreg      void 
 16697 ;; Registers used:
 16698 ;;		wreg, status,2, status,0, pclath, cstack
 16699 ;; Tracked objects:
 16700 ;;		On entry : 1E/0
 16701 ;;		On exit  : 1F/0
 16702 ;;		Unchanged: 0/0
 16703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16708 ;;Total ram usage:        0 bytes
 16709 ;; Hardware stack levels used:    1
 16710 ;; Hardware stack levels required when called:    8
 16711 ;; This function calls:
 16712 ;;		_TMR1_SetInterruptHandler
 16713 ;; This function is called by:
 16714 ;;		_SYSTEM_Initialize
 16715 ;;		_main
 16716 ;; This function uses a non-reentrant model
 16717 ;;
 16718                           
 16719                           
 16720                           ;psect for function _TMR1_Initialize
 16721  1D6D                     _TMR1_Initialize:
 16722                           
 16723                           ;mcc_generated_files/tmr1.c: 189:     T1GCON = 0x00;
 16724                           
 16725                           ;incstack = 0
 16726                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 16727  1D6D  0020               	movlb	0	; select bank0
 16728  1D6E  019C               	clrf	28	;volatile
 16729                           
 16730                           ;mcc_generated_files/tmr1.c: 192:     TMR1H = 0xBd;
 16731  1D6F  30BD               	movlw	189
 16732  1D70  009A               	movwf	26	;volatile
 16733                           
 16734                           ;mcc_generated_files/tmr1.c: 193:     TMR1L = 0xDC;
 16735  1D71  30DC               	movlw	220
 16736  1D72  0099               	movwf	25	;volatile
 16737                           
 16738                           ;mcc_generated_files/tmr1.c: 197:     PIR1bits.TMR1IF = 0;
 16739  1D73  1011               	bcf	17,0	;volatile
 16740                           
 16741                           ;mcc_generated_files/tmr1.c: 200:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 16742  1D74  081A               	movf	26,w	;volatile
 16743  1D75  0022               	movlb	2	; select bank2
 16744  1D76  00B1               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
 16745  1D77  0020               	movlb	0	; select bank0
 16746  1D78  0819               	movf	25,w	;volatile
 16747  1D79  0022               	movlb	2	; select bank2
 16748  1D7A  00B0               	movwf	_timer1ReloadVal^(0+256)	;volatile
 16749                           
 16750                           ;mcc_generated_files/tmr1.c: 203:     PIE1bits.TMR1IE = 1;
 16751  1D7B  0021               	movlb	1	; select bank1
 16752  1D7C  1411               	bsf	17,0	;volatile
 16753                           
 16754                           ;mcc_generated_files/tmr1.c: 206:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHand
      +                          ler);
 16755  1D7D  307C               	movlw	low _TMR1_DefaultInterruptHandler
 16756  1D7E  0020               	movlb	0	; select bank0
 16757  1D7F  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 16758  1D80  3008               	movlw	high _TMR1_DefaultInterruptHandler
 16759  1D81  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 16760  1D82  319A  22CC         	fcall	_TMR1_SetInterruptHandler
 16761                           
 16762                           ;mcc_generated_files/tmr1.c: 208:      T1CON = 0x01;
 16763  1D84  3001               	movlw	1
 16764  1D85  0020               	movlb	0	; select bank0
 16765  1D86  009B               	movwf	27	;volatile
 16766  1D87  0008               	return
 16767  1D88                     __end_of_TMR1_Initialize:
 16768                           
 16769                           	psect	text67
 16770  1ACC                     __ptext67:	
 16771 ;; *************** function _TMR1_SetInterruptHandler *****************
 16772 ;; Defined at:
 16773 ;;		line 367 in file "mcc_generated_files/tmr1.c"
 16774 ;; Parameters:    Size  Location     Type
 16775 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 16776 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 16777 ;; Auto vars:     Size  Location     Type
 16778 ;;		None
 16779 ;; Return value:  Size  Location     Type
 16780 ;;                  1    wreg      void 
 16781 ;; Registers used:
 16782 ;;		wreg
 16783 ;; Tracked objects:
 16784 ;;		On entry : 1F/0
 16785 ;;		On exit  : 1F/2
 16786 ;;		Unchanged: 0/0
 16787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16788 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16791 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16792 ;;Total ram usage:        2 bytes
 16793 ;; Hardware stack levels used:    1
 16794 ;; Hardware stack levels required when called:    7
 16795 ;; This function calls:
 16796 ;;		Nothing
 16797 ;; This function is called by:
 16798 ;;		_TMR1_Initialize
 16799 ;; This function uses a non-reentrant model
 16800 ;;
 16801                           
 16802                           
 16803                           ;psect for function _TMR1_SetInterruptHandler
 16804  1ACC                     _TMR1_SetInterruptHandler:
 16805                           
 16806                           ;mcc_generated_files/tmr1.c: 368:     TMR1_InterruptHandler = InterruptHandler;
 16807                           
 16808                           ;incstack = 0
 16809                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 16810  1ACC  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 16811  1ACD  0022               	movlb	2	; select bank2
 16812  1ACE  00AF               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
 16813  1ACF  0020               	movlb	0	; select bank0
 16814  1AD0  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 16815  1AD1  0022               	movlb	2	; select bank2
 16816  1AD2  00AE               	movwf	_TMR1_InterruptHandler^(0+256)
 16817  1AD3  0008               	return
 16818  1AD4                     __end_of_TMR1_SetInterruptHandler:
 16819                           
 16820                           	psect	text68
 16821  1AC4                     __ptext68:	
 16822 ;; *************** function _PMD_Initialize *****************
 16823 ;; Defined at:
 16824 ;;		line 85 in file "mcc_generated_files/mcc.c"
 16825 ;; Parameters:    Size  Location     Type
 16826 ;;		None
 16827 ;; Auto vars:     Size  Location     Type
 16828 ;;		None
 16829 ;; Return value:  Size  Location     Type
 16830 ;;                  1    wreg      void 
 16831 ;; Registers used:
 16832 ;;		status,2
 16833 ;; Tracked objects:
 16834 ;;		On entry : B1F/0
 16835 ;;		On exit  : B1F/12
 16836 ;;		Unchanged: B00/0
 16837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16842 ;;Total ram usage:        0 bytes
 16843 ;; Hardware stack levels used:    1
 16844 ;; Hardware stack levels required when called:    7
 16845 ;; This function calls:
 16846 ;;		Nothing
 16847 ;; This function is called by:
 16848 ;;		_SYSTEM_Initialize
 16849 ;; This function uses a non-reentrant model
 16850 ;;
 16851                           
 16852                           
 16853                           ;psect for function _PMD_Initialize
 16854  1AC4                     _PMD_Initialize:
 16855                           
 16856                           ;mcc_generated_files/mcc.c: 88:     PMD0 = 0x00;
 16857                           
 16858                           ;incstack = 0
 16859                           ; Regs used in _PMD_Initialize: [status,2]
 16860  1AC4  0032               	movlb	18	; select bank18
 16861  1AC5  0191               	clrf	17	;volatile
 16862                           
 16863                           ;mcc_generated_files/mcc.c: 90:     PMD1 = 0x00;
 16864  1AC6  0192               	clrf	18	;volatile
 16865                           
 16866                           ;mcc_generated_files/mcc.c: 92:     PMD2 = 0x00;
 16867  1AC7  0193               	clrf	19	;volatile
 16868                           
 16869                           ;mcc_generated_files/mcc.c: 94:     PMD3 = 0x00;
 16870  1AC8  0194               	clrf	20	;volatile
 16871                           
 16872                           ;mcc_generated_files/mcc.c: 96:     PMD4 = 0x00;
 16873  1AC9  0195               	clrf	21	;volatile
 16874                           
 16875                           ;mcc_generated_files/mcc.c: 98:     PMD5 = 0x00;
 16876  1ACA  0196               	clrf	22	;volatile
 16877  1ACB  0008               	return
 16878  1ACC                     __end_of_PMD_Initialize:
 16879                           
 16880                           	psect	text69
 16881  10C1                     __ptext69:	
 16882 ;; *************** function _PIN_MANAGER_Initialize *****************
 16883 ;; Defined at:
 16884 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 16885 ;; Parameters:    Size  Location     Type
 16886 ;;		None
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;		None
 16889 ;; Return value:  Size  Location     Type
 16890 ;;                  1    wreg      void 
 16891 ;; Registers used:
 16892 ;;		wreg, status,2
 16893 ;; Tracked objects:
 16894 ;;		On entry : B1F/4
 16895 ;;		On exit  : B1F/1C
 16896 ;;		Unchanged: B00/0
 16897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16902 ;;Total ram usage:        0 bytes
 16903 ;; Hardware stack levels used:    1
 16904 ;; Hardware stack levels required when called:    7
 16905 ;; This function calls:
 16906 ;;		Nothing
 16907 ;; This function is called by:
 16908 ;;		_SYSTEM_Initialize
 16909 ;; This function uses a non-reentrant model
 16910 ;;
 16911                           
 16912                           
 16913                           ;psect for function _PIN_MANAGER_Initialize
 16914  10C1                     _PIN_MANAGER_Initialize:
 16915                           
 16916                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 16917                           
 16918                           ;incstack = 0
 16919                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 16920  10C1  0022               	movlb	2	; select bank2
 16921  10C2  018C               	clrf	12	;volatile
 16922                           
 16923                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x80;
 16924  10C3  3080               	movlw	128
 16925  10C4  008D               	movwf	13	;volatile
 16926                           
 16927                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 16928  10C5  018E               	clrf	14	;volatile
 16929                           
 16930                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x38;
 16931  10C6  3038               	movlw	56
 16932  10C7  0021               	movlb	1	; select bank1
 16933  10C8  008C               	movwf	12	;volatile
 16934                           
 16935                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 16936  10C9  3070               	movlw	112
 16937  10CA  008D               	movwf	13	;volatile
 16938                           
 16939                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
 16940  10CB  018E               	clrf	14	;volatile
 16941                           
 16942                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
 16943  10CC  0023               	movlb	3	; select bank3
 16944  10CD  018E               	clrf	14	;volatile
 16945                           
 16946                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
 16947  10CE  018D               	clrf	13	;volatile
 16948                           
 16949                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
 16950  10CF  018C               	clrf	12	;volatile
 16951                           
 16952                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0xF0;
 16953  10D0  30F0               	movlw	240
 16954  10D1  0024               	movlb	4	; select bank4
 16955  10D2  008D               	movwf	13	;volatile
 16956                           
 16957                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x38;
 16958  10D3  3038               	movlw	56
 16959  10D4  008C               	movwf	12	;volatile
 16960                           
 16961                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 16962  10D5  018E               	clrf	14	;volatile
 16963                           
 16964                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 16965  10D6  0025               	movlb	5	; select bank5
 16966  10D7  018C               	clrf	12	;volatile
 16967                           
 16968                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0xD0;
 16969  10D8  30D0               	movlw	208
 16970  10D9  008D               	movwf	13	;volatile
 16971                           
 16972                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 16973  10DA  018E               	clrf	14	;volatile
 16974                           
 16975                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x38;
 16976  10DB  3038               	movlw	56
 16977  10DC  0026               	movlb	6	; select bank6
 16978  10DD  008C               	movwf	12	;volatile
 16979                           
 16980                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 16981  10DE  30F0               	movlw	240
 16982  10DF  008D               	movwf	13	;volatile
 16983                           
 16984                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 16985  10E0  30FF               	movlw	255
 16986  10E1  008E               	movwf	14	;volatile
 16987                           
 16988                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 16989  10E2  303F               	movlw	63
 16990  10E3  0027               	movlb	7	; select bank7
 16991  10E4  008C               	movwf	12	;volatile
 16992                           
 16993                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 16994  10E5  30F0               	movlw	240
 16995  10E6  008D               	movwf	13	;volatile
 16996                           
 16997                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 16998  10E7  30FF               	movlw	255
 16999  10E8  008E               	movwf	14	;volatile
 17000                           
 17001                           ;mcc_generated_files/pin_manager.c: 110:     SSP1CLKPPS = 0x0E;
 17002  10E9  300E               	movlw	14
 17003  10EA  003C               	movlb	28	; select bank28
 17004  10EB  00A0               	movwf	32	;volatile
 17005                           
 17006                           ;mcc_generated_files/pin_manager.c: 111:     RB6PPS = 0x18;
 17007  10EC  3018               	movlw	24
 17008  10ED  003D               	movlb	29	; select bank29
 17009  10EE  009E               	movwf	30	;volatile
 17010                           
 17011                           ;mcc_generated_files/pin_manager.c: 112:     RB4PPS = 0x19;
 17012  10EF  3019               	movlw	25
 17013  10F0  009C               	movwf	28	;volatile
 17014                           
 17015                           ;mcc_generated_files/pin_manager.c: 113:     SSP1DATPPS = 0x0C;
 17016  10F1  300C               	movlw	12
 17017  10F2  003C               	movlb	28	; select bank28
 17018  10F3  00A1               	movwf	33	;volatile
 17019  10F4  0008               	return
 17020  10F5                     __end_of_PIN_MANAGER_Initialize:
 17021                           
 17022                           	psect	text70
 17023  1AE5                     __ptext70:	
 17024 ;; *************** function _OSCILLATOR_Initialize *****************
 17025 ;; Defined at:
 17026 ;;		line 61 in file "mcc_generated_files/mcc.c"
 17027 ;; Parameters:    Size  Location     Type
 17028 ;;		None
 17029 ;; Auto vars:     Size  Location     Type
 17030 ;;		None
 17031 ;; Return value:  Size  Location     Type
 17032 ;;                  1    wreg      void 
 17033 ;; Registers used:
 17034 ;;		wreg, status,2
 17035 ;; Tracked objects:
 17036 ;;		On entry : B1F/1C
 17037 ;;		On exit  : B1F/12
 17038 ;;		Unchanged: B00/0
 17039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17044 ;;Total ram usage:        0 bytes
 17045 ;; Hardware stack levels used:    1
 17046 ;; Hardware stack levels required when called:    7
 17047 ;; This function calls:
 17048 ;;		Nothing
 17049 ;; This function is called by:
 17050 ;;		_SYSTEM_Initialize
 17051 ;; This function uses a non-reentrant model
 17052 ;;
 17053                           
 17054                           
 17055                           ;psect for function _OSCILLATOR_Initialize
 17056  1AE5                     _OSCILLATOR_Initialize:
 17057                           
 17058                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x00;
 17059                           
 17060                           ;incstack = 0
 17061                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 17062  1AE5  0032               	movlb	18	; select bank18
 17063  1AE6  0199               	clrf	25	;volatile
 17064                           
 17065                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 17066  1AE7  019B               	clrf	27	;volatile
 17067                           
 17068                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 17069  1AE8  019D               	clrf	29	;volatile
 17070                           
 17071                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 17072  1AE9  3006               	movlw	6
 17073  1AEA  009F               	movwf	31	;volatile
 17074                           
 17075                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
 17076  1AEB  019E               	clrf	30	;volatile
 17077  1AEC                     l850:	
 17078                           ;mcc_generated_files/mcc.c: 75:     {;mcc_generated_files/mcc.c: 76:     }
 17079                           
 17080                           
 17081                           ;mcc_generated_files/mcc.c: 74:     while(PLLR == 0)
 17082  1AEC  181C               	btfsc	28,0	;volatile
 17083  1AED  0008               	return
 17084  1AEE  2AEC               	goto	l850
 17085  1AEF                     __end_of_OSCILLATOR_Initialize:
 17086                           
 17087                           	psect	text71
 17088  1ADC                     __ptext71:	
 17089 ;; *************** function _I2C1_Initialize *****************
 17090 ;; Defined at:
 17091 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;		None
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;		None
 17096 ;; Return value:  Size  Location     Type
 17097 ;;                  1    wreg      void 
 17098 ;; Registers used:
 17099 ;;		wreg, status,2
 17100 ;; Tracked objects:
 17101 ;;		On entry : B1F/12
 17102 ;;		On exit  : B1F/4
 17103 ;;		Unchanged: B00/0
 17104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17109 ;;Total ram usage:        0 bytes
 17110 ;; Hardware stack levels used:    1
 17111 ;; Hardware stack levels required when called:    7
 17112 ;; This function calls:
 17113 ;;		Nothing
 17114 ;; This function is called by:
 17115 ;;		_SYSTEM_Initialize
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           
 17120                           ;psect for function _I2C1_Initialize
 17121  1ADC                     _I2C1_Initialize:
 17122                           
 17123                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 17124                           
 17125                           ;incstack = 0
 17126                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 17127  1ADC  0024               	movlb	4	; select bank4
 17128  1ADD  0194               	clrf	20	;volatile
 17129                           
 17130                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 17131  1ADE  3008               	movlw	8
 17132  1ADF  0095               	movwf	21	;volatile
 17133                           
 17134                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 17135  1AE0  0196               	clrf	22	;volatile
 17136                           
 17137                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1ADD = 0x4F;
 17138  1AE1  304F               	movlw	79
 17139  1AE2  0092               	movwf	18	;volatile
 17140                           
 17141                           ;mcc_generated_files/i2c1_master.c: 174:     SSP1CON1bits.SSPEN = 0;
 17142  1AE3  1295               	bcf	21,5	;volatile
 17143  1AE4  0008               	return
 17144  1AE5                     __end_of_I2C1_Initialize:
 17145                           
 17146                           	psect	text72
 17147  1E3B                     __ptext72:	
 17148 ;; *************** function _DATAEE_WriteByte *****************
 17149 ;; Defined at:
 17150 ;;		line 180 in file "mcc_generated_files/memory.c"
 17151 ;; Parameters:    Size  Location     Type
 17152 ;;  bAdd            2    9[BANK0 ] unsigned short 
 17153 ;;  bData           1   11[BANK0 ] unsigned char 
 17154 ;; Auto vars:     Size  Location     Type
 17155 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 17156 ;; Return value:  Size  Location     Type
 17157 ;;                  1    wreg      void 
 17158 ;; Registers used:
 17159 ;;		wreg, status,2, status,0
 17160 ;; Tracked objects:
 17161 ;;		On entry : 1F/0
 17162 ;;		On exit  : 1F/0
 17163 ;;		Unchanged: 0/0
 17164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17165 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17166 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17168 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17169 ;;Total ram usage:        4 bytes
 17170 ;; Hardware stack levels used:    1
 17171 ;; Hardware stack levels required when called:    7
 17172 ;; This function calls:
 17173 ;;		Nothing
 17174 ;; This function is called by:
 17175 ;;		_main
 17176 ;; This function uses a non-reentrant model
 17177 ;;
 17178                           
 17179                           
 17180                           ;psect for function _DATAEE_WriteByte
 17181  1E3B                     _DATAEE_WriteByte:
 17182                           
 17183                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 17184                           
 17185                           ;incstack = 0
 17186                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 17187  1E3B  3000               	movlw	0
 17188  1E3C  1B8B               	btfsc	11,7	;volatile
 17189  1E3D  3001               	movlw	1
 17190  1E3E  00AC               	movwf	DATAEE_WriteByte@GIEBitValue
 17191                           
 17192                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 17193  1E3F  082A               	movf	DATAEE_WriteByte@bAdd+1,w
 17194  1E40  0031               	movlb	17	; select bank17
 17195  1E41  0092               	movwf	18	;volatile
 17196                           
 17197                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 17198  1E42  0020               	movlb	0	; select bank0
 17199  1E43  0829               	movf	DATAEE_WriteByte@bAdd,w
 17200  1E44  0031               	movlb	17	; select bank17
 17201  1E45  0091               	movwf	17	;volatile
 17202                           
 17203                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 17204  1E46  0020               	movlb	0	; select bank0
 17205  1E47  082B               	movf	DATAEE_WriteByte@bData,w
 17206  1E48  0031               	movlb	17	; select bank17
 17207  1E49  0093               	movwf	19	;volatile
 17208                           
 17209                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 17210  1E4A  1715               	bsf	21,6	;volsfr
 17211                           
 17212                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 17213  1E4B  1515               	bsf	21,2	;volsfr
 17214                           
 17215                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 17216  1E4C  138B               	bcf	11,7	;volatile
 17217                           
 17218                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 17219  1E4D  3055               	movlw	85
 17220  1E4E  0096               	movwf	22	;volsfr
 17221                           
 17222                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 17223  1E4F  30AA               	movlw	170
 17224  1E50  0096               	movwf	22	;volsfr
 17225                           
 17226                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 17227  1E51  1495               	bsf	21,1	;volsfr
 17228  1E52                     l956:	
 17229                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 17230                           
 17231                           
 17232                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 17233  1E52  1895               	btfsc	21,1	;volsfr
 17234  1E53  2E52               	goto	l956
 17235                           
 17236                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 17237  1E54  1115               	bcf	21,2	;volsfr
 17238                           
 17239                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 17240  1E55  0020               	movlb	0	; select bank0
 17241  1E56  0C2C               	rrf	DATAEE_WriteByte@GIEBitValue,w
 17242  1E57  1C03               	skipc
 17243  1E58  138B               	bcf	11,7	;volatile
 17244  1E59  1803               	skipnc
 17245  1E5A  178B               	bsf	11,7	;volatile
 17246  1E5B  0008               	return
 17247  1E5C                     __end_of_DATAEE_WriteByte:
 17248                           
 17249                           	psect	text73
 17250  1B39                     __ptext73:	
 17251 ;; *************** function _DATAEE_ReadByte *****************
 17252 ;; Defined at:
 17253 ;;		line 202 in file "mcc_generated_files/memory.c"
 17254 ;; Parameters:    Size  Location     Type
 17255 ;;  bAdd            2    3[BANK0 ] unsigned short 
 17256 ;; Auto vars:     Size  Location     Type
 17257 ;;		None
 17258 ;; Return value:  Size  Location     Type
 17259 ;;                  1    wreg      unsigned char 
 17260 ;; Registers used:
 17261 ;;		wreg
 17262 ;; Tracked objects:
 17263 ;;		On entry : 1F/0
 17264 ;;		On exit  : 1F/11
 17265 ;;		Unchanged: 0/0
 17266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17270 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17271 ;;Total ram usage:        2 bytes
 17272 ;; Hardware stack levels used:    1
 17273 ;; Hardware stack levels required when called:    7
 17274 ;; This function calls:
 17275 ;;		Nothing
 17276 ;; This function is called by:
 17277 ;;		_main
 17278 ;; This function uses a non-reentrant model
 17279 ;;
 17280                           
 17281                           
 17282                           ;psect for function _DATAEE_ReadByte
 17283  1B39                     _DATAEE_ReadByte:
 17284                           
 17285                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 17286                           
 17287                           ;incstack = 0
 17288                           ; Regs used in _DATAEE_ReadByte: [wreg]
 17289  1B39  0824               	movf	DATAEE_ReadByte@bAdd+1,w
 17290  1B3A  0031               	movlb	17	; select bank17
 17291  1B3B  0092               	movwf	18	;volatile
 17292                           
 17293                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 17294  1B3C  0020               	movlb	0	; select bank0
 17295  1B3D  0823               	movf	DATAEE_ReadByte@bAdd,w
 17296  1B3E  0031               	movlb	17	; select bank17
 17297  1B3F  0091               	movwf	17	;volatile
 17298                           
 17299                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 17300  1B40  1715               	bsf	21,6	;volsfr
 17301                           
 17302                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 17303  1B41  1415               	bsf	21,0	;volsfr
 17304                           
 17305                           ;mcc_generated_files/memory.c: 208:     __nop();
 17306  1B42  0000               	nop
 17307                           
 17308                           ;mcc_generated_files/memory.c: 209:     __nop();
 17309  1B43  0000               	nop
 17310                           
 17311                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 17312  1B44  0031               	movlb	17	; select bank17
 17313  1B45  0813               	movf	19,w	;volatile
 17314  1B46  0008               	return
 17315  1B47                     __end_of_DATAEE_ReadByte:
 17316                           
 17317                           	psect	intentry
 17318  0004                     __pintentry:	
 17319 ;; *************** function _INTERRUPT_InterruptManager *****************
 17320 ;; Defined at:
 17321 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 17322 ;; Parameters:    Size  Location     Type
 17323 ;;		None
 17324 ;; Auto vars:     Size  Location     Type
 17325 ;;		None
 17326 ;; Return value:  Size  Location     Type
 17327 ;;                  1    wreg      void 
 17328 ;; Registers used:
 17329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17330 ;; Tracked objects:
 17331 ;;		On entry : 0/0
 17332 ;;		On exit  : 0/0
 17333 ;;		Unchanged: 0/0
 17334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17339 ;;Total ram usage:        0 bytes
 17340 ;; Hardware stack levels used:    1
 17341 ;; Hardware stack levels required when called:    6
 17342 ;; This function calls:
 17343 ;;		Absolute function
 17344 ;;		_I2C1_MasterIsr
 17345 ;;		_TMR1_ISR
 17346 ;; This function is called by:
 17347 ;;		Interrupt level 1
 17348 ;; This function uses a non-reentrant model
 17349 ;;
 17350                           
 17351  0004                     _INTERRUPT_InterruptManager:
 17352                           
 17353                           ;incstack = 0
 17354  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 17355                           
 17356                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17357  0005  3180               	pagesel	$
 17358                           
 17359                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 17360  0006  1F0B               	btfss	11,6	;volatile
 17361  0007  2823               	goto	i1l804
 17362                           
 17363                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 17364  0008  0021               	movlb	1	; select bank1
 17365  0009  1C11               	btfss	17,0	;volatile
 17366  000A  2812               	goto	i1l797
 17367  000B  0020               	movlb	0	; select bank0
 17368  000C  1C11               	btfss	17,0	;volatile
 17369  000D  2812               	goto	i1l797
 17370                           
 17371                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 17372  000E  319B  2384  3180   	fcall	_TMR1_ISR
 17373                           
 17374                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 17375  0011  2823               	goto	i1l804
 17376  0012                     i1l797:	
 17377                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
 17378                           
 17379  0012  0021               	movlb	1	; select bank1
 17380  0013  1991               	btfsc	17,3	;volatile
 17381  0014  0020               	movlb	0	; select bank0
 17382  0015  1991               	btfsc	17,3	;volatile
 17383  0016  281D               	goto	i1l7710
 17384                           
 17385                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.BCL1IE == 1 && PI
      +                          R1bits.BCL1IF == 1)
 17386                           
 17387                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 17388  0017  0021               	movlb	1	; select bank1
 17389  0018  1D11               	btfss	17,2	;volatile
 17390  0019  2823               	goto	i1l804
 17391  001A  0020               	movlb	0	; select bank0
 17392  001B  1D11               	btfss	17,2	;volatile
 17393  001C  2823               	goto	i1l804
 17394  001D                     i1l7710:
 17395                           
 17396                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
 17397  001D  0022               	movlb	2	; select bank2
 17398  001E  0833               	movf	(_MSSP1_InterruptHandler+1)^(0+256),w
 17399  001F  008A               	movwf	10
 17400  0020  0832               	movf	_MSSP1_InterruptHandler^(0+256),w
 17401  0021  000A               	callw
 17402  0022  3180               	pagesel	$
 17403  0023                     i1l804:	
 17404                           ;mcc_generated_files/interrupt_manager.c: 73:     }
 17405                           
 17406  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 17407  0024  0009               	retfie
 17408  0025                     __end_of_INTERRUPT_InterruptManager:
 17409                           
 17410                           	psect	text75
 17411  1B84                     __ptext75:	
 17412 ;; *************** function _TMR1_ISR *****************
 17413 ;; Defined at:
 17414 ;;		line 353 in file "mcc_generated_files/tmr1.c"
 17415 ;; Parameters:    Size  Location     Type
 17416 ;;		None
 17417 ;; Auto vars:     Size  Location     Type
 17418 ;;		None
 17419 ;; Return value:  Size  Location     Type
 17420 ;;                  1    wreg      void 
 17421 ;; Registers used:
 17422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17423 ;; Tracked objects:
 17424 ;;		On entry : 1F/0
 17425 ;;		On exit  : 0/0
 17426 ;;		Unchanged: 0/0
 17427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17432 ;;Total ram usage:        0 bytes
 17433 ;; Hardware stack levels used:    1
 17434 ;; Hardware stack levels required when called:    2
 17435 ;; This function calls:
 17436 ;;		Absolute function
 17437 ;;		_TMR1_DefaultInterruptHandler
 17438 ;;		_TMR1_WriteTimer
 17439 ;; This function is called by:
 17440 ;;		_INTERRUPT_InterruptManager
 17441 ;; This function uses a non-reentrant model
 17442 ;;
 17443                           
 17444                           
 17445                           ;psect for function _TMR1_ISR
 17446  1B84                     _TMR1_ISR:
 17447                           
 17448                           ;mcc_generated_files/tmr1.c: 357:     PIR1bits.TMR1IF = 0;
 17449                           
 17450                           ;incstack = 0
 17451                           ; Regs used in _TMR1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17452  1B84  1011               	bcf	17,0	;volatile
 17453                           
 17454                           ;mcc_generated_files/tmr1.c: 358:     TMR1_WriteTimer(timer1ReloadVal);
 17455  1B85  0022               	movlb	2	; select bank2
 17456  1B86  0831               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 17457  1B87  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 17458  1B88  0830               	movf	_timer1ReloadVal^(0+256),w	;volatile
 17459  1B89  00F0               	movwf	TMR1_WriteTimer@timerVal
 17460  1B8A  319B  2363  319B   	fcall	_TMR1_WriteTimer
 17461                           
 17462                           ;mcc_generated_files/tmr1.c: 360:     if(TMR1_InterruptHandler)
 17463  1B8D  0022               	movlb	2	; select bank2
 17464  1B8E  082E               	movf	_TMR1_InterruptHandler^(0+256),w
 17465  1B8F  042F               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 17466  1B90  1903               	btfsc	3,2
 17467  1B91  0008               	return
 17468                           
 17469                           ;mcc_generated_files/tmr1.c: 361:     {;mcc_generated_files/tmr1.c: 362:         TMR1_In
      +                          terruptHandler();
 17470  1B92  082F               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 17471  1B93  008A               	movwf	10
 17472  1B94  082E               	movf	_TMR1_InterruptHandler^(0+256),w
 17473  1B95  000A               	callw
 17474  1B96  319B               	pagesel	$
 17475  1B97  0008               	return
 17476  1B98                     __end_of_TMR1_ISR:
 17477                           
 17478                           	psect	text76
 17479  1B63                     __ptext76:	
 17480 ;; *************** function _TMR1_WriteTimer *****************
 17481 ;; Defined at:
 17482 ;;		line 239 in file "mcc_generated_files/tmr1.c"
 17483 ;; Parameters:    Size  Location     Type
 17484 ;;  timerVal        2    0[COMMON] unsigned short 
 17485 ;; Auto vars:     Size  Location     Type
 17486 ;;		None
 17487 ;; Return value:  Size  Location     Type
 17488 ;;                  1    wreg      void 
 17489 ;; Registers used:
 17490 ;;		wreg
 17491 ;; Tracked objects:
 17492 ;;		On entry : 1F/2
 17493 ;;		On exit  : 1F/0
 17494 ;;		Unchanged: 0/0
 17495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17499 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17500 ;;Total ram usage:        2 bytes
 17501 ;; Hardware stack levels used:    1
 17502 ;; This function calls:
 17503 ;;		Nothing
 17504 ;; This function is called by:
 17505 ;;		_TMR1_ISR
 17506 ;; This function uses a non-reentrant model
 17507 ;;
 17508                           
 17509                           
 17510                           ;psect for function _TMR1_WriteTimer
 17511  1B63                     _TMR1_WriteTimer:
 17512                           
 17513                           ;mcc_generated_files/tmr1.c: 239: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 240: {;mcc_generated_files/tmr1.c: 241:     if (T1CONbits.T1SYNC == 1)
 17514                           
 17515                           ;incstack = 0
 17516                           ; Regs used in _TMR1_WriteTimer: [wreg]
 17517  1B63  0020               	movlb	0	; select bank0
 17518  1B64  1D1B               	btfss	27,2	;volatile
 17519  1B65  2B6D               	goto	i1l5510
 17520                           
 17521                           ;mcc_generated_files/tmr1.c: 242:     {;mcc_generated_files/tmr1.c: 244:         T1CONbi
      +                          ts.TMR1ON = 0;
 17522  1B66  101B               	bcf	27,0	;volatile
 17523                           
 17524                           ;mcc_generated_files/tmr1.c: 247:         TMR1H = (timerVal >> 8);
 17525  1B67  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17526  1B68  009A               	movwf	26	;volatile
 17527                           
 17528                           ;mcc_generated_files/tmr1.c: 248:         TMR1L = timerVal;
 17529  1B69  0870               	movf	TMR1_WriteTimer@timerVal,w
 17530  1B6A  0099               	movwf	25	;volatile
 17531                           
 17532                           ;mcc_generated_files/tmr1.c: 251:         T1CONbits.TMR1ON =1;
 17533  1B6B  141B               	bsf	27,0	;volatile
 17534                           
 17535                           ;mcc_generated_files/tmr1.c: 252:     }
 17536  1B6C  0008               	return
 17537  1B6D                     i1l5510:
 17538                           
 17539                           ;mcc_generated_files/tmr1.c: 254:     {;mcc_generated_files/tmr1.c: 256:         TMR1H =
      +                           (timerVal >> 8);
 17540  1B6D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 17541  1B6E  009A               	movwf	26	;volatile
 17542                           
 17543                           ;mcc_generated_files/tmr1.c: 257:         TMR1L = timerVal;
 17544  1B6F  0870               	movf	TMR1_WriteTimer@timerVal,w
 17545  1B70  0099               	movwf	25	;volatile
 17546  1B71  0008               	return
 17547  1B72                     __end_of_TMR1_WriteTimer:
 17548                           
 17549                           	psect	text77
 17550  087C                     __ptext77:	
 17551 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 17552 ;; Defined at:
 17553 ;;		line 372 in file "mcc_generated_files/tmr1.c"
 17554 ;; Parameters:    Size  Location     Type
 17555 ;;		None
 17556 ;; Auto vars:     Size  Location     Type
 17557 ;;		None
 17558 ;; Return value:  Size  Location     Type
 17559 ;;                  1    wreg      void 
 17560 ;; Registers used:
 17561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17562 ;; Tracked objects:
 17563 ;;		On entry : 1F/2
 17564 ;;		On exit  : 1F/2
 17565 ;;		Unchanged: 0/0
 17566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17569 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17570 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17571 ;;Total ram usage:        2 bytes
 17572 ;; Hardware stack levels used:    1
 17573 ;; Hardware stack levels required when called:    1
 17574 ;; This function calls:
 17575 ;;		_get7seg_font
 17576 ;;		_read_clickRE
 17577 ;; This function is called by:
 17578 ;;		_TMR1_Initialize
 17579 ;;		_TMR1_ISR
 17580 ;; This function uses a non-reentrant model
 17581 ;;
 17582                           
 17583                           
 17584                           ;psect for function _TMR1_DefaultInterruptHandler
 17585  087C                     _TMR1_DefaultInterruptHandler:
 17586                           
 17587                           ;mcc_generated_files/tmr1.c: 376: static unsigned char led_blink[]={0, 0, 0};;mcc_genera
      +                          ted_files/tmr1.c: 377: static unsigned char intcnt;;mcc_generated_files/tmr1.c: 378: sta
      +                          tic unsigned int pushcnt = 0;;mcc_generated_files/tmr1.c: 379: static unsigned char push
      +                          stat = 0;;mcc_generated_files/tmr1.c: 380: static signed char RE_offset;;mcc_generated_f
      +                          iles/tmr1.c: 382: switch ( intcnt++)
 17588                           
 17589                           ;incstack = 0
 17590                           ; Regs used in _TMR1_DefaultInterruptHandler: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 17591  087C  28B3               	goto	i1l5528
 17592  087D                     i1l377:	
 17593                           ;mcc_generated_files/tmr1.c: 385:             {;mcc_generated_files/tmr1.c: 386:        
      +                                do { LATAbits.LATA2 = 0; } while(0);
 17594                           
 17595  087D  110C               	bcf	12,2	;volatile
 17596                           
 17597                           ;mcc_generated_files/tmr1.c: 387:              if(led_blink[0] < 0xc0)
 17598  087E  30C0               	movlw	192
 17599  087F  0220               	subwf	TMR1_DefaultInterruptHandler@led_blink^(0+256),w
 17600  0880  1803               	skipnc
 17601  0881  2884               	goto	i1l383
 17602                           
 17603                           ;mcc_generated_files/tmr1.c: 388:                     do { LATAbits.LATA0 = 1; } while(0
      +                          );
 17604  0882  140C               	bsf	12,0	;volatile
 17605  0883  2885               	goto	i1l5516
 17606  0884                     i1l383:
 17607  0884  100C               	bcf	12,0	;volatile
 17608  0885                     i1l5516:
 17609                           
 17610                           ;mcc_generated_files/tmr1.c: 390:             PORTC = led_dot[0] & get7seg_font(ledbuff[
      +                          0]);
 17611  0885  0024               	movlb	4	; select bank4
 17612  0886  0835               	movf	_ledbuff^(0+512),w
 17613  0887  319C  2492  3188   	fcall	_get7seg_font
 17614  088A  0023               	movlb	3	; select bank3
 17615  088B  0520               	andwf	_led_dot^(0+384),w
 17616  088C  289C               	goto	L9
 17617  088D                     i1l387:	
 17618                           ;mcc_generated_files/tmr1.c: 394:            {;mcc_generated_files/tmr1.c: 395:         
      +                             do { LATAbits.LATA0 = 0; } while(0);
 17619                           
 17620                           ;mcc_generated_files/tmr1.c: 391:             break;
 17621                           
 17622  088D  100C               	bcf	12,0	;volatile
 17623                           
 17624                           ;mcc_generated_files/tmr1.c: 396:            if(led_blink[1] < 0xc0)
 17625  088E  30C0               	movlw	192
 17626  088F  0221               	subwf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+1),w
 17627  0890  1803               	skipnc
 17628  0891  2894               	goto	i1l393
 17629                           
 17630                           ;mcc_generated_files/tmr1.c: 397:                       do { LATAbits.LATA1 = 1; } while
      +                          (0);
 17631  0892  148C               	bsf	12,1	;volatile
 17632  0893  2895               	goto	i1l5520
 17633  0894                     i1l393:
 17634  0894  108C               	bcf	12,1	;volatile
 17635  0895                     i1l5520:
 17636                           
 17637                           ;mcc_generated_files/tmr1.c: 399:             PORTC = led_dot[1] & get7seg_font(ledbuff[
      +                          1]);
 17638  0895  0024               	movlb	4	; select bank4
 17639  0896  0836               	movf	(_ledbuff^(0+512)+1),w
 17640  0897  319C  2492  3188   	fcall	_get7seg_font
 17641  089A  0023               	movlb	3	; select bank3
 17642  089B  0521               	andwf	(_led_dot^(0+384)+1),w
 17643  089C                     L9:
 17644  089C  0020               	movlb	0	; select bank0
 17645  089D  008E               	movwf	14	;volatile
 17646                           
 17647                           ;mcc_generated_files/tmr1.c: 400:             break;
 17648  089E  28C7               	goto	i1l5530
 17649  089F                     i1l396:	
 17650                           ;mcc_generated_files/tmr1.c: 403:            {;mcc_generated_files/tmr1.c: 404:         
      +                             do { LATAbits.LATA1 = 0; } while(0);
 17651                           
 17652  089F  108C               	bcf	12,1	;volatile
 17653                           
 17654                           ;mcc_generated_files/tmr1.c: 405:            if(led_blink[0] < 0xc0)
 17655  08A0  30C0               	movlw	192
 17656  08A1  0220               	subwf	TMR1_DefaultInterruptHandler@led_blink^(0+256),w
 17657  08A2  1803               	skipnc
 17658  08A3  28A6               	goto	i1l402
 17659                           
 17660                           ;mcc_generated_files/tmr1.c: 406:                       do { LATAbits.LATA2 = 1; } while
      +                          (0);
 17661  08A4  150C               	bsf	12,2	;volatile
 17662  08A5  28A7               	goto	i1l5524
 17663  08A6                     i1l402:
 17664  08A6  110C               	bcf	12,2	;volatile
 17665  08A7                     i1l5524:
 17666                           
 17667                           ;mcc_generated_files/tmr1.c: 408:             PORTC = led_dot[2] & get7seg_font(ledbuff[
      +                          2]);
 17668  08A7  0024               	movlb	4	; select bank4
 17669  08A8  0837               	movf	(_ledbuff^(0+512)+2),w
 17670  08A9  319C  2492  3188   	fcall	_get7seg_font
 17671  08AC  0023               	movlb	3	; select bank3
 17672  08AD  0522               	andwf	(_led_dot^(0+384)+2),w
 17673  08AE  0020               	movlb	0	; select bank0
 17674  08AF  008E               	movwf	14	;volatile
 17675  08B0                     i1l5526:
 17676                           
 17677                           ;mcc_generated_files/tmr1.c: 411:           intcnt = 0;
 17678  08B0  0022               	movlb	2	; select bank2
 17679  08B1  01C0               	clrf	TMR1_DefaultInterruptHandler@intcnt^(0+256)
 17680                           
 17681                           ;mcc_generated_files/tmr1.c: 412:         }
 17682  08B2  28C7               	goto	i1l5530
 17683  08B3                     i1l5528:
 17684  08B3  0840               	movf	TMR1_DefaultInterruptHandler@intcnt^(0+256),w
 17685  08B4  0AC0               	incf	TMR1_DefaultInterruptHandler@intcnt^(0+256),f
 17686  08B5  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17687  08B6  01F6               	clrf	??_TMR1_DefaultInterruptHandler+1
 17688                           
 17689                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 17690                           ; Switch size 1, requested type "simple"
 17691                           ; Number of cases is 1, Range of values is 0 to 0
 17692                           ; switch strategies available:
 17693                           ; Name         Instructions Cycles
 17694                           ; simple_byte            4     3 (average)
 17695                           ; direct_byte            8     6 (fixed)
 17696                           ; jumptable            260     6 (fixed)
 17697                           ;	Chosen strategy is simple_byte
 17698  08B7  0876               	movf	??_TMR1_DefaultInterruptHandler+1,w
 17699  08B8  3A00               	xorlw	0	; case 0
 17700  08B9  1903               	skipnz
 17701  08BA  28BC               	goto	i1l8176
 17702  08BB  28B0               	goto	i1l5526
 17703  08BC                     i1l8176:
 17704                           
 17705                           ; Switch size 1, requested type "simple"
 17706                           ; Number of cases is 3, Range of values is 0 to 2
 17707                           ; switch strategies available:
 17708                           ; Name         Instructions Cycles
 17709                           ; simple_byte           10     6 (average)
 17710                           ; direct_byte           12     6 (fixed)
 17711                           ; jumptable            260     6 (fixed)
 17712                           ;	Chosen strategy is simple_byte
 17713  08BC  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 17714  08BD  3A00               	xorlw	0	; case 0
 17715  08BE  1903               	skipnz
 17716  08BF  287D               	goto	i1l377
 17717  08C0  3A01               	xorlw	1	; case 1
 17718  08C1  1903               	skipnz
 17719  08C2  288D               	goto	i1l387
 17720  08C3  3A03               	xorlw	3	; case 2
 17721  08C4  1903               	skipnz
 17722  08C5  289F               	goto	i1l396
 17723  08C6  28B0               	goto	i1l5526
 17724  08C7                     i1l5530:
 17725                           
 17726                           ;mcc_generated_files/tmr1.c: 413: RE_offset =read_clickRE();
 17727  08C7  3191  21C6  3188   	fcall	_read_clickRE
 17728  08CA  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17729  08CB  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 17730  08CC  00FD               	movwf	TMR1_DefaultInterruptHandler@RE_offset
 17731                           
 17732                           ;mcc_generated_files/tmr1.c: 414: if (RE_offset > 0)
 17733  08CD  087D               	movf	TMR1_DefaultInterruptHandler@RE_offset,w
 17734  08CE  3A80               	xorlw	128
 17735  08CF  3E7F               	addlw	-129
 17736  08D0  1C03               	skipc
 17737  08D1  28E8               	goto	i1l5542
 17738                           
 17739                           ;mcc_generated_files/tmr1.c: 415:          {;mcc_generated_files/tmr1.c: 416:          i
      +                          f (RE_pos > 247)
 17740  08D2  30F8               	movlw	248
 17741  08D3  0021               	movlb	1	; select bank1
 17742  08D4  0269               	subwf	_RE_pos^(0+128),w
 17743  08D5  1C03               	skipc
 17744  08D6  28E3               	goto	i1l5540
 17745                           
 17746                           ;mcc_generated_files/tmr1.c: 417:                 {;mcc_generated_files/tmr1.c: 418:    
      +                                       if (238> (unsigned char)(RE_pos + RE_offset))
 17747  08D7  0869               	movf	_RE_pos^(0+128),w
 17748  08D8  077D               	addwf	TMR1_DefaultInterruptHandler@RE_offset,w
 17749  08D9  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17750  08DA  30EE               	movlw	238
 17751  08DB  0275               	subwf	??_TMR1_DefaultInterruptHandler,w
 17752  08DC  1803               	skipnc
 17753  08DD  28F4               	goto	i1l409
 17754                           
 17755                           ;mcc_generated_files/tmr1.c: 419:                     RE_pos =255;
 17756  08DE  30FF               	movlw	255
 17757  08DF  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17758  08E0  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 17759  08E1  00E9               	movwf	_RE_pos^(0+128)
 17760  08E2  28F4               	goto	i1l409
 17761  08E3                     i1l5540:
 17762  08E3  087D               	movf	TMR1_DefaultInterruptHandler@RE_offset,w
 17763  08E4  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17764  08E5  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 17765  08E6  07E9               	addwf	_RE_pos^(0+128),f
 17766  08E7  28F4               	goto	i1l409
 17767  08E8                     i1l5542:
 17768                           
 17769                           ;mcc_generated_files/tmr1.c: 424:        {;mcc_generated_files/tmr1.c: 425:          if 
      +                          (RE_pos < 8)
 17770  08E8  3008               	movlw	8
 17771  08E9  0021               	movlb	1	; select bank1
 17772  08EA  0269               	subwf	_RE_pos^(0+128),w
 17773  08EB  1803               	skipnc
 17774  08EC  28E3               	goto	i1l5540
 17775                           
 17776                           ;mcc_generated_files/tmr1.c: 426:                 {;mcc_generated_files/tmr1.c: 427:    
      +                                       if (17 < (unsigned char)(RE_pos + RE_offset))
 17777  08ED  0869               	movf	_RE_pos^(0+128),w
 17778  08EE  077D               	addwf	TMR1_DefaultInterruptHandler@RE_offset,w
 17779  08EF  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17780  08F0  3012               	movlw	18
 17781  08F1  0275               	subwf	??_TMR1_DefaultInterruptHandler,w
 17782  08F2  1803               	btfsc	3,0
 17783                           
 17784                           ;mcc_generated_files/tmr1.c: 428:                     RE_pos =0;
 17785  08F3  01E9               	clrf	_RE_pos^(0+128)
 17786  08F4                     i1l409:	
 17787                           ;mcc_generated_files/tmr1.c: 432:         }
 17788                           
 17789                           
 17790                           ;mcc_generated_files/tmr1.c: 436:  if(blink_rate[0])
 17791  08F4  0022               	movlb	2	; select bank2
 17792  08F5  0823               	movf	_blink_rate^(0+256),w
 17793  08F6  1903               	btfsc	3,2
 17794  08F7  28FD               	goto	i1l5552
 17795                           
 17796                           ;mcc_generated_files/tmr1.c: 437:          led_blink[0] += blink_rate[0];
 17797  08F8  0823               	movf	_blink_rate^(0+256),w
 17798  08F9  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17799  08FA  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 17800  08FB  07A0               	addwf	TMR1_DefaultInterruptHandler@led_blink^(0+256),f
 17801  08FC  28FE               	goto	i1l5554
 17802  08FD                     i1l5552:
 17803  08FD  01A0               	clrf	TMR1_DefaultInterruptHandler@led_blink^(0+256)
 17804  08FE                     i1l5554:
 17805                           
 17806                           ;mcc_generated_files/tmr1.c: 439: if(blink_rate[1])
 17807  08FE  0824               	movf	(_blink_rate^(0+256)+1),w
 17808  08FF  1903               	btfsc	3,2
 17809  0900  2906               	goto	i1l5558
 17810                           
 17811                           ;mcc_generated_files/tmr1.c: 440:         led_blink[1] += blink_rate[1];
 17812  0901  0824               	movf	(_blink_rate^(0+256)+1),w
 17813  0902  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17814  0903  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 17815  0904  07A1               	addwf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+1),f
 17816  0905  2907               	goto	i1l5560
 17817  0906                     i1l5558:
 17818  0906  01A1               	clrf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+1)
 17819  0907                     i1l5560:
 17820                           
 17821                           ;mcc_generated_files/tmr1.c: 442: if(blink_rate[2])
 17822  0907  0825               	movf	(_blink_rate^(0+256)+2),w
 17823  0908  1903               	btfsc	3,2
 17824  0909  290F               	goto	i1l5564
 17825                           
 17826                           ;mcc_generated_files/tmr1.c: 443:         led_blink[2] += blink_rate[2];
 17827  090A  0825               	movf	(_blink_rate^(0+256)+2),w
 17828  090B  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17829  090C  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 17830  090D  07A2               	addwf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+2),f
 17831  090E  2910               	goto	i1l5566
 17832  090F                     i1l5564:
 17833  090F  01A2               	clrf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+2)
 17834  0910                     i1l5566:
 17835                           
 17836                           ;mcc_generated_files/tmr1.c: 446: if (PORTAbits.RA3 == 1)
 17837  0910  0020               	movlb	0	; select bank0
 17838  0911  1D8C               	btfss	12,3	;volatile
 17839  0912  2920               	goto	i1l5576
 17840                           
 17841                           ;mcc_generated_files/tmr1.c: 447:     {;mcc_generated_files/tmr1.c: 448:     if (pushsta
      +                          t !=0)
 17842  0913  0022               	movlb	2	; select bank2
 17843  0914  083F               	movf	TMR1_DefaultInterruptHandler@pushstat^(0+256),w
 17844  0915  1903               	btfsc	3,2
 17845  0916  291D               	goto	i1l5574
 17846                           
 17847                           ;mcc_generated_files/tmr1.c: 449:         {;mcc_generated_files/tmr1.c: 450:         but
      +                          ton1 = pushstat;
 17848  0917  083F               	movf	TMR1_DefaultInterruptHandler@pushstat^(0+256),w
 17849  0918  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17850  0919  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 17851  091A  00C5               	movwf	_button1^(0+256)
 17852                           
 17853                           ;mcc_generated_files/tmr1.c: 451:         pushstat = 0;
 17854  091B  01BF               	clrf	TMR1_DefaultInterruptHandler@pushstat^(0+256)
 17855                           
 17856                           ;mcc_generated_files/tmr1.c: 452:         }
 17857  091C  0008               	return
 17858  091D                     i1l5574:
 17859                           
 17860                           ;mcc_generated_files/tmr1.c: 454:         {;mcc_generated_files/tmr1.c: 455:          pu
      +                          shcnt =0;
 17861  091D  01AC               	clrf	TMR1_DefaultInterruptHandler@pushcnt^(0+256)
 17862  091E  01AD               	clrf	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256)
 17863  091F  0008               	return
 17864  0920                     i1l5576:
 17865                           
 17866                           ;mcc_generated_files/tmr1.c: 459:     {;mcc_generated_files/tmr1.c: 460:     ++pushcnt;
 17867  0920  3001               	movlw	1
 17868  0921  0022               	movlb	2	; select bank2
 17869  0922  07AC               	addwf	TMR1_DefaultInterruptHandler@pushcnt^(0+256),f
 17870  0923  3000               	movlw	0
 17871  0924  3DAD               	addwfc	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256),f
 17872                           
 17873                           ;mcc_generated_files/tmr1.c: 461:     if (pushcnt > 10)
 17874  0925  3000               	movlw	0
 17875  0926  022D               	subwf	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256),w
 17876  0927  300B               	movlw	11
 17877  0928  1903               	skipnz
 17878  0929  022C               	subwf	TMR1_DefaultInterruptHandler@pushcnt^(0+256),w
 17879  092A  1C03               	skipc
 17880  092B  0008               	return
 17881                           
 17882                           ;mcc_generated_files/tmr1.c: 462:         {;mcc_generated_files/tmr1.c: 463:         pus
      +                          hstat = 1;
 17883  092C  01BF               	clrf	TMR1_DefaultInterruptHandler@pushstat^(0+256)
 17884  092D  0ABF               	incf	TMR1_DefaultInterruptHandler@pushstat^(0+256),f
 17885                           
 17886                           ;mcc_generated_files/tmr1.c: 464:         if (pushcnt > 500)
 17887  092E  3001               	movlw	1
 17888  092F  022D               	subwf	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256),w
 17889  0930  30F5               	movlw	245
 17890  0931  1903               	skipnz
 17891  0932  022C               	subwf	TMR1_DefaultInterruptHandler@pushcnt^(0+256),w
 17892  0933  1C03               	skipc
 17893  0934  0008               	return
 17894                           
 17895                           ;mcc_generated_files/tmr1.c: 465:              pushstat = 2;
 17896  0935  3002               	movlw	2
 17897  0936  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 17898  0937  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 17899  0938  00BF               	movwf	TMR1_DefaultInterruptHandler@pushstat^(0+256)
 17900  0939  0008               	return
 17901  093A                     __end_of_TMR1_DefaultInterruptHandler:
 17902                           
 17903                           	psect	text78
 17904  11C6                     __ptext78:	
 17905 ;; *************** function _read_clickRE *****************
 17906 ;; Defined at:
 17907 ;;		line 325 in file "mcc_generated_files/tmr1.c"
 17908 ;; Parameters:    Size  Location     Type
 17909 ;;		None
 17910 ;; Auto vars:     Size  Location     Type
 17911 ;;  current         1    4[COMMON] char 
 17912 ;; Return value:  Size  Location     Type
 17913 ;;                  1    wreg      char 
 17914 ;; Registers used:
 17915 ;;		wreg, status,2, status,0
 17916 ;; Tracked objects:
 17917 ;;		On entry : 1D/0
 17918 ;;		On exit  : 1F/2
 17919 ;;		Unchanged: 0/0
 17920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17922 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17924 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17925 ;;Total ram usage:        5 bytes
 17926 ;; Hardware stack levels used:    1
 17927 ;; This function calls:
 17928 ;;		Nothing
 17929 ;; This function is called by:
 17930 ;;		_TMR1_DefaultInterruptHandler
 17931 ;; This function uses a non-reentrant model
 17932 ;;
 17933                           
 17934                           
 17935                           ;psect for function _read_clickRE
 17936  11C6                     _read_clickRE:
 17937                           
 17938                           ;mcc_generated_files/tmr1.c: 326:   static unsigned char index, interval;;mcc_generated_
      +                          files/tmr1.c: 327:      signed char current;;mcc_generated_files/tmr1.c: 329:      curre
      +                          nt = PORTAbits.RA5;
 17939                           
 17940                           ;incstack = 0
 17941                           ; Regs used in _read_clickRE: [wreg+status,2+status,0]
 17942  11C6  3000               	movlw	0
 17943  11C7  0020               	movlb	0	; select bank0
 17944  11C8  1A8C               	btfsc	12,5	;volatile
 17945  11C9  3001               	movlw	1
 17946  11CA  00F4               	movwf	read_clickRE@current
 17947                           
 17948                           ;mcc_generated_files/tmr1.c: 330:    if((current != index) && (current== 0))
 17949  11CB  0874               	movf	read_clickRE@current,w
 17950  11CC  00F0               	movwf	??_read_clickRE
 17951  11CD  01F1               	clrf	??_read_clickRE+1
 17952  11CE  1BF0               	btfsc	??_read_clickRE,7
 17953  11CF  03F1               	decf	??_read_clickRE+1,f
 17954  11D0  0022               	movlb	2	; select bank2
 17955  11D1  0842               	movf	read_clickRE@index^(0+256),w
 17956  11D2  0670               	xorwf	??_read_clickRE,w
 17957  11D3  0471               	iorwf	??_read_clickRE+1,w
 17958  11D4  1903               	skipnz
 17959  11D5  2A01               	goto	i1l5222
 17960  11D6  0874               	movf	read_clickRE@current,w
 17961  11D7  1D03               	btfss	3,2
 17962  11D8  2A01               	goto	i1l5222
 17963                           
 17964                           ;mcc_generated_files/tmr1.c: 331:         {;mcc_generated_files/tmr1.c: 332:         ind
      +                          ex =current;
 17965  11D9  0874               	movf	read_clickRE@current,w
 17966  11DA  00F0               	movwf	??_read_clickRE
 17967  11DB  0870               	movf	??_read_clickRE,w
 17968  11DC  00C2               	movwf	read_clickRE@index^(0+256)
 17969                           
 17970                           ;mcc_generated_files/tmr1.c: 333:         current = PORTAbits.RA4 ? 1 : -1;
 17971  11DD  0020               	movlb	0	; select bank0
 17972  11DE  1A0C               	btfsc	12,4	;volatile
 17973  11DF  29E4               	goto	i1l5212
 17974  11E0  30FF               	movlw	255
 17975  11E1  00F2               	movwf	_read_clickRE$506
 17976  11E2  30FF               	movlw	255
 17977  11E3  29E7               	goto	L10
 17978  11E4                     i1l5212:
 17979  11E4  3001               	movlw	1
 17980  11E5  00F2               	movwf	_read_clickRE$506
 17981  11E6  3000               	movlw	0
 17982  11E7                     L10:
 17983  11E7  00F3               	movwf	_read_clickRE$506+1
 17984  11E8  0872               	movf	_read_clickRE$506,w
 17985  11E9  00F0               	movwf	??_read_clickRE
 17986  11EA  0870               	movf	??_read_clickRE,w
 17987  11EB  00F4               	movwf	read_clickRE@current
 17988                           
 17989                           ;mcc_generated_files/tmr1.c: 334:         if (interval <5)
 17990  11EC  3005               	movlw	5
 17991  11ED  0022               	movlb	2	; select bank2
 17992  11EE  0241               	subwf	read_clickRE@interval^(0+256),w
 17993  11EF  1803               	skipnc
 17994  11F0  29F3               	goto	i1l350
 17995                           
 17996                           ;mcc_generated_files/tmr1.c: 335:            current *=2;
 17997  11F1  1003               	clrc
 17998  11F2  0DF4               	rlf	read_clickRE@current,f
 17999  11F3                     i1l350:
 18000                           
 18001                           ;mcc_generated_files/tmr1.c: 336:         if (interval <12)
 18002  11F3  300C               	movlw	12
 18003  11F4  0241               	subwf	read_clickRE@interval^(0+256),w
 18004  11F5  1803               	skipnc
 18005  11F6  29F9               	goto	i1l351
 18006                           
 18007                           ;mcc_generated_files/tmr1.c: 337:            current *=2;
 18008  11F7  1003               	clrc
 18009  11F8  0DF4               	rlf	read_clickRE@current,f
 18010  11F9                     i1l351:
 18011                           
 18012                           ;mcc_generated_files/tmr1.c: 338:         if (interval <20)
 18013  11F9  3014               	movlw	20
 18014  11FA  0241               	subwf	read_clickRE@interval^(0+256),w
 18015  11FB  1803               	skipnc
 18016  11FC  29FF               	goto	i1l5220
 18017                           
 18018                           ;mcc_generated_files/tmr1.c: 339:            current *=2;
 18019  11FD  1003               	clrc
 18020  11FE  0DF4               	rlf	read_clickRE@current,f
 18021  11FF                     i1l5220:
 18022                           
 18023                           ;mcc_generated_files/tmr1.c: 340:         interval =0;
 18024  11FF  01C1               	clrf	read_clickRE@interval^(0+256)
 18025                           
 18026                           ;mcc_generated_files/tmr1.c: 341:         }
 18027  1200  2A0E               	goto	i1l5230
 18028  1201                     i1l5222:
 18029                           
 18030                           ;mcc_generated_files/tmr1.c: 343:         {;mcc_generated_files/tmr1.c: 344:         ind
      +                          ex = current;
 18031  1201  0874               	movf	read_clickRE@current,w
 18032  1202  00F0               	movwf	??_read_clickRE
 18033  1203  0870               	movf	??_read_clickRE,w
 18034  1204  00C2               	movwf	read_clickRE@index^(0+256)
 18035                           
 18036                           ;mcc_generated_files/tmr1.c: 345:         current = 0;
 18037  1205  01F4               	clrf	read_clickRE@current
 18038                           
 18039                           ;mcc_generated_files/tmr1.c: 346:         if (interval <127)
 18040  1206  307F               	movlw	127
 18041  1207  0241               	subwf	read_clickRE@interval^(0+256),w
 18042  1208  1803               	skipnc
 18043  1209  2A0E               	goto	i1l5230
 18044                           
 18045                           ;mcc_generated_files/tmr1.c: 347:             ++interval;
 18046  120A  3001               	movlw	1
 18047  120B  00F0               	movwf	??_read_clickRE
 18048  120C  0870               	movf	??_read_clickRE,w
 18049  120D  07C1               	addwf	read_clickRE@interval^(0+256),f
 18050  120E                     i1l5230:
 18051                           
 18052                           ;mcc_generated_files/tmr1.c: 349:  return(current);
 18053  120E  0874               	movf	read_clickRE@current,w
 18054  120F  0008               	return
 18055  1210                     __end_of_read_clickRE:
 18056                           
 18057                           	psect	text79
 18058  1C92                     __ptext79:	
 18059 ;; *************** function _get7seg_font *****************
 18060 ;; Defined at:
 18061 ;;		line 280 in file "mcc_generated_files/tmr1.c"
 18062 ;; Parameters:    Size  Location     Type
 18063 ;;  cdata           1    wreg     unsigned char 
 18064 ;; Auto vars:     Size  Location     Type
 18065 ;;  cdata           1    2[COMMON] unsigned char 
 18066 ;;  fontdata        1    1[COMMON] unsigned char 
 18067 ;; Return value:  Size  Location     Type
 18068 ;;                  1    wreg      unsigned char 
 18069 ;; Registers used:
 18070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 18071 ;; Tracked objects:
 18072 ;;		On entry : 1F/4
 18073 ;;		On exit  : 1F/4
 18074 ;;		Unchanged: 1F/0
 18075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18079 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18080 ;;Total ram usage:        3 bytes
 18081 ;; Hardware stack levels used:    1
 18082 ;; This function calls:
 18083 ;;		Nothing
 18084 ;; This function is called by:
 18085 ;;		_TMR1_DefaultInterruptHandler
 18086 ;; This function uses a non-reentrant model
 18087 ;;
 18088                           
 18089                           
 18090                           ;psect for function _get7seg_font
 18091  1C92                     _get7seg_font:
 18092                           
 18093                           ;incstack = 0
 18094                           ; Regs used in _get7seg_font: [wreg-fsr0h+status,2+status,0+pclath]
 18095                           ;get7seg_font@cdata stored from wreg
 18096  1C92  00F2               	movwf	get7seg_font@cdata
 18097                           
 18098                           ;mcc_generated_files/tmr1.c: 280: unsigned char get7seg_font(char cdata);mcc_generated_f
      +                          iles/tmr1.c: 281: {;mcc_generated_files/tmr1.c: 282: unsigned char fontdata;;mcc_generat
      +                          ed_files/tmr1.c: 284:     if (cdata >= 0x20)
 18099  1C93  3020               	movlw	32
 18100  1C94  0272               	subwf	get7seg_font@cdata,w
 18101  1C95  1C03               	skipc
 18102  1C96  2CA2               	goto	i1l5196
 18103                           
 18104                           ;mcc_generated_files/tmr1.c: 285:         {;mcc_generated_files/tmr1.c: 286:         cda
      +                          ta -= 0x20;
 18105  1C97  3020               	movlw	32
 18106  1C98  02F2               	subwf	get7seg_font@cdata,f
 18107                           
 18108                           ;mcc_generated_files/tmr1.c: 287:         fontdata = font7seg[cdata];
 18109  1C99  0872               	movf	get7seg_font@cdata,w
 18110  1C9A  3E70               	addlw	low (_font7seg| (0+32768))
 18111  1C9B  0084               	movwf	4
 18112  1C9C  3098               	movlw	high (_font7seg| (0+32768))
 18113  1C9D  1803               	skipnc
 18114  1C9E  3E01               	addlw	1
 18115  1C9F  0085               	movwf	5
 18116  1CA0  0800               	movf	0,w	;code access
 18117  1CA1  2CA3               	goto	L11
 18118  1CA2                     i1l5196:	
 18119                           ;mcc_generated_files/tmr1.c: 288:          }
 18120                           
 18121                           
 18122                           ;mcc_generated_files/tmr1.c: 290:         fontdata = 0xff;
 18123  1CA2  30FF               	movlw	255
 18124  1CA3                     L11:
 18125  1CA3  00F0               	movwf	??_get7seg_font
 18126  1CA4  0870               	movf	??_get7seg_font,w
 18127  1CA5  00F1               	movwf	get7seg_font@fontdata
 18128                           
 18129                           ;mcc_generated_files/tmr1.c: 291: return(fontdata);
 18130  1CA6  0871               	movf	get7seg_font@fontdata,w
 18131  1CA7  0008               	return
 18132  1CA8                     __end_of_get7seg_font:
 18133                           
 18134                           	psect	text80
 18135  1A54                     __ptext80:	
 18136 ;; *************** function _I2C1_MasterIsr *****************
 18137 ;; Defined at:
 18138 ;;		line 319 in file "mcc_generated_files/i2c1_master.c"
 18139 ;; Parameters:    Size  Location     Type
 18140 ;;		None
 18141 ;; Auto vars:     Size  Location     Type
 18142 ;;		None
 18143 ;; Return value:  Size  Location     Type
 18144 ;;                  1    wreg      void 
 18145 ;; Registers used:
 18146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18147 ;; Tracked objects:
 18148 ;;		On entry : 1F/2
 18149 ;;		On exit  : 1F/3
 18150 ;;		Unchanged: 0/0
 18151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18156 ;;Total ram usage:        0 bytes
 18157 ;; Hardware stack levels used:    1
 18158 ;; Hardware stack levels required when called:    5
 18159 ;; This function calls:
 18160 ;;		_I2C1_MasterFsm
 18161 ;; This function is called by:
 18162 ;;		_I2C1_Open
 18163 ;;		_INTERRUPT_InterruptManager
 18164 ;; This function uses a non-reentrant model
 18165 ;;
 18166                           
 18167                           
 18168                           ;psect for function _I2C1_MasterIsr
 18169  1A54                     _I2C1_MasterIsr:
 18170                           
 18171                           ;mcc_generated_files/i2c1_master.c: 321:     I2C1_MasterFsm();
 18172                           
 18173                           ;incstack = 0
 18174                           ; Regs used in _I2C1_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18175  1A54  319F  27AB         	fcall	_I2C1_MasterFsm
 18176  1A56  0008               	return
 18177  1A57                     __end_of_I2C1_MasterIsr:
 18178                           
 18179                           	psect	text81
 18180  1FAB                     __ptext81:	
 18181 ;; *************** function _I2C1_MasterFsm *****************
 18182 ;; Defined at:
 18183 ;;		line 324 in file "mcc_generated_files/i2c1_master.c"
 18184 ;; Parameters:    Size  Location     Type
 18185 ;;		None
 18186 ;; Auto vars:     Size  Location     Type
 18187 ;;		None
 18188 ;; Return value:  Size  Location     Type
 18189 ;;                  1    wreg      void 
 18190 ;; Registers used:
 18191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18192 ;; Tracked objects:
 18193 ;;		On entry : 1F/2
 18194 ;;		On exit  : 1F/3
 18195 ;;		Unchanged: 0/0
 18196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18199 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18200 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18201 ;;Total ram usage:        3 bytes
 18202 ;; Hardware stack levels used:    1
 18203 ;; Hardware stack levels required when called:    4
 18204 ;; This function calls:
 18205 ;;		_I2C1_DO_ADDRESS_NACK
 18206 ;;		_I2C1_DO_IDLE
 18207 ;;		_I2C1_DO_RCEN
 18208 ;;		_I2C1_DO_RESET
 18209 ;;		_I2C1_DO_RX
 18210 ;;		_I2C1_DO_RX_ACK
 18211 ;;		_I2C1_DO_RX_NACK_RESTART
 18212 ;;		_I2C1_DO_RX_NACK_STOP
 18213 ;;		_I2C1_DO_SEND_ADR_READ
 18214 ;;		_I2C1_DO_SEND_ADR_WRITE
 18215 ;;		_I2C1_DO_SEND_RESTART
 18216 ;;		_I2C1_DO_SEND_RESTART_READ
 18217 ;;		_I2C1_DO_SEND_RESTART_WRITE
 18218 ;;		_I2C1_DO_SEND_STOP
 18219 ;;		_I2C1_DO_TX
 18220 ;;		_I2C1_DO_TX_EMPTY
 18221 ;;		_I2C1_MasterIsNack
 18222 ;;		i1_I2C1_MasterClearIrq
 18223 ;; This function is called by:
 18224 ;;		_I2C1_MasterIsr
 18225 ;; This function uses a non-reentrant model
 18226 ;;
 18227                           
 18228                           
 18229                           ;psect for function _I2C1_MasterFsm
 18230  1FAB                     _I2C1_MasterFsm:
 18231                           
 18232                           ;mcc_generated_files/i2c1_master.c: 326:     I2C1_MasterClearIrq();
 18233                           
 18234                           ;incstack = 0
 18235                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18236  1FAB  319A  2251  319F   	fcall	i1_I2C1_MasterClearIrq
 18237                           
 18238                           ;mcc_generated_files/i2c1_master.c: 328:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 18239  1FAE  0023               	movlb	3	; select bank3
 18240  1FAF  1C6C               	btfss	(_I2C1_Status^(0+384)+29),0
 18241  1FB0  2FBD               	goto	i1l7468
 18242  1FB1  319A  229D  319F   	fcall	_I2C1_MasterIsNack
 18243  1FB4  3A00               	xorlw	0
 18244  1FB5  1903               	skipnz
 18245  1FB6  2FBD               	goto	i1l7468
 18246                           
 18247                           ;mcc_generated_files/i2c1_master.c: 329:     {;mcc_generated_files/i2c1_master.c: 330:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 18248  1FB7  300F               	movlw	15
 18249  1FB8  0020               	movlb	0	; select bank0
 18250  1FB9  00A0               	movwf	??_I2C1_MasterFsm
 18251  1FBA  0820               	movf	??_I2C1_MasterFsm,w
 18252  1FBB  0023               	movlb	3	; select bank3
 18253  1FBC  00EA               	movwf	(_I2C1_Status^(0+384)+27)
 18254  1FBD                     i1l7468:
 18255                           
 18256                           ;mcc_generated_files/i2c1_master.c: 332:     I2C1_Status.state = fsmStateTable[I2C1_Stat
      +                          us.state]();
 18257  1FBD  0023               	movlb	3	; select bank3
 18258  1FBE  086A               	movf	(_I2C1_Status^(0+384)+27),w
 18259  1FBF  0020               	movlb	0	; select bank0
 18260  1FC0  00A0               	movwf	??_I2C1_MasterFsm
 18261  1FC1  01A1               	clrf	??_I2C1_MasterFsm+1
 18262  1FC2  35A0               	lslf	??_I2C1_MasterFsm,f
 18263  1FC3  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 18264  1FC4  3075               	movlw	low (_fsmStateTable| (0+32768))
 18265  1FC5  0720               	addwf	??_I2C1_MasterFsm,w
 18266  1FC6  0084               	movwf	4
 18267  1FC7  30A0               	movlw	high (_fsmStateTable| (0+32768))
 18268  1FC8  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 18269  1FC9  0085               	movwf	5
 18270  1FCA  3F01               	moviw [1]fsr0
 18271  1FCB  008A               	movwf	10
 18272  1FCC  3F00               	moviw [0]fsr0
 18273  1FCD  000A               	callw
 18274  1FCE  319F               	pagesel	$
 18275  1FCF  0020               	movlb	0	; select bank0
 18276  1FD0  00A2               	movwf	??_I2C1_MasterFsm+2
 18277  1FD1  0822               	movf	??_I2C1_MasterFsm+2,w
 18278  1FD2  0023               	movlb	3	; select bank3
 18279  1FD3  00EA               	movwf	(_I2C1_Status^(0+384)+27)
 18280  1FD4  0008               	return
 18281  1FD5                     __end_of_I2C1_MasterFsm:
 18282                           
 18283                           	psect	text82
 18284  1A51                     __ptext82:	
 18285 ;; *************** function i1_I2C1_MasterClearIrq *****************
 18286 ;; Defined at:
 18287 ;;		line 644 in file "mcc_generated_files/i2c1_master.c"
 18288 ;; Parameters:    Size  Location     Type
 18289 ;;		None
 18290 ;; Auto vars:     Size  Location     Type
 18291 ;;		None
 18292 ;; Return value:  Size  Location     Type
 18293 ;;                  1    wreg      void 
 18294 ;; Registers used:
 18295 ;;		None
 18296 ;; Tracked objects:
 18297 ;;		On entry : 1F/2
 18298 ;;		On exit  : 1F/0
 18299 ;;		Unchanged: 0/0
 18300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18305 ;;Total ram usage:        0 bytes
 18306 ;; Hardware stack levels used:    1
 18307 ;; This function calls:
 18308 ;;		Nothing
 18309 ;; This function is called by:
 18310 ;;		_I2C1_MasterFsm
 18311 ;; This function uses a non-reentrant model
 18312 ;;
 18313                           
 18314                           
 18315                           ;psect for function i1_I2C1_MasterClearIrq
 18316  1A51                     i1_I2C1_MasterClearIrq:
 18317                           
 18318                           ;mcc_generated_files/i2c1_master.c: 646:     PIR1bits.SSP1IF = 0;
 18319                           
 18320                           ;incstack = 0
 18321                           ; Regs used in i1_I2C1_MasterClearIrq: []
 18322  1A51  0020               	movlb	0	; select bank0
 18323  1A52  1191               	bcf	17,3	;volatile
 18324  1A53  0008               	return
 18325  1A54                     __end_ofi1_I2C1_MasterClearIrq:
 18326                           
 18327                           	psect	text83
 18328  1FD5                     __ptext83:	
 18329 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 18330 ;; Defined at:
 18331 ;;		line 502 in file "mcc_generated_files/i2c1_master.c"
 18332 ;; Parameters:    Size  Location     Type
 18333 ;;		None
 18334 ;; Auto vars:     Size  Location     Type
 18335 ;;		None
 18336 ;; Return value:  Size  Location     Type
 18337 ;;                  1    wreg      enum E7158
 18338 ;; Registers used:
 18339 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18340 ;; Tracked objects:
 18341 ;;		On entry : 1F/0
 18342 ;;		On exit  : 1F/4
 18343 ;;		Unchanged: 0/0
 18344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18347 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18348 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18349 ;;Total ram usage:        3 bytes
 18350 ;; Hardware stack levels used:    1
 18351 ;; Hardware stack levels required when called:    3
 18352 ;; This function calls:
 18353 ;;		Absolute function
 18354 ;;		_I2C1_CallbackReturnReset
 18355 ;;		_I2C1_CallbackReturnStop
 18356 ;;		_I2C1_DO_SEND_RESTART
 18357 ;;		_I2C1_DO_SEND_STOP
 18358 ;;		_rd1RegCompleteHandler
 18359 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 18360 ;;		_rd2RegCompleteHandler
 18361 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 18362 ;;		_rdBlkRegCompleteHandler
 18363 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 18364 ;;		_wr1RegCompleteHandler
 18365 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 18366 ;;		_wr2RegCompleteHandler
 18367 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 18368 ;; This function is called by:
 18369 ;;		_I2C1_MasterFsm
 18370 ;; This function uses a non-reentrant model
 18371 ;;
 18372                           
 18373                           
 18374                           ;psect for function _I2C1_DO_ADDRESS_NACK
 18375  1FD5                     _I2C1_DO_ADDRESS_NACK:
 18376                           
 18377                           ;mcc_generated_files/i2c1_master.c: 504:     I2C1_Status.addressNackCheck = 0;
 18378                           
 18379                           ;incstack = 0
 18380                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18381  1FD5  0023               	movlb	3	; select bank3
 18382  1FD6  106C               	bcf	(_I2C1_Status^(0+384)+29),0
 18383                           
 18384                           ;mcc_generated_files/i2c1_master.c: 505:     I2C1_Status.error = I2C1_FAIL;
 18385  1FD7  3002               	movlw	2
 18386  1FD8  00FA               	movwf	??_I2C1_DO_ADDRESS_NACK
 18387  1FD9  087A               	movf	??_I2C1_DO_ADDRESS_NACK,w
 18388  1FDA  00EB               	movwf	(_I2C1_Status^(0+384)+28)
 18389                           
 18390                           ;mcc_generated_files/i2c1_master.c: 506:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 18391  1FDB  2FE2               	goto	i1l7362
 18392  1FDC                     i1l7352:
 18393                           
 18394                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_RESTART();
 18395  1FDC  319A  2276         	fcall	_I2C1_DO_SEND_RESTART
 18396  1FDE  0008               	return
 18397  1FDF                     i1l7356:
 18398                           
 18399                           ;mcc_generated_files/i2c1_master.c: 512:             return I2C1_DO_SEND_STOP();
 18400  1FDF  319A  227A         	fcall	_I2C1_DO_SEND_STOP
 18401  1FE1  0008               	return
 18402  1FE2                     i1l7362:
 18403  1FE2  085D               	movf	(low ((_I2C1_Status| (0+256)+14)))^(0+128),w
 18404  1FE3  00FA               	movwf	??_I2C1_DO_ADDRESS_NACK
 18405  1FE4  087A               	movf	??_I2C1_DO_ADDRESS_NACK,w
 18406  1FE5  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 18407  1FE6  3004               	movlw	4
 18408  1FE7  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 18409  1FE8  0086               	movwf	6
 18410  1FE9  3001               	movlw	1	; select bank3/4
 18411  1FEA  0087               	movwf	7
 18412  1FEB  3F41               	moviw [1]fsr1
 18413  1FEC  008A               	movwf	10
 18414  1FED  3F40               	moviw [0]fsr1
 18415  1FEE  000A               	callw
 18416  1FEF  319F               	pagesel	$
 18417  1FF0  00FB               	movwf	??_I2C1_DO_ADDRESS_NACK+1
 18418  1FF1  01FC               	clrf	??_I2C1_DO_ADDRESS_NACK+2
 18419                           
 18420                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18421                           ; Switch size 1, requested type "simple"
 18422                           ; Number of cases is 1, Range of values is 0 to 0
 18423                           ; switch strategies available:
 18424                           ; Name         Instructions Cycles
 18425                           ; simple_byte            4     3 (average)
 18426                           ; direct_byte            8     6 (fixed)
 18427                           ; jumptable            260     6 (fixed)
 18428                           ;	Chosen strategy is simple_byte
 18429  1FF2  087C               	movf	??_I2C1_DO_ADDRESS_NACK+2,w
 18430  1FF3  3A00               	xorlw	0	; case 0
 18431  1FF4  1903               	skipnz
 18432  1FF5  2FF7               	goto	i1l8178
 18433  1FF6  2FDF               	goto	i1l7356
 18434  1FF7                     i1l8178:
 18435                           
 18436                           ; Switch size 1, requested type "simple"
 18437                           ; Number of cases is 2, Range of values is 2 to 3
 18438                           ; switch strategies available:
 18439                           ; Name         Instructions Cycles
 18440                           ; simple_byte            7     4 (average)
 18441                           ; direct_byte           13     9 (fixed)
 18442                           ; jumptable            263     9 (fixed)
 18443                           ;	Chosen strategy is simple_byte
 18444  1FF7  087B               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 18445  1FF8  3A02               	xorlw	2	; case 2
 18446  1FF9  1903               	skipnz
 18447  1FFA  2FDC               	goto	i1l7352
 18448  1FFB  3A01               	xorlw	1	; case 3
 18449  1FFC  1903               	skipnz
 18450  1FFD  2FDC               	goto	i1l7352
 18451  1FFE  2FDF               	goto	i1l7356
 18452  1FFF  0008               	return
 18453  2000                     __end_of_I2C1_DO_ADDRESS_NACK:
 18454                           
 18455                           	psect	text84
 18456  1A98                     __ptext84:	
 18457 ;; *************** function _I2C1_DO_RESET *****************
 18458 ;; Defined at:
 18459 ;;		line 496 in file "mcc_generated_files/i2c1_master.c"
 18460 ;; Parameters:    Size  Location     Type
 18461 ;;		None
 18462 ;; Auto vars:     Size  Location     Type
 18463 ;;		None
 18464 ;; Return value:  Size  Location     Type
 18465 ;;                  1    wreg      enum E7158
 18466 ;; Registers used:
 18467 ;;		wreg, status,2
 18468 ;; Tracked objects:
 18469 ;;		On entry : 1F/0
 18470 ;;		On exit  : 1F/3
 18471 ;;		Unchanged: 0/0
 18472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18477 ;;Total ram usage:        0 bytes
 18478 ;; Hardware stack levels used:    1
 18479 ;; This function calls:
 18480 ;;		Nothing
 18481 ;; This function is called by:
 18482 ;;		_I2C1_MasterFsm
 18483 ;; This function uses a non-reentrant model
 18484 ;;
 18485                           
 18486                           
 18487                           ;psect for function _I2C1_DO_RESET
 18488  1A98                     _I2C1_DO_RESET:
 18489                           
 18490                           ;mcc_generated_files/i2c1_master.c: 498:     I2C1_Status.busy = 0;
 18491                           
 18492                           ;incstack = 0
 18493                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 18494  1A98  0023               	movlb	3	; select bank3
 18495  1A99  10EC               	bcf	(_I2C1_Status^(0+384)+29),1
 18496                           
 18497                           ;mcc_generated_files/i2c1_master.c: 499:     I2C1_Status.error = I2C1_NOERR;
 18498  1A9A  01EB               	clrf	(_I2C1_Status^(0+384)+28)
 18499                           
 18500                           ;mcc_generated_files/i2c1_master.c: 500:     return I2C1_RESET;
 18501  1A9B  300E               	movlw	14
 18502  1A9C  0008               	return
 18503  1A9D                     __end_of_I2C1_DO_RESET:
 18504                           
 18505                           	psect	text85
 18506  1A86                     __ptext85:	
 18507 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 18508 ;; Defined at:
 18509 ;;		line 490 in file "mcc_generated_files/i2c1_master.c"
 18510 ;; Parameters:    Size  Location     Type
 18511 ;;		None
 18512 ;; Auto vars:     Size  Location     Type
 18513 ;;		None
 18514 ;; Return value:  Size  Location     Type
 18515 ;;                  1    wreg      enum E7158
 18516 ;; Registers used:
 18517 ;;		wreg, status,2, status,0, pclath, cstack
 18518 ;; Tracked objects:
 18519 ;;		On entry : 0/0
 18520 ;;		On exit  : 1F/4
 18521 ;;		Unchanged: 0/0
 18522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18527 ;;Total ram usage:        0 bytes
 18528 ;; Hardware stack levels used:    1
 18529 ;; Hardware stack levels required when called:    1
 18530 ;; This function calls:
 18531 ;;		_I2C1_MasterSendNack
 18532 ;; This function is called by:
 18533 ;;		_I2C1_DO_RX
 18534 ;;		_I2C1_MasterFsm
 18535 ;; This function uses a non-reentrant model
 18536 ;;
 18537                           
 18538                           
 18539                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 18540  1A86                     _I2C1_DO_RX_NACK_RESTART:
 18541                           
 18542                           ;mcc_generated_files/i2c1_master.c: 492:     I2C1_MasterSendNack();
 18543                           
 18544                           ;incstack = 0
 18545                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18546  1A86  319A  2266         	fcall	_I2C1_MasterSendNack
 18547                           
 18548                           ;mcc_generated_files/i2c1_master.c: 493:     return I2C1_SEND_RESTART;
 18549  1A88  3009               	movlw	9
 18550  1A89  0008               	return
 18551  1A8A                     __end_of_I2C1_DO_RX_NACK_RESTART:
 18552                           
 18553                           	psect	text86
 18554  1A82                     __ptext86:	
 18555 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 18556 ;; Defined at:
 18557 ;;		line 484 in file "mcc_generated_files/i2c1_master.c"
 18558 ;; Parameters:    Size  Location     Type
 18559 ;;		None
 18560 ;; Auto vars:     Size  Location     Type
 18561 ;;		None
 18562 ;; Return value:  Size  Location     Type
 18563 ;;                  1    wreg      enum E7158
 18564 ;; Registers used:
 18565 ;;		wreg, status,2, status,0, pclath, cstack
 18566 ;; Tracked objects:
 18567 ;;		On entry : 0/0
 18568 ;;		On exit  : 1F/4
 18569 ;;		Unchanged: 0/0
 18570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18575 ;;Total ram usage:        0 bytes
 18576 ;; Hardware stack levels used:    1
 18577 ;; Hardware stack levels required when called:    1
 18578 ;; This function calls:
 18579 ;;		_I2C1_MasterSendNack
 18580 ;; This function is called by:
 18581 ;;		_I2C1_DO_RX
 18582 ;;		_I2C1_MasterFsm
 18583 ;; This function uses a non-reentrant model
 18584 ;;
 18585                           
 18586                           
 18587                           ;psect for function _I2C1_DO_RX_NACK_STOP
 18588  1A82                     _I2C1_DO_RX_NACK_STOP:
 18589                           
 18590                           ;mcc_generated_files/i2c1_master.c: 486:     I2C1_MasterSendNack();
 18591                           
 18592                           ;incstack = 0
 18593                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 18594  1A82  319A  2266         	fcall	_I2C1_MasterSendNack
 18595                           
 18596                           ;mcc_generated_files/i2c1_master.c: 487:     return I2C1_SEND_STOP;
 18597  1A84  300A               	movlw	10
 18598  1A85  0008               	return
 18599  1A86                     __end_of_I2C1_DO_RX_NACK_STOP:
 18600                           
 18601                           	psect	text87
 18602  1A7E                     __ptext87:	
 18603 ;; *************** function _I2C1_DO_RX_ACK *****************
 18604 ;; Defined at:
 18605 ;;		line 477 in file "mcc_generated_files/i2c1_master.c"
 18606 ;; Parameters:    Size  Location     Type
 18607 ;;		None
 18608 ;; Auto vars:     Size  Location     Type
 18609 ;;		None
 18610 ;; Return value:  Size  Location     Type
 18611 ;;                  1    wreg      enum E7158
 18612 ;; Registers used:
 18613 ;;		wreg, status,2, status,0, pclath, cstack
 18614 ;; Tracked objects:
 18615 ;;		On entry : 1F/0
 18616 ;;		On exit  : 1F/4
 18617 ;;		Unchanged: 0/0
 18618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18623 ;;Total ram usage:        0 bytes
 18624 ;; Hardware stack levels used:    1
 18625 ;; Hardware stack levels required when called:    1
 18626 ;; This function calls:
 18627 ;;		_I2C1_MasterSendAck
 18628 ;; This function is called by:
 18629 ;;		_I2C1_MasterFsm
 18630 ;; This function uses a non-reentrant model
 18631 ;;
 18632                           
 18633                           
 18634                           ;psect for function _I2C1_DO_RX_ACK
 18635  1A7E                     _I2C1_DO_RX_ACK:
 18636                           
 18637                           ;mcc_generated_files/i2c1_master.c: 479:     I2C1_MasterSendAck();
 18638                           
 18639                           ;incstack = 0
 18640                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 18641  1A7E  319A  226A         	fcall	_I2C1_MasterSendAck
 18642                           
 18643                           ;mcc_generated_files/i2c1_master.c: 480:     return I2C1_RCEN;
 18644  1A80  3005               	movlw	5
 18645  1A81  0008               	return
 18646  1A82                     __end_of_I2C1_DO_RX_ACK:
 18647                           
 18648                           	psect	text88
 18649  1A7A                     __ptext88:	
 18650 ;; *************** function _I2C1_DO_SEND_STOP *****************
 18651 ;; Defined at:
 18652 ;;		line 471 in file "mcc_generated_files/i2c1_master.c"
 18653 ;; Parameters:    Size  Location     Type
 18654 ;;		None
 18655 ;; Auto vars:     Size  Location     Type
 18656 ;;		None
 18657 ;; Return value:  Size  Location     Type
 18658 ;;                  1    wreg      enum E7158
 18659 ;; Registers used:
 18660 ;;		wreg, status,2, status,0, pclath, cstack
 18661 ;; Tracked objects:
 18662 ;;		On entry : 0/0
 18663 ;;		On exit  : 1F/4
 18664 ;;		Unchanged: 0/0
 18665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18670 ;;Total ram usage:        0 bytes
 18671 ;; Hardware stack levels used:    1
 18672 ;; Hardware stack levels required when called:    1
 18673 ;; This function calls:
 18674 ;;		_I2C1_MasterStop
 18675 ;; This function is called by:
 18676 ;;		_I2C1_DO_TX
 18677 ;;		_I2C1_DO_TX_EMPTY
 18678 ;;		_I2C1_DO_ADDRESS_NACK
 18679 ;;		_I2C1_MasterFsm
 18680 ;; This function uses a non-reentrant model
 18681 ;;
 18682                           
 18683                           
 18684                           ;psect for function _I2C1_DO_SEND_STOP
 18685  1A7A                     _I2C1_DO_SEND_STOP:
 18686                           
 18687                           ;mcc_generated_files/i2c1_master.c: 473:     I2C1_MasterStop();
 18688                           
 18689                           ;incstack = 0
 18690                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 18691  1A7A  319A  2245         	fcall	_I2C1_MasterStop
 18692                           
 18693                           ;mcc_generated_files/i2c1_master.c: 474:     return I2C1_IDLE;
 18694  1A7C  3000               	movlw	0
 18695  1A7D  0008               	return
 18696  1A7E                     __end_of_I2C1_DO_SEND_STOP:
 18697                           
 18698                           	psect	text89
 18699  1A76                     __ptext89:	
 18700 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 18701 ;; Defined at:
 18702 ;;		line 465 in file "mcc_generated_files/i2c1_master.c"
 18703 ;; Parameters:    Size  Location     Type
 18704 ;;		None
 18705 ;; Auto vars:     Size  Location     Type
 18706 ;;		None
 18707 ;; Return value:  Size  Location     Type
 18708 ;;                  1    wreg      enum E7158
 18709 ;; Registers used:
 18710 ;;		wreg, status,2, status,0, pclath, cstack
 18711 ;; Tracked objects:
 18712 ;;		On entry : 0/0
 18713 ;;		On exit  : 1F/4
 18714 ;;		Unchanged: 0/0
 18715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18720 ;;Total ram usage:        0 bytes
 18721 ;; Hardware stack levels used:    1
 18722 ;; Hardware stack levels required when called:    1
 18723 ;; This function calls:
 18724 ;;		_I2C1_MasterEnableRestart
 18725 ;; This function is called by:
 18726 ;;		_I2C1_DO_TX_EMPTY
 18727 ;;		_I2C1_DO_ADDRESS_NACK
 18728 ;;		_I2C1_MasterFsm
 18729 ;; This function uses a non-reentrant model
 18730 ;;
 18731                           
 18732                           
 18733                           ;psect for function _I2C1_DO_SEND_RESTART
 18734  1A76                     _I2C1_DO_SEND_RESTART:
 18735                           
 18736                           ;mcc_generated_files/i2c1_master.c: 467:     I2C1_MasterEnableRestart();
 18737                           
 18738                           ;incstack = 0
 18739                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 18740  1A76  319A  2242         	fcall	_I2C1_MasterEnableRestart
 18741                           
 18742                           ;mcc_generated_files/i2c1_master.c: 468:     return I2C1_SEND_ADR_READ;
 18743  1A78  3001               	movlw	1
 18744  1A79  0008               	return
 18745  1A7A                     __end_of_I2C1_DO_SEND_RESTART:
 18746                           
 18747                           	psect	text90
 18748  1A72                     __ptext90:	
 18749 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 18750 ;; Defined at:
 18751 ;;		line 458 in file "mcc_generated_files/i2c1_master.c"
 18752 ;; Parameters:    Size  Location     Type
 18753 ;;		None
 18754 ;; Auto vars:     Size  Location     Type
 18755 ;;		None
 18756 ;; Return value:  Size  Location     Type
 18757 ;;                  1    wreg      enum E7158
 18758 ;; Registers used:
 18759 ;;		wreg, status,2, status,0, pclath, cstack
 18760 ;; Tracked objects:
 18761 ;;		On entry : 0/0
 18762 ;;		On exit  : 1F/4
 18763 ;;		Unchanged: 0/0
 18764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18769 ;;Total ram usage:        0 bytes
 18770 ;; Hardware stack levels used:    1
 18771 ;; Hardware stack levels required when called:    1
 18772 ;; This function calls:
 18773 ;;		_I2C1_MasterEnableRestart
 18774 ;; This function is called by:
 18775 ;;		_I2C1_DO_TX
 18776 ;;		_I2C1_MasterFsm
 18777 ;; This function uses a non-reentrant model
 18778 ;;
 18779                           
 18780                           
 18781                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 18782  1A72                     _I2C1_DO_SEND_RESTART_WRITE:
 18783                           
 18784                           ;mcc_generated_files/i2c1_master.c: 460:     I2C1_MasterEnableRestart();
 18785                           
 18786                           ;incstack = 0
 18787                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 18788  1A72  319A  2242         	fcall	_I2C1_MasterEnableRestart
 18789                           
 18790                           ;mcc_generated_files/i2c1_master.c: 461:     return I2C1_SEND_ADR_WRITE;
 18791  1A74  3002               	movlw	2
 18792  1A75  0008               	return
 18793  1A76                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 18794                           
 18795                           	psect	text91
 18796  1A6E                     __ptext91:	
 18797 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 18798 ;; Defined at:
 18799 ;;		line 452 in file "mcc_generated_files/i2c1_master.c"
 18800 ;; Parameters:    Size  Location     Type
 18801 ;;		None
 18802 ;; Auto vars:     Size  Location     Type
 18803 ;;		None
 18804 ;; Return value:  Size  Location     Type
 18805 ;;                  1    wreg      enum E7158
 18806 ;; Registers used:
 18807 ;;		wreg, status,2, status,0, pclath, cstack
 18808 ;; Tracked objects:
 18809 ;;		On entry : 0/0
 18810 ;;		On exit  : 1F/4
 18811 ;;		Unchanged: 0/0
 18812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18817 ;;Total ram usage:        0 bytes
 18818 ;; Hardware stack levels used:    1
 18819 ;; Hardware stack levels required when called:    1
 18820 ;; This function calls:
 18821 ;;		_I2C1_MasterEnableRestart
 18822 ;; This function is called by:
 18823 ;;		_I2C1_DO_TX
 18824 ;;		_I2C1_MasterFsm
 18825 ;; This function uses a non-reentrant model
 18826 ;;
 18827                           
 18828                           
 18829                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 18830  1A6E                     _I2C1_DO_SEND_RESTART_READ:
 18831                           
 18832                           ;mcc_generated_files/i2c1_master.c: 454:     I2C1_MasterEnableRestart();
 18833                           
 18834                           ;incstack = 0
 18835                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 18836  1A6E  319A  2242         	fcall	_I2C1_MasterEnableRestart
 18837                           
 18838                           ;mcc_generated_files/i2c1_master.c: 455:     return I2C1_SEND_ADR_READ;
 18839  1A70  3001               	movlw	1
 18840  1A71  0008               	return
 18841  1A72                     __end_of_I2C1_DO_SEND_RESTART_READ:
 18842                           
 18843                           	psect	text92
 18844  1AA3                     __ptext92:	
 18845 ;; *************** function _I2C1_DO_RCEN *****************
 18846 ;; Defined at:
 18847 ;;		line 405 in file "mcc_generated_files/i2c1_master.c"
 18848 ;; Parameters:    Size  Location     Type
 18849 ;;		None
 18850 ;; Auto vars:     Size  Location     Type
 18851 ;;		None
 18852 ;; Return value:  Size  Location     Type
 18853 ;;                  1    wreg      enum E7158
 18854 ;; Registers used:
 18855 ;;		wreg, status,2, status,0, pclath, cstack
 18856 ;; Tracked objects:
 18857 ;;		On entry : 1F/0
 18858 ;;		On exit  : 1F/4
 18859 ;;		Unchanged: 0/0
 18860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18865 ;;Total ram usage:        0 bytes
 18866 ;; Hardware stack levels used:    1
 18867 ;; Hardware stack levels required when called:    1
 18868 ;; This function calls:
 18869 ;;		_I2C1_MasterStartRx
 18870 ;; This function is called by:
 18871 ;;		_I2C1_MasterFsm
 18872 ;; This function uses a non-reentrant model
 18873 ;;
 18874                           
 18875                           
 18876                           ;psect for function _I2C1_DO_RCEN
 18877  1AA3                     _I2C1_DO_RCEN:
 18878                           
 18879                           ;mcc_generated_files/i2c1_master.c: 407:     I2C1_Status.addressNackCheck = 0;
 18880                           
 18881                           ;incstack = 0
 18882                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 18883  1AA3  0023               	movlb	3	; select bank3
 18884  1AA4  106C               	bcf	(_I2C1_Status^(0+384)+29),0
 18885                           
 18886                           ;mcc_generated_files/i2c1_master.c: 408:     I2C1_MasterStartRx();
 18887  1AA5  319A  2248         	fcall	_I2C1_MasterStartRx
 18888                           
 18889                           ;mcc_generated_files/i2c1_master.c: 409:     return I2C1_RX;
 18890  1AA7  3004               	movlw	4
 18891  1AA8  0008               	return
 18892  1AA9                     __end_of_I2C1_DO_RCEN:
 18893                           
 18894                           	psect	text93
 18895  10F5                     __ptext93:	
 18896 ;; *************** function _I2C1_DO_RX *****************
 18897 ;; Defined at:
 18898 ;;		line 381 in file "mcc_generated_files/i2c1_master.c"
 18899 ;; Parameters:    Size  Location     Type
 18900 ;;		None
 18901 ;; Auto vars:     Size  Location     Type
 18902 ;;		None
 18903 ;; Return value:  Size  Location     Type
 18904 ;;                  1    wreg      enum E7158
 18905 ;; Registers used:
 18906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18907 ;; Tracked objects:
 18908 ;;		On entry : 1F/0
 18909 ;;		On exit  : 1F/4
 18910 ;;		Unchanged: 0/0
 18911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18914 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18915 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18916 ;;Total ram usage:        3 bytes
 18917 ;; Hardware stack levels used:    1
 18918 ;; Hardware stack levels required when called:    3
 18919 ;; This function calls:
 18920 ;;		Absolute function
 18921 ;;		_I2C1_CallbackReturnReset
 18922 ;;		_I2C1_CallbackReturnStop
 18923 ;;		_I2C1_DO_RX_NACK_RESTART
 18924 ;;		_I2C1_DO_RX_NACK_STOP
 18925 ;;		_I2C1_MasterGetRxData
 18926 ;;		_I2C1_MasterSendAck
 18927 ;;		_rd1RegCompleteHandler
 18928 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 18929 ;;		_rd2RegCompleteHandler
 18930 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 18931 ;;		_rdBlkRegCompleteHandler
 18932 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 18933 ;;		_wr1RegCompleteHandler
 18934 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 18935 ;;		_wr2RegCompleteHandler
 18936 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 18937 ;; This function is called by:
 18938 ;;		_I2C1_MasterFsm
 18939 ;; This function uses a non-reentrant model
 18940 ;;
 18941                           
 18942                           
 18943                           ;psect for function _I2C1_DO_RX
 18944  10F5                     _I2C1_DO_RX:
 18945                           
 18946                           ;mcc_generated_files/i2c1_master.c: 383:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 18947                           
 18948                           ;incstack = 0
 18949                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18950  10F5  319A  224B  3190   	fcall	_I2C1_MasterGetRxData
 18951  10F8  00FA               	movwf	??_I2C1_DO_RX
 18952  10F9  0023               	movlb	3	; select bank3
 18953  10FA  0866               	movf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),w
 18954  10FB  0086               	movwf	6
 18955  10FC  0867               	movf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128),w
 18956  10FD  0087               	movwf	7
 18957  10FE  087A               	movf	??_I2C1_DO_RX,w
 18958  10FF  0081               	movwf	1
 18959  1100  3001               	movlw	1
 18960  1101  07E6               	addwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),f
 18961  1102  3000               	movlw	0
 18962  1103  3DE7               	addwfc	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128),f
 18963                           
 18964                           ;mcc_generated_files/i2c1_master.c: 384:     if(--I2C1_Status.data_length)
 18965  1104  3001               	movlw	1
 18966  1105  02E8               	subwf	(_I2C1_Status^(0+384)+25),f
 18967  1106  3000               	movlw	0
 18968  1107  3BE9               	subwfb	((_I2C1_Status+1)^(0+384)+25),f
 18969  1108  0868               	movf	(_I2C1_Status^(0+384)+25),w
 18970  1109  0469               	iorwf	((_I2C1_Status+1)^(0+384)+25),w
 18971  110A  1903               	btfsc	3,2
 18972  110B  2910               	goto	i1l619
 18973                           
 18974                           ;mcc_generated_files/i2c1_master.c: 385:     {;mcc_generated_files/i2c1_master.c: 386:  
      +                                 I2C1_MasterSendAck();
 18975  110C  319A  226A         	fcall	_I2C1_MasterSendAck
 18976                           
 18977                           ;mcc_generated_files/i2c1_master.c: 387:         return I2C1_RCEN;
 18978  110E  3005               	movlw	5
 18979  110F  0008               	return
 18980  1110                     i1l619:	
 18981                           ;mcc_generated_files/i2c1_master.c: 389:     else
 18982                           
 18983                           
 18984                           ;mcc_generated_files/i2c1_master.c: 390:     {;mcc_generated_files/i2c1_master.c: 391:  
      +                                 I2C1_Status.bufferFree = 1;
 18985  1110  15EC               	bsf	(_I2C1_Status^(0+384)+29),3
 18986                           
 18987                           ;mcc_generated_files/i2c1_master.c: 392:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 18988  1111  2918               	goto	i1l7318
 18989  1112                     i1l7308:
 18990                           
 18991                           ;mcc_generated_files/i2c1_master.c: 396:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 18992  1112  319A  2286         	fcall	_I2C1_DO_RX_NACK_RESTART
 18993  1114  0008               	return
 18994  1115                     i1l7312:
 18995                           
 18996                           ;mcc_generated_files/i2c1_master.c: 400:                 return I2C1_DO_RX_NACK_STOP();
 18997  1115  319A  2282         	fcall	_I2C1_DO_RX_NACK_STOP
 18998  1117  0008               	return
 18999  1118                     i1l7318:
 19000  1118  085B               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 19001  1119  00FA               	movwf	??_I2C1_DO_RX
 19002  111A  087A               	movf	??_I2C1_DO_RX,w
 19003  111B  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 19004  111C  0850               	movf	(_I2C1_Status+1)^(0+384),w
 19005  111D  008A               	movwf	10
 19006  111E  084F               	movf	_I2C1_Status^(0+384),w
 19007  111F  000A               	callw
 19008  1120  3190               	pagesel	$
 19009  1121  00FB               	movwf	??_I2C1_DO_RX+1
 19010  1122  01FC               	clrf	??_I2C1_DO_RX+2
 19011                           
 19012                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19013                           ; Switch size 1, requested type "simple"
 19014                           ; Number of cases is 1, Range of values is 0 to 0
 19015                           ; switch strategies available:
 19016                           ; Name         Instructions Cycles
 19017                           ; simple_byte            4     3 (average)
 19018                           ; direct_byte            8     6 (fixed)
 19019                           ; jumptable            260     6 (fixed)
 19020                           ;	Chosen strategy is simple_byte
 19021  1123  087C               	movf	??_I2C1_DO_RX+2,w
 19022  1124  3A00               	xorlw	0	; case 0
 19023  1125  1903               	skipnz
 19024  1126  2928               	goto	i1l8180
 19025  1127  2915               	goto	i1l7312
 19026  1128                     i1l8180:
 19027                           
 19028                           ; Switch size 1, requested type "simple"
 19029                           ; Number of cases is 4, Range of values is 1 to 4
 19030                           ; switch strategies available:
 19031                           ; Name         Instructions Cycles
 19032                           ; simple_byte           13     7 (average)
 19033                           ; direct_byte           17     9 (fixed)
 19034                           ; jumptable            263     9 (fixed)
 19035                           ;	Chosen strategy is simple_byte
 19036  1128  087B               	movf	??_I2C1_DO_RX+1,w
 19037  1129  3A01               	xorlw	1	; case 1
 19038  112A  1903               	skipnz
 19039  112B  2915               	goto	i1l7312
 19040  112C  3A03               	xorlw	3	; case 2
 19041  112D  1903               	skipnz
 19042  112E  2912               	goto	i1l7308
 19043  112F  3A01               	xorlw	1	; case 3
 19044  1130  1903               	skipnz
 19045  1131  2912               	goto	i1l7308
 19046  1132  3A07               	xorlw	7	; case 4
 19047  1133  1903               	skipnz
 19048  1134  2915               	goto	i1l7312
 19049  1135  2915               	goto	i1l7312
 19050  1136  0008               	return
 19051  1137                     __end_of_I2C1_DO_RX:
 19052                           
 19053                           	psect	text94
 19054  1346                     __ptext94:	
 19055 ;; *************** function _I2C1_DO_TX *****************
 19056 ;; Defined at:
 19057 ;;		line 357 in file "mcc_generated_files/i2c1_master.c"
 19058 ;; Parameters:    Size  Location     Type
 19059 ;;		None
 19060 ;; Auto vars:     Size  Location     Type
 19061 ;;		None
 19062 ;; Return value:  Size  Location     Type
 19063 ;;                  1    wreg      enum E7158
 19064 ;; Registers used:
 19065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19066 ;; Tracked objects:
 19067 ;;		On entry : 1F/0
 19068 ;;		On exit  : 18/0
 19069 ;;		Unchanged: 0/0
 19070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19073 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19074 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19075 ;;Total ram usage:        3 bytes
 19076 ;; Hardware stack levels used:    1
 19077 ;; Hardware stack levels required when called:    3
 19078 ;; This function calls:
 19079 ;;		Absolute function
 19080 ;;		_I2C1_CallbackReturnReset
 19081 ;;		_I2C1_CallbackReturnStop
 19082 ;;		_I2C1_DO_SEND_RESTART_READ
 19083 ;;		_I2C1_DO_SEND_RESTART_WRITE
 19084 ;;		_I2C1_DO_SEND_STOP
 19085 ;;		_I2C1_MasterIsNack
 19086 ;;		_I2C1_MasterSendTxData
 19087 ;;		_rd1RegCompleteHandler
 19088 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 19089 ;;		_rd2RegCompleteHandler
 19090 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 19091 ;;		_rdBlkRegCompleteHandler
 19092 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 19093 ;;		_wr1RegCompleteHandler
 19094 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 19095 ;;		_wr2RegCompleteHandler
 19096 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 19097 ;; This function is called by:
 19098 ;;		_I2C1_MasterFsm
 19099 ;; This function uses a non-reentrant model
 19100 ;;
 19101                           
 19102                           
 19103                           ;psect for function _I2C1_DO_TX
 19104  1346                     _I2C1_DO_TX:
 19105                           
 19106                           ;mcc_generated_files/i2c1_master.c: 359:     if(I2C1_MasterIsNack())
 19107                           
 19108                           ;incstack = 0
 19109                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19110  1346  319A  229D  3193   	fcall	_I2C1_MasterIsNack
 19111  1349  3A00               	xorlw	0
 19112  134A  1D03               	btfss	3,2
 19113  134B  2B56               	goto	i1l7278
 19114  134C  2B7A               	goto	i1l603
 19115  134D                     i1l7264:
 19116                           
 19117                           ;mcc_generated_files/i2c1_master.c: 364:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 19118  134D  319A  226E         	fcall	_I2C1_DO_SEND_RESTART_READ
 19119  134F  0008               	return
 19120  1350                     i1l7268:
 19121                           
 19122                           ;mcc_generated_files/i2c1_master.c: 366:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 19123  1350  319A  2272         	fcall	_I2C1_DO_SEND_RESTART_WRITE
 19124  1352  0008               	return
 19125  1353                     i1l7272:
 19126                           
 19127                           ;mcc_generated_files/i2c1_master.c: 370:                 return I2C1_DO_SEND_STOP();
 19128  1353  319A  227A         	fcall	_I2C1_DO_SEND_STOP
 19129  1355  0008               	return
 19130  1356                     i1l7278:
 19131  1356  0023               	movlb	3	; select bank3
 19132  1357  085E               	movf	(low ((_I2C1_Status| (0+256)+15)))^(0+128),w
 19133  1358  00FA               	movwf	??_I2C1_DO_TX
 19134  1359  087A               	movf	??_I2C1_DO_TX,w
 19135  135A  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 19136  135B  3006               	movlw	6
 19137  135C  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 19138  135D  0086               	movwf	6
 19139  135E  3001               	movlw	1	; select bank3/4
 19140  135F  0087               	movwf	7
 19141  1360  3F41               	moviw [1]fsr1
 19142  1361  008A               	movwf	10
 19143  1362  3F40               	moviw [0]fsr1
 19144  1363  000A               	callw
 19145  1364  3193               	pagesel	$
 19146  1365  00FB               	movwf	??_I2C1_DO_TX+1
 19147  1366  01FC               	clrf	??_I2C1_DO_TX+2
 19148                           
 19149                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19150                           ; Switch size 1, requested type "simple"
 19151                           ; Number of cases is 1, Range of values is 0 to 0
 19152                           ; switch strategies available:
 19153                           ; Name         Instructions Cycles
 19154                           ; simple_byte            4     3 (average)
 19155                           ; direct_byte            8     6 (fixed)
 19156                           ; jumptable            260     6 (fixed)
 19157                           ;	Chosen strategy is simple_byte
 19158  1367  087C               	movf	??_I2C1_DO_TX+2,w
 19159  1368  3A00               	xorlw	0	; case 0
 19160  1369  1903               	skipnz
 19161  136A  2B6C               	goto	i1l8182
 19162  136B  2B53               	goto	i1l7272
 19163  136C                     i1l8182:
 19164                           
 19165                           ; Switch size 1, requested type "simple"
 19166                           ; Number of cases is 4, Range of values is 1 to 4
 19167                           ; switch strategies available:
 19168                           ; Name         Instructions Cycles
 19169                           ; simple_byte           13     7 (average)
 19170                           ; direct_byte           17     9 (fixed)
 19171                           ; jumptable            263     9 (fixed)
 19172                           ;	Chosen strategy is simple_byte
 19173  136C  087B               	movf	??_I2C1_DO_TX+1,w
 19174  136D  3A01               	xorlw	1	; case 1
 19175  136E  1903               	skipnz
 19176  136F  2B53               	goto	i1l7272
 19177  1370  3A03               	xorlw	3	; case 2
 19178  1371  1903               	skipnz
 19179  1372  2B4D               	goto	i1l7264
 19180  1373  3A01               	xorlw	1	; case 3
 19181  1374  1903               	skipnz
 19182  1375  2B50               	goto	i1l7268
 19183  1376  3A07               	xorlw	7	; case 4
 19184  1377  1903               	skipnz
 19185  1378  2B53               	goto	i1l7272
 19186  1379  2B53               	goto	i1l7272
 19187  137A                     i1l603:	
 19188                           ;mcc_generated_files/i2c1_master.c: 373:     else
 19189                           
 19190                           
 19191                           ;mcc_generated_files/i2c1_master.c: 374:     {;mcc_generated_files/i2c1_master.c: 375:  
      +                                 I2C1_Status.addressNackCheck = 0;
 19192  137A  0023               	movlb	3	; select bank3
 19193  137B  106C               	bcf	(_I2C1_Status^(0+384)+29),0
 19194                           
 19195                           ;mcc_generated_files/i2c1_master.c: 376:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 19196  137C  0867               	movf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128),w
 19197  137D  00FB               	movwf	??_I2C1_DO_TX+1
 19198  137E  0866               	movf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),w
 19199  137F  00FA               	movwf	??_I2C1_DO_TX
 19200  1380  0AE6               	incf	(low ((_I2C1_Status| (0+256)+23)))^(0+128),f
 19201  1381  1903               	skipnz
 19202  1382  0AE7               	incf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128),f
 19203  1383  087A               	movf	??_I2C1_DO_TX,w
 19204  1384  0086               	movwf	6
 19205  1385  087B               	movf	??_I2C1_DO_TX+1,w
 19206  1386  0087               	movwf	7
 19207  1387  0801               	movf	1,w
 19208  1388  319A  228E  3193   	fcall	_I2C1_MasterSendTxData
 19209                           
 19210                           ;mcc_generated_files/i2c1_master.c: 377:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 19211  138B  3001               	movlw	1
 19212  138C  0023               	movlb	3	; select bank3
 19213  138D  02E8               	subwf	(_I2C1_Status^(0+384)+25),f
 19214  138E  3000               	movlw	0
 19215  138F  3BE9               	subwfb	((_I2C1_Status+1)^(0+384)+25),f
 19216  1390  0868               	movf	(_I2C1_Status^(0+384)+25),w
 19217  1391  0469               	iorwf	((_I2C1_Status+1)^(0+384)+25),w
 19218  1392  1D03               	btfss	3,2
 19219  1393  2B96               	goto	i1l7286
 19220  1394  3006               	movlw	6
 19221  1395  0008               	return
 19222  1396                     i1l7286:
 19223  1396  3003               	movlw	3
 19224  1397  0008               	return
 19225  1398                     __end_of_I2C1_DO_TX:
 19226                           
 19227                           	psect	text95
 19228  1AB5                     __ptext95:	
 19229 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 19230 ;; Defined at:
 19231 ;;		line 350 in file "mcc_generated_files/i2c1_master.c"
 19232 ;; Parameters:    Size  Location     Type
 19233 ;;		None
 19234 ;; Auto vars:     Size  Location     Type
 19235 ;;		None
 19236 ;; Return value:  Size  Location     Type
 19237 ;;                  1    wreg      enum E7158
 19238 ;; Registers used:
 19239 ;;		wreg, status,2, status,0, pclath, cstack
 19240 ;; Tracked objects:
 19241 ;;		On entry : 1F/0
 19242 ;;		On exit  : 1F/4
 19243 ;;		Unchanged: 0/0
 19244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19249 ;;Total ram usage:        0 bytes
 19250 ;; Hardware stack levels used:    1
 19251 ;; Hardware stack levels required when called:    1
 19252 ;; This function calls:
 19253 ;;		_I2C1_MasterSendTxData
 19254 ;; This function is called by:
 19255 ;;		_I2C1_MasterFsm
 19256 ;; This function uses a non-reentrant model
 19257 ;;
 19258                           
 19259                           
 19260                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 19261  1AB5                     _I2C1_DO_SEND_ADR_WRITE:
 19262                           
 19263                           ;mcc_generated_files/i2c1_master.c: 352:     I2C1_Status.addressNackCheck = 1;
 19264                           
 19265                           ;incstack = 0
 19266                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 19267  1AB5  0023               	movlb	3	; select bank3
 19268  1AB6  146C               	bsf	(_I2C1_Status^(0+384)+29),0
 19269                           
 19270                           ;mcc_generated_files/i2c1_master.c: 353:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1);
 19271  1AB7  3565               	lslf	(_I2C1_Status^(0+384)+22),w
 19272  1AB8  319A  228E         	fcall	_I2C1_MasterSendTxData
 19273                           
 19274                           ;mcc_generated_files/i2c1_master.c: 354:     return I2C1_TX;
 19275  1ABA  3003               	movlw	3
 19276  1ABB  0008               	return
 19277  1ABC                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 19278                           
 19279                           	psect	text96
 19280  1ABC                     __ptext96:	
 19281 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 19282 ;; Defined at:
 19283 ;;		line 343 in file "mcc_generated_files/i2c1_master.c"
 19284 ;; Parameters:    Size  Location     Type
 19285 ;;		None
 19286 ;; Auto vars:     Size  Location     Type
 19287 ;;		None
 19288 ;; Return value:  Size  Location     Type
 19289 ;;                  1    wreg      enum E7158
 19290 ;; Registers used:
 19291 ;;		wreg, status,2, status,0, pclath, cstack
 19292 ;; Tracked objects:
 19293 ;;		On entry : 1F/0
 19294 ;;		On exit  : 1F/4
 19295 ;;		Unchanged: 0/0
 19296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19301 ;;Total ram usage:        0 bytes
 19302 ;; Hardware stack levels used:    1
 19303 ;; Hardware stack levels required when called:    1
 19304 ;; This function calls:
 19305 ;;		_I2C1_MasterSendTxData
 19306 ;; This function is called by:
 19307 ;;		_I2C1_MasterFsm
 19308 ;; This function uses a non-reentrant model
 19309 ;;
 19310                           
 19311                           
 19312                           ;psect for function _I2C1_DO_SEND_ADR_READ
 19313  1ABC                     _I2C1_DO_SEND_ADR_READ:
 19314                           
 19315                           ;mcc_generated_files/i2c1_master.c: 345:     I2C1_Status.addressNackCheck = 1;
 19316                           
 19317                           ;incstack = 0
 19318                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 19319  1ABC  0023               	movlb	3	; select bank3
 19320  1ABD  146C               	bsf	(_I2C1_Status^(0+384)+29),0
 19321                           
 19322                           ;mcc_generated_files/i2c1_master.c: 346:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1 | 1);
 19323  1ABE  1403               	setc
 19324  1ABF  0D65               	rlf	(_I2C1_Status^(0+384)+22),w
 19325  1AC0  319A  228E         	fcall	_I2C1_MasterSendTxData
 19326                           
 19327                           ;mcc_generated_files/i2c1_master.c: 347:     return I2C1_RCEN;
 19328  1AC2  3005               	movlw	5
 19329  1AC3  0008               	return
 19330  1AC4                     __end_of_I2C1_DO_SEND_ADR_READ:
 19331                           
 19332                           	psect	text97
 19333  1A93                     __ptext97:	
 19334 ;; *************** function _I2C1_DO_IDLE *****************
 19335 ;; Defined at:
 19336 ;;		line 336 in file "mcc_generated_files/i2c1_master.c"
 19337 ;; Parameters:    Size  Location     Type
 19338 ;;		None
 19339 ;; Auto vars:     Size  Location     Type
 19340 ;;		None
 19341 ;; Return value:  Size  Location     Type
 19342 ;;                  1    wreg      enum E7158
 19343 ;; Registers used:
 19344 ;;		wreg, status,2
 19345 ;; Tracked objects:
 19346 ;;		On entry : 1F/0
 19347 ;;		On exit  : 1F/3
 19348 ;;		Unchanged: 0/0
 19349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19354 ;;Total ram usage:        0 bytes
 19355 ;; Hardware stack levels used:    1
 19356 ;; This function calls:
 19357 ;;		Nothing
 19358 ;; This function is called by:
 19359 ;;		_I2C1_MasterFsm
 19360 ;; This function uses a non-reentrant model
 19361 ;;
 19362                           
 19363                           
 19364                           ;psect for function _I2C1_DO_IDLE
 19365  1A93                     _I2C1_DO_IDLE:
 19366                           
 19367                           ;mcc_generated_files/i2c1_master.c: 338:     I2C1_Status.busy = 0;
 19368                           
 19369                           ;incstack = 0
 19370                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 19371  1A93  0023               	movlb	3	; select bank3
 19372  1A94  10EC               	bcf	(_I2C1_Status^(0+384)+29),1
 19373                           
 19374                           ;mcc_generated_files/i2c1_master.c: 339:     I2C1_Status.error = I2C1_NOERR;
 19375  1A95  01EB               	clrf	(_I2C1_Status^(0+384)+28)
 19376                           
 19377                           ;mcc_generated_files/i2c1_master.c: 340:     return I2C1_RESET;
 19378  1A96  300E               	movlw	14
 19379  1A97  0008               	return
 19380  1A98                     __end_of_I2C1_DO_IDLE:
 19381                           
 19382                           	psect	text98
 19383  1002                     __ptext98:	
 19384 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 19385 ;; Defined at:
 19386 ;;		line 412 in file "mcc_generated_files/i2c1_master.c"
 19387 ;; Parameters:    Size  Location     Type
 19388 ;;		None
 19389 ;; Auto vars:     Size  Location     Type
 19390 ;;		None
 19391 ;; Return value:  Size  Location     Type
 19392 ;;                  1    wreg      enum E7158
 19393 ;; Registers used:
 19394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19395 ;; Tracked objects:
 19396 ;;		On entry : 1F/0
 19397 ;;		On exit  : 1B/0
 19398 ;;		Unchanged: 0/0
 19399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19402 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19403 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19404 ;;Total ram usage:        3 bytes
 19405 ;; Hardware stack levels used:    1
 19406 ;; Hardware stack levels required when called:    3
 19407 ;; This function calls:
 19408 ;;		Absolute function
 19409 ;;		_I2C1_CallbackReturnReset
 19410 ;;		_I2C1_CallbackReturnStop
 19411 ;;		_I2C1_DO_SEND_RESTART
 19412 ;;		_I2C1_DO_SEND_STOP
 19413 ;;		_I2C1_MasterSetIrq
 19414 ;;		_rd1RegCompleteHandler
 19415 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 19416 ;;		_rd2RegCompleteHandler
 19417 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 19418 ;;		_rdBlkRegCompleteHandler
 19419 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 19420 ;;		_wr1RegCompleteHandler
 19421 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 19422 ;;		_wr2RegCompleteHandler
 19423 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 19424 ;; This function is called by:
 19425 ;;		_I2C1_MasterFsm
 19426 ;; This function uses a non-reentrant model
 19427 ;;
 19428                           
 19429                           
 19430                           ;psect for function _I2C1_DO_TX_EMPTY
 19431  1002                     _I2C1_DO_TX_EMPTY:
 19432                           
 19433                           ;mcc_generated_files/i2c1_master.c: 414:     I2C1_Status.bufferFree = 1;
 19434                           
 19435                           ;incstack = 0
 19436                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19437  1002  0023               	movlb	3	; select bank3
 19438  1003  15EC               	bsf	(_I2C1_Status^(0+384)+29),3
 19439                           
 19440                           ;mcc_generated_files/i2c1_master.c: 415:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 19441  1004  280F               	goto	i1l7342
 19442  1005                     i1l7326:
 19443                           
 19444                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_DO_SEND_RESTART();
 19445  1005  319A  2276         	fcall	_I2C1_DO_SEND_RESTART
 19446  1007  0008               	return
 19447  1008                     i1l7330:
 19448                           
 19449                           ;mcc_generated_files/i2c1_master.c: 421:             I2C1_MasterSetIrq();
 19450  1008  319A  224E         	fcall	_I2C1_MasterSetIrq
 19451                           
 19452                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_TX;
 19453  100A  3003               	movlw	3
 19454  100B  0008               	return
 19455  100C                     i1l7336:
 19456                           
 19457                           ;mcc_generated_files/i2c1_master.c: 425:             return I2C1_DO_SEND_STOP();
 19458  100C  319A  227A         	fcall	_I2C1_DO_SEND_STOP
 19459  100E  0008               	return
 19460  100F                     i1l7342:
 19461  100F  085B               	movf	(low ((_I2C1_Status| (0+256)+12)))^(0+128),w
 19462  1010  00FA               	movwf	??_I2C1_DO_TX_EMPTY
 19463  1011  087A               	movf	??_I2C1_DO_TX_EMPTY,w
 19464  1012  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 19465  1013  0850               	movf	(_I2C1_Status+1)^(0+384),w
 19466  1014  008A               	movwf	10
 19467  1015  084F               	movf	_I2C1_Status^(0+384),w
 19468  1016  000A               	callw
 19469  1017  3190               	pagesel	$
 19470  1018  00FB               	movwf	??_I2C1_DO_TX_EMPTY+1
 19471  1019  01FC               	clrf	??_I2C1_DO_TX_EMPTY+2
 19472                           
 19473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19474                           ; Switch size 1, requested type "simple"
 19475                           ; Number of cases is 1, Range of values is 0 to 0
 19476                           ; switch strategies available:
 19477                           ; Name         Instructions Cycles
 19478                           ; simple_byte            4     3 (average)
 19479                           ; direct_byte            8     6 (fixed)
 19480                           ; jumptable            260     6 (fixed)
 19481                           ;	Chosen strategy is simple_byte
 19482  101A  087C               	movf	??_I2C1_DO_TX_EMPTY+2,w
 19483  101B  3A00               	xorlw	0	; case 0
 19484  101C  1903               	skipnz
 19485  101D  281F               	goto	i1l8184
 19486  101E  280C               	goto	i1l7336
 19487  101F                     i1l8184:
 19488                           
 19489                           ; Switch size 1, requested type "simple"
 19490                           ; Number of cases is 4, Range of values is 1 to 4
 19491                           ; switch strategies available:
 19492                           ; Name         Instructions Cycles
 19493                           ; simple_byte           13     7 (average)
 19494                           ; direct_byte           17     9 (fixed)
 19495                           ; jumptable            263     9 (fixed)
 19496                           ;	Chosen strategy is simple_byte
 19497  101F  087B               	movf	??_I2C1_DO_TX_EMPTY+1,w
 19498  1020  3A01               	xorlw	1	; case 1
 19499  1021  1903               	skipnz
 19500  1022  280C               	goto	i1l7336
 19501  1023  3A03               	xorlw	3	; case 2
 19502  1024  1903               	skipnz
 19503  1025  2805               	goto	i1l7326
 19504  1026  3A01               	xorlw	1	; case 3
 19505  1027  1903               	skipnz
 19506  1028  2805               	goto	i1l7326
 19507  1029  3A07               	xorlw	7	; case 4
 19508  102A  1903               	skipnz
 19509  102B  2808               	goto	i1l7330
 19510  102C  280C               	goto	i1l7336
 19511  102D  0008               	return
 19512  102E                     __end_of_I2C1_DO_TX_EMPTY:
 19513                           
 19514                           	psect	text99
 19515  1A4E                     __ptext99:	
 19516 ;; *************** function _I2C1_MasterSetIrq *****************
 19517 ;; Defined at:
 19518 ;;		line 649 in file "mcc_generated_files/i2c1_master.c"
 19519 ;; Parameters:    Size  Location     Type
 19520 ;;		None
 19521 ;; Auto vars:     Size  Location     Type
 19522 ;;		None
 19523 ;; Return value:  Size  Location     Type
 19524 ;;                  1    wreg      void 
 19525 ;; Registers used:
 19526 ;;		None
 19527 ;; Tracked objects:
 19528 ;;		On entry : 0/3
 19529 ;;		On exit  : 1F/0
 19530 ;;		Unchanged: 0/0
 19531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19536 ;;Total ram usage:        0 bytes
 19537 ;; Hardware stack levels used:    1
 19538 ;; This function calls:
 19539 ;;		Nothing
 19540 ;; This function is called by:
 19541 ;;		_I2C1_DO_TX_EMPTY
 19542 ;; This function uses a non-reentrant model
 19543 ;;
 19544                           
 19545                           
 19546                           ;psect for function _I2C1_MasterSetIrq
 19547  1A4E                     _I2C1_MasterSetIrq:
 19548                           
 19549                           ;mcc_generated_files/i2c1_master.c: 651:     PIR1bits.SSP1IF = 1;
 19550                           
 19551                           ;incstack = 0
 19552                           ; Regs used in _I2C1_MasterSetIrq: []
 19553  1A4E  0020               	movlb	0	; select bank0
 19554  1A4F  1591               	bsf	17,3	;volatile
 19555  1A50  0008               	return
 19556  1A51                     __end_of_I2C1_MasterSetIrq:
 19557                           
 19558                           	psect	text100
 19559  1A9D                     __ptext100:	
 19560 ;; *************** function _I2C1_MasterIsNack *****************
 19561 ;; Defined at:
 19562 ;;		line 601 in file "mcc_generated_files/i2c1_master.c"
 19563 ;; Parameters:    Size  Location     Type
 19564 ;;		None
 19565 ;; Auto vars:     Size  Location     Type
 19566 ;;		None
 19567 ;; Return value:  Size  Location     Type
 19568 ;;                  1    wreg      _Bool 
 19569 ;; Registers used:
 19570 ;;		wreg, status,2, status,0
 19571 ;; Tracked objects:
 19572 ;;		On entry : 1C/3
 19573 ;;		On exit  : 1F/4
 19574 ;;		Unchanged: 0/0
 19575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19580 ;;Total ram usage:        0 bytes
 19581 ;; Hardware stack levels used:    1
 19582 ;; This function calls:
 19583 ;;		Nothing
 19584 ;; This function is called by:
 19585 ;;		_I2C1_MasterFsm
 19586 ;;		_I2C1_DO_TX
 19587 ;; This function uses a non-reentrant model
 19588 ;;
 19589                           
 19590                           
 19591                           ;psect for function _I2C1_MasterIsNack
 19592  1A9D                     _I2C1_MasterIsNack:
 19593                           
 19594                           ;mcc_generated_files/i2c1_master.c: 603:     return SSP1CON2bits.ACKSTAT;
 19595                           
 19596                           ;incstack = 0
 19597                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 19598  1A9D  0024               	movlb	4	; select bank4
 19599  1A9E  0E16               	swapf	22,w	;volatile
 19600  1A9F  0C89               	rrf	9,f
 19601  1AA0  0C89               	rrf	9,f
 19602  1AA1  3901               	andlw	1
 19603  1AA2  0008               	return
 19604  1AA3                     __end_of_I2C1_MasterIsNack:
 19605                           
 19606                           	psect	text101
 19607  1A8E                     __ptext101:	
 19608 ;; *************** function _I2C1_MasterSendTxData *****************
 19609 ;; Defined at:
 19610 ;;		line 571 in file "mcc_generated_files/i2c1_master.c"
 19611 ;; Parameters:    Size  Location     Type
 19612 ;;  data            1    wreg     unsigned char 
 19613 ;; Auto vars:     Size  Location     Type
 19614 ;;  data            1    0[COMMON] unsigned char 
 19615 ;; Return value:  Size  Location     Type
 19616 ;;                  1    wreg      void 
 19617 ;; Registers used:
 19618 ;;		wreg
 19619 ;; Tracked objects:
 19620 ;;		On entry : 1F/3
 19621 ;;		On exit  : 1F/4
 19622 ;;		Unchanged: 0/0
 19623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19628 ;;Total ram usage:        1 bytes
 19629 ;; Hardware stack levels used:    1
 19630 ;; This function calls:
 19631 ;;		Nothing
 19632 ;; This function is called by:
 19633 ;;		_I2C1_DO_SEND_ADR_READ
 19634 ;;		_I2C1_DO_SEND_ADR_WRITE
 19635 ;;		_I2C1_DO_TX
 19636 ;; This function uses a non-reentrant model
 19637 ;;
 19638                           
 19639                           
 19640                           ;psect for function _I2C1_MasterSendTxData
 19641  1A8E                     _I2C1_MasterSendTxData:
 19642                           
 19643                           ;incstack = 0
 19644                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 19645                           ;I2C1_MasterSendTxData@data stored from wreg
 19646  1A8E  00F0               	movwf	I2C1_MasterSendTxData@data
 19647                           
 19648                           ;mcc_generated_files/i2c1_master.c: 571: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 572: {;mcc_generated_files/i
      +                          2c1_master.c: 573:     SSP1BUF = data;
 19649  1A8F  0870               	movf	I2C1_MasterSendTxData@data,w
 19650  1A90  0024               	movlb	4	; select bank4
 19651  1A91  0091               	movwf	17	;volatile
 19652  1A92  0008               	return
 19653  1A93                     __end_of_I2C1_MasterSendTxData:
 19654                           
 19655                           	psect	text102
 19656  1A6A                     __ptext102:	
 19657 ;; *************** function _I2C1_MasterSendAck *****************
 19658 ;; Defined at:
 19659 ;;		line 606 in file "mcc_generated_files/i2c1_master.c"
 19660 ;; Parameters:    Size  Location     Type
 19661 ;;		None
 19662 ;; Auto vars:     Size  Location     Type
 19663 ;;		None
 19664 ;; Return value:  Size  Location     Type
 19665 ;;                  1    wreg      void 
 19666 ;; Registers used:
 19667 ;;		None
 19668 ;; Tracked objects:
 19669 ;;		On entry : 1C/0
 19670 ;;		On exit  : 1F/4
 19671 ;;		Unchanged: 0/0
 19672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19677 ;;Total ram usage:        0 bytes
 19678 ;; Hardware stack levels used:    1
 19679 ;; This function calls:
 19680 ;;		Nothing
 19681 ;; This function is called by:
 19682 ;;		_I2C1_DO_RX
 19683 ;;		_I2C1_DO_RX_ACK
 19684 ;; This function uses a non-reentrant model
 19685 ;;
 19686                           
 19687                           
 19688                           ;psect for function _I2C1_MasterSendAck
 19689  1A6A                     _I2C1_MasterSendAck:
 19690                           
 19691                           ;mcc_generated_files/i2c1_master.c: 608:     SSP1CON2bits.ACKDT = 0;
 19692                           
 19693                           ;incstack = 0
 19694                           ; Regs used in _I2C1_MasterSendAck: []
 19695  1A6A  0024               	movlb	4	; select bank4
 19696  1A6B  1296               	bcf	22,5	;volatile
 19697                           
 19698                           ;mcc_generated_files/i2c1_master.c: 609:     SSP1CON2bits.ACKEN = 1;
 19699  1A6C  1616               	bsf	22,4	;volatile
 19700  1A6D  0008               	return
 19701  1A6E                     __end_of_I2C1_MasterSendAck:
 19702                           
 19703                           	psect	text103
 19704  1A4B                     __ptext103:	
 19705 ;; *************** function _I2C1_MasterGetRxData *****************
 19706 ;; Defined at:
 19707 ;;		line 566 in file "mcc_generated_files/i2c1_master.c"
 19708 ;; Parameters:    Size  Location     Type
 19709 ;;		None
 19710 ;; Auto vars:     Size  Location     Type
 19711 ;;		None
 19712 ;; Return value:  Size  Location     Type
 19713 ;;                  1    wreg      unsigned char 
 19714 ;; Registers used:
 19715 ;;		wreg
 19716 ;; Tracked objects:
 19717 ;;		On entry : 1F/0
 19718 ;;		On exit  : 1F/4
 19719 ;;		Unchanged: 0/0
 19720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19725 ;;Total ram usage:        0 bytes
 19726 ;; Hardware stack levels used:    1
 19727 ;; This function calls:
 19728 ;;		Nothing
 19729 ;; This function is called by:
 19730 ;;		_I2C1_DO_RX
 19731 ;; This function uses a non-reentrant model
 19732 ;;
 19733                           
 19734                           
 19735                           ;psect for function _I2C1_MasterGetRxData
 19736  1A4B                     _I2C1_MasterGetRxData:
 19737                           
 19738                           ;mcc_generated_files/i2c1_master.c: 568:     return SSP1BUF;
 19739                           
 19740                           ;incstack = 0
 19741                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 19742  1A4B  0024               	movlb	4	; select bank4
 19743  1A4C  0811               	movf	17,w	;volatile
 19744  1A4D  0008               	return
 19745  1A4E                     __end_of_I2C1_MasterGetRxData:
 19746                           
 19747                           	psect	text104
 19748  1A66                     __ptext104:	
 19749 ;; *************** function _I2C1_MasterSendNack *****************
 19750 ;; Defined at:
 19751 ;;		line 612 in file "mcc_generated_files/i2c1_master.c"
 19752 ;; Parameters:    Size  Location     Type
 19753 ;;		None
 19754 ;; Auto vars:     Size  Location     Type
 19755 ;;		None
 19756 ;; Return value:  Size  Location     Type
 19757 ;;                  1    wreg      void 
 19758 ;; Registers used:
 19759 ;;		None
 19760 ;; Tracked objects:
 19761 ;;		On entry : 0/0
 19762 ;;		On exit  : 1F/4
 19763 ;;		Unchanged: 0/0
 19764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19769 ;;Total ram usage:        0 bytes
 19770 ;; Hardware stack levels used:    1
 19771 ;; This function calls:
 19772 ;;		Nothing
 19773 ;; This function is called by:
 19774 ;;		_I2C1_DO_RX_NACK_STOP
 19775 ;;		_I2C1_DO_RX_NACK_RESTART
 19776 ;; This function uses a non-reentrant model
 19777 ;;
 19778                           
 19779                           
 19780                           ;psect for function _I2C1_MasterSendNack
 19781  1A66                     _I2C1_MasterSendNack:
 19782                           
 19783                           ;mcc_generated_files/i2c1_master.c: 614:     SSP1CON2bits.ACKDT = 1;
 19784                           
 19785                           ;incstack = 0
 19786                           ; Regs used in _I2C1_MasterSendNack: []
 19787  1A66  0024               	movlb	4	; select bank4
 19788  1A67  1696               	bsf	22,5	;volatile
 19789                           
 19790                           ;mcc_generated_files/i2c1_master.c: 615:     SSP1CON2bits.ACKEN = 1;
 19791  1A68  1616               	bsf	22,4	;volatile
 19792  1A69  0008               	return
 19793  1A6A                     __end_of_I2C1_MasterSendNack:
 19794                           
 19795                           	psect	text105
 19796  1A48                     __ptext105:	
 19797 ;; *************** function _I2C1_MasterStartRx *****************
 19798 ;; Defined at:
 19799 ;;		line 586 in file "mcc_generated_files/i2c1_master.c"
 19800 ;; Parameters:    Size  Location     Type
 19801 ;;		None
 19802 ;; Auto vars:     Size  Location     Type
 19803 ;;		None
 19804 ;; Return value:  Size  Location     Type
 19805 ;;                  1    wreg      void 
 19806 ;; Registers used:
 19807 ;;		None
 19808 ;; Tracked objects:
 19809 ;;		On entry : 1F/3
 19810 ;;		On exit  : 1F/4
 19811 ;;		Unchanged: 0/0
 19812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19817 ;;Total ram usage:        0 bytes
 19818 ;; Hardware stack levels used:    1
 19819 ;; This function calls:
 19820 ;;		Nothing
 19821 ;; This function is called by:
 19822 ;;		_I2C1_DO_RCEN
 19823 ;; This function uses a non-reentrant model
 19824 ;;
 19825                           
 19826                           
 19827                           ;psect for function _I2C1_MasterStartRx
 19828  1A48                     _I2C1_MasterStartRx:
 19829                           
 19830                           ;mcc_generated_files/i2c1_master.c: 588:     SSP1CON2bits.RCEN = 1;
 19831                           
 19832                           ;incstack = 0
 19833                           ; Regs used in _I2C1_MasterStartRx: []
 19834  1A48  0024               	movlb	4	; select bank4
 19835  1A49  1596               	bsf	22,3	;volatile
 19836  1A4A  0008               	return
 19837  1A4B                     __end_of_I2C1_MasterStartRx:
 19838                           
 19839                           	psect	text106
 19840  0800                     __ptext106:	
 19841 ;; *************** function _I2C1_CallbackReturnReset *****************
 19842 ;; Defined at:
 19843 ;;		line 527 in file "mcc_generated_files/i2c1_master.c"
 19844 ;; Parameters:    Size  Location     Type
 19845 ;;  funPtr          1    9[COMMON] PTR void 
 19846 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19847 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 19848 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19849 ;; Auto vars:     Size  Location     Type
 19850 ;;		None
 19851 ;; Return value:  Size  Location     Type
 19852 ;;                  1    wreg      enum E360
 19853 ;; Registers used:
 19854 ;;		wreg
 19855 ;; Tracked objects:
 19856 ;;		On entry : 1F/3
 19857 ;;		On exit  : 1F/3
 19858 ;;		Unchanged: 1E/0
 19859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19860 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19864 ;;Total ram usage:        1 bytes
 19865 ;; Hardware stack levels used:    1
 19866 ;; This function calls:
 19867 ;;		Nothing
 19868 ;; This function is called by:
 19869 ;;		_I2C1_Open
 19870 ;;		_I2C1_DO_TX
 19871 ;;		_I2C1_DO_RX
 19872 ;;		_I2C1_DO_TX_EMPTY
 19873 ;;		_I2C1_DO_ADDRESS_NACK
 19874 ;; This function uses a non-reentrant model
 19875 ;;
 19876                           
 19877                           
 19878                           ;psect for function _I2C1_CallbackReturnReset
 19879  0800                     _I2C1_CallbackReturnReset:
 19880                           
 19881                           ;mcc_generated_files/i2c1_master.c: 527: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 528: {;mcc_generated_files/i2c1_master.c: 5
      +                          29:     return I2C1_RESET_LINK;
 19882                           
 19883                           ;incstack = 0
 19884                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 19885  0800  3005               	movlw	5
 19886  0801  0008               	return
 19887  0802                     __end_of_I2C1_CallbackReturnReset:
 19888                           
 19889                           	psect	text107
 19890  1000                     __ptext107:	
 19891 ;; *************** function _I2C1_CallbackReturnStop *****************
 19892 ;; Defined at:
 19893 ;;		line 522 in file "mcc_generated_files/i2c1_master.c"
 19894 ;; Parameters:    Size  Location     Type
 19895 ;;  funPtr          1    9[COMMON] PTR void 
 19896 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19897 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 19898 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19899 ;; Auto vars:     Size  Location     Type
 19900 ;;		None
 19901 ;; Return value:  Size  Location     Type
 19902 ;;                  1    wreg      enum E360
 19903 ;; Registers used:
 19904 ;;		wreg
 19905 ;; Tracked objects:
 19906 ;;		On entry : 1F/3
 19907 ;;		On exit  : 1F/3
 19908 ;;		Unchanged: 1E/0
 19909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19910 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19913 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19914 ;;Total ram usage:        1 bytes
 19915 ;; Hardware stack levels used:    1
 19916 ;; This function calls:
 19917 ;;		Nothing
 19918 ;; This function is called by:
 19919 ;;		_I2C1_Open
 19920 ;;		_I2C1_SetCallback
 19921 ;;		i1_I2C1_SetCallback
 19922 ;;		_I2C1_DO_TX
 19923 ;;		_I2C1_DO_RX
 19924 ;;		_I2C1_DO_TX_EMPTY
 19925 ;;		_I2C1_DO_ADDRESS_NACK
 19926 ;; This function uses a non-reentrant model
 19927 ;;
 19928                           
 19929                           
 19930                           ;psect for function _I2C1_CallbackReturnStop
 19931  1000                     _I2C1_CallbackReturnStop:
 19932                           
 19933                           ;mcc_generated_files/i2c1_master.c: 522: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 523: {;mcc_generated_files/i2c1_master.c: 52
      +                          4:     return I2C1_STOP;
 19934                           
 19935                           ;incstack = 0
 19936                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 19937  1000  3001               	movlw	1
 19938  1001  0008               	return
 19939  1002                     __end_of_I2C1_CallbackReturnStop:
 19940                           
 19941                           	psect	text108
 19942  1D39                     __ptext108:	
 19943 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F229 *****************
 19944 ;; Defined at:
 19945 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 19946 ;; Parameters:    Size  Location     Type
 19947 ;;  ptr             1    9[COMMON] PTR void 
 19948 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 19949 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 19950 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 19951 ;; Auto vars:     Size  Location     Type
 19952 ;;		None
 19953 ;; Return value:  Size  Location     Type
 19954 ;;                  1    wreg      enum E360
 19955 ;; Registers used:
 19956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19957 ;; Tracked objects:
 19958 ;;		On entry : 1F/3
 19959 ;;		On exit  : 1F/3
 19960 ;;		Unchanged: 0/0
 19961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19962 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19965 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19966 ;;Total ram usage:        1 bytes
 19967 ;; Hardware stack levels used:    1
 19968 ;; Hardware stack levels required when called:    2
 19969 ;; This function calls:
 19970 ;;		i1_I2C1_SetBuffer
 19971 ;;		i1_I2C1_SetDataCompleteCallback
 19972 ;; This function is called by:
 19973 ;;		_I2C1_DO_TX
 19974 ;;		_I2C1_DO_RX
 19975 ;;		_I2C1_DO_TX_EMPTY
 19976 ;;		_I2C1_DO_ADDRESS_NACK
 19977 ;; This function uses a non-reentrant model
 19978 ;;
 19979                           
 19980                           
 19981                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F229
 19982  1D39                     _rdBlkRegCompleteHandler@i2c1_master_example$F229:
 19983                           
 19984                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 19985                           
 19986                           ;incstack = 0
 19987                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F229: [wreg+fsr1l+fsr1h+stat
      +                          us,2+status,0+pclath+cstack]
 19988  1D39  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr,w
 19989  1D3A  3E02               	addlw	2
 19990  1D3B  0086               	movwf	6
 19991  1D3C  0187               	clrf	7
 19992  1D3D  0801               	movf	1,w
 19993  1D3E  00F0               	movwf	i1I2C1_SetBuffer@buffer
 19994  1D3F  3000               	movlw	0
 19995  1D40  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 19996  1D41  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr,w
 19997  1D42  0086               	movwf	6
 19998  1D43  0187               	clrf	7
 19999  1D44  3F40               	moviw [0]fsr1
 20000  1D45  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20001  1D46  3F41               	moviw [1]fsr1
 20002  1D47  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20003  1D48  319A  22EF  319D   	fcall	i1_I2C1_SetBuffer
 20004                           
 20005                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 20006  1D4B  3000               	movlw	0
 20007  1D4C  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20008  1D4D  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20009  1D4E  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20010  1D4F  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20011                           
 20012                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 20013  1D51  3002               	movlw	2
 20014  1D52  0008               	return
 20015  1D53                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F229:
 20016                           
 20017                           	psect	text109
 20018  1C53                     __ptext109:	
 20019 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F212 *****************
 20020 ;; Defined at:
 20021 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20022 ;; Parameters:    Size  Location     Type
 20023 ;;  ptr             1    9[COMMON] PTR void 
 20024 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20025 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20026 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20027 ;; Auto vars:     Size  Location     Type
 20028 ;;		None
 20029 ;; Return value:  Size  Location     Type
 20030 ;;                  1    wreg      enum E360
 20031 ;; Registers used:
 20032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20033 ;; Tracked objects:
 20034 ;;		On entry : 1F/3
 20035 ;;		On exit  : 1F/3
 20036 ;;		Unchanged: 0/0
 20037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20038 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20041 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20042 ;;Total ram usage:        1 bytes
 20043 ;; Hardware stack levels used:    1
 20044 ;; Hardware stack levels required when called:    2
 20045 ;; This function calls:
 20046 ;;		i1_I2C1_SetBuffer
 20047 ;;		i1_I2C1_SetDataCompleteCallback
 20048 ;; This function is called by:
 20049 ;;		_I2C1_DO_TX
 20050 ;;		_I2C1_DO_RX
 20051 ;;		_I2C1_DO_TX_EMPTY
 20052 ;;		_I2C1_DO_ADDRESS_NACK
 20053 ;; This function uses a non-reentrant model
 20054 ;;
 20055                           
 20056                           
 20057                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F212
 20058  1C53                     _wr1RegCompleteHandler@i2c1_master_example$F212:
 20059                           
 20060                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 20061                           
 20062                           ;incstack = 0
 20063                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F212: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 20064  1C53  0879               	movf	wr1RegCompleteHandler@i2c1_master_example$F212@ptr,w
 20065  1C54  00F0               	movwf	i1I2C1_SetBuffer@buffer
 20066  1C55  39FF               	andlw	255
 20067  1C56  1D03               	skipz
 20068  1C57  3000               	movlw	0
 20069  1C58  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 20070  1C59  3001               	movlw	1
 20071  1C5A  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20072  1C5B  3000               	movlw	0
 20073  1C5C  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20074  1C5D  319A  22EF  319C   	fcall	i1_I2C1_SetBuffer
 20075                           
 20076                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 20077  1C60  3000               	movlw	0
 20078  1C61  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20079  1C62  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20080  1C63  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20081  1C64  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20082                           
 20083                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 20084  1C66  3004               	movlw	4
 20085  1C67  0008               	return
 20086  1C68                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F212:
 20087                           
 20088                           	psect	text110
 20089  1C3E                     __ptext110:	
 20090 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F206 *****************
 20091 ;; Defined at:
 20092 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20093 ;; Parameters:    Size  Location     Type
 20094 ;;  ptr             1    9[COMMON] PTR void 
 20095 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20096 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20097 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20098 ;; Auto vars:     Size  Location     Type
 20099 ;;		None
 20100 ;; Return value:  Size  Location     Type
 20101 ;;                  1    wreg      enum E360
 20102 ;; Registers used:
 20103 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20104 ;; Tracked objects:
 20105 ;;		On entry : 1F/3
 20106 ;;		On exit  : 1F/3
 20107 ;;		Unchanged: 0/0
 20108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20109 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20113 ;;Total ram usage:        1 bytes
 20114 ;; Hardware stack levels used:    1
 20115 ;; Hardware stack levels required when called:    2
 20116 ;; This function calls:
 20117 ;;		i1_I2C1_SetBuffer
 20118 ;;		i1_I2C1_SetDataCompleteCallback
 20119 ;; This function is called by:
 20120 ;;		_I2C1_DO_TX
 20121 ;;		_I2C1_DO_RX
 20122 ;;		_I2C1_DO_TX_EMPTY
 20123 ;;		_I2C1_DO_ADDRESS_NACK
 20124 ;; This function uses a non-reentrant model
 20125 ;;
 20126                           
 20127                           
 20128                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F206
 20129  1C3E                     _rd2RegCompleteHandler@i2c1_master_example$F206:
 20130                           
 20131                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 20132                           
 20133                           ;incstack = 0
 20134                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F206: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 20135  1C3E  0879               	movf	rd2RegCompleteHandler@i2c1_master_example$F206@ptr,w
 20136  1C3F  00F0               	movwf	i1I2C1_SetBuffer@buffer
 20137  1C40  39FF               	andlw	255
 20138  1C41  1D03               	skipz
 20139  1C42  3000               	movlw	0
 20140  1C43  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 20141  1C44  3002               	movlw	2
 20142  1C45  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20143  1C46  3000               	movlw	0
 20144  1C47  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20145  1C48  319A  22EF  319C   	fcall	i1_I2C1_SetBuffer
 20146                           
 20147                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 20148  1C4B  3000               	movlw	0
 20149  1C4C  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20150  1C4D  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20151  1C4E  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20152  1C4F  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20153                           
 20154                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 20155  1C51  3002               	movlw	2
 20156  1C52  0008               	return
 20157  1C53                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F206:
 20158                           
 20159                           	psect	text111
 20160  1C29                     __ptext111:	
 20161 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F195 *****************
 20162 ;; Defined at:
 20163 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20164 ;; Parameters:    Size  Location     Type
 20165 ;;  ptr             1    9[COMMON] PTR void 
 20166 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20167 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20168 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20169 ;; Auto vars:     Size  Location     Type
 20170 ;;		None
 20171 ;; Return value:  Size  Location     Type
 20172 ;;                  1    wreg      enum E360
 20173 ;; Registers used:
 20174 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20175 ;; Tracked objects:
 20176 ;;		On entry : 1F/3
 20177 ;;		On exit  : 1F/3
 20178 ;;		Unchanged: 0/0
 20179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20180 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20183 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20184 ;;Total ram usage:        1 bytes
 20185 ;; Hardware stack levels used:    1
 20186 ;; Hardware stack levels required when called:    2
 20187 ;; This function calls:
 20188 ;;		i1_I2C1_SetBuffer
 20189 ;;		i1_I2C1_SetDataCompleteCallback
 20190 ;; This function is called by:
 20191 ;;		_I2C1_DO_TX
 20192 ;;		_I2C1_DO_RX
 20193 ;;		_I2C1_DO_TX_EMPTY
 20194 ;;		_I2C1_DO_ADDRESS_NACK
 20195 ;; This function uses a non-reentrant model
 20196 ;;
 20197                           
 20198                           
 20199                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F195
 20200  1C29                     _rd1RegCompleteHandler@i2c1_master_example$F195:
 20201                           
 20202                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 20203                           
 20204                           ;incstack = 0
 20205                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F195: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 20206  1C29  0879               	movf	rd1RegCompleteHandler@i2c1_master_example$F195@ptr,w
 20207  1C2A  00F0               	movwf	i1I2C1_SetBuffer@buffer
 20208  1C2B  39FF               	andlw	255
 20209  1C2C  1D03               	skipz
 20210  1C2D  3000               	movlw	0
 20211  1C2E  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 20212  1C2F  3001               	movlw	1
 20213  1C30  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20214  1C31  3000               	movlw	0
 20215  1C32  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20216  1C33  319A  22EF  319C   	fcall	i1_I2C1_SetBuffer
 20217                           
 20218                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 20219  1C36  3000               	movlw	0
 20220  1C37  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20221  1C38  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20222  1C39  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20223  1C3A  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20224                           
 20225                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 20226  1C3C  3002               	movlw	2
 20227  1C3D  0008               	return
 20228  1C3E                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F195:
 20229                           
 20230                           	psect	text112
 20231  1D1F                     __ptext112:	
 20232 ;; *************** function _rdBlkRegCompleteHandler *****************
 20233 ;; Defined at:
 20234 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20235 ;; Parameters:    Size  Location     Type
 20236 ;;  p               1    9[COMMON] PTR void 
 20237 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20238 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20239 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20240 ;; Auto vars:     Size  Location     Type
 20241 ;;		None
 20242 ;; Return value:  Size  Location     Type
 20243 ;;                  1    wreg      enum E360
 20244 ;; Registers used:
 20245 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20246 ;; Tracked objects:
 20247 ;;		On entry : 1F/3
 20248 ;;		On exit  : 1F/3
 20249 ;;		Unchanged: 0/0
 20250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20251 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20255 ;;Total ram usage:        1 bytes
 20256 ;; Hardware stack levels used:    1
 20257 ;; Hardware stack levels required when called:    2
 20258 ;; This function calls:
 20259 ;;		i1_I2C1_SetBuffer
 20260 ;;		i1_I2C1_SetDataCompleteCallback
 20261 ;; This function is called by:
 20262 ;;		_I2C1_DO_TX
 20263 ;;		_I2C1_DO_RX
 20264 ;;		_I2C1_DO_TX_EMPTY
 20265 ;;		_I2C1_DO_ADDRESS_NACK
 20266 ;; This function uses a non-reentrant model
 20267 ;;
 20268                           
 20269                           
 20270                           ;psect for function _rdBlkRegCompleteHandler
 20271  1D1F                     _rdBlkRegCompleteHandler:
 20272                           
 20273                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 136:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 20274                           
 20275                           ;incstack = 0
 20276                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 20277  1D1F  0879               	movf	rdBlkRegCompleteHandler@p,w
 20278  1D20  3E02               	addlw	2
 20279  1D21  0086               	movwf	6
 20280  1D22  0187               	clrf	7
 20281  1D23  0801               	movf	1,w
 20282  1D24  00F0               	movwf	i1I2C1_SetBuffer@buffer
 20283  1D25  3000               	movlw	0
 20284  1D26  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 20285  1D27  0879               	movf	rdBlkRegCompleteHandler@p,w
 20286  1D28  0086               	movwf	6
 20287  1D29  0187               	clrf	7
 20288  1D2A  3F40               	moviw [0]fsr1
 20289  1D2B  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20290  1D2C  3F41               	moviw [1]fsr1
 20291  1D2D  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20292  1D2E  319A  22EF  319D   	fcall	i1_I2C1_SetBuffer
 20293                           
 20294                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 20295  1D31  3000               	movlw	0
 20296  1D32  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20297  1D33  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20298  1D34  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20299  1D35  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20300                           
 20301                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return I2C1_RESTART_READ;
 20302  1D37  3002               	movlw	2
 20303  1D38  0008               	return
 20304  1D39                     __end_of_rdBlkRegCompleteHandler:
 20305                           
 20306                           	psect	text113
 20307  1C14                     __ptext113:	
 20308 ;; *************** function _wr2RegCompleteHandler *****************
 20309 ;; Defined at:
 20310 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20311 ;; Parameters:    Size  Location     Type
 20312 ;;  p               1    9[COMMON] PTR void 
 20313 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20314 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20315 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20316 ;; Auto vars:     Size  Location     Type
 20317 ;;		None
 20318 ;; Return value:  Size  Location     Type
 20319 ;;                  1    wreg      enum E360
 20320 ;; Registers used:
 20321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20322 ;; Tracked objects:
 20323 ;;		On entry : 1F/3
 20324 ;;		On exit  : 1F/3
 20325 ;;		Unchanged: 0/0
 20326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20327 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20330 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20331 ;;Total ram usage:        1 bytes
 20332 ;; Hardware stack levels used:    1
 20333 ;; Hardware stack levels required when called:    2
 20334 ;; This function calls:
 20335 ;;		i1_I2C1_SetBuffer
 20336 ;;		i1_I2C1_SetDataCompleteCallback
 20337 ;; This function is called by:
 20338 ;;		_I2C1_DO_TX
 20339 ;;		_I2C1_DO_RX
 20340 ;;		_I2C1_DO_TX_EMPTY
 20341 ;;		_I2C1_DO_ADDRESS_NACK
 20342 ;; This function uses a non-reentrant model
 20343 ;;
 20344                           
 20345                           
 20346                           ;psect for function _wr2RegCompleteHandler
 20347  1C14                     _wr2RegCompleteHandler:
 20348                           
 20349                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 112:     I2C1_SetBuffer(p,2);
 20350                           
 20351                           ;incstack = 0
 20352                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20353  1C14  0879               	movf	wr2RegCompleteHandler@p,w
 20354  1C15  00F0               	movwf	i1I2C1_SetBuffer@buffer
 20355  1C16  39FF               	andlw	255
 20356  1C17  1D03               	skipz
 20357  1C18  3000               	movlw	0
 20358  1C19  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 20359  1C1A  3002               	movlw	2
 20360  1C1B  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20361  1C1C  3000               	movlw	0
 20362  1C1D  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20363  1C1E  319A  22EF  319C   	fcall	i1_I2C1_SetBuffer
 20364                           
 20365                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 20366  1C21  3000               	movlw	0
 20367  1C22  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20368  1C23  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20369  1C24  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20370  1C25  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20371                           
 20372                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return I2C1_CONTINUE;
 20373  1C27  3004               	movlw	4
 20374  1C28  0008               	return
 20375  1C29                     __end_of_wr2RegCompleteHandler:
 20376                           
 20377                           	psect	text114
 20378  1BFF                     __ptext114:	
 20379 ;; *************** function _rd2RegCompleteHandler *****************
 20380 ;; Defined at:
 20381 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20382 ;; Parameters:    Size  Location     Type
 20383 ;;  p               1    9[COMMON] PTR void 
 20384 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20385 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20386 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20387 ;; Auto vars:     Size  Location     Type
 20388 ;;		None
 20389 ;; Return value:  Size  Location     Type
 20390 ;;                  1    wreg      enum E360
 20391 ;; Registers used:
 20392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20393 ;; Tracked objects:
 20394 ;;		On entry : 1F/3
 20395 ;;		On exit  : 1F/3
 20396 ;;		Unchanged: 0/0
 20397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20398 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20402 ;;Total ram usage:        1 bytes
 20403 ;; Hardware stack levels used:    1
 20404 ;; Hardware stack levels required when called:    2
 20405 ;; This function calls:
 20406 ;;		i1_I2C1_SetBuffer
 20407 ;;		i1_I2C1_SetDataCompleteCallback
 20408 ;; This function is called by:
 20409 ;;		_I2C1_DO_TX
 20410 ;;		_I2C1_DO_RX
 20411 ;;		_I2C1_DO_TX_EMPTY
 20412 ;;		_I2C1_DO_ADDRESS_NACK
 20413 ;; This function uses a non-reentrant model
 20414 ;;
 20415                           
 20416                           
 20417                           ;psect for function _rd2RegCompleteHandler
 20418  1BFF                     _rd2RegCompleteHandler:
 20419                           
 20420                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 89:     I2C1_SetBuffer(p,2);
 20421                           
 20422                           ;incstack = 0
 20423                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20424  1BFF  0879               	movf	rd2RegCompleteHandler@p,w
 20425  1C00  00F0               	movwf	i1I2C1_SetBuffer@buffer
 20426  1C01  39FF               	andlw	255
 20427  1C02  1D03               	skipz
 20428  1C03  3000               	movlw	0
 20429  1C04  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 20430  1C05  3002               	movlw	2
 20431  1C06  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20432  1C07  3000               	movlw	0
 20433  1C08  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20434  1C09  319A  22EF  319B   	fcall	i1_I2C1_SetBuffer
 20435                           
 20436                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 20437  1C0C  3000               	movlw	0
 20438  1C0D  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20439  1C0E  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20440  1C0F  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20441  1C10  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20442                           
 20443                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return I2C1_RESTART_READ;
 20444  1C12  3002               	movlw	2
 20445  1C13  0008               	return
 20446  1C14                     __end_of_rd2RegCompleteHandler:
 20447                           
 20448                           	psect	text115
 20449  1BEA                     __ptext115:	
 20450 ;; *************** function _rd1RegCompleteHandler *****************
 20451 ;; Defined at:
 20452 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20453 ;; Parameters:    Size  Location     Type
 20454 ;;  p               1    9[COMMON] PTR void 
 20455 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20456 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20457 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20458 ;; Auto vars:     Size  Location     Type
 20459 ;;		None
 20460 ;; Return value:  Size  Location     Type
 20461 ;;                  1    wreg      enum E360
 20462 ;; Registers used:
 20463 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20464 ;; Tracked objects:
 20465 ;;		On entry : 1F/3
 20466 ;;		On exit  : 1F/3
 20467 ;;		Unchanged: 0/0
 20468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20469 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20473 ;;Total ram usage:        1 bytes
 20474 ;; Hardware stack levels used:    1
 20475 ;; Hardware stack levels required when called:    2
 20476 ;; This function calls:
 20477 ;;		i1_I2C1_SetBuffer
 20478 ;;		i1_I2C1_SetDataCompleteCallback
 20479 ;; This function is called by:
 20480 ;;		_i2c_read1ByteRegister
 20481 ;;		_I2C1_DO_TX
 20482 ;;		_I2C1_DO_RX
 20483 ;;		_I2C1_DO_TX_EMPTY
 20484 ;;		_I2C1_DO_ADDRESS_NACK
 20485 ;; This function uses a non-reentrant model
 20486 ;;
 20487                           
 20488                           
 20489                           ;psect for function _rd1RegCompleteHandler
 20490  1BEA                     _rd1RegCompleteHandler:
 20491                           
 20492                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 60:     I2C1_SetBuffer(p,1);
 20493                           
 20494                           ;incstack = 0
 20495                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20496  1BEA  0879               	movf	rd1RegCompleteHandler@p,w
 20497  1BEB  00F0               	movwf	i1I2C1_SetBuffer@buffer
 20498  1BEC  39FF               	andlw	255
 20499  1BED  1D03               	skipz
 20500  1BEE  3000               	movlw	0
 20501  1BEF  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 20502  1BF0  3001               	movlw	1
 20503  1BF1  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20504  1BF2  3000               	movlw	0
 20505  1BF3  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20506  1BF4  319A  22EF  319B   	fcall	i1_I2C1_SetBuffer
 20507                           
 20508                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 20509  1BF7  3000               	movlw	0
 20510  1BF8  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20511  1BF9  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20512  1BFA  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20513  1BFB  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20514                           
 20515                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return I2C1_RESTART_READ;
 20516  1BFD  3002               	movlw	2
 20517  1BFE  0008               	return
 20518  1BFF                     __end_of_rd1RegCompleteHandler:
 20519                           
 20520                           	psect	text116
 20521  1BD5                     __ptext116:	
 20522 ;; *************** function _wr1RegCompleteHandler *****************
 20523 ;; Defined at:
 20524 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 20525 ;; Parameters:    Size  Location     Type
 20526 ;;  p               1    9[COMMON] PTR void 
 20527 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20528 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20529 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20530 ;; Auto vars:     Size  Location     Type
 20531 ;;		None
 20532 ;; Return value:  Size  Location     Type
 20533 ;;                  1    wreg      enum E360
 20534 ;; Registers used:
 20535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20536 ;; Tracked objects:
 20537 ;;		On entry : 1F/3
 20538 ;;		On exit  : 1F/3
 20539 ;;		Unchanged: 0/0
 20540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20545 ;;Total ram usage:        1 bytes
 20546 ;; Hardware stack levels used:    1
 20547 ;; Hardware stack levels required when called:    2
 20548 ;; This function calls:
 20549 ;;		i1_I2C1_SetBuffer
 20550 ;;		i1_I2C1_SetDataCompleteCallback
 20551 ;; This function is called by:
 20552 ;;		_I2C1_DO_TX
 20553 ;;		_I2C1_DO_RX
 20554 ;;		_I2C1_DO_TX_EMPTY
 20555 ;;		_I2C1_DO_ADDRESS_NACK
 20556 ;; This function uses a non-reentrant model
 20557 ;;
 20558                           
 20559                           
 20560                           ;psect for function _wr1RegCompleteHandler
 20561  1BD5                     _wr1RegCompleteHandler:
 20562                           
 20563                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 33:     I2C1_SetBuffer(p,1);
 20564                           
 20565                           ;incstack = 0
 20566                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 20567  1BD5  0879               	movf	wr1RegCompleteHandler@p,w
 20568  1BD6  00F0               	movwf	i1I2C1_SetBuffer@buffer
 20569  1BD7  39FF               	andlw	255
 20570  1BD8  1D03               	skipz
 20571  1BD9  3000               	movlw	0
 20572  1BDA  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 20573  1BDB  3001               	movlw	1
 20574  1BDC  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20575  1BDD  3000               	movlw	0
 20576  1BDE  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20577  1BDF  319A  22EF  319B   	fcall	i1_I2C1_SetBuffer
 20578                           
 20579                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 20580  1BE2  3000               	movlw	0
 20581  1BE3  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20582  1BE4  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20583  1BE5  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20584  1BE6  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20585                           
 20586                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return I2C1_CONTINUE;
 20587  1BE8  3004               	movlw	4
 20588  1BE9  0008               	return
 20589  1BEA                     __end_of_wr1RegCompleteHandler:
 20590                           
 20591                           	psect	text117
 20592  1BC0                     __ptext117:	
 20593 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F218 *****************
 20594 ;; Defined at:
 20595 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 20596 ;; Parameters:    Size  Location     Type
 20597 ;;  ptr             1    9[COMMON] PTR void 
 20598 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20599 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20600 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20601 ;; Auto vars:     Size  Location     Type
 20602 ;;		None
 20603 ;; Return value:  Size  Location     Type
 20604 ;;                  1    wreg      enum E360
 20605 ;; Registers used:
 20606 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20607 ;; Tracked objects:
 20608 ;;		On entry : 1F/3
 20609 ;;		On exit  : 1F/3
 20610 ;;		Unchanged: 0/0
 20611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20612 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20616 ;;Total ram usage:        1 bytes
 20617 ;; Hardware stack levels used:    1
 20618 ;; Hardware stack levels required when called:    2
 20619 ;; This function calls:
 20620 ;;		i1_I2C1_SetBuffer
 20621 ;;		i1_I2C1_SetDataCompleteCallback
 20622 ;; This function is called by:
 20623 ;;		_I2C1_DO_TX
 20624 ;;		_I2C1_DO_RX
 20625 ;;		_I2C1_DO_TX_EMPTY
 20626 ;;		_I2C1_DO_ADDRESS_NACK
 20627 ;; This function uses a non-reentrant model
 20628 ;;
 20629                           
 20630                           
 20631                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F218
 20632  1BC0                     _wr2RegCompleteHandler@i2c1_master_example$F218:
 20633                           
 20634                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 20635                           
 20636                           ;incstack = 0
 20637                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F218: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 20638  1BC0  0879               	movf	wr2RegCompleteHandler@i2c1_master_example$F218@ptr,w
 20639  1BC1  00F0               	movwf	i1I2C1_SetBuffer@buffer
 20640  1BC2  39FF               	andlw	255
 20641  1BC3  1D03               	skipz
 20642  1BC4  3000               	movlw	0
 20643  1BC5  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 20644  1BC6  3002               	movlw	2
 20645  1BC7  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 20646  1BC8  3000               	movlw	0
 20647  1BC9  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 20648  1BCA  319A  22EF  319B   	fcall	i1_I2C1_SetBuffer
 20649                           
 20650                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 20651  1BCD  3000               	movlw	0
 20652  1BCE  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 20653  1BCF  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 20654  1BD0  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 20655  1BD1  319A  22FB         	fcall	i1_I2C1_SetDataCompleteCallback
 20656                           
 20657                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 20658  1BD3  3004               	movlw	4
 20659  1BD4  0008               	return
 20660  1BD5                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F218:
 20661                           
 20662                           	psect	text118
 20663  1AFB                     __ptext118:	
 20664 ;; *************** function i1_I2C1_SetDataCompleteCallback *****************
 20665 ;; Defined at:
 20666 ;;		line 275 in file "mcc_generated_files/i2c1_master.c"
 20667 ;; Parameters:    Size  Location     Type
 20668 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 20669 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 20670 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 20671 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 20672 ;;  ptr             1    7[COMMON] PTR void 
 20673 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20674 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20675 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20676 ;; Auto vars:     Size  Location     Type
 20677 ;;		None
 20678 ;; Return value:  Size  Location     Type
 20679 ;;                  1    wreg      void 
 20680 ;; Registers used:
 20681 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20682 ;; Tracked objects:
 20683 ;;		On entry : 1F/3
 20684 ;;		On exit  : 1F/3
 20685 ;;		Unchanged: 1E/0
 20686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20687 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20689 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20691 ;;Total ram usage:        4 bytes
 20692 ;; Hardware stack levels used:    1
 20693 ;; Hardware stack levels required when called:    1
 20694 ;; This function calls:
 20695 ;;		i1_I2C1_SetCallback
 20696 ;; This function is called by:
 20697 ;;		_wr1RegCompleteHandler
 20698 ;;		_rd1RegCompleteHandler
 20699 ;;		_rd2RegCompleteHandler
 20700 ;;		_wr2RegCompleteHandler
 20701 ;;		_rdBlkRegCompleteHandler
 20702 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 20703 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 20704 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 20705 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 20706 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 20707 ;; This function uses a non-reentrant model
 20708 ;;
 20709                           
 20710                           
 20711                           ;psect for function i1_I2C1_SetDataCompleteCallback
 20712  1AFB                     i1_I2C1_SetDataCompleteCallback:
 20713                           
 20714                           ;mcc_generated_files/i2c1_master.c: 275: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 276: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 277:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 20715                           
 20716                           ;incstack = 0
 20717                           ; Regs used in i1_I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 20718  1AFB  0876               	movf	i1I2C1_SetDataCompleteCallback@cb+1,w
 20719  1AFC  00F1               	movwf	i1I2C1_SetCallback@cb+1
 20720  1AFD  0875               	movf	i1I2C1_SetDataCompleteCallback@cb,w
 20721  1AFE  00F0               	movwf	i1I2C1_SetCallback@cb
 20722  1AFF  0877               	movf	i1I2C1_SetDataCompleteCallback@ptr,w
 20723  1B00  00F8               	movwf	??i1_I2C1_SetDataCompleteCallback
 20724  1B01  0878               	movf	??i1_I2C1_SetDataCompleteCallback,w
 20725  1B02  00F2               	movwf	i1I2C1_SetCallback@ptr
 20726  1B03  3000               	movlw	0
 20727  1B04  319F  2733         	fcall	i1_I2C1_SetCallback
 20728  1B06  0008               	return
 20729  1B07                     __end_ofi1_I2C1_SetDataCompleteCallback:
 20730                           
 20731                           	psect	text119
 20732  1F33                     __ptext119:	
 20733 ;; *************** function i1_I2C1_SetCallback *****************
 20734 ;; Defined at:
 20735 ;;		line 305 in file "mcc_generated_files/i2c1_master.c"
 20736 ;; Parameters:    Size  Location     Type
 20737 ;;  idx             1    wreg     enum E7176
 20738 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 20739 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 20740 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 20741 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 20742 ;;  ptr             1    2[COMMON] PTR void 
 20743 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 20744 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 20745 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 20746 ;; Auto vars:     Size  Location     Type
 20747 ;;  idx             1    4[COMMON] enum E7176
 20748 ;; Return value:  Size  Location     Type
 20749 ;;                  1    wreg      void 
 20750 ;; Registers used:
 20751 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 20752 ;; Tracked objects:
 20753 ;;		On entry : 1F/3
 20754 ;;		On exit  : 1F/3
 20755 ;;		Unchanged: 1E/0
 20756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20757 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20758 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20760 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20761 ;;Total ram usage:        5 bytes
 20762 ;; Hardware stack levels used:    1
 20763 ;; This function calls:
 20764 ;;		Nothing
 20765 ;; This function is called by:
 20766 ;;		i1_I2C1_SetDataCompleteCallback
 20767 ;; This function uses a non-reentrant model
 20768 ;;
 20769                           
 20770                           
 20771                           ;psect for function i1_I2C1_SetCallback
 20772  1F33                     i1_I2C1_SetCallback:
 20773                           
 20774                           ;incstack = 0
 20775                           ; Regs used in i1_I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 20776                           ;i1I2C1_SetCallback@idx stored from wreg
 20777  1F33  00F4               	movwf	i1I2C1_SetCallback@idx
 20778                           
 20779                           ;mcc_generated_files/i2c1_master.c: 305: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 306: {;mcc_gen
      +                          erated_files/i2c1_master.c: 307:     if(cb)
 20780  1F34  0870               	movf	i1I2C1_SetCallback@cb,w
 20781  1F35  0471               	iorwf	i1I2C1_SetCallback@cb+1,w
 20782  1F36  1903               	btfsc	3,2
 20783  1F37  2F4B               	goto	i1l4580
 20784                           
 20785                           ;mcc_generated_files/i2c1_master.c: 308:     {;mcc_generated_files/i2c1_master.c: 309:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 20786  1F38  3574               	lslf	i1I2C1_SetCallback@idx,w
 20787  1F39  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 20788  1F3A  0086               	movwf	6
 20789  1F3B  3001               	movlw	1	; select bank3/4
 20790  1F3C  0087               	movwf	7
 20791  1F3D  0870               	movf	i1I2C1_SetCallback@cb,w
 20792  1F3E  3FC0               	movwi [0]fsr1
 20793  1F3F  0871               	movf	i1I2C1_SetCallback@cb+1,w
 20794  1F40  3FC1               	movwi [1]fsr1
 20795                           
 20796                           ;mcc_generated_files/i2c1_master.c: 310:         I2C1_Status.callbackPayload[idx] = ptr;
 20797  1F41  0872               	movf	i1I2C1_SetCallback@ptr,w
 20798  1F42  00F3               	movwf	??i1_I2C1_SetCallback
 20799  1F43  0874               	movf	i1I2C1_SetCallback@idx,w
 20800  1F44  3EDB               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 20801  1F45  0086               	movwf	6
 20802  1F46  3001               	movlw	1	; select bank3/4
 20803  1F47  0087               	movwf	7
 20804  1F48  0873               	movf	??i1_I2C1_SetCallback,w
 20805  1F49  0081               	movwf	1
 20806                           
 20807                           ;mcc_generated_files/i2c1_master.c: 311:     }
 20808  1F4A  0008               	return
 20809  1F4B                     i1l4580:
 20810                           
 20811                           ;mcc_generated_files/i2c1_master.c: 313:     {;mcc_generated_files/i2c1_master.c: 314:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 20812  1F4B  3574               	lslf	i1I2C1_SetCallback@idx,w
 20813  1F4C  3ECF               	addlw	(low (_I2C1_Status| (0+256)))& (0+255)
 20814  1F4D  0086               	movwf	6
 20815  1F4E  3001               	movlw	1	; select bank3/4
 20816  1F4F  0087               	movwf	7
 20817  1F50  3000               	movlw	low _I2C1_CallbackReturnStop
 20818  1F51  3FC0               	movwi [0]fsr1
 20819  1F52  3010               	movlw	high _I2C1_CallbackReturnStop
 20820  1F53  3FC1               	movwi [1]fsr1
 20821                           
 20822                           ;mcc_generated_files/i2c1_master.c: 315:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 20823  1F54  0874               	movf	i1I2C1_SetCallback@idx,w
 20824  1F55  3EDB               	addlw	(low ((_I2C1_Status| (0+256)+12)))& (0+255)
 20825  1F56  0086               	movwf	6
 20826  1F57  3001               	movlw	1	; select bank3/4
 20827  1F58  0087               	movwf	7
 20828  1F59  0181               	clrf	1
 20829  1F5A  0008               	return
 20830  1F5B                     __end_ofi1_I2C1_SetCallback:
 20831                           
 20832                           	psect	text120
 20833  1AEF                     __ptext120:	
 20834 ;; *************** function i1_I2C1_SetBuffer *****************
 20835 ;; Defined at:
 20836 ;;		line 265 in file "mcc_generated_files/i2c1_master.c"
 20837 ;; Parameters:    Size  Location     Type
 20838 ;;  buffer          2    0[COMMON] PTR void 
 20839 ;;		 -> tasbuff(2), TAS_NORMAL(2), TAS_CLEAR_FALT(2), TAS_CHK_RAILS(2), 
 20840 ;;		 -> TAS_PLAY(2), TAS_MUTE(2), TAS_FS96K(2), TAS_FS48K(2), 
 20841 ;;		 -> TAS_FS44K(2), TAS_AC(2), TAS_DCDIAG_CLEAR(2), TAS_RUN(2), 
 20842 ;;		 -> TAS_RESET(2), INIT9211_31(2), INIT9211_27(2), INIT9211_26(2), 
 20843 ;;		 -> INIT9211_2B(2), INIT9211_2E(2), INIT9211_20(2), ADC_96K(2), 
 20844 ;;		 -> ADC_DC(2), DIT_I2S(2), DIT_LVDS(2), DIT_ADC(2), 
 20845 ;;		 -> DIT_DIR(2), ADC_ATTR_3dB(2), ADC_ATTL_3dB(2), CALC_MOUT(2), 
 20846 ;;		 -> DIR_COAX(2), DIR_OPT(2), AUXSRC_LVDS(2), AUXSRC_ADC(2), 
 20847 ;;		 -> AUXSRC_DIR(2), AUXSRC_AUTO(2), SRC_I2S(2), SRC_LVDS(2), 
 20848 ;;		 -> SRC_ADC(2), SRC_DIR(2), I2S_IN(2), I2S_OUT(2), 
 20849 ;;		 -> I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteReg
      +ister@data(2), 
 20850 ;;		 -> I2C1_Write1ByteRegister@reg(1), I2C1_Write1ByteRegister@data(1), I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRe
      +gister@returnValue(2), 
 20851 ;;		 -> I2C1_Read1ByteRegister@reg(1), I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBloc
      +k@d(3), 
 20852 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
 20853 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
 20854 ;;		 -> NULL(0), i2c_lcd_send_data@lowerdata_en(1), i2c_lcd_send_data@lowerdata(1), i2c_lcd_send_data@upperdata_en(1), 
 20855 ;;		 -> i2c_lcd_send_data@upperdata(1), i2c_lcd_send_upper4bit@upperdata_en(1), i2c_lcd_send_upper4bit@upperdata(1), i2c
      +_lcd_send_command@lowerdata_en(1), 
 20856 ;;		 -> i2c_lcd_send_command@lowerdata(1), i2c_lcd_send_command@upperdata_en(1), i2c_lcd_send_command@upperdata(1), 
 20857 ;;  bufferSize      2    2[COMMON] unsigned int 
 20858 ;; Auto vars:     Size  Location     Type
 20859 ;;		None
 20860 ;; Return value:  Size  Location     Type
 20861 ;;                  1    wreg      void 
 20862 ;; Registers used:
 20863 ;;		wreg
 20864 ;; Tracked objects:
 20865 ;;		On entry : 1F/3
 20866 ;;		On exit  : 1F/3
 20867 ;;		Unchanged: 0/0
 20868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20869 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20872 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20873 ;;Total ram usage:        4 bytes
 20874 ;; Hardware stack levels used:    1
 20875 ;; This function calls:
 20876 ;;		Nothing
 20877 ;; This function is called by:
 20878 ;;		_wr1RegCompleteHandler
 20879 ;;		_rd1RegCompleteHandler
 20880 ;;		_rd2RegCompleteHandler
 20881 ;;		_wr2RegCompleteHandler
 20882 ;;		_rdBlkRegCompleteHandler
 20883 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 20884 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 20885 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 20886 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 20887 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 20888 ;; This function uses a non-reentrant model
 20889 ;;
 20890                           
 20891                           
 20892                           ;psect for function i1_I2C1_SetBuffer
 20893  1AEF                     i1_I2C1_SetBuffer:
 20894                           
 20895                           ;mcc_generated_files/i2c1_master.c: 265: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 266: {;mcc_generated_files/i2c1_master.c: 267: 
      +                              if(I2C1_Status.bufferFree)
 20896                           
 20897                           ;incstack = 0
 20898                           ; Regs used in i1_I2C1_SetBuffer: [wreg]
 20899  1AEF  1DEC               	btfss	(_I2C1_Status^(0+384)+29),3
 20900  1AF0  0008               	return
 20901                           
 20902                           ;mcc_generated_files/i2c1_master.c: 268:     {;mcc_generated_files/i2c1_master.c: 269:  
      +                                 I2C1_Status.data_ptr = buffer;
 20903  1AF1  0871               	movf	i1I2C1_SetBuffer@buffer+1,w
 20904  1AF2  00E7               	movwf	((low ((_I2C1_Status| (0+256)+23))+1))^(0+128)
 20905  1AF3  0870               	movf	i1I2C1_SetBuffer@buffer,w
 20906  1AF4  00E6               	movwf	(low ((_I2C1_Status| (0+256)+23)))^(0+128)
 20907                           
 20908                           ;mcc_generated_files/i2c1_master.c: 270:         I2C1_Status.data_length = bufferSize;
 20909  1AF5  0873               	movf	i1I2C1_SetBuffer@bufferSize+1,w
 20910  1AF6  00E9               	movwf	((_I2C1_Status+1)^(0+384)+25)
 20911  1AF7  0872               	movf	i1I2C1_SetBuffer@bufferSize,w
 20912  1AF8  00E8               	movwf	(_I2C1_Status^(0+384)+25)
 20913                           
 20914                           ;mcc_generated_files/i2c1_master.c: 271:         I2C1_Status.bufferFree = 0;
 20915  1AF9  11EC               	bcf	(_I2C1_Status^(0+384)+29),3
 20916  1AFA  0008               	return
 20917  1AFB                     __end_ofi1_I2C1_SetBuffer:
 20918                           
 20919                           	psect	text121
 20920  1A45                     __ptext121:	
 20921 ;; *************** function _I2C1_MasterStop *****************
 20922 ;; Defined at:
 20923 ;;		line 596 in file "mcc_generated_files/i2c1_master.c"
 20924 ;; Parameters:    Size  Location     Type
 20925 ;;		None
 20926 ;; Auto vars:     Size  Location     Type
 20927 ;;		None
 20928 ;; Return value:  Size  Location     Type
 20929 ;;                  1    wreg      void 
 20930 ;; Registers used:
 20931 ;;		None
 20932 ;; Tracked objects:
 20933 ;;		On entry : 0/0
 20934 ;;		On exit  : 1F/4
 20935 ;;		Unchanged: 0/0
 20936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20941 ;;Total ram usage:        0 bytes
 20942 ;; Hardware stack levels used:    1
 20943 ;; This function calls:
 20944 ;;		Nothing
 20945 ;; This function is called by:
 20946 ;;		_I2C1_DO_SEND_STOP
 20947 ;; This function uses a non-reentrant model
 20948 ;;
 20949                           
 20950                           
 20951                           ;psect for function _I2C1_MasterStop
 20952  1A45                     _I2C1_MasterStop:
 20953                           
 20954                           ;mcc_generated_files/i2c1_master.c: 598:     SSP1CON2bits.PEN = 1;
 20955                           
 20956                           ;incstack = 0
 20957                           ; Regs used in _I2C1_MasterStop: []
 20958  1A45  0024               	movlb	4	; select bank4
 20959  1A46  1516               	bsf	22,2	;volatile
 20960  1A47  0008               	return
 20961  1A48                     __end_of_I2C1_MasterStop:
 20962                           
 20963                           	psect	text122
 20964  1A42                     __ptext122:	
 20965 ;; *************** function _I2C1_MasterEnableRestart *****************
 20966 ;; Defined at:
 20967 ;;		line 576 in file "mcc_generated_files/i2c1_master.c"
 20968 ;; Parameters:    Size  Location     Type
 20969 ;;		None
 20970 ;; Auto vars:     Size  Location     Type
 20971 ;;		None
 20972 ;; Return value:  Size  Location     Type
 20973 ;;                  1    wreg      void 
 20974 ;; Registers used:
 20975 ;;		None
 20976 ;; Tracked objects:
 20977 ;;		On entry : 0/0
 20978 ;;		On exit  : 1F/4
 20979 ;;		Unchanged: 0/0
 20980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20985 ;;Total ram usage:        0 bytes
 20986 ;; Hardware stack levels used:    1
 20987 ;; This function calls:
 20988 ;;		Nothing
 20989 ;; This function is called by:
 20990 ;;		_I2C1_DO_SEND_RESTART_READ
 20991 ;;		_I2C1_DO_SEND_RESTART_WRITE
 20992 ;;		_I2C1_DO_SEND_RESTART
 20993 ;; This function uses a non-reentrant model
 20994 ;;
 20995                           
 20996                           
 20997                           ;psect for function _I2C1_MasterEnableRestart
 20998  1A42                     _I2C1_MasterEnableRestart:
 20999                           
 21000                           ;mcc_generated_files/i2c1_master.c: 578:     SSP1CON2bits.RSEN = 1;
 21001                           
 21002                           ;incstack = 0
 21003                           ; Regs used in _I2C1_MasterEnableRestart: []
 21004  1A42  0024               	movlb	4	; select bank4
 21005  1A43  1496               	bsf	22,1	;volatile
 21006  1A44  0008               	return
 21007  1A45                     __end_of_I2C1_MasterEnableRestart:
 21008  007E                     btemp	set	126	;btemp
 21009  007E                     int$flags	set	126
 21010  007E                     wtemp0	set	126
 21011                           
 21012                           	psect	config
 21013                           
 21014                           ;Config register CONFIG1 @ 0x8007
 21015                           ;	FEXTOSC External Oscillator mode Selection bits
 21016                           ;	FEXTOSC = OFF, Oscillator not enabled
 21017                           ;	Power-up default value for COSC bits
 21018                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 21019                           ;	Clock Out Enable bit
 21020                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 21021                           ;	Clock Switch Enable bit
 21022                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21023                           ;	Fail-Safe Clock Monitor Enable
 21024                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 21025  8007                     	org	32775
 21026  8007  3F8C               	dw	16268
 21027                           
 21028                           ;Config register CONFIG2 @ 0x8008
 21029                           ;	Master Clear Enable bit
 21030                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input; MCLR internally disabled; Weak pu
      +                          ll-up under control of port pin's WPU control bit.
 21031                           ;	Power-up Timer Enable bit
 21032                           ;	PWRTE = OFF, PWRT disabled
 21033                           ;	Watchdog Timer Enable bits
 21034                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 21035                           ;	Low-power BOR enable bit
 21036                           ;	LPBOREN = OFF, ULPBOR disabled
 21037                           ;	Brown-out Reset Enable bits
 21038                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 21039                           ;	Brown-out Reset Voltage selection bit
 21040                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 21041                           ;	PPSLOCK bit One-Way Set Enable bit
 21042                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 21043                           ;	Stack Overflow/Underflow Reset Enable bit
 21044                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 21045                           ;	Debugger enable bit
 21046                           ;	DEBUG = OFF, Background debugger disabled
 21047  8008                     	org	32776
 21048  8008  3FF2               	dw	16370
 21049                           
 21050                           ;Config register CONFIG3 @ 0x8009
 21051                           ;	User NVM self-write protection bits
 21052                           ;	WRT = OFF, Write protection off
 21053                           ;	Low Voltage Programming Enable bit
 21054                           ;	LVP = OFF, High Voltage on MCLR/VPP must be used for programming.
 21055  8009                     	org	32777
 21056  8009  1FFF               	dw	8191
 21057                           
 21058                           ;Config register CONFIG4 @ 0x800A
 21059                           ;	User NVM Program Memory Code Protection bit
 21060                           ;	CP = OFF, User NVM code protection disabled
 21061                           ;	Data NVM Memory Code Protection bit
 21062                           ;	CPD = OFF, Data NVM code protection disabled
 21063  800A                     	org	32778
 21064  800A  3FFF               	dw	16383

Data Sizes:
    Strings     152
    Constant    400
    Data        156
    BSS         159
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     74      77
    BANK1            80     70      74
    BANK2            80      7      79
    BANK3            80      0      79
    BANK4            80      0      77
    BANK5            80      0      73
    BANK6            80      9       9
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$2715$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_DO_TX$2720	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_DO_TX$2715	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$2714	const PTR FTN()enum E7158 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    lcd_disp_param$2713	PTR const unsigned char  size(2) Largest target is 112
		 -> lcd_fs_name(CODE[112]), lcd_aux_name(CODE[14]), 

    S623$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 112
		 -> stoa@nuls(BANK0[7]), dbuf(BANK5[32]), ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), 
		 -> lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), ledstr(UNKNOWN), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 112
		 -> stoa@nuls(BANK0[7]), dbuf(BANK5[32]), ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), 
		 -> lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), ledstr(UNKNOWN), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 14
		 -> led_i2s_dir(CODE[14]), STR_6(CODE[2]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_1(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 14
		 -> led_i2s_dir(CODE[14]), STR_6(CODE[2]), STR_4(CODE[4]), STR_3(CODE[4]), 
		 -> STR_1(CODE[4]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[2]), STR_4(CODE[4]), STR_3(CODE[4]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[33]), STR_19(CODE[19]), STR_18(CODE[14]), STR_17(CODE[10]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_7(CODE[20]), STR_5(CODE[4]), 
		 -> STR_2(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[33]), STR_19(CODE[19]), STR_18(CODE[14]), STR_17(CODE[10]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_7(CODE[20]), STR_5(CODE[4]), 
		 -> STR_2(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[33]), STR_19(CODE[19]), STR_18(CODE[14]), STR_17(CODE[10]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_7(CODE[20]), STR_5(CODE[4]), 
		 -> STR_2(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 112
		 -> ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 112
		 -> ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 112
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), lcd_aux_name(CODE[14]), 
		 -> lcd_src_name(CODE[40]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_20(CODE[33]), STR_19(CODE[19]), STR_18(CODE[14]), STR_17(CODE[10]), 
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_7(CODE[20]), STR_5(CODE[4]), 
		 -> STR_2(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2086_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    f.buffer	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    srcset9211	PTR struct .[5] size(1) Largest target is 2
		 -> DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    puts_led@str	PTR unsigned char  size(2) Largest target is 35
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_12(CODE[13]), STR_11(CODE[4]), 
		 -> led_src_name(CODE[35]), STR_10(CODE[13]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    puts_led@cpoint	PTR unsigned char  size(2) Largest target is 35
		 -> STR_16(CODE[13]), STR_15(CODE[4]), STR_12(CODE[13]), STR_11(CODE[4]), 
		 -> led_src_name(CODE[35]), STR_10(CODE[13]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_MasterIsr(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_MasterIsr(), Absolute function(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 4
		 -> tasbuff(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), TAS_CHK_RAILS(BANK3[2]), 
		 -> TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), TAS_FS48K(BANK3[2]), 
		 -> TAS_FS44K(BANK3[2]), TAS_AC(BANK3[2]), TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), 
		 -> TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), 
		 -> INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), 
		 -> ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), 
		 -> DIT_DIR(BANK2[2]), ADC_ATTR_3dB(BANK3[2]), ADC_ATTL_3dB(BANK3[2]), CALC_MOUT(BANK3[2]), 
		 -> DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), AUXSRC_LVDS(BANK3[2]), AUXSRC_ADC(BANK2[2]), 
		 -> AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), i2c_lcd_send_data@lowerdata_en(BANK0[1]), i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_data@upperdata(BANK0[1]), i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), 
		 -> i2c_lcd_send_command@lowerdata(BANK0[1]), i2c_lcd_send_command@upperdata_en(BANK0[1]), i2c_lcd_send_command@upperdata(BANK0[1]), 

    S623$data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> tasbuff(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), TAS_CHK_RAILS(BANK3[2]), 
		 -> TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), TAS_FS48K(BANK3[2]), 
		 -> TAS_FS44K(BANK3[2]), TAS_AC(BANK3[2]), TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), 
		 -> TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), 
		 -> INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), 
		 -> ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), 
		 -> DIT_DIR(BANK2[2]), ADC_ATTR_3dB(BANK3[2]), ADC_ATTL_3dB(BANK3[2]), CALC_MOUT(BANK3[2]), 
		 -> DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), AUXSRC_LVDS(BANK3[2]), AUXSRC_ADC(BANK2[2]), 
		 -> AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), i2c_lcd_send_data@lowerdata_en(BANK0[1]), i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_data@upperdata(BANK0[1]), i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), 
		 -> i2c_lcd_send_command@lowerdata(BANK0[1]), i2c_lcd_send_command@upperdata_en(BANK0[1]), i2c_lcd_send_command@upperdata(BANK0[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> tasbuff(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), TAS_CHK_RAILS(BANK3[2]), 
		 -> TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), TAS_FS48K(BANK3[2]), 
		 -> TAS_FS44K(BANK3[2]), TAS_AC(BANK3[2]), TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), 
		 -> TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), 
		 -> INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), 
		 -> ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), 
		 -> DIT_DIR(BANK2[2]), ADC_ATTR_3dB(BANK3[2]), ADC_ATTL_3dB(BANK3[2]), CALC_MOUT(BANK3[2]), 
		 -> DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), AUXSRC_LVDS(BANK3[2]), AUXSRC_ADC(BANK2[2]), 
		 -> AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), 
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), i2c_lcd_send_data@lowerdata_en(BANK0[1]), i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_data@upperdata(BANK0[1]), i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), 
		 -> i2c_lcd_send_command@lowerdata(BANK0[1]), i2c_lcd_send_command@upperdata_en(BANK0[1]), i2c_lcd_send_command@upperdata(BANK0[1]), 

    S623$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S623$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E7158[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F218@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F212@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F206@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F195@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_lcd_send_data@lowerdata_en(BANK0[1]), i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), i2c_lcd_send_data@upperdata(BANK0[1]), 
		 -> i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), i2c_lcd_send_command@lowerdata(BANK0[1]), 
		 -> i2c_lcd_send_command@upperdata_en(BANK0[1]), i2c_lcd_send_command@upperdata(BANK0[1]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S124$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 2
		 -> tasbuff(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), TAS_CHK_RAILS(BANK3[2]), 
		 -> TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), TAS_FS48K(BANK3[2]), 
		 -> TAS_FS44K(BANK3[2]), TAS_AC(BANK3[2]), TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), 
		 -> TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), 
		 -> INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), 
		 -> ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), 
		 -> DIT_DIR(BANK2[2]), ADC_ATTR_3dB(BANK3[2]), ADC_ATTL_3dB(BANK3[2]), CALC_MOUT(BANK3[2]), 
		 -> DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), AUXSRC_LVDS(BANK3[2]), AUXSRC_ADC(BANK2[2]), 
		 -> AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK2[2]), SRC_I2S(BANK2[2]), SRC_LVDS(BANK2[2]), 
		 -> SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_lcd_puts@s	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK5[41]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_DefaultInterruptHandler
    _TMR1_DefaultInterruptHandler->_read_clickRE
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F218
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F218
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F218
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F218
    _wr2RegCompleteHandler@i2c1_master_example$F218->i1_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F212->i1_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F229->i1_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F206->i1_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F195->i1_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    i1_I2C1_SetDataCompleteCallback->i1_I2C1_SetCallback

Critical Paths under _main in BANK0

    _set_source->_i2c_writeNBytes
    _strcat->_strcpy
    _strcpy->___wmul
    _puts_led->___wmul
    _set_gains->_abs
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    ___wmul->___lbmod
    _i2c_lcd_set_cursor_pos->_i2c_lcd_send_command
    _i2c_lcd_puts->_i2c_lcd_send_data
    _i2c_lcd_send_data->_I2C1_WriteNBytes
    _init_tas6422->_i2c_writeNBytes
    _init_pcm9211->_i2c_writeNBytes
    _i2c_writeNBytes->_I2C1_SetAddressNackCallback
    _i2c_lcd_ulcursor_off->_i2c_lcd_send_command
    _i2c_lcd_init->_i2c_lcd_send_command
    _i2c_lcd_send_upper4bit->_I2C1_WriteNBytes
    _i2c_lcd_home->_i2c_lcd_send_command
    _i2c_lcd_clear->_i2c_lcd_send_command
    _i2c_lcd_send_command->_I2C1_WriteNBytes
    _I2C1_WriteNBytes->_I2C1_SetAddressNackCallback
    _chk6422warning->_i2c_read1ByteRegister
    _i2c_read1ByteRegister->_I2C1_SetAddressNackCallback
    _i2c_read1ByteRegister->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_Open->_I2C1_SetInterruptHandler
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _DATAEE_WriteByte->___lbmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C1_MasterIsr->_I2C1_MasterFsm

Critical Paths under _main in BANK1

    _main->_lcd_disp_param
    _set_gainstr->_sprintf
    _lcd_disp_param->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    _main->_lcd_disp_param

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  275332
                                              0 BANK2      7     7      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                 _DELAY_milliseconds
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _TMR1_StartTimer
                            ___lbmod
                             ___wmul
                     _chk6422warning
                      _i2c_lcd_clear
                       _i2c_lcd_home
                       _i2c_lcd_init
                       _i2c_lcd_puts
               _i2c_lcd_ulcursor_off
              _i2c_read1ByteRegister
                    _i2c_writeNBytes
                       _init_pcm9211
                       _init_tas6422
                     _lcd_disp_param
                           _puts_led
                          _set_gains
                        _set_gainstr
                         _set_source
                            _sprintf
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _set_source                                           4     4      0   18103
                                             16 BANK0      4     4      0
                 _DELAY_milliseconds
                            ___lbmod
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _set_gainstr                                          2     2      0   30268
                                             58 BANK1      2     2      0
                            ___awdiv
                           _puts_led
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    1744
                                             27 BANK0      4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              12     8      4     704
                                             15 BANK0     12     8      4
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _puts_led                                             5     3      2    1300
                                             15 BANK0      5     3      2
                            ___lbmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _set_gains                                            3     2      1   17154
                                             26 BANK0      3     2      1
                                _abs
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _lcd_disp_param                                      21    21      0   56508
                                             58 BANK1     12    12      0
                                              0 BANK6      9     9      0
                            ___lbmod
                             ___wmul
                       _i2c_lcd_puts
             _i2c_lcd_set_cursor_pos
              _i2c_read1ByteRegister
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    10     16   25699
                                             32 BANK1     26    10     16
                            ___lbmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   23755
                                             24 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   23255
                                             66 BANK0      8     6      2
                                              0 BANK1     24    24      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                38    29      9    6707
                                             28 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                              9 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              8     6      2     191
                                              3 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                23    21      2    2775
                                             11 BANK0     23    21      2
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    7033
                                             30 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4731
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     400
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1969
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3    1577
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     273
                                             22 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              3 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              3 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3309
                                             15 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2206
                                              9 BANK0      6     2      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_set_cursor_pos                               5     4      1    8431
                                             23 BANK0      5     4      1
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_puts                                         2     0      2    8385
                                             23 BANK0      2     0      2
                  _i2c_lcd_send_data
 ---------------------------------------------------------------------------------
 (3) _i2c_lcd_send_data                                    7     7      0    7870
                                             16 BANK0      7     7      0
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              6     5      1     592
                                              3 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _init_tas6422                                         1     1      0   17480
                                             16 BANK0      1     1      0
                 _DELAY_milliseconds
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2    1086
                                              3 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_pcm9211                                         1     1      0   16394
                                             16 BANK0      1     1      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _i2c_writeNBytes                                      4     1      3   16394
                                             12 BANK0      4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_ulcursor_off                                 1     1      0    7870
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_init                                         1     1      0   15592
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
             _i2c_lcd_send_upper4bit
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_send_upper4bit                               4     4      0    7722
                                             16 BANK0      4     4      0
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_home                                         1     1      0    7870
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_clear                                        1     1      0    7870
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _i2c_lcd_send_command                                 7     7      0    7870
                                             16 BANK0      7     7      0
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteNBytes                                     4     1      3    7574
                                             12 BANK0      4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _chk6422warning                                      18    18      0   10889
                                             19 BANK0     18    18      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _i2c_read1ByteRegister                                7     6      1   10889
                                             12 BANK0      7     6      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetDataCompleteCallback                         4     1      3    3599
                                              8 BANK0      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetBuffer                                       4     0      4    2528
                                              3 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetAddressNackCallback                          4     1      3    2859
                                              8 BANK0      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetCallback                                     5     2      3     997
                                              3 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C1_Open                                            3     3      0     189
                                              5 BANK0      3     3      0
                _I2C1_MasterClearIrq
               _I2C1_MasterEnableIrq
                    _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetInterruptHandler                             2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterEnableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     0     0      0      68
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOperation                                 3     3      0      68
                                              3 BANK0      3     3      0
                   _I2C1_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Close                                           2     2      0      37
                                              3 BANK0      2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    1458
                                              9 BANK0      4     1      3
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     425
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0   51880
                   Absolute function *
                     _I2C1_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     438
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        2     2      0     209
                                              5 COMMON     2     2      0
                       _get7seg_font
                       _read_clickRE
 ---------------------------------------------------------------------------------
 (13) _read_clickRE                                        5     5      0     140
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) _get7seg_font                                        3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterIsr                                      0     0      0   51442
                     _I2C1_MasterFsm
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterFsm                                      3     3      0   51442
                                              0 BANK0      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                  _I2C1_MasterIsNack
              i1_I2C1_MasterClearIrq
 ---------------------------------------------------------------------------------
 (13) i1_I2C1_MasterClearIrq                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_TX_EMPTY                                    3     3      0   12844
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_TX                                          3     3      0   12866
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (13) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_ADR_READ                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSendTxData                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX                                          3     3      0   12844
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_ADDRESS_NACK                                3     3      0   12844
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (14) _wr2RegCompleteHandler@i2c1_master_example$F218      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr2RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr1RegCompleteHandler@i2c1_master_example$F212      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr1RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rdBlkRegCompleteHandler@i2c1_master_example$F229    1     0      1    1284
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rdBlkRegCompleteHandler                             1     0      1    1284
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd2RegCompleteHandler@i2c1_master_example$F206      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd2RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd1RegCompleteHandler@i2c1_master_example$F195      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd1RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (15) i1_I2C1_SetDataCompleteCallback                      4     1      3     770
                                              5 COMMON     4     1      3
                 i1_I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (16) i1_I2C1_SetCallback                                  5     2      3     206
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (15) i1_I2C1_SetBuffer                                    4     0      4     452
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (15) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (15) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_CallbackReturnStop                             1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (14) _I2C1_CallbackReturnReset                            1     0      1     252
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
     ___lbmod (ARG)
   _DELAY_milliseconds
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_Initialize
     _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   ___lbmod
   ___wmul
     ___lbmod (ARG)
   _chk6422warning
     _i2c_read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
   _i2c_lcd_clear
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_home
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_init
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
     _i2c_lcd_send_upper4bit
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_puts
     _i2c_lcd_send_data
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_ulcursor_off
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_read1ByteRegister
     _I2C1_Close
       _I2C1_MasterClearIrq
       _I2C1_MasterClose
       _I2C1_MasterDisableIrq
     _I2C1_MasterWrite
       _I2C1_MasterOperation
         _I2C1_MasterStart
     _I2C1_Open
       _I2C1_MasterClearIrq
       _I2C1_MasterEnableIrq
       _I2C1_MasterOpen
       _I2C1_SetInterruptHandler
     _I2C1_SetAddressNackCallback
       _I2C1_SetCallback
     _I2C1_SetBuffer
     _I2C1_SetDataCompleteCallback
       _I2C1_SetCallback
   _i2c_writeNBytes
     _I2C1_Close
       _I2C1_MasterClearIrq
       _I2C1_MasterClose
       _I2C1_MasterDisableIrq
     _I2C1_MasterWrite
       _I2C1_MasterOperation
         _I2C1_MasterStart
     _I2C1_Open
       _I2C1_MasterClearIrq
       _I2C1_MasterEnableIrq
       _I2C1_MasterOpen
       _I2C1_SetInterruptHandler
     _I2C1_SetAddressNackCallback
       _I2C1_SetCallback
     _I2C1_SetBuffer
   _init_pcm9211
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _init_tas6422
     _DELAY_milliseconds
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _lcd_disp_param
     ___lbmod
     ___wmul
       ___lbmod (ARG)
     _i2c_lcd_puts
       _i2c_lcd_send_data
         _I2C1_WriteNBytes
           _I2C1_Close
             _I2C1_MasterClearIrq
             _I2C1_MasterClose
             _I2C1_MasterDisableIrq
           _I2C1_MasterWrite
             _I2C1_MasterOperation
               _I2C1_MasterStart
           _I2C1_Open
             _I2C1_MasterClearIrq
             _I2C1_MasterEnableIrq
             _I2C1_MasterOpen
             _I2C1_SetInterruptHandler
           _I2C1_SetAddressNackCallback
             _I2C1_SetCallback
           _I2C1_SetBuffer
     _i2c_lcd_set_cursor_pos
       _i2c_lcd_send_command
         _I2C1_WriteNBytes
           _I2C1_Close
             _I2C1_MasterClearIrq
             _I2C1_MasterClose
             _I2C1_MasterDisableIrq
           _I2C1_MasterWrite
             _I2C1_MasterOperation
               _I2C1_MasterStart
           _I2C1_Open
             _I2C1_MasterClearIrq
             _I2C1_MasterEnableIrq
             _I2C1_MasterOpen
             _I2C1_SetInterruptHandler
           _I2C1_SetAddressNackCallback
             _I2C1_SetCallback
           _I2C1_SetBuffer
     _i2c_read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
     _sprintf
       ___lbmod (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lbmod (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _stoa
             _fputc
               _putch
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _puts_led
     ___lbmod (ARG)
     ___wmul (ARG)
       ___lbmod (ARG)
   _set_gains
     _abs
       ___aomod (ARG)
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _set_gainstr
     ___awdiv
     _puts_led
       ___lbmod (ARG)
       ___wmul (ARG)
         ___lbmod (ARG)
     _sprintf
       ___lbmod (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lbmod (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _stoa
             _fputc
               _putch
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         ___wmul (ARG)
           ___lbmod (ARG)
         _strlen (ARG)
       _strlen
     _strcpy
       ___wmul (ARG)
         ___lbmod (ARG)
       _strlen (ARG)
   _set_source
     _DELAY_milliseconds
     ___lbmod
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _sprintf
     ___lbmod (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
             ___lbmod (ARG)
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
         _stoa
           _fputc
             _putch
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower
   _strcpy
     ___wmul (ARG)
       ___lbmod (ARG)
     _strlen (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C1_MasterIsr *
     _I2C1_MasterFsm
       _I2C1_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_DO_IDLE *
       _I2C1_DO_RCEN *
         _I2C1_MasterStartRx
       _I2C1_DO_RESET *
       _I2C1_DO_RX *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_RX_NACK_RESTART *
           _I2C1_MasterSendNack
         _I2C1_DO_RX_NACK_STOP *
           _I2C1_MasterSendNack
         _I2C1_MasterGetRxData *
         _I2C1_MasterSendAck *
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_DO_RX_ACK *
         _I2C1_MasterSendAck
       _I2C1_DO_RX_NACK_RESTART *
         _I2C1_MasterSendNack
       _I2C1_DO_RX_NACK_STOP *
         _I2C1_MasterSendNack
       _I2C1_DO_SEND_ADR_READ *
         _I2C1_MasterSendTxData
       _I2C1_DO_SEND_ADR_WRITE *
         _I2C1_MasterSendTxData
       _I2C1_DO_SEND_RESTART *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_RESTART_READ *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_RESTART_WRITE *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_STOP *
         _I2C1_MasterStop
       _I2C1_DO_TX *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART_READ *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_RESTART_WRITE *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _I2C1_MasterIsNack *
         _I2C1_MasterSendTxData *
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _I2C1_MasterSetIrq *
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_MasterIsNack *
       i1_I2C1_MasterClearIrq *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
       _get7seg_font
       _read_clickRE
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     46      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      7      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4D      13       96.2%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1E2      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0      49      16       91.2%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      9       9      18       11.2%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1E2      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Oct 11 00:06:55 2020

                          __size_of_i2c_lcd_send_upper4bit 0028  
                                             ___awdiv@sign 0029  
                                      ___wmul@multiplicand 002B  
                                                      l850 1AEC  
                                                      l956 1E52  
                                            _i2c_lcd_clear 1B1F  
                               __end_of_DELAY_milliseconds 1BAC  
                                    ?_I2C1_MasterOperation 0070  
                                          _timer1ReloadVal 0130  
                                                      _abs 1CD7  
                                                      _pad 125C  
                                  __size_of_PMD_Initialize 0008  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                        __size_of_I2C1_MasterEnableRestart 0003  
                                     _I2C1_DO_RX_NACK_STOP 1A82  
                                ?_I2C1_MasterEnableRestart 0070  
                                     I2C1_SetBuffer@buffer 0023  
                                   ?i1_I2C1_MasterClearIrq 0070  
                            __size_of_i2c_lcd_send_command 0056  
                                                     ?_abs 0036  
                                                     l2100 166D  
                                  ??_rd2RegCompleteHandler 007A  
                                                     l2007 09D5  
                                                     l2015 0D24  
                                                     l1055 173C  
                                                     l2040 0E3F  
                                                     l2019 0D40  
                                                     l2051 04C6  
                                                     l2052 04C8  
                                                     l2053 04CA  
                                                     l2054 04CC  
                                                     l2056 04FE  
                                                     l2049 04BC  
                                                     l1451 1D90  
                                                     l1551 0BBE  
                                                     l1564 0AC8  
                                                     l1669 1E15  
                                                     l1961 1290  
                                                     l1971 0C3A  
                                                     l7020 1EE2  
                                                     l7012 1EC5  
                                                     l1972 0C4C  
                                                     l1958 1270  
                                                     l1966 0C16  
                                                     ?_pad 0033  
                                                     l1975 0CDF  
                                                     l1967 0C1E  
                                                     l5610 1B98  
                                                     l7202 06C4  
                                                     l6500 123D  
                                                     l7140 0534  
                                                     l7108 04BD  
                                                     l7124 04D3  
                                                     l1998 097C  
                                                     l7142 0546  
                                                     l7150 0579  
                                                     l7118 04CE  
                                                     l5390 1EA8  
                                                     l7400 1090  
                                                     l6520 1CAC  
                                                     l7144 054F  
                                                     l7128 0505  
                                                     l5720 12FF  
                                                     l7402 1092  
                                                     l7410 10B4  
                                                     l6610 0B32  
                                                     l6514 1F11  
                                                     l6522 1CB8  
                                                     l7162 05E4  
                                                     l7154 0598  
                                                     l7404 1095  
                                                     l6620 0B49  
                                                     l6604 0B05  
                                                     l7172 0618  
                                                     l7430 1F07  
                                                     l7422 1EEA  
                                                     l7406 1098  
                                                     l6630 0B91  
                                                     l6622 0B58  
                                                     l5726 130A  
                                                     l7408 109E  
                                                     l6632 0B9D  
                                                     l6608 0B2D  
                                                     l6800 0C32  
                                                     l7192 06B3  
                                                     l7176 0636  
                                                     l5752 1341  
                                                     l5744 1330  
                                                     l5736 1312  
                                                     l5672 0827  
                                                     l6570 1D6A  
                                                     l6642 0A27  
                                                     l6810 0C78  
                                                     l7186 0690  
                                                     l8170 04EC  
                                                     l5738 131E  
                                                     l5674 082C  
                                                     l8172 1647  
                                                     l6660 0A9B  
                                                     l6820 0C53  
                                                     l7196 06B9  
                                                     l5748 1339  
                                                     l5684 0850  
                                                     l6566 1D63  
                                                     l7446 1168  
                                                     l7438 1140  
                                                     l7606 15F8  
                                                     l8174 10A6  
                                                     l6718 1DD5  
                                                     l6654 0A5C  
                                                     l6662 0AA7  
                                                     l6646 0A4F  
                                                     l6670 1267  
                                                     l6806 0C48  
                                                     l6902 0D38  
                                                     l7374 1065  
                                                     l5694 0875  
                                                     l5686 0856  
                                                     l8166 0459  
                                                     l6568 1D68  
                                                     l6760 11C3  
                                                     l7456 117C  
                                                     l6656 0A6B  
                                                     l6496 1219  
                                                     l6680 1272  
                                                     l6832 0CF2  
                                                     l6912 0D65  
                                                     l7376 1085  
                                                     l7624 153F  
                                                     l7560 1704  
                                                     l7544 16B8  
                                                     l8168 07CC  
                                                     l7640 071D  
                                                     l6578 1F73  
                                                     l7490 1E02  
                                                     l6586 1D8A  
                                                     l6674 126E  
                                                     l6842 0D09  
                                                     l7554 16EF  
                                                     l7642 074E  
                                                     l7650 07BD  
                                                     l7802 01CB  
                                                     l7396 1C7D  
                                                     l6684 129B  
                                                     l6828 0CEB  
                                                     l6932 0DCC  
                                                     l6916 0D7F  
                                                     l6940 0E0E  
                                                     l6908 0D4E  
                                                     l7644 0773  
                                                     l7652 07DD  
                                                     l7804 020F  
                                                     l7574 1793  
                                                     l6838 0CFC  
                                                     l6854 0956  
                                                     l7558 16FB  
                                                     l7646 0798  
                                                     l7638 06EC  
                                                     l7910 03F6  
                                                     l6784 1DBD  
                                                     l6872 099D  
                                                     l7824 0266  
                                                     l7736 00CB  
                                                     l6890 09EA  
                                                     l6882 09AC  
                                                     l6874 09A9  
                                                     l7922 041C  
                                                     l7930 0446  
                                                     l7738 00FE  
                                                     l6980 163B  
                                                     l6972 1626  
                                                     l6964 160A  
                                                     l6892 09F6  
                                                     l6868 098C  
                                                     l6956 0E5C  
                                                     l7924 042A  
                                                     l7932 0464  
                                                     l7844 02AB  
                                                     l7780 018D  
                                                     l6982 164F  
                                                     l6886 09D9  
                                                     l7926 0438  
                                                     l7846 02D0  
                                                     l6986 1671  
                                                     l6978 1636  
                                                     l7882 0344  
                                                     l6996 16A0  
                                                     l7884 0386  
                                                     l7894 03A0  
                                                     STR_1 2110  
                                                     STR_2 211C  
                                                     STR_3 2104  
                                                     STR_4 2108  
                                                     STR_5 2120  
                                                     STR_6 2128  
                                                     STR_7 2095  
                                                     STR_8 2124  
                                                     STR_9 210C  
                                            ?_i2c_lcd_home 0070  
                                            ?_i2c_lcd_init 0070  
                                                     _LATA 010C  
                                                     _LATB 010D  
                                                     _LATC 010E  
                                                     u5000 0D96  
                                                     u4210 1D17  
                                                     u5010 0D97  
                                                     u4220 1D18  
                                                     u5030 0DB6  
                                                     u5040 0DB7  
                                                     u4305 1D96  
                                                     u5105 0E3A  
                                                     u5160 1685  
                                                     u4360 0B3A  
                                                     u4600 1DF4  
                                                     u4185 123B  
                                                     u5065 0DF2  
                                                     u5170 1686  
                                                     u4610 1E6B  
                                                     u4275 1CE0  
                                                     u5075 0E18  
                                                     u4620 1E6C  
                                                     _PMD0 0911  
                                                     _PMD1 0912  
                                                     u4710 0BEC  
                                                     _PMD2 0913  
                                                     u4295 1D91  
                                                     u5095 0E2E  
                                                     u3815 131F  
                                                     _PMD3 0914  
                                                     u4640 1CCF  
                                                     u4720 0BED  
                                                     u5280 056B  
                                                     _PMD4 0915  
                                                     u3825 1329  
                                                     _PMD5 0916  
                                                     u4650 1CD0  
                                                     u4570 1CFF  
                                                     u5290 056C  
                                                     u4395 0B7E  
                                                     u4555 127C  
                                                     u3835 1331  
                                                     u4580 1D00  
                                                     u5525 1E05  
                                                     u4590 1DF3  
                                 ??_i2c_lcd_set_cursor_pos 0038  
                                                     u5375 13FD  
                                                     u4495 0A89  
                                                     u4815 0C67  
                                                     u5385 13A7  
                                                     u4825 0C73  
                                                     u4905 0975  
                                                     u3795 1315  
                                                     u4765 0C2A  
                                                     u4925 09A7  
                                                     u4870 0946  
                                                     u5807 1BA6  
                                                     u4935 09B6  
                                                     u5817 1B5D  
                                                     u5907 1494  
                                                     u5827 1447  
                                                     u4795 0CE9  
                                                     u4955 09F4  
                                                     u5917 1B34  
                                                     u5837 1454  
                                                     u5927 1B27  
                                                     u5847 145D  
                                                     u4975 0D30  
                                                     u5857 1465  
                                                     u5867 146D  
                                                     u4995 0D79  
                                                     u5877 1475  
                                                     u5797 10BD  
                                                     u5887 147D  
                                                     u5897 1488  
                                                     _PLLR 48E0  
                                            ?_i2c_lcd_puts 0037  
                                                     _WPUA 020C  
                                                     _WPUB 020D  
                                                     _WPUC 020E  
                                  ??_wr2RegCompleteHandler 007A  
                                         ??_I2C1_MasterFsm 0020  
                                         ??_I2C1_MasterIsr 007D  
                         __size_of_I2C1_DO_RX_NACK_RESTART 0004  
                                ??_I2C1_CallbackReturnStop 007A  
                                                     abs@a 0036  
                                                     _dbuf 02C9  
                                                     _gain 013E  
                       TMR1_DefaultInterruptHandler@intcnt 0140  
                                                     _atoi 1606  
                                                     _main 006F  
                                                     _dtoa 0BD0  
                                                     _prec 012A  
                                                     _nout 0126  
                                                     pad@i 0037  
                                                     pad@p 0034  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     pad@w 0039  
                                                     _stoa 093A  
                                                     btemp 007E  
                                                     _xtoa 0D1A  
                                 __size_of_i2c_writeNBytes 0025  
                                                     start 0025  
                                         ??_I2C1_SetBuffer 0027  
                               ??_TMR1_SetInterruptHandler 0025  
                                             _ADC_ATTL_0dB 025F  
                                             _ADC_ATTL_3dB 01C7  
                                     __end_of_get7seg_font 1CA8  
                                             _ADC_ATTL_6dB 025B  
                                             _ADC_ATTR_0dB 025D  
                                             _ADC_ATTR_3dB 01C5  
                                             _ADC_ATTR_6dB 0259  
                         __size_of_rdBlkRegCompleteHandler 001A  
                            I2C1_CallbackReturnStop@funPtr 0079  
                                                    ??_abs 0038  
                                                    ??_pad 0036  
                                __size_of_DATAEE_WriteByte 0021  
                           __size_of_OSCILLATOR_Initialize 000A  
                            __end_of_OSCILLATOR_Initialize 1AEF  
                                          __end_of___aodiv 0BD0  
                                        __end_of_I2C1_Open 11C6  
                                                    ?_atoi 002F  
                                                    ?_main 0070  
                                                    ?_dtoa 003E  
                                         ??_chk6422warning 0033  
                                          __end_of___aomod 0ADA  
                                           ?_i2c_lcd_clear 0070  
                                          __end_of___awdiv 1346  
                                                    STR_10 20E8  
                                                    STR_11 2114  
                                                    STR_12 20E8  
                                                    STR_20 18DD  
                                                    STR_13 20FF  
                                                    STR_14 20FF  
                                                    STR_15 2118  
                                                    STR_16 20E8  
                                                    STR_17 20F5  
                                                    STR_18 20DA  
                                                    STR_19 20A9  
                                          __end_of___lbmod 1E1B  
                                          _TMR1_StartTimer 0002  
                                                    ?_stoa 002B  
                                          ___awdiv@divisor 0023  
                                                    ?_xtoa 003C  
                                                    _T1CON 001B  
                                                    i1l402 08A6  
                                                    i1l350 11F3  
                                                    i1l351 11F9  
                                                    i1l409 08F4  
                                                    i1l603 137A  
                                                    i1l383 0884  
                                                    i1l393 0894  
                                                    i1l377 087D  
                                                    i1l619 1110  
                                                    i1l387 088D  
                                                    i1l396 089F  
                                                    i1l804 0023  
                                                    i1l797 0012  
                                          ___awdiv@counter 0028  
                                                    _OSCEN 091D  
                                             vfpfcnvrt@fmt 0062  
                                   ??_I2C1_MasterEnableIrq 0023  
                                             vfpfcnvrt@llu 00A8  
                                                    _TMR1H 001A  
                                                    _TMR1L 0019  
                                                    _PORTC 000E  
                                                    _TRISA 008C  
                                                    _TRISB 008D  
                                                    _TRISC 008E  
                                   ??_I2C1_MasterGetRxData 0070  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 007A  
                                        ??_I2C1_MasterOpen 0023  
                                        ??_I2C1_MasterStop 0070  
                                        ??_I2C1_Initialize 0023  
                                         __end_of_TMR1_ISR 1B98  
                                          _DATAEE_ReadByte 1B39  
                                                    _flags 006A  
                                           _WDT_Initialize 1A8A  
                                                    _fputc 1210  
                                          __end_of_isalpha 1DFB  
                                                    _fputs 1F0E  
                                          __end_of_isdigit 1CD7  
                                   _i2c_lcd_send_upper4bit 1F83  
                                           ??_i2c_lcd_home 0037  
                                           ??_i2c_lcd_init 0037  
                               i2c_lcd_send_upper4bit@data 0031  
                                                    atoi@n 003C  
                                                    pad@fp 003B  
                                                    atoi@s 002F  
                                           ??_i2c_lcd_puts 0039  
                                                    _width 0128  
                                                    _putch 1A41  
                                    _i2c_read1ByteRegister 1137  
                                                    dtoa@d 003E  
                                                    dtoa@i 005A  
                                                    dtoa@n 0052  
                                                    dtoa@p 004C  
                                                    dtoa@s 0050  
                                                    dtoa@w 004E  
                                          __end_of_islower 1D1F  
                                          __end_of_isspace 1DDD  
        wr1RegCompleteHandler@i2c1_master_example$F212@ptr 0079  
        rd2RegCompleteHandler@i2c1_master_example$F206@ptr 0079  
                                  __end_of_TMR1_Initialize 1D88  
        wr2RegCompleteHandler@i2c1_master_example$F218@ptr 0079  
                                          __end_of_isupper 1D07  
                                                    pclath 000A  
      rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr 0079  
        rd1RegCompleteHandler@i2c1_master_example$F195@ptr 0079  
                                           _TAS_CLEAR_FALT 014A  
                                                    stoa@i 0037  
                                                    stoa@l 0040  
                                                    stoa@p 003E  
                                                    stoa@s 002B  
                                                    stoa@w 0039  
                                                    status 0003  
                              __size_of_I2C1_MasterSendAck 0004  
                                                    wtemp0 007E  
                                          __end_of_sprintf 1EA0  
                                             ??_I2C1_DO_RX 007A  
                                                    xtoa@c 0060  
                                             ??_I2C1_DO_TX 007A  
                                                    xtoa@d 003C  
                                                    xtoa@i 005E  
                                                    xtoa@n 0056  
                                                    xtoa@p 0052  
                                                    xtoa@w 0054  
                                                    xtoa@x 0044  
                                     i1I2C1_SetCallback@cb 0070  
                                          __end_of_toupper 1E7D  
                                          _TMR1_WriteTimer 1B63  
                                   ??_I2C1_DO_ADDRESS_NACK 007A  
                                             ??_I2C1_Close 0023  
                              __size_of_I2C1_MasterStartRx 0003  
                                             _toupper$2331 002F  
                                            _fsmStateTable 2075  
                                          __initialization 0027  
                                             __end_of_atoi 16A5  
                                             __end_of_main 0494  
                                             __end_of_dtoa 0D1A  
                                    i2c_lcd_send_data@data 0032  
                                             __end_of_stoa 09FC  
                                             __end_of_xtoa 0E6D  
                              ?_INTERRUPT_InterruptManager 0070  
                                                   ??_atoi 0031  
                                   ??_I2C1_MasterOperation 0023  
                                                   ??_main 0168  
                                                   ??_dtoa 0046  
                                                   ??_stoa 002D  
                                                   ??_xtoa 0045  
                            __size_of_I2C1_DO_SEND_RESTART 0004  
                                       __end_of_I2C1_DO_RX 1137  
                                       __end_of_I2C1_DO_TX 1398  
                                   __end_of_WDT_Initialize 1A8E  
                                       _ADC_I2S_MASTER_256 0257  
                                       __end_of_I2C1_Close 1DC0  
                                 __end_of_I2C1_WriteNBytes 1EE9  
                                                   _ADC_AC 0255  
                                                   _ADC_DC 01BF  
                                                   ?_fputc 0023  
                                                   ?_fputs 002B  
                                         ___awdiv@dividend 0025  
                                                   _I2S_IN 0164  
                                            ?_init_pcm9211 0070  
                                                   _ANSELA 018C  
                                                   ?_putch 0070  
                                                   _ANSELB 018D  
                                                   _ANSELC 018E  
                                                   _T1GCON 001C  
                                                   _RB4PPS 0E9C  
                                  TMR1_WriteTimer@timerVal 0070  
                                                   _RB6PPS 0E9E  
                                                   _ODCONA 028C  
                                                   _ODCONB 028D  
                                                   _ODCONC 028E  
                                                   i1l5220 11FF  
                                                   i1l5212 11E4  
                                                   i1l5230 120E  
                                                   i1l5222 1201  
                                                   i1l5510 1B6D  
                                                   i1l5520 0895  
                                                   i1l5530 08C7  
                                                   i1l4580 1F4B  
                                                   i1l5196 1CA2  
                                                   i1l5540 08E3  
                                                   i1l5524 08A7  
                                                   i1l5516 0885  
                                                   i1l5542 08E8  
                                                   i1l5526 08B0  
                                                   i1l7312 1115  
                                                   i1l5560 0907  
                                                   i1l5552 08FD  
                                                   i1l5528 08B3  
                                                   i1l7330 1008  
                                                   i1l5554 08FE  
                     __size_of_I2C1_SetAddressNackCallback 000C  
                                                   i1l7308 1112  
                                                   i1l5564 090F  
                                                   i1l7326 1005  
                                                   i1l7342 100F  
                                                   i1l7318 1118  
                                                   i1l5574 091D  
                                                   i1l5566 0910  
                                                   i1l5558 0906  
                                                   i1l7336 100C  
                                                   i1l7272 1353  
                                                   i1l7264 134D  
                                                   i1l7352 1FDC  
                                                   i1l5576 0920  
                                                   i1l7362 1FE2  
                                                   i1l7268 1350  
                                                   i1l8180 1128  
                                                   i1l7356 1FDF  
                                                   i1l7286 1396  
                                                   i1l8182 136C  
                                                   i1l7278 1356  
                                                   i1l7710 001D  
                                                   i1l8184 101F  
                                                   i1l8176 08BC  
                                            ?_init_tas6422 0070  
                                                   i1l8178 1FF7  
                                                   i1l7468 1FBD  
                                                   _INLVLA 038C  
                                                   _INLVLB 038D  
                                                   _INLVLC 038E  
                          __size_of_i2c_lcd_set_cursor_pos 0033  
                                                   _OSCFRQ 091F  
                                            vfpfcnvrt@done 00B3  
                                                   _TAS_AC 01AB  
                                                   _TAS_DC 024F  
                                                   u433lld 0B02  
                                                   _WDTCON 0097  
                                                   u444lld 0A24  
                                        ?_I2C1_MasterClose 0070  
                                 rdBlkRegCompleteHandler@p 0079  
                                                   _RE_pos 00E9  
                                         ??_lcd_disp_param 00DA  
                                  ??_I2C1_MasterDisableIrq 0023  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                             ?_set_gainstr 0070  
                                            ?_read_clickRE 0070  
                                       ??_I2C1_MasterClose 0023  
                                         _I2C1_DO_TX_EMPTY 1002  
                                       ??_I2C1_MasterStart 0023  
                                       ??_I2C1_MasterWrite 0026  
                     __end_of_TMR1_DefaultInterruptHandler 093A  
                    __size_of_TMR1_DefaultInterruptHandler 00BE  
                             _TMR1_DefaultInterruptHandler 087C  
                                             vfprintf@cfmt 00BE  
                                  __end_of_TMR1_StartTimer 0004  
                                                ??___aodiv 0033  
                                         __end_of_font7seg 18CF  
                                                ??___aomod 0033  
                                                   ___wmul 1D88  
                                                ??___awdiv 0027  
                                                ??___lbmod 0024  
                                        ??_i2c_writeNBytes 002F  
                                          readRE@RE_states 20BC  
                                                   _ledstr 0220  
                             __size_of_I2C1_MasterClearIrq 0003  
                                          ??_i2c_lcd_clear 0037  
                                 __end_ofi1_I2C1_SetBuffer 1AFB  
                                         ___awdiv@quotient 002A  
                                     chk6422warning@otwarn 0138  
                            i2c_lcd_send_command@lowerdata 0036  
                                     chk6422warning@otshut 0139  
                                                   pad@buf 0033  
                                                   _strcat 1BAC  
                                                   dtoa@fp 0049  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0071  
                                  __end_of_DATAEE_ReadByte 1B47  
                                                   _strcpy 1EA0  
                                                   _strlen 1CA8  
                                        ?_I2C1_SetCallback 0023  
                                     __end_of_lcd_aux_name 20DA  
                                   ??_I2C1_DO_RX_NACK_STOP 0070  
                         __end_of_I2C1_SetInterruptHandler 1ADC  
                                      lcd_disp_param@pfspo 0320  
                                      lcd_disp_param@prail 0326  
                                    _I2C1_DO_SEND_ADR_READ 1ABC  
                                                   fputc@c 0023  
                                           _PMD_Initialize 1AC4  
                                                   fputs@c 002F  
                                                   fputs@i 0030  
                                                   fputs@s 0032  
                                                ??_isalpha 0025  
                                                ??_isdigit 0025  
                            ?_I2C1_SetDataCompleteCallback 0028  
                         ??i1_I2C1_SetDataCompleteCallback 0078  
                          ?i1_I2C1_SetDataCompleteCallback 0075  
                                       ??_I2C1_SetCallback 0026  
                                                ??_islower 0025  
                                                ??_isspace 0025  
                                          ?_WDT_Initialize 0070  
                                                ??_isupper 0025  
                                                   stoa@cp 003C  
                                                   stoa@fp 003B  
                                                   putch@c 0070  
                                         __end_of_vfprintf 108E  
                                   ?_i2c_read1ByteRegister 002C  
                                          _current_balance 00E7  
                                           ??_init_pcm9211 0030  
                 I2C1_SetInterruptHandler@InterruptHandler 0023  
                 TMR1_SetInterruptHandler@InterruptHandler 0023  
                                                ??_sprintf 00D0  
                             __size_of_I2C1_MasterSendNack 0004  
                                         __end_of_puts_led 087C  
                                  __end_of_TMR1_WriteTimer 1B72  
                                                   xtoa@fp 004D  
                                                ??_toupper 002B  
                                           ??_init_tas6422 0030  
                                  _I2C1_DO_RX_NACK_RESTART 1A86  
                                    i1I2C1_SetCallback@idx 0074  
                                    i1I2C1_SetCallback@ptr 0072  
                                      I2C1_WriteNBytes@len 002D  
                                     __end_of_lcd_src_name 2052  
                                         ?_TMR1_Initialize 0070  
                                        _SYSTEM_Initialize 1B72  
                           I2C1_SetDataCompleteCallback@cb 0028  
                                          ___lbmod@divisor 0023  
                            i2c_lcd_send_command@upperdata 0035  
                                  __end_of__initialization 006B  
                                          ___lbmod@counter 0027  
                                    __size_of_get7seg_font 0016  
                          I2C1_MasterOperation@returnValue 0025  
                                       ?_SYSTEM_Initialize 0070  
                                           ??_read_clickRE 0070  
                            __size_of_i2c_lcd_ulcursor_off 000E  
                                  _rdBlkRegCompleteHandler 1D1F  
                                           puts_led@cpoint 0032  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK2 1E1B  
                                             __pidataBANK3 102E  
                                             __pidataBANK4 12A8  
                                      ??_SYSTEM_Initialize 0025  
                         __end_of_I2C1_MasterEnableRestart 1A45  
                                                ?_TMR1_ISR 0070  
                            ?_TMR1_DefaultInterruptHandler 0070  
                                         _DATAEE_WriteByte 1E3B  
                                             readRE@RE_old 0143  
                                            __end_of_fputc 125C  
                                            __end_of_fputs 1F33  
                                     __end_of_i2c_lcd_home 1B39  
                                     __end_of_i2c_lcd_init 1499  
                                   _i2c_lcd_set_cursor_pos 108E  
                                     __end_of_i2c_lcd_puts 1C92  
                                            __end_of_putch 1A42  
                                     __end_of_led_src_name 2075  
                                   __end_of_PMD_Initialize 1ACC  
                              __size_ofi1_I2C1_SetCallback 0028  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0070  
                                  ??_I2C1_MasterSendTxData 0070  
                            i2c_lcd_send_data@lowerdata_en 0034  
                                  ??i1_I2C1_MasterClearIrq 0070  
                                    __end_of_I2C1_DO_RESET 1A9D  
                                             _get7seg_font 1C92  
                                       chk6422warning@clip 0137  
                                       chk6422warning@ocdc 013A  
                                       chk6422warning@ilim 0136  
                                i2c_lcd_set_cursor_pos@col 003B  
                          i2c_lcd_send_upper4bit@upperdata 0033  
                                i2c_lcd_set_cursor_pos@pos 003A  
                                                  ??_fputc 0026  
                                __end_of_SYSTEM_Initialize 1B84  
                                                  ??_fputs 002C  
                                                  ??_putch 0023  
                                               __pbssBANK0 006A  
                                               __pbssBANK1 00E6  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01CF  
                                               __pbssBANK5 02A0  
                           __size_of_rd2RegCompleteHandler 0015  
                            __end_of_rd2RegCompleteHandler 1C14  
                                       _DELAY_milliseconds 1B98  
                                         _TAS_DCDIAG_ABORT 0251  
                                     I2C1_Open@returnValue 0027  
                                         _TAS_DCDIAG_CLEAR 01AD  
                           __size_of_wr2RegCompleteHandler 0015  
                            __end_of_wr2RegCompleteHandler 1C29  
                                    _rd1RegCompleteHandler 1BEA  
                                            i2c_lcd_puts@s 0037  
                                  __end_ofreadRE@RE_states 20CC  
                                        _I2C1_DO_SEND_STOP 1A7A  
                                    _wr1RegCompleteHandler 1BD5  
                      __size_of_I2C1_DO_SEND_RESTART_WRITE 0004  
                                      ?_DELAY_milliseconds 0023  
                                               __pmaintext 006F  
                             __end_of_i2c_lcd_send_command 1443  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                                  ?___wmul 0029  
                                         ?_TMR1_StartTimer 0070  
                                               ??_TMR1_ISR 0077  
                                          _I2C1_MasterOpen 1B47  
                                               __pintentry 0004  
                                               _blink_rate 0123  
                                          _I2C1_MasterStop 1A45  
                                          _I2C1_Initialize 1ADC  
                                                  _ADC_48K 0253  
                                                  _ADC_96K 01BD  
                                  __size_of_I2C1_DO_RX_ACK 0004  
                                                  _I2S_OUT 0166  
                                       __size_of_set_gains 006E  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strcat 003B  
                                      ??_I2C1_DO_SEND_STOP 0070  
                                                  ?_strcpy 002F  
                                                  ?_strlen 0023  
                                                  _DIT_ADC 0150  
                                         ?_DATAEE_ReadByte 0023  
                                                  _DIT_I2S 01C1  
                                                  _DIT_DIR 0152  
                                                  _DIR_OPT 0154  
                          __size_of_I2C1_DO_SEND_ADR_WRITE 0007  
                                  ?_i2c_lcd_send_upper4bit 0070  
                                        _I2C1_MasterIsNack 1A9D  
                                     ??_DELAY_milliseconds 0025  
                                                  _OSCCON1 0919  
                                                  _OSCCON3 091B  
                                                _I2C1_Open 117E  
                                       __size_of_vfpfcnvrt 0255  
                                ??_I2C1_DO_RX_NACK_RESTART 0070  
                                                  _NVMADRH 0892  
                                                  _NVMADRL 0891  
                                                  _TAS_FC4 024D  
                                                  _TAS_FC7 024B  
                                                  _OSCTUNE 091E  
                                                  _NVMDATL 0893  
                                                  _NVMCON2 0896  
                                        _I2C1_MasterSetIrq 1A4E  
                       __size_of_I2C1_DO_SEND_RESTART_READ 0004  
                                                  _SSP1ADD 0212  
                                                  _TAS_RUN 01ED  
                                                  _SLRCONA 030C  
                                                  _SLRCONB 030D  
                                                  _SLRCONC 030E  
                                                  _TAS_HiZ 0239  
                                                  _SSP1BUF 0211  
                                 _I2C1_SetInterruptHandler 1AD4  
                                       ?_I2C1_MasterIsNack 0070  
                                                  _SRC_ADC 0160  
                                                  _SRC_I2S 015C  
                                                  _SRC_DIR 0162  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                          readRE@direction 0144  
                           ??_I2C1_SetDataCompleteCallback 002B  
                                         ?_TMR1_WriteTimer 0070  
                                       ?_I2C1_MasterSetIrq 0070  
                                 i2c_lcd_send_command@data 0032  
                                     DATAEE_WriteByte@bAdd 0029  
                                                _CALC_MPIB 0265  
                                                _CALC_MPOB 0263  
                                      ??_I2C1_MasterIsNack 0070  
                                                _CALC_MOUT 01C9  
   __end_of_wr1RegCompleteHandler@i2c1_master_example$F212 1C68  
  __size_of_wr1RegCompleteHandler@i2c1_master_example$F212 0015  
           _wr1RegCompleteHandler@i2c1_master_example$F212 1C53  
   __end_of_rd2RegCompleteHandler@i2c1_master_example$F206 1C53  
  __size_of_rd2RegCompleteHandler@i2c1_master_example$F206 0015  
           _rd2RegCompleteHandler@i2c1_master_example$F206 1C3E  
   __end_of_wr2RegCompleteHandler@i2c1_master_example$F218 1BD5  
  __size_of_wr2RegCompleteHandler@i2c1_master_example$F218 0015  
           _wr2RegCompleteHandler@i2c1_master_example$F218 1BC0  
 __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F229 1D53  
__size_of_rdBlkRegCompleteHandler@i2c1_master_example$F229 001A  
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 1D39  
   __end_of_rd1RegCompleteHandler@i2c1_master_example$F195 1C3E  
  __size_of_rd1RegCompleteHandler@i2c1_master_example$F195 0015  
           _rd1RegCompleteHandler@i2c1_master_example$F195 1C29  
                                __end_of_I2C1_DO_SEND_STOP 1A7E  
                                ??_rdBlkRegCompleteHandler 007A  
                                       I2C1_SetCallback@cb 0023  
                                      ??_I2C1_MasterSetIrq 0070  
                                     __size_of_set_gainstr 009F  
                                                  ___aodiv 0ADA  
                                                  ___aomod 09FC  
                                                  ___awdiv 12F5  
                                                  ___lbmod 1DFB  
                                          __size_of___wmul 001B  
                                     __end_of_init_pcm9211 1800  
                                                ?_vfprintf 00B8  
                                     __end_of_init_tas6422 1502  
                                               _current_fs 013C  
                                                ?_puts_led 002F  
                     TMR1_DefaultInterruptHandler@pushstat 013F  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                                   i2c_writeNBytes@address 002F  
                                                  __ptext1 06E9  
                                                  __ptext2 16A5  
                                                  __ptext3 1BAC  
                                                  __ptext4 1EA0  
                                                  __ptext5 0802  
                                                  __ptext6 12F5  
                                                  __ptext7 1502  
                                                  __ptext8 0E6D  
                                                  __ptext9 1E7D  
                                 _I2C1_MasterEnableRestart 1A42  
                                                  _lcdbuff 02A0  
                                                  _led_dot 01A0  
                           ??_TMR1_DefaultInterruptHandler 0075  
                                __end_of_I2C1_MasterIsNack 1AA3  
                             ?_I2C1_SetAddressNackCallback 0028  
                                                  _ledbuff 0235  
                                          __size_of_strcat 0014  
                           __end_of_i2c_lcd_send_upper4bit 1FAB  
                                          __size_of_strcpy 0024  
                                          __size_of_strlen 0017  
                                                _T1CONbits 001B  
                                    _OSCILLATOR_Initialize 1AE5  
                                                  _button1 0145  
                                             __size_of_abs 0018  
                                             __size_of_pad 004C  
                                     __end_of_read_clickRE 1210  
                                                  _isalpha 1DDD  
                                                  _isdigit 1CBF  
                                __end_of_I2C1_MasterSetIrq 1A51  
                                 __end_of_I2C1_DO_TX_EMPTY 102E  
                        __size_of_TMR1_SetInterruptHandler 0008  
                                                  _islower 1D07  
                                 ??_PIN_MANAGER_Initialize 0023  
                                                  _isspace 1DC0  
                                ?_TMR1_SetInterruptHandler 0023  
                                               ?_I2C1_Open 0070  
                                                  _tasbuff 0146  
                                                  _isupper 1CEF  
                            __size_of_I2C1_MasterEnableIrq 0003  
                            __size_of_I2C1_MasterGetRxData 0003  
                                                  atoi@neg 0035  
                                        _i2c_lcd_send_data 1398  
                                 ?_I2C1_CallbackReturnStop 0079  
                                        ?_I2C1_WriteNBytes 002C  
                               __size_of_SYSTEM_Initialize 0012  
                                  i2c_read1ByteRegister@d2 0032  
                                                  _sprintf 1E7D  
                                                  clrloop0 1AAA  
                                                  _toupper 1E5C  
                        __end_of_I2C1_DO_SEND_RESTART_READ 1A72  
                                     end_of_initialization 006B  
                               __end_of_I2C1_MasterSendAck 1A6E  
                                       ?_i2c_lcd_send_data 0070  
                                      _I2C1_MasterClearIrq 1A57  
                                       ??_I2C1_WriteNBytes 002F  
                                     lcd_disp_param@otwarn 0323  
                                                  fputc@fp 0025  
                                     lcd_disp_param@otshut 0322  
                                                  init_ram 1AAF  
                                        __end_of_set_gains 1570  
                               __end_of_I2C1_MasterStartRx 1A4B  
                                                  fputs@fp 002B  
                                   ?_rd1RegCompleteHandler 0079  
                                                  initloop 1AB0  
                                          _i2c_writeNBytes 1EE9  
                                   _I2C1_DO_SEND_ADR_WRITE 1AB5  
                                             _lcd_aux_name 20CC  
                             __end_of_I2C1_DO_SEND_RESTART 1A7A  
                                  __end_of_I2C1_MasterOpen 1B55  
                                   ?_wr1RegCompleteHandler 0079  
                                  __end_of_I2C1_MasterStop 1A48  
                                  __end_of_I2C1_Initialize 1AE5  
                                      ??_i2c_lcd_send_data 0030  
                        __size_of_I2C1_CallbackReturnReset 0002  
                           __size_of_I2C1_MasterDisableIrq 0003  
                                    __size_of_i2c_lcd_home 000D  
                                    __size_of_i2c_lcd_init 0056  
                                ?_I2C1_CallbackReturnReset 0079  
                            __end_of_I2C1_MasterDisableIrq 1A60  
                                              _I2C1_Status 01CF  
                                    __size_of_i2c_lcd_puts 0015  
                            __size_of_I2C1_DO_ADDRESS_NACK 002B  
                                        __end_of_vfpfcnvrt 06E9  
                                                _TAS_FC118 0243  
                                                _TAS_FC235 0241  
                                                _TAS_FC463 023F  
                                                _TAS_FS44K 01A9  
                                                _TAS_FS48K 01A7  
                                                _TAS_FS96K 014E  
                                  __size_of_I2C1_MasterFsm 002A  
                                  __size_of_I2C1_MasterIsr 0003  
                                      _I2C1_MasterSendNack 1A66  
                                               _set_source 06E9  
                      __end_of_I2C1_SetAddressNackCallback 1B13  
                              _I2C1_SetAddressNackCallback 1B07  
                                     read_clickRE@interval 0141  
                                                _TAS_OSR64 023D  
                                                _TAS_RESET 01AF  
                                               ??_vfprintf 00BB  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0070  
                                           ??_I2C1_DO_RCEN 0070  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 1A76  
                               _I2C1_DO_SEND_RESTART_WRITE 1A72  
                                               ??_puts_led 0031  
                                                  strcpy@d 0039  
                                                  strlen@a 0026  
                                                  strcpy@s 0037  
                                                  strlen@s 0023  
                                             _lcd_src_name 202A  
                                __size_of_I2C1_MasterClose 0003  
                                        ?i1_I2C1_SetBuffer 0070  
                                         ??_WDT_Initialize 0023  
                                                _PORTAbits 000C  
                                  __size_of_I2C1_SetBuffer 0015  
                          __end_of_rdBlkRegCompleteHandler 1D39  
                                __size_of_I2C1_MasterStart 0003  
                                __size_of_I2C1_MasterWrite 0004  
                                     I2C1_WriteNBytes@data 002C  
                                       ??i1_I2C1_SetBuffer 0074  
                                  ??_i2c_read1ByteRegister 002D  
                                               _srcset9211 0230  
                            __size_of_I2C1_MasterOperation 001A  
                            ??_I2C1_SetAddressNackCallback 002B  
                                __end_of_i2c_lcd_send_data 13ED  
                                         ___lbmod@dividend 0026  
                          I2C1_SetDataCompleteCallback@ptr 002A  
                        i1I2C1_SetDataCompleteCallback@ptr 0077  
                           I2C1_CallbackReturnReset@funPtr 0079  
                                     ?_I2C1_MasterSendNack 0070  
                                     _i2c_lcd_send_command 13ED  
                                 __end_of_DATAEE_WriteByte 1E5C  
                                  __size_of_chk6422warning 0096  
                                             _i2c_lcd_home 1B2C  
                                             _i2c_lcd_init 1443  
                         i2c_lcd_send_command@lowerdata_en 0034  
                                             _i2c_lcd_puts 1C7D  
                                              ___lbmod@rem 0028  
                                             _led_src_name 2052  
                                __size_of_I2C1_SetCallback 0028  
                               __size_of_I2C1_DO_SEND_STOP 0004  
                   __end_ofi1_I2C1_SetDataCompleteCallback 1B07  
                  __size_ofi1_I2C1_SetDataCompleteCallback 000C  
                           i1_I2C1_SetDataCompleteCallback 1AFB  
                                  ?_i2c_lcd_set_cursor_pos 0037  
                                    ??_I2C1_MasterClearIrq 0023  
                                              vfpfcnvrt@ap 0063  
                                              vfpfcnvrt@cp 00B0  
                                              vfpfcnvrt@fp 00B7  
                                              vfpfcnvrt@ll 00A0  
                                           __end_of___wmul 1DA3  
                                           _I2C1_DO_RX_ACK 1A7E  
                                        __size_of_TMR1_ISR 0014  
                                    __end_of_i2c_lcd_clear 1B2C  
                                   ?_OSCILLATOR_Initialize 0070  
                            i2c_lcd_send_data@upperdata_en 0033  
                               __size_of_I2C1_MasterIsNack 0006  
                          __end_of_I2C1_CallbackReturnStop 1002  
                           __size_of_I2C1_MasterSendTxData 0005  
                             __end_of_i2c_lcd_ulcursor_off 1B63  
                            __end_of_I2C1_MasterSendTxData 1A93  
                                           __end_of_strcat 1BC0  
                               __size_of_I2C1_MasterSetIrq 0003  
                                           __end_of_strcpy 1EC4  
                                           __end_of_strlen 1CBF  
                                      start_initialization 0027  
                                              ??_I2C1_Open 0025  
                            __size_of_I2C1_DO_RX_NACK_STOP 0004  
                           __size_ofi1_I2C1_MasterClearIrq 0003  
                          __size_of_PIN_MANAGER_Initialize 0034  
                                              __end_of_abs 1CEF  
                                            _TAS_CHK_RAILS 01A3  
                            __end_ofi1_I2C1_MasterClearIrq 1A54  
                                              __end_of_pad 12A8  
                                    ??_I2C1_MasterSendNack 0070  
                                  __end_of_i2c_writeNBytes 1F0E  
                                    ?_i2c_lcd_send_command 0070  
                    TMR1_DefaultInterruptHandler@RE_offset 007D  
                                         _read_clickRE$506 0072  
                                   rd1RegCompleteHandler@p 0079  
                                      DATAEE_ReadByte@bAdd 0023  
                                 I2C1_SetBuffer@bufferSize 0025  
                                         ?_I2C1_MasterOpen 0070  
                           __end_of_i2c_lcd_set_cursor_pos 10C1  
                                    __size_of_init_pcm9211 00BC  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                    __size_of_init_tas6422 0069  
                                      __end_of_led_i2s_dir 18DD  
                                 __size_of_TMR1_Initialize 001B  
                                              vfprintf@fmt 00B8  
                                         ??_PMD_Initialize 0023  
                             i2c_read1ByteRegister@address 002E  
                                   __end_of_I2C1_DO_RX_ACK 1A82  
                                                 ??___wmul 002D  
                                        get7seg_font@cdata 0072  
                                              ?_set_source 0070  
                                      chk6422warning@prail 0135  
                                   wr1RegCompleteHandler@p 0079  
                               i2c_lcd_set_cursor_pos@line 0037  
                                  ??_I2C1_DO_SEND_ADR_READ 0070  
                               __end_ofi1_I2C1_SetCallback 1F5B  
                                       lcd_disp_param@clip 0324  
                                      __end_of_lcd_fs_name 1870  
                                       lcd_disp_param@ocdc 0321  
                                              __pdataBANK2 0148  
                                              __pdataBANK3 01A0  
                                              __pdataBANK4 0220  
                                       lcd_disp_param@ilim 0325  
                                    __size_of_read_clickRE 004A  
                                  __size_of_lcd_disp_param 0193  
                               ??_I2C1_SetInterruptHandler 0025  
                                                 ??_strcat 003F  
                                                 ??_strcpy 0033  
                                                 ??_strlen 0025  
                                         I2C1_Open@address 0026  
                                      __end_of_led_fs_name 202A  
                                              __pbssCOMMON 007D  
                               __size_of_i2c_lcd_send_data 0055  
                                     _I2C1_DO_SEND_RESTART 1A76  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00A0  
                                            __pcstackBANK2 0168  
                                            __pcstackBANK6 0320  
                                         ___aodiv@dividend 002B  
                                           _current_source 00E8  
                                           _current_volume 006C  
                              ??_I2C1_DO_SEND_RESTART_READ 0070  
                               i1I2C1_SetBuffer@bufferSize 0072  
                                             _init_pcm9211 1744  
                                     __end_of_I2C1_DO_IDLE 1A98  
                                             _init_tas6422 1499  
                                     __end_of_I2C1_DO_RCEN 1AA9  
                            I2C1_SetAddressNackCallback@cb 0028  
                                                _atoi$2236 0037  
                                                _atoi$2237 003B  
                                                _atoi$2238 0039  
                                    _rd2RegCompleteHandler 1BFF  
                                              puts_led@str 002F  
                                             _read_clickRE 11C6  
                                    __end_of_fsmStateTable 2095  
                                   _PIN_MANAGER_Initialize 10C1  
                                                _dtoa$2180 004A  
                                    _wr2RegCompleteHandler 1C14  
                                   _MSSP1_InterruptHandler 0132  
                               ??_I2C1_MasterEnableRestart 0070  
                                           _I2C1_MasterFsm 1FAB  
                                           _I2C1_MasterIsr 1A54  
                         __end_of_TMR1_SetInterruptHandler 1AD4  
                                   __size_of_I2C1_DO_RESET 0005  
                                                 ?___aodiv 0023  
                                                 ?___aomod 0023  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                 ?___awdiv 0023  
                                                __ptext100 1A9D  
                                                __ptext101 1A8E  
                                                __ptext110 1C3E  
                                                __ptext102 1A6A  
                                         ___aodiv@quotient 0036  
                                                __ptext111 1C29  
                                                __ptext103 1A4B  
                                                __ptext120 1AEF  
                                                __ptext112 1D1F  
                                                __ptext104 1A66  
                                                __ptext121 1A45  
                                                __ptext113 1C14  
                                                __ptext105 1A48  
                                                __ptext122 1A42  
                                                __ptext114 1BFF  
                                                __ptext106 0800  
                                                __ptext115 1BEA  
                                                __ptext107 1000  
                                                __ptext116 1BD5  
                                                __ptext108 1D39  
                                                __ptext117 1BC0  
                                                __ptext109 1C53  
                                                __ptext118 1AFB  
                                                __ptext119 1F33  
                                                 ?___lbmod 0023  
                                         _I2C1_MasterClose 1A5A  
                                        read_clickRE@index 0142  
                                           _I2C1_SetBuffer 1C68  
                             ??_INTERRUPT_InterruptManager 007D  
                                         _I2C1_MasterStart 1A60  
                                        __size_of_vfprintf 0031  
                                         _I2C1_MasterWrite 07FC  
                                        __size_of_puts_led 007A  
                                                 _CALC_ADC 0267  
                                                 _CALC_DIR 0269  
                                                 _CALC_DIT 0261  
                                 __size_of_TMR1_StartTimer 0002  
                                                 ?_isalpha 0023  
                                                 ?_isdigit 0023  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                                 ?_islower 0023  
                                                 ?_isspace 0023  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                                 ?_isupper 0023  
                                   ??_i2c_lcd_send_command 0030  
                              __size_of_DELAY_milliseconds 0014  
                         __end_of_I2C1_CallbackReturnReset 0802  
                                         ?_i2c_writeNBytes 002C  
                      TMR1_DefaultInterruptHandler@pushcnt 012C  
                                       ??_I2C1_DO_TX_EMPTY 007A  
                                                 ?_sprintf 00C0  
                                           __size_of_fputc 004C  
                                           __size_of_fputs 0025  
                                           _chk6422warning 1570  
                                 __size_of_DATAEE_ReadByte 000E  
                                  ??_rd1RegCompleteHandler 007A  
                                                 ?_toupper 0029  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0070  
                                           __size_of_putch 0001  
                                                 _DIR_COAX 01CB  
                                      __size_of_set_source 0113  
                                                 _DIT_LVDS 01C3  
                                  ??_wr1RegCompleteHandler 007A  
                                              _INIT9211_20 01BB  
                                              _INIT9211_31 01B1  
                                              _INIT9211_26 01B5  
                                              _INIT9211_27 01B3  
                                              _INIT9211_2B 01B7  
                                              _INIT9211_2E 01B9  
                                              _led_i2s_dir 18CF  
                                         _I2C1_SetCallback 1F5B  
                               i2c_lcd_send_data@lowerdata 0036  
                                           ___wmul@product 002D  
                                   i2c_read1ByteRegister@e 002F  
                                                 _LATAbits 010C  
                                                 _LATBbits 010D  
                                   i2c_read1ByteRegister@x 0030  
                                               _I2C1_DO_RX 10F5  
                                               _I2C1_DO_TX 1346  
                                                clear_ram0 1AA9  
                                            ??_set_gainstr 00DA  
                                                 _PIE1bits 0091  
                                               _I2C1_Close 1DA3  
                                              _lcd_fs_name 1800  
                                   __end_of_I2C1_MasterFsm 1FD5  
                                   __end_of_I2C1_MasterIsr 1A57  
                                 __size_of_TMR1_WriteTimer 000F  
                             __end_of_I2C1_MasterEnableIrq 1A66  
                                     _i2c_lcd_ulcursor_off 1B55  
                      __size_of_INTERRUPT_InterruptManager 0021  
                             __end_of_I2C1_MasterGetRxData 1A4E  
                                                _set_gains 1502  
                                                 _PIR1bits 0011  
                         __size_of_I2C1_CallbackReturnStop 0002  
                                                 _TAS_FC30 0247  
                                                 _TAS_FC15 0249  
                                                 _TAS_FC59 0245  
                                      read_clickRE@current 0074  
                                __size_of_I2C1_WriteNBytes 0025  
                                       _I2C1_MasterSendAck 1A6A  
                           DELAY_milliseconds@milliseconds 0023  
                                _I2C1_DO_SEND_RESTART_READ 1A6E  
                                                 _TAS_PLAY 014C  
                                                 _TAS_MUTE 01A5  
                                                 _SSP1CON1 0215  
                                                 _SSP1CON2 0216  
                                                 _SSP1CON3 0217  
                                                 _TMR1_ISR 1B84  
                                   __end_of_I2C1_SetBuffer 1C7D  
                                                 _SSP1STAT 0214  
                                          set_gainstr@gval 00DB  
                     __end_of_I2C1_SetDataCompleteCallback 1B1F  
                    __size_of_I2C1_SetDataCompleteCallback 000C  
                             _I2C1_SetDataCompleteCallback 1B13  
                                              _led_fs_name 2000  
                                       _I2C1_MasterStartRx 1A48  
                                                 _SRC_LVDS 015E  
                                                _vfpfcnvrt 0494  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                                _xtoa$2201 004E  
                                                _xtoa$2202 0050  
                                        ??_TMR1_Initialize 0025  
                                              _AUXSRC_AUTO 015A  
                               i2c_lcd_send_data@upperdata 0035  
                                              _AUXSRC_LVDS 01CD  
                                      ?_I2C1_MasterSendAck 0070  
                    TMR1_DefaultInterruptHandler@led_blink 0120  
                                        ___wmul@multiplier 0029  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                                main@count 0134  
                                      ?_I2C1_MasterStartRx 0070  
                             __end_of_I2C1_DO_ADDRESS_NACK 2000  
                           __size_of_i2c_read1ByteRegister 0047  
                                   __end_of_chk6422warning 1606  
                                    DATAEE_WriteByte@bData 002B  
                            __end_of_i2c_read1ByteRegister 117E  
                                             _isspace$2263 0027  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 1ABC  
                                            _I2C1_DO_RESET 1A98  
                                               vfpfcnvrt@c 00B2  
                         i2c_lcd_send_command@upperdata_en 0033  
                                    I2C1_Close@returnValue 0024  
                                 ?_rdBlkRegCompleteHandler 0079  
                                        ?_DATAEE_WriteByte 0029  
                                      I2C1_SetCallback@idx 0027  
                                __size_ofi1_I2C1_SetBuffer 000C  
                                      I2C1_SetCallback@ptr 0025  
                                     ??_I2C1_MasterSendAck 0070  
                                   ?_rd2RegCompleteHandler 0079  
                                       ??_DATAEE_WriteByte 002C  
                             __end_of_I2C1_MasterOperation 1D6D  
                                   ?_wr2RegCompleteHandler 0079  
                                     ??_I2C1_MasterStartRx 0070  
                                    ?_i2c_lcd_ulcursor_off 0070  
                                          ?_I2C1_MasterFsm 0070  
                                          ?_I2C1_MasterIsr 0070  
                                               ?_set_gains 003A  
                                               vfprintf@ap 00BA  
                                               vfprintf@fp 00BD  
                                      i2c_writeNBytes@data 002C  
                                    _I2C1_MasterDisableIrq 1A5D  
                                  ??_OSCILLATOR_Initialize 0023  
                                      __end_of_set_gainstr 1744  
                                          ?_I2C1_SetBuffer 0023  
                                         __size_of___aodiv 00F6  
                                         __size_of___aomod 00DE  
                                         __size_of___awdiv 0051  
                                           _lcd_disp_param 0E6D  
                                         __size_of___lbmod 0020  
                                               ?_vfpfcnvrt 0062  
                                          ___aodiv@divisor 0023  
                                 _TMR1_SetInterruptHandler 1ACC  
                                          ___aodiv@counter 0034  
                                   ??_I2C1_DO_SEND_RESTART 0070  
                                    _TMR1_InterruptHandler 012E  
                                               sprintf@fmt 00C2  
                                              _current_aux 013D  
                                               strcat@dest 003B  
                                         __size_of_isalpha 001E  
                                         __size_of_isdigit 0018  
                                            ?_get7seg_font 0070  
                                           ?_I2C1_DO_RESET 0070  
                                          ?_chk6422warning 0070  
                                    __size_of_I2C1_DO_IDLE 0005  
                                         __size_of_islower 0018  
                                    __size_of_I2C1_DO_RCEN 0006  
                                         __size_of_isspace 001D  
                                             set_gains@bal 003A  
                                                 __ptext10 105D  
                                                 __ptext11 0494  
                                                 __ptext20 1CA8  
                                                 __ptext12 0D1A  
                                                 __ptext21 1F0E  
                                                 __ptext13 1E5C  
                                                 __ptext30 1D88  
                                                 __ptext22 1210  
                                                 __ptext14 1D07  
                                                 __ptext31 108E  
                                                 __ptext23 1A41  
                                                 __ptext15 1CEF  
                                                 __ptext40 1443  
                                                 __ptext32 1C7D  
                                                 __ptext24 1CD7  
                                                 __ptext16 1DDD  
                                                 __ptext41 1F83  
                                                 __ptext33 1398  
                                                 __ptext25 09FC  
                                                 __ptext17 093A  
                                                 __ptext50 1B07  
                                                 __ptext42 1B2C  
                                                 __ptext34 1DFB  
                                                 __ptext26 0ADA  
                                                 __ptext18 0BD0  
                                                 __ptext51 1F5B  
                                                 __ptext43 1B1F  
                                                 __ptext35 1499  
                                                 __ptext27 1606  
                                                 __ptext19 125C  
                                                 __ptext60 1A5D  
                                                 __ptext52 117E  
                                                 __ptext44 13ED  
                                                 __ptext36 1B98  
                                                 __ptext28 1DC0  
                                                 __ptext61 1A5A  
                                                 __ptext53 1AD4  
                                                 __ptext45 1EC4  
                                                 __ptext37 1744  
                                                 __ptext29 1CBF  
                                                 __ptext70 1AE5  
                                                 __ptext62 1A57  
                                                 __ptext54 1B47  
                                                 __ptext46 1570  
                                                 __ptext38 1EE9  
                                                 __ptext71 1ADC  
                                                 __ptext63 0002  
                                                 __ptext55 1A63  
                                                 __ptext47 1137  
                                                 __ptext39 1B55  
                                                 __ptext80 1A54  
                                                 __ptext72 1E3B  
                                                 __ptext64 1B72  
                                                 __ptext56 07FC  
                                                 __ptext48 1B13  
                                                 __ptext81 1FAB  
                                                 __ptext73 1B39  
                                                 __ptext65 1A8A  
                                                 __ptext57 1D53  
                                                 __ptext49 1C68  
                                                 __ptext90 1A72  
                                                 __ptext82 1A51  
                                                 __ptext66 1D6D  
                                                 __ptext58 1A60  
                                                 __ptext91 1A6E  
                                                 __ptext83 1FD5  
                                                 __ptext75 1B84  
                                                 __ptext67 1ACC  
                                                 __ptext59 1DA3  
                                                 __ptext92 1AA3  
                                                 __ptext84 1A98  
                                                 __ptext76 1B63  
                                                 __ptext68 1AC4  
                                                 __ptext93 10F5  
                                                 __ptext85 1A86  
                                                 __ptext77 087C  
                                                 __ptext69 10C1  
                                                 __ptext94 1346  
                                                 __ptext86 1A82  
                                                 __ptext78 11C6  
                                                 __ptext95 1AB5  
                                                 __ptext87 1A7E  
                                                 __ptext79 1C92  
                                                 __ptext96 1ABC  
                                                 __ptext88 1A7A  
                                                 __ptext97 1A93  
                                                 __ptext89 1A76  
                                                 __ptext98 1002  
                                                 __ptext99 1A4E  
                                         __size_of_isupper 0018  
                                             set_gains@vol 003C  
                                             _SSP1CON1bits 0215  
                                             _SSP1CON2bits 0216  
                                        ??_TMR1_StartTimer 0023  
                                         __size_of_sprintf 0023  
                                                 _font7seg 1870  
                              DATAEE_WriteByte@GIEBitValue 002C  
                                               strcpy@dest 002F  
                                         __size_of_toupper 0021  
                                   chk6422warning@lasttime 013B  
                                 _I2C1_CallbackReturnReset 0800  
                                            __size_of_atoi 009F  
                                            __size_of_main 0425  
                                            __size_of_dtoa 014A  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
                                            __size_of_stoa 00C2  
                                            __size_of_xtoa 0153  
                                        ??_DATAEE_ReadByte 0025  
                              __end_of_I2C1_MasterClearIrq 1A5A  
                             __end_of_I2C1_DO_RX_NACK_STOP 1A86  
                                              ?_I2C1_Close 0070  
                                                stoa@F1141 0229  
                                   __end_of_lcd_disp_param 1000  
                                             ??_set_source 0030  
                                                 int$flags 007E  
                                 ??_i2c_lcd_send_upper4bit 0030  
                          __end_of_I2C1_DO_RX_NACK_RESTART 1A8A  
                                               _AUXSRC_ADC 0156  
                                               _AUXSRC_I2S 026B  
                                               _AUXSRC_DIR 0158  
                                 I2C1_MasterOperation@read 0024  
                                                 _vfprintf 105D  
                       __end_of_INTERRUPT_InterruptManager 0025  
                               _INTERRUPT_InterruptManager 0004  
                                        ??_TMR1_WriteTimer 0072  
                                                 _puts_led 0802  
                           __size_of_I2C1_DO_SEND_ADR_READ 0008  
                                     get7seg_font@fontdata 0071  
                                 i2c_read1ByteRegister@reg 002C  
                            __end_of_I2C1_DO_SEND_ADR_READ 1AC4  
                                             _I2C1_DO_IDLE 1A93  
                                             _I2C1_DO_RCEN 1AA3  
                                         ___aomod@dividend 002B  
                              __end_of_I2C1_MasterSendNack 1A6A  
                                           _vfpfcnvrt$2216 00B5  
                                               _INTCONbits 000B  
                                           ??_get7seg_font 0070  
                                              _NVMCON1bits 0895  
                           I2C1_SetAddressNackCallback@ptr 002A  
                                     _I2C1_MasterEnableIrq 1A63  
                                       i1_I2C1_SetCallback 1F33  
                                       i2c_writeNBytes@len 002D  
                                           __pstringtext10 2095  
                                           __pstringtext11 20A9  
                                           __pstringtext20 2114  
                                           __pstringtext12 20DA  
                                           __pstringtext21 2118  
                                           __pstringtext13 20E8  
                                           __pstringtext22 211C  
                                           __pstringtext14 20F5  
                                           __pstringtext23 2120  
                                           __pstringtext15 20FF  
                                           __pstringtext24 2124  
                                           __pstringtext16 2104  
                                           __pstringtext25 2128  
                                           __pstringtext17 2108  
                                           __pstringtext26 0000  
                                           __pstringtext18 210C  
                                           __pstringtext19 2110  
                                     _I2C1_MasterGetRxData 1A4B  
                                    _I2C1_MasterSendTxData 1A8E  
                                                 isalpha@c 0023  
                                                 isdigit@c 0023  
                                  __size_of_WDT_Initialize 0004  
                                    i1_I2C1_MasterClearIrq 1A51  
                                                 intlevel1 0000  
                                                sprintf@ap 00D3  
                                                strcat@src 003D  
                                       __end_of_set_source 07FC  
                                 __end_of_I2C1_MasterClose 1A5D  
                                   rd2RegCompleteHandler@p 0079  
                                      ?i1_I2C1_SetCallback 0070  
                                                 islower@c 0023  
                                                 isspace@c 0023  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 1A63  
                                 __end_of_I2C1_MasterWrite 0800  
                                   ??_i2c_lcd_ulcursor_off 0037  
                                  I2C1_WriteNBytes@address 002F  
                                                strcpy@src 0031  
                                   __size_of_i2c_lcd_clear 000D  
                                         ??_I2C1_DO_RX_ACK 0070  
                                                 isupper@c 0023  
                                  _I2C1_CallbackReturnStop 1000  
                                              _set_gainstr 16A5  
                                              ??_set_gains 003B  
                                     _I2C1_DO_ADDRESS_NACK 1FD5  
                                   ?_I2C1_MasterDisableIrq 0070  
                                         _I2C1_WriteNBytes 1EC4  
                                          ?_lcd_disp_param 0070  
                                   wr2RegCompleteHandler@p 0079  
                                          ___aomod@divisor 0023  
                                              ??_vfpfcnvrt 0064  
                                                 stoa@nuls 0030  
                                          ___aomod@counter 0034  
                                      _lcd_disp_param$2713 0327  
                                 __size_of_I2C1_MasterOpen 000E  
                                   set_source@sourcenumber 0033  
                                 __size_of_I2C1_MasterStop 0003  
                                 __size_of_I2C1_Initialize 0009  
                                     ??i1_I2C1_SetCallback 0073  
                                            __pstringtext1 1870  
                                            __pstringtext2 2000  
                                            __pstringtext3 2075  
                                            __pstringtext4 20BC  
                                            __pstringtext5 1800  
                                            __pstringtext6 202A  
                                            __pstringtext7 2052  
                                            __pstringtext8 20CC  
                                            __pstringtext9 18CF  
                                               _TAS_OSR128 023B  
                                 __end_of_I2C1_SetCallback 1F83  
                                               _TAS_NORMAL 0148  
                         i1I2C1_SetDataCompleteCallback@cb 0075  
                                                 sprintf@f 00D4  
                                                 sprintf@s 00C0  
                     ?_wr1RegCompleteHandler@islower$F2371 0079  
                    ??_rd1RegCompleteHandler@islower$F2381 007A  
                    ??_wr1RegCompleteHandler@islower$F2373 007A  
                     ?_wr2RegCompleteHandler@islower$F2390 0079  
                    ??_wr2RegCompleteHandler@islower$F2392 007A  
                     ?_rd2RegCompleteHandler@islower$F2384 0079  
                    ??_rd2RegCompleteHandler@islower$F2386 007A  
                     ?_rd1RegCompleteHandler@islower$F2379 0079  
                   ?_rdBlkRegCompleteHandler@islower$F2396 0079  
                  ??_rdBlkRegCompleteHandler@islower$F2398 007A  
                                               _SSP1DATPPS 0E21  
                                               _SSP1CLKPPS 0E20  
                                      __size_of_I2C1_DO_RX 0042  
                                      __size_of_I2C1_DO_TX 0052  
                                          ??_I2C1_DO_RESET 0070  
                                     _I2C1_MasterOperation 1D53  
                                                 toupper@c 0029  
                                    ?_I2C1_MasterEnableIrq 0070  
                                      __size_of_I2C1_Close 001D  
                                    ?_I2C1_MasterGetRxData 0070  
                                   i1I2C1_SetBuffer@buffer 0070  
                       i2c_lcd_send_upper4bit@upperdata_en 0032  
                                             ___aodiv@sign 0035  
                                         i1_I2C1_SetBuffer 1AEF  
                           __end_of_PIN_MANAGER_Initialize 10F5  
                        __size_of_I2C1_SetInterruptHandler 0008  
                           __size_of_rd1RegCompleteHandler 0015  
                                ?_I2C1_SetInterruptHandler 0023  
                            __end_of_rd1RegCompleteHandler 1BFF  
                                       __size_of_I2C1_Open 0048  
                           __size_of_wr1RegCompleteHandler 0015  
                                        _current_direction 00E6  
                            __end_of_wr1RegCompleteHandler 1BEA  
                                             ___aomod@sign 0035  
                                __size_of_I2C1_DO_TX_EMPTY 002C  
                                          _TMR1_Initialize 1D6D  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
