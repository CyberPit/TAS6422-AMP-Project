

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 13 22:55:24 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og9 
     1                           	processor	16F18346
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK5,global,class=CODE,delta=2,noexec
     8                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    22                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    23                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    24                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    25                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    26                           	psect	stringtext19,global,class=STRCODE,delta=2,noexec
    27                           	psect	stringtext20,global,class=STRCODE,delta=2,noexec
    28                           	psect	stringtext21,global,class=STRCODE,delta=2,noexec
    29                           	psect	stringtext22,global,class=STRCODE,delta=2,noexec
    30                           	psect	stringtext23,global,class=STRCODE,delta=2,noexec
    31                           	psect	stringtext24,global,class=STRCODE,delta=2,noexec
    32                           	psect	stringtext25,global,class=STRCODE,delta=2,noexec
    33                           	psect	stringtext26,global,class=STRCODE,delta=2,noexec
    34                           	psect	stringtext27,global,class=STRCODE,delta=2,noexec
    35                           	psect	stringtext28,global,class=STRCODE,delta=2,noexec
    36                           	psect	stringtext29,global,class=STRCODE,delta=2,noexec
    37                           	psect	stringtext30,global,class=STRCODE,delta=2,noexec
    38                           	psect	stringtext31,global,class=STRCODE,delta=2,noexec
    39                           	psect	stringtext32,global,class=STRCODE,delta=2,noexec
    40                           	psect	stringtext33,global,class=STRCODE,delta=2,noexec
    41                           	psect	cinit,global,class=CODE,merge=1,delta=2
    42                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    43                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    44                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    45                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    46                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    47                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    48                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,noexec
    49                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,noexec
    50                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,noexec
    51                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1,noexec
    52                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,noexec
    53                           	psect	inittext,global,class=CODE,delta=2
    54                           	psect	clrtext,global,class=CODE,delta=2
    55                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,noexec
    56                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    57                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    58                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    59                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    60                           	psect	text1,local,class=CODE,merge=1,delta=2
    61                           	psect	text2,local,class=CODE,merge=1,delta=2
    62                           	psect	text3,local,class=CODE,merge=1,delta=2
    63                           	psect	text4,local,class=CODE,merge=1,delta=2
    64                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text7,local,class=CODE,merge=1,delta=2
    67                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    68                           	psect	text9,local,class=CODE,merge=1,delta=2
    69                           	psect	text10,local,class=CODE,merge=1,delta=2
    70                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    71                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    72                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    73                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    75                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    76                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    77                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    78                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    79                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    81                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    82                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    83                           	psect	text24,local,class=CODE,merge=1,delta=2,group=3
    84                           	psect	text25,local,class=CODE,merge=1,delta=2,group=3
    85                           	psect	text26,local,class=CODE,merge=1,delta=2,group=3
    86                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    88                           	psect	text29,local,class=CODE,merge=1,delta=2,group=3
    89                           	psect	text30,local,class=CODE,merge=1,delta=2,group=3
    90                           	psect	text31,local,class=CODE,merge=1,delta=2,group=3
    91                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
    92                           	psect	text33,local,class=CODE,merge=1,delta=2
    93                           	psect	text34,local,class=CODE,merge=1,delta=2
    94                           	psect	text35,local,class=CODE,merge=1,delta=2
    95                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    96                           	psect	text37,local,class=CODE,merge=1,delta=2
    97                           	psect	text38,local,class=CODE,merge=1,delta=2
    98                           	psect	text39,local,class=CODE,merge=1,delta=2
    99                           	psect	text40,local,class=CODE,merge=1,delta=2
   100                           	psect	text41,local,class=CODE,merge=1,delta=2
   101                           	psect	text42,local,class=CODE,merge=1,delta=2
   102                           	psect	text43,local,class=CODE,merge=1,delta=2
   103                           	psect	text44,local,class=CODE,merge=1,delta=2
   104                           	psect	text45,local,class=CODE,merge=1,delta=2
   105                           	psect	text46,local,class=CODE,merge=1,delta=2
   106                           	psect	text47,local,class=CODE,merge=1,delta=2
   107                           	psect	text48,local,class=CODE,merge=1,delta=2
   108                           	psect	text49,local,class=CODE,merge=1,delta=2
   109                           	psect	text50,local,class=CODE,merge=1,delta=2
   110                           	psect	text51,local,class=CODE,merge=1,delta=2
   111                           	psect	text52,local,class=CODE,merge=1,delta=2
   112                           	psect	text53,local,class=CODE,merge=1,delta=2
   113                           	psect	text54,local,class=CODE,merge=1,delta=2
   114                           	psect	text55,local,class=CODE,merge=1,delta=2
   115                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
   116                           	psect	text57,local,class=CODE,merge=1,inline,delta=2
   117                           	psect	text58,local,class=CODE,merge=1,delta=2
   118                           	psect	text59,local,class=CODE,merge=1,delta=2
   119                           	psect	text60,local,class=CODE,merge=1,inline,delta=2
   120                           	psect	text61,local,class=CODE,merge=1,delta=2
   121                           	psect	text62,local,class=CODE,merge=1,inline,delta=2
   122                           	psect	text63,local,class=CODE,merge=1,inline,delta=2
   123                           	psect	text64,local,class=CODE,merge=1,inline,delta=2
   124                           	psect	text65,local,class=CODE,merge=1,delta=2
   125                           	psect	text66,local,class=CODE,merge=1,delta=2
   126                           	psect	text67,local,class=CODE,merge=1,delta=2
   127                           	psect	text68,local,class=CODE,merge=1,delta=2
   128                           	psect	text69,local,class=CODE,merge=1,delta=2
   129                           	psect	text70,local,class=CODE,merge=1,delta=2
   130                           	psect	text71,local,class=CODE,merge=1,delta=2
   131                           	psect	text72,local,class=CODE,merge=1,delta=2
   132                           	psect	text73,local,class=CODE,merge=1,delta=2
   133                           	psect	text74,local,class=CODE,merge=1,delta=2
   134                           	psect	text75,local,class=CODE,merge=1,delta=2
   135                           	psect	intentry,global,class=CODE,delta=2
   136                           	psect	text77,local,class=CODE,merge=1,delta=2
   137                           	psect	text78,local,class=CODE,merge=1,delta=2
   138                           	psect	text79,local,class=CODE,merge=1,delta=2
   139                           	psect	text80,local,class=CODE,merge=1,delta=2
   140                           	psect	text81,local,class=CODE,merge=1,delta=2
   141                           	psect	text82,local,class=CODE,merge=1,delta=2
   142                           	psect	text83,local,class=CODE,merge=1,inline,delta=2
   143                           	psect	text84,local,class=CODE,merge=1,inline,delta=2
   144                           	psect	text85,local,class=CODE,merge=1,delta=2
   145                           	psect	text86,local,class=CODE,merge=1,delta=2
   146                           	psect	text87,local,class=CODE,merge=1,delta=2
   147                           	psect	text88,local,class=CODE,merge=1,delta=2
   148                           	psect	text89,local,class=CODE,merge=1,delta=2
   149                           	psect	text90,local,class=CODE,merge=1,delta=2
   150                           	psect	text91,local,class=CODE,merge=1,delta=2
   151                           	psect	text92,local,class=CODE,merge=1,delta=2
   152                           	psect	text93,local,class=CODE,merge=1,delta=2
   153                           	psect	text94,local,class=CODE,merge=1,delta=2
   154                           	psect	text95,local,class=CODE,merge=1,delta=2
   155                           	psect	text96,local,class=CODE,merge=1,delta=2
   156                           	psect	text97,local,class=CODE,merge=1,delta=2
   157                           	psect	text98,local,class=CODE,merge=1,delta=2
   158                           	psect	text99,local,class=CODE,merge=1,delta=2
   159                           	psect	text100,local,class=CODE,merge=1,delta=2
   160                           	psect	text101,local,class=CODE,merge=1,inline,delta=2
   161                           	psect	text102,local,class=CODE,merge=1,inline,delta=2
   162                           	psect	text103,local,class=CODE,merge=1,inline,delta=2
   163                           	psect	text104,local,class=CODE,merge=1,inline,delta=2
   164                           	psect	text105,local,class=CODE,merge=1,inline,delta=2
   165                           	psect	text106,local,class=CODE,merge=1,inline,delta=2
   166                           	psect	text107,local,class=CODE,merge=1,inline,delta=2
   167                           	psect	text108,local,class=CODE,merge=1,delta=2
   168                           	psect	text109,local,class=CODE,merge=1,delta=2
   169                           	psect	text110,local,class=CODE,merge=1,delta=2
   170                           	psect	text111,local,class=CODE,merge=1,delta=2
   171                           	psect	text112,local,class=CODE,merge=1,delta=2
   172                           	psect	text113,local,class=CODE,merge=1,delta=2
   173                           	psect	text114,local,class=CODE,merge=1,delta=2
   174                           	psect	text115,local,class=CODE,merge=1,delta=2
   175                           	psect	text116,local,class=CODE,merge=1,delta=2
   176                           	psect	text117,local,class=CODE,merge=1,delta=2
   177                           	psect	text118,local,class=CODE,merge=1,delta=2
   178                           	psect	text119,local,class=CODE,merge=1,delta=2
   179                           	psect	text120,local,class=CODE,merge=1,delta=2
   180                           	psect	text121,local,class=CODE,merge=1,delta=2
   181                           	psect	text122,local,class=CODE,merge=1,delta=2
   182                           	psect	text123,local,class=CODE,merge=1,inline,delta=2
   183                           	psect	text124,local,class=CODE,merge=1,inline,delta=2
   184                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   185                           	dabs	1,0x7E,2
   186  0000                     
   187                           ; Version 2.20
   188                           ; Generated 30/04/2020 GMT
   189                           ; 
   190                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   191                           ; All rights reserved.
   192                           ; 
   193                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   194                           ; 
   195                           ; Redistribution and use in source and binary forms, with or without modification, are
   196                           ; permitted provided that the following conditions are met:
   197                           ; 
   198                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   199                           ;        conditions and the following disclaimer.
   200                           ; 
   201                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   202                           ;        of conditions and the following disclaimer in the documentation and/or other
   203                           ;        materials provided with the distribution.
   204                           ; 
   205                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   206                           ;        software without specific prior written permission.
   207                           ; 
   208                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   209                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   210                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   211                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   212                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   213                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   214                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   215                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   216                           ; 
   217                           ; 
   218                           ; Code-generator required, PIC16F18346 Definitions
   219                           ; 
   220                           ; SFR Addresses
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  0090                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0097                     	;# 
   264  009B                     	;# 
   265  009B                     	;# 
   266  009C                     	;# 
   267  009D                     	;# 
   268  009E                     	;# 
   269  009F                     	;# 
   270  010C                     	;# 
   271  010D                     	;# 
   272  010E                     	;# 
   273  0111                     	;# 
   274  0112                     	;# 
   275  0113                     	;# 
   276  0114                     	;# 
   277  0115                     	;# 
   278  0116                     	;# 
   279  0117                     	;# 
   280  0118                     	;# 
   281  0119                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  018E                     	;# 
   285  0197                     	;# 
   286  0199                     	;# 
   287  0199                     	;# 
   288  0199                     	;# 
   289  019A                     	;# 
   290  019A                     	;# 
   291  019A                     	;# 
   292  019B                     	;# 
   293  019B                     	;# 
   294  019B                     	;# 
   295  019B                     	;# 
   296  019B                     	;# 
   297  019C                     	;# 
   298  019C                     	;# 
   299  019C                     	;# 
   300  019D                     	;# 
   301  019D                     	;# 
   302  019D                     	;# 
   303  019E                     	;# 
   304  019E                     	;# 
   305  019E                     	;# 
   306  019F                     	;# 
   307  019F                     	;# 
   308  019F                     	;# 
   309  019F                     	;# 
   310  019F                     	;# 
   311  020C                     	;# 
   312  020D                     	;# 
   313  020E                     	;# 
   314  0211                     	;# 
   315  0211                     	;# 
   316  0212                     	;# 
   317  0212                     	;# 
   318  0213                     	;# 
   319  0213                     	;# 
   320  0214                     	;# 
   321  0214                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0216                     	;# 
   327  0216                     	;# 
   328  0217                     	;# 
   329  0217                     	;# 
   330  0219                     	;# 
   331  021A                     	;# 
   332  021B                     	;# 
   333  021C                     	;# 
   334  021D                     	;# 
   335  021D                     	;# 
   336  021E                     	;# 
   337  021F                     	;# 
   338  028C                     	;# 
   339  028D                     	;# 
   340  028E                     	;# 
   341  0291                     	;# 
   342  0291                     	;# 
   343  0292                     	;# 
   344  0293                     	;# 
   345  0294                     	;# 
   346  0295                     	;# 
   347  0295                     	;# 
   348  0296                     	;# 
   349  0297                     	;# 
   350  0298                     	;# 
   351  029F                     	;# 
   352  030C                     	;# 
   353  030D                     	;# 
   354  030E                     	;# 
   355  0311                     	;# 
   356  0311                     	;# 
   357  0312                     	;# 
   358  0313                     	;# 
   359  0314                     	;# 
   360  0315                     	;# 
   361  0315                     	;# 
   362  0316                     	;# 
   363  0317                     	;# 
   364  0318                     	;# 
   365  038C                     	;# 
   366  038D                     	;# 
   367  038E                     	;# 
   368  0391                     	;# 
   369  0392                     	;# 
   370  0393                     	;# 
   371  0394                     	;# 
   372  0395                     	;# 
   373  0396                     	;# 
   374  0397                     	;# 
   375  0398                     	;# 
   376  0399                     	;# 
   377  039A                     	;# 
   378  039C                     	;# 
   379  039D                     	;# 
   380  039E                     	;# 
   381  039F                     	;# 
   382  0411                     	;# 
   383  0411                     	;# 
   384  0412                     	;# 
   385  0413                     	;# 
   386  0414                     	;# 
   387  0415                     	;# 
   388  0416                     	;# 
   389  0417                     	;# 
   390  0418                     	;# 
   391  0418                     	;# 
   392  0419                     	;# 
   393  041A                     	;# 
   394  041B                     	;# 
   395  041C                     	;# 
   396  041D                     	;# 
   397  041E                     	;# 
   398  041F                     	;# 
   399  0498                     	;# 
   400  0498                     	;# 
   401  0499                     	;# 
   402  049A                     	;# 
   403  049B                     	;# 
   404  049B                     	;# 
   405  049C                     	;# 
   406  049D                     	;# 
   407  049E                     	;# 
   408  049F                     	;# 
   409  0617                     	;# 
   410  0618                     	;# 
   411  0619                     	;# 
   412  0619                     	;# 
   413  061A                     	;# 
   414  061B                     	;# 
   415  061C                     	;# 
   416  061C                     	;# 
   417  061F                     	;# 
   418  0691                     	;# 
   419  0692                     	;# 
   420  0693                     	;# 
   421  0694                     	;# 
   422  0695                     	;# 
   423  0696                     	;# 
   424  0697                     	;# 
   425  0698                     	;# 
   426  0699                     	;# 
   427  0711                     	;# 
   428  0712                     	;# 
   429  0713                     	;# 
   430  0714                     	;# 
   431  0715                     	;# 
   432  0716                     	;# 
   433  0717                     	;# 
   434  0718                     	;# 
   435  0719                     	;# 
   436  0891                     	;# 
   437  0891                     	;# 
   438  0891                     	;# 
   439  0891                     	;# 
   440  0891                     	;# 
   441  0891                     	;# 
   442  0892                     	;# 
   443  0892                     	;# 
   444  0892                     	;# 
   445  0893                     	;# 
   446  0893                     	;# 
   447  0893                     	;# 
   448  0893                     	;# 
   449  0893                     	;# 
   450  0893                     	;# 
   451  0894                     	;# 
   452  0894                     	;# 
   453  0894                     	;# 
   454  0895                     	;# 
   455  0895                     	;# 
   456  0895                     	;# 
   457  0896                     	;# 
   458  0896                     	;# 
   459  0896                     	;# 
   460  089B                     	;# 
   461  0911                     	;# 
   462  0912                     	;# 
   463  0913                     	;# 
   464  0914                     	;# 
   465  0915                     	;# 
   466  0916                     	;# 
   467  0918                     	;# 
   468  0919                     	;# 
   469  091A                     	;# 
   470  091B                     	;# 
   471  091C                     	;# 
   472  091D                     	;# 
   473  091E                     	;# 
   474  091F                     	;# 
   475  0E0F                     	;# 
   476  0E10                     	;# 
   477  0E11                     	;# 
   478  0E12                     	;# 
   479  0E13                     	;# 
   480  0E14                     	;# 
   481  0E15                     	;# 
   482  0E16                     	;# 
   483  0E17                     	;# 
   484  0E18                     	;# 
   485  0E19                     	;# 
   486  0E1A                     	;# 
   487  0E1B                     	;# 
   488  0E1C                     	;# 
   489  0E1D                     	;# 
   490  0E1E                     	;# 
   491  0E1F                     	;# 
   492  0E20                     	;# 
   493  0E21                     	;# 
   494  0E22                     	;# 
   495  0E24                     	;# 
   496  0E25                     	;# 
   497  0E28                     	;# 
   498  0E29                     	;# 
   499  0E2A                     	;# 
   500  0E2B                     	;# 
   501  0E2C                     	;# 
   502  0E2D                     	;# 
   503  0E2E                     	;# 
   504  0E2F                     	;# 
   505  0E90                     	;# 
   506  0E91                     	;# 
   507  0E92                     	;# 
   508  0E94                     	;# 
   509  0E95                     	;# 
   510  0E9C                     	;# 
   511  0E9D                     	;# 
   512  0E9E                     	;# 
   513  0E9F                     	;# 
   514  0EA0                     	;# 
   515  0EA1                     	;# 
   516  0EA2                     	;# 
   517  0EA3                     	;# 
   518  0EA4                     	;# 
   519  0EA5                     	;# 
   520  0EA6                     	;# 
   521  0EA7                     	;# 
   522  0F0F                     	;# 
   523  0F10                     	;# 
   524  0F11                     	;# 
   525  0F12                     	;# 
   526  0F13                     	;# 
   527  0F14                     	;# 
   528  0F15                     	;# 
   529  0F16                     	;# 
   530  0F17                     	;# 
   531  0F18                     	;# 
   532  0F19                     	;# 
   533  0F1A                     	;# 
   534  0F1B                     	;# 
   535  0F1C                     	;# 
   536  0F1D                     	;# 
   537  0F1E                     	;# 
   538  0F1F                     	;# 
   539  0F20                     	;# 
   540  0F21                     	;# 
   541  0F22                     	;# 
   542  0F23                     	;# 
   543  0F24                     	;# 
   544  0F25                     	;# 
   545  0F26                     	;# 
   546  0F27                     	;# 
   547  0F28                     	;# 
   548  0F29                     	;# 
   549  0F2A                     	;# 
   550  0F2B                     	;# 
   551  0F2C                     	;# 
   552  0F2D                     	;# 
   553  0F2E                     	;# 
   554  0F2F                     	;# 
   555  0F30                     	;# 
   556  0F31                     	;# 
   557  0F32                     	;# 
   558  0F33                     	;# 
   559  0F34                     	;# 
   560  0F35                     	;# 
   561  0F36                     	;# 
   562  0F37                     	;# 
   563  0FE4                     	;# 
   564  0FE5                     	;# 
   565  0FE6                     	;# 
   566  0FE7                     	;# 
   567  0FE8                     	;# 
   568  0FE9                     	;# 
   569  0FEA                     	;# 
   570  0FEB                     	;# 
   571  0FED                     	;# 
   572  0FEE                     	;# 
   573  0FEF                     	;# 
   574  0000                     	;# 
   575  0001                     	;# 
   576  0002                     	;# 
   577  0003                     	;# 
   578  0004                     	;# 
   579  0005                     	;# 
   580  0006                     	;# 
   581  0007                     	;# 
   582  0008                     	;# 
   583  0009                     	;# 
   584  000A                     	;# 
   585  000B                     	;# 
   586  000C                     	;# 
   587  000D                     	;# 
   588  000E                     	;# 
   589  0010                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0014                     	;# 
   594  0015                     	;# 
   595  0015                     	;# 
   596  0016                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  0019                     	;# 
   601  0019                     	;# 
   602  001A                     	;# 
   603  001B                     	;# 
   604  001C                     	;# 
   605  001D                     	;# 
   606  001E                     	;# 
   607  001F                     	;# 
   608  008C                     	;# 
   609  008D                     	;# 
   610  008E                     	;# 
   611  0090                     	;# 
   612  0091                     	;# 
   613  0092                     	;# 
   614  0093                     	;# 
   615  0094                     	;# 
   616  0097                     	;# 
   617  009B                     	;# 
   618  009B                     	;# 
   619  009C                     	;# 
   620  009D                     	;# 
   621  009E                     	;# 
   622  009F                     	;# 
   623  010C                     	;# 
   624  010D                     	;# 
   625  010E                     	;# 
   626  0111                     	;# 
   627  0112                     	;# 
   628  0113                     	;# 
   629  0114                     	;# 
   630  0115                     	;# 
   631  0116                     	;# 
   632  0117                     	;# 
   633  0118                     	;# 
   634  0119                     	;# 
   635  018C                     	;# 
   636  018D                     	;# 
   637  018E                     	;# 
   638  0197                     	;# 
   639  0199                     	;# 
   640  0199                     	;# 
   641  0199                     	;# 
   642  019A                     	;# 
   643  019A                     	;# 
   644  019A                     	;# 
   645  019B                     	;# 
   646  019B                     	;# 
   647  019B                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019C                     	;# 
   651  019C                     	;# 
   652  019C                     	;# 
   653  019D                     	;# 
   654  019D                     	;# 
   655  019D                     	;# 
   656  019E                     	;# 
   657  019E                     	;# 
   658  019E                     	;# 
   659  019F                     	;# 
   660  019F                     	;# 
   661  019F                     	;# 
   662  019F                     	;# 
   663  019F                     	;# 
   664  020C                     	;# 
   665  020D                     	;# 
   666  020E                     	;# 
   667  0211                     	;# 
   668  0211                     	;# 
   669  0212                     	;# 
   670  0212                     	;# 
   671  0213                     	;# 
   672  0213                     	;# 
   673  0214                     	;# 
   674  0214                     	;# 
   675  0215                     	;# 
   676  0215                     	;# 
   677  0215                     	;# 
   678  0215                     	;# 
   679  0216                     	;# 
   680  0216                     	;# 
   681  0217                     	;# 
   682  0217                     	;# 
   683  0219                     	;# 
   684  021A                     	;# 
   685  021B                     	;# 
   686  021C                     	;# 
   687  021D                     	;# 
   688  021D                     	;# 
   689  021E                     	;# 
   690  021F                     	;# 
   691  028C                     	;# 
   692  028D                     	;# 
   693  028E                     	;# 
   694  0291                     	;# 
   695  0291                     	;# 
   696  0292                     	;# 
   697  0293                     	;# 
   698  0294                     	;# 
   699  0295                     	;# 
   700  0295                     	;# 
   701  0296                     	;# 
   702  0297                     	;# 
   703  0298                     	;# 
   704  029F                     	;# 
   705  030C                     	;# 
   706  030D                     	;# 
   707  030E                     	;# 
   708  0311                     	;# 
   709  0311                     	;# 
   710  0312                     	;# 
   711  0313                     	;# 
   712  0314                     	;# 
   713  0315                     	;# 
   714  0315                     	;# 
   715  0316                     	;# 
   716  0317                     	;# 
   717  0318                     	;# 
   718  038C                     	;# 
   719  038D                     	;# 
   720  038E                     	;# 
   721  0391                     	;# 
   722  0392                     	;# 
   723  0393                     	;# 
   724  0394                     	;# 
   725  0395                     	;# 
   726  0396                     	;# 
   727  0397                     	;# 
   728  0398                     	;# 
   729  0399                     	;# 
   730  039A                     	;# 
   731  039C                     	;# 
   732  039D                     	;# 
   733  039E                     	;# 
   734  039F                     	;# 
   735  0411                     	;# 
   736  0411                     	;# 
   737  0412                     	;# 
   738  0413                     	;# 
   739  0414                     	;# 
   740  0415                     	;# 
   741  0416                     	;# 
   742  0417                     	;# 
   743  0418                     	;# 
   744  0418                     	;# 
   745  0419                     	;# 
   746  041A                     	;# 
   747  041B                     	;# 
   748  041C                     	;# 
   749  041D                     	;# 
   750  041E                     	;# 
   751  041F                     	;# 
   752  0498                     	;# 
   753  0498                     	;# 
   754  0499                     	;# 
   755  049A                     	;# 
   756  049B                     	;# 
   757  049B                     	;# 
   758  049C                     	;# 
   759  049D                     	;# 
   760  049E                     	;# 
   761  049F                     	;# 
   762  0617                     	;# 
   763  0618                     	;# 
   764  0619                     	;# 
   765  0619                     	;# 
   766  061A                     	;# 
   767  061B                     	;# 
   768  061C                     	;# 
   769  061C                     	;# 
   770  061F                     	;# 
   771  0691                     	;# 
   772  0692                     	;# 
   773  0693                     	;# 
   774  0694                     	;# 
   775  0695                     	;# 
   776  0696                     	;# 
   777  0697                     	;# 
   778  0698                     	;# 
   779  0699                     	;# 
   780  0711                     	;# 
   781  0712                     	;# 
   782  0713                     	;# 
   783  0714                     	;# 
   784  0715                     	;# 
   785  0716                     	;# 
   786  0717                     	;# 
   787  0718                     	;# 
   788  0719                     	;# 
   789  0891                     	;# 
   790  0891                     	;# 
   791  0891                     	;# 
   792  0891                     	;# 
   793  0891                     	;# 
   794  0891                     	;# 
   795  0892                     	;# 
   796  0892                     	;# 
   797  0892                     	;# 
   798  0893                     	;# 
   799  0893                     	;# 
   800  0893                     	;# 
   801  0893                     	;# 
   802  0893                     	;# 
   803  0893                     	;# 
   804  0894                     	;# 
   805  0894                     	;# 
   806  0894                     	;# 
   807  0895                     	;# 
   808  0895                     	;# 
   809  0895                     	;# 
   810  0896                     	;# 
   811  0896                     	;# 
   812  0896                     	;# 
   813  089B                     	;# 
   814  0911                     	;# 
   815  0912                     	;# 
   816  0913                     	;# 
   817  0914                     	;# 
   818  0915                     	;# 
   819  0916                     	;# 
   820  0918                     	;# 
   821  0919                     	;# 
   822  091A                     	;# 
   823  091B                     	;# 
   824  091C                     	;# 
   825  091D                     	;# 
   826  091E                     	;# 
   827  091F                     	;# 
   828  0E0F                     	;# 
   829  0E10                     	;# 
   830  0E11                     	;# 
   831  0E12                     	;# 
   832  0E13                     	;# 
   833  0E14                     	;# 
   834  0E15                     	;# 
   835  0E16                     	;# 
   836  0E17                     	;# 
   837  0E18                     	;# 
   838  0E19                     	;# 
   839  0E1A                     	;# 
   840  0E1B                     	;# 
   841  0E1C                     	;# 
   842  0E1D                     	;# 
   843  0E1E                     	;# 
   844  0E1F                     	;# 
   845  0E20                     	;# 
   846  0E21                     	;# 
   847  0E22                     	;# 
   848  0E24                     	;# 
   849  0E25                     	;# 
   850  0E28                     	;# 
   851  0E29                     	;# 
   852  0E2A                     	;# 
   853  0E2B                     	;# 
   854  0E2C                     	;# 
   855  0E2D                     	;# 
   856  0E2E                     	;# 
   857  0E2F                     	;# 
   858  0E90                     	;# 
   859  0E91                     	;# 
   860  0E92                     	;# 
   861  0E94                     	;# 
   862  0E95                     	;# 
   863  0E9C                     	;# 
   864  0E9D                     	;# 
   865  0E9E                     	;# 
   866  0E9F                     	;# 
   867  0EA0                     	;# 
   868  0EA1                     	;# 
   869  0EA2                     	;# 
   870  0EA3                     	;# 
   871  0EA4                     	;# 
   872  0EA5                     	;# 
   873  0EA6                     	;# 
   874  0EA7                     	;# 
   875  0F0F                     	;# 
   876  0F10                     	;# 
   877  0F11                     	;# 
   878  0F12                     	;# 
   879  0F13                     	;# 
   880  0F14                     	;# 
   881  0F15                     	;# 
   882  0F16                     	;# 
   883  0F17                     	;# 
   884  0F18                     	;# 
   885  0F19                     	;# 
   886  0F1A                     	;# 
   887  0F1B                     	;# 
   888  0F1C                     	;# 
   889  0F1D                     	;# 
   890  0F1E                     	;# 
   891  0F1F                     	;# 
   892  0F20                     	;# 
   893  0F21                     	;# 
   894  0F22                     	;# 
   895  0F23                     	;# 
   896  0F24                     	;# 
   897  0F25                     	;# 
   898  0F26                     	;# 
   899  0F27                     	;# 
   900  0F28                     	;# 
   901  0F29                     	;# 
   902  0F2A                     	;# 
   903  0F2B                     	;# 
   904  0F2C                     	;# 
   905  0F2D                     	;# 
   906  0F2E                     	;# 
   907  0F2F                     	;# 
   908  0F30                     	;# 
   909  0F31                     	;# 
   910  0F32                     	;# 
   911  0F33                     	;# 
   912  0F34                     	;# 
   913  0F35                     	;# 
   914  0F36                     	;# 
   915  0F37                     	;# 
   916  0FE4                     	;# 
   917  0FE5                     	;# 
   918  0FE6                     	;# 
   919  0FE7                     	;# 
   920  0FE8                     	;# 
   921  0FE9                     	;# 
   922  0FEA                     	;# 
   923  0FEB                     	;# 
   924  0FED                     	;# 
   925  0FEE                     	;# 
   926  0FEF                     	;# 
   927  0000                     	;# 
   928  0001                     	;# 
   929  0002                     	;# 
   930  0003                     	;# 
   931  0004                     	;# 
   932  0005                     	;# 
   933  0006                     	;# 
   934  0007                     	;# 
   935  0008                     	;# 
   936  0009                     	;# 
   937  000A                     	;# 
   938  000B                     	;# 
   939  000C                     	;# 
   940  000D                     	;# 
   941  000E                     	;# 
   942  0010                     	;# 
   943  0011                     	;# 
   944  0012                     	;# 
   945  0013                     	;# 
   946  0014                     	;# 
   947  0015                     	;# 
   948  0015                     	;# 
   949  0016                     	;# 
   950  0016                     	;# 
   951  0017                     	;# 
   952  0018                     	;# 
   953  0019                     	;# 
   954  0019                     	;# 
   955  001A                     	;# 
   956  001B                     	;# 
   957  001C                     	;# 
   958  001D                     	;# 
   959  001E                     	;# 
   960  001F                     	;# 
   961  008C                     	;# 
   962  008D                     	;# 
   963  008E                     	;# 
   964  0090                     	;# 
   965  0091                     	;# 
   966  0092                     	;# 
   967  0093                     	;# 
   968  0094                     	;# 
   969  0097                     	;# 
   970  009B                     	;# 
   971  009B                     	;# 
   972  009C                     	;# 
   973  009D                     	;# 
   974  009E                     	;# 
   975  009F                     	;# 
   976  010C                     	;# 
   977  010D                     	;# 
   978  010E                     	;# 
   979  0111                     	;# 
   980  0112                     	;# 
   981  0113                     	;# 
   982  0114                     	;# 
   983  0115                     	;# 
   984  0116                     	;# 
   985  0117                     	;# 
   986  0118                     	;# 
   987  0119                     	;# 
   988  018C                     	;# 
   989  018D                     	;# 
   990  018E                     	;# 
   991  0197                     	;# 
   992  0199                     	;# 
   993  0199                     	;# 
   994  0199                     	;# 
   995  019A                     	;# 
   996  019A                     	;# 
   997  019A                     	;# 
   998  019B                     	;# 
   999  019B                     	;# 
  1000  019B                     	;# 
  1001  019B                     	;# 
  1002  019B                     	;# 
  1003  019C                     	;# 
  1004  019C                     	;# 
  1005  019C                     	;# 
  1006  019D                     	;# 
  1007  019D                     	;# 
  1008  019D                     	;# 
  1009  019E                     	;# 
  1010  019E                     	;# 
  1011  019E                     	;# 
  1012  019F                     	;# 
  1013  019F                     	;# 
  1014  019F                     	;# 
  1015  019F                     	;# 
  1016  019F                     	;# 
  1017  020C                     	;# 
  1018  020D                     	;# 
  1019  020E                     	;# 
  1020  0211                     	;# 
  1021  0211                     	;# 
  1022  0212                     	;# 
  1023  0212                     	;# 
  1024  0213                     	;# 
  1025  0213                     	;# 
  1026  0214                     	;# 
  1027  0214                     	;# 
  1028  0215                     	;# 
  1029  0215                     	;# 
  1030  0215                     	;# 
  1031  0215                     	;# 
  1032  0216                     	;# 
  1033  0216                     	;# 
  1034  0217                     	;# 
  1035  0217                     	;# 
  1036  0219                     	;# 
  1037  021A                     	;# 
  1038  021B                     	;# 
  1039  021C                     	;# 
  1040  021D                     	;# 
  1041  021D                     	;# 
  1042  021E                     	;# 
  1043  021F                     	;# 
  1044  028C                     	;# 
  1045  028D                     	;# 
  1046  028E                     	;# 
  1047  0291                     	;# 
  1048  0291                     	;# 
  1049  0292                     	;# 
  1050  0293                     	;# 
  1051  0294                     	;# 
  1052  0295                     	;# 
  1053  0295                     	;# 
  1054  0296                     	;# 
  1055  0297                     	;# 
  1056  0298                     	;# 
  1057  029F                     	;# 
  1058  030C                     	;# 
  1059  030D                     	;# 
  1060  030E                     	;# 
  1061  0311                     	;# 
  1062  0311                     	;# 
  1063  0312                     	;# 
  1064  0313                     	;# 
  1065  0314                     	;# 
  1066  0315                     	;# 
  1067  0315                     	;# 
  1068  0316                     	;# 
  1069  0317                     	;# 
  1070  0318                     	;# 
  1071  038C                     	;# 
  1072  038D                     	;# 
  1073  038E                     	;# 
  1074  0391                     	;# 
  1075  0392                     	;# 
  1076  0393                     	;# 
  1077  0394                     	;# 
  1078  0395                     	;# 
  1079  0396                     	;# 
  1080  0397                     	;# 
  1081  0398                     	;# 
  1082  0399                     	;# 
  1083  039A                     	;# 
  1084  039C                     	;# 
  1085  039D                     	;# 
  1086  039E                     	;# 
  1087  039F                     	;# 
  1088  0411                     	;# 
  1089  0411                     	;# 
  1090  0412                     	;# 
  1091  0413                     	;# 
  1092  0414                     	;# 
  1093  0415                     	;# 
  1094  0416                     	;# 
  1095  0417                     	;# 
  1096  0418                     	;# 
  1097  0418                     	;# 
  1098  0419                     	;# 
  1099  041A                     	;# 
  1100  041B                     	;# 
  1101  041C                     	;# 
  1102  041D                     	;# 
  1103  041E                     	;# 
  1104  041F                     	;# 
  1105  0498                     	;# 
  1106  0498                     	;# 
  1107  0499                     	;# 
  1108  049A                     	;# 
  1109  049B                     	;# 
  1110  049B                     	;# 
  1111  049C                     	;# 
  1112  049D                     	;# 
  1113  049E                     	;# 
  1114  049F                     	;# 
  1115  0617                     	;# 
  1116  0618                     	;# 
  1117  0619                     	;# 
  1118  0619                     	;# 
  1119  061A                     	;# 
  1120  061B                     	;# 
  1121  061C                     	;# 
  1122  061C                     	;# 
  1123  061F                     	;# 
  1124  0691                     	;# 
  1125  0692                     	;# 
  1126  0693                     	;# 
  1127  0694                     	;# 
  1128  0695                     	;# 
  1129  0696                     	;# 
  1130  0697                     	;# 
  1131  0698                     	;# 
  1132  0699                     	;# 
  1133  0711                     	;# 
  1134  0712                     	;# 
  1135  0713                     	;# 
  1136  0714                     	;# 
  1137  0715                     	;# 
  1138  0716                     	;# 
  1139  0717                     	;# 
  1140  0718                     	;# 
  1141  0719                     	;# 
  1142  0891                     	;# 
  1143  0891                     	;# 
  1144  0891                     	;# 
  1145  0891                     	;# 
  1146  0891                     	;# 
  1147  0891                     	;# 
  1148  0892                     	;# 
  1149  0892                     	;# 
  1150  0892                     	;# 
  1151  0893                     	;# 
  1152  0893                     	;# 
  1153  0893                     	;# 
  1154  0893                     	;# 
  1155  0893                     	;# 
  1156  0893                     	;# 
  1157  0894                     	;# 
  1158  0894                     	;# 
  1159  0894                     	;# 
  1160  0895                     	;# 
  1161  0895                     	;# 
  1162  0895                     	;# 
  1163  0896                     	;# 
  1164  0896                     	;# 
  1165  0896                     	;# 
  1166  089B                     	;# 
  1167  0911                     	;# 
  1168  0912                     	;# 
  1169  0913                     	;# 
  1170  0914                     	;# 
  1171  0915                     	;# 
  1172  0916                     	;# 
  1173  0918                     	;# 
  1174  0919                     	;# 
  1175  091A                     	;# 
  1176  091B                     	;# 
  1177  091C                     	;# 
  1178  091D                     	;# 
  1179  091E                     	;# 
  1180  091F                     	;# 
  1181  0E0F                     	;# 
  1182  0E10                     	;# 
  1183  0E11                     	;# 
  1184  0E12                     	;# 
  1185  0E13                     	;# 
  1186  0E14                     	;# 
  1187  0E15                     	;# 
  1188  0E16                     	;# 
  1189  0E17                     	;# 
  1190  0E18                     	;# 
  1191  0E19                     	;# 
  1192  0E1A                     	;# 
  1193  0E1B                     	;# 
  1194  0E1C                     	;# 
  1195  0E1D                     	;# 
  1196  0E1E                     	;# 
  1197  0E1F                     	;# 
  1198  0E20                     	;# 
  1199  0E21                     	;# 
  1200  0E22                     	;# 
  1201  0E24                     	;# 
  1202  0E25                     	;# 
  1203  0E28                     	;# 
  1204  0E29                     	;# 
  1205  0E2A                     	;# 
  1206  0E2B                     	;# 
  1207  0E2C                     	;# 
  1208  0E2D                     	;# 
  1209  0E2E                     	;# 
  1210  0E2F                     	;# 
  1211  0E90                     	;# 
  1212  0E91                     	;# 
  1213  0E92                     	;# 
  1214  0E94                     	;# 
  1215  0E95                     	;# 
  1216  0E9C                     	;# 
  1217  0E9D                     	;# 
  1218  0E9E                     	;# 
  1219  0E9F                     	;# 
  1220  0EA0                     	;# 
  1221  0EA1                     	;# 
  1222  0EA2                     	;# 
  1223  0EA3                     	;# 
  1224  0EA4                     	;# 
  1225  0EA5                     	;# 
  1226  0EA6                     	;# 
  1227  0EA7                     	;# 
  1228  0F0F                     	;# 
  1229  0F10                     	;# 
  1230  0F11                     	;# 
  1231  0F12                     	;# 
  1232  0F13                     	;# 
  1233  0F14                     	;# 
  1234  0F15                     	;# 
  1235  0F16                     	;# 
  1236  0F17                     	;# 
  1237  0F18                     	;# 
  1238  0F19                     	;# 
  1239  0F1A                     	;# 
  1240  0F1B                     	;# 
  1241  0F1C                     	;# 
  1242  0F1D                     	;# 
  1243  0F1E                     	;# 
  1244  0F1F                     	;# 
  1245  0F20                     	;# 
  1246  0F21                     	;# 
  1247  0F22                     	;# 
  1248  0F23                     	;# 
  1249  0F24                     	;# 
  1250  0F25                     	;# 
  1251  0F26                     	;# 
  1252  0F27                     	;# 
  1253  0F28                     	;# 
  1254  0F29                     	;# 
  1255  0F2A                     	;# 
  1256  0F2B                     	;# 
  1257  0F2C                     	;# 
  1258  0F2D                     	;# 
  1259  0F2E                     	;# 
  1260  0F2F                     	;# 
  1261  0F30                     	;# 
  1262  0F31                     	;# 
  1263  0F32                     	;# 
  1264  0F33                     	;# 
  1265  0F34                     	;# 
  1266  0F35                     	;# 
  1267  0F36                     	;# 
  1268  0F37                     	;# 
  1269  0FE4                     	;# 
  1270  0FE5                     	;# 
  1271  0FE6                     	;# 
  1272  0FE7                     	;# 
  1273  0FE8                     	;# 
  1274  0FE9                     	;# 
  1275  0FEA                     	;# 
  1276  0FEB                     	;# 
  1277  0FED                     	;# 
  1278  0FEE                     	;# 
  1279  0FEF                     	;# 
  1280  0000                     	;# 
  1281  0001                     	;# 
  1282  0002                     	;# 
  1283  0003                     	;# 
  1284  0004                     	;# 
  1285  0005                     	;# 
  1286  0006                     	;# 
  1287  0007                     	;# 
  1288  0008                     	;# 
  1289  0009                     	;# 
  1290  000A                     	;# 
  1291  000B                     	;# 
  1292  000C                     	;# 
  1293  000D                     	;# 
  1294  000E                     	;# 
  1295  0010                     	;# 
  1296  0011                     	;# 
  1297  0012                     	;# 
  1298  0013                     	;# 
  1299  0014                     	;# 
  1300  0015                     	;# 
  1301  0015                     	;# 
  1302  0016                     	;# 
  1303  0016                     	;# 
  1304  0017                     	;# 
  1305  0018                     	;# 
  1306  0019                     	;# 
  1307  0019                     	;# 
  1308  001A                     	;# 
  1309  001B                     	;# 
  1310  001C                     	;# 
  1311  001D                     	;# 
  1312  001E                     	;# 
  1313  001F                     	;# 
  1314  008C                     	;# 
  1315  008D                     	;# 
  1316  008E                     	;# 
  1317  0090                     	;# 
  1318  0091                     	;# 
  1319  0092                     	;# 
  1320  0093                     	;# 
  1321  0094                     	;# 
  1322  0097                     	;# 
  1323  009B                     	;# 
  1324  009B                     	;# 
  1325  009C                     	;# 
  1326  009D                     	;# 
  1327  009E                     	;# 
  1328  009F                     	;# 
  1329  010C                     	;# 
  1330  010D                     	;# 
  1331  010E                     	;# 
  1332  0111                     	;# 
  1333  0112                     	;# 
  1334  0113                     	;# 
  1335  0114                     	;# 
  1336  0115                     	;# 
  1337  0116                     	;# 
  1338  0117                     	;# 
  1339  0118                     	;# 
  1340  0119                     	;# 
  1341  018C                     	;# 
  1342  018D                     	;# 
  1343  018E                     	;# 
  1344  0197                     	;# 
  1345  0199                     	;# 
  1346  0199                     	;# 
  1347  0199                     	;# 
  1348  019A                     	;# 
  1349  019A                     	;# 
  1350  019A                     	;# 
  1351  019B                     	;# 
  1352  019B                     	;# 
  1353  019B                     	;# 
  1354  019B                     	;# 
  1355  019B                     	;# 
  1356  019C                     	;# 
  1357  019C                     	;# 
  1358  019C                     	;# 
  1359  019D                     	;# 
  1360  019D                     	;# 
  1361  019D                     	;# 
  1362  019E                     	;# 
  1363  019E                     	;# 
  1364  019E                     	;# 
  1365  019F                     	;# 
  1366  019F                     	;# 
  1367  019F                     	;# 
  1368  019F                     	;# 
  1369  019F                     	;# 
  1370  020C                     	;# 
  1371  020D                     	;# 
  1372  020E                     	;# 
  1373  0211                     	;# 
  1374  0211                     	;# 
  1375  0212                     	;# 
  1376  0212                     	;# 
  1377  0213                     	;# 
  1378  0213                     	;# 
  1379  0214                     	;# 
  1380  0214                     	;# 
  1381  0215                     	;# 
  1382  0215                     	;# 
  1383  0215                     	;# 
  1384  0215                     	;# 
  1385  0216                     	;# 
  1386  0216                     	;# 
  1387  0217                     	;# 
  1388  0217                     	;# 
  1389  0219                     	;# 
  1390  021A                     	;# 
  1391  021B                     	;# 
  1392  021C                     	;# 
  1393  021D                     	;# 
  1394  021D                     	;# 
  1395  021E                     	;# 
  1396  021F                     	;# 
  1397  028C                     	;# 
  1398  028D                     	;# 
  1399  028E                     	;# 
  1400  0291                     	;# 
  1401  0291                     	;# 
  1402  0292                     	;# 
  1403  0293                     	;# 
  1404  0294                     	;# 
  1405  0295                     	;# 
  1406  0295                     	;# 
  1407  0296                     	;# 
  1408  0297                     	;# 
  1409  0298                     	;# 
  1410  029F                     	;# 
  1411  030C                     	;# 
  1412  030D                     	;# 
  1413  030E                     	;# 
  1414  0311                     	;# 
  1415  0311                     	;# 
  1416  0312                     	;# 
  1417  0313                     	;# 
  1418  0314                     	;# 
  1419  0315                     	;# 
  1420  0315                     	;# 
  1421  0316                     	;# 
  1422  0317                     	;# 
  1423  0318                     	;# 
  1424  038C                     	;# 
  1425  038D                     	;# 
  1426  038E                     	;# 
  1427  0391                     	;# 
  1428  0392                     	;# 
  1429  0393                     	;# 
  1430  0394                     	;# 
  1431  0395                     	;# 
  1432  0396                     	;# 
  1433  0397                     	;# 
  1434  0398                     	;# 
  1435  0399                     	;# 
  1436  039A                     	;# 
  1437  039C                     	;# 
  1438  039D                     	;# 
  1439  039E                     	;# 
  1440  039F                     	;# 
  1441  0411                     	;# 
  1442  0411                     	;# 
  1443  0412                     	;# 
  1444  0413                     	;# 
  1445  0414                     	;# 
  1446  0415                     	;# 
  1447  0416                     	;# 
  1448  0417                     	;# 
  1449  0418                     	;# 
  1450  0418                     	;# 
  1451  0419                     	;# 
  1452  041A                     	;# 
  1453  041B                     	;# 
  1454  041C                     	;# 
  1455  041D                     	;# 
  1456  041E                     	;# 
  1457  041F                     	;# 
  1458  0498                     	;# 
  1459  0498                     	;# 
  1460  0499                     	;# 
  1461  049A                     	;# 
  1462  049B                     	;# 
  1463  049B                     	;# 
  1464  049C                     	;# 
  1465  049D                     	;# 
  1466  049E                     	;# 
  1467  049F                     	;# 
  1468  0617                     	;# 
  1469  0618                     	;# 
  1470  0619                     	;# 
  1471  0619                     	;# 
  1472  061A                     	;# 
  1473  061B                     	;# 
  1474  061C                     	;# 
  1475  061C                     	;# 
  1476  061F                     	;# 
  1477  0691                     	;# 
  1478  0692                     	;# 
  1479  0693                     	;# 
  1480  0694                     	;# 
  1481  0695                     	;# 
  1482  0696                     	;# 
  1483  0697                     	;# 
  1484  0698                     	;# 
  1485  0699                     	;# 
  1486  0711                     	;# 
  1487  0712                     	;# 
  1488  0713                     	;# 
  1489  0714                     	;# 
  1490  0715                     	;# 
  1491  0716                     	;# 
  1492  0717                     	;# 
  1493  0718                     	;# 
  1494  0719                     	;# 
  1495  0891                     	;# 
  1496  0891                     	;# 
  1497  0891                     	;# 
  1498  0891                     	;# 
  1499  0891                     	;# 
  1500  0891                     	;# 
  1501  0892                     	;# 
  1502  0892                     	;# 
  1503  0892                     	;# 
  1504  0893                     	;# 
  1505  0893                     	;# 
  1506  0893                     	;# 
  1507  0893                     	;# 
  1508  0893                     	;# 
  1509  0893                     	;# 
  1510  0894                     	;# 
  1511  0894                     	;# 
  1512  0894                     	;# 
  1513  0895                     	;# 
  1514  0895                     	;# 
  1515  0895                     	;# 
  1516  0896                     	;# 
  1517  0896                     	;# 
  1518  0896                     	;# 
  1519  089B                     	;# 
  1520  0911                     	;# 
  1521  0912                     	;# 
  1522  0913                     	;# 
  1523  0914                     	;# 
  1524  0915                     	;# 
  1525  0916                     	;# 
  1526  0918                     	;# 
  1527  0919                     	;# 
  1528  091A                     	;# 
  1529  091B                     	;# 
  1530  091C                     	;# 
  1531  091D                     	;# 
  1532  091E                     	;# 
  1533  091F                     	;# 
  1534  0E0F                     	;# 
  1535  0E10                     	;# 
  1536  0E11                     	;# 
  1537  0E12                     	;# 
  1538  0E13                     	;# 
  1539  0E14                     	;# 
  1540  0E15                     	;# 
  1541  0E16                     	;# 
  1542  0E17                     	;# 
  1543  0E18                     	;# 
  1544  0E19                     	;# 
  1545  0E1A                     	;# 
  1546  0E1B                     	;# 
  1547  0E1C                     	;# 
  1548  0E1D                     	;# 
  1549  0E1E                     	;# 
  1550  0E1F                     	;# 
  1551  0E20                     	;# 
  1552  0E21                     	;# 
  1553  0E22                     	;# 
  1554  0E24                     	;# 
  1555  0E25                     	;# 
  1556  0E28                     	;# 
  1557  0E29                     	;# 
  1558  0E2A                     	;# 
  1559  0E2B                     	;# 
  1560  0E2C                     	;# 
  1561  0E2D                     	;# 
  1562  0E2E                     	;# 
  1563  0E2F                     	;# 
  1564  0E90                     	;# 
  1565  0E91                     	;# 
  1566  0E92                     	;# 
  1567  0E94                     	;# 
  1568  0E95                     	;# 
  1569  0E9C                     	;# 
  1570  0E9D                     	;# 
  1571  0E9E                     	;# 
  1572  0E9F                     	;# 
  1573  0EA0                     	;# 
  1574  0EA1                     	;# 
  1575  0EA2                     	;# 
  1576  0EA3                     	;# 
  1577  0EA4                     	;# 
  1578  0EA5                     	;# 
  1579  0EA6                     	;# 
  1580  0EA7                     	;# 
  1581  0F0F                     	;# 
  1582  0F10                     	;# 
  1583  0F11                     	;# 
  1584  0F12                     	;# 
  1585  0F13                     	;# 
  1586  0F14                     	;# 
  1587  0F15                     	;# 
  1588  0F16                     	;# 
  1589  0F17                     	;# 
  1590  0F18                     	;# 
  1591  0F19                     	;# 
  1592  0F1A                     	;# 
  1593  0F1B                     	;# 
  1594  0F1C                     	;# 
  1595  0F1D                     	;# 
  1596  0F1E                     	;# 
  1597  0F1F                     	;# 
  1598  0F20                     	;# 
  1599  0F21                     	;# 
  1600  0F22                     	;# 
  1601  0F23                     	;# 
  1602  0F24                     	;# 
  1603  0F25                     	;# 
  1604  0F26                     	;# 
  1605  0F27                     	;# 
  1606  0F28                     	;# 
  1607  0F29                     	;# 
  1608  0F2A                     	;# 
  1609  0F2B                     	;# 
  1610  0F2C                     	;# 
  1611  0F2D                     	;# 
  1612  0F2E                     	;# 
  1613  0F2F                     	;# 
  1614  0F30                     	;# 
  1615  0F31                     	;# 
  1616  0F32                     	;# 
  1617  0F33                     	;# 
  1618  0F34                     	;# 
  1619  0F35                     	;# 
  1620  0F36                     	;# 
  1621  0F37                     	;# 
  1622  0FE4                     	;# 
  1623  0FE5                     	;# 
  1624  0FE6                     	;# 
  1625  0FE7                     	;# 
  1626  0FE8                     	;# 
  1627  0FE9                     	;# 
  1628  0FEA                     	;# 
  1629  0FEB                     	;# 
  1630  0FED                     	;# 
  1631  0FEE                     	;# 
  1632  0FEF                     	;# 
  1633  0000                     	;# 
  1634  0001                     	;# 
  1635  0002                     	;# 
  1636  0003                     	;# 
  1637  0004                     	;# 
  1638  0005                     	;# 
  1639  0006                     	;# 
  1640  0007                     	;# 
  1641  0008                     	;# 
  1642  0009                     	;# 
  1643  000A                     	;# 
  1644  000B                     	;# 
  1645  000C                     	;# 
  1646  000D                     	;# 
  1647  000E                     	;# 
  1648  0010                     	;# 
  1649  0011                     	;# 
  1650  0012                     	;# 
  1651  0013                     	;# 
  1652  0014                     	;# 
  1653  0015                     	;# 
  1654  0015                     	;# 
  1655  0016                     	;# 
  1656  0016                     	;# 
  1657  0017                     	;# 
  1658  0018                     	;# 
  1659  0019                     	;# 
  1660  0019                     	;# 
  1661  001A                     	;# 
  1662  001B                     	;# 
  1663  001C                     	;# 
  1664  001D                     	;# 
  1665  001E                     	;# 
  1666  001F                     	;# 
  1667  008C                     	;# 
  1668  008D                     	;# 
  1669  008E                     	;# 
  1670  0090                     	;# 
  1671  0091                     	;# 
  1672  0092                     	;# 
  1673  0093                     	;# 
  1674  0094                     	;# 
  1675  0097                     	;# 
  1676  009B                     	;# 
  1677  009B                     	;# 
  1678  009C                     	;# 
  1679  009D                     	;# 
  1680  009E                     	;# 
  1681  009F                     	;# 
  1682  010C                     	;# 
  1683  010D                     	;# 
  1684  010E                     	;# 
  1685  0111                     	;# 
  1686  0112                     	;# 
  1687  0113                     	;# 
  1688  0114                     	;# 
  1689  0115                     	;# 
  1690  0116                     	;# 
  1691  0117                     	;# 
  1692  0118                     	;# 
  1693  0119                     	;# 
  1694  018C                     	;# 
  1695  018D                     	;# 
  1696  018E                     	;# 
  1697  0197                     	;# 
  1698  0199                     	;# 
  1699  0199                     	;# 
  1700  0199                     	;# 
  1701  019A                     	;# 
  1702  019A                     	;# 
  1703  019A                     	;# 
  1704  019B                     	;# 
  1705  019B                     	;# 
  1706  019B                     	;# 
  1707  019B                     	;# 
  1708  019B                     	;# 
  1709  019C                     	;# 
  1710  019C                     	;# 
  1711  019C                     	;# 
  1712  019D                     	;# 
  1713  019D                     	;# 
  1714  019D                     	;# 
  1715  019E                     	;# 
  1716  019E                     	;# 
  1717  019E                     	;# 
  1718  019F                     	;# 
  1719  019F                     	;# 
  1720  019F                     	;# 
  1721  019F                     	;# 
  1722  019F                     	;# 
  1723  020C                     	;# 
  1724  020D                     	;# 
  1725  020E                     	;# 
  1726  0211                     	;# 
  1727  0211                     	;# 
  1728  0212                     	;# 
  1729  0212                     	;# 
  1730  0213                     	;# 
  1731  0213                     	;# 
  1732  0214                     	;# 
  1733  0214                     	;# 
  1734  0215                     	;# 
  1735  0215                     	;# 
  1736  0215                     	;# 
  1737  0215                     	;# 
  1738  0216                     	;# 
  1739  0216                     	;# 
  1740  0217                     	;# 
  1741  0217                     	;# 
  1742  0219                     	;# 
  1743  021A                     	;# 
  1744  021B                     	;# 
  1745  021C                     	;# 
  1746  021D                     	;# 
  1747  021D                     	;# 
  1748  021E                     	;# 
  1749  021F                     	;# 
  1750  028C                     	;# 
  1751  028D                     	;# 
  1752  028E                     	;# 
  1753  0291                     	;# 
  1754  0291                     	;# 
  1755  0292                     	;# 
  1756  0293                     	;# 
  1757  0294                     	;# 
  1758  0295                     	;# 
  1759  0295                     	;# 
  1760  0296                     	;# 
  1761  0297                     	;# 
  1762  0298                     	;# 
  1763  029F                     	;# 
  1764  030C                     	;# 
  1765  030D                     	;# 
  1766  030E                     	;# 
  1767  0311                     	;# 
  1768  0311                     	;# 
  1769  0312                     	;# 
  1770  0313                     	;# 
  1771  0314                     	;# 
  1772  0315                     	;# 
  1773  0315                     	;# 
  1774  0316                     	;# 
  1775  0317                     	;# 
  1776  0318                     	;# 
  1777  038C                     	;# 
  1778  038D                     	;# 
  1779  038E                     	;# 
  1780  0391                     	;# 
  1781  0392                     	;# 
  1782  0393                     	;# 
  1783  0394                     	;# 
  1784  0395                     	;# 
  1785  0396                     	;# 
  1786  0397                     	;# 
  1787  0398                     	;# 
  1788  0399                     	;# 
  1789  039A                     	;# 
  1790  039C                     	;# 
  1791  039D                     	;# 
  1792  039E                     	;# 
  1793  039F                     	;# 
  1794  0411                     	;# 
  1795  0411                     	;# 
  1796  0412                     	;# 
  1797  0413                     	;# 
  1798  0414                     	;# 
  1799  0415                     	;# 
  1800  0416                     	;# 
  1801  0417                     	;# 
  1802  0418                     	;# 
  1803  0418                     	;# 
  1804  0419                     	;# 
  1805  041A                     	;# 
  1806  041B                     	;# 
  1807  041C                     	;# 
  1808  041D                     	;# 
  1809  041E                     	;# 
  1810  041F                     	;# 
  1811  0498                     	;# 
  1812  0498                     	;# 
  1813  0499                     	;# 
  1814  049A                     	;# 
  1815  049B                     	;# 
  1816  049B                     	;# 
  1817  049C                     	;# 
  1818  049D                     	;# 
  1819  049E                     	;# 
  1820  049F                     	;# 
  1821  0617                     	;# 
  1822  0618                     	;# 
  1823  0619                     	;# 
  1824  0619                     	;# 
  1825  061A                     	;# 
  1826  061B                     	;# 
  1827  061C                     	;# 
  1828  061C                     	;# 
  1829  061F                     	;# 
  1830  0691                     	;# 
  1831  0692                     	;# 
  1832  0693                     	;# 
  1833  0694                     	;# 
  1834  0695                     	;# 
  1835  0696                     	;# 
  1836  0697                     	;# 
  1837  0698                     	;# 
  1838  0699                     	;# 
  1839  0711                     	;# 
  1840  0712                     	;# 
  1841  0713                     	;# 
  1842  0714                     	;# 
  1843  0715                     	;# 
  1844  0716                     	;# 
  1845  0717                     	;# 
  1846  0718                     	;# 
  1847  0719                     	;# 
  1848  0891                     	;# 
  1849  0891                     	;# 
  1850  0891                     	;# 
  1851  0891                     	;# 
  1852  0891                     	;# 
  1853  0891                     	;# 
  1854  0892                     	;# 
  1855  0892                     	;# 
  1856  0892                     	;# 
  1857  0893                     	;# 
  1858  0893                     	;# 
  1859  0893                     	;# 
  1860  0893                     	;# 
  1861  0893                     	;# 
  1862  0893                     	;# 
  1863  0894                     	;# 
  1864  0894                     	;# 
  1865  0894                     	;# 
  1866  0895                     	;# 
  1867  0895                     	;# 
  1868  0895                     	;# 
  1869  0896                     	;# 
  1870  0896                     	;# 
  1871  0896                     	;# 
  1872  089B                     	;# 
  1873  0911                     	;# 
  1874  0912                     	;# 
  1875  0913                     	;# 
  1876  0914                     	;# 
  1877  0915                     	;# 
  1878  0916                     	;# 
  1879  0918                     	;# 
  1880  0919                     	;# 
  1881  091A                     	;# 
  1882  091B                     	;# 
  1883  091C                     	;# 
  1884  091D                     	;# 
  1885  091E                     	;# 
  1886  091F                     	;# 
  1887  0E0F                     	;# 
  1888  0E10                     	;# 
  1889  0E11                     	;# 
  1890  0E12                     	;# 
  1891  0E13                     	;# 
  1892  0E14                     	;# 
  1893  0E15                     	;# 
  1894  0E16                     	;# 
  1895  0E17                     	;# 
  1896  0E18                     	;# 
  1897  0E19                     	;# 
  1898  0E1A                     	;# 
  1899  0E1B                     	;# 
  1900  0E1C                     	;# 
  1901  0E1D                     	;# 
  1902  0E1E                     	;# 
  1903  0E1F                     	;# 
  1904  0E20                     	;# 
  1905  0E21                     	;# 
  1906  0E22                     	;# 
  1907  0E24                     	;# 
  1908  0E25                     	;# 
  1909  0E28                     	;# 
  1910  0E29                     	;# 
  1911  0E2A                     	;# 
  1912  0E2B                     	;# 
  1913  0E2C                     	;# 
  1914  0E2D                     	;# 
  1915  0E2E                     	;# 
  1916  0E2F                     	;# 
  1917  0E90                     	;# 
  1918  0E91                     	;# 
  1919  0E92                     	;# 
  1920  0E94                     	;# 
  1921  0E95                     	;# 
  1922  0E9C                     	;# 
  1923  0E9D                     	;# 
  1924  0E9E                     	;# 
  1925  0E9F                     	;# 
  1926  0EA0                     	;# 
  1927  0EA1                     	;# 
  1928  0EA2                     	;# 
  1929  0EA3                     	;# 
  1930  0EA4                     	;# 
  1931  0EA5                     	;# 
  1932  0EA6                     	;# 
  1933  0EA7                     	;# 
  1934  0F0F                     	;# 
  1935  0F10                     	;# 
  1936  0F11                     	;# 
  1937  0F12                     	;# 
  1938  0F13                     	;# 
  1939  0F14                     	;# 
  1940  0F15                     	;# 
  1941  0F16                     	;# 
  1942  0F17                     	;# 
  1943  0F18                     	;# 
  1944  0F19                     	;# 
  1945  0F1A                     	;# 
  1946  0F1B                     	;# 
  1947  0F1C                     	;# 
  1948  0F1D                     	;# 
  1949  0F1E                     	;# 
  1950  0F1F                     	;# 
  1951  0F20                     	;# 
  1952  0F21                     	;# 
  1953  0F22                     	;# 
  1954  0F23                     	;# 
  1955  0F24                     	;# 
  1956  0F25                     	;# 
  1957  0F26                     	;# 
  1958  0F27                     	;# 
  1959  0F28                     	;# 
  1960  0F29                     	;# 
  1961  0F2A                     	;# 
  1962  0F2B                     	;# 
  1963  0F2C                     	;# 
  1964  0F2D                     	;# 
  1965  0F2E                     	;# 
  1966  0F2F                     	;# 
  1967  0F30                     	;# 
  1968  0F31                     	;# 
  1969  0F32                     	;# 
  1970  0F33                     	;# 
  1971  0F34                     	;# 
  1972  0F35                     	;# 
  1973  0F36                     	;# 
  1974  0F37                     	;# 
  1975  0FE4                     	;# 
  1976  0FE5                     	;# 
  1977  0FE6                     	;# 
  1978  0FE7                     	;# 
  1979  0FE8                     	;# 
  1980  0FE9                     	;# 
  1981  0FEA                     	;# 
  1982  0FEB                     	;# 
  1983  0FED                     	;# 
  1984  0FEE                     	;# 
  1985  0FEF                     	;# 
  1986  0000                     	;# 
  1987  0001                     	;# 
  1988  0002                     	;# 
  1989  0003                     	;# 
  1990  0004                     	;# 
  1991  0005                     	;# 
  1992  0006                     	;# 
  1993  0007                     	;# 
  1994  0008                     	;# 
  1995  0009                     	;# 
  1996  000A                     	;# 
  1997  000B                     	;# 
  1998  000C                     	;# 
  1999  000D                     	;# 
  2000  000E                     	;# 
  2001  0010                     	;# 
  2002  0011                     	;# 
  2003  0012                     	;# 
  2004  0013                     	;# 
  2005  0014                     	;# 
  2006  0015                     	;# 
  2007  0015                     	;# 
  2008  0016                     	;# 
  2009  0016                     	;# 
  2010  0017                     	;# 
  2011  0018                     	;# 
  2012  0019                     	;# 
  2013  0019                     	;# 
  2014  001A                     	;# 
  2015  001B                     	;# 
  2016  001C                     	;# 
  2017  001D                     	;# 
  2018  001E                     	;# 
  2019  001F                     	;# 
  2020  008C                     	;# 
  2021  008D                     	;# 
  2022  008E                     	;# 
  2023  0090                     	;# 
  2024  0091                     	;# 
  2025  0092                     	;# 
  2026  0093                     	;# 
  2027  0094                     	;# 
  2028  0097                     	;# 
  2029  009B                     	;# 
  2030  009B                     	;# 
  2031  009C                     	;# 
  2032  009D                     	;# 
  2033  009E                     	;# 
  2034  009F                     	;# 
  2035  010C                     	;# 
  2036  010D                     	;# 
  2037  010E                     	;# 
  2038  0111                     	;# 
  2039  0112                     	;# 
  2040  0113                     	;# 
  2041  0114                     	;# 
  2042  0115                     	;# 
  2043  0116                     	;# 
  2044  0117                     	;# 
  2045  0118                     	;# 
  2046  0119                     	;# 
  2047  018C                     	;# 
  2048  018D                     	;# 
  2049  018E                     	;# 
  2050  0197                     	;# 
  2051  0199                     	;# 
  2052  0199                     	;# 
  2053  0199                     	;# 
  2054  019A                     	;# 
  2055  019A                     	;# 
  2056  019A                     	;# 
  2057  019B                     	;# 
  2058  019B                     	;# 
  2059  019B                     	;# 
  2060  019B                     	;# 
  2061  019B                     	;# 
  2062  019C                     	;# 
  2063  019C                     	;# 
  2064  019C                     	;# 
  2065  019D                     	;# 
  2066  019D                     	;# 
  2067  019D                     	;# 
  2068  019E                     	;# 
  2069  019E                     	;# 
  2070  019E                     	;# 
  2071  019F                     	;# 
  2072  019F                     	;# 
  2073  019F                     	;# 
  2074  019F                     	;# 
  2075  019F                     	;# 
  2076  020C                     	;# 
  2077  020D                     	;# 
  2078  020E                     	;# 
  2079  0211                     	;# 
  2080  0211                     	;# 
  2081  0212                     	;# 
  2082  0212                     	;# 
  2083  0213                     	;# 
  2084  0213                     	;# 
  2085  0214                     	;# 
  2086  0214                     	;# 
  2087  0215                     	;# 
  2088  0215                     	;# 
  2089  0215                     	;# 
  2090  0215                     	;# 
  2091  0216                     	;# 
  2092  0216                     	;# 
  2093  0217                     	;# 
  2094  0217                     	;# 
  2095  0219                     	;# 
  2096  021A                     	;# 
  2097  021B                     	;# 
  2098  021C                     	;# 
  2099  021D                     	;# 
  2100  021D                     	;# 
  2101  021E                     	;# 
  2102  021F                     	;# 
  2103  028C                     	;# 
  2104  028D                     	;# 
  2105  028E                     	;# 
  2106  0291                     	;# 
  2107  0291                     	;# 
  2108  0292                     	;# 
  2109  0293                     	;# 
  2110  0294                     	;# 
  2111  0295                     	;# 
  2112  0295                     	;# 
  2113  0296                     	;# 
  2114  0297                     	;# 
  2115  0298                     	;# 
  2116  029F                     	;# 
  2117  030C                     	;# 
  2118  030D                     	;# 
  2119  030E                     	;# 
  2120  0311                     	;# 
  2121  0311                     	;# 
  2122  0312                     	;# 
  2123  0313                     	;# 
  2124  0314                     	;# 
  2125  0315                     	;# 
  2126  0315                     	;# 
  2127  0316                     	;# 
  2128  0317                     	;# 
  2129  0318                     	;# 
  2130  038C                     	;# 
  2131  038D                     	;# 
  2132  038E                     	;# 
  2133  0391                     	;# 
  2134  0392                     	;# 
  2135  0393                     	;# 
  2136  0394                     	;# 
  2137  0395                     	;# 
  2138  0396                     	;# 
  2139  0397                     	;# 
  2140  0398                     	;# 
  2141  0399                     	;# 
  2142  039A                     	;# 
  2143  039C                     	;# 
  2144  039D                     	;# 
  2145  039E                     	;# 
  2146  039F                     	;# 
  2147  0411                     	;# 
  2148  0411                     	;# 
  2149  0412                     	;# 
  2150  0413                     	;# 
  2151  0414                     	;# 
  2152  0415                     	;# 
  2153  0416                     	;# 
  2154  0417                     	;# 
  2155  0418                     	;# 
  2156  0418                     	;# 
  2157  0419                     	;# 
  2158  041A                     	;# 
  2159  041B                     	;# 
  2160  041C                     	;# 
  2161  041D                     	;# 
  2162  041E                     	;# 
  2163  041F                     	;# 
  2164  0498                     	;# 
  2165  0498                     	;# 
  2166  0499                     	;# 
  2167  049A                     	;# 
  2168  049B                     	;# 
  2169  049B                     	;# 
  2170  049C                     	;# 
  2171  049D                     	;# 
  2172  049E                     	;# 
  2173  049F                     	;# 
  2174  0617                     	;# 
  2175  0618                     	;# 
  2176  0619                     	;# 
  2177  0619                     	;# 
  2178  061A                     	;# 
  2179  061B                     	;# 
  2180  061C                     	;# 
  2181  061C                     	;# 
  2182  061F                     	;# 
  2183  0691                     	;# 
  2184  0692                     	;# 
  2185  0693                     	;# 
  2186  0694                     	;# 
  2187  0695                     	;# 
  2188  0696                     	;# 
  2189  0697                     	;# 
  2190  0698                     	;# 
  2191  0699                     	;# 
  2192  0711                     	;# 
  2193  0712                     	;# 
  2194  0713                     	;# 
  2195  0714                     	;# 
  2196  0715                     	;# 
  2197  0716                     	;# 
  2198  0717                     	;# 
  2199  0718                     	;# 
  2200  0719                     	;# 
  2201  0891                     	;# 
  2202  0891                     	;# 
  2203  0891                     	;# 
  2204  0891                     	;# 
  2205  0891                     	;# 
  2206  0891                     	;# 
  2207  0892                     	;# 
  2208  0892                     	;# 
  2209  0892                     	;# 
  2210  0893                     	;# 
  2211  0893                     	;# 
  2212  0893                     	;# 
  2213  0893                     	;# 
  2214  0893                     	;# 
  2215  0893                     	;# 
  2216  0894                     	;# 
  2217  0894                     	;# 
  2218  0894                     	;# 
  2219  0895                     	;# 
  2220  0895                     	;# 
  2221  0895                     	;# 
  2222  0896                     	;# 
  2223  0896                     	;# 
  2224  0896                     	;# 
  2225  089B                     	;# 
  2226  0911                     	;# 
  2227  0912                     	;# 
  2228  0913                     	;# 
  2229  0914                     	;# 
  2230  0915                     	;# 
  2231  0916                     	;# 
  2232  0918                     	;# 
  2233  0919                     	;# 
  2234  091A                     	;# 
  2235  091B                     	;# 
  2236  091C                     	;# 
  2237  091D                     	;# 
  2238  091E                     	;# 
  2239  091F                     	;# 
  2240  0E0F                     	;# 
  2241  0E10                     	;# 
  2242  0E11                     	;# 
  2243  0E12                     	;# 
  2244  0E13                     	;# 
  2245  0E14                     	;# 
  2246  0E15                     	;# 
  2247  0E16                     	;# 
  2248  0E17                     	;# 
  2249  0E18                     	;# 
  2250  0E19                     	;# 
  2251  0E1A                     	;# 
  2252  0E1B                     	;# 
  2253  0E1C                     	;# 
  2254  0E1D                     	;# 
  2255  0E1E                     	;# 
  2256  0E1F                     	;# 
  2257  0E20                     	;# 
  2258  0E21                     	;# 
  2259  0E22                     	;# 
  2260  0E24                     	;# 
  2261  0E25                     	;# 
  2262  0E28                     	;# 
  2263  0E29                     	;# 
  2264  0E2A                     	;# 
  2265  0E2B                     	;# 
  2266  0E2C                     	;# 
  2267  0E2D                     	;# 
  2268  0E2E                     	;# 
  2269  0E2F                     	;# 
  2270  0E90                     	;# 
  2271  0E91                     	;# 
  2272  0E92                     	;# 
  2273  0E94                     	;# 
  2274  0E95                     	;# 
  2275  0E9C                     	;# 
  2276  0E9D                     	;# 
  2277  0E9E                     	;# 
  2278  0E9F                     	;# 
  2279  0EA0                     	;# 
  2280  0EA1                     	;# 
  2281  0EA2                     	;# 
  2282  0EA3                     	;# 
  2283  0EA4                     	;# 
  2284  0EA5                     	;# 
  2285  0EA6                     	;# 
  2286  0EA7                     	;# 
  2287  0F0F                     	;# 
  2288  0F10                     	;# 
  2289  0F11                     	;# 
  2290  0F12                     	;# 
  2291  0F13                     	;# 
  2292  0F14                     	;# 
  2293  0F15                     	;# 
  2294  0F16                     	;# 
  2295  0F17                     	;# 
  2296  0F18                     	;# 
  2297  0F19                     	;# 
  2298  0F1A                     	;# 
  2299  0F1B                     	;# 
  2300  0F1C                     	;# 
  2301  0F1D                     	;# 
  2302  0F1E                     	;# 
  2303  0F1F                     	;# 
  2304  0F20                     	;# 
  2305  0F21                     	;# 
  2306  0F22                     	;# 
  2307  0F23                     	;# 
  2308  0F24                     	;# 
  2309  0F25                     	;# 
  2310  0F26                     	;# 
  2311  0F27                     	;# 
  2312  0F28                     	;# 
  2313  0F29                     	;# 
  2314  0F2A                     	;# 
  2315  0F2B                     	;# 
  2316  0F2C                     	;# 
  2317  0F2D                     	;# 
  2318  0F2E                     	;# 
  2319  0F2F                     	;# 
  2320  0F30                     	;# 
  2321  0F31                     	;# 
  2322  0F32                     	;# 
  2323  0F33                     	;# 
  2324  0F34                     	;# 
  2325  0F35                     	;# 
  2326  0F36                     	;# 
  2327  0F37                     	;# 
  2328  0FE4                     	;# 
  2329  0FE5                     	;# 
  2330  0FE6                     	;# 
  2331  0FE7                     	;# 
  2332  0FE8                     	;# 
  2333  0FE9                     	;# 
  2334  0FEA                     	;# 
  2335  0FEB                     	;# 
  2336  0FED                     	;# 
  2337  0FEE                     	;# 
  2338  0FEF                     	;# 
  2339  0000                     	;# 
  2340  0001                     	;# 
  2341  0002                     	;# 
  2342  0003                     	;# 
  2343  0004                     	;# 
  2344  0005                     	;# 
  2345  0006                     	;# 
  2346  0007                     	;# 
  2347  0008                     	;# 
  2348  0009                     	;# 
  2349  000A                     	;# 
  2350  000B                     	;# 
  2351  000C                     	;# 
  2352  000D                     	;# 
  2353  000E                     	;# 
  2354  0010                     	;# 
  2355  0011                     	;# 
  2356  0012                     	;# 
  2357  0013                     	;# 
  2358  0014                     	;# 
  2359  0015                     	;# 
  2360  0015                     	;# 
  2361  0016                     	;# 
  2362  0016                     	;# 
  2363  0017                     	;# 
  2364  0018                     	;# 
  2365  0019                     	;# 
  2366  0019                     	;# 
  2367  001A                     	;# 
  2368  001B                     	;# 
  2369  001C                     	;# 
  2370  001D                     	;# 
  2371  001E                     	;# 
  2372  001F                     	;# 
  2373  008C                     	;# 
  2374  008D                     	;# 
  2375  008E                     	;# 
  2376  0090                     	;# 
  2377  0091                     	;# 
  2378  0092                     	;# 
  2379  0093                     	;# 
  2380  0094                     	;# 
  2381  0097                     	;# 
  2382  009B                     	;# 
  2383  009B                     	;# 
  2384  009C                     	;# 
  2385  009D                     	;# 
  2386  009E                     	;# 
  2387  009F                     	;# 
  2388  010C                     	;# 
  2389  010D                     	;# 
  2390  010E                     	;# 
  2391  0111                     	;# 
  2392  0112                     	;# 
  2393  0113                     	;# 
  2394  0114                     	;# 
  2395  0115                     	;# 
  2396  0116                     	;# 
  2397  0117                     	;# 
  2398  0118                     	;# 
  2399  0119                     	;# 
  2400  018C                     	;# 
  2401  018D                     	;# 
  2402  018E                     	;# 
  2403  0197                     	;# 
  2404  0199                     	;# 
  2405  0199                     	;# 
  2406  0199                     	;# 
  2407  019A                     	;# 
  2408  019A                     	;# 
  2409  019A                     	;# 
  2410  019B                     	;# 
  2411  019B                     	;# 
  2412  019B                     	;# 
  2413  019B                     	;# 
  2414  019B                     	;# 
  2415  019C                     	;# 
  2416  019C                     	;# 
  2417  019C                     	;# 
  2418  019D                     	;# 
  2419  019D                     	;# 
  2420  019D                     	;# 
  2421  019E                     	;# 
  2422  019E                     	;# 
  2423  019E                     	;# 
  2424  019F                     	;# 
  2425  019F                     	;# 
  2426  019F                     	;# 
  2427  019F                     	;# 
  2428  019F                     	;# 
  2429  020C                     	;# 
  2430  020D                     	;# 
  2431  020E                     	;# 
  2432  0211                     	;# 
  2433  0211                     	;# 
  2434  0212                     	;# 
  2435  0212                     	;# 
  2436  0213                     	;# 
  2437  0213                     	;# 
  2438  0214                     	;# 
  2439  0214                     	;# 
  2440  0215                     	;# 
  2441  0215                     	;# 
  2442  0215                     	;# 
  2443  0215                     	;# 
  2444  0216                     	;# 
  2445  0216                     	;# 
  2446  0217                     	;# 
  2447  0217                     	;# 
  2448  0219                     	;# 
  2449  021A                     	;# 
  2450  021B                     	;# 
  2451  021C                     	;# 
  2452  021D                     	;# 
  2453  021D                     	;# 
  2454  021E                     	;# 
  2455  021F                     	;# 
  2456  028C                     	;# 
  2457  028D                     	;# 
  2458  028E                     	;# 
  2459  0291                     	;# 
  2460  0291                     	;# 
  2461  0292                     	;# 
  2462  0293                     	;# 
  2463  0294                     	;# 
  2464  0295                     	;# 
  2465  0295                     	;# 
  2466  0296                     	;# 
  2467  0297                     	;# 
  2468  0298                     	;# 
  2469  029F                     	;# 
  2470  030C                     	;# 
  2471  030D                     	;# 
  2472  030E                     	;# 
  2473  0311                     	;# 
  2474  0311                     	;# 
  2475  0312                     	;# 
  2476  0313                     	;# 
  2477  0314                     	;# 
  2478  0315                     	;# 
  2479  0315                     	;# 
  2480  0316                     	;# 
  2481  0317                     	;# 
  2482  0318                     	;# 
  2483  038C                     	;# 
  2484  038D                     	;# 
  2485  038E                     	;# 
  2486  0391                     	;# 
  2487  0392                     	;# 
  2488  0393                     	;# 
  2489  0394                     	;# 
  2490  0395                     	;# 
  2491  0396                     	;# 
  2492  0397                     	;# 
  2493  0398                     	;# 
  2494  0399                     	;# 
  2495  039A                     	;# 
  2496  039C                     	;# 
  2497  039D                     	;# 
  2498  039E                     	;# 
  2499  039F                     	;# 
  2500  0411                     	;# 
  2501  0411                     	;# 
  2502  0412                     	;# 
  2503  0413                     	;# 
  2504  0414                     	;# 
  2505  0415                     	;# 
  2506  0416                     	;# 
  2507  0417                     	;# 
  2508  0418                     	;# 
  2509  0418                     	;# 
  2510  0419                     	;# 
  2511  041A                     	;# 
  2512  041B                     	;# 
  2513  041C                     	;# 
  2514  041D                     	;# 
  2515  041E                     	;# 
  2516  041F                     	;# 
  2517  0498                     	;# 
  2518  0498                     	;# 
  2519  0499                     	;# 
  2520  049A                     	;# 
  2521  049B                     	;# 
  2522  049B                     	;# 
  2523  049C                     	;# 
  2524  049D                     	;# 
  2525  049E                     	;# 
  2526  049F                     	;# 
  2527  0617                     	;# 
  2528  0618                     	;# 
  2529  0619                     	;# 
  2530  0619                     	;# 
  2531  061A                     	;# 
  2532  061B                     	;# 
  2533  061C                     	;# 
  2534  061C                     	;# 
  2535  061F                     	;# 
  2536  0691                     	;# 
  2537  0692                     	;# 
  2538  0693                     	;# 
  2539  0694                     	;# 
  2540  0695                     	;# 
  2541  0696                     	;# 
  2542  0697                     	;# 
  2543  0698                     	;# 
  2544  0699                     	;# 
  2545  0711                     	;# 
  2546  0712                     	;# 
  2547  0713                     	;# 
  2548  0714                     	;# 
  2549  0715                     	;# 
  2550  0716                     	;# 
  2551  0717                     	;# 
  2552  0718                     	;# 
  2553  0719                     	;# 
  2554  0891                     	;# 
  2555  0891                     	;# 
  2556  0891                     	;# 
  2557  0891                     	;# 
  2558  0891                     	;# 
  2559  0891                     	;# 
  2560  0892                     	;# 
  2561  0892                     	;# 
  2562  0892                     	;# 
  2563  0893                     	;# 
  2564  0893                     	;# 
  2565  0893                     	;# 
  2566  0893                     	;# 
  2567  0893                     	;# 
  2568  0893                     	;# 
  2569  0894                     	;# 
  2570  0894                     	;# 
  2571  0894                     	;# 
  2572  0895                     	;# 
  2573  0895                     	;# 
  2574  0895                     	;# 
  2575  0896                     	;# 
  2576  0896                     	;# 
  2577  0896                     	;# 
  2578  089B                     	;# 
  2579  0911                     	;# 
  2580  0912                     	;# 
  2581  0913                     	;# 
  2582  0914                     	;# 
  2583  0915                     	;# 
  2584  0916                     	;# 
  2585  0918                     	;# 
  2586  0919                     	;# 
  2587  091A                     	;# 
  2588  091B                     	;# 
  2589  091C                     	;# 
  2590  091D                     	;# 
  2591  091E                     	;# 
  2592  091F                     	;# 
  2593  0E0F                     	;# 
  2594  0E10                     	;# 
  2595  0E11                     	;# 
  2596  0E12                     	;# 
  2597  0E13                     	;# 
  2598  0E14                     	;# 
  2599  0E15                     	;# 
  2600  0E16                     	;# 
  2601  0E17                     	;# 
  2602  0E18                     	;# 
  2603  0E19                     	;# 
  2604  0E1A                     	;# 
  2605  0E1B                     	;# 
  2606  0E1C                     	;# 
  2607  0E1D                     	;# 
  2608  0E1E                     	;# 
  2609  0E1F                     	;# 
  2610  0E20                     	;# 
  2611  0E21                     	;# 
  2612  0E22                     	;# 
  2613  0E24                     	;# 
  2614  0E25                     	;# 
  2615  0E28                     	;# 
  2616  0E29                     	;# 
  2617  0E2A                     	;# 
  2618  0E2B                     	;# 
  2619  0E2C                     	;# 
  2620  0E2D                     	;# 
  2621  0E2E                     	;# 
  2622  0E2F                     	;# 
  2623  0E90                     	;# 
  2624  0E91                     	;# 
  2625  0E92                     	;# 
  2626  0E94                     	;# 
  2627  0E95                     	;# 
  2628  0E9C                     	;# 
  2629  0E9D                     	;# 
  2630  0E9E                     	;# 
  2631  0E9F                     	;# 
  2632  0EA0                     	;# 
  2633  0EA1                     	;# 
  2634  0EA2                     	;# 
  2635  0EA3                     	;# 
  2636  0EA4                     	;# 
  2637  0EA5                     	;# 
  2638  0EA6                     	;# 
  2639  0EA7                     	;# 
  2640  0F0F                     	;# 
  2641  0F10                     	;# 
  2642  0F11                     	;# 
  2643  0F12                     	;# 
  2644  0F13                     	;# 
  2645  0F14                     	;# 
  2646  0F15                     	;# 
  2647  0F16                     	;# 
  2648  0F17                     	;# 
  2649  0F18                     	;# 
  2650  0F19                     	;# 
  2651  0F1A                     	;# 
  2652  0F1B                     	;# 
  2653  0F1C                     	;# 
  2654  0F1D                     	;# 
  2655  0F1E                     	;# 
  2656  0F1F                     	;# 
  2657  0F20                     	;# 
  2658  0F21                     	;# 
  2659  0F22                     	;# 
  2660  0F23                     	;# 
  2661  0F24                     	;# 
  2662  0F25                     	;# 
  2663  0F26                     	;# 
  2664  0F27                     	;# 
  2665  0F28                     	;# 
  2666  0F29                     	;# 
  2667  0F2A                     	;# 
  2668  0F2B                     	;# 
  2669  0F2C                     	;# 
  2670  0F2D                     	;# 
  2671  0F2E                     	;# 
  2672  0F2F                     	;# 
  2673  0F30                     	;# 
  2674  0F31                     	;# 
  2675  0F32                     	;# 
  2676  0F33                     	;# 
  2677  0F34                     	;# 
  2678  0F35                     	;# 
  2679  0F36                     	;# 
  2680  0F37                     	;# 
  2681  0FE4                     	;# 
  2682  0FE5                     	;# 
  2683  0FE6                     	;# 
  2684  0FE7                     	;# 
  2685  0FE8                     	;# 
  2686  0FE9                     	;# 
  2687  0FEA                     	;# 
  2688  0FEB                     	;# 
  2689  0FED                     	;# 
  2690  0FEE                     	;# 
  2691  0FEF                     	;# 
  2692  0000                     	;# 
  2693  0001                     	;# 
  2694  0002                     	;# 
  2695  0003                     	;# 
  2696  0004                     	;# 
  2697  0005                     	;# 
  2698  0006                     	;# 
  2699  0007                     	;# 
  2700  0008                     	;# 
  2701  0009                     	;# 
  2702  000A                     	;# 
  2703  000B                     	;# 
  2704  000C                     	;# 
  2705  000D                     	;# 
  2706  000E                     	;# 
  2707  0010                     	;# 
  2708  0011                     	;# 
  2709  0012                     	;# 
  2710  0013                     	;# 
  2711  0014                     	;# 
  2712  0015                     	;# 
  2713  0015                     	;# 
  2714  0016                     	;# 
  2715  0016                     	;# 
  2716  0017                     	;# 
  2717  0018                     	;# 
  2718  0019                     	;# 
  2719  0019                     	;# 
  2720  001A                     	;# 
  2721  001B                     	;# 
  2722  001C                     	;# 
  2723  001D                     	;# 
  2724  001E                     	;# 
  2725  001F                     	;# 
  2726  008C                     	;# 
  2727  008D                     	;# 
  2728  008E                     	;# 
  2729  0090                     	;# 
  2730  0091                     	;# 
  2731  0092                     	;# 
  2732  0093                     	;# 
  2733  0094                     	;# 
  2734  0097                     	;# 
  2735  009B                     	;# 
  2736  009B                     	;# 
  2737  009C                     	;# 
  2738  009D                     	;# 
  2739  009E                     	;# 
  2740  009F                     	;# 
  2741  010C                     	;# 
  2742  010D                     	;# 
  2743  010E                     	;# 
  2744  0111                     	;# 
  2745  0112                     	;# 
  2746  0113                     	;# 
  2747  0114                     	;# 
  2748  0115                     	;# 
  2749  0116                     	;# 
  2750  0117                     	;# 
  2751  0118                     	;# 
  2752  0119                     	;# 
  2753  018C                     	;# 
  2754  018D                     	;# 
  2755  018E                     	;# 
  2756  0197                     	;# 
  2757  0199                     	;# 
  2758  0199                     	;# 
  2759  0199                     	;# 
  2760  019A                     	;# 
  2761  019A                     	;# 
  2762  019A                     	;# 
  2763  019B                     	;# 
  2764  019B                     	;# 
  2765  019B                     	;# 
  2766  019B                     	;# 
  2767  019B                     	;# 
  2768  019C                     	;# 
  2769  019C                     	;# 
  2770  019C                     	;# 
  2771  019D                     	;# 
  2772  019D                     	;# 
  2773  019D                     	;# 
  2774  019E                     	;# 
  2775  019E                     	;# 
  2776  019E                     	;# 
  2777  019F                     	;# 
  2778  019F                     	;# 
  2779  019F                     	;# 
  2780  019F                     	;# 
  2781  019F                     	;# 
  2782  020C                     	;# 
  2783  020D                     	;# 
  2784  020E                     	;# 
  2785  0211                     	;# 
  2786  0211                     	;# 
  2787  0212                     	;# 
  2788  0212                     	;# 
  2789  0213                     	;# 
  2790  0213                     	;# 
  2791  0214                     	;# 
  2792  0214                     	;# 
  2793  0215                     	;# 
  2794  0215                     	;# 
  2795  0215                     	;# 
  2796  0215                     	;# 
  2797  0216                     	;# 
  2798  0216                     	;# 
  2799  0217                     	;# 
  2800  0217                     	;# 
  2801  0219                     	;# 
  2802  021A                     	;# 
  2803  021B                     	;# 
  2804  021C                     	;# 
  2805  021D                     	;# 
  2806  021D                     	;# 
  2807  021E                     	;# 
  2808  021F                     	;# 
  2809  028C                     	;# 
  2810  028D                     	;# 
  2811  028E                     	;# 
  2812  0291                     	;# 
  2813  0291                     	;# 
  2814  0292                     	;# 
  2815  0293                     	;# 
  2816  0294                     	;# 
  2817  0295                     	;# 
  2818  0295                     	;# 
  2819  0296                     	;# 
  2820  0297                     	;# 
  2821  0298                     	;# 
  2822  029F                     	;# 
  2823  030C                     	;# 
  2824  030D                     	;# 
  2825  030E                     	;# 
  2826  0311                     	;# 
  2827  0311                     	;# 
  2828  0312                     	;# 
  2829  0313                     	;# 
  2830  0314                     	;# 
  2831  0315                     	;# 
  2832  0315                     	;# 
  2833  0316                     	;# 
  2834  0317                     	;# 
  2835  0318                     	;# 
  2836  038C                     	;# 
  2837  038D                     	;# 
  2838  038E                     	;# 
  2839  0391                     	;# 
  2840  0392                     	;# 
  2841  0393                     	;# 
  2842  0394                     	;# 
  2843  0395                     	;# 
  2844  0396                     	;# 
  2845  0397                     	;# 
  2846  0398                     	;# 
  2847  0399                     	;# 
  2848  039A                     	;# 
  2849  039C                     	;# 
  2850  039D                     	;# 
  2851  039E                     	;# 
  2852  039F                     	;# 
  2853  0411                     	;# 
  2854  0411                     	;# 
  2855  0412                     	;# 
  2856  0413                     	;# 
  2857  0414                     	;# 
  2858  0415                     	;# 
  2859  0416                     	;# 
  2860  0417                     	;# 
  2861  0418                     	;# 
  2862  0418                     	;# 
  2863  0419                     	;# 
  2864  041A                     	;# 
  2865  041B                     	;# 
  2866  041C                     	;# 
  2867  041D                     	;# 
  2868  041E                     	;# 
  2869  041F                     	;# 
  2870  0498                     	;# 
  2871  0498                     	;# 
  2872  0499                     	;# 
  2873  049A                     	;# 
  2874  049B                     	;# 
  2875  049B                     	;# 
  2876  049C                     	;# 
  2877  049D                     	;# 
  2878  049E                     	;# 
  2879  049F                     	;# 
  2880  0617                     	;# 
  2881  0618                     	;# 
  2882  0619                     	;# 
  2883  0619                     	;# 
  2884  061A                     	;# 
  2885  061B                     	;# 
  2886  061C                     	;# 
  2887  061C                     	;# 
  2888  061F                     	;# 
  2889  0691                     	;# 
  2890  0692                     	;# 
  2891  0693                     	;# 
  2892  0694                     	;# 
  2893  0695                     	;# 
  2894  0696                     	;# 
  2895  0697                     	;# 
  2896  0698                     	;# 
  2897  0699                     	;# 
  2898  0711                     	;# 
  2899  0712                     	;# 
  2900  0713                     	;# 
  2901  0714                     	;# 
  2902  0715                     	;# 
  2903  0716                     	;# 
  2904  0717                     	;# 
  2905  0718                     	;# 
  2906  0719                     	;# 
  2907  0891                     	;# 
  2908  0891                     	;# 
  2909  0891                     	;# 
  2910  0891                     	;# 
  2911  0891                     	;# 
  2912  0891                     	;# 
  2913  0892                     	;# 
  2914  0892                     	;# 
  2915  0892                     	;# 
  2916  0893                     	;# 
  2917  0893                     	;# 
  2918  0893                     	;# 
  2919  0893                     	;# 
  2920  0893                     	;# 
  2921  0893                     	;# 
  2922  0894                     	;# 
  2923  0894                     	;# 
  2924  0894                     	;# 
  2925  0895                     	;# 
  2926  0895                     	;# 
  2927  0895                     	;# 
  2928  0896                     	;# 
  2929  0896                     	;# 
  2930  0896                     	;# 
  2931  089B                     	;# 
  2932  0911                     	;# 
  2933  0912                     	;# 
  2934  0913                     	;# 
  2935  0914                     	;# 
  2936  0915                     	;# 
  2937  0916                     	;# 
  2938  0918                     	;# 
  2939  0919                     	;# 
  2940  091A                     	;# 
  2941  091B                     	;# 
  2942  091C                     	;# 
  2943  091D                     	;# 
  2944  091E                     	;# 
  2945  091F                     	;# 
  2946  0E0F                     	;# 
  2947  0E10                     	;# 
  2948  0E11                     	;# 
  2949  0E12                     	;# 
  2950  0E13                     	;# 
  2951  0E14                     	;# 
  2952  0E15                     	;# 
  2953  0E16                     	;# 
  2954  0E17                     	;# 
  2955  0E18                     	;# 
  2956  0E19                     	;# 
  2957  0E1A                     	;# 
  2958  0E1B                     	;# 
  2959  0E1C                     	;# 
  2960  0E1D                     	;# 
  2961  0E1E                     	;# 
  2962  0E1F                     	;# 
  2963  0E20                     	;# 
  2964  0E21                     	;# 
  2965  0E22                     	;# 
  2966  0E24                     	;# 
  2967  0E25                     	;# 
  2968  0E28                     	;# 
  2969  0E29                     	;# 
  2970  0E2A                     	;# 
  2971  0E2B                     	;# 
  2972  0E2C                     	;# 
  2973  0E2D                     	;# 
  2974  0E2E                     	;# 
  2975  0E2F                     	;# 
  2976  0E90                     	;# 
  2977  0E91                     	;# 
  2978  0E92                     	;# 
  2979  0E94                     	;# 
  2980  0E95                     	;# 
  2981  0E9C                     	;# 
  2982  0E9D                     	;# 
  2983  0E9E                     	;# 
  2984  0E9F                     	;# 
  2985  0EA0                     	;# 
  2986  0EA1                     	;# 
  2987  0EA2                     	;# 
  2988  0EA3                     	;# 
  2989  0EA4                     	;# 
  2990  0EA5                     	;# 
  2991  0EA6                     	;# 
  2992  0EA7                     	;# 
  2993  0F0F                     	;# 
  2994  0F10                     	;# 
  2995  0F11                     	;# 
  2996  0F12                     	;# 
  2997  0F13                     	;# 
  2998  0F14                     	;# 
  2999  0F15                     	;# 
  3000  0F16                     	;# 
  3001  0F17                     	;# 
  3002  0F18                     	;# 
  3003  0F19                     	;# 
  3004  0F1A                     	;# 
  3005  0F1B                     	;# 
  3006  0F1C                     	;# 
  3007  0F1D                     	;# 
  3008  0F1E                     	;# 
  3009  0F1F                     	;# 
  3010  0F20                     	;# 
  3011  0F21                     	;# 
  3012  0F22                     	;# 
  3013  0F23                     	;# 
  3014  0F24                     	;# 
  3015  0F25                     	;# 
  3016  0F26                     	;# 
  3017  0F27                     	;# 
  3018  0F28                     	;# 
  3019  0F29                     	;# 
  3020  0F2A                     	;# 
  3021  0F2B                     	;# 
  3022  0F2C                     	;# 
  3023  0F2D                     	;# 
  3024  0F2E                     	;# 
  3025  0F2F                     	;# 
  3026  0F30                     	;# 
  3027  0F31                     	;# 
  3028  0F32                     	;# 
  3029  0F33                     	;# 
  3030  0F34                     	;# 
  3031  0F35                     	;# 
  3032  0F36                     	;# 
  3033  0F37                     	;# 
  3034  0FE4                     	;# 
  3035  0FE5                     	;# 
  3036  0FE6                     	;# 
  3037  0FE7                     	;# 
  3038  0FE8                     	;# 
  3039  0FE9                     	;# 
  3040  0FEA                     	;# 
  3041  0FEB                     	;# 
  3042  0FED                     	;# 
  3043  0FEE                     	;# 
  3044  0FEF                     	;# 
  3045  0000                     	;# 
  3046  0001                     	;# 
  3047  0002                     	;# 
  3048  0003                     	;# 
  3049  0004                     	;# 
  3050  0005                     	;# 
  3051  0006                     	;# 
  3052  0007                     	;# 
  3053  0008                     	;# 
  3054  0009                     	;# 
  3055  000A                     	;# 
  3056  000B                     	;# 
  3057  000C                     	;# 
  3058  000D                     	;# 
  3059  000E                     	;# 
  3060  0010                     	;# 
  3061  0011                     	;# 
  3062  0012                     	;# 
  3063  0013                     	;# 
  3064  0014                     	;# 
  3065  0015                     	;# 
  3066  0015                     	;# 
  3067  0016                     	;# 
  3068  0016                     	;# 
  3069  0017                     	;# 
  3070  0018                     	;# 
  3071  0019                     	;# 
  3072  0019                     	;# 
  3073  001A                     	;# 
  3074  001B                     	;# 
  3075  001C                     	;# 
  3076  001D                     	;# 
  3077  001E                     	;# 
  3078  001F                     	;# 
  3079  008C                     	;# 
  3080  008D                     	;# 
  3081  008E                     	;# 
  3082  0090                     	;# 
  3083  0091                     	;# 
  3084  0092                     	;# 
  3085  0093                     	;# 
  3086  0094                     	;# 
  3087  0097                     	;# 
  3088  009B                     	;# 
  3089  009B                     	;# 
  3090  009C                     	;# 
  3091  009D                     	;# 
  3092  009E                     	;# 
  3093  009F                     	;# 
  3094  010C                     	;# 
  3095  010D                     	;# 
  3096  010E                     	;# 
  3097  0111                     	;# 
  3098  0112                     	;# 
  3099  0113                     	;# 
  3100  0114                     	;# 
  3101  0115                     	;# 
  3102  0116                     	;# 
  3103  0117                     	;# 
  3104  0118                     	;# 
  3105  0119                     	;# 
  3106  018C                     	;# 
  3107  018D                     	;# 
  3108  018E                     	;# 
  3109  0197                     	;# 
  3110  0199                     	;# 
  3111  0199                     	;# 
  3112  0199                     	;# 
  3113  019A                     	;# 
  3114  019A                     	;# 
  3115  019A                     	;# 
  3116  019B                     	;# 
  3117  019B                     	;# 
  3118  019B                     	;# 
  3119  019B                     	;# 
  3120  019B                     	;# 
  3121  019C                     	;# 
  3122  019C                     	;# 
  3123  019C                     	;# 
  3124  019D                     	;# 
  3125  019D                     	;# 
  3126  019D                     	;# 
  3127  019E                     	;# 
  3128  019E                     	;# 
  3129  019E                     	;# 
  3130  019F                     	;# 
  3131  019F                     	;# 
  3132  019F                     	;# 
  3133  019F                     	;# 
  3134  019F                     	;# 
  3135  020C                     	;# 
  3136  020D                     	;# 
  3137  020E                     	;# 
  3138  0211                     	;# 
  3139  0211                     	;# 
  3140  0212                     	;# 
  3141  0212                     	;# 
  3142  0213                     	;# 
  3143  0213                     	;# 
  3144  0214                     	;# 
  3145  0214                     	;# 
  3146  0215                     	;# 
  3147  0215                     	;# 
  3148  0215                     	;# 
  3149  0215                     	;# 
  3150  0216                     	;# 
  3151  0216                     	;# 
  3152  0217                     	;# 
  3153  0217                     	;# 
  3154  0219                     	;# 
  3155  021A                     	;# 
  3156  021B                     	;# 
  3157  021C                     	;# 
  3158  021D                     	;# 
  3159  021D                     	;# 
  3160  021E                     	;# 
  3161  021F                     	;# 
  3162  028C                     	;# 
  3163  028D                     	;# 
  3164  028E                     	;# 
  3165  0291                     	;# 
  3166  0291                     	;# 
  3167  0292                     	;# 
  3168  0293                     	;# 
  3169  0294                     	;# 
  3170  0295                     	;# 
  3171  0295                     	;# 
  3172  0296                     	;# 
  3173  0297                     	;# 
  3174  0298                     	;# 
  3175  029F                     	;# 
  3176  030C                     	;# 
  3177  030D                     	;# 
  3178  030E                     	;# 
  3179  0311                     	;# 
  3180  0311                     	;# 
  3181  0312                     	;# 
  3182  0313                     	;# 
  3183  0314                     	;# 
  3184  0315                     	;# 
  3185  0315                     	;# 
  3186  0316                     	;# 
  3187  0317                     	;# 
  3188  0318                     	;# 
  3189  038C                     	;# 
  3190  038D                     	;# 
  3191  038E                     	;# 
  3192  0391                     	;# 
  3193  0392                     	;# 
  3194  0393                     	;# 
  3195  0394                     	;# 
  3196  0395                     	;# 
  3197  0396                     	;# 
  3198  0397                     	;# 
  3199  0398                     	;# 
  3200  0399                     	;# 
  3201  039A                     	;# 
  3202  039C                     	;# 
  3203  039D                     	;# 
  3204  039E                     	;# 
  3205  039F                     	;# 
  3206  0411                     	;# 
  3207  0411                     	;# 
  3208  0412                     	;# 
  3209  0413                     	;# 
  3210  0414                     	;# 
  3211  0415                     	;# 
  3212  0416                     	;# 
  3213  0417                     	;# 
  3214  0418                     	;# 
  3215  0418                     	;# 
  3216  0419                     	;# 
  3217  041A                     	;# 
  3218  041B                     	;# 
  3219  041C                     	;# 
  3220  041D                     	;# 
  3221  041E                     	;# 
  3222  041F                     	;# 
  3223  0498                     	;# 
  3224  0498                     	;# 
  3225  0499                     	;# 
  3226  049A                     	;# 
  3227  049B                     	;# 
  3228  049B                     	;# 
  3229  049C                     	;# 
  3230  049D                     	;# 
  3231  049E                     	;# 
  3232  049F                     	;# 
  3233  0617                     	;# 
  3234  0618                     	;# 
  3235  0619                     	;# 
  3236  0619                     	;# 
  3237  061A                     	;# 
  3238  061B                     	;# 
  3239  061C                     	;# 
  3240  061C                     	;# 
  3241  061F                     	;# 
  3242  0691                     	;# 
  3243  0692                     	;# 
  3244  0693                     	;# 
  3245  0694                     	;# 
  3246  0695                     	;# 
  3247  0696                     	;# 
  3248  0697                     	;# 
  3249  0698                     	;# 
  3250  0699                     	;# 
  3251  0711                     	;# 
  3252  0712                     	;# 
  3253  0713                     	;# 
  3254  0714                     	;# 
  3255  0715                     	;# 
  3256  0716                     	;# 
  3257  0717                     	;# 
  3258  0718                     	;# 
  3259  0719                     	;# 
  3260  0891                     	;# 
  3261  0891                     	;# 
  3262  0891                     	;# 
  3263  0891                     	;# 
  3264  0891                     	;# 
  3265  0891                     	;# 
  3266  0892                     	;# 
  3267  0892                     	;# 
  3268  0892                     	;# 
  3269  0893                     	;# 
  3270  0893                     	;# 
  3271  0893                     	;# 
  3272  0893                     	;# 
  3273  0893                     	;# 
  3274  0893                     	;# 
  3275  0894                     	;# 
  3276  0894                     	;# 
  3277  0894                     	;# 
  3278  0895                     	;# 
  3279  0895                     	;# 
  3280  0895                     	;# 
  3281  0896                     	;# 
  3282  0896                     	;# 
  3283  0896                     	;# 
  3284  089B                     	;# 
  3285  0911                     	;# 
  3286  0912                     	;# 
  3287  0913                     	;# 
  3288  0914                     	;# 
  3289  0915                     	;# 
  3290  0916                     	;# 
  3291  0918                     	;# 
  3292  0919                     	;# 
  3293  091A                     	;# 
  3294  091B                     	;# 
  3295  091C                     	;# 
  3296  091D                     	;# 
  3297  091E                     	;# 
  3298  091F                     	;# 
  3299  0E0F                     	;# 
  3300  0E10                     	;# 
  3301  0E11                     	;# 
  3302  0E12                     	;# 
  3303  0E13                     	;# 
  3304  0E14                     	;# 
  3305  0E15                     	;# 
  3306  0E16                     	;# 
  3307  0E17                     	;# 
  3308  0E18                     	;# 
  3309  0E19                     	;# 
  3310  0E1A                     	;# 
  3311  0E1B                     	;# 
  3312  0E1C                     	;# 
  3313  0E1D                     	;# 
  3314  0E1E                     	;# 
  3315  0E1F                     	;# 
  3316  0E20                     	;# 
  3317  0E21                     	;# 
  3318  0E22                     	;# 
  3319  0E24                     	;# 
  3320  0E25                     	;# 
  3321  0E28                     	;# 
  3322  0E29                     	;# 
  3323  0E2A                     	;# 
  3324  0E2B                     	;# 
  3325  0E2C                     	;# 
  3326  0E2D                     	;# 
  3327  0E2E                     	;# 
  3328  0E2F                     	;# 
  3329  0E90                     	;# 
  3330  0E91                     	;# 
  3331  0E92                     	;# 
  3332  0E94                     	;# 
  3333  0E95                     	;# 
  3334  0E9C                     	;# 
  3335  0E9D                     	;# 
  3336  0E9E                     	;# 
  3337  0E9F                     	;# 
  3338  0EA0                     	;# 
  3339  0EA1                     	;# 
  3340  0EA2                     	;# 
  3341  0EA3                     	;# 
  3342  0EA4                     	;# 
  3343  0EA5                     	;# 
  3344  0EA6                     	;# 
  3345  0EA7                     	;# 
  3346  0F0F                     	;# 
  3347  0F10                     	;# 
  3348  0F11                     	;# 
  3349  0F12                     	;# 
  3350  0F13                     	;# 
  3351  0F14                     	;# 
  3352  0F15                     	;# 
  3353  0F16                     	;# 
  3354  0F17                     	;# 
  3355  0F18                     	;# 
  3356  0F19                     	;# 
  3357  0F1A                     	;# 
  3358  0F1B                     	;# 
  3359  0F1C                     	;# 
  3360  0F1D                     	;# 
  3361  0F1E                     	;# 
  3362  0F1F                     	;# 
  3363  0F20                     	;# 
  3364  0F21                     	;# 
  3365  0F22                     	;# 
  3366  0F23                     	;# 
  3367  0F24                     	;# 
  3368  0F25                     	;# 
  3369  0F26                     	;# 
  3370  0F27                     	;# 
  3371  0F28                     	;# 
  3372  0F29                     	;# 
  3373  0F2A                     	;# 
  3374  0F2B                     	;# 
  3375  0F2C                     	;# 
  3376  0F2D                     	;# 
  3377  0F2E                     	;# 
  3378  0F2F                     	;# 
  3379  0F30                     	;# 
  3380  0F31                     	;# 
  3381  0F32                     	;# 
  3382  0F33                     	;# 
  3383  0F34                     	;# 
  3384  0F35                     	;# 
  3385  0F36                     	;# 
  3386  0F37                     	;# 
  3387  0FE4                     	;# 
  3388  0FE5                     	;# 
  3389  0FE6                     	;# 
  3390  0FE7                     	;# 
  3391  0FE8                     	;# 
  3392  0FE9                     	;# 
  3393  0FEA                     	;# 
  3394  0FEB                     	;# 
  3395  0FED                     	;# 
  3396  0FEE                     	;# 
  3397  0FEF                     	;# 
  3398  0000                     	;# 
  3399  0001                     	;# 
  3400  0002                     	;# 
  3401  0003                     	;# 
  3402  0004                     	;# 
  3403  0005                     	;# 
  3404  0006                     	;# 
  3405  0007                     	;# 
  3406  0008                     	;# 
  3407  0009                     	;# 
  3408  000A                     	;# 
  3409  000B                     	;# 
  3410  000C                     	;# 
  3411  000D                     	;# 
  3412  000E                     	;# 
  3413  0010                     	;# 
  3414  0011                     	;# 
  3415  0012                     	;# 
  3416  0013                     	;# 
  3417  0014                     	;# 
  3418  0015                     	;# 
  3419  0015                     	;# 
  3420  0016                     	;# 
  3421  0016                     	;# 
  3422  0017                     	;# 
  3423  0018                     	;# 
  3424  0019                     	;# 
  3425  0019                     	;# 
  3426  001A                     	;# 
  3427  001B                     	;# 
  3428  001C                     	;# 
  3429  001D                     	;# 
  3430  001E                     	;# 
  3431  001F                     	;# 
  3432  008C                     	;# 
  3433  008D                     	;# 
  3434  008E                     	;# 
  3435  0090                     	;# 
  3436  0091                     	;# 
  3437  0092                     	;# 
  3438  0093                     	;# 
  3439  0094                     	;# 
  3440  0097                     	;# 
  3441  009B                     	;# 
  3442  009B                     	;# 
  3443  009C                     	;# 
  3444  009D                     	;# 
  3445  009E                     	;# 
  3446  009F                     	;# 
  3447  010C                     	;# 
  3448  010D                     	;# 
  3449  010E                     	;# 
  3450  0111                     	;# 
  3451  0112                     	;# 
  3452  0113                     	;# 
  3453  0114                     	;# 
  3454  0115                     	;# 
  3455  0116                     	;# 
  3456  0117                     	;# 
  3457  0118                     	;# 
  3458  0119                     	;# 
  3459  018C                     	;# 
  3460  018D                     	;# 
  3461  018E                     	;# 
  3462  0197                     	;# 
  3463  0199                     	;# 
  3464  0199                     	;# 
  3465  0199                     	;# 
  3466  019A                     	;# 
  3467  019A                     	;# 
  3468  019A                     	;# 
  3469  019B                     	;# 
  3470  019B                     	;# 
  3471  019B                     	;# 
  3472  019B                     	;# 
  3473  019B                     	;# 
  3474  019C                     	;# 
  3475  019C                     	;# 
  3476  019C                     	;# 
  3477  019D                     	;# 
  3478  019D                     	;# 
  3479  019D                     	;# 
  3480  019E                     	;# 
  3481  019E                     	;# 
  3482  019E                     	;# 
  3483  019F                     	;# 
  3484  019F                     	;# 
  3485  019F                     	;# 
  3486  019F                     	;# 
  3487  019F                     	;# 
  3488  020C                     	;# 
  3489  020D                     	;# 
  3490  020E                     	;# 
  3491  0211                     	;# 
  3492  0211                     	;# 
  3493  0212                     	;# 
  3494  0212                     	;# 
  3495  0213                     	;# 
  3496  0213                     	;# 
  3497  0214                     	;# 
  3498  0214                     	;# 
  3499  0215                     	;# 
  3500  0215                     	;# 
  3501  0215                     	;# 
  3502  0215                     	;# 
  3503  0216                     	;# 
  3504  0216                     	;# 
  3505  0217                     	;# 
  3506  0217                     	;# 
  3507  0219                     	;# 
  3508  021A                     	;# 
  3509  021B                     	;# 
  3510  021C                     	;# 
  3511  021D                     	;# 
  3512  021D                     	;# 
  3513  021E                     	;# 
  3514  021F                     	;# 
  3515  028C                     	;# 
  3516  028D                     	;# 
  3517  028E                     	;# 
  3518  0291                     	;# 
  3519  0291                     	;# 
  3520  0292                     	;# 
  3521  0293                     	;# 
  3522  0294                     	;# 
  3523  0295                     	;# 
  3524  0295                     	;# 
  3525  0296                     	;# 
  3526  0297                     	;# 
  3527  0298                     	;# 
  3528  029F                     	;# 
  3529  030C                     	;# 
  3530  030D                     	;# 
  3531  030E                     	;# 
  3532  0311                     	;# 
  3533  0311                     	;# 
  3534  0312                     	;# 
  3535  0313                     	;# 
  3536  0314                     	;# 
  3537  0315                     	;# 
  3538  0315                     	;# 
  3539  0316                     	;# 
  3540  0317                     	;# 
  3541  0318                     	;# 
  3542  038C                     	;# 
  3543  038D                     	;# 
  3544  038E                     	;# 
  3545  0391                     	;# 
  3546  0392                     	;# 
  3547  0393                     	;# 
  3548  0394                     	;# 
  3549  0395                     	;# 
  3550  0396                     	;# 
  3551  0397                     	;# 
  3552  0398                     	;# 
  3553  0399                     	;# 
  3554  039A                     	;# 
  3555  039C                     	;# 
  3556  039D                     	;# 
  3557  039E                     	;# 
  3558  039F                     	;# 
  3559  0411                     	;# 
  3560  0411                     	;# 
  3561  0412                     	;# 
  3562  0413                     	;# 
  3563  0414                     	;# 
  3564  0415                     	;# 
  3565  0416                     	;# 
  3566  0417                     	;# 
  3567  0418                     	;# 
  3568  0418                     	;# 
  3569  0419                     	;# 
  3570  041A                     	;# 
  3571  041B                     	;# 
  3572  041C                     	;# 
  3573  041D                     	;# 
  3574  041E                     	;# 
  3575  041F                     	;# 
  3576  0498                     	;# 
  3577  0498                     	;# 
  3578  0499                     	;# 
  3579  049A                     	;# 
  3580  049B                     	;# 
  3581  049B                     	;# 
  3582  049C                     	;# 
  3583  049D                     	;# 
  3584  049E                     	;# 
  3585  049F                     	;# 
  3586  0617                     	;# 
  3587  0618                     	;# 
  3588  0619                     	;# 
  3589  0619                     	;# 
  3590  061A                     	;# 
  3591  061B                     	;# 
  3592  061C                     	;# 
  3593  061C                     	;# 
  3594  061F                     	;# 
  3595  0691                     	;# 
  3596  0692                     	;# 
  3597  0693                     	;# 
  3598  0694                     	;# 
  3599  0695                     	;# 
  3600  0696                     	;# 
  3601  0697                     	;# 
  3602  0698                     	;# 
  3603  0699                     	;# 
  3604  0711                     	;# 
  3605  0712                     	;# 
  3606  0713                     	;# 
  3607  0714                     	;# 
  3608  0715                     	;# 
  3609  0716                     	;# 
  3610  0717                     	;# 
  3611  0718                     	;# 
  3612  0719                     	;# 
  3613  0891                     	;# 
  3614  0891                     	;# 
  3615  0891                     	;# 
  3616  0891                     	;# 
  3617  0891                     	;# 
  3618  0891                     	;# 
  3619  0892                     	;# 
  3620  0892                     	;# 
  3621  0892                     	;# 
  3622  0893                     	;# 
  3623  0893                     	;# 
  3624  0893                     	;# 
  3625  0893                     	;# 
  3626  0893                     	;# 
  3627  0893                     	;# 
  3628  0894                     	;# 
  3629  0894                     	;# 
  3630  0894                     	;# 
  3631  0895                     	;# 
  3632  0895                     	;# 
  3633  0895                     	;# 
  3634  0896                     	;# 
  3635  0896                     	;# 
  3636  0896                     	;# 
  3637  089B                     	;# 
  3638  0911                     	;# 
  3639  0912                     	;# 
  3640  0913                     	;# 
  3641  0914                     	;# 
  3642  0915                     	;# 
  3643  0916                     	;# 
  3644  0918                     	;# 
  3645  0919                     	;# 
  3646  091A                     	;# 
  3647  091B                     	;# 
  3648  091C                     	;# 
  3649  091D                     	;# 
  3650  091E                     	;# 
  3651  091F                     	;# 
  3652  0E0F                     	;# 
  3653  0E10                     	;# 
  3654  0E11                     	;# 
  3655  0E12                     	;# 
  3656  0E13                     	;# 
  3657  0E14                     	;# 
  3658  0E15                     	;# 
  3659  0E16                     	;# 
  3660  0E17                     	;# 
  3661  0E18                     	;# 
  3662  0E19                     	;# 
  3663  0E1A                     	;# 
  3664  0E1B                     	;# 
  3665  0E1C                     	;# 
  3666  0E1D                     	;# 
  3667  0E1E                     	;# 
  3668  0E1F                     	;# 
  3669  0E20                     	;# 
  3670  0E21                     	;# 
  3671  0E22                     	;# 
  3672  0E24                     	;# 
  3673  0E25                     	;# 
  3674  0E28                     	;# 
  3675  0E29                     	;# 
  3676  0E2A                     	;# 
  3677  0E2B                     	;# 
  3678  0E2C                     	;# 
  3679  0E2D                     	;# 
  3680  0E2E                     	;# 
  3681  0E2F                     	;# 
  3682  0E90                     	;# 
  3683  0E91                     	;# 
  3684  0E92                     	;# 
  3685  0E94                     	;# 
  3686  0E95                     	;# 
  3687  0E9C                     	;# 
  3688  0E9D                     	;# 
  3689  0E9E                     	;# 
  3690  0E9F                     	;# 
  3691  0EA0                     	;# 
  3692  0EA1                     	;# 
  3693  0EA2                     	;# 
  3694  0EA3                     	;# 
  3695  0EA4                     	;# 
  3696  0EA5                     	;# 
  3697  0EA6                     	;# 
  3698  0EA7                     	;# 
  3699  0F0F                     	;# 
  3700  0F10                     	;# 
  3701  0F11                     	;# 
  3702  0F12                     	;# 
  3703  0F13                     	;# 
  3704  0F14                     	;# 
  3705  0F15                     	;# 
  3706  0F16                     	;# 
  3707  0F17                     	;# 
  3708  0F18                     	;# 
  3709  0F19                     	;# 
  3710  0F1A                     	;# 
  3711  0F1B                     	;# 
  3712  0F1C                     	;# 
  3713  0F1D                     	;# 
  3714  0F1E                     	;# 
  3715  0F1F                     	;# 
  3716  0F20                     	;# 
  3717  0F21                     	;# 
  3718  0F22                     	;# 
  3719  0F23                     	;# 
  3720  0F24                     	;# 
  3721  0F25                     	;# 
  3722  0F26                     	;# 
  3723  0F27                     	;# 
  3724  0F28                     	;# 
  3725  0F29                     	;# 
  3726  0F2A                     	;# 
  3727  0F2B                     	;# 
  3728  0F2C                     	;# 
  3729  0F2D                     	;# 
  3730  0F2E                     	;# 
  3731  0F2F                     	;# 
  3732  0F30                     	;# 
  3733  0F31                     	;# 
  3734  0F32                     	;# 
  3735  0F33                     	;# 
  3736  0F34                     	;# 
  3737  0F35                     	;# 
  3738  0F36                     	;# 
  3739  0F37                     	;# 
  3740  0FE4                     	;# 
  3741  0FE5                     	;# 
  3742  0FE6                     	;# 
  3743  0FE7                     	;# 
  3744  0FE8                     	;# 
  3745  0FE9                     	;# 
  3746  0FEA                     	;# 
  3747  0FEB                     	;# 
  3748  0FED                     	;# 
  3749  0FEE                     	;# 
  3750  0FEF                     	;# 
  3751                           
  3752                           	psect	idataBANK2
  3753  1A39                     __pidataBANK2:
  3754                           
  3755                           ;initializer for _TAS_NORMAL
  3756  1A39  3421               	retlw	33
  3757  1A3A  3408               	retlw	8
  3758                           
  3759                           ;initializer for _TAS_CLEAR_FALT
  3760  1A3B  3421               	retlw	33
  3761  1A3C  3488               	retlw	136
  3762                           
  3763                           ;initializer for _TAS_PLAY
  3764  1A3D  3404               	retlw	4
  3765  1A3E  3405               	retlw	5
  3766                           
  3767                           ;initializer for _TAS_FS96K
  3768  1A3F  3403               	retlw	3
  3769  1A40  3484               	retlw	132
  3770                           
  3771                           ;initializer for _TAS_AC
  3772  1A41  3401               	retlw	1
  3773  1A42  3472               	retlw	114
  3774                           
  3775                           ;initializer for _DIT_ADC
  3776  1A43  3460               	retlw	96
  3777  1A44  3422               	retlw	34
  3778                           
  3779                           ;initializer for _DIT_DIR
  3780  1A45  3460               	retlw	96
  3781  1A46  3411               	retlw	17
  3782                           
  3783                           ;initializer for _DIR_OPT
  3784  1A47  3434               	retlw	52
  3785  1A48  3400               	retlw	0
  3786                           
  3787                           ;initializer for _AUXSRC_DIR
  3788  1A49  346C               	retlw	108
  3789  1A4A  3411               	retlw	17
  3790                           
  3791                           ;initializer for _SRC_ADC
  3792  1A4B  346B               	retlw	107
  3793  1A4C  3422               	retlw	34
  3794                           
  3795                           ;initializer for _SRC_DIR
  3796  1A4D  346B               	retlw	107
  3797  1A4E  3411               	retlw	17
  3798                           
  3799                           ;initializer for _I2S_IN
  3800  1A4F  346F               	retlw	111
  3801  1A50  3400               	retlw	0
  3802                           
  3803                           ;initializer for _I2S_OUT
  3804  1A51  346F               	retlw	111
  3805  1A52  3408               	retlw	8
  3806                           
  3807                           	psect	idataBANK3
  3808  1E78                     __pidataBANK3:
  3809                           
  3810                           ;initializer for _led_dot
  3811  1E78  34FF               	retlw	255
  3812  1E79  34FF               	retlw	255
  3813  1E7A  34FF               	retlw	255
  3814                           
  3815                           ;initializer for _ADC_ATTR_6dB
  3816  1E7B  3447               	retlw	71
  3817  1E7C  34CB               	retlw	203
  3818                           
  3819                           ;initializer for _ADC_ATTL_6dB
  3820  1E7D  3446               	retlw	70
  3821  1E7E  34CB               	retlw	203
  3822                           
  3823                           ;initializer for _ADC_ATTR_0dB
  3824  1E7F  3447               	retlw	71
  3825  1E80  34D7               	retlw	215
  3826                           
  3827                           ;initializer for _ADC_ATTL_0dB
  3828  1E81  3446               	retlw	70
  3829  1E82  34D7               	retlw	215
  3830                           
  3831                           ;initializer for _CALC_DIT
  3832  1E83  3437               	retlw	55
  3833  1E84  3407               	retlw	7
  3834                           
  3835                           ;initializer for _CALC_MPOB
  3836  1E85  3437               	retlw	55
  3837  1E86  3406               	retlw	6
  3838                           
  3839                           ;initializer for _CALC_MPIB
  3840  1E87  3437               	retlw	55
  3841  1E88  3403               	retlw	3
  3842                           
  3843                           ;initializer for _CALC_ADC
  3844  1E89  3437               	retlw	55
  3845  1E8A  3401               	retlw	1
  3846                           
  3847                           ;initializer for _CALC_DIR
  3848  1E8B  3437               	retlw	55
  3849  1E8C  3400               	retlw	0
  3850                           
  3851                           ;initializer for _AUXSRC_I2S
  3852  1E8D  346C               	retlw	108
  3853  1E8E  3455               	retlw	85
  3854                           
  3855                           ;initializer for _TAS_CHK_RAILS
  3856  1E8F  3411               	retlw	17
  3857  1E90  341F               	retlw	31
  3858                           
  3859                           ;initializer for _TAS_MUTE
  3860  1E91  3404               	retlw	4
  3861  1E92  34A5               	retlw	165
  3862                           
  3863                           ;initializer for _TAS_FS48K
  3864  1E93  3403               	retlw	3
  3865  1E94  3444               	retlw	68
  3866                           
  3867                           ;initializer for _TAS_FS44K
  3868  1E95  3403               	retlw	3
  3869  1E96  3404               	retlw	4
  3870                           
  3871                           ;initializer for _TAS_DC
  3872  1E97  3401               	retlw	1
  3873  1E98  34F2               	retlw	242
  3874                           
  3875                           ;initializer for _TAS_DCDIAG_CLEAR
  3876  1E99  3409               	retlw	9
  3877  1E9A  3401               	retlw	1
  3878                           
  3879                           ;initializer for _TAS_RESET
  3880  1E9B  3400               	retlw	0
  3881  1E9C  3480               	retlw	128
  3882                           
  3883                           ;initializer for _INIT9211_31
  3884  1E9D  3431               	retlw	49
  3885  1E9E  3405               	retlw	5
  3886                           
  3887                           ;initializer for _INIT9211_27
  3888  1E9F  3427               	retlw	39
  3889  1EA0  34DB               	retlw	219
  3890                           
  3891                           ;initializer for _INIT9211_26
  3892  1EA1  3426               	retlw	38
  3893  1EA2  3460               	retlw	96
  3894                           
  3895                           ;initializer for _INIT9211_2B
  3896  1EA3  342B               	retlw	43
  3897  1EA4  34FE               	retlw	254
  3898                           
  3899                           ;initializer for _INIT9211_2E
  3900  1EA5  342E               	retlw	46
  3901  1EA6  3408               	retlw	8
  3902                           
  3903                           ;initializer for _INIT9211_20
  3904  1EA7  3420               	retlw	32
  3905  1EA8  3401               	retlw	1
  3906                           
  3907                           ;initializer for _ADC_96K
  3908  1EA9  3431               	retlw	49
  3909  1EAA  3405               	retlw	5
  3910                           
  3911                           ;initializer for _ADC_DC
  3912  1EAB  3449               	retlw	73
  3913  1EAC  3408               	retlw	8
  3914                           
  3915                           ;initializer for _DIT_I2S
  3916  1EAD  3460               	retlw	96
  3917  1EAE  3455               	retlw	85
  3918                           
  3919                           ;initializer for _DIT_LVDS
  3920  1EAF  3460               	retlw	96
  3921  1EB0  3444               	retlw	68
  3922                           
  3923                           ;initializer for _ADC_ATTR_3dB
  3924  1EB1  3447               	retlw	71
  3925  1EB2  34D1               	retlw	209
  3926                           
  3927                           ;initializer for _ADC_ATTL_3dB
  3928  1EB3  3446               	retlw	70
  3929  1EB4  34D1               	retlw	209
  3930                           
  3931                           ;initializer for _CALC_MOUT
  3932  1EB5  3437               	retlw	55
  3933  1EB6  3405               	retlw	5
  3934                           
  3935                           ;initializer for _DIR_COAX
  3936  1EB7  3434               	retlw	52
  3937  1EB8  3401               	retlw	1
  3938                           
  3939                           ;initializer for _AUXSRC_LVDS
  3940  1EB9  346C               	retlw	108
  3941  1EBA  3433               	retlw	51
  3942                           
  3943                           ;initializer for _AUXSRC_ADC
  3944  1EBB  346C               	retlw	108
  3945  1EBC  3422               	retlw	34
  3946                           
  3947                           ;initializer for _AUXSRC_AUTO
  3948  1EBD  346C               	retlw	108
  3949  1EBE  3400               	retlw	0
  3950                           
  3951                           ;initializer for _SRC_I2S
  3952  1EBF  346B               	retlw	107
  3953  1EC0  3455               	retlw	85
  3954                           
  3955                           ;initializer for _SRC_LVDS
  3956  1EC1  346B               	retlw	107
  3957  1EC2  3433               	retlw	51
  3958                           
  3959                           	psect	idataBANK4
  3960  1CCC                     __pidataBANK4:
  3961                           
  3962                           ;initializer for stoa@F1141
  3963  1CCC  3428               	retlw	40
  3964  1CCD  346E               	retlw	110
  3965  1CCE  3475               	retlw	117
  3966  1CCF  346C               	retlw	108
  3967  1CD0  346C               	retlw	108
  3968  1CD1  3429               	retlw	41
  3969  1CD2  3400               	retlw	0
  3970                           
  3971                           ;initializer for _srcset9211
  3972  1CD3  34DF               	retlw	low (_DIR_COAX| (0+256))
  3973  1CD4  345D               	retlw	low (_DIR_OPT| (0+256))
  3974  1CD5  3461               	retlw	low (_SRC_ADC| (0+256))
  3975  1CD6  34E9               	retlw	low (_SRC_LVDS| (0+256))
  3976  1CD7  34E7               	retlw	low (_SRC_I2S| (0+256))
  3977                           
  3978                           ;initializer for _ledbuff
  3979  1CD8  345F               	retlw	95
  3980  1CD9  345F               	retlw	95
  3981  1CDA  345F               	retlw	95
  3982  1CDB  3400               	retlw	0
  3983                           
  3984                           ;initializer for _TAS_HiZ
  3985  1CDC  3404               	retlw	4
  3986  1CDD  3455               	retlw	85
  3987                           
  3988                           ;initializer for _TAS_OSR128
  3989  1CDE  3402               	retlw	2
  3990  1CDF  3466               	retlw	102
  3991                           
  3992                           ;initializer for _TAS_OSR64
  3993  1CE0  3402               	retlw	2
  3994  1CE1  3462               	retlw	98
  3995                           
  3996                           ;initializer for _TAS_FC463
  3997  1CE2  3426               	retlw	38
  3998  1CE3  3447               	retlw	71
  3999                           
  4000                           ;initializer for _TAS_FC235
  4001  1CE4  3426               	retlw	38
  4002  1CE5  3446               	retlw	70
  4003                           
  4004                           ;initializer for _TAS_FC118
  4005  1CE6  3426               	retlw	38
  4006  1CE7  3445               	retlw	69
  4007                           
  4008                           ;initializer for _TAS_FC59
  4009  1CE8  3426               	retlw	38
  4010  1CE9  3444               	retlw	68
  4011                           
  4012                           ;initializer for _TAS_FC30
  4013  1CEA  3426               	retlw	38
  4014  1CEB  3443               	retlw	67
  4015                           
  4016                           ;initializer for _TAS_FC15
  4017  1CEC  3426               	retlw	38
  4018  1CED  3442               	retlw	66
  4019                           
  4020                           ;initializer for _TAS_FC7
  4021  1CEE  3426               	retlw	38
  4022  1CEF  3441               	retlw	65
  4023                           
  4024                           ;initializer for _TAS_FC4
  4025  1CF0  3426               	retlw	38
  4026  1CF1  3440               	retlw	64
  4027                           
  4028                           ;initializer for _TAS_DCDIAG_ABORT
  4029  1CF2  3409               	retlw	9
  4030  1CF3  3480               	retlw	128
  4031                           
  4032                           ;initializer for _ADC_48K
  4033  1CF4  3431               	retlw	49
  4034  1CF5  341A               	retlw	26
  4035                           
  4036                           ;initializer for _ADC_AC
  4037  1CF6  3449               	retlw	73
  4038  1CF7  3400               	retlw	0
  4039                           
  4040                           ;initializer for _ADC_I2S_MASTER_256
  4041  1CF8  3448               	retlw	72
  4042  1CF9  3440               	retlw	64
  4043                           
  4044                           	psect	idataBANK5
  4045  26D2                     __pidataBANK5:
  4046                           
  4047                           ;initializer for _ledstr
  4048  26D2  345F               	retlw	95
  4049  26D3  345F               	retlw	95
  4050  26D4  345F               	retlw	95
  4051  26D5  3400               	retlw	0
  4052  26D6  3400               	retlw	0
  4053  26D7  3400               	retlw	0
  4054  26D8  3400               	retlw	0
  4055  26D9  3400               	retlw	0
  4056  26DA  3400               	retlw	0
  4057                           
  4058                           	psect	stringtext1
  4059  1870                     __pstringtext1:
  4060  1870                     _font7seg:
  4061  1870  34FF               	retlw	255
  4062  1871  34F9               	retlw	249
  4063  1872  34FF               	retlw	255
  4064  1873  34FF               	retlw	255
  4065  1874  34FF               	retlw	255
  4066  1875  349C               	retlw	156
  4067  1876  34FF               	retlw	255
  4068  1877  34FF               	retlw	255
  4069  1878  34FF               	retlw	255
  4070  1879  34FF               	retlw	255
  4071  187A  34FF               	retlw	255
  4072  187B  34FF               	retlw	255
  4073  187C  34FF               	retlw	255
  4074  187D  34BF               	retlw	191
  4075  187E  347F               	retlw	127
  4076  187F  34CF               	retlw	207
  4077  1880  34C0               	retlw	192
  4078  1881  34F9               	retlw	249
  4079  1882  34A4               	retlw	164
  4080  1883  34B0               	retlw	176
  4081  1884  3499               	retlw	153
  4082  1885  3492               	retlw	146
  4083  1886  3482               	retlw	130
  4084  1887  34F8               	retlw	248
  4085  1888  3480               	retlw	128
  4086  1889  3490               	retlw	144
  4087  188A  34F6               	retlw	246
  4088  188B  34B6               	retlw	182
  4089  188C  34FF               	retlw	255
  4090  188D  34B7               	retlw	183
  4091  188E  34FF               	retlw	255
  4092  188F  34FF               	retlw	255
  4093  1890  34A0               	retlw	160
  4094  1891  3488               	retlw	136
  4095  1892  3483               	retlw	131
  4096  1893  34C6               	retlw	198
  4097  1894  34A1               	retlw	161
  4098  1895  3486               	retlw	134
  4099  1896  348E               	retlw	142
  4100  1897  34C2               	retlw	194
  4101  1898  3489               	retlw	137
  4102  1899  34CF               	retlw	207
  4103  189A  34E1               	retlw	225
  4104  189B  3487               	retlw	135
  4105  189C  34C7               	retlw	199
  4106  189D  34C8               	retlw	200
  4107  189E  34AB               	retlw	171
  4108  189F  34C0               	retlw	192
  4109  18A0  348C               	retlw	140
  4110  18A1  3498               	retlw	152
  4111  18A2  3488               	retlw	136
  4112  18A3  3492               	retlw	146
  4113  18A4  34CE               	retlw	206
  4114  18A5  34C1               	retlw	193
  4115  18A6  34C1               	retlw	193
  4116  18A7  3481               	retlw	129
  4117  18A8  3489               	retlw	137
  4118  18A9  3491               	retlw	145
  4119  18AA  34E4               	retlw	228
  4120  18AB  34C6               	retlw	198
  4121  18AC  34FF               	retlw	255
  4122  18AD  34F0               	retlw	240
  4123  18AE  34BC               	retlw	188
  4124  18AF  34F7               	retlw	247
  4125  18B0  34DE               	retlw	222
  4126  18B1  34A0               	retlw	160
  4127  18B2  3483               	retlw	131
  4128  18B3  34A7               	retlw	167
  4129  18B4  34A1               	retlw	161
  4130  18B5  3486               	retlw	134
  4131  18B6  348E               	retlw	142
  4132  18B7  3490               	retlw	144
  4133  18B8  348B               	retlw	139
  4134  18B9  34FB               	retlw	251
  4135  18BA  34F1               	retlw	241
  4136  18BB  3487               	retlw	135
  4137  18BC  34C7               	retlw	199
  4138  18BD  34C8               	retlw	200
  4139  18BE  34AB               	retlw	171
  4140  18BF  34A3               	retlw	163
  4141  18C0  348C               	retlw	140
  4142  18C1  3498               	retlw	152
  4143  18C2  34AF               	retlw	175
  4144  18C3  3492               	retlw	146
  4145  18C4  3487               	retlw	135
  4146  18C5  34E3               	retlw	227
  4147  18C6  34E3               	retlw	227
  4148  18C7  3481               	retlw	129
  4149  18C8  3489               	retlw	137
  4150  18C9  3491               	retlw	145
  4151  18CA  34E4               	retlw	228
  4152  18CB  34FF               	retlw	255
  4153  18CC  34FF               	retlw	255
  4154  18CD  34FF               	retlw	255
  4155  18CE  34FE               	retlw	254
  4156  18CF                     __end_of_font7seg:
  4157                           
  4158                           	psect	stringtext2
  4159  20AD                     __pstringtext2:
  4160  20AD                     _led_fs_name:
  4161  20AD  3434               	retlw	52
  4162  20AE  3434               	retlw	52
  4163  20AF  342E               	retlw	46
  4164  20B0  3431               	retlw	49
  4165  20B1  3400               	retlw	0
  4166  20B2  3400               	retlw	0
  4167  20B3  3400               	retlw	0
  4168  20B4  3420               	retlw	32
  4169  20B5  3434               	retlw	52
  4170  20B6  3438               	retlw	56
  4171  20B7  3400               	retlw	0
  4172  20B8  3400               	retlw	0
  4173  20B9  3400               	retlw	0
  4174  20BA  3400               	retlw	0
  4175  20BB  3420               	retlw	32
  4176  20BC  3438               	retlw	56
  4177  20BD  3438               	retlw	56
  4178  20BE  342E               	retlw	46
  4179  20BF  3432               	retlw	50
  4180  20C0  3400               	retlw	0
  4181  20C1  3400               	retlw	0
  4182  20C2  3420               	retlw	32
  4183  20C3  3439               	retlw	57
  4184  20C4  3436               	retlw	54
  4185  20C5  3400               	retlw	0
  4186  20C6  3400               	retlw	0
  4187  20C7  3400               	retlw	0
  4188  20C8  3400               	retlw	0
  4189  20C9  3431               	retlw	49
  4190  20CA  3437               	retlw	55
  4191  20CB  3436               	retlw	54
  4192  20CC  3400               	retlw	0
  4193  20CD  3400               	retlw	0
  4194  20CE  3400               	retlw	0
  4195  20CF  3400               	retlw	0
  4196  20D0  3431               	retlw	49
  4197  20D1  3439               	retlw	57
  4198  20D2  3432               	retlw	50
  4199  20D3  3400               	retlw	0
  4200  20D4  3400               	retlw	0
  4201  20D5  3400               	retlw	0
  4202  20D6  3400               	retlw	0
  4203  20D7                     __end_of_led_fs_name:
  4204                           
  4205                           	psect	stringtext3
  4206  2122                     __pstringtext3:
  4207  2122                     _fsmStateTable:
  4208  2122  3480               	retlw	low _I2C1_DO_IDLE
  4209  2123  3426               	retlw	high _I2C1_DO_IDLE
  4210  2124  34A9               	retlw	low _I2C1_DO_SEND_ADR_READ
  4211  2125  3426               	retlw	high _I2C1_DO_SEND_ADR_READ
  4212  2126  34A2               	retlw	low _I2C1_DO_SEND_ADR_WRITE
  4213  2127  3426               	retlw	high _I2C1_DO_SEND_ADR_WRITE
  4214  2128  340F               	retlw	low _I2C1_DO_TX
  4215  2129  341F               	retlw	high _I2C1_DO_TX
  4216  212A  345E               	retlw	low _I2C1_DO_RX
  4217  212B  341D               	retlw	high _I2C1_DO_RX
  4218  212C  3490               	retlw	low _I2C1_DO_RCEN
  4219  212D  3426               	retlw	high _I2C1_DO_RCEN
  4220  212E  34A0               	retlw	low _I2C1_DO_TX_EMPTY
  4221  212F  341C               	retlw	high _I2C1_DO_TX_EMPTY
  4222  2130  345C               	retlw	low _I2C1_DO_SEND_RESTART_READ
  4223  2131  3426               	retlw	high _I2C1_DO_SEND_RESTART_READ
  4224  2132  3460               	retlw	low _I2C1_DO_SEND_RESTART_WRITE
  4225  2133  3426               	retlw	high _I2C1_DO_SEND_RESTART_WRITE
  4226  2134  3464               	retlw	low _I2C1_DO_SEND_RESTART
  4227  2135  3426               	retlw	high _I2C1_DO_SEND_RESTART
  4228  2136  3468               	retlw	low _I2C1_DO_SEND_STOP
  4229  2137  3426               	retlw	high _I2C1_DO_SEND_STOP
  4230  2138  346C               	retlw	low _I2C1_DO_RX_ACK
  4231  2139  3426               	retlw	high _I2C1_DO_RX_ACK
  4232  213A  3470               	retlw	low _I2C1_DO_RX_NACK_STOP
  4233  213B  3426               	retlw	high _I2C1_DO_RX_NACK_STOP
  4234  213C  3474               	retlw	low _I2C1_DO_RX_NACK_RESTART
  4235  213D  3426               	retlw	high _I2C1_DO_RX_NACK_RESTART
  4236  213E  3485               	retlw	low _I2C1_DO_RESET
  4237  213F  3426               	retlw	high _I2C1_DO_RESET
  4238  2140  3475               	retlw	low _I2C1_DO_ADDRESS_NACK
  4239  2141  341C               	retlw	high _I2C1_DO_ADDRESS_NACK
  4240  2142                     __end_of_fsmStateTable:
  4241                           
  4242                           	psect	stringtext4
  4243  2827                     __pstringtext4:
  4244  2827                     readRE@RE_states:
  4245  2827  3400               	retlw	0
  4246  2828  34FF               	retlw	-1
  4247  2829  3400               	retlw	0
  4248  282A  3405               	retlw	5
  4249  282B  3401               	retlw	1
  4250  282C  3400               	retlw	0
  4251  282D  3405               	retlw	5
  4252  282E  3400               	retlw	0
  4253  282F  3400               	retlw	0
  4254  2830  3405               	retlw	5
  4255  2831  3405               	retlw	5
  4256  2832  3400               	retlw	0
  4257  2833  3405               	retlw	5
  4258  2834  3400               	retlw	0
  4259  2835  3400               	retlw	0
  4260  2836  3400               	retlw	0
  4261  2837                     __end_ofreadRE@RE_states:
  4262                           
  4263                           	psect	stringtext5
  4264  1800                     __pstringtext5:
  4265  1800                     _lcd_fs_name:
  4266  1800  3455               	retlw	85
  4267  1801  344E               	retlw	78
  4268  1802  344C               	retlw	76
  4269  1803  344B               	retlw	75
  4270  1804  3400               	retlw	0
  4271  1805  3400               	retlw	0
  4272  1806  3400               	retlw	0
  4273  1807  3420               	retlw	32
  4274  1808  3420               	retlw	32
  4275  1809  3438               	retlw	56
  4276  180A  346B               	retlw	107
  4277  180B  3400               	retlw	0
  4278  180C  3400               	retlw	0
  4279  180D  3400               	retlw	0
  4280  180E  3420               	retlw	32
  4281  180F  3431               	retlw	49
  4282  1810  3431               	retlw	49
  4283  1811  346B               	retlw	107
  4284  1812  3400               	retlw	0
  4285  1813  3400               	retlw	0
  4286  1814  3400               	retlw	0
  4287  1815  3420               	retlw	32
  4288  1816  3431               	retlw	49
  4289  1817  3432               	retlw	50
  4290  1818  346B               	retlw	107
  4291  1819  3400               	retlw	0
  4292  181A  3400               	retlw	0
  4293  181B  3400               	retlw	0
  4294  181C  3420               	retlw	32
  4295  181D  3431               	retlw	49
  4296  181E  3436               	retlw	54
  4297  181F  346B               	retlw	107
  4298  1820  3400               	retlw	0
  4299  1821  3400               	retlw	0
  4300  1822  3400               	retlw	0
  4301  1823  3420               	retlw	32
  4302  1824  3432               	retlw	50
  4303  1825  3432               	retlw	50
  4304  1826  346B               	retlw	107
  4305  1827  3400               	retlw	0
  4306  1828  3400               	retlw	0
  4307  1829  3400               	retlw	0
  4308  182A  3420               	retlw	32
  4309  182B  3432               	retlw	50
  4310  182C  3434               	retlw	52
  4311  182D  346B               	retlw	107
  4312  182E  3400               	retlw	0
  4313  182F  3400               	retlw	0
  4314  1830  3400               	retlw	0
  4315  1831  3420               	retlw	32
  4316  1832  3433               	retlw	51
  4317  1833  3432               	retlw	50
  4318  1834  346B               	retlw	107
  4319  1835  3400               	retlw	0
  4320  1836  3400               	retlw	0
  4321  1837  3400               	retlw	0
  4322  1838  3434               	retlw	52
  4323  1839  3434               	retlw	52
  4324  183A  342E               	retlw	46
  4325  183B  3431               	retlw	49
  4326  183C  346B               	retlw	107
  4327  183D  3400               	retlw	0
  4328  183E  3400               	retlw	0
  4329  183F  3420               	retlw	32
  4330  1840  3434               	retlw	52
  4331  1841  3438               	retlw	56
  4332  1842  346B               	retlw	107
  4333  1843  3400               	retlw	0
  4334  1844  3400               	retlw	0
  4335  1845  3400               	retlw	0
  4336  1846  3420               	retlw	32
  4337  1847  3436               	retlw	54
  4338  1848  3434               	retlw	52
  4339  1849  346B               	retlw	107
  4340  184A  3400               	retlw	0
  4341  184B  3400               	retlw	0
  4342  184C  3400               	retlw	0
  4343  184D  3438               	retlw	56
  4344  184E  3438               	retlw	56
  4345  184F  342E               	retlw	46
  4346  1850  3432               	retlw	50
  4347  1851  346B               	retlw	107
  4348  1852  3400               	retlw	0
  4349  1853  3400               	retlw	0
  4350  1854  3420               	retlw	32
  4351  1855  3439               	retlw	57
  4352  1856  3436               	retlw	54
  4353  1857  346B               	retlw	107
  4354  1858  3400               	retlw	0
  4355  1859  3400               	retlw	0
  4356  185A  3400               	retlw	0
  4357  185B  3431               	retlw	49
  4358  185C  3432               	retlw	50
  4359  185D  3438               	retlw	56
  4360  185E  346B               	retlw	107
  4361  185F  3400               	retlw	0
  4362  1860  3400               	retlw	0
  4363  1861  3400               	retlw	0
  4364  1862  3431               	retlw	49
  4365  1863  3437               	retlw	55
  4366  1864  3436               	retlw	54
  4367  1865  346B               	retlw	107
  4368  1866  3400               	retlw	0
  4369  1867  3400               	retlw	0
  4370  1868  3400               	retlw	0
  4371  1869  3431               	retlw	49
  4372  186A  3439               	retlw	57
  4373  186B  3432               	retlw	50
  4374  186C  346B               	retlw	107
  4375  186D  3400               	retlw	0
  4376  186E  3400               	retlw	0
  4377  186F  3400               	retlw	0
  4378  1870                     __end_of_lcd_fs_name:
  4379                           
  4380                           	psect	stringtext6
  4381  2000                     __pstringtext6:
  4382  2000                     _lcd_hpf_fc:
  4383  2000  3434               	retlw	52
  4384  2001  3448               	retlw	72
  4385  2002  347A               	retlw	122
  4386  2003  3420               	retlw	32
  4387  2004  3420               	retlw	32
  4388  2005  3400               	retlw	0
  4389  2006  3400               	retlw	0
  4390  2007  3438               	retlw	56
  4391  2008  3448               	retlw	72
  4392  2009  347A               	retlw	122
  4393  200A  3420               	retlw	32
  4394  200B  3420               	retlw	32
  4395  200C  3400               	retlw	0
  4396  200D  3400               	retlw	0
  4397  200E  3431               	retlw	49
  4398  200F  3435               	retlw	53
  4399  2010  3448               	retlw	72
  4400  2011  347A               	retlw	122
  4401  2012  3420               	retlw	32
  4402  2013  3420               	retlw	32
  4403  2014  3400               	retlw	0
  4404  2015  3433               	retlw	51
  4405  2016  3430               	retlw	48
  4406  2017  3448               	retlw	72
  4407  2018  347A               	retlw	122
  4408  2019  3420               	retlw	32
  4409  201A  3420               	retlw	32
  4410  201B  3400               	retlw	0
  4411  201C  3435               	retlw	53
  4412  201D  3439               	retlw	57
  4413  201E  3448               	retlw	72
  4414  201F  347A               	retlw	122
  4415  2020  3420               	retlw	32
  4416  2021  3420               	retlw	32
  4417  2022  3400               	retlw	0
  4418  2023  3431               	retlw	49
  4419  2024  3431               	retlw	49
  4420  2025  3438               	retlw	56
  4421  2026  3448               	retlw	72
  4422  2027  347A               	retlw	122
  4423  2028  3420               	retlw	32
  4424  2029  3400               	retlw	0
  4425  202A  3432               	retlw	50
  4426  202B  3433               	retlw	51
  4427  202C  3435               	retlw	53
  4428  202D  3448               	retlw	72
  4429  202E  347A               	retlw	122
  4430  202F  3420               	retlw	32
  4431  2030  3400               	retlw	0
  4432  2031  3434               	retlw	52
  4433  2032  3436               	retlw	54
  4434  2033  3433               	retlw	51
  4435  2034  3448               	retlw	72
  4436  2035  347A               	retlw	122
  4437  2036  3420               	retlw	32
  4438  2037  3400               	retlw	0
  4439  2038  3442               	retlw	66
  4440  2039  3459               	retlw	89
  4441  203A  3450               	retlw	80
  4442  203B  3420               	retlw	32
  4443  203C  3420               	retlw	32
  4444  203D  3400               	retlw	0
  4445  203E  3400               	retlw	0
  4446  203F                     __end_of_lcd_hpf_fc:
  4447                           
  4448                           	psect	stringtext7
  4449  203F                     __pstringtext7:
  4450  203F                     _led_hpf_fc:
  4451  203F  3420               	retlw	32
  4452  2040  3420               	retlw	32
  4453  2041  3434               	retlw	52
  4454  2042  3400               	retlw	0
  4455  2043  3400               	retlw	0
  4456  2044  3400               	retlw	0
  4457  2045  3400               	retlw	0
  4458  2046  3420               	retlw	32
  4459  2047  3420               	retlw	32
  4460  2048  3438               	retlw	56
  4461  2049  3400               	retlw	0
  4462  204A  3400               	retlw	0
  4463  204B  3400               	retlw	0
  4464  204C  3400               	retlw	0
  4465  204D  3420               	retlw	32
  4466  204E  3431               	retlw	49
  4467  204F  3435               	retlw	53
  4468  2050  3400               	retlw	0
  4469  2051  3400               	retlw	0
  4470  2052  3400               	retlw	0
  4471  2053  3400               	retlw	0
  4472  2054  3420               	retlw	32
  4473  2055  3433               	retlw	51
  4474  2056  3430               	retlw	48
  4475  2057  3400               	retlw	0
  4476  2058  3400               	retlw	0
  4477  2059  3400               	retlw	0
  4478  205A  3400               	retlw	0
  4479  205B  3420               	retlw	32
  4480  205C  3435               	retlw	53
  4481  205D  3439               	retlw	57
  4482  205E  3400               	retlw	0
  4483  205F  3400               	retlw	0
  4484  2060  3400               	retlw	0
  4485  2061  3400               	retlw	0
  4486  2062  3431               	retlw	49
  4487  2063  3431               	retlw	49
  4488  2064  3438               	retlw	56
  4489  2065  3400               	retlw	0
  4490  2066  3400               	retlw	0
  4491  2067  3400               	retlw	0
  4492  2068  3400               	retlw	0
  4493  2069  3432               	retlw	50
  4494  206A  3433               	retlw	51
  4495  206B  3435               	retlw	53
  4496  206C  3400               	retlw	0
  4497  206D  3400               	retlw	0
  4498  206E  3400               	retlw	0
  4499  206F  3400               	retlw	0
  4500  2070  3434               	retlw	52
  4501  2071  3436               	retlw	54
  4502  2072  3433               	retlw	51
  4503  2073  3400               	retlw	0
  4504  2074  3400               	retlw	0
  4505  2075  3400               	retlw	0
  4506  2076  3400               	retlw	0
  4507  2077  346F               	retlw	111
  4508  2078  3446               	retlw	70
  4509  2079  3446               	retlw	70
  4510  207A  3400               	retlw	0
  4511  207B  3400               	retlw	0
  4512  207C  3400               	retlw	0
  4513  207D  3400               	retlw	0
  4514  207E                     __end_of_led_hpf_fc:
  4515                           
  4516                           	psect	stringtext8
  4517  20D7                     __pstringtext8:
  4518  20D7                     _lcd_src_name:
  4519  20D7  3443               	retlw	67
  4520  20D8  344F               	retlw	79
  4521  20D9  3441               	retlw	65
  4522  20DA  3458               	retlw	88
  4523  20DB  3449               	retlw	73
  4524  20DC  3441               	retlw	65
  4525  20DD  344C               	retlw	76
  4526  20DE  3400               	retlw	0
  4527  20DF  344F               	retlw	79
  4528  20E0  3450               	retlw	80
  4529  20E1  3454               	retlw	84
  4530  20E2  3449               	retlw	73
  4531  20E3  3443               	retlw	67
  4532  20E4  3441               	retlw	65
  4533  20E5  344C               	retlw	76
  4534  20E6  3400               	retlw	0
  4535  20E7  3441               	retlw	65
  4536  20E8  3444               	retlw	68
  4537  20E9  3443               	retlw	67
  4538  20EA  3420               	retlw	32
  4539  20EB  3420               	retlw	32
  4540  20EC  3420               	retlw	32
  4541  20ED  3420               	retlw	32
  4542  20EE  3400               	retlw	0
  4543  20EF  3448               	retlw	72
  4544  20F0  3444               	retlw	68
  4545  20F1  344D               	retlw	77
  4546  20F2  3449               	retlw	73
  4547  20F3  3420               	retlw	32
  4548  20F4  3420               	retlw	32
  4549  20F5  3420               	retlw	32
  4550  20F6  3400               	retlw	0
  4551  20F7  3449               	retlw	73
  4552  20F8  3432               	retlw	50
  4553  20F9  3453               	retlw	83
  4554  20FA  3420               	retlw	32
  4555  20FB  3420               	retlw	32
  4556  20FC  3420               	retlw	32
  4557  20FD  3420               	retlw	32
  4558  20FE  3400               	retlw	0
  4559  20FF                     __end_of_lcd_src_name:
  4560                           
  4561                           	psect	stringtext9
  4562  20FF                     __pstringtext9:
  4563  20FF                     _led_src_name:
  4564  20FF  3443               	retlw	67
  4565  2100  344F               	retlw	79
  4566  2101  3441               	retlw	65
  4567  2102  3400               	retlw	0
  4568  2103  3400               	retlw	0
  4569  2104  3400               	retlw	0
  4570  2105  3400               	retlw	0
  4571  2106  344F               	retlw	79
  4572  2107  3450               	retlw	80
  4573  2108  3454               	retlw	84
  4574  2109  3400               	retlw	0
  4575  210A  3400               	retlw	0
  4576  210B  3400               	retlw	0
  4577  210C  3400               	retlw	0
  4578  210D  3441               	retlw	65
  4579  210E  3464               	retlw	100
  4580  210F  3443               	retlw	67
  4581  2110  3400               	retlw	0
  4582  2111  3400               	retlw	0
  4583  2112  3400               	retlw	0
  4584  2113  3400               	retlw	0
  4585  2114  3448               	retlw	72
  4586  2115  3444               	retlw	68
  4587  2116  344D               	retlw	77
  4588  2117  3400               	retlw	0
  4589  2118  3400               	retlw	0
  4590  2119  3400               	retlw	0
  4591  211A  3400               	retlw	0
  4592  211B  3431               	retlw	49
  4593  211C  3432               	retlw	50
  4594  211D  3453               	retlw	83
  4595  211E  3400               	retlw	0
  4596  211F  3400               	retlw	0
  4597  2120  3400               	retlw	0
  4598  2121  3400               	retlw	0
  4599  2122                     __end_of_led_src_name:
  4600                           
  4601                           	psect	stringtext10
  4602  2837                     __pstringtext10:
  4603  2837                     _lcd_aux_name:
  4604  2837  3449               	retlw	73
  4605  2838  344E               	retlw	78
  4606  2839  3450               	retlw	80
  4607  283A  3455               	retlw	85
  4608  283B  3454               	retlw	84
  4609  283C  3420               	retlw	32
  4610  283D  3400               	retlw	0
  4611  283E  344F               	retlw	79
  4612  283F  3455               	retlw	85
  4613  2840  3454               	retlw	84
  4614  2841  3450               	retlw	80
  4615  2842  3455               	retlw	85
  4616  2843  3454               	retlw	84
  4617  2844  3400               	retlw	0
  4618  2845                     __end_of_lcd_aux_name:
  4619                           
  4620                           	psect	stringtext11
  4621  207E                     __pstringtext11:
  4622  207E                     _led_i2s_dir:
  4623  207E  3431               	retlw	49
  4624  207F  346E               	retlw	110
  4625  2080  3470               	retlw	112
  4626  2081  3400               	retlw	0
  4627  2082  3400               	retlw	0
  4628  2083  3400               	retlw	0
  4629  2084  3400               	retlw	0
  4630  2085  344F               	retlw	79
  4631  2086  3475               	retlw	117
  4632  2087  3474               	retlw	116
  4633  2088  3400               	retlw	0
  4634  2089  3400               	retlw	0
  4635  208A  3400               	retlw	0
  4636  208B  3400               	retlw	0
  4637  208C                     __end_of_led_i2s_dir:
  4638  000B                     _INTCONbits	set	11
  4639  000E                     _PORTC	set	14
  4640  000C                     _PORTAbits	set	12
  4641  001B                     _T1CONbits	set	27
  4642  001B                     _T1CON	set	27
  4643  0011                     _PIR1bits	set	17
  4644  0019                     _TMR1L	set	25
  4645  001A                     _TMR1H	set	26
  4646  001C                     _T1GCON	set	28
  4647  008E                     _TRISC	set	142
  4648  008D                     _TRISB	set	141
  4649  008C                     _TRISA	set	140
  4650  0097                     _WDTCON	set	151
  4651  0091                     _PIE1bits	set	145
  4652  010D                     _LATBbits	set	269
  4653  010E                     _LATC	set	270
  4654  010D                     _LATB	set	269
  4655  010C                     _LATA	set	268
  4656  010C                     _LATAbits	set	268
  4657  018C                     _ANSELA	set	396
  4658  018D                     _ANSELB	set	397
  4659  018E                     _ANSELC	set	398
  4660  020E                     _WPUC	set	526
  4661  020C                     _WPUA	set	524
  4662  020D                     _WPUB	set	525
  4663  0216                     _SSP1CON2bits	set	534
  4664  0211                     _SSP1BUF	set	529
  4665  0217                     _SSP1CON3	set	535
  4666  0215                     _SSP1CON1bits	set	533
  4667  0212                     _SSP1ADD	set	530
  4668  0216                     _SSP1CON2	set	534
  4669  0215                     _SSP1CON1	set	533
  4670  0214                     _SSP1STAT	set	532
  4671  028E                     _ODCONC	set	654
  4672  028D                     _ODCONB	set	653
  4673  028C                     _ODCONA	set	652
  4674  030E                     _SLRCONC	set	782
  4675  030D                     _SLRCONB	set	781
  4676  030C                     _SLRCONA	set	780
  4677  038E                     _INLVLC	set	910
  4678  038D                     _INLVLB	set	909
  4679  038C                     _INLVLA	set	908
  4680  0896                     _NVMCON2	set	2198
  4681  0893                     _NVMDATL	set	2195
  4682  0895                     _NVMCON1bits	set	2197
  4683  0892                     _NVMADRH	set	2194
  4684  0891                     _NVMADRL	set	2193
  4685  0916                     _PMD5	set	2326
  4686  0915                     _PMD4	set	2325
  4687  0914                     _PMD3	set	2324
  4688  0913                     _PMD2	set	2323
  4689  0912                     _PMD1	set	2322
  4690  0911                     _PMD0	set	2321
  4691  091E                     _OSCTUNE	set	2334
  4692  091F                     _OSCFRQ	set	2335
  4693  091D                     _OSCEN	set	2333
  4694  091B                     _OSCCON3	set	2331
  4695  0919                     _OSCCON1	set	2329
  4696  48E0                     _PLLR	set	18656
  4697  0E21                     _SSP1DATPPS	set	3617
  4698  0E20                     _SSP1CLKPPS	set	3616
  4699  0E9C                     _RB4PPS	set	3740
  4700  0E9E                     _RB6PPS	set	3742
  4701  208C                     STR_36:
  4702  208C  3457               	retlw	87	;'W'
  4703  208D  3441               	retlw	65	;'A'
  4704  208E  3452               	retlw	82	;'R'
  4705  208F  343A               	retlw	58	;':'
  4706  2090  3425               	retlw	37	;'%'
  4707  2091  3430               	retlw	48	;'0'
  4708  2092  3432               	retlw	50	;'2'
  4709  2093  3458               	retlw	88	;'X'
  4710  2094  3420               	retlw	32	;' '
  4711  2095  3425               	retlw	37	;'%'
  4712  2096  3430               	retlw	48	;'0'
  4713  2097  3432               	retlw	50	;'2'
  4714  2098  3458               	retlw	88	;'X'
  4715  2099  3420               	retlw	32	;' '
  4716  209A  3425               	retlw	37	;'%'
  4717  209B  3430               	retlw	48	;'0'
  4718  209C  3432               	retlw	50	;'2'
  4719  209D  3458               	retlw	88	;'X'
  4720  209E  3420               	retlw	32	;' '
  4721  209F  3425               	retlw	37	;'%'
  4722  20A0  3430               	retlw	48	;'0'
  4723  20A1  3432               	retlw	50	;'2'
  4724  20A2  3458               	retlw	88	;'X'
  4725  20A3  3420               	retlw	32	;' '
  4726  20A4  3425               	retlw	37	;'%'
  4727  20A5  3430               	retlw	48	;'0'
  4728  20A6  3432               	retlw	50	;'2'
  4729  20A7  3458               	retlw	88	;'X'
  4730  20A8  3425               	retlw	37	;'%'
  4731  20A9  3430               	retlw	48	;'0'
  4732  20AA  3432               	retlw	50	;'2'
  4733  20AB  3458               	retlw	88	;'X'
  4734  20AC  3400               	retlw	0
  4735                           
  4736                           	psect	stringtext12
  4737  2800                     __pstringtext12:
  4738  2800                     STR_13:
  4739  2800  3446               	retlw	70	;'F'
  4740  2801  3469               	retlw	105	;'i'
  4741  2802  3472               	retlw	114	;'r'
  4742  2803  346D               	retlw	109	;'m'
  4743  2804  3477               	retlw	119	;'w'
  4744  2805  3461               	retlw	97	;'a'
  4745  2806  3472               	retlw	114	;'r'
  4746  2807  3465               	retlw	101	;'e'
  4747  2808  343A               	retlw	58	;':'
  4748  2809  3420               	retlw	32	;' '
  4749  280A  3432               	retlw	50	;'2'
  4750  280B  3430               	retlw	48	;'0'
  4751  280C  3432               	retlw	50	;'2'
  4752  280D  3430               	retlw	48	;'0'
  4753  280E  344F               	retlw	79	;'O'
  4754  280F  3443               	retlw	67	;'C'
  4755  2810  3454               	retlw	84	;'T'
  4756  2811  3431               	retlw	49	;'1'
  4757  2812  3431               	retlw	49	;'1'
  4758  2813  3400               	retlw	0
  4759                           
  4760                           	psect	stringtext13
  4761  2814                     __pstringtext13:
  4762  2814                     STR_35:
  4763  2814  3456               	retlw	86	;'V'
  4764  2815  344F               	retlw	79	;'O'
  4765  2816  344C               	retlw	76	;'L'
  4766  2817  343A               	retlw	58	;':'
  4767  2818  3425               	retlw	37	;'%'
  4768  2819  3433               	retlw	51	;'3'
  4769  281A  3464               	retlw	100	;'d'
  4770  281B  3420               	retlw	32	;' '
  4771  281C  3442               	retlw	66	;'B'
  4772  281D  3441               	retlw	65	;'A'
  4773  281E  344C               	retlw	76	;'L'
  4774  281F  343A               	retlw	58	;':'
  4775  2820  3425               	retlw	37	;'%'
  4776  2821  3432               	retlw	50	;'2'
  4777  2822  3464               	retlw	100	;'d'
  4778  2823  3420               	retlw	32	;' '
  4779  2824  3425               	retlw	37	;'%'
  4780  2825  3473               	retlw	115	;'s'
  4781  2826  3400               	retlw	0
  4782                           
  4783                           	psect	stringtext14
  4784  2845                     __pstringtext14:
  4785  2845                     STR_34:
  4786  2845  3441               	retlw	65	;'A'
  4787  2846  3455               	retlw	85	;'U'
  4788  2847  3458               	retlw	88	;'X'
  4789  2848  343A               	retlw	58	;':'
  4790  2849  3425               	retlw	37	;'%'
  4791  284A  3473               	retlw	115	;'s'
  4792  284B  3420               	retlw	32	;' '
  4793  284C  3448               	retlw	72	;'H'
  4794  284D  3450               	retlw	80	;'P'
  4795  284E  3446               	retlw	70	;'F'
  4796  284F  343A               	retlw	58	;':'
  4797  2850  3425               	retlw	37	;'%'
  4798  2851  3473               	retlw	115	;'s'
  4799  2852  3400               	retlw	0
  4800                           
  4801                           	psect	stringtext15
  4802  2853                     __pstringtext15:
  4803  2853                     STR_33:
  4804  2853  3453               	retlw	83	;'S'
  4805  2854  344F               	retlw	79	;'O'
  4806  2855  3455               	retlw	85	;'U'
  4807  2856  3452               	retlw	82	;'R'
  4808  2857  3443               	retlw	67	;'C'
  4809  2858  3445               	retlw	69	;'E'
  4810  2859  343A               	retlw	58	;':'
  4811  285A  3425               	retlw	37	;'%'
  4812  285B  3473               	retlw	115	;'s'
  4813  285C  3400               	retlw	0
  4814                           
  4815                           	psect	stringtext16
  4816  285D                     __pstringtext16:
  4817  285D                     STR_19:
  4818  285D  3425               	retlw	37	;'%'
  4819  285E  3430               	retlw	48	;'0'
  4820  285F  3433               	retlw	51	;'3'
  4821  2860  3464               	retlw	100	;'d'
  4822  2861  3400               	retlw	0
  4823                           
  4824                           	psect	stringtext17
  4825  2862                     __pstringtext17:
  4826  2862                     STR_16:
  4827  2862  3420               	retlw	32	;' '
  4828  2863  3420               	retlw	32	;' '
  4829  2864  3420               	retlw	32	;' '
  4830  2865  3400               	retlw	0
  4831                           
  4832                           	psect	stringtext18
  4833  2866                     __pstringtext18:
  4834  2866                     STR_3:
  4835  2866  342E               	retlw	46	;'.'
  4836  2867  3430               	retlw	48	;'0'
  4837  2868  3420               	retlw	32	;' '
  4838  2869  3400               	retlw	0
  4839                           
  4840                           	psect	stringtext19
  4841  286A                     __pstringtext19:
  4842  286A                     STR_4:
  4843  286A  342E               	retlw	46	;'.'
  4844  286B  3435               	retlw	53	;'5'
  4845  286C  3420               	retlw	32	;' '
  4846  286D  3400               	retlw	0
  4847                           
  4848                           	psect	stringtext20
  4849  286E                     __pstringtext20:
  4850  286E                     STR_14:
  4851  286E  3448               	retlw	72	;'H'
  4852  286F  344C               	retlw	76	;'L'
  4853  2870  3430               	retlw	48	;'0'
  4854  2871  3400               	retlw	0
  4855                           
  4856                           	psect	stringtext21
  4857  2872                     __pstringtext21:
  4858  2872                     STR_15:
  4859  2872  3453               	retlw	83	;'S'
  4860  2873  344F               	retlw	79	;'O'
  4861  2874  3443               	retlw	67	;'C'
  4862  2875  3400               	retlw	0
  4863                           
  4864                           	psect	stringtext22
  4865  2876                     __pstringtext22:
  4866  2876                     STR_1:
  4867  2876  344F               	retlw	79	;'O'
  4868  2877  3446               	retlw	70	;'F'
  4869  2878  3446               	retlw	70	;'F'
  4870  2879  3400               	retlw	0
  4871                           
  4872                           	psect	stringtext23
  4873  287A                     __pstringtext23:
  4874  287A                     STR_22:
  4875  287A  3448               	retlw	72	;'H'
  4876  287B  3450               	retlw	80	;'P'
  4877  287C  3446               	retlw	70	;'F'
  4878  287D  3400               	retlw	0
  4879                           
  4880                           	psect	stringtext24
  4881  287E                     __pstringtext24:
  4882  287E                     STR_17:
  4883  287E  3442               	retlw	66	;'B'
  4884  287F  3441               	retlw	65	;'A'
  4885  2880  344C               	retlw	76	;'L'
  4886  2881  3400               	retlw	0
  4887                           
  4888                           	psect	stringtext25
  4889  2882                     __pstringtext25:
  4890  2882                     STR_25:
  4891  2882  3455               	retlw	85	;'U'
  4892  2883  344F               	retlw	79	;'O'
  4893  2884  344C               	retlw	76	;'L'
  4894  2885  3400               	retlw	0
  4895                           
  4896                           	psect	stringtext26
  4897  2886                     __pstringtext26:
  4898  2886                     STR_29:
  4899  2886  3431               	retlw	49	;'1'
  4900  2887  3432               	retlw	50	;'2'
  4901  2888  3453               	retlw	83	;'S'
  4902  2889  3400               	retlw	0
  4903                           
  4904                           	psect	stringtext27
  4905  288A                     __pstringtext27:
  4906  288A                     STR_7:
  4907  288A  344C               	retlw	76	;'L'
  4908  288B  3441               	retlw	65	;'A'
  4909  288C  3453               	retlw	83	;'S'
  4910  288D  3400               	retlw	0
  4911                           
  4912                           	psect	stringtext28
  4913  288E                     __pstringtext28:
  4914  288E                     STR_27:
  4915  288E  3453               	retlw	83	;'S'
  4916  288F  3445               	retlw	69	;'E'
  4917  2890  3454               	retlw	84	;'T'
  4918  2891  3400               	retlw	0
  4919                           
  4920                           	psect	stringtext29
  4921  2892                     __pstringtext29:
  4922  2892                     STR_2:
  4923  2892  3425               	retlw	37	;'%'
  4924  2893  3432               	retlw	50	;'2'
  4925  2894  3464               	retlw	100	;'d'
  4926  2895  3400               	retlw	0
  4927                           
  4928                           	psect	stringtext30
  4929  2896                     __pstringtext30:
  4930  2896                     STR_5:
  4931  2896  3425               	retlw	37	;'%'
  4932  2897  3433               	retlw	51	;'3'
  4933  2898  3464               	retlw	100	;'d'
  4934  2899  3400               	retlw	0
  4935                           
  4936                           	psect	stringtext31
  4937  289A                     __pstringtext31:
  4938  289A                     STR_32:
  4939  289A  3446               	retlw	70	;'F'
  4940  289B  3441               	retlw	65	;'A'
  4941  289C  3464               	retlw	100	;'d'
  4942  289D  3400               	retlw	0
  4943                           
  4944                           	psect	stringtext32
  4945  289E                     __pstringtext32:
  4946  289E                     STR_6:
  4947  289E  342E               	retlw	46	;'.'
  4948  289F  3400               	retlw	0
  4949                           
  4950                           	psect	stringtext33
  4951  0000                     __pstringtext33:
  4952  2862                     
  4953                           	psect	cinit
  4954  0027                     start_initialization:	
  4955                           ; #config settings
  4956                           
  4957  0027                     __initialization:
  4958                           
  4959                           ; Initialize objects allocated to BANK2
  4960  0027  3039               	movlw	low __pidataBANK2
  4961  0028  0084               	movwf	4
  4962  0029  309A               	movlw	(high __pidataBANK2)| (0+128)
  4963  002A  0085               	movwf	5
  4964  002B  304F               	movlw	low __pdataBANK2
  4965  002C  0086               	movwf	6
  4966  002D  3001               	movlw	high __pdataBANK2
  4967  002E  0087               	movwf	7
  4968  002F  301A               	movlw	26
  4969  0030  31A6  269C  3180   	fcall	init_ram
  4970                           
  4971                           ; Initialize objects allocated to BANK3
  4972  0033  3078               	movlw	low __pidataBANK3
  4973  0034  0084               	movwf	4
  4974  0035  309E               	movlw	(high __pidataBANK3)| (0+128)
  4975  0036  0085               	movwf	5
  4976  0037  30A0               	movlw	low __pdataBANK3
  4977  0038  0086               	movwf	6
  4978  0039  3001               	movlw	high __pdataBANK3
  4979  003A  0087               	movwf	7
  4980  003B  304B               	movlw	75
  4981  003C  31A6  269C  3180   	fcall	init_ram
  4982                           
  4983                           ; Initialize objects allocated to BANK4
  4984  003F  30CC               	movlw	low __pidataBANK4
  4985  0040  0084               	movwf	4
  4986  0041  309C               	movlw	(high __pidataBANK4)| (0+128)
  4987  0042  0085               	movwf	5
  4988  0043  3020               	movlw	low __pdataBANK4
  4989  0044  0086               	movwf	6
  4990  0045  3002               	movlw	high __pdataBANK4
  4991  0046  0087               	movwf	7
  4992  0047  302E               	movlw	46
  4993  0048  31A6  269C  3180   	fcall	init_ram
  4994                           
  4995                           ; Initialize objects allocated to BANK5
  4996  004B  30D2               	movlw	low __pidataBANK5
  4997  004C  0084               	movwf	4
  4998  004D  30A6               	movlw	(high __pidataBANK5)| (0+128)
  4999  004E  0085               	movwf	5
  5000  004F  30CB               	movlw	low __pdataBANK5
  5001  0050  0086               	movwf	6
  5002  0051  3002               	movlw	high __pdataBANK5
  5003  0052  0087               	movwf	7
  5004  0053  3009               	movlw	9
  5005  0054  31A6  269C  3180   	fcall	init_ram
  5006                           
  5007                           ; Clear objects allocated to COMMON
  5008  0057  01FD               	clrf	__pbssCOMMON& (0+127)
  5009                           
  5010                           ; Clear objects allocated to BANK0
  5011  0058  01EA               	clrf	__pbssBANK0& (0+127)
  5012  0059  01EB               	clrf	(__pbssBANK0+1)& (0+127)
  5013  005A  01EC               	clrf	(__pbssBANK0+2)& (0+127)
  5014                           
  5015                           ; Clear objects allocated to BANK2
  5016  005B  3020               	movlw	low __pbssBANK2
  5017  005C  0084               	movwf	4
  5018  005D  3001               	movlw	high __pbssBANK2
  5019  005E  0085               	movwf	5
  5020  005F  302F               	movlw	47
  5021  0060  31A6  2696  3180   	fcall	clear_ram0
  5022                           
  5023                           ; Clear objects allocated to BANK3
  5024  0063  0023               	movlb	3	; select bank3
  5025  0064  01EB               	clrf	__pbssBANK3& (0+127)
  5026  0065  01EC               	clrf	(__pbssBANK3+1)& (0+127)
  5027  0066  01ED               	clrf	(__pbssBANK3+2)& (0+127)
  5028  0067  01EE               	clrf	(__pbssBANK3+3)& (0+127)
  5029                           
  5030                           ; Clear objects allocated to BANK4
  5031  0068  304E               	movlw	low __pbssBANK4
  5032  0069  0084               	movwf	4
  5033  006A  3002               	movlw	high __pbssBANK4
  5034  006B  0085               	movwf	5
  5035  006C  301E               	movlw	30
  5036  006D  31A6  2696  3180   	fcall	clear_ram0
  5037                           
  5038                           ; Clear objects allocated to BANK5
  5039  0070  30A0               	movlw	low __pbssBANK5
  5040  0071  0084               	movwf	4
  5041  0072  3002               	movlw	high __pbssBANK5
  5042  0073  0085               	movwf	5
  5043  0074  3020               	movlw	32
  5044  0075  31A6  2696  3180   	fcall	clear_ram0
  5045                           
  5046                           ; Clear objects allocated to BANK6
  5047  0078  3020               	movlw	low __pbssBANK6
  5048  0079  0084               	movwf	4
  5049  007A  3003               	movlw	high __pbssBANK6
  5050  007B  0085               	movwf	5
  5051  007C  3029               	movlw	41
  5052  007D  31A6  2696         	fcall	clear_ram0
  5053  007F                     end_of_initialization:	
  5054                           ;End of C runtime variable initialization code
  5055                           
  5056  007F                     __end_of__initialization:
  5057  007F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5058  0080  0020               	movlb	0
  5059  0081  3180  2883         	ljmp	_main	;jump to C main() function
  5060                           
  5061                           	psect	bssCOMMON
  5062  007D                     __pbssCOMMON:
  5063  007D                     _current_direction:
  5064  007D                     	ds	1
  5065                           
  5066                           	psect	bssBANK0
  5067  006A                     __pbssBANK0:
  5068  006A                     _current_hpf:
  5069  006A                     	ds	1
  5070  006B                     _current_balance:
  5071  006B                     	ds	1
  5072  006C                     _current_volume:
  5073  006C                     	ds	1
  5074                           
  5075                           	psect	bssBANK2
  5076  0120                     __pbssBANK2:
  5077  0120                     TMR1_DefaultInterruptHandler@led_blink:
  5078  0120                     	ds	3
  5079  0123                     _blink_rate:
  5080  0123                     	ds	3
  5081  0126                     _width:
  5082  0126                     	ds	2
  5083  0128                     _prec:
  5084  0128                     	ds	2
  5085  012A                     _flags:
  5086  012A                     	ds	2
  5087  012C                     TMR1_DefaultInterruptHandler@pushcnt:
  5088  012C                     	ds	2
  5089  012E                     _TMR1_InterruptHandler:
  5090  012E                     	ds	2
  5091  0130                     _timer1ReloadVal:
  5092  0130                     	ds	2
  5093  0132                     _MSSP1_InterruptHandler:
  5094  0132                     	ds	2
  5095  0134                     main@count:
  5096  0134                     	ds	1
  5097  0135                     chk6422warning@prail:
  5098  0135                     	ds	1
  5099  0136                     chk6422warning@ilim:
  5100  0136                     	ds	1
  5101  0137                     chk6422warning@clip:
  5102  0137                     	ds	1
  5103  0138                     chk6422warning@otwarn:
  5104  0138                     	ds	1
  5105  0139                     chk6422warning@otshut:
  5106  0139                     	ds	1
  5107  013A                     chk6422warning@ocdc:
  5108  013A                     	ds	1
  5109  013B                     chk6422warning@lasttime:
  5110  013B                     	ds	1
  5111  013C                     _current_uol:
  5112  013C                     	ds	1
  5113  013D                     _current_fs:
  5114  013D                     	ds	1
  5115  013E                     _current_aux:
  5116  013E                     	ds	1
  5117  013F                     _stored_volume:
  5118  013F                     	ds	1
  5119  0140                     _current_source:
  5120  0140                     	ds	1
  5121  0141                     _gain:
  5122  0141                     	ds	1
  5123  0142                     TMR1_DefaultInterruptHandler@RE_offset:
  5124  0142                     	ds	1
  5125  0143                     TMR1_DefaultInterruptHandler@pushstat:
  5126  0143                     	ds	1
  5127  0144                     TMR1_DefaultInterruptHandler@intcnt:
  5128  0144                     	ds	1
  5129  0145                     read_clickRE@interval:
  5130  0145                     	ds	1
  5131  0146                     read_clickRE@index:
  5132  0146                     	ds	1
  5133  0147                     readRE@RE_old:
  5134  0147                     	ds	1
  5135  0148                     readRE@direction:
  5136  0148                     	ds	1
  5137  0149                     _button1:
  5138  0149                     	ds	1
  5139  014A                     _RE_pos:
  5140  014A                     	ds	1
  5141  014B                     write_tas6422@buffer:
  5142  014B                     	ds	2
  5143  014D                     _tasbuff:
  5144  014D                     	ds	2
  5145                           
  5146                           	psect	dataBANK2
  5147  014F                     __pdataBANK2:
  5148  014F                     _TAS_NORMAL:
  5149  014F                     	ds	2
  5150  0151                     _TAS_CLEAR_FALT:
  5151  0151                     	ds	2
  5152  0153                     _TAS_PLAY:
  5153  0153                     	ds	2
  5154  0155                     _TAS_FS96K:
  5155  0155                     	ds	2
  5156  0157                     _TAS_AC:
  5157  0157                     	ds	2
  5158  0159                     _DIT_ADC:
  5159  0159                     	ds	2
  5160  015B                     _DIT_DIR:
  5161  015B                     	ds	2
  5162  015D                     _DIR_OPT:
  5163  015D                     	ds	2
  5164  015F                     _AUXSRC_DIR:
  5165  015F                     	ds	2
  5166  0161                     _SRC_ADC:
  5167  0161                     	ds	2
  5168  0163                     _SRC_DIR:
  5169  0163                     	ds	2
  5170  0165                     _I2S_IN:
  5171  0165                     	ds	2
  5172  0167                     _I2S_OUT:
  5173  0167                     	ds	2
  5174                           
  5175                           	psect	bssBANK3
  5176  01EB                     __pbssBANK3:
  5177  01EB                     _nout:
  5178  01EB                     	ds	2
  5179  01ED                     _TAS_RUN:
  5180  01ED                     	ds	2
  5181                           
  5182                           	psect	dataBANK3
  5183  01A0                     __pdataBANK3:
  5184  01A0                     _led_dot:
  5185  01A0                     	ds	3
  5186  01A3                     _ADC_ATTR_6dB:
  5187  01A3                     	ds	2
  5188  01A5                     _ADC_ATTL_6dB:
  5189  01A5                     	ds	2
  5190  01A7                     _ADC_ATTR_0dB:
  5191  01A7                     	ds	2
  5192  01A9                     _ADC_ATTL_0dB:
  5193  01A9                     	ds	2
  5194  01AB                     _CALC_DIT:
  5195  01AB                     	ds	2
  5196  01AD                     _CALC_MPOB:
  5197  01AD                     	ds	2
  5198  01AF                     _CALC_MPIB:
  5199  01AF                     	ds	2
  5200  01B1                     _CALC_ADC:
  5201  01B1                     	ds	2
  5202  01B3                     _CALC_DIR:
  5203  01B3                     	ds	2
  5204  01B5                     _AUXSRC_I2S:
  5205  01B5                     	ds	2
  5206  01B7                     _TAS_CHK_RAILS:
  5207  01B7                     	ds	2
  5208  01B9                     _TAS_MUTE:
  5209  01B9                     	ds	2
  5210  01BB                     _TAS_FS48K:
  5211  01BB                     	ds	2
  5212  01BD                     _TAS_FS44K:
  5213  01BD                     	ds	2
  5214  01BF                     _TAS_DC:
  5215  01BF                     	ds	2
  5216  01C1                     _TAS_DCDIAG_CLEAR:
  5217  01C1                     	ds	2
  5218  01C3                     _TAS_RESET:
  5219  01C3                     	ds	2
  5220  01C5                     _INIT9211_31:
  5221  01C5                     	ds	2
  5222  01C7                     _INIT9211_27:
  5223  01C7                     	ds	2
  5224  01C9                     _INIT9211_26:
  5225  01C9                     	ds	2
  5226  01CB                     _INIT9211_2B:
  5227  01CB                     	ds	2
  5228  01CD                     _INIT9211_2E:
  5229  01CD                     	ds	2
  5230  01CF                     _INIT9211_20:
  5231  01CF                     	ds	2
  5232  01D1                     _ADC_96K:
  5233  01D1                     	ds	2
  5234  01D3                     _ADC_DC:
  5235  01D3                     	ds	2
  5236  01D5                     _DIT_I2S:
  5237  01D5                     	ds	2
  5238  01D7                     _DIT_LVDS:
  5239  01D7                     	ds	2
  5240  01D9                     _ADC_ATTR_3dB:
  5241  01D9                     	ds	2
  5242  01DB                     _ADC_ATTL_3dB:
  5243  01DB                     	ds	2
  5244  01DD                     _CALC_MOUT:
  5245  01DD                     	ds	2
  5246  01DF                     _DIR_COAX:
  5247  01DF                     	ds	2
  5248  01E1                     _AUXSRC_LVDS:
  5249  01E1                     	ds	2
  5250  01E3                     _AUXSRC_ADC:
  5251  01E3                     	ds	2
  5252  01E5                     _AUXSRC_AUTO:
  5253  01E5                     	ds	2
  5254  01E7                     _SRC_I2S:
  5255  01E7                     	ds	2
  5256  01E9                     _SRC_LVDS:
  5257  01E9                     	ds	2
  5258                           
  5259                           	psect	bssBANK4
  5260  024E                     __pbssBANK4:
  5261  024E                     _I2C1_Status:
  5262  024E                     	ds	30
  5263                           
  5264                           	psect	dataBANK4
  5265  0220                     __pdataBANK4:
  5266  0220                     stoa@F1141:
  5267  0220                     	ds	7
  5268  0227                     _srcset9211:
  5269  0227                     	ds	5
  5270  022C                     _ledbuff:
  5271  022C                     	ds	4
  5272  0230                     _TAS_HiZ:
  5273  0230                     	ds	2
  5274  0232                     _TAS_OSR128:
  5275  0232                     	ds	2
  5276  0234                     _TAS_OSR64:
  5277  0234                     	ds	2
  5278  0236                     _TAS_FC463:
  5279  0236                     	ds	2
  5280  0238                     _TAS_FC235:
  5281  0238                     	ds	2
  5282  023A                     _TAS_FC118:
  5283  023A                     	ds	2
  5284  023C                     _TAS_FC59:
  5285  023C                     	ds	2
  5286  023E                     _TAS_FC30:
  5287  023E                     	ds	2
  5288  0240                     _TAS_FC15:
  5289  0240                     	ds	2
  5290  0242                     _TAS_FC7:
  5291  0242                     	ds	2
  5292  0244                     _TAS_FC4:
  5293  0244                     	ds	2
  5294  0246                     _TAS_DCDIAG_ABORT:
  5295  0246                     	ds	2
  5296  0248                     _ADC_48K:
  5297  0248                     	ds	2
  5298  024A                     _ADC_AC:
  5299  024A                     	ds	2
  5300  024C                     _ADC_I2S_MASTER_256:
  5301  024C                     	ds	2
  5302                           
  5303                           	psect	bssBANK5
  5304  02A0                     __pbssBANK5:
  5305  02A0                     _dbuf:
  5306  02A0                     	ds	32
  5307                           
  5308                           	psect	dataBANK5
  5309  02CB                     __pdataBANK5:
  5310  02CB                     _ledstr:
  5311  02CB                     	ds	9
  5312                           
  5313                           	psect	bssBANK6
  5314  0320                     __pbssBANK6:
  5315  0320                     _lcdbuff:
  5316  0320                     	ds	41
  5317                           
  5318                           	psect	inittext
  5319  269C                     init_ram:
  5320  269C  00FE               	movwf	126
  5321  269D                     initloop:
  5322  269D  0012               	moviw fsr0++
  5323  269E  001E               	movwi fsr1++
  5324  269F  0BFE               	decfsz	126,f
  5325  26A0  2E9D               	goto	initloop
  5326  26A1  3400               	retlw	0
  5327                           
  5328                           	psect	clrtext
  5329  2696                     clear_ram0:	
  5330                           ;	Called with FSR0 containing the base address, and
  5331                           ;	WREG with the size to clear
  5332                           
  5333  2696  0064               	clrwdt	;clear the watchdog before getting into this loop
  5334  2697                     clrloop0:
  5335  2697  0180               	clrf	0	;clear RAM location pointed to by FSR
  5336  2698  3101               	addfsr 0,1
  5337  2699  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  5338  269A  2E97               	goto	clrloop0	;have we reached the end yet?
  5339  269B  3400               	retlw	0	;all done for this memory range, return
  5340                           
  5341                           	psect	cstackBANK5
  5342  02C0                     __pcstackBANK5:
  5343  02C0                     _lcd_disp_param$2751:
  5344                           
  5345                           ; 2 bytes @ 0x0
  5346  02C0                     	ds	2
  5347  02C2                     lcd_disp_param@pfspo:
  5348                           
  5349                           ; 1 bytes @ 0x2
  5350  02C2                     	ds	1
  5351  02C3                     lcd_disp_param@ocdc:
  5352                           
  5353                           ; 1 bytes @ 0x3
  5354  02C3                     	ds	1
  5355  02C4                     lcd_disp_param@otshut:
  5356                           
  5357                           ; 1 bytes @ 0x4
  5358  02C4                     	ds	1
  5359  02C5                     lcd_disp_param@otwarn:
  5360                           
  5361                           ; 1 bytes @ 0x5
  5362  02C5                     	ds	1
  5363  02C6                     lcd_disp_param@clip:
  5364                           
  5365                           ; 1 bytes @ 0x6
  5366  02C6                     	ds	1
  5367  02C7                     lcd_disp_param@ilim:
  5368                           
  5369                           ; 1 bytes @ 0x7
  5370  02C7                     	ds	1
  5371  02C8                     lcd_disp_param@prail:
  5372                           
  5373                           ; 1 bytes @ 0x8
  5374  02C8                     	ds	1
  5375  02C9                     _lcd_disp_param$2750:
  5376                           
  5377                           ; 2 bytes @ 0x9
  5378  02C9                     	ds	2
  5379                           
  5380                           	psect	cstackBANK1
  5381  00A0                     __pcstackBANK1:
  5382  00A0                     vfpfcnvrt@ll:
  5383                           
  5384                           ; 8 bytes @ 0x0
  5385  00A0                     	ds	8
  5386  00A8                     vfpfcnvrt@llu:
  5387                           
  5388                           ; 8 bytes @ 0x8
  5389  00A8                     	ds	8
  5390  00B0                     vfpfcnvrt@cp:
  5391                           
  5392                           ; 2 bytes @ 0x10
  5393  00B0                     	ds	2
  5394  00B2                     vfpfcnvrt@c:
  5395                           
  5396                           ; 1 bytes @ 0x12
  5397  00B2                     	ds	1
  5398  00B3                     vfpfcnvrt@done:
  5399                           
  5400                           ; 2 bytes @ 0x13
  5401  00B3                     	ds	2
  5402  00B5                     _vfpfcnvrt$2249:
  5403                           
  5404                           ; 2 bytes @ 0x15
  5405  00B5                     	ds	2
  5406  00B7                     vfpfcnvrt@fp:
  5407                           
  5408                           ; 1 bytes @ 0x17
  5409  00B7                     	ds	1
  5410  00B8                     ?_vfprintf:
  5411  00B8                     vfprintf@fmt:	
  5412                           ; 2 bytes @ 0x18
  5413                           
  5414                           
  5415                           ; 2 bytes @ 0x18
  5416  00B8                     	ds	2
  5417  00BA                     vfprintf@ap:
  5418                           
  5419                           ; 1 bytes @ 0x1A
  5420  00BA                     	ds	1
  5421  00BB                     ??_vfprintf:
  5422                           
  5423                           ; 1 bytes @ 0x1B
  5424  00BB                     	ds	2
  5425  00BD                     vfprintf@fp:
  5426                           
  5427                           ; 1 bytes @ 0x1D
  5428  00BD                     	ds	1
  5429  00BE                     vfprintf@cfmt:
  5430                           
  5431                           ; 2 bytes @ 0x1E
  5432  00BE                     	ds	2
  5433  00C0                     ?_sprintf:
  5434  00C0                     sprintf@s:	
  5435                           ; 2 bytes @ 0x20
  5436                           
  5437                           
  5438                           ; 2 bytes @ 0x20
  5439  00C0                     	ds	2
  5440  00C2                     sprintf@fmt:
  5441                           
  5442                           ; 2 bytes @ 0x22
  5443  00C2                     	ds	14
  5444  00D0                     ??_sprintf:
  5445                           
  5446                           ; 1 bytes @ 0x30
  5447  00D0                     	ds	3
  5448  00D3                     sprintf@ap:
  5449                           
  5450                           ; 1 bytes @ 0x33
  5451  00D3                     	ds	1
  5452  00D4                     sprintf@f:
  5453                           
  5454                           ; 6 bytes @ 0x34
  5455  00D4                     	ds	6
  5456  00DA                     ??_lcd_disp_param:
  5457  00DA                     ??_set_gainstr:	
  5458                           ; 1 bytes @ 0x3A
  5459                           
  5460  00DA                     ??_show_uolstr:	
  5461                           ; 1 bytes @ 0x3A
  5462                           
  5463                           
  5464                           ; 1 bytes @ 0x3A
  5465  00DA                     	ds	1
  5466  00DB                     set_gainstr@gval:
  5467  00DB                     show_uolstr@gval:	
  5468                           ; 1 bytes @ 0x3B
  5469                           
  5470                           
  5471                           ; 1 bytes @ 0x3B
  5472  00DB                     	ds	11
  5473  00E6                     ??_main:
  5474                           
  5475                           ; 1 bytes @ 0x46
  5476  00E6                     	ds	7
  5477  00ED                     main@vol_move_cnt:
  5478                           
  5479                           ; 2 bytes @ 0x4D
  5480  00ED                     	ds	2
  5481                           
  5482                           	psect	cstackCOMMON
  5483  0070                     __pcstackCOMMON:
  5484  0070                     ?_I2C1_Open:
  5485  0070                     ?_I2C1_MasterWrite:	
  5486                           ; 1 bytes @ 0x0
  5487                           
  5488  0070                     ?_I2C1_Close:	
  5489                           ; 1 bytes @ 0x0
  5490                           
  5491  0070                     ?_TMR1_DefaultInterruptHandler:	
  5492                           ; 1 bytes @ 0x0
  5493                           
  5494  0070                     ?_I2C1_DO_IDLE:	
  5495                           ; 1 bytes @ 0x0
  5496                           
  5497  0070                     ??_I2C1_DO_IDLE:	
  5498                           ; 1 bytes @ 0x0
  5499                           
  5500  0070                     ?_I2C1_DO_SEND_ADR_READ:	
  5501                           ; 1 bytes @ 0x0
  5502                           
  5503  0070                     ??_I2C1_DO_SEND_ADR_READ:	
  5504                           ; 1 bytes @ 0x0
  5505                           
  5506  0070                     ?_I2C1_DO_SEND_ADR_WRITE:	
  5507                           ; 1 bytes @ 0x0
  5508                           
  5509  0070                     ?_I2C1_DO_TX:	
  5510                           ; 1 bytes @ 0x0
  5511                           
  5512  0070                     ?_I2C1_DO_RX:	
  5513                           ; 1 bytes @ 0x0
  5514                           
  5515  0070                     ?_I2C1_DO_RCEN:	
  5516                           ; 1 bytes @ 0x0
  5517                           
  5518  0070                     ??_I2C1_DO_RCEN:	
  5519                           ; 1 bytes @ 0x0
  5520                           
  5521  0070                     ?_I2C1_DO_TX_EMPTY:	
  5522                           ; 1 bytes @ 0x0
  5523                           
  5524  0070                     ?_I2C1_DO_SEND_RESTART_READ:	
  5525                           ; 1 bytes @ 0x0
  5526                           
  5527  0070                     ??_I2C1_DO_SEND_RESTART_READ:	
  5528                           ; 1 bytes @ 0x0
  5529                           
  5530  0070                     ?_I2C1_DO_SEND_RESTART_WRITE:	
  5531                           ; 1 bytes @ 0x0
  5532                           
  5533  0070                     ??_I2C1_DO_SEND_RESTART_WRITE:	
  5534                           ; 1 bytes @ 0x0
  5535                           
  5536  0070                     ?_I2C1_DO_SEND_RESTART:	
  5537                           ; 1 bytes @ 0x0
  5538                           
  5539  0070                     ??_I2C1_DO_SEND_RESTART:	
  5540                           ; 1 bytes @ 0x0
  5541                           
  5542  0070                     ?_I2C1_DO_SEND_STOP:	
  5543                           ; 1 bytes @ 0x0
  5544                           
  5545  0070                     ??_I2C1_DO_SEND_STOP:	
  5546                           ; 1 bytes @ 0x0
  5547                           
  5548  0070                     ?_I2C1_DO_RX_ACK:	
  5549                           ; 1 bytes @ 0x0
  5550                           
  5551  0070                     ??_I2C1_DO_RX_ACK:	
  5552                           ; 1 bytes @ 0x0
  5553                           
  5554  0070                     ?_I2C1_DO_RX_NACK_STOP:	
  5555                           ; 1 bytes @ 0x0
  5556                           
  5557  0070                     ??_I2C1_DO_RX_NACK_STOP:	
  5558                           ; 1 bytes @ 0x0
  5559                           
  5560  0070                     ?_I2C1_DO_RX_NACK_RESTART:	
  5561                           ; 1 bytes @ 0x0
  5562                           
  5563  0070                     ??_I2C1_DO_RX_NACK_RESTART:	
  5564                           ; 1 bytes @ 0x0
  5565                           
  5566  0070                     ?_I2C1_DO_RESET:	
  5567                           ; 1 bytes @ 0x0
  5568                           
  5569  0070                     ??_I2C1_DO_RESET:	
  5570                           ; 1 bytes @ 0x0
  5571                           
  5572  0070                     ?_I2C1_DO_ADDRESS_NACK:	
  5573                           ; 1 bytes @ 0x0
  5574                           
  5575  0070                     ?_I2C1_MasterIsr:	
  5576                           ; 1 bytes @ 0x0
  5577                           
  5578  0070                     ?_I2C1_MasterClearIrq:	
  5579                           ; 1 bytes @ 0x0
  5580                           
  5581  0070                     ?_I2C1_MasterOpen:	
  5582                           ; 1 bytes @ 0x0
  5583                           
  5584  0070                     ?_I2C1_MasterEnableIrq:	
  5585                           ; 1 bytes @ 0x0
  5586                           
  5587  0070                     ?_I2C1_MasterDisableIrq:	
  5588                           ; 1 bytes @ 0x0
  5589                           
  5590  0070                     ?_I2C1_MasterClose:	
  5591                           ; 1 bytes @ 0x0
  5592                           
  5593  0070                     ?_I2C1_MasterStart:	
  5594                           ; 1 bytes @ 0x0
  5595                           
  5596  0070                     ?_I2C1_MasterFsm:	
  5597                           ; 1 bytes @ 0x0
  5598                           
  5599  0070                     ?_I2C1_MasterIsNack:	
  5600                           ; 1 bytes @ 0x0
  5601                           
  5602  0070                     ??_I2C1_MasterIsNack:	
  5603                           ; 1 bytes @ 0x0
  5604                           
  5605  0070                     ?_I2C1_MasterSendTxData:	
  5606                           ; 1 bytes @ 0x0
  5607                           
  5608  0070                     ??_I2C1_MasterSendTxData:	
  5609                           ; 1 bytes @ 0x0
  5610                           
  5611  0070                     ?_I2C1_MasterGetRxData:	
  5612                           ; 1 bytes @ 0x0
  5613                           
  5614  0070                     ??_I2C1_MasterGetRxData:	
  5615                           ; 1 bytes @ 0x0
  5616                           
  5617  0070                     ?_I2C1_MasterSendAck:	
  5618                           ; 1 bytes @ 0x0
  5619                           
  5620  0070                     ??_I2C1_MasterSendAck:	
  5621                           ; 1 bytes @ 0x0
  5622                           
  5623  0070                     ?_I2C1_MasterStartRx:	
  5624                           ; 1 bytes @ 0x0
  5625                           
  5626  0070                     ??_I2C1_MasterStartRx:	
  5627                           ; 1 bytes @ 0x0
  5628                           
  5629  0070                     ?_I2C1_MasterSetIrq:	
  5630                           ; 1 bytes @ 0x0
  5631                           
  5632  0070                     ??_I2C1_MasterSetIrq:	
  5633                           ; 1 bytes @ 0x0
  5634                           
  5635  0070                     ?_I2C1_MasterEnableRestart:	
  5636                           ; 1 bytes @ 0x0
  5637                           
  5638  0070                     ??_I2C1_MasterEnableRestart:	
  5639                           ; 1 bytes @ 0x0
  5640                           
  5641  0070                     ?_I2C1_MasterStop:	
  5642                           ; 1 bytes @ 0x0
  5643                           
  5644  0070                     ??_I2C1_MasterStop:	
  5645                           ; 1 bytes @ 0x0
  5646                           
  5647  0070                     ?_I2C1_MasterSendNack:	
  5648                           ; 1 bytes @ 0x0
  5649                           
  5650  0070                     ??_I2C1_MasterSendNack:	
  5651                           ; 1 bytes @ 0x0
  5652                           
  5653  0070                     ?_PMD_Initialize:	
  5654                           ; 1 bytes @ 0x0
  5655                           
  5656  0070                     ?_PIN_MANAGER_Initialize:	
  5657                           ; 1 bytes @ 0x0
  5658                           
  5659  0070                     ?_OSCILLATOR_Initialize:	
  5660                           ; 1 bytes @ 0x0
  5661                           
  5662  0070                     ?_WDT_Initialize:	
  5663                           ; 1 bytes @ 0x0
  5664                           
  5665  0070                     ?_lcd_disp_param:	
  5666                           ; 1 bytes @ 0x0
  5667                           
  5668  0070                     ?_putch:	
  5669                           ; 1 bytes @ 0x0
  5670                           
  5671  0070                     ?_i2c_lcd_send_command:	
  5672                           ; 1 bytes @ 0x0
  5673                           
  5674  0070                     ?_i2c_lcd_send_upper4bit:	
  5675                           ; 1 bytes @ 0x0
  5676                           
  5677  0070                     ?_i2c_lcd_send_data:	
  5678                           ; 1 bytes @ 0x0
  5679                           
  5680  0070                     ?_i2c_lcd_init:	
  5681                           ; 1 bytes @ 0x0
  5682                           
  5683  0070                     ?_i2c_lcd_clear:	
  5684                           ; 1 bytes @ 0x0
  5685                           
  5686  0070                     ?_i2c_lcd_home:	
  5687                           ; 1 bytes @ 0x0
  5688                           
  5689  0070                     ?_i2c_lcd_ulcursor_off:	
  5690                           ; 1 bytes @ 0x0
  5691                           
  5692  0070                     ?_TMR1_Initialize:	
  5693                           ; 1 bytes @ 0x0
  5694                           
  5695  0070                     ?_TMR1_StartTimer:	
  5696                           ; 1 bytes @ 0x0
  5697                           
  5698  0070                     ?_TMR1_WriteTimer:	
  5699                           ; 1 bytes @ 0x0
  5700                           
  5701  0070                     ?_get7seg_font:	
  5702                           ; 1 bytes @ 0x0
  5703                           
  5704  0070                     ??_get7seg_font:	
  5705                           ; 1 bytes @ 0x0
  5706                           
  5707  0070                     ?_read_clickRE:	
  5708                           ; 1 bytes @ 0x0
  5709                           
  5710  0070                     ??_read_clickRE:	
  5711                           ; 1 bytes @ 0x0
  5712                           
  5713  0070                     ?_TMR1_ISR:	
  5714                           ; 1 bytes @ 0x0
  5715                           
  5716  0070                     ?_I2C1_Initialize:	
  5717                           ; 1 bytes @ 0x0
  5718                           
  5719  0070                     ?_I2C1_MasterOperation:	
  5720                           ; 1 bytes @ 0x0
  5721                           
  5722  0070                     ?_INTERRUPT_InterruptManager:	
  5723                           ; 1 bytes @ 0x0
  5724                           
  5725  0070                     ?_SYSTEM_Initialize:	
  5726                           ; 1 bytes @ 0x0
  5727                           
  5728  0070                     ?_set_gainstr:	
  5729                           ; 1 bytes @ 0x0
  5730                           
  5731  0070                     ?_show_uolstr:	
  5732                           ; 1 bytes @ 0x0
  5733                           
  5734  0070                     ?_init_pcm9211:	
  5735                           ; 1 bytes @ 0x0
  5736                           
  5737  0070                     ?_init_tas6422:	
  5738                           ; 1 bytes @ 0x0
  5739                           
  5740  0070                     ?_chk6422warning:	
  5741                           ; 1 bytes @ 0x0
  5742                           
  5743  0070                     ?_set_source:	
  5744                           ; 1 bytes @ 0x0
  5745                           
  5746  0070                     ?_main:	
  5747                           ; 1 bytes @ 0x0
  5748                           
  5749  0070                     ?i1_I2C1_SetBuffer:	
  5750                           ; 1 bytes @ 0x0
  5751                           
  5752  0070                     ?i1_I2C1_SetCallback:	
  5753                           ; 1 bytes @ 0x0
  5754                           
  5755  0070                     ?i1_I2C1_MasterClearIrq:	
  5756                           ; 1 bytes @ 0x0
  5757                           
  5758  0070                     ??i1_I2C1_MasterClearIrq:	
  5759                           ; 1 bytes @ 0x0
  5760                           
  5761  0070                     I2C1_MasterSendTxData@data:	
  5762                           ; 1 bytes @ 0x0
  5763                           
  5764  0070                     putch@c:	
  5765                           ; 1 bytes @ 0x0
  5766                           
  5767  0070                     TMR1_WriteTimer@timerVal:	
  5768                           ; 1 bytes @ 0x0
  5769                           
  5770  0070                     i1I2C1_SetBuffer@buffer:	
  5771                           ; 2 bytes @ 0x0
  5772                           
  5773  0070                     i1I2C1_SetCallback@cb:	
  5774                           ; 2 bytes @ 0x0
  5775                           
  5776                           
  5777                           ; 2 bytes @ 0x0
  5778  0070                     	ds	1
  5779  0071                     ??_I2C1_DO_SEND_ADR_WRITE:
  5780  0071                     get7seg_font@fontdata:	
  5781                           ; 1 bytes @ 0x1
  5782                           
  5783                           
  5784                           ; 1 bytes @ 0x1
  5785  0071                     	ds	1
  5786  0072                     ??_TMR1_WriteTimer:
  5787  0072                     get7seg_font@cdata:	
  5788                           ; 1 bytes @ 0x2
  5789                           
  5790  0072                     i1I2C1_SetCallback@ptr:	
  5791                           ; 1 bytes @ 0x2
  5792                           
  5793  0072                     _read_clickRE$506:	
  5794                           ; 1 bytes @ 0x2
  5795                           
  5796  0072                     i1I2C1_SetBuffer@bufferSize:	
  5797                           ; 2 bytes @ 0x2
  5798                           
  5799                           
  5800                           ; 2 bytes @ 0x2
  5801  0072                     	ds	1
  5802  0073                     ??i1_I2C1_SetCallback:
  5803                           
  5804                           ; 1 bytes @ 0x3
  5805  0073                     	ds	1
  5806  0074                     ??i1_I2C1_SetBuffer:
  5807  0074                     read_clickRE@current:	
  5808                           ; 1 bytes @ 0x4
  5809                           
  5810  0074                     i1I2C1_SetCallback@idx:	
  5811                           ; 1 bytes @ 0x4
  5812                           
  5813                           
  5814                           ; 1 bytes @ 0x4
  5815  0074                     	ds	1
  5816  0075                     ??_TMR1_DefaultInterruptHandler:
  5817  0075                     ?i1_I2C1_SetDataCompleteCallback:	
  5818                           ; 1 bytes @ 0x5
  5819                           
  5820  0075                     i1I2C1_SetDataCompleteCallback@cb:	
  5821                           ; 1 bytes @ 0x5
  5822                           
  5823                           
  5824                           ; 2 bytes @ 0x5
  5825  0075                     	ds	2
  5826  0077                     ??_TMR1_ISR:
  5827  0077                     i1I2C1_SetDataCompleteCallback@ptr:	
  5828                           ; 1 bytes @ 0x7
  5829                           
  5830                           
  5831                           ; 1 bytes @ 0x7
  5832  0077                     	ds	1
  5833  0078                     ??i1_I2C1_SetDataCompleteCallback:
  5834                           
  5835                           ; 1 bytes @ 0x8
  5836  0078                     	ds	1
  5837  0079                     ?_rd1RegCompleteHandler:
  5838  0079                     ?_rd2RegCompleteHandler:	
  5839                           ; 1 bytes @ 0x9
  5840                           
  5841  0079                     ?_wr1RegCompleteHandler:	
  5842                           ; 1 bytes @ 0x9
  5843                           
  5844  0079                     ?_wr2RegCompleteHandler:	
  5845                           ; 1 bytes @ 0x9
  5846                           
  5847  0079                     ?_rdBlkRegCompleteHandler:	
  5848                           ; 1 bytes @ 0x9
  5849                           
  5850  0079                     ?_I2C1_CallbackReturnStop:	
  5851                           ; 1 bytes @ 0x9
  5852                           
  5853  0079                     ?_I2C1_CallbackReturnReset:	
  5854                           ; 1 bytes @ 0x9
  5855                           
  5856  0079                     ?_wr1RegCompleteHandler@islower$F2404:	
  5857                           ; 1 bytes @ 0x9
  5858                           
  5859  0079                     ?_rd1RegCompleteHandler@islower$F2412:	
  5860                           ; 1 bytes @ 0x9
  5861                           
  5862  0079                     ?_rd2RegCompleteHandler@islower$F2417:	
  5863                           ; 1 bytes @ 0x9
  5864                           
  5865  0079                     ?_wr2RegCompleteHandler@islower$F2423:	
  5866                           ; 1 bytes @ 0x9
  5867                           
  5868  0079                     ?_rdBlkRegCompleteHandler@islower$F2429:	
  5869                           ; 1 bytes @ 0x9
  5870                           
  5871  0079                     wr1RegCompleteHandler@p:	
  5872                           ; 1 bytes @ 0x9
  5873                           
  5874  0079                     rd1RegCompleteHandler@p:	
  5875                           ; 1 bytes @ 0x9
  5876                           
  5877  0079                     rd2RegCompleteHandler@p:	
  5878                           ; 1 bytes @ 0x9
  5879                           
  5880  0079                     wr2RegCompleteHandler@p:	
  5881                           ; 1 bytes @ 0x9
  5882                           
  5883  0079                     rdBlkRegCompleteHandler@p:	
  5884                           ; 1 bytes @ 0x9
  5885                           
  5886  0079                     rd1RegCompleteHandler@i2c1_master_example$F195@ptr:	
  5887                           ; 1 bytes @ 0x9
  5888                           
  5889  0079                     rd2RegCompleteHandler@i2c1_master_example$F206@ptr:	
  5890                           ; 1 bytes @ 0x9
  5891                           
  5892  0079                     wr1RegCompleteHandler@i2c1_master_example$F212@ptr:	
  5893                           ; 1 bytes @ 0x9
  5894                           
  5895  0079                     wr2RegCompleteHandler@i2c1_master_example$F218@ptr:	
  5896                           ; 1 bytes @ 0x9
  5897                           
  5898  0079                     rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr:	
  5899                           ; 1 bytes @ 0x9
  5900                           
  5901  0079                     I2C1_CallbackReturnStop@funPtr:	
  5902                           ; 1 bytes @ 0x9
  5903                           
  5904  0079                     I2C1_CallbackReturnReset@funPtr:	
  5905                           ; 1 bytes @ 0x9
  5906                           
  5907                           
  5908                           ; 1 bytes @ 0x9
  5909  0079                     	ds	1
  5910  007A                     ??_rd1RegCompleteHandler:
  5911  007A                     ??_rd2RegCompleteHandler:	
  5912                           ; 1 bytes @ 0xA
  5913                           
  5914  007A                     ??_wr1RegCompleteHandler:	
  5915                           ; 1 bytes @ 0xA
  5916                           
  5917  007A                     ??_wr2RegCompleteHandler:	
  5918                           ; 1 bytes @ 0xA
  5919                           
  5920  007A                     ??_rdBlkRegCompleteHandler:	
  5921                           ; 1 bytes @ 0xA
  5922                           
  5923  007A                     ??_I2C1_DO_TX:	
  5924                           ; 1 bytes @ 0xA
  5925                           
  5926  007A                     ??_I2C1_DO_RX:	
  5927                           ; 1 bytes @ 0xA
  5928                           
  5929  007A                     ??_I2C1_DO_TX_EMPTY:	
  5930                           ; 1 bytes @ 0xA
  5931                           
  5932  007A                     ??_I2C1_DO_ADDRESS_NACK:	
  5933                           ; 1 bytes @ 0xA
  5934                           
  5935  007A                     ??_I2C1_CallbackReturnStop:	
  5936                           ; 1 bytes @ 0xA
  5937                           
  5938  007A                     ??_I2C1_CallbackReturnReset:	
  5939                           ; 1 bytes @ 0xA
  5940                           
  5941  007A                     ??_wr1RegCompleteHandler@islower$F2406:	
  5942                           ; 1 bytes @ 0xA
  5943                           
  5944  007A                     ??_rd1RegCompleteHandler@islower$F2414:	
  5945                           ; 1 bytes @ 0xA
  5946                           
  5947  007A                     ??_rd2RegCompleteHandler@islower$F2419:	
  5948                           ; 1 bytes @ 0xA
  5949                           
  5950  007A                     ??_wr2RegCompleteHandler@islower$F2425:	
  5951                           ; 1 bytes @ 0xA
  5952                           
  5953  007A                     ??_rdBlkRegCompleteHandler@islower$F2431:	
  5954                           ; 1 bytes @ 0xA
  5955                           
  5956                           
  5957                           ; 1 bytes @ 0xA
  5958  007A                     	ds	3
  5959  007D                     ??_I2C1_MasterIsr:
  5960  007D                     ??_INTERRUPT_InterruptManager:	
  5961                           ; 1 bytes @ 0xD
  5962                           
  5963                           
  5964                           	psect	cstackBANK0
  5965  0020                     __pcstackBANK0:	
  5966                           ; 1 bytes @ 0xD
  5967                           
  5968  0020                     ??_I2C1_MasterFsm:
  5969                           
  5970                           ; 1 bytes @ 0x0
  5971  0020                     	ds	3
  5972  0023                     ?_I2C1_SetBuffer:
  5973  0023                     ??_I2C1_Close:	
  5974                           ; 1 bytes @ 0x3
  5975                           
  5976  0023                     ?_TMR1_SetInterruptHandler:	
  5977                           ; 1 bytes @ 0x3
  5978                           
  5979  0023                     ?_I2C1_SetInterruptHandler:	
  5980                           ; 1 bytes @ 0x3
  5981                           
  5982  0023                     ??_I2C1_MasterClearIrq:	
  5983                           ; 1 bytes @ 0x3
  5984                           
  5985  0023                     ??_I2C1_MasterOpen:	
  5986                           ; 1 bytes @ 0x3
  5987                           
  5988  0023                     ??_I2C1_MasterEnableIrq:	
  5989                           ; 1 bytes @ 0x3
  5990                           
  5991  0023                     ??_I2C1_MasterDisableIrq:	
  5992                           ; 1 bytes @ 0x3
  5993                           
  5994  0023                     ??_I2C1_MasterClose:	
  5995                           ; 1 bytes @ 0x3
  5996                           
  5997  0023                     ??_I2C1_MasterStart:	
  5998                           ; 1 bytes @ 0x3
  5999                           
  6000  0023                     ?_I2C1_SetCallback:	
  6001                           ; 1 bytes @ 0x3
  6002                           
  6003  0023                     ??_PMD_Initialize:	
  6004                           ; 1 bytes @ 0x3
  6005                           
  6006  0023                     ??_PIN_MANAGER_Initialize:	
  6007                           ; 1 bytes @ 0x3
  6008                           
  6009  0023                     ??_OSCILLATOR_Initialize:	
  6010                           ; 1 bytes @ 0x3
  6011                           
  6012  0023                     ??_WDT_Initialize:	
  6013                           ; 1 bytes @ 0x3
  6014                           
  6015  0023                     ??_putch:	
  6016                           ; 1 bytes @ 0x3
  6017                           
  6018  0023                     ??_TMR1_StartTimer:	
  6019                           ; 1 bytes @ 0x3
  6020                           
  6021  0023                     ??_I2C1_Initialize:	
  6022                           ; 1 bytes @ 0x3
  6023                           
  6024  0023                     ??_I2C1_MasterOperation:	
  6025                           ; 1 bytes @ 0x3
  6026                           
  6027  0023                     ?_DELAY_milliseconds:	
  6028                           ; 1 bytes @ 0x3
  6029                           
  6030  0023                     ?_DATAEE_ReadByte:	
  6031                           ; 1 bytes @ 0x3
  6032                           
  6033  0023                     ?___lbmod:	
  6034                           ; 1 bytes @ 0x3
  6035                           
  6036  0023                     ?_fputc:	
  6037                           ; 1 bytes @ 0x3
  6038                           
  6039  0023                     ?_strlen:	
  6040                           ; 2 bytes @ 0x3
  6041                           
  6042  0023                     ?_isupper:	
  6043                           ; 2 bytes @ 0x3
  6044                           
  6045  0023                     ?_isalpha:	
  6046                           ; 2 bytes @ 0x3
  6047                           
  6048  0023                     ?_isdigit:	
  6049                           ; 2 bytes @ 0x3
  6050                           
  6051  0023                     ?_isspace:	
  6052                           ; 2 bytes @ 0x3
  6053                           
  6054  0023                     ?_islower:	
  6055                           ; 2 bytes @ 0x3
  6056                           
  6057  0023                     ?___awdiv:	
  6058                           ; 2 bytes @ 0x3
  6059                           
  6060  0023                     ?___aodiv:	
  6061                           ; 2 bytes @ 0x3
  6062                           
  6063  0023                     ?___aomod:	
  6064                           ; 8 bytes @ 0x3
  6065                           
  6066  0023                     ___lbmod@divisor:	
  6067                           ; 8 bytes @ 0x3
  6068                           
  6069  0023                     TMR1_SetInterruptHandler@InterruptHandler:	
  6070                           ; 1 bytes @ 0x3
  6071                           
  6072  0023                     I2C1_SetBuffer@buffer:	
  6073                           ; 2 bytes @ 0x3
  6074                           
  6075  0023                     I2C1_SetInterruptHandler@InterruptHandler:	
  6076                           ; 2 bytes @ 0x3
  6077                           
  6078  0023                     I2C1_SetCallback@cb:	
  6079                           ; 2 bytes @ 0x3
  6080                           
  6081  0023                     DELAY_milliseconds@milliseconds:	
  6082                           ; 2 bytes @ 0x3
  6083                           
  6084  0023                     DATAEE_ReadByte@bAdd:	
  6085                           ; 2 bytes @ 0x3
  6086                           
  6087  0023                     ___awdiv@divisor:	
  6088                           ; 2 bytes @ 0x3
  6089                           
  6090  0023                     isalpha@c:	
  6091                           ; 2 bytes @ 0x3
  6092                           
  6093  0023                     isdigit@c:	
  6094                           ; 2 bytes @ 0x3
  6095                           
  6096  0023                     isspace@c:	
  6097                           ; 2 bytes @ 0x3
  6098                           
  6099  0023                     isupper@c:	
  6100                           ; 2 bytes @ 0x3
  6101                           
  6102  0023                     fputc@c:	
  6103                           ; 2 bytes @ 0x3
  6104                           
  6105  0023                     strlen@s:	
  6106                           ; 2 bytes @ 0x3
  6107                           
  6108  0023                     islower@c:	
  6109                           ; 2 bytes @ 0x3
  6110                           
  6111  0023                     ___aodiv@divisor:	
  6112                           ; 2 bytes @ 0x3
  6113                           
  6114  0023                     ___aomod@divisor:	
  6115                           ; 8 bytes @ 0x3
  6116                           
  6117                           
  6118                           ; 8 bytes @ 0x3
  6119  0023                     	ds	1
  6120  0024                     ??___lbmod:
  6121  0024                     I2C1_Close@returnValue:	
  6122                           ; 1 bytes @ 0x4
  6123                           
  6124  0024                     I2C1_MasterOperation@read:	
  6125                           ; 1 bytes @ 0x4
  6126                           
  6127                           
  6128                           ; 1 bytes @ 0x4
  6129  0024                     	ds	1
  6130  0025                     ??_I2C1_Open:
  6131  0025                     ??_TMR1_SetInterruptHandler:	
  6132                           ; 1 bytes @ 0x5
  6133                           
  6134  0025                     ??_I2C1_SetInterruptHandler:	
  6135                           ; 1 bytes @ 0x5
  6136                           
  6137  0025                     ??_strlen:	
  6138                           ; 1 bytes @ 0x5
  6139                           
  6140  0025                     ??_isupper:	
  6141                           ; 1 bytes @ 0x5
  6142                           
  6143  0025                     ??_isalpha:	
  6144                           ; 1 bytes @ 0x5
  6145                           
  6146  0025                     ??_isdigit:	
  6147                           ; 1 bytes @ 0x5
  6148                           
  6149  0025                     ??_isspace:	
  6150                           ; 1 bytes @ 0x5
  6151                           
  6152  0025                     ??_islower:	
  6153                           ; 1 bytes @ 0x5
  6154                           
  6155  0025                     ??_TMR1_Initialize:	
  6156                           ; 1 bytes @ 0x5
  6157                           
  6158  0025                     ??_DELAY_milliseconds:	
  6159                           ; 1 bytes @ 0x5
  6160                           
  6161  0025                     ??_SYSTEM_Initialize:	
  6162                           ; 1 bytes @ 0x5
  6163                           
  6164  0025                     ??_DATAEE_ReadByte:	
  6165                           ; 1 bytes @ 0x5
  6166                           
  6167  0025                     I2C1_MasterOperation@returnValue:	
  6168                           ; 1 bytes @ 0x5
  6169                           
  6170  0025                     I2C1_SetCallback@ptr:	
  6171                           ; 1 bytes @ 0x5
  6172                           
  6173  0025                     fputc@fp:	
  6174                           ; 1 bytes @ 0x5
  6175                           
  6176  0025                     I2C1_SetBuffer@bufferSize:	
  6177                           ; 1 bytes @ 0x5
  6178                           
  6179  0025                     ___awdiv@dividend:	
  6180                           ; 2 bytes @ 0x5
  6181                           
  6182                           
  6183                           ; 2 bytes @ 0x5
  6184  0025                     	ds	1
  6185  0026                     ??_I2C1_MasterWrite:
  6186  0026                     ??_I2C1_SetCallback:	
  6187                           ; 1 bytes @ 0x6
  6188                           
  6189  0026                     ??_fputc:	
  6190                           ; 1 bytes @ 0x6
  6191                           
  6192  0026                     I2C1_Open@address:	
  6193                           ; 1 bytes @ 0x6
  6194                           
  6195  0026                     ___lbmod@dividend:	
  6196                           ; 1 bytes @ 0x6
  6197                           
  6198  0026                     strlen@a:	
  6199                           ; 1 bytes @ 0x6
  6200                           
  6201                           
  6202                           ; 2 bytes @ 0x6
  6203  0026                     	ds	1
  6204  0027                     ??_I2C1_SetBuffer:
  6205  0027                     ??___awdiv:	
  6206                           ; 1 bytes @ 0x7
  6207                           
  6208  0027                     I2C1_Open@returnValue:	
  6209                           ; 1 bytes @ 0x7
  6210                           
  6211  0027                     I2C1_SetCallback@idx:	
  6212                           ; 1 bytes @ 0x7
  6213                           
  6214  0027                     ___lbmod@counter:	
  6215                           ; 1 bytes @ 0x7
  6216                           
  6217  0027                     _isspace$2296:	
  6218                           ; 1 bytes @ 0x7
  6219                           
  6220                           
  6221                           ; 1 bytes @ 0x7
  6222  0027                     	ds	1
  6223  0028                     ?_I2C1_SetDataCompleteCallback:
  6224  0028                     ?_I2C1_SetAddressNackCallback:	
  6225                           ; 1 bytes @ 0x8
  6226                           
  6227  0028                     ___awdiv@counter:	
  6228                           ; 1 bytes @ 0x8
  6229                           
  6230  0028                     ___lbmod@rem:	
  6231                           ; 1 bytes @ 0x8
  6232                           
  6233  0028                     I2C1_SetDataCompleteCallback@cb:	
  6234                           ; 1 bytes @ 0x8
  6235                           
  6236  0028                     I2C1_SetAddressNackCallback@cb:	
  6237                           ; 2 bytes @ 0x8
  6238                           
  6239                           
  6240                           ; 2 bytes @ 0x8
  6241  0028                     	ds	1
  6242  0029                     ?_DATAEE_WriteByte:
  6243  0029                     ?_toupper:	
  6244                           ; 1 bytes @ 0x9
  6245                           
  6246  0029                     ?___wmul:	
  6247                           ; 2 bytes @ 0x9
  6248                           
  6249  0029                     ___awdiv@sign:	
  6250                           ; 2 bytes @ 0x9
  6251                           
  6252  0029                     DATAEE_WriteByte@bAdd:	
  6253                           ; 1 bytes @ 0x9
  6254                           
  6255  0029                     ___wmul@multiplier:	
  6256                           ; 2 bytes @ 0x9
  6257                           
  6258  0029                     toupper@c:	
  6259                           ; 2 bytes @ 0x9
  6260                           
  6261                           
  6262                           ; 2 bytes @ 0x9
  6263  0029                     	ds	1
  6264  002A                     I2C1_SetDataCompleteCallback@ptr:
  6265  002A                     I2C1_SetAddressNackCallback@ptr:	
  6266                           ; 1 bytes @ 0xA
  6267                           
  6268  002A                     ___awdiv@quotient:	
  6269                           ; 1 bytes @ 0xA
  6270                           
  6271                           
  6272                           ; 2 bytes @ 0xA
  6273  002A                     	ds	1
  6274  002B                     ??_I2C1_SetDataCompleteCallback:
  6275  002B                     ??_I2C1_SetAddressNackCallback:	
  6276                           ; 1 bytes @ 0xB
  6277                           
  6278  002B                     ??_toupper:	
  6279                           ; 1 bytes @ 0xB
  6280                           
  6281  002B                     ?_fputs:	
  6282                           ; 1 bytes @ 0xB
  6283                           
  6284  002B                     ?_stoa:	
  6285                           ; 2 bytes @ 0xB
  6286                           
  6287  002B                     DATAEE_WriteByte@bData:	
  6288                           ; 2 bytes @ 0xB
  6289                           
  6290  002B                     fputs@fp:	
  6291                           ; 1 bytes @ 0xB
  6292                           
  6293  002B                     ___wmul@multiplicand:	
  6294                           ; 1 bytes @ 0xB
  6295                           
  6296  002B                     stoa@s:	
  6297                           ; 2 bytes @ 0xB
  6298                           
  6299  002B                     ___aodiv@dividend:	
  6300                           ; 2 bytes @ 0xB
  6301                           
  6302  002B                     ___aomod@dividend:	
  6303                           ; 8 bytes @ 0xB
  6304                           
  6305                           
  6306                           ; 8 bytes @ 0xB
  6307  002B                     	ds	1
  6308  002C                     ?_I2C1_WriteNBytes:
  6309  002C                     ??_fputs:	
  6310                           ; 1 bytes @ 0xC
  6311                           
  6312  002C                     ?_i2c_writeNBytes:	
  6313                           ; 1 bytes @ 0xC
  6314                           
  6315  002C                     ?_i2c_read1ByteRegister:	
  6316                           ; 1 bytes @ 0xC
  6317                           
  6318  002C                     ??_DATAEE_WriteByte:	
  6319                           ; 1 bytes @ 0xC
  6320                           
  6321  002C                     i2c_writeNBytes@data:	
  6322                           ; 1 bytes @ 0xC
  6323                           
  6324  002C                     i2c_read1ByteRegister@reg:	
  6325                           ; 1 bytes @ 0xC
  6326                           
  6327  002C                     I2C1_WriteNBytes@data:	
  6328                           ; 1 bytes @ 0xC
  6329                           
  6330  002C                     DATAEE_WriteByte@GIEBitValue:	
  6331                           ; 1 bytes @ 0xC
  6332                           
  6333                           
  6334                           ; 1 bytes @ 0xC
  6335  002C                     	ds	1
  6336  002D                     ??_i2c_read1ByteRegister:
  6337  002D                     ??___wmul:	
  6338                           ; 1 bytes @ 0xD
  6339                           
  6340  002D                     ??_stoa:	
  6341                           ; 1 bytes @ 0xD
  6342                           
  6343  002D                     i2c_writeNBytes@len:	
  6344                           ; 1 bytes @ 0xD
  6345                           
  6346  002D                     I2C1_WriteNBytes@len:	
  6347                           ; 2 bytes @ 0xD
  6348                           
  6349  002D                     ___wmul@product:	
  6350                           ; 2 bytes @ 0xD
  6351                           
  6352                           
  6353                           ; 2 bytes @ 0xD
  6354  002D                     	ds	1
  6355  002E                     i2c_read1ByteRegister@address:
  6356                           
  6357                           ; 1 bytes @ 0xE
  6358  002E                     	ds	1
  6359  002F                     ??_I2C1_WriteNBytes:
  6360  002F                     ??_i2c_writeNBytes:	
  6361                           ; 1 bytes @ 0xF
  6362                           
  6363  002F                     ?_puts_led:	
  6364                           ; 1 bytes @ 0xF
  6365                           
  6366  002F                     ?_strcpy:	
  6367                           ; 1 bytes @ 0xF
  6368                           
  6369  002F                     ?_atoi:	
  6370                           ; 2 bytes @ 0xF
  6371                           
  6372  002F                     i2c_writeNBytes@address:	
  6373                           ; 2 bytes @ 0xF
  6374                           
  6375  002F                     i2c_read1ByteRegister@e:	
  6376                           ; 1 bytes @ 0xF
  6377                           
  6378  002F                     I2C1_WriteNBytes@address:	
  6379                           ; 1 bytes @ 0xF
  6380                           
  6381  002F                     fputs@c:	
  6382                           ; 1 bytes @ 0xF
  6383                           
  6384  002F                     puts_led@str:	
  6385                           ; 1 bytes @ 0xF
  6386                           
  6387  002F                     atoi@s:	
  6388                           ; 2 bytes @ 0xF
  6389                           
  6390  002F                     strcpy@dest:	
  6391                           ; 2 bytes @ 0xF
  6392                           
  6393  002F                     _toupper$2364:	
  6394                           ; 2 bytes @ 0xF
  6395                           
  6396                           
  6397                           ; 2 bytes @ 0xF
  6398  002F                     	ds	1
  6399  0030                     ??_i2c_lcd_send_command:
  6400  0030                     ??_i2c_lcd_send_upper4bit:	
  6401                           ; 1 bytes @ 0x10
  6402                           
  6403  0030                     ??_i2c_lcd_send_data:	
  6404                           ; 1 bytes @ 0x10
  6405                           
  6406  0030                     ??_init_pcm9211:	
  6407                           ; 1 bytes @ 0x10
  6408                           
  6409  0030                     ?_write_tas6422:	
  6410                           ; 1 bytes @ 0x10
  6411                           
  6412  0030                     ??_init_tas6422:	
  6413                           ; 1 bytes @ 0x10
  6414                           
  6415  0030                     ??_set_source:	
  6416                           ; 1 bytes @ 0x10
  6417                           
  6418  0030                     write_tas6422@val:	
  6419                           ; 1 bytes @ 0x10
  6420                           
  6421  0030                     i2c_read1ByteRegister@x:	
  6422                           ; 1 bytes @ 0x10
  6423                           
  6424  0030                     fputs@i:	
  6425                           ; 2 bytes @ 0x10
  6426                           
  6427  0030                     stoa@nuls:	
  6428                           ; 2 bytes @ 0x10
  6429                           
  6430                           
  6431                           ; 7 bytes @ 0x10
  6432  0030                     	ds	1
  6433  0031                     ??_atoi:
  6434  0031                     ??_puts_led:	
  6435                           ; 1 bytes @ 0x11
  6436                           
  6437  0031                     ??_write_tas6422:	
  6438                           ; 1 bytes @ 0x11
  6439                           
  6440  0031                     i2c_lcd_send_upper4bit@data:	
  6441                           ; 1 bytes @ 0x11
  6442                           
  6443  0031                     strcpy@src:	
  6444                           ; 1 bytes @ 0x11
  6445                           
  6446                           
  6447                           ; 2 bytes @ 0x11
  6448  0031                     	ds	1
  6449  0032                     i2c_lcd_send_command@data:
  6450  0032                     i2c_lcd_send_upper4bit@upperdata_en:	
  6451                           ; 1 bytes @ 0x12
  6452                           
  6453  0032                     i2c_lcd_send_data@data:	
  6454                           ; 1 bytes @ 0x12
  6455                           
  6456  0032                     i2c_read1ByteRegister@d2:	
  6457                           ; 1 bytes @ 0x12
  6458                           
  6459  0032                     write_tas6422@adr:	
  6460                           ; 1 bytes @ 0x12
  6461                           
  6462  0032                     fputs@s:	
  6463                           ; 1 bytes @ 0x12
  6464                           
  6465  0032                     puts_led@cpoint:	
  6466                           ; 1 bytes @ 0x12
  6467                           
  6468                           
  6469                           ; 2 bytes @ 0x12
  6470  0032                     	ds	1
  6471  0033                     ??_strcpy:
  6472  0033                     ??_chk6422warning:	
  6473                           ; 1 bytes @ 0x13
  6474                           
  6475  0033                     ??___aodiv:	
  6476                           ; 1 bytes @ 0x13
  6477                           
  6478  0033                     ??___aomod:	
  6479                           ; 1 bytes @ 0x13
  6480                           
  6481  0033                     ?_pad:	
  6482                           ; 1 bytes @ 0x13
  6483                           
  6484  0033                     i2c_lcd_send_command@upperdata_en:	
  6485                           ; 2 bytes @ 0x13
  6486                           
  6487  0033                     i2c_lcd_send_upper4bit@upperdata:	
  6488                           ; 1 bytes @ 0x13
  6489                           
  6490  0033                     i2c_lcd_send_data@upperdata_en:	
  6491                           ; 1 bytes @ 0x13
  6492                           
  6493  0033                     set_source@sourcenumber:	
  6494                           ; 1 bytes @ 0x13
  6495                           
  6496  0033                     pad@buf:	
  6497                           ; 1 bytes @ 0x13
  6498                           
  6499                           
  6500                           ; 1 bytes @ 0x13
  6501  0033                     	ds	1
  6502  0034                     i2c_lcd_send_command@lowerdata_en:
  6503  0034                     i2c_lcd_send_data@lowerdata_en:	
  6504                           ; 1 bytes @ 0x14
  6505                           
  6506  0034                     ___aodiv@counter:	
  6507                           ; 1 bytes @ 0x14
  6508                           
  6509  0034                     ___aomod@counter:	
  6510                           ; 1 bytes @ 0x14
  6511                           
  6512  0034                     pad@p:	
  6513                           ; 1 bytes @ 0x14
  6514                           
  6515                           
  6516                           ; 2 bytes @ 0x14
  6517  0034                     	ds	1
  6518  0035                     i2c_lcd_send_command@upperdata:
  6519  0035                     i2c_lcd_send_data@upperdata:	
  6520                           ; 1 bytes @ 0x15
  6521                           
  6522  0035                     ___aodiv@sign:	
  6523                           ; 1 bytes @ 0x15
  6524                           
  6525  0035                     ___aomod@sign:	
  6526                           ; 1 bytes @ 0x15
  6527                           
  6528  0035                     atoi@neg:	
  6529                           ; 1 bytes @ 0x15
  6530                           
  6531                           
  6532                           ; 2 bytes @ 0x15
  6533  0035                     	ds	1
  6534  0036                     ??_pad:
  6535  0036                     ?_abs:	
  6536                           ; 1 bytes @ 0x16
  6537                           
  6538  0036                     i2c_lcd_send_command@lowerdata:	
  6539                           ; 2 bytes @ 0x16
  6540                           
  6541  0036                     i2c_lcd_send_data@lowerdata:	
  6542                           ; 1 bytes @ 0x16
  6543                           
  6544  0036                     abs@a:	
  6545                           ; 1 bytes @ 0x16
  6546                           
  6547  0036                     ___aodiv@quotient:	
  6548                           ; 2 bytes @ 0x16
  6549                           
  6550                           
  6551                           ; 8 bytes @ 0x16
  6552  0036                     	ds	1
  6553  0037                     ??_i2c_lcd_init:
  6554  0037                     ?_i2c_lcd_puts:	
  6555                           ; 1 bytes @ 0x17
  6556                           
  6557  0037                     ??_i2c_lcd_clear:	
  6558                           ; 1 bytes @ 0x17
  6559                           
  6560  0037                     ??_i2c_lcd_home:	
  6561                           ; 1 bytes @ 0x17
  6562                           
  6563  0037                     ??_i2c_lcd_ulcursor_off:	
  6564                           ; 1 bytes @ 0x17
  6565                           
  6566  0037                     ?_i2c_lcd_set_cursor_pos:	
  6567                           ; 1 bytes @ 0x17
  6568                           
  6569  0037                     i2c_lcd_set_cursor_pos@line:	
  6570                           ; 1 bytes @ 0x17
  6571                           
  6572  0037                     i2c_lcd_puts@s:	
  6573                           ; 1 bytes @ 0x17
  6574                           
  6575  0037                     pad@i:	
  6576                           ; 2 bytes @ 0x17
  6577                           
  6578  0037                     stoa@i:	
  6579                           ; 2 bytes @ 0x17
  6580                           
  6581  0037                     _atoi$2269:	
  6582                           ; 2 bytes @ 0x17
  6583                           
  6584  0037                     strcpy@s:	
  6585                           ; 2 bytes @ 0x17
  6586                           
  6587                           
  6588                           ; 2 bytes @ 0x17
  6589  0037                     	ds	1
  6590  0038                     ??_abs:
  6591  0038                     ??_i2c_lcd_set_cursor_pos:	
  6592                           ; 1 bytes @ 0x18
  6593                           
  6594                           
  6595                           ; 1 bytes @ 0x18
  6596  0038                     	ds	1
  6597  0039                     ??_i2c_lcd_puts:
  6598  0039                     pad@w:	
  6599                           ; 1 bytes @ 0x19
  6600                           
  6601  0039                     stoa@w:	
  6602                           ; 2 bytes @ 0x19
  6603                           
  6604  0039                     _atoi$2271:	
  6605                           ; 2 bytes @ 0x19
  6606                           
  6607  0039                     strcpy@d:	
  6608                           ; 2 bytes @ 0x19
  6609                           
  6610                           
  6611                           ; 2 bytes @ 0x19
  6612  0039                     	ds	1
  6613  003A                     ?_set_gains:
  6614  003A                     i2c_lcd_set_cursor_pos@pos:	
  6615                           ; 1 bytes @ 0x1A
  6616                           
  6617  003A                     set_gains@bal:	
  6618                           ; 1 bytes @ 0x1A
  6619                           
  6620                           
  6621                           ; 1 bytes @ 0x1A
  6622  003A                     	ds	1
  6623  003B                     ??_set_gains:
  6624  003B                     ?_strcat:	
  6625                           ; 1 bytes @ 0x1B
  6626                           
  6627  003B                     i2c_lcd_set_cursor_pos@col:	
  6628                           ; 2 bytes @ 0x1B
  6629                           
  6630  003B                     pad@fp:	
  6631                           ; 1 bytes @ 0x1B
  6632                           
  6633  003B                     stoa@fp:	
  6634                           ; 1 bytes @ 0x1B
  6635                           
  6636  003B                     _atoi$2270:	
  6637                           ; 1 bytes @ 0x1B
  6638                           
  6639  003B                     strcat@dest:	
  6640                           ; 1 bytes @ 0x1B
  6641                           
  6642                           
  6643                           ; 2 bytes @ 0x1B
  6644  003B                     	ds	1
  6645  003C                     ?_xtoa:
  6646  003C                     set_gains@vol:	
  6647                           ; 2 bytes @ 0x1C
  6648                           
  6649  003C                     stoa@cp:	
  6650                           ; 1 bytes @ 0x1C
  6651                           
  6652  003C                     atoi@n:	
  6653                           ; 2 bytes @ 0x1C
  6654                           
  6655  003C                     xtoa@d:	
  6656                           ; 2 bytes @ 0x1C
  6657                           
  6658                           
  6659                           ; 8 bytes @ 0x1C
  6660  003C                     	ds	1
  6661  003D                     strcat@src:
  6662                           
  6663                           ; 2 bytes @ 0x1D
  6664  003D                     	ds	1
  6665  003E                     ?_dtoa:
  6666  003E                     stoa@p:	
  6667                           ; 2 bytes @ 0x1E
  6668                           
  6669  003E                     dtoa@d:	
  6670                           ; 2 bytes @ 0x1E
  6671                           
  6672                           
  6673                           ; 8 bytes @ 0x1E
  6674  003E                     	ds	1
  6675  003F                     ??_strcat:
  6676                           
  6677                           ; 1 bytes @ 0x1F
  6678  003F                     	ds	1
  6679  0040                     stoa@l:
  6680                           
  6681                           ; 2 bytes @ 0x20
  6682  0040                     	ds	4
  6683  0044                     xtoa@x:
  6684                           
  6685                           ; 1 bytes @ 0x24
  6686  0044                     	ds	1
  6687  0045                     ??_xtoa:
  6688                           
  6689                           ; 1 bytes @ 0x25
  6690  0045                     	ds	1
  6691  0046                     ??_dtoa:
  6692                           
  6693                           ; 1 bytes @ 0x26
  6694  0046                     	ds	3
  6695  0049                     dtoa@fp:
  6696                           
  6697                           ; 1 bytes @ 0x29
  6698  0049                     	ds	1
  6699  004A                     _dtoa$2213:
  6700                           
  6701                           ; 2 bytes @ 0x2A
  6702  004A                     	ds	2
  6703  004C                     dtoa@p:
  6704                           
  6705                           ; 2 bytes @ 0x2C
  6706  004C                     	ds	1
  6707  004D                     xtoa@fp:
  6708                           
  6709                           ; 1 bytes @ 0x2D
  6710  004D                     	ds	1
  6711  004E                     dtoa@w:
  6712  004E                     _xtoa$2234:	
  6713                           ; 2 bytes @ 0x2E
  6714                           
  6715                           
  6716                           ; 2 bytes @ 0x2E
  6717  004E                     	ds	2
  6718  0050                     dtoa@s:
  6719  0050                     _xtoa$2235:	
  6720                           ; 2 bytes @ 0x30
  6721                           
  6722                           
  6723                           ; 2 bytes @ 0x30
  6724  0050                     	ds	2
  6725  0052                     xtoa@p:
  6726  0052                     dtoa@n:	
  6727                           ; 2 bytes @ 0x32
  6728                           
  6729                           
  6730                           ; 8 bytes @ 0x32
  6731  0052                     	ds	2
  6732  0054                     xtoa@w:
  6733                           
  6734                           ; 2 bytes @ 0x34
  6735  0054                     	ds	2
  6736  0056                     xtoa@n:
  6737                           
  6738                           ; 8 bytes @ 0x36
  6739  0056                     	ds	4
  6740  005A                     dtoa@i:
  6741                           
  6742                           ; 2 bytes @ 0x3A
  6743  005A                     	ds	4
  6744  005E                     xtoa@i:
  6745                           
  6746                           ; 2 bytes @ 0x3E
  6747  005E                     	ds	2
  6748  0060                     xtoa@c:
  6749                           
  6750                           ; 2 bytes @ 0x40
  6751  0060                     	ds	2
  6752  0062                     ?_vfpfcnvrt:
  6753  0062                     vfpfcnvrt@fmt:	
  6754                           ; 2 bytes @ 0x42
  6755                           
  6756                           
  6757                           ; 1 bytes @ 0x42
  6758  0062                     	ds	1
  6759  0063                     vfpfcnvrt@ap:
  6760                           
  6761                           ; 1 bytes @ 0x43
  6762  0063                     	ds	1
  6763  0064                     ??_vfpfcnvrt:
  6764                           
  6765                           ; 1 bytes @ 0x44
  6766  0064                     	ds	6
  6767                           
  6768                           	psect	maintext
  6769  0083                     __pmaintext:	
  6770 ;;
  6771 ;;Main: autosize = 0, tempsize = 7, incstack = 0, save=0
  6772 ;;
  6773 ;; *************** function _main *****************
  6774 ;; Defined at:
  6775 ;;		line 418 in file "main.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;		None
  6778 ;; Auto vars:     Size  Location     Type
  6779 ;;  vol_move_cnt    2   77[BANK1 ] unsigned int 
  6780 ;;  textlen         1    0        unsigned char 
  6781 ;;  level           1    0        unsigned char 
  6782 ;; Return value:  Size  Location     Type
  6783 ;;                  1    wreg      void 
  6784 ;; Registers used:
  6785 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6786 ;; Tracked objects:
  6787 ;;		On entry : B1F/0
  6788 ;;		On exit  : 1F/1
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6791 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6792 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6793 ;;      Temps:          0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6794 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6795 ;;Total ram usage:        9 bytes
  6796 ;; Hardware stack levels required when called:   16
  6797 ;; This function calls:
  6798 ;;		_DATAEE_ReadByte
  6799 ;;		_DATAEE_WriteByte
  6800 ;;		_DELAY_milliseconds
  6801 ;;		_SYSTEM_Initialize
  6802 ;;		_TMR1_Initialize
  6803 ;;		_TMR1_StartTimer
  6804 ;;		___lbmod
  6805 ;;		___wmul
  6806 ;;		_chk6422warning
  6807 ;;		_i2c_lcd_clear
  6808 ;;		_i2c_lcd_home
  6809 ;;		_i2c_lcd_init
  6810 ;;		_i2c_lcd_puts
  6811 ;;		_i2c_lcd_ulcursor_off
  6812 ;;		_i2c_read1ByteRegister
  6813 ;;		_i2c_writeNBytes
  6814 ;;		_init_pcm9211
  6815 ;;		_init_tas6422
  6816 ;;		_lcd_disp_param
  6817 ;;		_puts_led
  6818 ;;		_set_gains
  6819 ;;		_set_gainstr
  6820 ;;		_set_source
  6821 ;;		_show_uolstr
  6822 ;;		_sprintf
  6823 ;;		_strcpy
  6824 ;;		_write_tas6422
  6825 ;; This function is called by:
  6826 ;;		Startup code after reset
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           
  6831                           ;psect for function _main
  6832  0083                     _main:
  6833                           
  6834                           ;main.c: 428:     SYSTEM_Initialize();
  6835                           
  6836                           ;incstack = 0
  6837                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6838  0083  3187  27ED  3180   	fcall	_SYSTEM_Initialize
  6839                           
  6840                           ;main.c: 429:     DELAY_milliseconds(500);
  6841  0086  30F4               	movlw	244
  6842  0087  00A3               	movwf	DELAY_milliseconds@milliseconds
  6843  0088  3001               	movlw	1
  6844  0089  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  6845  008A  31A7  276F  3180   	fcall	_DELAY_milliseconds
  6846                           
  6847                           ;main.c: 431:     TMR1_Initialize();
  6848  008D  319A  2253  3180   	fcall	_TMR1_Initialize
  6849                           
  6850                           ;main.c: 432:     TMR1_StartTimer();
  6851  0090  3188  2000  3180   	fcall	_TMR1_StartTimer
  6852                           
  6853                           ;main.c: 434:      PIE1bits.TMR1IE = 1;
  6854  0093  0021               	movlb	1	; select bank1
  6855  0094  1411               	bsf	17,0	;volatile
  6856                           
  6857                           ;main.c: 435:      INTCONbits.PEIE = 1;
  6858  0095  170B               	bsf	11,6	;volatile
  6859                           
  6860                           ;main.c: 436:      INTCONbits.GIE = 1;
  6861  0096  178B               	bsf	11,7	;volatile
  6862                           
  6863                           ;main.c: 438:      (INTCONbits.GIE = 1);
  6864  0097  178B               	bsf	11,7	;volatile
  6865                           
  6866                           ;main.c: 440:     (INTCONbits.PEIE = 1);
  6867  0098  170B               	bsf	11,6	;volatile
  6868                           
  6869                           ;main.c: 443:     DELAY_milliseconds(100);
  6870  0099  3064               	movlw	100
  6871  009A  0020               	movlb	0	; select bank0
  6872  009B  00A3               	movwf	DELAY_milliseconds@milliseconds
  6873  009C  3000               	movlw	0
  6874  009D  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  6875  009E  31A7  276F  3180   	fcall	_DELAY_milliseconds
  6876                           
  6877                           ;main.c: 446:  if(DATAEE_ReadByte(0xF010) == 0x5C)
  6878  00A1  3010               	movlw	16
  6879  00A2  00A3               	movwf	DATAEE_ReadByte@bAdd
  6880  00A3  30F0               	movlw	240
  6881  00A4  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6882  00A5  31A7  2722  3180   	fcall	_DATAEE_ReadByte
  6883  00A8  3A5C               	xorlw	92
  6884  00A9  1D03               	skipz
  6885  00AA  2903               	goto	l8141
  6886                           
  6887                           ;main.c: 447:           {;main.c: 449:          current_balance = DATAEE_ReadByte(0xF012
      +                          );
  6888  00AB  3012               	movlw	18
  6889  00AC  0020               	movlb	0	; select bank0
  6890  00AD  00A3               	movwf	DATAEE_ReadByte@bAdd
  6891  00AE  30F0               	movlw	240
  6892  00AF  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6893  00B0  31A7  2722  3180   	fcall	_DATAEE_ReadByte
  6894  00B3  0021               	movlb	1	; select bank1
  6895  00B4  00E6               	movwf	??_main^(0+128)
  6896  00B5  0866               	movf	??_main^(0+128),w
  6897  00B6  0020               	movlb	0	; select bank0
  6898  00B7  00EB               	movwf	_current_balance
  6899                           
  6900                           ;main.c: 450:         current_source = DATAEE_ReadByte(0xF013);
  6901  00B8  3013               	movlw	19
  6902  00B9  00A3               	movwf	DATAEE_ReadByte@bAdd
  6903  00BA  30F0               	movlw	240
  6904  00BB  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6905  00BC  31A7  2722  3180   	fcall	_DATAEE_ReadByte
  6906  00BF  0021               	movlb	1	; select bank1
  6907  00C0  00E6               	movwf	??_main^(0+128)
  6908  00C1  0866               	movf	??_main^(0+128),w
  6909  00C2  0022               	movlb	2	; select bank2
  6910  00C3  00C0               	movwf	_current_source^(0+256)
  6911                           
  6912                           ;main.c: 451:         current_direction = DATAEE_ReadByte(0xF014);
  6913  00C4  3014               	movlw	20
  6914  00C5  0020               	movlb	0	; select bank0
  6915  00C6  00A3               	movwf	DATAEE_ReadByte@bAdd
  6916  00C7  30F0               	movlw	240
  6917  00C8  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6918  00C9  31A7  2722  3180   	fcall	_DATAEE_ReadByte
  6919  00CC  0021               	movlb	1	; select bank1
  6920  00CD  00E6               	movwf	??_main^(0+128)
  6921  00CE  0866               	movf	??_main^(0+128),w
  6922  00CF  00FD               	movwf	_current_direction
  6923                           
  6924                           ;main.c: 452:         current_hpf = DATAEE_ReadByte(0xF015);
  6925  00D0  3015               	movlw	21
  6926  00D1  0020               	movlb	0	; select bank0
  6927  00D2  00A3               	movwf	DATAEE_ReadByte@bAdd
  6928  00D3  30F0               	movlw	240
  6929  00D4  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6930  00D5  31A7  2722  3180   	fcall	_DATAEE_ReadByte
  6931  00D8  0021               	movlb	1	; select bank1
  6932  00D9  00E6               	movwf	??_main^(0+128)
  6933  00DA  0866               	movf	??_main^(0+128),w
  6934  00DB  0020               	movlb	0	; select bank0
  6935  00DC  00EA               	movwf	_current_hpf
  6936                           
  6937                           ;main.c: 453:         current_uol = DATAEE_ReadByte(0xF016);
  6938  00DD  3016               	movlw	22
  6939  00DE  00A3               	movwf	DATAEE_ReadByte@bAdd
  6940  00DF  30F0               	movlw	240
  6941  00E0  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6942  00E1  31A7  2722  3180   	fcall	_DATAEE_ReadByte
  6943  00E4  0021               	movlb	1	; select bank1
  6944  00E5  00E6               	movwf	??_main^(0+128)
  6945  00E6  0866               	movf	??_main^(0+128),w
  6946  00E7  0022               	movlb	2	; select bank2
  6947  00E8  00BC               	movwf	_current_uol^(0+256)
  6948                           
  6949                           ;main.c: 454:         stored_volume = DATAEE_ReadByte(0xF011);
  6950  00E9  3011               	movlw	17
  6951  00EA  0020               	movlb	0	; select bank0
  6952  00EB  00A3               	movwf	DATAEE_ReadByte@bAdd
  6953  00EC  30F0               	movlw	240
  6954  00ED  00A4               	movwf	DATAEE_ReadByte@bAdd+1
  6955  00EE  31A7  2722  3180   	fcall	_DATAEE_ReadByte
  6956  00F1  0021               	movlb	1	; select bank1
  6957  00F2  00E6               	movwf	??_main^(0+128)
  6958  00F3  0866               	movf	??_main^(0+128),w
  6959  00F4  0022               	movlb	2	; select bank2
  6960  00F5  00BF               	movwf	_stored_volume^(0+256)
  6961                           
  6962                           ;main.c: 455:         if( current_uol == 0)
  6963  00F6  083C               	movf	_current_uol^(0+256),w
  6964  00F7  1D03               	btfss	3,2
  6965  00F8  28FB               	goto	l8139
  6966                           
  6967                           ;main.c: 456:                 current_volume = stored_volume;
  6968  00F9  083F               	movf	_stored_volume^(0+256),w
  6969  00FA  28FD               	goto	L1
  6970  00FB                     l8139:
  6971  00FB  083C               	movf	_current_uol^(0+256),w
  6972  00FC  00BF               	movwf	_stored_volume^(0+256)
  6973  00FD                     L1:
  6974  00FD  0021               	movlb	1	; select bank1
  6975  00FE  00E6               	movwf	??_main^(0+128)
  6976  00FF  0866               	movf	??_main^(0+128),w
  6977  0100  0020               	movlb	0	; select bank0
  6978  0101  00EC               	movwf	_current_volume
  6979  0102  2957               	goto	l8143
  6980  0103                     l8141:
  6981                           
  6982                           ;main.c: 460:         {;main.c: 462:          DATAEE_WriteByte(0xF011, current_volume=st
      +                          ored_volume =146);
  6983  0103  3011               	movlw	17
  6984  0104  0020               	movlb	0	; select bank0
  6985  0105  00A9               	movwf	DATAEE_WriteByte@bAdd
  6986  0106  30F0               	movlw	240
  6987  0107  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  6988  0108  3092               	movlw	146
  6989  0109  0022               	movlb	2	; select bank2
  6990  010A  00BF               	movwf	_stored_volume^(0+256)
  6991  010B  0020               	movlb	0	; select bank0
  6992  010C  00EC               	movwf	_current_volume
  6993  010D  0021               	movlb	1	; select bank1
  6994  010E  00E6               	movwf	??_main^(0+128)
  6995  010F  0866               	movf	??_main^(0+128),w
  6996  0110  0020               	movlb	0	; select bank0
  6997  0111  00AB               	movwf	DATAEE_WriteByte@bData
  6998  0112  319B  2300  3180   	fcall	_DATAEE_WriteByte
  6999                           
  7000                           ;main.c: 463:          DATAEE_WriteByte(0xF012, current_balance=0);
  7001  0115  3012               	movlw	18
  7002  0116  00A9               	movwf	DATAEE_WriteByte@bAdd
  7003  0117  30F0               	movlw	240
  7004  0118  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7005  0119  01EB               	clrf	_current_balance
  7006  011A  01AB               	clrf	DATAEE_WriteByte@bData
  7007  011B  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7008                           
  7009                           ;main.c: 464:          DATAEE_WriteByte(0xF013, current_source=2);
  7010  011E  3013               	movlw	19
  7011  011F  00A9               	movwf	DATAEE_WriteByte@bAdd
  7012  0120  30F0               	movlw	240
  7013  0121  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7014  0122  3002               	movlw	2
  7015  0123  0022               	movlb	2	; select bank2
  7016  0124  00C0               	movwf	_current_source^(0+256)
  7017  0125  0021               	movlb	1	; select bank1
  7018  0126  00E6               	movwf	??_main^(0+128)
  7019  0127  0866               	movf	??_main^(0+128),w
  7020  0128  0020               	movlb	0	; select bank0
  7021  0129  00AB               	movwf	DATAEE_WriteByte@bData
  7022  012A  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7023                           
  7024                           ;main.c: 465:          DATAEE_WriteByte(0xF014, current_direction = 0);
  7025  012D  3014               	movlw	20
  7026  012E  00A9               	movwf	DATAEE_WriteByte@bAdd
  7027  012F  30F0               	movlw	240
  7028  0130  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7029  0131  01FD               	clrf	_current_direction
  7030  0132  01AB               	clrf	DATAEE_WriteByte@bData
  7031  0133  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7032                           
  7033                           ;main.c: 466:          DATAEE_WriteByte(0xF015, current_hpf = 0);
  7034  0136  3015               	movlw	21
  7035  0137  00A9               	movwf	DATAEE_WriteByte@bAdd
  7036  0138  30F0               	movlw	240
  7037  0139  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7038  013A  01EA               	clrf	_current_hpf
  7039  013B  01AB               	clrf	DATAEE_WriteByte@bData
  7040  013C  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7041                           
  7042                           ;main.c: 467:          DATAEE_WriteByte(0xF016, current_uol = 0);
  7043  013F  3016               	movlw	22
  7044  0140  00A9               	movwf	DATAEE_WriteByte@bAdd
  7045  0141  30F0               	movlw	240
  7046  0142  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7047  0143  0022               	movlb	2	; select bank2
  7048  0144  01BC               	clrf	_current_uol^(0+256)
  7049  0145  0020               	movlb	0	; select bank0
  7050  0146  01AB               	clrf	DATAEE_WriteByte@bData
  7051  0147  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7052                           
  7053                           ;main.c: 468:          DATAEE_WriteByte(0xF010, 0xC5);
  7054  014A  3010               	movlw	16
  7055  014B  00A9               	movwf	DATAEE_WriteByte@bAdd
  7056  014C  30F0               	movlw	240
  7057  014D  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7058  014E  30C5               	movlw	197
  7059  014F  0021               	movlb	1	; select bank1
  7060  0150  00E6               	movwf	??_main^(0+128)
  7061  0151  0866               	movf	??_main^(0+128),w
  7062  0152  0020               	movlb	0	; select bank0
  7063  0153  00AB               	movwf	DATAEE_WriteByte@bData
  7064  0154  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7065  0157                     l8143:
  7066                           
  7067                           ;main.c: 473:      init_pcm9211();
  7068  0157  3194  24E9  3180   	fcall	_init_pcm9211
  7069                           
  7070                           ;main.c: 474:      init_tas6422();
  7071  015A  3191  2125  3180   	fcall	_init_tas6422
  7072                           
  7073                           ;main.c: 477:     i2c_lcd_init();
  7074  015D  3190  20CF  3180   	fcall	_i2c_lcd_init
  7075                           
  7076                           ;main.c: 478:     i2c_lcd_ulcursor_off();
  7077  0160  31A7  273E  3180   	fcall	_i2c_lcd_ulcursor_off
  7078                           
  7079                           ;main.c: 479:     i2c_lcd_home();
  7080  0163  3198  20CF  3180   	fcall	_i2c_lcd_home
  7081                           
  7082                           ;main.c: 480:     sprintf(lcdbuff,"Firmware: 2020OCT11");
  7083  0166  3020               	movlw	low _lcdbuff
  7084  0167  0021               	movlb	1	; select bank1
  7085  0168  00C0               	movwf	sprintf@s^(0+128)
  7086  0169  3003               	movlw	high _lcdbuff
  7087  016A  00C1               	movwf	(sprintf@s+1)^(0+128)
  7088  016B  3000               	movlw	low (STR_13| (0+32768))
  7089  016C  00C2               	movwf	sprintf@fmt^(0+128)
  7090  016D  30A8               	movlw	high (STR_13| (0+32768))
  7091  016E  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  7092  016F  319B  2342  3180   	fcall	_sprintf
  7093                           
  7094                           ;main.c: 481:     i2c_lcd_puts(lcdbuff);
  7095  0172  3020               	movlw	low _lcdbuff
  7096  0173  0020               	movlb	0	; select bank0
  7097  0174  00B7               	movwf	i2c_lcd_puts@s
  7098  0175  3003               	movlw	high _lcdbuff
  7099  0176  00B8               	movwf	i2c_lcd_puts@s+1
  7100  0177  3199  2130  3180   	fcall	_i2c_lcd_puts
  7101                           
  7102                           ;main.c: 482:     DELAY_milliseconds(800);
  7103  017A  3020               	movlw	32
  7104  017B  00A3               	movwf	DELAY_milliseconds@milliseconds
  7105  017C  3003               	movlw	3
  7106  017D  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7107  017E  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7108                           
  7109                           ;main.c: 483:     i2c_lcd_clear();
  7110  0181  31A7  2715  3180   	fcall	_i2c_lcd_clear
  7111                           
  7112                           ;main.c: 486:  RE_pos = current_volume;
  7113  0184  0020               	movlb	0	; select bank0
  7114  0185  086C               	movf	_current_volume,w
  7115  0186  0021               	movlb	1	; select bank1
  7116  0187  00E6               	movwf	??_main^(0+128)
  7117  0188  0866               	movf	??_main^(0+128),w
  7118  0189  0022               	banksel	_RE_pos
  7119  018A  00CA               	movwf	_RE_pos& (0+127)
  7120                           
  7121                           ;main.c: 487:  set_gains(current_volume, current_balance);
  7122  018B  0020               	movlb	0	; select bank0
  7123  018C  086B               	movf	_current_balance,w
  7124  018D  0021               	movlb	1	; select bank1
  7125  018E  00E6               	movwf	??_main^(0+128)
  7126  018F  0866               	movf	??_main^(0+128),w
  7127  0190  0020               	movlb	0	; select bank0
  7128  0191  00BA               	movwf	set_gains@bal
  7129  0192  086C               	movf	_current_volume,w
  7130  0193  3191  218E  3180   	fcall	_set_gains
  7131                           
  7132                           ;main.c: 488:   i2c_writeNBytes(0x6a, &TAS_PLAY, 2 );
  7133  0196  3053               	movlw	(low (_TAS_PLAY| (0+256)))& (0+255)
  7134  0197  0021               	movlb	1	; select bank1
  7135  0198  00E6               	movwf	??_main^(0+128)
  7136  0199  0866               	movf	??_main^(0+128),w
  7137  019A  0020               	movlb	0	; select bank0
  7138  019B  00AC               	movwf	i2c_writeNBytes@data
  7139  019C  3002               	movlw	2
  7140  019D  00AD               	movwf	i2c_writeNBytes@len
  7141  019E  3000               	movlw	0
  7142  019F  00AE               	movwf	i2c_writeNBytes@len+1
  7143  01A0  306A               	movlw	106
  7144  01A1  319B  238A  3180   	fcall	_i2c_writeNBytes
  7145                           
  7146                           ;main.c: 491: i2c_writeNBytes(0x6a, &TAS_CLEAR_FALT, 2 );
  7147  01A4  3051               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
  7148  01A5  0021               	movlb	1	; select bank1
  7149  01A6  00E6               	movwf	??_main^(0+128)
  7150  01A7  0866               	movf	??_main^(0+128),w
  7151  01A8  0020               	movlb	0	; select bank0
  7152  01A9  00AC               	movwf	i2c_writeNBytes@data
  7153  01AA  3002               	movlw	2
  7154  01AB  00AD               	movwf	i2c_writeNBytes@len
  7155  01AC  3000               	movlw	0
  7156  01AD  00AE               	movwf	i2c_writeNBytes@len+1
  7157  01AE  306A               	movlw	106
  7158  01AF  319B  238A  3180   	fcall	_i2c_writeNBytes
  7159                           
  7160                           ;main.c: 492: i2c_writeNBytes(0x6a, &TAS_NORMAL, 2 );
  7161  01B2  304F               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
  7162  01B3  0021               	movlb	1	; select bank1
  7163  01B4  00E6               	movwf	??_main^(0+128)
  7164  01B5  0866               	movf	??_main^(0+128),w
  7165  01B6  0020               	movlb	0	; select bank0
  7166  01B7  00AC               	movwf	i2c_writeNBytes@data
  7167  01B8  3002               	movlw	2
  7168  01B9  00AD               	movwf	i2c_writeNBytes@len
  7169  01BA  3000               	movlw	0
  7170  01BB  00AE               	movwf	i2c_writeNBytes@len+1
  7171  01BC  306A               	movlw	106
  7172  01BD  319B  238A  3180   	fcall	_i2c_writeNBytes
  7173                           
  7174                           ;main.c: 494: set_source(current_source);
  7175  01C0  0022               	movlb	2	; select bank2
  7176  01C1  0840               	movf	_current_source^(0+256),w
  7177  01C2  3188  2036  3180   	fcall	_set_source
  7178                           
  7179                           ;main.c: 495: vol_move_cnt = 0;
  7180  01C5  0021               	movlb	1	; select bank1
  7181  01C6  01ED               	clrf	main@vol_move_cnt^(0+128)
  7182  01C7  01EE               	clrf	(main@vol_move_cnt+1)^(0+128)
  7183                           
  7184                           ;main.c: 497: blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  7185  01C8  0022               	banksel	_blink_rate
  7186  01C9  01A3               	clrf	_blink_rate& (0+127)
  7187  01CA  01A4               	clrf	(_blink_rate& (0+127)+1)
  7188  01CB  01A5               	clrf	(_blink_rate& (0+127)+2)
  7189                           
  7190                           ;main.c: 498: puts_led("HL0");
  7191  01CC  306E               	movlw	low (STR_14| (0+32768))
  7192  01CD  0020               	movlb	0	; select bank0
  7193  01CE  00AF               	movwf	puts_led@str
  7194  01CF  30A8               	movlw	high (STR_14| (0+32768))
  7195  01D0  00B0               	movwf	puts_led@str+1
  7196  01D1  3191  21FC  3180   	fcall	_puts_led
  7197                           
  7198                           ;main.c: 499: DELAY_milliseconds(1000);
  7199  01D4  30E8               	movlw	232
  7200  01D5  00A3               	movwf	DELAY_milliseconds@milliseconds
  7201  01D6  3003               	movlw	3
  7202  01D7  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7203  01D8  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7204                           
  7205                           ;main.c: 502: lcd_disp_param();
  7206  01DB  318B  23ED  3180   	fcall	_lcd_disp_param
  7207                           
  7208                           ;main.c: 504: set_gainstr(current_volume);
  7209  01DE  086C               	movf	_current_volume,w
  7210  01DF  3193  23AB  3180   	fcall	_set_gainstr
  7211  01E2                     l8185:
  7212                           
  7213                           ;main.c: 506:         {;main.c: 507:         if (button1 == 1)
  7214  01E2  0022               	banksel	_button1
  7215  01E3  0349               	decf	_button1& (0+127),w
  7216  01E4  1D03               	btfss	3,2
  7217  01E5  2AC1               	goto	l8229
  7218                           
  7219                           ;main.c: 508:                     {;main.c: 509:                     RE_pos = current_so
      +                          urce;
  7220  01E6  0022               	movlb	2	; select bank2
  7221  01E7  0840               	movf	_current_source^(0+256),w
  7222  01E8  0021               	movlb	1	; select bank1
  7223  01E9  00E6               	movwf	??_main^(0+128)
  7224  01EA  0866               	movf	??_main^(0+128),w
  7225  01EB  0022               	banksel	_RE_pos
  7226  01EC  00CA               	movwf	_RE_pos& (0+127)
  7227                           
  7228                           ;main.c: 510:                     puts_led("SOC");
  7229  01ED  3072               	movlw	low (STR_15| (0+32768))
  7230  01EE  0020               	movlb	0	; select bank0
  7231  01EF  00AF               	movwf	puts_led@str
  7232  01F0  30A8               	movlw	high (STR_15| (0+32768))
  7233  01F1  00B0               	movwf	puts_led@str+1
  7234  01F2  3191  21FC  3180   	fcall	_puts_led
  7235                           
  7236                           ;main.c: 511:                     button1 = 0;
  7237  01F5  0022               	banksel	_button1
  7238  01F6  01C9               	clrf	_button1& (0+127)
  7239                           
  7240                           ;main.c: 512:                     DELAY_milliseconds(800);
  7241  01F7  3020               	movlw	32
  7242  01F8  0020               	movlb	0	; select bank0
  7243  01F9  00A3               	movwf	DELAY_milliseconds@milliseconds
  7244  01FA  3003               	movlw	3
  7245  01FB  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7246  01FC  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7247                           
  7248                           ;main.c: 513:                     puts_led("   ");
  7249  01FF  3062               	movlw	low (STR_16| (0+32768))
  7250  0200  00AF               	movwf	puts_led@str
  7251  0201  30A8               	movlw	high (STR_16| (0+32768))
  7252  0202  00B0               	movwf	puts_led@str+1
  7253  0203  3191  21FC  3180   	fcall	_puts_led
  7254                           
  7255                           ;main.c: 514:                     DELAY_milliseconds(200);
  7256  0206  30C8               	movlw	200
  7257  0207  00A3               	movwf	DELAY_milliseconds@milliseconds
  7258  0208  3000               	movlw	0
  7259  0209  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7260  020A  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7261                           
  7262                           ;main.c: 515:                     button1 = 0;
  7263  020D  0022               	banksel	_button1
  7264  020E  01C9               	clrf	_button1& (0+127)
  7265                           
  7266                           ;main.c: 517:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  7267  020F  3023               	movlw	low _blink_rate
  7268  0210  0086               	movwf	6
  7269  0211  3001               	movlw	high _blink_rate
  7270  0212  0087               	movwf	7
  7271  0213  3141               	addfsr 1,1
  7272  0214  3001               	movlw	1
  7273  0215  0022               	banksel	_blink_rate
  7274  0216  00A3               	movwf	_blink_rate& (0+127)
  7275  0217  3FC0               	movwi [0]fsr1
  7276  0218  0021               	movlb	1	; select bank1
  7277  0219  00E6               	movwf	??_main^(0+128)
  7278  021A  3025               	movlw	low (_blink_rate+2)
  7279  021B  0086               	movwf	6
  7280  021C  3001               	movlw	high (_blink_rate+2)
  7281  021D  0087               	movwf	7
  7282  021E  0866               	movf	??_main^(0+128),w
  7283  021F  0081               	movwf	1
  7284  0220                     l8207:	
  7285                           ;main.c: 518:                     while (button1 == 0)
  7286                           
  7287                           
  7288                           ;main.c: 518:                     while (button1 == 0)
  7289  0220  0022               	banksel	_button1
  7290  0221  0849               	movf	_button1& (0+127),w
  7291  0222  1D03               	btfss	3,2
  7292  0223  2A64               	goto	l8209
  7293                           
  7294                           ;main.c: 519:                         {;main.c: 520:                          puts_led(l
      +                          ed_src_name[current_source % 5]);
  7295  0224  3005               	movlw	5
  7296  0225  0021               	movlb	1	; select bank1
  7297  0226  00E6               	movwf	??_main^(0+128)
  7298  0227  0866               	movf	??_main^(0+128),w
  7299  0228  0020               	movlb	0	; select bank0
  7300  0229  00A3               	movwf	___lbmod@divisor
  7301  022A  0022               	movlb	2	; select bank2
  7302  022B  0840               	movf	_current_source^(0+256),w
  7303  022C  319A  22E0  3180   	fcall	___lbmod
  7304  022F  0021               	movlb	1	; select bank1
  7305  0230  00E7               	movwf	(??_main+1)^(0+128)
  7306  0231  01E8               	clrf	((??_main+1)^(0+128)+1)
  7307  0232  0867               	movf	(??_main+1)^(0+128),w
  7308  0233  0020               	movlb	0	; select bank0
  7309  0234  00A9               	movwf	___wmul@multiplier
  7310  0235  0021               	movlb	1	; select bank1
  7311  0236  0868               	movf	(??_main+2)^(0+128),w
  7312  0237  0020               	movlb	0	; select bank0
  7313  0238  00AA               	movwf	___wmul@multiplier+1
  7314  0239  3007               	movlw	7
  7315  023A  00AB               	movwf	___wmul@multiplicand
  7316  023B  3000               	movlw	0
  7317  023C  00AC               	movwf	___wmul@multiplicand+1
  7318  023D  319A  226E  3180   	fcall	___wmul
  7319  0240  30FF               	movlw	low (_led_src_name| (0+32768))
  7320  0241  0021               	movlb	1	; select bank1
  7321  0242  00E9               	movwf	(??_main+3)^(0+128)
  7322  0243  30A0               	movlw	high (_led_src_name| (0+32768))
  7323  0244  00EA               	movwf	((??_main+3)^(0+128)+1)
  7324  0245  0020               	movlb	0	; select bank0
  7325  0246  0829               	movf	?___wmul,w
  7326  0247  0021               	movlb	1	; select bank1
  7327  0248  0769               	addwf	(??_main+3)^(0+128),w
  7328  0249  00EB               	movwf	(??_main+5)^(0+128)
  7329  024A  0020               	movlb	0	; select bank0
  7330  024B  082A               	movf	?___wmul+1,w
  7331  024C  0021               	movlb	1	; select bank1
  7332  024D  3D6A               	addwfc	(??_main+4)^(0+128),w
  7333  024E  00EC               	movwf	(??_main+6)^(0+128)
  7334  024F  086B               	movf	(??_main+5)^(0+128),w
  7335  0250  0020               	movlb	0	; select bank0
  7336  0251  00AF               	movwf	puts_led@str
  7337  0252  0021               	movlb	1	; select bank1
  7338  0253  086C               	movf	(??_main+6)^(0+128),w
  7339  0254  0020               	movlb	0	; select bank0
  7340  0255  00B0               	movwf	puts_led@str+1
  7341  0256  3191  21FC  3180   	fcall	_puts_led
  7342                           
  7343                           ;main.c: 521:                          lcd_disp_param();
  7344  0259  318B  23ED  3180   	fcall	_lcd_disp_param
  7345                           
  7346                           ;main.c: 522:                          current_source = RE_pos;
  7347  025C  0022               	banksel	_RE_pos
  7348  025D  084A               	movf	_RE_pos& (0+127),w
  7349  025E  0021               	movlb	1	; select bank1
  7350  025F  00E6               	movwf	??_main^(0+128)
  7351  0260  0866               	movf	??_main^(0+128),w
  7352  0261  0022               	movlb	2	; select bank2
  7353  0262  00C0               	movwf	_current_source^(0+256)
  7354  0263  2A20               	goto	l8207
  7355  0264                     l8209:
  7356                           
  7357                           ;main.c: 524:                     button1 = 0;
  7358  0264  01C9               	clrf	_button1& (0+127)
  7359                           
  7360                           ;main.c: 526:                     i2c_writeNBytes(0x6a,&TAS_MUTE, 2 );
  7361  0265  30B9               	movlw	(low (_TAS_MUTE| (0+256)))& (0+255)
  7362  0266  0021               	movlb	1	; select bank1
  7363  0267  00E6               	movwf	??_main^(0+128)
  7364  0268  0866               	movf	??_main^(0+128),w
  7365  0269  0020               	movlb	0	; select bank0
  7366  026A  00AC               	movwf	i2c_writeNBytes@data
  7367  026B  3002               	movlw	2
  7368  026C  00AD               	movwf	i2c_writeNBytes@len
  7369  026D  3000               	movlw	0
  7370  026E  00AE               	movwf	i2c_writeNBytes@len+1
  7371  026F  306A               	movlw	106
  7372  0270  319B  238A  3180   	fcall	_i2c_writeNBytes
  7373                           
  7374                           ;main.c: 527:                     DATAEE_WriteByte(0xF010, 0x5C);
  7375  0273  3010               	movlw	16
  7376  0274  00A9               	movwf	DATAEE_WriteByte@bAdd
  7377  0275  30F0               	movlw	240
  7378  0276  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7379  0277  305C               	movlw	92
  7380  0278  0021               	movlb	1	; select bank1
  7381  0279  00E6               	movwf	??_main^(0+128)
  7382  027A  0866               	movf	??_main^(0+128),w
  7383  027B  0020               	movlb	0	; select bank0
  7384  027C  00AB               	movwf	DATAEE_WriteByte@bData
  7385  027D  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7386                           
  7387                           ;main.c: 528:                     DATAEE_WriteByte(0xF013, (current_source % 5));
  7388  0280  3013               	movlw	19
  7389  0281  00A9               	movwf	DATAEE_WriteByte@bAdd
  7390  0282  30F0               	movlw	240
  7391  0283  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7392  0284  3005               	movlw	5
  7393  0285  0021               	movlb	1	; select bank1
  7394  0286  00E6               	movwf	??_main^(0+128)
  7395  0287  0866               	movf	??_main^(0+128),w
  7396  0288  0020               	movlb	0	; select bank0
  7397  0289  00A3               	movwf	___lbmod@divisor
  7398  028A  0022               	movlb	2	; select bank2
  7399  028B  0840               	movf	_current_source^(0+256),w
  7400  028C  319A  22E0  3180   	fcall	___lbmod
  7401  028F  0021               	movlb	1	; select bank1
  7402  0290  00E7               	movwf	(??_main+1)^(0+128)
  7403  0291  0867               	movf	(??_main+1)^(0+128),w
  7404  0292  0020               	movlb	0	; select bank0
  7405  0293  00AB               	movwf	DATAEE_WriteByte@bData
  7406  0294  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7407                           
  7408                           ;main.c: 529:                     set_source(current_source);
  7409  0297  0022               	movlb	2	; select bank2
  7410  0298  0840               	movf	_current_source^(0+256),w
  7411  0299  3188  2036  3180   	fcall	_set_source
  7412                           
  7413                           ;main.c: 530:                      RE_pos = current_volume;
  7414  029C  086C               	movf	_current_volume,w
  7415  029D  0021               	movlb	1	; select bank1
  7416  029E  00E6               	movwf	??_main^(0+128)
  7417  029F  0866               	movf	??_main^(0+128),w
  7418  02A0  0022               	banksel	_RE_pos
  7419  02A1  00CA               	movwf	_RE_pos& (0+127)
  7420                           
  7421                           ;main.c: 531:                     set_gainstr(current_volume);
  7422  02A2  0020               	movlb	0	; select bank0
  7423  02A3  086C               	movf	_current_volume,w
  7424  02A4  3193  23AB  3180   	fcall	_set_gainstr
  7425                           
  7426                           ;main.c: 532:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  7427  02A7  0022               	banksel	_blink_rate
  7428  02A8  01A3               	clrf	_blink_rate& (0+127)
  7429  02A9  01A4               	clrf	(_blink_rate& (0+127)+1)
  7430  02AA  01A5               	clrf	(_blink_rate& (0+127)+2)
  7431                           
  7432                           ;main.c: 533:                     puts_led(ledstr);
  7433  02AB  30CB               	movlw	low _ledstr
  7434  02AC  0020               	movlb	0	; select bank0
  7435  02AD  00AF               	movwf	puts_led@str
  7436  02AE  3002               	movlw	high _ledstr
  7437  02AF  00B0               	movwf	puts_led@str+1
  7438  02B0  3191  21FC  3180   	fcall	_puts_led
  7439                           
  7440                           ;main.c: 535:                     i2c_writeNBytes(0x6a,&TAS_PLAY, 2 );
  7441  02B3  3053               	movlw	(low (_TAS_PLAY| (0+256)))& (0+255)
  7442  02B4  0021               	movlb	1	; select bank1
  7443  02B5  00E6               	movwf	??_main^(0+128)
  7444  02B6  0866               	movf	??_main^(0+128),w
  7445  02B7  0020               	movlb	0	; select bank0
  7446  02B8  00AC               	movwf	i2c_writeNBytes@data
  7447  02B9  3002               	movlw	2
  7448  02BA  00AD               	movwf	i2c_writeNBytes@len
  7449  02BB  3000               	movlw	0
  7450  02BC  00AE               	movwf	i2c_writeNBytes@len+1
  7451  02BD  306A               	movlw	106
  7452  02BE  319B  238A  3180   	fcall	_i2c_writeNBytes
  7453  02C1                     l8229:
  7454                           
  7455                           ;main.c: 537:         if (button1 == 2)
  7456  02C1  3002               	movlw	2
  7457  02C2  0022               	banksel	_button1
  7458  02C3  0649               	xorwf	_button1& (0+127),w
  7459  02C4  1D03               	btfss	3,2
  7460  02C5  2E07               	goto	l8407
  7461                           
  7462                           ;main.c: 538:                     {;main.c: 540:                      DATAEE_WriteByte(0
      +                          xF010, 0x5C);
  7463  02C6  3010               	movlw	16
  7464  02C7  0020               	movlb	0	; select bank0
  7465  02C8  00A9               	movwf	DATAEE_WriteByte@bAdd
  7466  02C9  30F0               	movlw	240
  7467  02CA  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7468  02CB  305C               	movlw	92
  7469  02CC  0021               	movlb	1	; select bank1
  7470  02CD  00E6               	movwf	??_main^(0+128)
  7471  02CE  0866               	movf	??_main^(0+128),w
  7472  02CF  0020               	movlb	0	; select bank0
  7473  02D0  00AB               	movwf	DATAEE_WriteByte@bData
  7474  02D1  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7475                           
  7476                           ;main.c: 541:                     RE_pos = 64 + current_balance ;
  7477  02D4  086B               	movf	_current_balance,w
  7478  02D5  3E40               	addlw	64
  7479  02D6  0021               	movlb	1	; select bank1
  7480  02D7  00E6               	movwf	??_main^(0+128)
  7481  02D8  0866               	movf	??_main^(0+128),w
  7482  02D9  0022               	banksel	_RE_pos
  7483  02DA  00CA               	movwf	_RE_pos& (0+127)
  7484                           
  7485                           ;main.c: 542:                     puts_led("BAL");
  7486  02DB  307E               	movlw	low (STR_17| (0+32768))
  7487  02DC  0020               	movlb	0	; select bank0
  7488  02DD  00AF               	movwf	puts_led@str
  7489  02DE  30A8               	movlw	high (STR_17| (0+32768))
  7490  02DF  00B0               	movwf	puts_led@str+1
  7491  02E0  3191  21FC  3180   	fcall	_puts_led
  7492                           
  7493                           ;main.c: 543:                     DELAY_milliseconds(900);
  7494  02E3  3084               	movlw	132
  7495  02E4  00A3               	movwf	DELAY_milliseconds@milliseconds
  7496  02E5  3003               	movlw	3
  7497  02E6  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7498  02E7  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7499                           
  7500                           ;main.c: 544:                     puts_led("   ");
  7501  02EA  3062               	movlw	low (STR_16| (0+32768))
  7502  02EB  00AF               	movwf	puts_led@str
  7503  02EC  30A8               	movlw	high (STR_16| (0+32768))
  7504  02ED  00B0               	movwf	puts_led@str+1
  7505  02EE  3191  21FC  3180   	fcall	_puts_led
  7506                           
  7507                           ;main.c: 545:                     DELAY_milliseconds(200);
  7508  02F1  30C8               	movlw	200
  7509  02F2  00A3               	movwf	DELAY_milliseconds@milliseconds
  7510  02F3  3000               	movlw	0
  7511  02F4  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7512  02F5  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7513                           
  7514                           ;main.c: 546:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  7515  02F8  3023               	movlw	low _blink_rate
  7516  02F9  0086               	movwf	6
  7517  02FA  3001               	movlw	high _blink_rate
  7518  02FB  0087               	movwf	7
  7519  02FC  3141               	addfsr 1,1
  7520  02FD  3001               	movlw	1
  7521  02FE  0022               	banksel	_blink_rate
  7522  02FF  00A3               	movwf	_blink_rate& (0+127)
  7523  0300  3FC0               	movwi [0]fsr1
  7524  0301  0021               	movlb	1	; select bank1
  7525  0302  00E6               	movwf	??_main^(0+128)
  7526  0303  3025               	movlw	low (_blink_rate+2)
  7527  0304  0086               	movwf	6
  7528  0305  3001               	movlw	high (_blink_rate+2)
  7529  0306  0087               	movwf	7
  7530  0307  0866               	movf	??_main^(0+128),w
  7531  0308  0081               	movwf	1
  7532                           
  7533                           ;main.c: 547:                     button1 = 0;
  7534  0309  0022               	banksel	_button1
  7535  030A  01C9               	clrf	_button1& (0+127)
  7536  030B                     l8249:	
  7537                           ;main.c: 548:                     while (button1 == 0)
  7538                           
  7539                           
  7540                           ;main.c: 548:                     while (button1 == 0)
  7541  030B  0022               	banksel	_button1
  7542  030C  0849               	movf	_button1& (0+127),w
  7543  030D  1D03               	btfss	3,2
  7544  030E  2B31               	goto	l8251
  7545                           
  7546                           ;main.c: 549:                         {;main.c: 550:                         sprintf(led
      +                          buff, "%03d",(current_balance=(signed char)(RE_pos-64)));
  7547  030F  302C               	movlw	low _ledbuff
  7548  0310  0021               	movlb	1	; select bank1
  7549  0311  00C0               	movwf	sprintf@s^(0+128)
  7550  0312  3002               	movlw	high _ledbuff
  7551  0313  00C1               	movwf	(sprintf@s^(0+128)+1)
  7552  0314  305D               	movlw	low (STR_19| (0+32768))
  7553  0315  00C2               	movwf	sprintf@fmt^(0+128)
  7554  0316  30A8               	movlw	high (STR_19| (0+32768))
  7555  0317  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  7556  0318  0022               	banksel	_RE_pos
  7557  0319  084A               	movf	_RE_pos& (0+127),w
  7558  031A  3EC0               	addlw	-64
  7559  031B  0020               	movlb	0	; select bank0
  7560  031C  00EB               	movwf	_current_balance
  7561  031D  0021               	movlb	1	; select bank1
  7562  031E  00C4               	movwf	(?_sprintf^(0+128)+4)
  7563  031F  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  7564  0320  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  7565  0321  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  7566  0322  319B  2342  3180   	fcall	_sprintf
  7567                           
  7568                           ;main.c: 551:                         puts_led(ledbuff);
  7569  0325  302C               	movlw	low _ledbuff
  7570  0326  0020               	movlb	0	; select bank0
  7571  0327  00AF               	movwf	puts_led@str
  7572  0328  3002               	movlw	high _ledbuff
  7573  0329  00B0               	movwf	puts_led@str+1
  7574  032A  3191  21FC  3180   	fcall	_puts_led
  7575                           
  7576                           ;main.c: 552:                         lcd_disp_param();
  7577  032D  318B  23ED  3180   	fcall	_lcd_disp_param
  7578  0330  2B0B               	goto	l8249
  7579  0331                     l8251:
  7580                           
  7581                           ;main.c: 554:                     button1 = 0;
  7582  0331  01C9               	clrf	_button1& (0+127)
  7583                           
  7584                           ;main.c: 555:                     DATAEE_WriteByte(0xF012, current_balance);
  7585  0332  3012               	movlw	18
  7586  0333  0020               	movlb	0	; select bank0
  7587  0334  00A9               	movwf	DATAEE_WriteByte@bAdd
  7588  0335  30F0               	movlw	240
  7589  0336  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7590  0337  086B               	movf	_current_balance,w
  7591  0338  0021               	movlb	1	; select bank1
  7592  0339  00E6               	movwf	??_main^(0+128)
  7593  033A  0866               	movf	??_main^(0+128),w
  7594  033B  0020               	movlb	0	; select bank0
  7595  033C  00AB               	movwf	DATAEE_WriteByte@bData
  7596  033D  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7597                           
  7598                           ;main.c: 556:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  7599  0340  0022               	banksel	_blink_rate
  7600  0341  01A3               	clrf	_blink_rate& (0+127)
  7601  0342  01A4               	clrf	(_blink_rate& (0+127)+1)
  7602  0343  01A5               	clrf	(_blink_rate& (0+127)+2)
  7603                           
  7604                           ;main.c: 557:                     sprintf(ledbuff, "%03d",current_balance);
  7605  0344  302C               	movlw	low _ledbuff
  7606  0345  0021               	movlb	1	; select bank1
  7607  0346  00C0               	movwf	sprintf@s^(0+128)
  7608  0347  3002               	movlw	high _ledbuff
  7609  0348  00C1               	movwf	(sprintf@s^(0+128)+1)
  7610  0349  305D               	movlw	low (STR_19| (0+32768))
  7611  034A  00C2               	movwf	sprintf@fmt^(0+128)
  7612  034B  30A8               	movlw	high (STR_19| (0+32768))
  7613  034C  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  7614  034D  0020               	movlb	0	; select bank0
  7615  034E  086B               	movf	_current_balance,w
  7616  034F  0021               	movlb	1	; select bank1
  7617  0350  00C4               	movwf	(?_sprintf^(0+128)+4)
  7618  0351  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  7619  0352  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  7620  0353  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  7621  0354  319B  2342  3180   	fcall	_sprintf
  7622                           
  7623                           ;main.c: 558:                     set_gains(current_volume, current_balance);
  7624  0357  0020               	movlb	0	; select bank0
  7625  0358  086B               	movf	_current_balance,w
  7626  0359  0021               	movlb	1	; select bank1
  7627  035A  00E6               	movwf	??_main^(0+128)
  7628  035B  0866               	movf	??_main^(0+128),w
  7629  035C  0020               	movlb	0	; select bank0
  7630  035D  00BA               	movwf	set_gains@bal
  7631  035E  086C               	movf	_current_volume,w
  7632  035F  3191  218E  3180   	fcall	_set_gains
  7633                           
  7634                           ;main.c: 559:                     puts_led(ledbuff);
  7635  0362  302C               	movlw	low _ledbuff
  7636  0363  00AF               	movwf	puts_led@str
  7637  0364  3002               	movlw	high _ledbuff
  7638  0365  00B0               	movwf	puts_led@str+1
  7639  0366  3191  21FC  3180   	fcall	_puts_led
  7640                           
  7641                           ;main.c: 560:                     DELAY_milliseconds(1400);
  7642  0369  3078               	movlw	120
  7643  036A  00A3               	movwf	DELAY_milliseconds@milliseconds
  7644  036B  3005               	movlw	5
  7645  036C  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7646  036D  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7647                           
  7648                           ;main.c: 561:                     puts_led("   ");
  7649  0370  3062               	movlw	low (STR_16| (0+32768))
  7650  0371  00AF               	movwf	puts_led@str
  7651  0372  30A8               	movlw	high (STR_16| (0+32768))
  7652  0373  00B0               	movwf	puts_led@str+1
  7653  0374  3191  21FC  3180   	fcall	_puts_led
  7654                           
  7655                           ;main.c: 562:                     DELAY_milliseconds(800);
  7656  0377  3020               	movlw	32
  7657  0378  00A3               	movwf	DELAY_milliseconds@milliseconds
  7658  0379  3003               	movlw	3
  7659  037A  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7660  037B  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7661                           
  7662                           ;main.c: 565:                     RE_pos = current_hpf;
  7663  037E  086A               	movf	_current_hpf,w
  7664  037F  0021               	movlb	1	; select bank1
  7665  0380  00E6               	movwf	??_main^(0+128)
  7666  0381  0866               	movf	??_main^(0+128),w
  7667  0382  0022               	banksel	_RE_pos
  7668  0383  00CA               	movwf	_RE_pos& (0+127)
  7669                           
  7670                           ;main.c: 566:                     puts_led("HPF");
  7671  0384  307A               	movlw	low (STR_22| (0+32768))
  7672  0385  0020               	movlb	0	; select bank0
  7673  0386  00AF               	movwf	puts_led@str
  7674  0387  30A8               	movlw	high (STR_22| (0+32768))
  7675  0388  00B0               	movwf	puts_led@str+1
  7676  0389  3191  21FC  3180   	fcall	_puts_led
  7677                           
  7678                           ;main.c: 567:                     DELAY_milliseconds(900);
  7679  038C  3084               	movlw	132
  7680  038D  00A3               	movwf	DELAY_milliseconds@milliseconds
  7681  038E  3003               	movlw	3
  7682  038F  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7683  0390  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7684                           
  7685                           ;main.c: 568:                     puts_led("   ");
  7686  0393  3062               	movlw	low (STR_16| (0+32768))
  7687  0394  00AF               	movwf	puts_led@str
  7688  0395  30A8               	movlw	high (STR_16| (0+32768))
  7689  0396  00B0               	movwf	puts_led@str+1
  7690  0397  3191  21FC  3180   	fcall	_puts_led
  7691                           
  7692                           ;main.c: 569:                     DELAY_milliseconds(200);
  7693  039A  30C8               	movlw	200
  7694  039B  00A3               	movwf	DELAY_milliseconds@milliseconds
  7695  039C  3000               	movlw	0
  7696  039D  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7697  039E  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7698                           
  7699                           ;main.c: 570:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  7700  03A1  3023               	movlw	low _blink_rate
  7701  03A2  0086               	movwf	6
  7702  03A3  3001               	movlw	high _blink_rate
  7703  03A4  0087               	movwf	7
  7704  03A5  3141               	addfsr 1,1
  7705  03A6  3001               	movlw	1
  7706  03A7  0022               	banksel	_blink_rate
  7707  03A8  00A3               	movwf	_blink_rate& (0+127)
  7708  03A9  3FC0               	movwi [0]fsr1
  7709  03AA  0021               	movlb	1	; select bank1
  7710  03AB  00E6               	movwf	??_main^(0+128)
  7711  03AC  3025               	movlw	low (_blink_rate+2)
  7712  03AD  0086               	movwf	6
  7713  03AE  3001               	movlw	high (_blink_rate+2)
  7714  03AF  0087               	movwf	7
  7715  03B0  0866               	movf	??_main^(0+128),w
  7716  03B1  0081               	movwf	1
  7717                           
  7718                           ;main.c: 571:                     button1 = 0;
  7719  03B2  0022               	banksel	_button1
  7720  03B3  01C9               	clrf	_button1& (0+127)
  7721  03B4                     l8291:	
  7722                           ;main.c: 572:                     while (button1 == 0)
  7723                           
  7724                           
  7725                           ;main.c: 572:                     while (button1 == 0)
  7726  03B4  0022               	banksel	_button1
  7727  03B5  0849               	movf	_button1& (0+127),w
  7728  03B6  1D03               	btfss	3,2
  7729  03B7  2BFC               	goto	l8293
  7730                           
  7731                           ;main.c: 573:                         {;main.c: 574:                         current_hpf
      +                           = RE_pos%9;
  7732  03B8  3009               	movlw	9
  7733  03B9  0021               	movlb	1	; select bank1
  7734  03BA  00E6               	movwf	??_main^(0+128)
  7735  03BB  0866               	movf	??_main^(0+128),w
  7736  03BC  0020               	movlb	0	; select bank0
  7737  03BD  00A3               	movwf	___lbmod@divisor
  7738  03BE  0022               	banksel	_RE_pos
  7739  03BF  084A               	movf	_RE_pos& (0+127),w
  7740  03C0  319A  22E0  3180   	fcall	___lbmod
  7741  03C3  0021               	movlb	1	; select bank1
  7742  03C4  00E7               	movwf	(??_main+1)^(0+128)
  7743  03C5  0867               	movf	(??_main+1)^(0+128),w
  7744  03C6  0020               	movlb	0	; select bank0
  7745  03C7  00EA               	movwf	_current_hpf
  7746                           
  7747                           ;main.c: 575:                         strcpy(ledbuff, led_hpf_fc[current_hpf]);
  7748  03C8  302C               	movlw	low _ledbuff
  7749  03C9  00AF               	movwf	strcpy@dest
  7750  03CA  3002               	movlw	high _ledbuff
  7751  03CB  00B0               	movwf	strcpy@dest+1
  7752  03CC  086A               	movf	_current_hpf,w
  7753  03CD  0021               	movlb	1	; select bank1
  7754  03CE  00E6               	movwf	??_main^(0+128)
  7755  03CF  01E7               	clrf	(??_main^(0+128)+1)
  7756  03D0  0866               	movf	??_main^(0+128),w
  7757  03D1  0020               	movlb	0	; select bank0
  7758  03D2  00A9               	movwf	___wmul@multiplier
  7759  03D3  0021               	movlb	1	; select bank1
  7760  03D4  0867               	movf	(??_main+1)^(0+128),w
  7761  03D5  0020               	movlb	0	; select bank0
  7762  03D6  00AA               	movwf	___wmul@multiplier+1
  7763  03D7  3007               	movlw	7
  7764  03D8  00AB               	movwf	___wmul@multiplicand
  7765  03D9  3000               	movlw	0
  7766  03DA  00AC               	movwf	___wmul@multiplicand+1
  7767  03DB  319A  226E  3180   	fcall	___wmul
  7768  03DE  303F               	movlw	low (_led_hpf_fc| (0+32768))
  7769  03DF  0021               	movlb	1	; select bank1
  7770  03E0  00E8               	movwf	(??_main+2)^(0+128)
  7771  03E1  30A0               	movlw	high (_led_hpf_fc| (0+32768))
  7772  03E2  00E9               	movwf	((??_main+2)^(0+128)+1)
  7773  03E3  0020               	movlb	0	; select bank0
  7774  03E4  0829               	movf	?___wmul,w
  7775  03E5  0021               	movlb	1	; select bank1
  7776  03E6  0768               	addwf	(??_main+2)^(0+128),w
  7777  03E7  0020               	movlb	0	; select bank0
  7778  03E8  00B1               	movwf	strcpy@src
  7779  03E9  082A               	movf	?___wmul+1,w
  7780  03EA  0021               	movlb	1	; select bank1
  7781  03EB  3D69               	addwfc	(??_main+3)^(0+128),w
  7782  03EC  0020               	movlb	0	; select bank0
  7783  03ED  00B2               	movwf	strcpy@src+1
  7784  03EE  3190  2000  3180   	fcall	_strcpy
  7785                           
  7786                           ;main.c: 576:                         puts_led(ledbuff);
  7787  03F1  302C               	movlw	low _ledbuff
  7788  03F2  00AF               	movwf	puts_led@str
  7789  03F3  3002               	movlw	high _ledbuff
  7790  03F4  00B0               	movwf	puts_led@str+1
  7791  03F5  3191  21FC  3180   	fcall	_puts_led
  7792                           
  7793                           ;main.c: 577:                         lcd_disp_param();
  7794  03F8  318B  23ED  3180   	fcall	_lcd_disp_param
  7795  03FB  2BB4               	goto	l8291
  7796  03FC                     l8293:
  7797                           
  7798                           ;main.c: 579:                     button1 = 0;
  7799  03FC  01C9               	clrf	_button1& (0+127)
  7800                           
  7801                           ;main.c: 580:                     DATAEE_WriteByte(0xF015, current_hpf);
  7802  03FD  3015               	movlw	21
  7803  03FE  0020               	movlb	0	; select bank0
  7804  03FF  00A9               	movwf	DATAEE_WriteByte@bAdd
  7805  0400  30F0               	movlw	240
  7806  0401  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  7807  0402  086A               	movf	_current_hpf,w
  7808  0403  0021               	movlb	1	; select bank1
  7809  0404  00E6               	movwf	??_main^(0+128)
  7810  0405  0866               	movf	??_main^(0+128),w
  7811  0406  0020               	movlb	0	; select bank0
  7812  0407  00AB               	movwf	DATAEE_WriteByte@bData
  7813  0408  319B  2300  3180   	fcall	_DATAEE_WriteByte
  7814                           
  7815                           ;main.c: 581:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  7816  040B  0022               	banksel	_blink_rate
  7817  040C  01A3               	clrf	_blink_rate& (0+127)
  7818  040D  01A4               	clrf	(_blink_rate& (0+127)+1)
  7819  040E  01A5               	clrf	(_blink_rate& (0+127)+2)
  7820                           
  7821                           ;main.c: 582:                     if( current_hpf == 8)
  7822  040F  3008               	movlw	8
  7823  0410  0020               	movlb	0	; select bank0
  7824  0411  066A               	xorwf	_current_hpf,w
  7825  0412  1D03               	btfss	3,2
  7826  0413  2C23               	goto	l8303
  7827                           
  7828                           ;main.c: 583:                               i2c_writeNBytes(0x6a,&TAS_DC, 2 );
  7829  0414  30BF               	movlw	(low (_TAS_DC| (0+256)))& (0+255)
  7830  0415  0021               	movlb	1	; select bank1
  7831  0416  00E6               	movwf	??_main^(0+128)
  7832  0417  0866               	movf	??_main^(0+128),w
  7833  0418  0020               	movlb	0	; select bank0
  7834  0419  00AC               	movwf	i2c_writeNBytes@data
  7835  041A  3002               	movlw	2
  7836  041B  00AD               	movwf	i2c_writeNBytes@len
  7837  041C  3000               	movlw	0
  7838  041D  00AE               	movwf	i2c_writeNBytes@len+1
  7839  041E  306A               	movlw	106
  7840  041F  319B  238A  3180   	fcall	_i2c_writeNBytes
  7841  0422  2C3B               	goto	l8305
  7842  0423                     l8303:
  7843                           
  7844                           ;main.c: 585:                             i2c_writeNBytes(0x6a,&TAS_AC, 2 );
  7845  0423  3057               	movlw	(low (_TAS_AC| (0+256)))& (0+255)
  7846  0424  0021               	movlb	1	; select bank1
  7847  0425  00E6               	movwf	??_main^(0+128)
  7848  0426  0866               	movf	??_main^(0+128),w
  7849  0427  0020               	movlb	0	; select bank0
  7850  0428  00AC               	movwf	i2c_writeNBytes@data
  7851  0429  3002               	movlw	2
  7852  042A  00AD               	movwf	i2c_writeNBytes@len
  7853  042B  3000               	movlw	0
  7854  042C  00AE               	movwf	i2c_writeNBytes@len+1
  7855  042D  306A               	movlw	106
  7856  042E  319B  238A  3180   	fcall	_i2c_writeNBytes
  7857                           
  7858                           ;main.c: 586:                             write_tas6422( 0x26, current_hpf);
  7859  0431  086A               	movf	_current_hpf,w
  7860  0432  0021               	movlb	1	; select bank1
  7861  0433  00E6               	movwf	??_main^(0+128)
  7862  0434  0866               	movf	??_main^(0+128),w
  7863  0435  0020               	movlb	0	; select bank0
  7864  0436  00B0               	movwf	write_tas6422@val
  7865  0437  3026               	movlw	38
  7866  0438  3199  21D2  3180   	fcall	_write_tas6422
  7867  043B                     l8305:
  7868                           
  7869                           ;main.c: 588:                     strcpy(ledbuff, led_hpf_fc[current_hpf]);
  7870  043B  302C               	movlw	low _ledbuff
  7871  043C  00AF               	movwf	strcpy@dest
  7872  043D  3002               	movlw	high _ledbuff
  7873  043E  00B0               	movwf	strcpy@dest+1
  7874  043F  086A               	movf	_current_hpf,w
  7875  0440  0021               	movlb	1	; select bank1
  7876  0441  00E6               	movwf	??_main^(0+128)
  7877  0442  01E7               	clrf	(??_main^(0+128)+1)
  7878  0443  0866               	movf	??_main^(0+128),w
  7879  0444  0020               	movlb	0	; select bank0
  7880  0445  00A9               	movwf	___wmul@multiplier
  7881  0446  0021               	movlb	1	; select bank1
  7882  0447  0867               	movf	(??_main+1)^(0+128),w
  7883  0448  0020               	movlb	0	; select bank0
  7884  0449  00AA               	movwf	___wmul@multiplier+1
  7885  044A  3007               	movlw	7
  7886  044B  00AB               	movwf	___wmul@multiplicand
  7887  044C  3000               	movlw	0
  7888  044D  00AC               	movwf	___wmul@multiplicand+1
  7889  044E  319A  226E  3180   	fcall	___wmul
  7890  0451  303F               	movlw	low (_led_hpf_fc| (0+32768))
  7891  0452  0021               	movlb	1	; select bank1
  7892  0453  00E8               	movwf	(??_main+2)^(0+128)
  7893  0454  30A0               	movlw	high (_led_hpf_fc| (0+32768))
  7894  0455  00E9               	movwf	((??_main+2)^(0+128)+1)
  7895  0456  0020               	movlb	0	; select bank0
  7896  0457  0829               	movf	?___wmul,w
  7897  0458  0021               	movlb	1	; select bank1
  7898  0459  0768               	addwf	(??_main+2)^(0+128),w
  7899  045A  0020               	movlb	0	; select bank0
  7900  045B  00B1               	movwf	strcpy@src
  7901  045C  082A               	movf	?___wmul+1,w
  7902  045D  0021               	movlb	1	; select bank1
  7903  045E  3D69               	addwfc	(??_main+3)^(0+128),w
  7904  045F  0020               	movlb	0	; select bank0
  7905  0460  00B2               	movwf	strcpy@src+1
  7906  0461  3190  2000  3180   	fcall	_strcpy
  7907                           
  7908                           ;main.c: 589:                     puts_led(ledbuff);
  7909  0464  302C               	movlw	low _ledbuff
  7910  0465  00AF               	movwf	puts_led@str
  7911  0466  3002               	movlw	high _ledbuff
  7912  0467  00B0               	movwf	puts_led@str+1
  7913  0468  3191  21FC  3180   	fcall	_puts_led
  7914                           
  7915                           ;main.c: 590:                     DELAY_milliseconds(1500);
  7916  046B  30DC               	movlw	220
  7917  046C  00A3               	movwf	DELAY_milliseconds@milliseconds
  7918  046D  3005               	movlw	5
  7919  046E  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7920  046F  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7921                           
  7922                           ;main.c: 591:                     puts_led("   ");
  7923  0472  3062               	movlw	low (STR_16| (0+32768))
  7924  0473  00AF               	movwf	puts_led@str
  7925  0474  30A8               	movlw	high (STR_16| (0+32768))
  7926  0475  00B0               	movwf	puts_led@str+1
  7927  0476  3191  21FC  3180   	fcall	_puts_led
  7928                           
  7929                           ;main.c: 592:                     DELAY_milliseconds(800);
  7930  0479  3020               	movlw	32
  7931  047A  00A3               	movwf	DELAY_milliseconds@milliseconds
  7932  047B  3003               	movlw	3
  7933  047C  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7934  047D  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7935                           
  7936                           ;main.c: 595:                     RE_pos = current_uol;
  7937  0480  0022               	movlb	2	; select bank2
  7938  0481  083C               	movf	_current_uol^(0+256),w
  7939  0482  0021               	movlb	1	; select bank1
  7940  0483  00E6               	movwf	??_main^(0+128)
  7941  0484  0866               	movf	??_main^(0+128),w
  7942  0485  0022               	banksel	_RE_pos
  7943  0486  00CA               	movwf	_RE_pos& (0+127)
  7944                           
  7945                           ;main.c: 596:                     puts_led("UOL");
  7946  0487  3082               	movlw	low (STR_25| (0+32768))
  7947  0488  0020               	movlb	0	; select bank0
  7948  0489  00AF               	movwf	puts_led@str
  7949  048A  30A8               	movlw	high (STR_25| (0+32768))
  7950  048B  00B0               	movwf	puts_led@str+1
  7951  048C  3191  21FC  3180   	fcall	_puts_led
  7952                           
  7953                           ;main.c: 597:                     DELAY_milliseconds(900);
  7954  048F  3084               	movlw	132
  7955  0490  00A3               	movwf	DELAY_milliseconds@milliseconds
  7956  0491  3003               	movlw	3
  7957  0492  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7958  0493  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7959                           
  7960                           ;main.c: 598:                     puts_led("   ");
  7961  0496  3062               	movlw	low (STR_16| (0+32768))
  7962  0497  00AF               	movwf	puts_led@str
  7963  0498  30A8               	movlw	high (STR_16| (0+32768))
  7964  0499  00B0               	movwf	puts_led@str+1
  7965  049A  3191  21FC  3180   	fcall	_puts_led
  7966                           
  7967                           ;main.c: 599:                     DELAY_milliseconds(200);
  7968  049D  30C8               	movlw	200
  7969  049E  00A3               	movwf	DELAY_milliseconds@milliseconds
  7970  049F  3000               	movlw	0
  7971  04A0  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  7972  04A1  31A7  276F  3180   	fcall	_DELAY_milliseconds
  7973                           
  7974                           ;main.c: 600:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  7975  04A4  3023               	movlw	low _blink_rate
  7976  04A5  0086               	movwf	6
  7977  04A6  3001               	movlw	high _blink_rate
  7978  04A7  0087               	movwf	7
  7979  04A8  3141               	addfsr 1,1
  7980  04A9  3001               	movlw	1
  7981  04AA  0022               	banksel	_blink_rate
  7982  04AB  00A3               	movwf	_blink_rate& (0+127)
  7983  04AC  3FC0               	movwi [0]fsr1
  7984  04AD  0021               	movlb	1	; select bank1
  7985  04AE  00E6               	movwf	??_main^(0+128)
  7986  04AF  3025               	movlw	low (_blink_rate+2)
  7987  04B0  0086               	movwf	6
  7988  04B1  3001               	movlw	high (_blink_rate+2)
  7989  04B2  0087               	movwf	7
  7990  04B3  0866               	movf	??_main^(0+128),w
  7991  04B4  0081               	movwf	1
  7992                           
  7993                           ;main.c: 601:                     button1 = 0;
  7994  04B5  0022               	banksel	_button1
  7995  04B6  01C9               	clrf	_button1& (0+127)
  7996  04B7                     l8333:	
  7997                           ;main.c: 602:                     while (button1 == 0)
  7998                           
  7999                           
  8000                           ;main.c: 602:                     while (button1 == 0)
  8001  04B7  0022               	banksel	_button1
  8002  04B8  0849               	movf	_button1& (0+127),w
  8003  04B9  1D03               	btfss	3,2
  8004  04BA  2CC7               	goto	l8335
  8005                           
  8006                           ;main.c: 603:                         {;main.c: 604:                         current_uol
      +                           = RE_pos;
  8007  04BB  0022               	banksel	_RE_pos
  8008  04BC  084A               	movf	_RE_pos& (0+127),w
  8009  04BD  0021               	movlb	1	; select bank1
  8010  04BE  00E6               	movwf	??_main^(0+128)
  8011  04BF  0866               	movf	??_main^(0+128),w
  8012  04C0  0022               	movlb	2	; select bank2
  8013  04C1  00BC               	movwf	_current_uol^(0+256)
  8014                           
  8015                           ;main.c: 605:                         show_uolstr(current_uol);
  8016  04C2  083C               	movf	_current_uol^(0+256),w
  8017  04C3  3194  244A  3180   	fcall	_show_uolstr
  8018  04C6  2CB7               	goto	l8333
  8019  04C7                     l8335:
  8020                           
  8021                           ;main.c: 607:                     button1 = 0;
  8022  04C7  01C9               	clrf	_button1& (0+127)
  8023                           
  8024                           ;main.c: 608:                     DATAEE_WriteByte(0xF016, current_uol);
  8025  04C8  3016               	movlw	22
  8026  04C9  0020               	movlb	0	; select bank0
  8027  04CA  00A9               	movwf	DATAEE_WriteByte@bAdd
  8028  04CB  30F0               	movlw	240
  8029  04CC  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  8030  04CD  0022               	movlb	2	; select bank2
  8031  04CE  083C               	movf	_current_uol^(0+256),w
  8032  04CF  0021               	movlb	1	; select bank1
  8033  04D0  00E6               	movwf	??_main^(0+128)
  8034  04D1  0866               	movf	??_main^(0+128),w
  8035  04D2  0020               	movlb	0	; select bank0
  8036  04D3  00AB               	movwf	DATAEE_WriteByte@bData
  8037  04D4  319B  2300  3180   	fcall	_DATAEE_WriteByte
  8038                           
  8039                           ;main.c: 609:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  8040  04D7  0022               	banksel	_blink_rate
  8041  04D8  01A3               	clrf	_blink_rate& (0+127)
  8042  04D9  01A4               	clrf	(_blink_rate& (0+127)+1)
  8043  04DA  01A5               	clrf	(_blink_rate& (0+127)+2)
  8044                           
  8045                           ;main.c: 610:                     if( current_uol != 0)
  8046  04DB  0022               	movlb	2	; select bank2
  8047  04DC  083C               	movf	_current_uol^(0+256),w
  8048  04DD  1903               	btfsc	3,2
  8049  04DE  2CEB               	goto	l1290
  8050                           
  8051                           ;main.c: 611:                        strcpy(ledbuff, "SET");
  8052  04DF  302C               	movlw	low _ledbuff
  8053  04E0  0020               	movlb	0	; select bank0
  8054  04E1  00AF               	movwf	strcpy@dest
  8055  04E2  3002               	movlw	high _ledbuff
  8056  04E3  00B0               	movwf	strcpy@dest+1
  8057  04E4  308E               	movlw	low (STR_27| (0+32768))
  8058  04E5  00B1               	movwf	strcpy@src
  8059  04E6  30A8               	movlw	high (STR_27| (0+32768))
  8060  04E7  00B2               	movwf	strcpy@src+1
  8061  04E8  3190  2000  3180   	fcall	_strcpy
  8062  04EB                     l1290:
  8063                           
  8064                           ;main.c: 612:                     puts_led(ledbuff);
  8065  04EB  302C               	movlw	low _ledbuff
  8066  04EC  0020               	movlb	0	; select bank0
  8067  04ED  00AF               	movwf	puts_led@str
  8068  04EE  3002               	movlw	high _ledbuff
  8069  04EF  00B0               	movwf	puts_led@str+1
  8070  04F0  3191  21FC  3180   	fcall	_puts_led
  8071                           
  8072                           ;main.c: 613:                     DELAY_milliseconds(800);
  8073  04F3  3020               	movlw	32
  8074  04F4  00A3               	movwf	DELAY_milliseconds@milliseconds
  8075  04F5  3003               	movlw	3
  8076  04F6  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  8077  04F7  31A7  276F  3180   	fcall	_DELAY_milliseconds
  8078                           
  8079                           ;main.c: 614:                     puts_led("   ");
  8080  04FA  3062               	movlw	low (STR_16| (0+32768))
  8081  04FB  00AF               	movwf	puts_led@str
  8082  04FC  30A8               	movlw	high (STR_16| (0+32768))
  8083  04FD  00B0               	movwf	puts_led@str+1
  8084  04FE  3191  21FC  3180   	fcall	_puts_led
  8085                           
  8086                           ;main.c: 615:                     DELAY_milliseconds(800);
  8087  0501  3020               	movlw	32
  8088  0502  00A3               	movwf	DELAY_milliseconds@milliseconds
  8089  0503  3003               	movlw	3
  8090  0504  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  8091  0505  31A7  276F  3180   	fcall	_DELAY_milliseconds
  8092                           
  8093                           ;main.c: 619:                     RE_pos = current_direction;
  8094  0508  087D               	movf	_current_direction,w
  8095  0509  0021               	movlb	1	; select bank1
  8096  050A  00E6               	movwf	??_main^(0+128)
  8097  050B  0866               	movf	??_main^(0+128),w
  8098  050C  0022               	banksel	_RE_pos
  8099  050D  00CA               	movwf	_RE_pos& (0+127)
  8100                           
  8101                           ;main.c: 620:                     puts_led("12S");
  8102  050E  3086               	movlw	low (STR_29| (0+32768))
  8103  050F  0020               	movlb	0	; select bank0
  8104  0510  00AF               	movwf	puts_led@str
  8105  0511  30A8               	movlw	high (STR_29| (0+32768))
  8106  0512  00B0               	movwf	puts_led@str+1
  8107  0513  3191  21FC  3180   	fcall	_puts_led
  8108                           
  8109                           ;main.c: 621:                     DELAY_milliseconds(900);
  8110  0516  3084               	movlw	132
  8111  0517  00A3               	movwf	DELAY_milliseconds@milliseconds
  8112  0518  3003               	movlw	3
  8113  0519  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  8114  051A  31A7  276F  3180   	fcall	_DELAY_milliseconds
  8115                           
  8116                           ;main.c: 622:                     puts_led("   ");
  8117  051D  3062               	movlw	low (STR_16| (0+32768))
  8118  051E  00AF               	movwf	puts_led@str
  8119  051F  30A8               	movlw	high (STR_16| (0+32768))
  8120  0520  00B0               	movwf	puts_led@str+1
  8121  0521  3191  21FC  3180   	fcall	_puts_led
  8122                           
  8123                           ;main.c: 623:                     DELAY_milliseconds(200);
  8124  0524  30C8               	movlw	200
  8125  0525  00A3               	movwf	DELAY_milliseconds@milliseconds
  8126  0526  3000               	movlw	0
  8127  0527  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  8128  0528  31A7  276F  3180   	fcall	_DELAY_milliseconds
  8129                           
  8130                           ;main.c: 624:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=1;
  8131  052B  3023               	movlw	low _blink_rate
  8132  052C  0086               	movwf	6
  8133  052D  3001               	movlw	high _blink_rate
  8134  052E  0087               	movwf	7
  8135  052F  3141               	addfsr 1,1
  8136  0530  3001               	movlw	1
  8137  0531  0022               	banksel	_blink_rate
  8138  0532  00A3               	movwf	_blink_rate& (0+127)
  8139  0533  3FC0               	movwi [0]fsr1
  8140  0534  0021               	movlb	1	; select bank1
  8141  0535  00E6               	movwf	??_main^(0+128)
  8142  0536  3025               	movlw	low (_blink_rate+2)
  8143  0537  0086               	movwf	6
  8144  0538  3001               	movlw	high (_blink_rate+2)
  8145  0539  0087               	movwf	7
  8146  053A  0866               	movf	??_main^(0+128),w
  8147  053B  0081               	movwf	1
  8148                           
  8149                           ;main.c: 625:                     button1 = 0;
  8150  053C  0022               	banksel	_button1
  8151  053D  01C9               	clrf	_button1& (0+127)
  8152  053E                     l8371:	
  8153                           ;main.c: 626:                     while (button1 == 0)
  8154                           
  8155                           
  8156                           ;main.c: 626:                     while (button1 == 0)
  8157  053E  0022               	banksel	_button1
  8158  053F  0849               	movf	_button1& (0+127),w
  8159  0540  1D03               	btfss	3,2
  8160  0541  2D7E               	goto	l8373
  8161                           
  8162                           ;main.c: 627:                         {;main.c: 628:                         current_dir
      +                          ection = RE_pos%2;
  8163  0542  0022               	banksel	_RE_pos
  8164  0543  084A               	movf	_RE_pos& (0+127),w
  8165  0544  3901               	andlw	1
  8166  0545  0021               	movlb	1	; select bank1
  8167  0546  00E6               	movwf	??_main^(0+128)
  8168  0547  0866               	movf	??_main^(0+128),w
  8169  0548  00FD               	movwf	_current_direction
  8170                           
  8171                           ;main.c: 629:                         strcpy(ledbuff, led_i2s_dir[current_direction]);
  8172  0549  302C               	movlw	low _ledbuff
  8173  054A  0020               	movlb	0	; select bank0
  8174  054B  00AF               	movwf	strcpy@dest
  8175  054C  3002               	movlw	high _ledbuff
  8176  054D  00B0               	movwf	strcpy@dest+1
  8177  054E  087D               	movf	_current_direction,w
  8178  054F  0021               	movlb	1	; select bank1
  8179  0550  00E6               	movwf	??_main^(0+128)
  8180  0551  01E7               	clrf	(??_main^(0+128)+1)
  8181  0552  0866               	movf	??_main^(0+128),w
  8182  0553  0020               	movlb	0	; select bank0
  8183  0554  00A9               	movwf	___wmul@multiplier
  8184  0555  0021               	movlb	1	; select bank1
  8185  0556  0867               	movf	(??_main+1)^(0+128),w
  8186  0557  0020               	movlb	0	; select bank0
  8187  0558  00AA               	movwf	___wmul@multiplier+1
  8188  0559  3007               	movlw	7
  8189  055A  00AB               	movwf	___wmul@multiplicand
  8190  055B  3000               	movlw	0
  8191  055C  00AC               	movwf	___wmul@multiplicand+1
  8192  055D  319A  226E  3180   	fcall	___wmul
  8193  0560  307E               	movlw	low (_led_i2s_dir| (0+32768))
  8194  0561  0021               	movlb	1	; select bank1
  8195  0562  00E8               	movwf	(??_main+2)^(0+128)
  8196  0563  30A0               	movlw	high (_led_i2s_dir| (0+32768))
  8197  0564  00E9               	movwf	((??_main+2)^(0+128)+1)
  8198  0565  0020               	movlb	0	; select bank0
  8199  0566  0829               	movf	?___wmul,w
  8200  0567  0021               	movlb	1	; select bank1
  8201  0568  0768               	addwf	(??_main+2)^(0+128),w
  8202  0569  0020               	movlb	0	; select bank0
  8203  056A  00B1               	movwf	strcpy@src
  8204  056B  082A               	movf	?___wmul+1,w
  8205  056C  0021               	movlb	1	; select bank1
  8206  056D  3D69               	addwfc	(??_main+3)^(0+128),w
  8207  056E  0020               	movlb	0	; select bank0
  8208  056F  00B2               	movwf	strcpy@src+1
  8209  0570  3190  2000  3180   	fcall	_strcpy
  8210                           
  8211                           ;main.c: 630:                         puts_led(ledbuff);
  8212  0573  302C               	movlw	low _ledbuff
  8213  0574  00AF               	movwf	puts_led@str
  8214  0575  3002               	movlw	high _ledbuff
  8215  0576  00B0               	movwf	puts_led@str+1
  8216  0577  3191  21FC  3180   	fcall	_puts_led
  8217                           
  8218                           ;main.c: 631:                         lcd_disp_param();
  8219  057A  318B  23ED  3180   	fcall	_lcd_disp_param
  8220  057D  2D3E               	goto	l8371
  8221  057E                     l8373:
  8222                           
  8223                           ;main.c: 633:                     button1 = 0;
  8224  057E  01C9               	clrf	_button1& (0+127)
  8225                           
  8226                           ;main.c: 634:                     DATAEE_WriteByte(0xF014, current_direction);
  8227  057F  3014               	movlw	20
  8228  0580  0020               	movlb	0	; select bank0
  8229  0581  00A9               	movwf	DATAEE_WriteByte@bAdd
  8230  0582  30F0               	movlw	240
  8231  0583  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  8232  0584  087D               	movf	_current_direction,w
  8233  0585  0021               	movlb	1	; select bank1
  8234  0586  00E6               	movwf	??_main^(0+128)
  8235  0587  0866               	movf	??_main^(0+128),w
  8236  0588  0020               	movlb	0	; select bank0
  8237  0589  00AB               	movwf	DATAEE_WriteByte@bData
  8238  058A  319B  2300  3180   	fcall	_DATAEE_WriteByte
  8239                           
  8240                           ;main.c: 635:                     blink_rate[2]= blink_rate[1]=blink_rate[0]=0;
  8241  058D  0022               	banksel	_blink_rate
  8242  058E  01A3               	clrf	_blink_rate& (0+127)
  8243  058F  01A4               	clrf	(_blink_rate& (0+127)+1)
  8244  0590  01A5               	clrf	(_blink_rate& (0+127)+2)
  8245                           
  8246                           ;main.c: 636:                     if( current_direction == 1)
  8247  0591  037D               	decf	_current_direction,w
  8248  0592  1D03               	btfss	3,2
  8249  0593  2D96               	goto	l8383
  8250                           
  8251                           ;main.c: 637:                               i2c_writeNBytes(0x40,&I2S_OUT, 2 );
  8252  0594  3067               	movlw	(low (_I2S_OUT| (0+256)))& (0+255)
  8253  0595  2D97               	goto	L2
  8254  0596                     l8383:
  8255  0596  3065               	movlw	(low (_I2S_IN| (0+256)))& (0+255)
  8256  0597                     L2:
  8257  0597  0021               	movlb	1	; select bank1
  8258  0598  00E6               	movwf	??_main^(0+128)
  8259  0599  0866               	movf	??_main^(0+128),w
  8260  059A  0020               	movlb	0	; select bank0
  8261  059B  00AC               	movwf	i2c_writeNBytes@data
  8262  059C  3002               	movlw	2
  8263  059D  00AD               	movwf	i2c_writeNBytes@len
  8264  059E  3000               	movlw	0
  8265  059F  00AE               	movwf	i2c_writeNBytes@len+1
  8266  05A0  3040               	movlw	64
  8267  05A1  319B  238A  3180   	fcall	_i2c_writeNBytes
  8268                           
  8269                           ;main.c: 639:                     strcpy(ledbuff, led_i2s_dir[current_direction]);
  8270  05A4  302C               	movlw	low _ledbuff
  8271  05A5  00AF               	movwf	strcpy@dest
  8272  05A6  3002               	movlw	high _ledbuff
  8273  05A7  00B0               	movwf	strcpy@dest+1
  8274  05A8  087D               	movf	_current_direction,w
  8275  05A9  0021               	movlb	1	; select bank1
  8276  05AA  00E6               	movwf	??_main^(0+128)
  8277  05AB  01E7               	clrf	(??_main^(0+128)+1)
  8278  05AC  0866               	movf	??_main^(0+128),w
  8279  05AD  0020               	movlb	0	; select bank0
  8280  05AE  00A9               	movwf	___wmul@multiplier
  8281  05AF  0021               	movlb	1	; select bank1
  8282  05B0  0867               	movf	(??_main+1)^(0+128),w
  8283  05B1  0020               	movlb	0	; select bank0
  8284  05B2  00AA               	movwf	___wmul@multiplier+1
  8285  05B3  3007               	movlw	7
  8286  05B4  00AB               	movwf	___wmul@multiplicand
  8287  05B5  3000               	movlw	0
  8288  05B6  00AC               	movwf	___wmul@multiplicand+1
  8289  05B7  319A  226E  3180   	fcall	___wmul
  8290  05BA  307E               	movlw	low (_led_i2s_dir| (0+32768))
  8291  05BB  0021               	movlb	1	; select bank1
  8292  05BC  00E8               	movwf	(??_main+2)^(0+128)
  8293  05BD  30A0               	movlw	high (_led_i2s_dir| (0+32768))
  8294  05BE  00E9               	movwf	((??_main+2)^(0+128)+1)
  8295  05BF  0020               	movlb	0	; select bank0
  8296  05C0  0829               	movf	?___wmul,w
  8297  05C1  0021               	movlb	1	; select bank1
  8298  05C2  0768               	addwf	(??_main+2)^(0+128),w
  8299  05C3  0020               	movlb	0	; select bank0
  8300  05C4  00B1               	movwf	strcpy@src
  8301  05C5  082A               	movf	?___wmul+1,w
  8302  05C6  0021               	movlb	1	; select bank1
  8303  05C7  3D69               	addwfc	(??_main+3)^(0+128),w
  8304  05C8  0020               	movlb	0	; select bank0
  8305  05C9  00B2               	movwf	strcpy@src+1
  8306  05CA  3190  2000  3180   	fcall	_strcpy
  8307                           
  8308                           ;main.c: 640:                     puts_led(ledbuff);
  8309  05CD  302C               	movlw	low _ledbuff
  8310  05CE  00AF               	movwf	puts_led@str
  8311  05CF  3002               	movlw	high _ledbuff
  8312  05D0  00B0               	movwf	puts_led@str+1
  8313  05D1  3191  21FC  3180   	fcall	_puts_led
  8314                           
  8315                           ;main.c: 641:                     DELAY_milliseconds(1500);
  8316  05D4  30DC               	movlw	220
  8317  05D5  00A3               	movwf	DELAY_milliseconds@milliseconds
  8318  05D6  3005               	movlw	5
  8319  05D7  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  8320  05D8  31A7  276F  3180   	fcall	_DELAY_milliseconds
  8321                           
  8322                           ;main.c: 644:                     puts_led("   ");
  8323  05DB  3062               	movlw	low (STR_16| (0+32768))
  8324  05DC  00AF               	movwf	puts_led@str
  8325  05DD  30A8               	movlw	high (STR_16| (0+32768))
  8326  05DE  00B0               	movwf	puts_led@str+1
  8327  05DF  3191  21FC  3180   	fcall	_puts_led
  8328                           
  8329                           ;main.c: 645:                     DELAY_milliseconds(800);
  8330  05E2  3020               	movlw	32
  8331  05E3  00A3               	movwf	DELAY_milliseconds@milliseconds
  8332  05E4  3003               	movlw	3
  8333  05E5  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  8334  05E6  31A7  276F  3180   	fcall	_DELAY_milliseconds
  8335                           
  8336                           ;main.c: 646:                     puts_led("FAd");
  8337  05E9  309A               	movlw	low (STR_32| (0+32768))
  8338  05EA  00AF               	movwf	puts_led@str
  8339  05EB  30A8               	movlw	high (STR_32| (0+32768))
  8340  05EC  00B0               	movwf	puts_led@str+1
  8341  05ED  3191  21FC  3180   	fcall	_puts_led
  8342                           
  8343                           ;main.c: 647:                     DELAY_milliseconds(500);
  8344  05F0  30F4               	movlw	244
  8345  05F1  00A3               	movwf	DELAY_milliseconds@milliseconds
  8346  05F2  3001               	movlw	1
  8347  05F3  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  8348  05F4  31A7  276F  3180   	fcall	_DELAY_milliseconds
  8349                           
  8350                           ;main.c: 650:                     RE_pos = current_volume;
  8351  05F7  086C               	movf	_current_volume,w
  8352  05F8  0021               	movlb	1	; select bank1
  8353  05F9  00E6               	movwf	??_main^(0+128)
  8354  05FA  0866               	movf	??_main^(0+128),w
  8355  05FB  0022               	banksel	_RE_pos
  8356  05FC  00CA               	movwf	_RE_pos& (0+127)
  8357                           
  8358                           ;main.c: 651:                     set_gainstr(current_volume);
  8359  05FD  0020               	movlb	0	; select bank0
  8360  05FE  086C               	movf	_current_volume,w
  8361  05FF  3193  23AB  3180   	fcall	_set_gainstr
  8362                           
  8363                           ;main.c: 652:                     lcd_disp_param();
  8364  0602  318B  23ED  3180   	fcall	_lcd_disp_param
  8365                           
  8366                           ;main.c: 653:                     button1 = 0;
  8367  0605  0022               	banksel	_button1
  8368  0606  01C9               	clrf	_button1& (0+127)
  8369  0607                     l8407:
  8370                           
  8371                           ;main.c: 656:          if (current_volume != RE_pos)
  8372  0607  0020               	movlb	0	; select bank0
  8373  0608  086C               	movf	_current_volume,w
  8374  0609  0022               	banksel	_RE_pos
  8375  060A  064A               	xorwf	_RE_pos& (0+127),w
  8376  060B  1903               	skipnz
  8377  060C  2E78               	goto	l8431
  8378                           
  8379                           ;main.c: 657:                     {;main.c: 658:                     current_volume = RE
      +                          _pos;
  8380  060D  084A               	movf	_RE_pos& (0+127),w
  8381  060E  0021               	movlb	1	; select bank1
  8382  060F  00E6               	movwf	??_main^(0+128)
  8383  0610  0866               	movf	??_main^(0+128),w
  8384  0611  0020               	movlb	0	; select bank0
  8385  0612  00EC               	movwf	_current_volume
  8386                           
  8387                           ;main.c: 659:                     set_gainstr(current_volume);
  8388  0613  086C               	movf	_current_volume,w
  8389  0614  3193  23AB  3180   	fcall	_set_gainstr
  8390                           
  8391                           ;main.c: 660:                     set_gains(current_volume, current_balance);
  8392  0617  086B               	movf	_current_balance,w
  8393  0618  0021               	movlb	1	; select bank1
  8394  0619  00E6               	movwf	??_main^(0+128)
  8395  061A  0866               	movf	??_main^(0+128),w
  8396  061B  0020               	movlb	0	; select bank0
  8397  061C  00BA               	movwf	set_gains@bal
  8398  061D  086C               	movf	_current_volume,w
  8399  061E  3191  218E  3180   	fcall	_set_gains
  8400                           
  8401                           ;main.c: 661:                     lcd_disp_param();
  8402  0621  318B  23ED  3180   	fcall	_lcd_disp_param
  8403                           
  8404                           ;main.c: 662:                    puts_led(ledstr);
  8405  0624  30CB               	movlw	low _ledstr
  8406  0625  00AF               	movwf	puts_led@str
  8407  0626  3002               	movlw	high _ledstr
  8408  0627  00B0               	movwf	puts_led@str+1
  8409  0628  3191  21FC  3180   	fcall	_puts_led
  8410  062B  2E78               	goto	l8431
  8411  062C                     l8419:
  8412                           
  8413                           ;main.c: 667:                     i2c_writeNBytes(0x6a,&TAS_FS44K, 2 );
  8414  062C  30BD               	movlw	(low (_TAS_FS44K| (0+256)))& (0+255)
  8415  062D  00E6               	movwf	??_main^(0+128)
  8416  062E  0866               	movf	??_main^(0+128),w
  8417  062F  0020               	movlb	0	; select bank0
  8418  0630  00AC               	movwf	i2c_writeNBytes@data
  8419  0631  3002               	movlw	2
  8420  0632  00AD               	movwf	i2c_writeNBytes@len
  8421  0633  3000               	movlw	0
  8422  0634  00AE               	movwf	i2c_writeNBytes@len+1
  8423  0635  306A               	movlw	106
  8424  0636  319B  238A  3180   	fcall	_i2c_writeNBytes
  8425                           
  8426                           ;main.c: 668:                    write_tas6422( 0x26, (current_hpf));
  8427  0639  086A               	movf	_current_hpf,w
  8428  063A  0021               	movlb	1	; select bank1
  8429  063B  00E6               	movwf	??_main^(0+128)
  8430  063C  0866               	movf	??_main^(0+128),w
  8431  063D  0020               	movlb	0	; select bank0
  8432  063E  00B0               	movwf	write_tas6422@val
  8433  063F  3026               	movlw	38
  8434  0640  3199  21D2  3180   	fcall	_write_tas6422
  8435                           
  8436                           ;main.c: 669:                    break;
  8437  0643  2E99               	goto	l8433
  8438  0644                     l8421:
  8439                           
  8440                           ;main.c: 671:                     i2c_writeNBytes(0x6a,&TAS_FS48K, 2 );
  8441  0644  30BB               	movlw	(low (_TAS_FS48K| (0+256)))& (0+255)
  8442  0645  00E6               	movwf	??_main^(0+128)
  8443  0646  0866               	movf	??_main^(0+128),w
  8444  0647  0020               	movlb	0	; select bank0
  8445  0648  00AC               	movwf	i2c_writeNBytes@data
  8446  0649  3002               	movlw	2
  8447  064A  00AD               	movwf	i2c_writeNBytes@len
  8448  064B  3000               	movlw	0
  8449  064C  00AE               	movwf	i2c_writeNBytes@len+1
  8450  064D  306A               	movlw	106
  8451  064E  319B  238A  3180   	fcall	_i2c_writeNBytes
  8452                           
  8453                           ;main.c: 672:                    write_tas6422( 0x26, (current_hpf));
  8454  0651  086A               	movf	_current_hpf,w
  8455  0652  0021               	movlb	1	; select bank1
  8456  0653  00E6               	movwf	??_main^(0+128)
  8457  0654  0866               	movf	??_main^(0+128),w
  8458  0655  0020               	movlb	0	; select bank0
  8459  0656  00B0               	movwf	write_tas6422@val
  8460  0657  3026               	movlw	38
  8461  0658  3199  21D2  3180   	fcall	_write_tas6422
  8462                           
  8463                           ;main.c: 673:                    break;
  8464  065B  2E99               	goto	l8433
  8465  065C                     l8423:
  8466                           
  8467                           ;main.c: 676:                     i2c_writeNBytes(0x6a,&TAS_FS96K, 2 );
  8468  065C  3055               	movlw	(low (_TAS_FS96K| (0+256)))& (0+255)
  8469  065D  00E6               	movwf	??_main^(0+128)
  8470  065E  0866               	movf	??_main^(0+128),w
  8471  065F  0020               	movlb	0	; select bank0
  8472  0660  00AC               	movwf	i2c_writeNBytes@data
  8473  0661  3002               	movlw	2
  8474  0662  00AD               	movwf	i2c_writeNBytes@len
  8475  0663  3000               	movlw	0
  8476  0664  00AE               	movwf	i2c_writeNBytes@len+1
  8477  0665  306A               	movlw	106
  8478  0666  319B  238A  3180   	fcall	_i2c_writeNBytes
  8479                           
  8480                           ;main.c: 677:                     if (current_hpf)
  8481  0669  086A               	movf	_current_hpf,w
  8482  066A  1903               	btfsc	3,2
  8483  066B  2E99               	goto	l8433
  8484                           
  8485                           ;main.c: 678:                    write_tas6422( 0x26, (current_hpf - 1));
  8486  066C  086A               	movf	_current_hpf,w
  8487  066D  3EFF               	addlw	255
  8488  066E  0021               	movlb	1	; select bank1
  8489  066F  00E6               	movwf	??_main^(0+128)
  8490  0670  0866               	movf	??_main^(0+128),w
  8491  0671  0020               	movlb	0	; select bank0
  8492  0672  00B0               	movwf	write_tas6422@val
  8493  0673  3026               	movlw	38
  8494  0674  3199  21D2  3180   	fcall	_write_tas6422
  8495  0677  2E99               	goto	l8433
  8496  0678                     l8431:
  8497  0678  3038               	movlw	56
  8498  0679  0021               	movlb	1	; select bank1
  8499  067A  00E6               	movwf	??_main^(0+128)
  8500  067B  0866               	movf	??_main^(0+128),w
  8501  067C  0020               	movlb	0	; select bank0
  8502  067D  00AC               	movwf	i2c_read1ByteRegister@reg
  8503  067E  3040               	movlw	64
  8504  067F  319D  259F  3180   	fcall	_i2c_read1ByteRegister
  8505  0682  390F               	andlw	15
  8506  0683  0021               	movlb	1	; select bank1
  8507  0684  00E7               	movwf	(??_main+1)^(0+128)
  8508  0685  01E8               	clrf	((??_main+1)^(0+128)+1)
  8509                           
  8510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8511                           ; Switch size 1, requested type "simple"
  8512                           ; Number of cases is 1, Range of values is 0 to 0
  8513                           ; switch strategies available:
  8514                           ; Name         Instructions Cycles
  8515                           ; simple_byte            4     3 (average)
  8516                           ; direct_byte            8     6 (fixed)
  8517                           ; jumptable            260     6 (fixed)
  8518                           ;	Chosen strategy is simple_byte
  8519  0686  0868               	movf	(??_main+2)^(0+128),w
  8520  0687  3A00               	xorlw	0	; case 0
  8521  0688  1903               	skipnz
  8522  0689  2E8B               	goto	l8677
  8523  068A  2E99               	goto	l8433
  8524  068B                     l8677:
  8525                           
  8526                           ; Switch size 1, requested type "simple"
  8527                           ; Number of cases is 4, Range of values is 8 to 12
  8528                           ; switch strategies available:
  8529                           ; Name         Instructions Cycles
  8530                           ; simple_byte           13     7 (average)
  8531                           ; direct_byte           19     9 (fixed)
  8532                           ; jumptable            263     9 (fixed)
  8533                           ;	Chosen strategy is simple_byte
  8534  068B  0867               	movf	(??_main+1)^(0+128),w
  8535  068C  3A08               	xorlw	8	; case 8
  8536  068D  1903               	skipnz
  8537  068E  2E2C               	goto	l8419
  8538  068F  3A01               	xorlw	1	; case 9
  8539  0690  1903               	skipnz
  8540  0691  2E44               	goto	l8421
  8541  0692  3A02               	xorlw	2	; case 11
  8542  0693  1903               	skipnz
  8543  0694  2E5C               	goto	l8423
  8544  0695  3A07               	xorlw	7	; case 12
  8545  0696  1903               	skipnz
  8546  0697  2E5C               	goto	l8423
  8547  0698  2E99               	goto	l8433
  8548  0699                     l8433:
  8549                           
  8550                           ;main.c: 681:          i2c_read1ByteRegister(0x40, 0x2d);
  8551  0699  302D               	movlw	45
  8552  069A  0021               	movlb	1	; select bank1
  8553  069B  00E6               	movwf	??_main^(0+128)
  8554  069C  0866               	movf	??_main^(0+128),w
  8555  069D  0020               	movlb	0	; select bank0
  8556  069E  00AC               	movwf	i2c_read1ByteRegister@reg
  8557  069F  3040               	movlw	64
  8558  06A0  319D  259F  3180   	fcall	_i2c_read1ByteRegister
  8559                           
  8560                           ;main.c: 682:          if (chk6422warning())
  8561  06A3  3192  2276  3180   	fcall	_chk6422warning
  8562  06A6  3A00               	xorlw	0
  8563  06A7  1903               	skipnz
  8564  06A8  2EC8               	goto	l8441
  8565                           
  8566                           ;main.c: 683:                 {;main.c: 684:                 lcd_disp_param();
  8567  06A9  318B  23ED  3180   	fcall	_lcd_disp_param
  8568                           
  8569                           ;main.c: 685:                 i2c_writeNBytes(0x6a, &TAS_CLEAR_FALT, 2 );
  8570  06AC  3051               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
  8571  06AD  0021               	movlb	1	; select bank1
  8572  06AE  00E6               	movwf	??_main^(0+128)
  8573  06AF  0866               	movf	??_main^(0+128),w
  8574  06B0  0020               	movlb	0	; select bank0
  8575  06B1  00AC               	movwf	i2c_writeNBytes@data
  8576  06B2  3002               	movlw	2
  8577  06B3  00AD               	movwf	i2c_writeNBytes@len
  8578  06B4  3000               	movlw	0
  8579  06B5  00AE               	movwf	i2c_writeNBytes@len+1
  8580  06B6  306A               	movlw	106
  8581  06B7  319B  238A  3180   	fcall	_i2c_writeNBytes
  8582                           
  8583                           ;main.c: 686:                 i2c_writeNBytes(0x6a, &TAS_NORMAL, 2 );
  8584  06BA  304F               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
  8585  06BB  0021               	movlb	1	; select bank1
  8586  06BC  00E6               	movwf	??_main^(0+128)
  8587  06BD  0866               	movf	??_main^(0+128),w
  8588  06BE  0020               	movlb	0	; select bank0
  8589  06BF  00AC               	movwf	i2c_writeNBytes@data
  8590  06C0  3002               	movlw	2
  8591  06C1  00AD               	movwf	i2c_writeNBytes@len
  8592  06C2  3000               	movlw	0
  8593  06C3  00AE               	movwf	i2c_writeNBytes@len+1
  8594  06C4  306A               	movlw	106
  8595  06C5  319B  238A  3180   	fcall	_i2c_writeNBytes
  8596  06C8                     l8441:
  8597                           
  8598                           ;main.c: 688:          if (current_volume != stored_volume)
  8599  06C8  0020               	movlb	0	; select bank0
  8600  06C9  086C               	movf	_current_volume,w
  8601  06CA  0022               	movlb	2	; select bank2
  8602  06CB  063F               	xorwf	_stored_volume^(0+256),w
  8603  06CC  1903               	skipnz
  8604  06CD  29E2               	goto	l8185
  8605                           
  8606                           ;main.c: 689:              if ( vol_move_cnt++ > 900)
  8607  06CE  0021               	movlb	1	; select bank1
  8608  06CF  086E               	movf	(main@vol_move_cnt+1)^(0+128),w
  8609  06D0  00E7               	movwf	(??_main^(0+128)+1)
  8610  06D1  086D               	movf	main@vol_move_cnt^(0+128),w
  8611  06D2  00E6               	movwf	??_main^(0+128)
  8612  06D3  0AED               	incf	main@vol_move_cnt^(0+128),f
  8613  06D4  1903               	skipnz
  8614  06D5  0AEE               	incf	(main@vol_move_cnt+1)^(0+128),f
  8615  06D6  3003               	movlw	3
  8616  06D7  0267               	subwf	(??_main+1)^(0+128),w
  8617  06D8  3085               	movlw	133
  8618  06D9  1903               	skipnz
  8619  06DA  0266               	subwf	??_main^(0+128),w
  8620  06DB  1C03               	skipc
  8621  06DC  29E2               	goto	l8185
  8622                           
  8623                           ;main.c: 690:                 {;main.c: 692:                  stored_volume = current_vo
      +                          lume;
  8624  06DD  0020               	movlb	0	; select bank0
  8625  06DE  086C               	movf	_current_volume,w
  8626  06DF  0021               	movlb	1	; select bank1
  8627  06E0  00E6               	movwf	??_main^(0+128)
  8628  06E1  0866               	movf	??_main^(0+128),w
  8629  06E2  0022               	movlb	2	; select bank2
  8630  06E3  00BF               	movwf	_stored_volume^(0+256)
  8631                           
  8632                           ;main.c: 693:                  DATAEE_WriteByte(0xF011, stored_volume);
  8633  06E4  3011               	movlw	17
  8634  06E5  0020               	movlb	0	; select bank0
  8635  06E6  00A9               	movwf	DATAEE_WriteByte@bAdd
  8636  06E7  30F0               	movlw	240
  8637  06E8  00AA               	movwf	DATAEE_WriteByte@bAdd+1
  8638  06E9  0022               	movlb	2	; select bank2
  8639  06EA  083F               	movf	_stored_volume^(0+256),w
  8640  06EB  0021               	movlb	1	; select bank1
  8641  06EC  00E6               	movwf	??_main^(0+128)
  8642  06ED  0866               	movf	??_main^(0+128),w
  8643  06EE  0020               	movlb	0	; select bank0
  8644  06EF  00AB               	movwf	DATAEE_WriteByte@bData
  8645  06F0  319B  2300  3180   	fcall	_DATAEE_WriteByte
  8646                           
  8647                           ;main.c: 694:                 vol_move_cnt = 0;
  8648  06F3  0021               	movlb	1	; select bank1
  8649  06F4  01ED               	clrf	main@vol_move_cnt^(0+128)
  8650  06F5  01EE               	clrf	(main@vol_move_cnt+1)^(0+128)
  8651  06F6  29E2               	goto	l8185
  8652  06F7                     __end_of_main:
  8653                           
  8654                           	psect	text1
  8655  19D2                     __ptext1:	
  8656 ;; *************** function _write_tas6422 *****************
  8657 ;; Defined at:
  8658 ;;		line 317 in file "main.c"
  8659 ;; Parameters:    Size  Location     Type
  8660 ;;  adr             1    wreg     unsigned char 
  8661 ;;  val             1   16[BANK0 ] unsigned char 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  adr             1   18[BANK0 ] unsigned char 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  1    wreg      void 
  8666 ;; Registers used:
  8667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 1F/4C00000
  8670 ;;		On exit  : 1F/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8673 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8675 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8676 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8677 ;;Total ram usage:        3 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:   11
  8680 ;; This function calls:
  8681 ;;		_i2c_writeNBytes
  8682 ;; This function is called by:
  8683 ;;		_main
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           
  8688                           ;psect for function _write_tas6422
  8689  19D2                     _write_tas6422:
  8690                           
  8691                           ;incstack = 0
  8692                           ; Regs used in _write_tas6422: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8693                           ;write_tas6422@adr stored from wreg
  8694  19D2  00B2               	movwf	write_tas6422@adr
  8695                           
  8696                           ;main.c: 317: void write_tas6422(unsigned char adr, unsigned char val);main.c: 318: {;ma
      +                          in.c: 319: static char buffer[2];;main.c: 320:  buffer[0] = adr;
  8697  19D3  0832               	movf	write_tas6422@adr,w
  8698  19D4  00B1               	movwf	??_write_tas6422
  8699  19D5  0831               	movf	??_write_tas6422,w
  8700  19D6  0022               	movlb	2	; select bank2
  8701  19D7  00CB               	movwf	write_tas6422@buffer^(0+256)
  8702                           
  8703                           ;main.c: 321:  buffer[1] = val;
  8704  19D8  0020               	movlb	0	; select bank0
  8705  19D9  0830               	movf	write_tas6422@val,w
  8706  19DA  00B1               	movwf	??_write_tas6422
  8707  19DB  0831               	movf	??_write_tas6422,w
  8708  19DC  0022               	movlb	2	; select bank2
  8709  19DD  00CC               	movwf	(write_tas6422@buffer^(0+256)+1)
  8710                           
  8711                           ;main.c: 322: i2c_writeNBytes(0x6a,&buffer, 2);
  8712  19DE  304B               	movlw	(low (write_tas6422@buffer| (0+256)))& (0+255)
  8713  19DF  0020               	movlb	0	; select bank0
  8714  19E0  00B1               	movwf	??_write_tas6422
  8715  19E1  0831               	movf	??_write_tas6422,w
  8716  19E2  00AC               	movwf	i2c_writeNBytes@data
  8717  19E3  3002               	movlw	2
  8718  19E4  00AD               	movwf	i2c_writeNBytes@len
  8719  19E5  3000               	movlw	0
  8720  19E6  00AE               	movwf	i2c_writeNBytes@len+1
  8721  19E7  306A               	movlw	106
  8722  19E8  319B  238A         	fcall	_i2c_writeNBytes
  8723  19EA  0008               	return
  8724  19EB                     __end_of_write_tas6422:
  8725                           
  8726                           	psect	text2
  8727  144A                     __ptext2:	
  8728 ;; *************** function _show_uolstr *****************
  8729 ;; Defined at:
  8730 ;;		line 170 in file "main.c"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;  gval            1    wreg     unsigned char 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  gval            1   59[BANK1 ] unsigned char 
  8735 ;; Return value:  Size  Location     Type
  8736 ;;                  1    wreg      void 
  8737 ;; Registers used:
  8738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8739 ;; Tracked objects:
  8740 ;;		On entry : 1F/4900002
  8741 ;;		On exit  : 1F/0
  8742 ;;		Unchanged: 0/0
  8743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8745 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8746 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8747 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8748 ;;Total ram usage:        2 bytes
  8749 ;; Hardware stack levels used:    1
  8750 ;; Hardware stack levels required when called:   15
  8751 ;; This function calls:
  8752 ;;		___awdiv
  8753 ;;		_puts_led
  8754 ;;		_sprintf
  8755 ;;		_strcat
  8756 ;;		_strcpy
  8757 ;; This function is called by:
  8758 ;;		_main
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           
  8763                           ;psect for function _show_uolstr
  8764  144A                     _show_uolstr:
  8765                           
  8766                           ;incstack = 0
  8767                           ; Regs used in _show_uolstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8768                           ;show_uolstr@gval stored from wreg
  8769  144A  0021               	movlb	1	; select bank1
  8770  144B  00DB               	movwf	show_uolstr@gval^(0+128)
  8771                           
  8772                           ;main.c: 170: void show_uolstr(unsigned char gval);main.c: 171: {;main.c: 172: if (gval 
      +                          <9)
  8773  144C  3009               	movlw	9
  8774  144D  025B               	subwf	show_uolstr@gval^(0+128),w
  8775  144E  1803               	skipnc
  8776  144F  2C5D               	goto	l7927
  8777                           
  8778                           ;main.c: 173:          strcpy( ledstr, "LAS");
  8779  1450  30CB               	movlw	low _ledstr
  8780  1451  0020               	movlb	0	; select bank0
  8781  1452  00AF               	movwf	strcpy@dest
  8782  1453  3002               	movlw	high _ledstr
  8783  1454  00B0               	movwf	strcpy@dest+1
  8784  1455  308A               	movlw	low (STR_7| (0+32768))
  8785  1456  00B1               	movwf	strcpy@src
  8786  1457  30A8               	movlw	high (STR_7| (0+32768))
  8787  1458  00B2               	movwf	strcpy@src+1
  8788  1459  3190  2000  3194   	fcall	_strcpy
  8789  145C  2CE1               	goto	l1074
  8790  145D                     l7927:
  8791                           
  8792                           ;main.c: 175:          {;main.c: 176:          if (gval > 0xba)
  8793  145D  30BB               	movlw	187
  8794  145E  025B               	subwf	show_uolstr@gval^(0+128),w
  8795  145F  1C03               	skipc
  8796  1460  2CA9               	goto	l7943
  8797                           
  8798                           ;main.c: 177:                   {;main.c: 178:                    gain = (signed char) (
      +                          ((signed int)gval - (signed int)0x00cf)/2);
  8799  1461  3002               	movlw	2
  8800  1462  0020               	movlb	0	; select bank0
  8801  1463  00A3               	movwf	___awdiv@divisor
  8802  1464  3000               	movlw	0
  8803  1465  00A4               	movwf	___awdiv@divisor+1
  8804  1466  0021               	movlb	1	; select bank1
  8805  1467  085B               	movf	show_uolstr@gval^(0+128),w
  8806  1468  3E31               	addlw	49
  8807  1469  0020               	movlb	0	; select bank0
  8808  146A  00A5               	movwf	___awdiv@dividend
  8809  146B  30FF               	movlw	255
  8810  146C  1803               	skipnc
  8811  146D  3000               	movlw	0
  8812  146E  00A6               	movwf	___awdiv@dividend+1
  8813  146F  319F  27AF  3194   	fcall	___awdiv
  8814  1472  0823               	movf	?___awdiv,w
  8815  1473  0021               	movlb	1	; select bank1
  8816  1474  00DA               	movwf	??_show_uolstr^(0+128)
  8817  1475  085A               	movf	??_show_uolstr^(0+128),w
  8818  1476  0022               	movlb	2	; select bank2
  8819  1477  00C1               	movwf	_gain^(0+256)
  8820                           
  8821                           ;main.c: 179:                    sprintf(ledstr, "%2d", (signed char)gain);
  8822  1478  30CB               	movlw	low _ledstr
  8823  1479  0021               	movlb	1	; select bank1
  8824  147A  00C0               	movwf	sprintf@s^(0+128)
  8825  147B  3002               	movlw	high _ledstr
  8826  147C  00C1               	movwf	(sprintf@s^(0+128)+1)
  8827  147D  3092               	movlw	low (STR_2| (0+32768))
  8828  147E  00C2               	movwf	sprintf@fmt^(0+128)
  8829  147F  30A8               	movlw	high (STR_2| (0+32768))
  8830  1480  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  8831  1481  0022               	movlb	2	; select bank2
  8832  1482  0841               	movf	_gain^(0+256),w
  8833  1483  0021               	movlb	1	; select bank1
  8834  1484  00C4               	movwf	(?_sprintf^(0+128)+4)
  8835  1485  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  8836  1486  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  8837  1487  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  8838  1488  319B  2342  3194   	fcall	_sprintf
  8839                           
  8840                           ;main.c: 180:                    if (gval == 0xce)
  8841  148B  30CE               	movlw	206
  8842  148C  065B               	xorwf	show_uolstr@gval^(0+128),w
  8843  148D  1D03               	btfss	3,2
  8844  148E  2C94               	goto	l7937
  8845                           
  8846                           ;main.c: 181:                            ledstr[0] = 0x2d;
  8847  148F  302D               	movlw	45
  8848  1490  00DA               	movwf	??_show_uolstr^(0+128)
  8849  1491  085A               	movf	??_show_uolstr^(0+128),w
  8850  1492  0025               	banksel	_ledstr
  8851  1493  00CB               	movwf	_ledstr& (0+127)
  8852  1494                     l7937:
  8853                           
  8854                           ;main.c: 182:                    if(gval & 0x01)
  8855  1494  0021               	movlb	1	; select bank1
  8856  1495  1C5B               	btfss	show_uolstr@gval^(0+128),0
  8857  1496  2CA0               	goto	l7941
  8858                           
  8859                           ;main.c: 183:                            strcat(ledstr, ".0 ");
  8860  1497  30CB               	movlw	low _ledstr
  8861  1498  0020               	movlb	0	; select bank0
  8862  1499  00BB               	movwf	strcat@dest
  8863  149A  3002               	movlw	high _ledstr
  8864  149B  00BC               	movwf	strcat@dest+1
  8865  149C  3066               	movlw	low (STR_3| (0+32768))
  8866  149D  00BD               	movwf	strcat@src
  8867  149E  30A8               	movlw	high (STR_3| (0+32768))
  8868  149F  2CDD               	goto	L3
  8869  14A0                     l7941:
  8870  14A0  30CB               	movlw	low _ledstr
  8871  14A1  0020               	movlb	0	; select bank0
  8872  14A2  00BB               	movwf	strcat@dest
  8873  14A3  3002               	movlw	high _ledstr
  8874  14A4  00BC               	movwf	strcat@dest+1
  8875  14A5  306A               	movlw	low (STR_4| (0+32768))
  8876  14A6  00BD               	movwf	strcat@src
  8877  14A7  30A8               	movlw	high (STR_4| (0+32768))
  8878  14A8  2CDD               	goto	L3
  8879  14A9                     l7943:
  8880                           
  8881                           ;main.c: 187:                   {;main.c: 188:                   gain =(signed char)((((
      +                          int)gval - (int)0xcf))/2);
  8882  14A9  3002               	movlw	2
  8883  14AA  0020               	movlb	0	; select bank0
  8884  14AB  00A3               	movwf	___awdiv@divisor
  8885  14AC  3000               	movlw	0
  8886  14AD  00A4               	movwf	___awdiv@divisor+1
  8887  14AE  0021               	movlb	1	; select bank1
  8888  14AF  085B               	movf	show_uolstr@gval^(0+128),w
  8889  14B0  3E31               	addlw	49
  8890  14B1  0020               	movlb	0	; select bank0
  8891  14B2  00A5               	movwf	___awdiv@dividend
  8892  14B3  30FF               	movlw	255
  8893  14B4  1803               	skipnc
  8894  14B5  3000               	movlw	0
  8895  14B6  00A6               	movwf	___awdiv@dividend+1
  8896  14B7  319F  27AF  3194   	fcall	___awdiv
  8897  14BA  0823               	movf	?___awdiv,w
  8898  14BB  0021               	movlb	1	; select bank1
  8899  14BC  00DA               	movwf	??_show_uolstr^(0+128)
  8900  14BD  085A               	movf	??_show_uolstr^(0+128),w
  8901  14BE  0022               	movlb	2	; select bank2
  8902  14BF  00C1               	movwf	_gain^(0+256)
  8903                           
  8904                           ;main.c: 189:                   sprintf(ledstr, "%3d",(signed char)gain);
  8905  14C0  30CB               	movlw	low _ledstr
  8906  14C1  0021               	movlb	1	; select bank1
  8907  14C2  00C0               	movwf	sprintf@s^(0+128)
  8908  14C3  3002               	movlw	high _ledstr
  8909  14C4  00C1               	movwf	(sprintf@s^(0+128)+1)
  8910  14C5  3096               	movlw	low (STR_5| (0+32768))
  8911  14C6  00C2               	movwf	sprintf@fmt^(0+128)
  8912  14C7  30A8               	movlw	high (STR_5| (0+32768))
  8913  14C8  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  8914  14C9  0022               	movlb	2	; select bank2
  8915  14CA  0841               	movf	_gain^(0+256),w
  8916  14CB  0021               	movlb	1	; select bank1
  8917  14CC  00C4               	movwf	(?_sprintf^(0+128)+4)
  8918  14CD  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  8919  14CE  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  8920  14CF  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  8921  14D0  319B  2342  3194   	fcall	_sprintf
  8922                           
  8923                           ;main.c: 190:                   if((gval & 0x01) != 0x01)
  8924  14D3  185B               	btfsc	show_uolstr@gval^(0+128),0
  8925  14D4  2CE1               	goto	l1074
  8926                           
  8927                           ;main.c: 191:                            strcat (ledstr, ".");
  8928  14D5  30CB               	movlw	low _ledstr
  8929  14D6  0020               	movlb	0	; select bank0
  8930  14D7  00BB               	movwf	strcat@dest
  8931  14D8  3002               	movlw	high _ledstr
  8932  14D9  00BC               	movwf	strcat@dest+1
  8933  14DA  309E               	movlw	low (STR_6| (0+32768))
  8934  14DB  00BD               	movwf	strcat@src
  8935  14DC  30A8               	movlw	high (STR_6| (0+32768))
  8936  14DD                     L3:
  8937  14DD  00BE               	movwf	strcat@src+1
  8938  14DE  31A7  2783  3194   	fcall	_strcat
  8939  14E1                     l1074:	
  8940                           ;main.c: 193:          }
  8941                           
  8942                           
  8943                           ;main.c: 194:  puts_led(ledstr);
  8944  14E1  30CB               	movlw	low _ledstr
  8945  14E2  0020               	movlb	0	; select bank0
  8946  14E3  00AF               	movwf	puts_led@str
  8947  14E4  3002               	movlw	high _ledstr
  8948  14E5  00B0               	movwf	puts_led@str+1
  8949  14E6  3191  21FC         	fcall	_puts_led
  8950  14E8  0008               	return
  8951  14E9                     __end_of_show_uolstr:
  8952                           
  8953                           	psect	text3
  8954  0836                     __ptext3:	
  8955 ;; *************** function _set_source *****************
  8956 ;; Defined at:
  8957 ;;		line 378 in file "main.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  sourcenumber    1    wreg     unsigned char 
  8960 ;; Auto vars:     Size  Location     Type
  8961 ;;  sourcenumber    1   19[BANK0 ] unsigned char 
  8962 ;; Return value:  Size  Location     Type
  8963 ;;                  1    wreg      void 
  8964 ;; Registers used:
  8965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8966 ;; Tracked objects:
  8967 ;;		On entry : 1F/4A00002
  8968 ;;		On exit  : 1F/0
  8969 ;;		Unchanged: 0/0
  8970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8973 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8974 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8975 ;;Total ram usage:        4 bytes
  8976 ;; Hardware stack levels used:    1
  8977 ;; Hardware stack levels required when called:   11
  8978 ;; This function calls:
  8979 ;;		_DELAY_milliseconds
  8980 ;;		___lbmod
  8981 ;;		_i2c_writeNBytes
  8982 ;; This function is called by:
  8983 ;;		_main
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           
  8988                           ;psect for function _set_source
  8989  0836                     _set_source:
  8990                           
  8991                           ;incstack = 0
  8992                           ; Regs used in _set_source: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8993                           ;set_source@sourcenumber stored from wreg
  8994  0836  0020               	movlb	0	; select bank0
  8995  0837  00B3               	movwf	set_source@sourcenumber
  8996                           
  8997                           ;main.c: 378: void set_source(unsigned char sourcenumber);main.c: 379: { switch(sourcenu
      +                          mber % 5)
  8998  0838  290A               	goto	l8037
  8999  0839                     l8025:
  9000                           
  9001                           ;main.c: 382:                                 i2c_writeNBytes(0x40,&SRC_DIR, 2 );
  9002  0839  3063               	movlw	(low (_SRC_DIR| (0+256)))& (0+255)
  9003  083A  00B0               	movwf	??_set_source
  9004  083B  0830               	movf	??_set_source,w
  9005  083C  00AC               	movwf	i2c_writeNBytes@data
  9006  083D  3002               	movlw	2
  9007  083E  00AD               	movwf	i2c_writeNBytes@len
  9008  083F  3000               	movlw	0
  9009  0840  00AE               	movwf	i2c_writeNBytes@len+1
  9010  0841  3040               	movlw	64
  9011  0842  319B  238A  3188   	fcall	_i2c_writeNBytes
  9012                           
  9013                           ;main.c: 383:                                 i2c_writeNBytes(0x40,&DIR_COAX, 2 );
  9014  0845  30DF               	movlw	(low (_DIR_COAX| (0+256)))& (0+255)
  9015  0846  00B0               	movwf	??_set_source
  9016  0847  0830               	movf	??_set_source,w
  9017  0848  00AC               	movwf	i2c_writeNBytes@data
  9018  0849  3002               	movlw	2
  9019  084A  00AD               	movwf	i2c_writeNBytes@len
  9020  084B  3000               	movlw	0
  9021  084C  00AE               	movwf	i2c_writeNBytes@len+1
  9022  084D  3040               	movlw	64
  9023  084E  319B  238A  3188   	fcall	_i2c_writeNBytes
  9024                           
  9025                           ;main.c: 384:                                 i2c_writeNBytes(0x40,&DIT_DIR, 2 );
  9026  0851  305B               	movlw	(low (_DIT_DIR| (0+256)))& (0+255)
  9027  0852  00B0               	movwf	??_set_source
  9028  0853  0830               	movf	??_set_source,w
  9029  0854  00AC               	movwf	i2c_writeNBytes@data
  9030  0855  3002               	movlw	2
  9031  0856  00AD               	movwf	i2c_writeNBytes@len
  9032  0857  3000               	movlw	0
  9033  0858  00AE               	movwf	i2c_writeNBytes@len+1
  9034  0859  3040               	movlw	64
  9035  085A  319B  238A  3188   	fcall	_i2c_writeNBytes
  9036                           
  9037                           ;main.c: 385:                                 i2c_writeNBytes(0x40,&AUXSRC_DIR, 2 );
  9038  085D  305F               	movlw	(low (_AUXSRC_DIR| (0+256)))& (0+255)
  9039  085E  00B0               	movwf	??_set_source
  9040  085F  0830               	movf	??_set_source,w
  9041  0860  00AC               	movwf	i2c_writeNBytes@data
  9042  0861  3002               	movlw	2
  9043  0862  00AD               	movwf	i2c_writeNBytes@len
  9044  0863  3000               	movlw	0
  9045  0864  00AE               	movwf	i2c_writeNBytes@len+1
  9046  0865  3040               	movlw	64
  9047  0866  319B  238A  3188   	fcall	_i2c_writeNBytes
  9048                           
  9049                           ;main.c: 386:                                  break;
  9050  0869  292A               	goto	l8039
  9051  086A                     l8027:
  9052                           
  9053                           ;main.c: 388:                                 i2c_writeNBytes(0x40,&SRC_DIR, 2 );
  9054  086A  3063               	movlw	(low (_SRC_DIR| (0+256)))& (0+255)
  9055  086B  00B0               	movwf	??_set_source
  9056  086C  0830               	movf	??_set_source,w
  9057  086D  00AC               	movwf	i2c_writeNBytes@data
  9058  086E  3002               	movlw	2
  9059  086F  00AD               	movwf	i2c_writeNBytes@len
  9060  0870  3000               	movlw	0
  9061  0871  00AE               	movwf	i2c_writeNBytes@len+1
  9062  0872  3040               	movlw	64
  9063  0873  319B  238A  3188   	fcall	_i2c_writeNBytes
  9064                           
  9065                           ;main.c: 389:                                 i2c_writeNBytes(0x40,&DIR_OPT, 2 );
  9066  0876  305D               	movlw	(low (_DIR_OPT| (0+256)))& (0+255)
  9067  0877  00B0               	movwf	??_set_source
  9068  0878  0830               	movf	??_set_source,w
  9069  0879  00AC               	movwf	i2c_writeNBytes@data
  9070  087A  3002               	movlw	2
  9071  087B  00AD               	movwf	i2c_writeNBytes@len
  9072  087C  3000               	movlw	0
  9073  087D  00AE               	movwf	i2c_writeNBytes@len+1
  9074  087E  3040               	movlw	64
  9075  087F  319B  238A  3188   	fcall	_i2c_writeNBytes
  9076                           
  9077                           ;main.c: 390:                                 i2c_writeNBytes(0x40,&DIT_DIR, 2 );
  9078  0882  305B               	movlw	(low (_DIT_DIR| (0+256)))& (0+255)
  9079  0883  00B0               	movwf	??_set_source
  9080  0884  0830               	movf	??_set_source,w
  9081  0885  00AC               	movwf	i2c_writeNBytes@data
  9082  0886  3002               	movlw	2
  9083  0887  00AD               	movwf	i2c_writeNBytes@len
  9084  0888  3000               	movlw	0
  9085  0889  00AE               	movwf	i2c_writeNBytes@len+1
  9086  088A  3040               	movlw	64
  9087  088B  319B  238A  3188   	fcall	_i2c_writeNBytes
  9088                           
  9089                           ;main.c: 391:                                 i2c_writeNBytes(0x40,&AUXSRC_DIR, 2 );
  9090  088E  305F               	movlw	(low (_AUXSRC_DIR| (0+256)))& (0+255)
  9091  088F  00B0               	movwf	??_set_source
  9092  0890  0830               	movf	??_set_source,w
  9093  0891  00AC               	movwf	i2c_writeNBytes@data
  9094  0892  3002               	movlw	2
  9095  0893  00AD               	movwf	i2c_writeNBytes@len
  9096  0894  3000               	movlw	0
  9097  0895  00AE               	movwf	i2c_writeNBytes@len+1
  9098  0896  3040               	movlw	64
  9099  0897  319B  238A  3188   	fcall	_i2c_writeNBytes
  9100                           
  9101                           ;main.c: 392:                                 break;
  9102  089A  292A               	goto	l8039
  9103  089B                     l8029:
  9104                           
  9105                           ;main.c: 394:                                  i2c_writeNBytes(0x40,&SRC_ADC, 2 );
  9106  089B  3061               	movlw	(low (_SRC_ADC| (0+256)))& (0+255)
  9107  089C  00B0               	movwf	??_set_source
  9108  089D  0830               	movf	??_set_source,w
  9109  089E  00AC               	movwf	i2c_writeNBytes@data
  9110  089F  3002               	movlw	2
  9111  08A0  00AD               	movwf	i2c_writeNBytes@len
  9112  08A1  3000               	movlw	0
  9113  08A2  00AE               	movwf	i2c_writeNBytes@len+1
  9114  08A3  3040               	movlw	64
  9115  08A4  319B  238A  3188   	fcall	_i2c_writeNBytes
  9116                           
  9117                           ;main.c: 395:                                  i2c_writeNBytes(0x40,&DIT_ADC, 2 );
  9118  08A7  3059               	movlw	(low (_DIT_ADC| (0+256)))& (0+255)
  9119  08A8  00B0               	movwf	??_set_source
  9120  08A9  0830               	movf	??_set_source,w
  9121  08AA  00AC               	movwf	i2c_writeNBytes@data
  9122  08AB  3002               	movlw	2
  9123  08AC  00AD               	movwf	i2c_writeNBytes@len
  9124  08AD  3000               	movlw	0
  9125  08AE  00AE               	movwf	i2c_writeNBytes@len+1
  9126  08AF  3040               	movlw	64
  9127  08B0  319B  238A  3188   	fcall	_i2c_writeNBytes
  9128                           
  9129                           ;main.c: 396:                                 i2c_writeNBytes(0x40,&AUXSRC_ADC, 2 );
  9130  08B3  30E3               	movlw	(low (_AUXSRC_ADC| (0+256)))& (0+255)
  9131  08B4  00B0               	movwf	??_set_source
  9132  08B5  0830               	movf	??_set_source,w
  9133  08B6  00AC               	movwf	i2c_writeNBytes@data
  9134  08B7  3002               	movlw	2
  9135  08B8  00AD               	movwf	i2c_writeNBytes@len
  9136  08B9  3000               	movlw	0
  9137  08BA  00AE               	movwf	i2c_writeNBytes@len+1
  9138  08BB  3040               	movlw	64
  9139  08BC  319B  238A  3188   	fcall	_i2c_writeNBytes
  9140                           
  9141                           ;main.c: 397:                                  break;
  9142  08BF  292A               	goto	l8039
  9143  08C0                     l8031:
  9144                           
  9145                           ;main.c: 399:                                  i2c_writeNBytes(0x40,&SRC_LVDS, 2 );
  9146  08C0  30E9               	movlw	(low (_SRC_LVDS| (0+256)))& (0+255)
  9147  08C1  00B0               	movwf	??_set_source
  9148  08C2  0830               	movf	??_set_source,w
  9149  08C3  00AC               	movwf	i2c_writeNBytes@data
  9150  08C4  3002               	movlw	2
  9151  08C5  00AD               	movwf	i2c_writeNBytes@len
  9152  08C6  3000               	movlw	0
  9153  08C7  00AE               	movwf	i2c_writeNBytes@len+1
  9154  08C8  3040               	movlw	64
  9155  08C9  319B  238A  3188   	fcall	_i2c_writeNBytes
  9156                           
  9157                           ;main.c: 400:                                  i2c_writeNBytes(0x40,&DIT_LVDS, 2 );
  9158  08CC  30D7               	movlw	(low (_DIT_LVDS| (0+256)))& (0+255)
  9159  08CD  00B0               	movwf	??_set_source
  9160  08CE  0830               	movf	??_set_source,w
  9161  08CF  00AC               	movwf	i2c_writeNBytes@data
  9162  08D0  3002               	movlw	2
  9163  08D1  00AD               	movwf	i2c_writeNBytes@len
  9164  08D2  3000               	movlw	0
  9165  08D3  00AE               	movwf	i2c_writeNBytes@len+1
  9166  08D4  3040               	movlw	64
  9167  08D5  319B  238A  3188   	fcall	_i2c_writeNBytes
  9168                           
  9169                           ;main.c: 401:                                  i2c_writeNBytes(0x40,&AUXSRC_LVDS, 2 );
  9170  08D8  30E1               	movlw	(low (_AUXSRC_LVDS| (0+256)))& (0+255)
  9171  08D9  00B0               	movwf	??_set_source
  9172  08DA  0830               	movf	??_set_source,w
  9173  08DB  00AC               	movwf	i2c_writeNBytes@data
  9174  08DC  3002               	movlw	2
  9175  08DD  00AD               	movwf	i2c_writeNBytes@len
  9176  08DE  3000               	movlw	0
  9177  08DF  00AE               	movwf	i2c_writeNBytes@len+1
  9178  08E0  3040               	movlw	64
  9179  08E1  319B  238A  3188   	fcall	_i2c_writeNBytes
  9180                           
  9181                           ;main.c: 402:                                 break;
  9182  08E4  292A               	goto	l8039
  9183  08E5                     l8033:
  9184                           
  9185                           ;main.c: 404:                                  i2c_writeNBytes(0x40,&SRC_I2S, 2 );
  9186  08E5  30E7               	movlw	(low (_SRC_I2S| (0+256)))& (0+255)
  9187  08E6  00B0               	movwf	??_set_source
  9188  08E7  0830               	movf	??_set_source,w
  9189  08E8  00AC               	movwf	i2c_writeNBytes@data
  9190  08E9  3002               	movlw	2
  9191  08EA  00AD               	movwf	i2c_writeNBytes@len
  9192  08EB  3000               	movlw	0
  9193  08EC  00AE               	movwf	i2c_writeNBytes@len+1
  9194  08ED  3040               	movlw	64
  9195  08EE  319B  238A  3188   	fcall	_i2c_writeNBytes
  9196                           
  9197                           ;main.c: 405:                                  i2c_writeNBytes(0x40,&DIT_I2S, 2 );
  9198  08F1  30D5               	movlw	(low (_DIT_I2S| (0+256)))& (0+255)
  9199  08F2  00B0               	movwf	??_set_source
  9200  08F3  0830               	movf	??_set_source,w
  9201  08F4  00AC               	movwf	i2c_writeNBytes@data
  9202  08F5  3002               	movlw	2
  9203  08F6  00AD               	movwf	i2c_writeNBytes@len
  9204  08F7  3000               	movlw	0
  9205  08F8  00AE               	movwf	i2c_writeNBytes@len+1
  9206  08F9  3040               	movlw	64
  9207  08FA  319B  238A  3188   	fcall	_i2c_writeNBytes
  9208                           
  9209                           ;main.c: 406:                                 i2c_writeNBytes(0x40,&AUXSRC_AUTO, 2 );
  9210  08FD  30E5               	movlw	(low (_AUXSRC_AUTO| (0+256)))& (0+255)
  9211  08FE  00B0               	movwf	??_set_source
  9212  08FF  0830               	movf	??_set_source,w
  9213  0900  00AC               	movwf	i2c_writeNBytes@data
  9214  0901  3002               	movlw	2
  9215  0902  00AD               	movwf	i2c_writeNBytes@len
  9216  0903  3000               	movlw	0
  9217  0904  00AE               	movwf	i2c_writeNBytes@len+1
  9218  0905  3040               	movlw	64
  9219  0906  319B  238A  3188   	fcall	_i2c_writeNBytes
  9220                           
  9221                           ;main.c: 407:                                  break;
  9222  0909  292A               	goto	l8039
  9223  090A                     l8037:
  9224  090A  3005               	movlw	5
  9225  090B  00B0               	movwf	??_set_source
  9226  090C  0830               	movf	??_set_source,w
  9227  090D  00A3               	movwf	___lbmod@divisor
  9228  090E  0833               	movf	set_source@sourcenumber,w
  9229  090F  319A  22E0  3188   	fcall	___lbmod
  9230  0912  00B1               	movwf	??_set_source+1
  9231  0913  01B2               	clrf	??_set_source+2
  9232                           
  9233                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9234                           ; Switch size 1, requested type "simple"
  9235                           ; Number of cases is 1, Range of values is 0 to 0
  9236                           ; switch strategies available:
  9237                           ; Name         Instructions Cycles
  9238                           ; simple_byte            4     3 (average)
  9239                           ; direct_byte            8     6 (fixed)
  9240                           ; jumptable            260     6 (fixed)
  9241                           ;	Chosen strategy is simple_byte
  9242  0914  0832               	movf	??_set_source+2,w
  9243  0915  3A00               	xorlw	0	; case 0
  9244  0916  1903               	skipnz
  9245  0917  2919               	goto	l8679
  9246  0918  292A               	goto	l8039
  9247  0919                     l8679:
  9248                           
  9249                           ; Switch size 1, requested type "simple"
  9250                           ; Number of cases is 5, Range of values is 0 to 4
  9251                           ; switch strategies available:
  9252                           ; Name         Instructions Cycles
  9253                           ; direct_byte           16     6 (fixed)
  9254                           ; simple_byte           16     9 (average)
  9255                           ; jumptable            260     6 (fixed)
  9256                           ;	Chosen strategy is simple_byte
  9257  0919  0831               	movf	??_set_source+1,w
  9258  091A  3A00               	xorlw	0	; case 0
  9259  091B  1903               	skipnz
  9260  091C  2839               	goto	l8025
  9261  091D  3A01               	xorlw	1	; case 1
  9262  091E  1903               	skipnz
  9263  091F  286A               	goto	l8027
  9264  0920  3A03               	xorlw	3	; case 2
  9265  0921  1903               	skipnz
  9266  0922  289B               	goto	l8029
  9267  0923  3A01               	xorlw	1	; case 3
  9268  0924  1903               	skipnz
  9269  0925  28C0               	goto	l8031
  9270  0926  3A07               	xorlw	7	; case 4
  9271  0927  1903               	skipnz
  9272  0928  28E5               	goto	l8033
  9273  0929  292A               	goto	l8039
  9274  092A                     l8039:
  9275                           
  9276                           ;main.c: 409: DELAY_milliseconds(5);
  9277  092A  3005               	movlw	5
  9278  092B  00A3               	movwf	DELAY_milliseconds@milliseconds
  9279  092C  3000               	movlw	0
  9280  092D  00A4               	movwf	DELAY_milliseconds@milliseconds+1
  9281  092E  31A7  276F  3188   	fcall	_DELAY_milliseconds
  9282                           
  9283                           ;main.c: 410:  i2c_writeNBytes(0x6a, &TAS_CLEAR_FALT, 2 );
  9284  0931  3051               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
  9285  0932  00B0               	movwf	??_set_source
  9286  0933  0830               	movf	??_set_source,w
  9287  0934  00AC               	movwf	i2c_writeNBytes@data
  9288  0935  3002               	movlw	2
  9289  0936  00AD               	movwf	i2c_writeNBytes@len
  9290  0937  3000               	movlw	0
  9291  0938  00AE               	movwf	i2c_writeNBytes@len+1
  9292  0939  306A               	movlw	106
  9293  093A  319B  238A  3188   	fcall	_i2c_writeNBytes
  9294                           
  9295                           ;main.c: 411: i2c_writeNBytes(0x6a, &TAS_NORMAL, 2 );
  9296  093D  304F               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
  9297  093E  00B0               	movwf	??_set_source
  9298  093F  0830               	movf	??_set_source,w
  9299  0940  00AC               	movwf	i2c_writeNBytes@data
  9300  0941  3002               	movlw	2
  9301  0942  00AD               	movwf	i2c_writeNBytes@len
  9302  0943  3000               	movlw	0
  9303  0944  00AE               	movwf	i2c_writeNBytes@len+1
  9304  0945  306A               	movlw	106
  9305  0946  319B  238A         	fcall	_i2c_writeNBytes
  9306  0948  0008               	return
  9307  0949                     __end_of_set_source:
  9308                           
  9309                           	psect	text4
  9310  13AB                     __ptext4:	
  9311 ;; *************** function _set_gainstr *****************
  9312 ;; Defined at:
  9313 ;;		line 141 in file "main.c"
  9314 ;; Parameters:    Size  Location     Type
  9315 ;;  gval            1    wreg     unsigned char 
  9316 ;; Auto vars:     Size  Location     Type
  9317 ;;  gval            1   59[BANK1 ] unsigned char 
  9318 ;; Return value:  Size  Location     Type
  9319 ;;                  1    wreg      void 
  9320 ;; Registers used:
  9321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9322 ;; Tracked objects:
  9323 ;;		On entry : 1F/4C00000
  9324 ;;		On exit  : 1F/0
  9325 ;;		Unchanged: 0/0
  9326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9328 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9329 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9330 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9331 ;;Total ram usage:        2 bytes
  9332 ;; Hardware stack levels used:    1
  9333 ;; Hardware stack levels required when called:   15
  9334 ;; This function calls:
  9335 ;;		___awdiv
  9336 ;;		_puts_led
  9337 ;;		_sprintf
  9338 ;;		_strcat
  9339 ;;		_strcpy
  9340 ;; This function is called by:
  9341 ;;		_main
  9342 ;; This function uses a non-reentrant model
  9343 ;;
  9344                           
  9345                           
  9346                           ;psect for function _set_gainstr
  9347  13AB                     _set_gainstr:
  9348                           
  9349                           ;incstack = 0
  9350                           ; Regs used in _set_gainstr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9351                           ;set_gainstr@gval stored from wreg
  9352  13AB  0021               	movlb	1	; select bank1
  9353  13AC  00DB               	movwf	set_gainstr@gval^(0+128)
  9354                           
  9355                           ;main.c: 141: void set_gainstr(unsigned char gval);main.c: 142: {;main.c: 143: if (gval 
      +                          <9)
  9356  13AD  3009               	movlw	9
  9357  13AE  025B               	subwf	set_gainstr@gval^(0+128),w
  9358  13AF  1803               	skipnc
  9359  13B0  2BBE               	goto	l7899
  9360                           
  9361                           ;main.c: 144:          strcpy( ledstr, "OFF");
  9362  13B1  30CB               	movlw	low _ledstr
  9363  13B2  0020               	movlb	0	; select bank0
  9364  13B3  00AF               	movwf	strcpy@dest
  9365  13B4  3002               	movlw	high _ledstr
  9366  13B5  00B0               	movwf	strcpy@dest+1
  9367  13B6  3076               	movlw	low (STR_1| (0+32768))
  9368  13B7  00B1               	movwf	strcpy@src
  9369  13B8  30A8               	movlw	high (STR_1| (0+32768))
  9370  13B9  00B2               	movwf	strcpy@src+1
  9371  13BA  3190  2000  3193   	fcall	_strcpy
  9372  13BD  2C42               	goto	l1063
  9373  13BE                     l7899:
  9374                           
  9375                           ;main.c: 146:          {;main.c: 147:          if (gval > 0xba)
  9376  13BE  30BB               	movlw	187
  9377  13BF  025B               	subwf	set_gainstr@gval^(0+128),w
  9378  13C0  1C03               	skipc
  9379  13C1  2C0A               	goto	l7915
  9380                           
  9381                           ;main.c: 148:                   {;main.c: 149:                    gain = (signed char) (
      +                          ((signed int)gval - (signed int)0x00cf)/2);
  9382  13C2  3002               	movlw	2
  9383  13C3  0020               	movlb	0	; select bank0
  9384  13C4  00A3               	movwf	___awdiv@divisor
  9385  13C5  3000               	movlw	0
  9386  13C6  00A4               	movwf	___awdiv@divisor+1
  9387  13C7  0021               	movlb	1	; select bank1
  9388  13C8  085B               	movf	set_gainstr@gval^(0+128),w
  9389  13C9  3E31               	addlw	49
  9390  13CA  0020               	movlb	0	; select bank0
  9391  13CB  00A5               	movwf	___awdiv@dividend
  9392  13CC  30FF               	movlw	255
  9393  13CD  1803               	skipnc
  9394  13CE  3000               	movlw	0
  9395  13CF  00A6               	movwf	___awdiv@dividend+1
  9396  13D0  319F  27AF  3193   	fcall	___awdiv
  9397  13D3  0823               	movf	?___awdiv,w
  9398  13D4  0021               	movlb	1	; select bank1
  9399  13D5  00DA               	movwf	??_set_gainstr^(0+128)
  9400  13D6  085A               	movf	??_set_gainstr^(0+128),w
  9401  13D7  0022               	movlb	2	; select bank2
  9402  13D8  00C1               	movwf	_gain^(0+256)
  9403                           
  9404                           ;main.c: 150:                    sprintf(ledstr, "%2d", (signed char)gain);
  9405  13D9  30CB               	movlw	low _ledstr
  9406  13DA  0021               	movlb	1	; select bank1
  9407  13DB  00C0               	movwf	sprintf@s^(0+128)
  9408  13DC  3002               	movlw	high _ledstr
  9409  13DD  00C1               	movwf	(sprintf@s^(0+128)+1)
  9410  13DE  3092               	movlw	low (STR_2| (0+32768))
  9411  13DF  00C2               	movwf	sprintf@fmt^(0+128)
  9412  13E0  30A8               	movlw	high (STR_2| (0+32768))
  9413  13E1  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  9414  13E2  0022               	movlb	2	; select bank2
  9415  13E3  0841               	movf	_gain^(0+256),w
  9416  13E4  0021               	movlb	1	; select bank1
  9417  13E5  00C4               	movwf	(?_sprintf^(0+128)+4)
  9418  13E6  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  9419  13E7  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  9420  13E8  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  9421  13E9  319B  2342  3193   	fcall	_sprintf
  9422                           
  9423                           ;main.c: 151:                    if (gval == 0xce)
  9424  13EC  30CE               	movlw	206
  9425  13ED  065B               	xorwf	set_gainstr@gval^(0+128),w
  9426  13EE  1D03               	btfss	3,2
  9427  13EF  2BF5               	goto	l7909
  9428                           
  9429                           ;main.c: 152:                            ledstr[0] = 0x2d;
  9430  13F0  302D               	movlw	45
  9431  13F1  00DA               	movwf	??_set_gainstr^(0+128)
  9432  13F2  085A               	movf	??_set_gainstr^(0+128),w
  9433  13F3  0025               	banksel	_ledstr
  9434  13F4  00CB               	movwf	_ledstr& (0+127)
  9435  13F5                     l7909:
  9436                           
  9437                           ;main.c: 153:                    if(gval & 0x01)
  9438  13F5  0021               	movlb	1	; select bank1
  9439  13F6  1C5B               	btfss	set_gainstr@gval^(0+128),0
  9440  13F7  2C01               	goto	l7913
  9441                           
  9442                           ;main.c: 154:                            strcat(ledstr, ".0 ");
  9443  13F8  30CB               	movlw	low _ledstr
  9444  13F9  0020               	movlb	0	; select bank0
  9445  13FA  00BB               	movwf	strcat@dest
  9446  13FB  3002               	movlw	high _ledstr
  9447  13FC  00BC               	movwf	strcat@dest+1
  9448  13FD  3066               	movlw	low (STR_3| (0+32768))
  9449  13FE  00BD               	movwf	strcat@src
  9450  13FF  30A8               	movlw	high (STR_3| (0+32768))
  9451  1400  2C3E               	goto	L4
  9452  1401                     l7913:
  9453  1401  30CB               	movlw	low _ledstr
  9454  1402  0020               	movlb	0	; select bank0
  9455  1403  00BB               	movwf	strcat@dest
  9456  1404  3002               	movlw	high _ledstr
  9457  1405  00BC               	movwf	strcat@dest+1
  9458  1406  306A               	movlw	low (STR_4| (0+32768))
  9459  1407  00BD               	movwf	strcat@src
  9460  1408  30A8               	movlw	high (STR_4| (0+32768))
  9461  1409  2C3E               	goto	L4
  9462  140A                     l7915:
  9463                           
  9464                           ;main.c: 158:                   {;main.c: 159:                   gain =(signed char)((((
      +                          int)gval - (int)0xcf))/2);
  9465  140A  3002               	movlw	2
  9466  140B  0020               	movlb	0	; select bank0
  9467  140C  00A3               	movwf	___awdiv@divisor
  9468  140D  3000               	movlw	0
  9469  140E  00A4               	movwf	___awdiv@divisor+1
  9470  140F  0021               	movlb	1	; select bank1
  9471  1410  085B               	movf	set_gainstr@gval^(0+128),w
  9472  1411  3E31               	addlw	49
  9473  1412  0020               	movlb	0	; select bank0
  9474  1413  00A5               	movwf	___awdiv@dividend
  9475  1414  30FF               	movlw	255
  9476  1415  1803               	skipnc
  9477  1416  3000               	movlw	0
  9478  1417  00A6               	movwf	___awdiv@dividend+1
  9479  1418  319F  27AF  3193   	fcall	___awdiv
  9480  141B  0823               	movf	?___awdiv,w
  9481  141C  0021               	movlb	1	; select bank1
  9482  141D  00DA               	movwf	??_set_gainstr^(0+128)
  9483  141E  085A               	movf	??_set_gainstr^(0+128),w
  9484  141F  0022               	movlb	2	; select bank2
  9485  1420  00C1               	movwf	_gain^(0+256)
  9486                           
  9487                           ;main.c: 160:                   sprintf(ledstr, "%3d",(signed char)gain);
  9488  1421  30CB               	movlw	low _ledstr
  9489  1422  0021               	movlb	1	; select bank1
  9490  1423  00C0               	movwf	sprintf@s^(0+128)
  9491  1424  3002               	movlw	high _ledstr
  9492  1425  00C1               	movwf	(sprintf@s^(0+128)+1)
  9493  1426  3096               	movlw	low (STR_5| (0+32768))
  9494  1427  00C2               	movwf	sprintf@fmt^(0+128)
  9495  1428  30A8               	movlw	high (STR_5| (0+32768))
  9496  1429  00C3               	movwf	(sprintf@fmt^(0+128)+1)
  9497  142A  0022               	movlb	2	; select bank2
  9498  142B  0841               	movf	_gain^(0+256),w
  9499  142C  0021               	movlb	1	; select bank1
  9500  142D  00C4               	movwf	(?_sprintf^(0+128)+4)
  9501  142E  01C5               	clrf	((?_sprintf+1)^(0+128)+4)
  9502  142F  1BC4               	btfsc	(?_sprintf^(0+128)+4),7
  9503  1430  03C5               	decf	((?_sprintf+1)^(0+128)+4),f
  9504  1431  319B  2342  3193   	fcall	_sprintf
  9505                           
  9506                           ;main.c: 161:                   if((gval & 0x01) != 0x01)
  9507  1434  185B               	btfsc	set_gainstr@gval^(0+128),0
  9508  1435  2C42               	goto	l1063
  9509                           
  9510                           ;main.c: 162:                            strcat (ledstr, ".");
  9511  1436  30CB               	movlw	low _ledstr
  9512  1437  0020               	movlb	0	; select bank0
  9513  1438  00BB               	movwf	strcat@dest
  9514  1439  3002               	movlw	high _ledstr
  9515  143A  00BC               	movwf	strcat@dest+1
  9516  143B  309E               	movlw	low (STR_6| (0+32768))
  9517  143C  00BD               	movwf	strcat@src
  9518  143D  30A8               	movlw	high (STR_6| (0+32768))
  9519  143E                     L4:
  9520  143E  00BE               	movwf	strcat@src+1
  9521  143F  31A7  2783  3193   	fcall	_strcat
  9522  1442                     l1063:	
  9523                           ;main.c: 164:          }
  9524                           
  9525                           
  9526                           ;main.c: 165:  puts_led(ledstr);
  9527  1442  30CB               	movlw	low _ledstr
  9528  1443  0020               	movlb	0	; select bank0
  9529  1444  00AF               	movwf	puts_led@str
  9530  1445  3002               	movlw	high _ledstr
  9531  1446  00B0               	movwf	puts_led@str+1
  9532  1447  3191  21FC         	fcall	_puts_led
  9533  1449  0008               	return
  9534  144A                     __end_of_set_gainstr:
  9535                           
  9536                           	psect	text5
  9537  2783                     __ptext5:	
  9538 ;; *************** function _strcat *****************
  9539 ;; Defined at:
  9540 ;;		line 3 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/strcat.c"
  9541 ;; Parameters:    Size  Location     Type
  9542 ;;  dest            2   27[BANK0 ] PTR unsigned char 
  9543 ;;		 -> ledstr(0), 
  9544 ;;  src             2   29[BANK0 ] PTR const unsigned char 
  9545 ;;		 -> STR_12(2), STR_10(4), STR_9(4), STR_6(2), 
  9546 ;;		 -> STR_4(4), STR_3(4), 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;		None
  9549 ;; Return value:  Size  Location     Type
  9550 ;;                  2   27[BANK0 ] PTR unsigned char 
  9551 ;; Registers used:
  9552 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9553 ;; Tracked objects:
  9554 ;;		On entry : 1F/4900000
  9555 ;;		On exit  : 1F/0
  9556 ;;		Unchanged: 0/0
  9557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9558 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9561 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9562 ;;Total ram usage:        4 bytes
  9563 ;; Hardware stack levels used:    1
  9564 ;; Hardware stack levels required when called:    8
  9565 ;; This function calls:
  9566 ;;		_strcpy
  9567 ;;		_strlen
  9568 ;; This function is called by:
  9569 ;;		_set_gainstr
  9570 ;;		_show_uolstr
  9571 ;; This function uses a non-reentrant model
  9572 ;;
  9573                           
  9574                           
  9575                           ;psect for function _strcat
  9576  2783                     _strcat:
  9577                           
  9578                           ;incstack = 0
  9579                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9580  2783  083C               	movf	strcat@dest+1,w
  9581  2784  00A4               	movwf	strlen@s+1
  9582  2785  083B               	movf	strcat@dest,w
  9583  2786  00A3               	movwf	strlen@s
  9584  2787  3199  215B  31A7   	fcall	_strlen
  9585  278A  0823               	movf	?_strlen,w
  9586  278B  073B               	addwf	strcat@dest,w
  9587  278C  00AF               	movwf	strcpy@dest
  9588  278D  0824               	movf	?_strlen+1,w
  9589  278E  3D3C               	addwfc	strcat@dest+1,w
  9590  278F  00B0               	movwf	strcpy@dest+1
  9591  2790  083E               	movf	strcat@src+1,w
  9592  2791  00B2               	movwf	strcpy@src+1
  9593  2792  083D               	movf	strcat@src,w
  9594  2793  00B1               	movwf	strcpy@src
  9595  2794  3190  2000         	fcall	_strcpy
  9596  2796  0008               	return
  9597  2797                     __end_of_strcat:
  9598                           
  9599                           	psect	text6
  9600  1000                     __ptext6:	
  9601 ;; *************** function _strcpy *****************
  9602 ;; Defined at:
  9603 ;;		line 3 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/strcpy.c"
  9604 ;; Parameters:    Size  Location     Type
  9605 ;;  dest            2   15[BANK0 ] PTR unsigned char 
  9606 ;;		 -> ledstr(0), ledbuff(0), 
  9607 ;;  src             2   17[BANK0 ] PTR const unsigned char 
  9608 ;;		 -> led_i2s_dir(14), STR_27(4), led_hpf_fc(63), STR_12(2), 
  9609 ;;		 -> STR_10(4), STR_9(4), STR_7(4), STR_6(2), 
  9610 ;;		 -> STR_4(4), STR_3(4), STR_1(4), 
  9611 ;; Auto vars:     Size  Location     Type
  9612 ;;  d               2   25[BANK0 ] PTR unsigned char 
  9613 ;;		 -> ledstr(0), ledbuff(0), 
  9614 ;;  s               2   23[BANK0 ] PTR const unsigned char 
  9615 ;;		 -> led_i2s_dir(14), STR_27(4), led_hpf_fc(63), STR_12(2), 
  9616 ;;		 -> STR_10(4), STR_9(4), STR_7(4), STR_6(2), 
  9617 ;;		 -> STR_4(4), STR_3(4), STR_1(4), 
  9618 ;; Return value:  Size  Location     Type
  9619 ;;                  2   15[BANK0 ] PTR unsigned char 
  9620 ;; Registers used:
  9621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, pclath
  9622 ;; Tracked objects:
  9623 ;;		On entry : 1F/4900000
  9624 ;;		On exit  : 1F/0
  9625 ;;		Unchanged: 0/0
  9626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9627 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9628 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9629 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9630 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9631 ;;Total ram usage:       12 bytes
  9632 ;; Hardware stack levels used:    1
  9633 ;; Hardware stack levels required when called:    7
  9634 ;; This function calls:
  9635 ;;		Nothing
  9636 ;; This function is called by:
  9637 ;;		_set_gainstr
  9638 ;;		_show_uolstr
  9639 ;;		_main
  9640 ;;		_strcat
  9641 ;; This function uses a non-reentrant model
  9642 ;;
  9643                           
  9644                           
  9645                           ;psect for function _strcpy
  9646  1000                     _strcpy:
  9647                           
  9648                           ;incstack = 0
  9649                           ; Regs used in _strcpy: [wreg-fsr1h+pclath]
  9650  1000  0832               	movf	strcpy@src+1,w
  9651  1001  00B8               	movwf	strcpy@s+1
  9652  1002  0831               	movf	strcpy@src,w
  9653  1003  00B7               	movwf	strcpy@s
  9654  1004  0830               	movf	strcpy@dest+1,w
  9655  1005  00BA               	movwf	strcpy@d+1
  9656  1006  082F               	movf	strcpy@dest,w
  9657  1007  00B9               	movwf	strcpy@d
  9658  1008                     l5589:
  9659  1008  083A               	movf	strcpy@d+1,w
  9660  1009  00B4               	movwf	??_strcpy+1
  9661  100A  0839               	movf	strcpy@d,w
  9662  100B  00B3               	movwf	??_strcpy
  9663  100C  0AB9               	incf	strcpy@d,f
  9664  100D  1903               	skipnz
  9665  100E  0ABA               	incf	strcpy@d+1,f
  9666  100F  0833               	movf	??_strcpy,w
  9667  1010  0086               	movwf	6
  9668  1011  0834               	movf	??_strcpy+1,w
  9669  1012  0087               	movwf	7
  9670  1013  0838               	movf	strcpy@s+1,w
  9671  1014  00B6               	movwf	??_strcpy+3
  9672  1015  0837               	movf	strcpy@s,w
  9673  1016  00B5               	movwf	??_strcpy+2
  9674  1017  0AB7               	incf	strcpy@s,f
  9675  1018  1903               	skipnz
  9676  1019  0AB8               	incf	strcpy@s+1,f
  9677  101A  0835               	movf	??_strcpy+2,w
  9678  101B  0084               	movwf	4
  9679  101C  0836               	movf	??_strcpy+3,w
  9680  101D  0085               	movwf	5
  9681  101E  0800               	movf	0,w	;code access
  9682  101F  3FC0               	movwi [0]fsr1
  9683  1020  0889               	movf	9,f
  9684  1021  1903               	btfsc	3,2
  9685  1022  0008               	return
  9686  1023  2808               	goto	l5589
  9687  1024                     __end_of_strcpy:
  9688                           
  9689                           	psect	text7
  9690  11FC                     __ptext7:	
  9691 ;; *************** function _puts_led *****************
  9692 ;; Defined at:
  9693 ;;		line 106 in file "main.c"
  9694 ;; Parameters:    Size  Location     Type
  9695 ;;  str             2   15[BANK0 ] PTR unsigned char 
  9696 ;;		 -> STR_32(4), STR_31(4), STR_30(4), STR_29(4), 
  9697 ;;		 -> STR_28(4), STR_26(4), STR_25(4), STR_24(4), 
  9698 ;;		 -> STR_23(4), STR_22(4), STR_21(4), STR_18(4), 
  9699 ;;		 -> STR_17(4), led_src_name(35), STR_16(4), STR_15(4), 
  9700 ;;		 -> STR_14(4), ledstr(0), ledbuff(0), 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;  cpoint          2   18[BANK0 ] PTR unsigned char 
  9703 ;;		 -> STR_32(4), STR_31(4), STR_30(4), STR_29(4), 
  9704 ;;		 -> STR_28(4), STR_26(4), STR_25(4), STR_24(4), 
  9705 ;;		 -> STR_23(4), STR_22(4), STR_21(4), STR_18(4), 
  9706 ;;		 -> STR_17(4), led_src_name(35), STR_16(4), STR_15(4), 
  9707 ;;		 -> STR_14(4), ledstr(0), ledbuff(0), 
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  1    wreg      void 
  9710 ;; Registers used:
  9711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  9712 ;; Tracked objects:
  9713 ;;		On entry : 1F/4C00000
  9714 ;;		On exit  : 1F/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9717 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9718 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9720 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9721 ;;Total ram usage:        5 bytes
  9722 ;; Hardware stack levels used:    1
  9723 ;; Hardware stack levels required when called:    7
  9724 ;; This function calls:
  9725 ;;		Nothing
  9726 ;; This function is called by:
  9727 ;;		_set_gainstr
  9728 ;;		_show_uolstr
  9729 ;;		_main
  9730 ;; This function uses a non-reentrant model
  9731 ;;
  9732                           
  9733                           
  9734                           ;psect for function _puts_led
  9735  11FC                     _puts_led:
  9736                           
  9737                           ;main.c: 106: void puts_led(char *str);main.c: 107: {;main.c: 108:     unsigned char *cp
      +                          oint;;main.c: 110: cpoint =(unsigned char *)(str);
  9738                           
  9739                           ;incstack = 0
  9740                           ; Regs used in _puts_led: [wreg-fsr1h+status,2+status,0+pclath]
  9741  11FC  0830               	movf	puts_led@str+1,w
  9742  11FD  00B3               	movwf	puts_led@cpoint+1
  9743  11FE  082F               	movf	puts_led@str,w
  9744  11FF  00B2               	movwf	puts_led@cpoint
  9745                           
  9746                           ;main.c: 111:          {;main.c: 112:             ledbuff[0] = *(cpoint++);
  9747  1200  0832               	movf	puts_led@cpoint,w
  9748  1201  0084               	movwf	4
  9749  1202  0833               	movf	puts_led@cpoint+1,w
  9750  1203  0085               	movwf	5
  9751  1204  0800               	movf	0,w	;code access
  9752  1205  00B1               	movwf	??_puts_led
  9753  1206  0831               	movf	??_puts_led,w
  9754  1207  0024               	banksel	_ledbuff
  9755  1208  00AC               	movwf	_ledbuff& (0+127)
  9756  1209  3001               	movlw	1
  9757  120A  0020               	movlb	0	; select bank0
  9758  120B  07B2               	addwf	puts_led@cpoint,f
  9759  120C  3000               	movlw	0
  9760  120D  3DB3               	addwfc	puts_led@cpoint+1,f
  9761                           
  9762                           ;main.c: 113:             if (*cpoint == '.')
  9763  120E  0832               	movf	puts_led@cpoint,w
  9764  120F  0084               	movwf	4
  9765  1210  0833               	movf	puts_led@cpoint+1,w
  9766  1211  0085               	movwf	5
  9767  1212  0012               	moviw fsr0++
  9768  1213  3A2E               	xorlw	46
  9769  1214  1D03               	btfss	3,2
  9770  1215  2A21               	goto	l5871
  9771                           
  9772                           ;main.c: 114:                 {;main.c: 115:                 led_dot[0]= 0x7f;
  9773  1216  307F               	movlw	127
  9774  1217  00B1               	movwf	??_puts_led
  9775  1218  0831               	movf	??_puts_led,w
  9776  1219  0023               	banksel	_led_dot
  9777  121A  00A0               	movwf	_led_dot& (0+127)
  9778                           
  9779                           ;main.c: 116:                 ++cpoint;
  9780  121B  3001               	movlw	1
  9781  121C  0020               	movlb	0	; select bank0
  9782  121D  07B2               	addwf	puts_led@cpoint,f
  9783  121E  3000               	movlw	0
  9784  121F  3DB3               	addwfc	puts_led@cpoint+1,f
  9785                           
  9786                           ;main.c: 117:                 }
  9787  1220  2A26               	goto	l5873
  9788  1221                     l5871:
  9789                           
  9790                           ;main.c: 119:                 led_dot[0]= 0xff;
  9791  1221  30FF               	movlw	255
  9792  1222  00B1               	movwf	??_puts_led
  9793  1223  0831               	movf	??_puts_led,w
  9794  1224  0023               	banksel	_led_dot
  9795  1225  00A0               	movwf	_led_dot& (0+127)
  9796  1226                     l5873:
  9797                           
  9798                           ;main.c: 120:              ledbuff[1] = *(cpoint++);
  9799  1226  0020               	movlb	0	; select bank0
  9800  1227  0832               	movf	puts_led@cpoint,w
  9801  1228  0084               	movwf	4
  9802  1229  0833               	movf	puts_led@cpoint+1,w
  9803  122A  0085               	movwf	5
  9804  122B  0800               	movf	0,w	;code access
  9805  122C  00B1               	movwf	??_puts_led
  9806  122D  302D               	movlw	low (_ledbuff+1)
  9807  122E  0086               	movwf	6
  9808  122F  3002               	movlw	high (_ledbuff+1)
  9809  1230  0087               	movwf	7
  9810  1231  0831               	movf	??_puts_led,w
  9811  1232  0081               	movwf	1
  9812  1233  3001               	movlw	1
  9813  1234  07B2               	addwf	puts_led@cpoint,f
  9814  1235  3000               	movlw	0
  9815  1236  3DB3               	addwfc	puts_led@cpoint+1,f
  9816                           
  9817                           ;main.c: 121:             if (*cpoint == '.')
  9818  1237  0832               	movf	puts_led@cpoint,w
  9819  1238  0084               	movwf	4
  9820  1239  0833               	movf	puts_led@cpoint+1,w
  9821  123A  0085               	movwf	5
  9822  123B  0012               	moviw fsr0++
  9823  123C  3A2E               	xorlw	46
  9824  123D  1D03               	btfss	3,2
  9825  123E  2A4A               	goto	l5883
  9826                           
  9827                           ;main.c: 122:                 {;main.c: 123:                 led_dot[1]= 0x7f;
  9828  123F  30A1               	movlw	low (_led_dot+1)
  9829  1240  0086               	movwf	6
  9830  1241  3001               	movlw	high (_led_dot+1)
  9831  1242  0087               	movwf	7
  9832  1243  307F               	movlw	127
  9833  1244  0081               	movwf	1
  9834                           
  9835                           ;main.c: 124:                 ++cpoint;
  9836  1245  3001               	movlw	1
  9837  1246  07B2               	addwf	puts_led@cpoint,f
  9838  1247  3000               	movlw	0
  9839  1248  3DB3               	addwfc	puts_led@cpoint+1,f
  9840                           
  9841                           ;main.c: 125:                 }
  9842  1249  2A50               	goto	l5885
  9843  124A                     l5883:
  9844                           
  9845                           ;main.c: 127:                 led_dot[1]= 0xff;
  9846  124A  30A1               	movlw	low (_led_dot+1)
  9847  124B  0086               	movwf	6
  9848  124C  3001               	movlw	high (_led_dot+1)
  9849  124D  0087               	movwf	7
  9850  124E  30FF               	movlw	255
  9851  124F  0081               	movwf	1
  9852  1250                     l5885:
  9853                           
  9854                           ;main.c: 128:              ledbuff[2] = *(cpoint++);
  9855  1250  0832               	movf	puts_led@cpoint,w
  9856  1251  0084               	movwf	4
  9857  1252  0833               	movf	puts_led@cpoint+1,w
  9858  1253  0085               	movwf	5
  9859  1254  0800               	movf	0,w	;code access
  9860  1255  00B1               	movwf	??_puts_led
  9861  1256  302E               	movlw	low (_ledbuff+2)
  9862  1257  0086               	movwf	6
  9863  1258  3002               	movlw	high (_ledbuff+2)
  9864  1259  0087               	movwf	7
  9865  125A  0831               	movf	??_puts_led,w
  9866  125B  0081               	movwf	1
  9867  125C  3001               	movlw	1
  9868  125D  07B2               	addwf	puts_led@cpoint,f
  9869  125E  3000               	movlw	0
  9870  125F  3DB3               	addwfc	puts_led@cpoint+1,f
  9871                           
  9872                           ;main.c: 129:             if (*cpoint == '.')
  9873  1260  0832               	movf	puts_led@cpoint,w
  9874  1261  0084               	movwf	4
  9875  1262  0833               	movf	puts_led@cpoint+1,w
  9876  1263  0085               	movwf	5
  9877  1264  0012               	moviw fsr0++
  9878  1265  3A2E               	xorlw	46
  9879  1266  1D03               	btfss	3,2
  9880  1267  2A6F               	goto	l5893
  9881                           
  9882                           ;main.c: 130:                 {;main.c: 131:                 led_dot[2]= 0x7f;
  9883  1268  30A2               	movlw	low (_led_dot+2)
  9884  1269  0086               	movwf	6
  9885  126A  3001               	movlw	high (_led_dot+2)
  9886  126B  0087               	movwf	7
  9887  126C  307F               	movlw	127
  9888  126D  0081               	movwf	1
  9889                           
  9890                           ;main.c: 133:                 }
  9891  126E  0008               	return
  9892  126F                     l5893:
  9893                           
  9894                           ;main.c: 135:                 led_dot[2]= 0xff;
  9895  126F  30A2               	movlw	low (_led_dot+2)
  9896  1270  0086               	movwf	6
  9897  1271  3001               	movlw	high (_led_dot+2)
  9898  1272  0087               	movwf	7
  9899  1273  30FF               	movlw	255
  9900  1274  0081               	movwf	1
  9901  1275  0008               	return
  9902  1276                     __end_of_puts_led:
  9903                           
  9904                           	psect	text8
  9905  1FAF                     __ptext8:	
  9906 ;; *************** function ___awdiv *****************
  9907 ;; Defined at:
  9908 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/awdiv.c"
  9909 ;; Parameters:    Size  Location     Type
  9910 ;;  divisor         2    3[BANK0 ] int 
  9911 ;;  dividend        2    5[BANK0 ] int 
  9912 ;; Auto vars:     Size  Location     Type
  9913 ;;  quotient        2   10[BANK0 ] int 
  9914 ;;  sign            1    9[BANK0 ] unsigned char 
  9915 ;;  counter         1    8[BANK0 ] unsigned char 
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  2    3[BANK0 ] int 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0
  9920 ;; Tracked objects:
  9921 ;;		On entry : 1F/4900000
  9922 ;;		On exit  : 1F/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9925 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9926 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9927 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9928 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9929 ;;Total ram usage:        9 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    7
  9932 ;; This function calls:
  9933 ;;		Nothing
  9934 ;; This function is called by:
  9935 ;;		_set_gainstr
  9936 ;;		_show_uolstr
  9937 ;; This function uses a non-reentrant model
  9938 ;;
  9939                           
  9940                           
  9941                           ;psect for function ___awdiv
  9942  1FAF                     ___awdiv:
  9943                           
  9944                           ;incstack = 0
  9945                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  9946  1FAF  01A9               	clrf	___awdiv@sign
  9947  1FB0  1FA4               	btfss	___awdiv@divisor+1,7
  9948  1FB1  2FB9               	goto	l5919
  9949  1FB2  09A3               	comf	___awdiv@divisor,f
  9950  1FB3  09A4               	comf	___awdiv@divisor+1,f
  9951  1FB4  0AA3               	incf	___awdiv@divisor,f
  9952  1FB5  1903               	skipnz
  9953  1FB6  0AA4               	incf	___awdiv@divisor+1,f
  9954  1FB7  01A9               	clrf	___awdiv@sign
  9955  1FB8  0AA9               	incf	___awdiv@sign,f
  9956  1FB9                     l5919:
  9957  1FB9  1FA6               	btfss	___awdiv@dividend+1,7
  9958  1FBA  2FC4               	goto	l5925
  9959  1FBB  09A5               	comf	___awdiv@dividend,f
  9960  1FBC  09A6               	comf	___awdiv@dividend+1,f
  9961  1FBD  0AA5               	incf	___awdiv@dividend,f
  9962  1FBE  1903               	skipnz
  9963  1FBF  0AA6               	incf	___awdiv@dividend+1,f
  9964  1FC0  3001               	movlw	1
  9965  1FC1  00A7               	movwf	??___awdiv
  9966  1FC2  0827               	movf	??___awdiv,w
  9967  1FC3  06A9               	xorwf	___awdiv@sign,f
  9968  1FC4                     l5925:
  9969  1FC4  01AA               	clrf	___awdiv@quotient
  9970  1FC5  01AB               	clrf	___awdiv@quotient+1
  9971  1FC6  0823               	movf	___awdiv@divisor,w
  9972  1FC7  0424               	iorwf	___awdiv@divisor+1,w
  9973  1FC8  1903               	btfsc	3,2
  9974  1FC9  2FF3               	goto	l5947
  9975  1FCA  01A8               	clrf	___awdiv@counter
  9976  1FCB  0AA8               	incf	___awdiv@counter,f
  9977  1FCC                     l5935:
  9978  1FCC  1BA4               	btfsc	___awdiv@divisor+1,7
  9979  1FCD  2FD8               	goto	l5937
  9980  1FCE  3001               	movlw	1
  9981  1FCF                     u3925:
  9982  1FCF  35A3               	lslf	___awdiv@divisor,f
  9983  1FD0  0DA4               	rlf	___awdiv@divisor+1,f
  9984  1FD1  0B89               	decfsz	9,f
  9985  1FD2  2FCF               	goto	u3925
  9986  1FD3  3001               	movlw	1
  9987  1FD4  00A7               	movwf	??___awdiv
  9988  1FD5  0827               	movf	??___awdiv,w
  9989  1FD6  07A8               	addwf	___awdiv@counter,f
  9990  1FD7  2FCC               	goto	l5935
  9991  1FD8                     l5937:
  9992  1FD8  3001               	movlw	1
  9993  1FD9                     u3945:
  9994  1FD9  35AA               	lslf	___awdiv@quotient,f
  9995  1FDA  0DAB               	rlf	___awdiv@quotient+1,f
  9996  1FDB  0B89               	decfsz	9,f
  9997  1FDC  2FD9               	goto	u3945
  9998  1FDD  0824               	movf	___awdiv@divisor+1,w
  9999  1FDE  0226               	subwf	___awdiv@dividend+1,w
 10000  1FDF  1D03               	skipz
 10001  1FE0  2FE3               	goto	u3955
 10002  1FE1  0823               	movf	___awdiv@divisor,w
 10003  1FE2  0225               	subwf	___awdiv@dividend,w
 10004  1FE3                     u3955:
 10005  1FE3  1C03               	skipc
 10006  1FE4  2FEA               	goto	l5943
 10007  1FE5  0823               	movf	___awdiv@divisor,w
 10008  1FE6  02A5               	subwf	___awdiv@dividend,f
 10009  1FE7  0824               	movf	___awdiv@divisor+1,w
 10010  1FE8  3BA6               	subwfb	___awdiv@dividend+1,f
 10011  1FE9  142A               	bsf	___awdiv@quotient,0
 10012  1FEA                     l5943:
 10013  1FEA  3001               	movlw	1
 10014  1FEB                     u3965:
 10015  1FEB  36A4               	lsrf	___awdiv@divisor+1,f
 10016  1FEC  0CA3               	rrf	___awdiv@divisor,f
 10017  1FED  0B89               	decfsz	9,f
 10018  1FEE  2FEB               	goto	u3965
 10019  1FEF  3001               	movlw	1
 10020  1FF0  02A8               	subwf	___awdiv@counter,f
 10021  1FF1  1D03               	btfss	3,2
 10022  1FF2  2FD8               	goto	l5937
 10023  1FF3                     l5947:
 10024  1FF3  0829               	movf	___awdiv@sign,w
 10025  1FF4  1903               	btfsc	3,2
 10026  1FF5  2FFB               	goto	l5951
 10027  1FF6  09AA               	comf	___awdiv@quotient,f
 10028  1FF7  09AB               	comf	___awdiv@quotient+1,f
 10029  1FF8  0AAA               	incf	___awdiv@quotient,f
 10030  1FF9  1903               	skipnz
 10031  1FFA  0AAB               	incf	___awdiv@quotient+1,f
 10032  1FFB                     l5951:
 10033  1FFB  082B               	movf	___awdiv@quotient+1,w
 10034  1FFC  00A4               	movwf	?___awdiv+1
 10035  1FFD  082A               	movf	___awdiv@quotient,w
 10036  1FFE  00A3               	movwf	?___awdiv
 10037  1FFF  0008               	return
 10038  2000                     __end_of___awdiv:
 10039                           
 10040                           	psect	text9
 10041  118E                     __ptext9:	
 10042 ;; *************** function _set_gains *****************
 10043 ;; Defined at:
 10044 ;;		line 356 in file "main.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;  vol             1    wreg     unsigned char 
 10047 ;;  bal             1   26[BANK0 ] char 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;  vol             1   28[BANK0 ] unsigned char 
 10050 ;; Return value:  Size  Location     Type
 10051 ;;                  1    wreg      void 
 10052 ;; Registers used:
 10053 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10054 ;; Tracked objects:
 10055 ;;		On entry : 1F/4A00000
 10056 ;;		On exit  : 1F/0
 10057 ;;		Unchanged: 0/0
 10058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10059 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10060 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10061 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10062 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10063 ;;Total ram usage:        3 bytes
 10064 ;; Hardware stack levels used:    1
 10065 ;; Hardware stack levels required when called:   11
 10066 ;; This function calls:
 10067 ;;		_abs
 10068 ;;		_i2c_writeNBytes
 10069 ;; This function is called by:
 10070 ;;		_main
 10071 ;; This function uses a non-reentrant model
 10072 ;;
 10073                           
 10074                           
 10075                           ;psect for function _set_gains
 10076  118E                     _set_gains:
 10077                           
 10078                           ;incstack = 0
 10079                           ; Regs used in _set_gains: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10080                           ;set_gains@vol stored from wreg
 10081  118E  00BC               	movwf	set_gains@vol
 10082                           
 10083                           ;main.c: 356: void set_gains(unsigned char vol, signed char bal);main.c: 357: {;main.c: 
      +                          358:  if (bal < 0)
 10084  118F  1FBA               	btfss	set_gains@bal,7
 10085  1190  29CB               	goto	l8011
 10086                           
 10087                           ;main.c: 359:     {;main.c: 360:      tasbuff[0] = 0x05;
 10088  1191  3005               	movlw	5
 10089  1192  00BB               	movwf	??_set_gains
 10090  1193  083B               	movf	??_set_gains,w
 10091  1194  0022               	movlb	2	; select bank2
 10092  1195  00CD               	movwf	_tasbuff^(0+256)
 10093                           
 10094                           ;main.c: 361:      tasbuff[1] =vol;
 10095  1196  0020               	movlb	0	; select bank0
 10096  1197  083C               	movf	set_gains@vol,w
 10097  1198  00BB               	movwf	??_set_gains
 10098  1199  083B               	movf	??_set_gains,w
 10099  119A  0022               	movlb	2	; select bank2
 10100  119B  00CE               	movwf	(_tasbuff^(0+256)+1)
 10101                           
 10102                           ;main.c: 362:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
 10103  119C  304D               	movlw	(low (_tasbuff| (0+256)))& (0+255)
 10104  119D  0020               	movlb	0	; select bank0
 10105  119E  00BB               	movwf	??_set_gains
 10106  119F  083B               	movf	??_set_gains,w
 10107  11A0  00AC               	movwf	i2c_writeNBytes@data
 10108  11A1  3002               	movlw	2
 10109  11A2  00AD               	movwf	i2c_writeNBytes@len
 10110  11A3  3000               	movlw	0
 10111  11A4  00AE               	movwf	i2c_writeNBytes@len+1
 10112  11A5  306A               	movlw	106
 10113  11A6  319B  238A  3191   	fcall	_i2c_writeNBytes
 10114                           
 10115                           ;main.c: 363:     tasbuff[0] = 0x06;
 10116  11A9  3006               	movlw	6
 10117  11AA  00BB               	movwf	??_set_gains
 10118  11AB  083B               	movf	??_set_gains,w
 10119  11AC  0022               	movlb	2	; select bank2
 10120  11AD  00CD               	movwf	_tasbuff^(0+256)
 10121                           
 10122                           ;main.c: 364:     tasbuff[1] = vol - abs(bal);
 10123  11AE  0020               	movlb	0	; select bank0
 10124  11AF  083A               	movf	set_gains@bal,w
 10125  11B0  00B6               	movwf	abs@a
 10126  11B1  01B7               	clrf	abs@a+1
 10127  11B2  1BB6               	btfsc	abs@a,7
 10128  11B3  03B7               	decf	abs@a+1,f
 10129  11B4  3199  218A  3191   	fcall	_abs
 10130  11B7  0020               	movlb	0	; select bank0
 10131  11B8  0836               	movf	?_abs,w
 10132  11B9  023C               	subwf	set_gains@vol,w
 10133  11BA  00BB               	movwf	??_set_gains
 10134  11BB  083B               	movf	??_set_gains,w
 10135  11BC  0022               	movlb	2	; select bank2
 10136  11BD  00CE               	movwf	(_tasbuff^(0+256)+1)
 10137                           
 10138                           ;main.c: 365:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
 10139  11BE  304D               	movlw	(low (_tasbuff| (0+256)))& (0+255)
 10140  11BF  0020               	movlb	0	; select bank0
 10141  11C0  00BB               	movwf	??_set_gains
 10142  11C1  083B               	movf	??_set_gains,w
 10143  11C2  00AC               	movwf	i2c_writeNBytes@data
 10144  11C3  3002               	movlw	2
 10145  11C4  00AD               	movwf	i2c_writeNBytes@len
 10146  11C5  3000               	movlw	0
 10147  11C6  00AE               	movwf	i2c_writeNBytes@len+1
 10148  11C7  306A               	movlw	106
 10149  11C8  319B  238A         	fcall	_i2c_writeNBytes
 10150                           
 10151                           ;main.c: 366:     }
 10152  11CA  0008               	return
 10153  11CB                     l8011:
 10154                           
 10155                           ;main.c: 368:     {;main.c: 369:      tasbuff[0] = 0x05;
 10156  11CB  3005               	movlw	5
 10157  11CC  00BB               	movwf	??_set_gains
 10158  11CD  083B               	movf	??_set_gains,w
 10159  11CE  0022               	movlb	2	; select bank2
 10160  11CF  00CD               	movwf	_tasbuff^(0+256)
 10161                           
 10162                           ;main.c: 370:      tasbuff[1] =vol - bal;
 10163  11D0  0020               	movlb	0	; select bank0
 10164  11D1  083A               	movf	set_gains@bal,w
 10165  11D2  023C               	subwf	set_gains@vol,w
 10166  11D3  00BB               	movwf	??_set_gains
 10167  11D4  083B               	movf	??_set_gains,w
 10168  11D5  0022               	movlb	2	; select bank2
 10169  11D6  00CE               	movwf	(_tasbuff^(0+256)+1)
 10170                           
 10171                           ;main.c: 371:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
 10172  11D7  304D               	movlw	(low (_tasbuff| (0+256)))& (0+255)
 10173  11D8  0020               	movlb	0	; select bank0
 10174  11D9  00BB               	movwf	??_set_gains
 10175  11DA  083B               	movf	??_set_gains,w
 10176  11DB  00AC               	movwf	i2c_writeNBytes@data
 10177  11DC  3002               	movlw	2
 10178  11DD  00AD               	movwf	i2c_writeNBytes@len
 10179  11DE  3000               	movlw	0
 10180  11DF  00AE               	movwf	i2c_writeNBytes@len+1
 10181  11E0  306A               	movlw	106
 10182  11E1  319B  238A  3191   	fcall	_i2c_writeNBytes
 10183                           
 10184                           ;main.c: 372:     tasbuff[0] = 0x06;
 10185  11E4  3006               	movlw	6
 10186  11E5  00BB               	movwf	??_set_gains
 10187  11E6  083B               	movf	??_set_gains,w
 10188  11E7  0022               	movlb	2	; select bank2
 10189  11E8  00CD               	movwf	_tasbuff^(0+256)
 10190                           
 10191                           ;main.c: 373:     tasbuff[1] = vol ;
 10192  11E9  0020               	movlb	0	; select bank0
 10193  11EA  083C               	movf	set_gains@vol,w
 10194  11EB  00BB               	movwf	??_set_gains
 10195  11EC  083B               	movf	??_set_gains,w
 10196  11ED  0022               	movlb	2	; select bank2
 10197  11EE  00CE               	movwf	(_tasbuff^(0+256)+1)
 10198                           
 10199                           ;main.c: 374:     i2c_writeNBytes(0x6a, &tasbuff, 2 );
 10200  11EF  304D               	movlw	(low (_tasbuff| (0+256)))& (0+255)
 10201  11F0  0020               	movlb	0	; select bank0
 10202  11F1  00BB               	movwf	??_set_gains
 10203  11F2  083B               	movf	??_set_gains,w
 10204  11F3  00AC               	movwf	i2c_writeNBytes@data
 10205  11F4  3002               	movlw	2
 10206  11F5  00AD               	movwf	i2c_writeNBytes@len
 10207  11F6  3000               	movlw	0
 10208  11F7  00AE               	movwf	i2c_writeNBytes@len+1
 10209  11F8  306A               	movlw	106
 10210  11F9  319B  238A         	fcall	_i2c_writeNBytes
 10211  11FB  0008               	return
 10212  11FC                     __end_of_set_gains:
 10213                           
 10214                           	psect	text10
 10215  0BED                     __ptext10:	
 10216 ;; *************** function _lcd_disp_param *****************
 10217 ;; Defined at:
 10218 ;;		line 42 in file "disp_param.c"
 10219 ;; Parameters:    Size  Location     Type
 10220 ;;		None
 10221 ;; Auto vars:     Size  Location     Type
 10222 ;;  prail           1    8[BANK5 ] unsigned char 
 10223 ;;  ilim            1    7[BANK5 ] unsigned char 
 10224 ;;  clip            1    6[BANK5 ] unsigned char 
 10225 ;;  otwarn          1    5[BANK5 ] unsigned char 
 10226 ;;  otshut          1    4[BANK5 ] unsigned char 
 10227 ;;  ocdc            1    3[BANK5 ] unsigned char 
 10228 ;;  pfspo           1    2[BANK5 ] unsigned char 
 10229 ;; Return value:  Size  Location     Type
 10230 ;;                  1    wreg      void 
 10231 ;; Registers used:
 10232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10233 ;; Tracked objects:
 10234 ;;		On entry : 1D/4C00000
 10235 ;;		On exit  : 1F/0
 10236 ;;		Unchanged: 0/0
 10237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10239 ;;      Locals:         0       0       0       0       0       0      11       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10240 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10241 ;;      Totals:         0       0      12       0       0       0      11       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10242 ;;Total ram usage:       23 bytes
 10243 ;; Hardware stack levels used:    1
 10244 ;; Hardware stack levels required when called:   15
 10245 ;; This function calls:
 10246 ;;		___lbmod
 10247 ;;		___wmul
 10248 ;;		_i2c_lcd_puts
 10249 ;;		_i2c_lcd_set_cursor_pos
 10250 ;;		_i2c_read1ByteRegister
 10251 ;;		_sprintf
 10252 ;; This function is called by:
 10253 ;;		_main
 10254 ;; This function uses a non-reentrant model
 10255 ;;
 10256                           
 10257                           
 10258                           ;psect for function _lcd_disp_param
 10259  0BED                     _lcd_disp_param:
 10260                           
 10261                           ;disp_param.c: 44: uint8_t pfspo,ocdc, otshut, otwarn,clip,ilim,prail;;disp_param.c: 46:
      +                               i2c_lcd_set_cursor_pos(0, 0);
 10262                           
 10263                           ;incstack = 0
 10264                           ; Regs used in _lcd_disp_param: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10265  0BED  0020               	movlb	0	; select bank0
 10266  0BEE  01B7               	clrf	i2c_lcd_set_cursor_pos@line
 10267  0BEF  3000               	movlw	0
 10268  0BF0  319D  252B  318B   	fcall	_i2c_lcd_set_cursor_pos
 10269                           
 10270                           ;disp_param.c: 47:     sprintf(lcdbuff,"SOURCE:%s", lcd_src_name[current_source % 5]);
 10271  0BF3  3020               	movlw	low _lcdbuff
 10272  0BF4  0021               	movlb	1	; select bank1
 10273  0BF5  00C0               	movwf	sprintf@s^(0+128)
 10274  0BF6  3003               	movlw	high _lcdbuff
 10275  0BF7  00C1               	movwf	(sprintf@s^(0+128)+1)
 10276  0BF8  3053               	movlw	low (STR_33| (0+32768))
 10277  0BF9  00C2               	movwf	sprintf@fmt^(0+128)
 10278  0BFA  30A8               	movlw	high (STR_33| (0+32768))
 10279  0BFB  00C3               	movwf	(sprintf@fmt^(0+128)+1)
 10280  0BFC  3005               	movlw	5
 10281  0BFD  00DA               	movwf	??_lcd_disp_param^(0+128)
 10282  0BFE  085A               	movf	??_lcd_disp_param^(0+128),w
 10283  0BFF  0020               	movlb	0	; select bank0
 10284  0C00  00A3               	movwf	___lbmod@divisor
 10285  0C01  0022               	banksel	_current_source
 10286  0C02  0840               	movf	_current_source& (0+127),w
 10287  0C03  319A  22E0  318B   	fcall	___lbmod
 10288  0C06  0021               	movlb	1	; select bank1
 10289  0C07  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
 10290  0C08  01DC               	clrf	((??_lcd_disp_param+1)^(0+128)+1)
 10291  0C09  35DB               	lslf	(??_lcd_disp_param+1)^(0+128),f
 10292  0C0A  0DDC               	rlf	((??_lcd_disp_param+1)^(0+128)+1),f
 10293  0C0B  35DB               	lslf	(??_lcd_disp_param+1)^(0+128),f
 10294  0C0C  0DDC               	rlf	((??_lcd_disp_param+1)^(0+128)+1),f
 10295  0C0D  35DB               	lslf	(??_lcd_disp_param+1)^(0+128),f
 10296  0C0E  0DDC               	rlf	((??_lcd_disp_param+1)^(0+128)+1),f
 10297  0C0F  30D7               	movlw	low (_lcd_src_name| (0+32768))
 10298  0C10  00DD               	movwf	(??_lcd_disp_param+3)^(0+128)
 10299  0C11  30A0               	movlw	high (_lcd_src_name| (0+32768))
 10300  0C12  00DE               	movwf	((??_lcd_disp_param+3)^(0+128)+1)
 10301  0C13  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10302  0C14  075D               	addwf	(??_lcd_disp_param+3)^(0+128),w
 10303  0C15  00C4               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
 10304  0C16  085C               	movf	(??_lcd_disp_param+2)^(0+128),w
 10305  0C17  3D5E               	addwfc	(??_lcd_disp_param+4)^(0+128),w
 10306  0C18  00C5               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
 10307  0C19  319B  2342  318B   	fcall	_sprintf
 10308                           
 10309                           ;disp_param.c: 48:     i2c_lcd_puts(lcdbuff);
 10310  0C1C  3020               	movlw	low _lcdbuff
 10311  0C1D  0020               	movlb	0	; select bank0
 10312  0C1E  00B7               	movwf	i2c_lcd_puts@s
 10313  0C1F  3003               	movlw	high _lcdbuff
 10314  0C20  00B8               	movwf	i2c_lcd_puts@s+1
 10315  0C21  3199  2130  318B   	fcall	_i2c_lcd_puts
 10316                           
 10317                           ;disp_param.c: 50:    i2c_lcd_set_cursor_pos(0, 1);
 10318  0C24  01B7               	clrf	i2c_lcd_set_cursor_pos@line
 10319  0C25  0AB7               	incf	i2c_lcd_set_cursor_pos@line,f
 10320  0C26  3000               	movlw	0
 10321  0C27  319D  252B  318B   	fcall	_i2c_lcd_set_cursor_pos
 10322                           
 10323                           ;disp_param.c: 51:     sprintf(lcdbuff,"AUX:%s HPF:%s", lcd_aux_name[current_direction %
      +                          2], lcd_hpf_fc[current_hpf]);
 10324  0C2A  3001               	movlw	1
 10325  0C2B  0020               	banksel	_current_direction
 10326  0C2C  057D               	andwf	_current_direction& (0+127),w
 10327  0C2D  0020               	movlb	0	; select bank0
 10328  0C2E  00A9               	movwf	___wmul@multiplier
 10329  0C2F  01AA               	clrf	___wmul@multiplier+1
 10330  0C30  3007               	movlw	7
 10331  0C31  00AB               	movwf	___wmul@multiplicand
 10332  0C32  3000               	movlw	0
 10333  0C33  00AC               	movwf	___wmul@multiplicand+1
 10334  0C34  319A  226E  318B   	fcall	___wmul
 10335  0C37  3037               	movlw	low (_lcd_aux_name| (0+32768))
 10336  0C38  0021               	movlb	1	; select bank1
 10337  0C39  00DA               	movwf	??_lcd_disp_param^(0+128)
 10338  0C3A  30A8               	movlw	high (_lcd_aux_name| (0+32768))
 10339  0C3B  00DB               	movwf	(??_lcd_disp_param^(0+128)+1)
 10340  0C3C  0020               	movlb	0	; select bank0
 10341  0C3D  0829               	movf	?___wmul,w
 10342  0C3E  0021               	movlb	1	; select bank1
 10343  0C3F  075A               	addwf	??_lcd_disp_param^(0+128),w
 10344  0C40  0025               	movlb	5	; select bank5
 10345  0C41  00C9               	movwf	_lcd_disp_param$2750^(0+640)
 10346  0C42  0020               	movlb	0	; select bank0
 10347  0C43  082A               	movf	?___wmul+1,w
 10348  0C44  0021               	movlb	1	; select bank1
 10349  0C45  3D5B               	addwfc	(??_lcd_disp_param+1)^(0+128),w
 10350  0C46  0025               	movlb	5	; select bank5
 10351  0C47  00CA               	movwf	(_lcd_disp_param$2750+1)^(0+640)
 10352                           
 10353                           ;disp_param.c: 51:     sprintf(lcdbuff,"AUX:%s HPF:%s", lcd_aux_name[current_direction %
      +                          2], lcd_hpf_fc[current_hpf]);
 10354  0C48  0020               	banksel	_current_hpf
 10355  0C49  086A               	movf	_current_hpf& (0+127),w
 10356  0C4A  0021               	movlb	1	; select bank1
 10357  0C4B  00DA               	movwf	??_lcd_disp_param^(0+128)
 10358  0C4C  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
 10359  0C4D  085A               	movf	??_lcd_disp_param^(0+128),w
 10360  0C4E  0020               	movlb	0	; select bank0
 10361  0C4F  00A9               	movwf	___wmul@multiplier
 10362  0C50  0021               	movlb	1	; select bank1
 10363  0C51  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10364  0C52  0020               	movlb	0	; select bank0
 10365  0C53  00AA               	movwf	___wmul@multiplier+1
 10366  0C54  3007               	movlw	7
 10367  0C55  00AB               	movwf	___wmul@multiplicand
 10368  0C56  3000               	movlw	0
 10369  0C57  00AC               	movwf	___wmul@multiplicand+1
 10370  0C58  319A  226E  318B   	fcall	___wmul
 10371  0C5B  3000               	movlw	low (_lcd_hpf_fc| (0+32768))
 10372  0C5C  0021               	movlb	1	; select bank1
 10373  0C5D  00DC               	movwf	(??_lcd_disp_param+2)^(0+128)
 10374  0C5E  30A0               	movlw	high (_lcd_hpf_fc| (0+32768))
 10375  0C5F  00DD               	movwf	((??_lcd_disp_param+2)^(0+128)+1)
 10376  0C60  0020               	movlb	0	; select bank0
 10377  0C61  0829               	movf	?___wmul,w
 10378  0C62  0021               	movlb	1	; select bank1
 10379  0C63  075C               	addwf	(??_lcd_disp_param+2)^(0+128),w
 10380  0C64  0025               	movlb	5	; select bank5
 10381  0C65  00C0               	movwf	_lcd_disp_param$2751^(0+640)
 10382  0C66  0020               	movlb	0	; select bank0
 10383  0C67  082A               	movf	?___wmul+1,w
 10384  0C68  0021               	movlb	1	; select bank1
 10385  0C69  3D5D               	addwfc	(??_lcd_disp_param+3)^(0+128),w
 10386  0C6A  0025               	movlb	5	; select bank5
 10387  0C6B  00C1               	movwf	(_lcd_disp_param$2751+1)^(0+640)
 10388                           
 10389                           ;disp_param.c: 51:     sprintf(lcdbuff,"AUX:%s HPF:%s", lcd_aux_name[current_direction %
      +                          2], lcd_hpf_fc[current_hpf]);
 10390  0C6C  3020               	movlw	low _lcdbuff
 10391  0C6D  0021               	movlb	1	; select bank1
 10392  0C6E  00C0               	movwf	sprintf@s^(0+128)
 10393  0C6F  3003               	movlw	high _lcdbuff
 10394  0C70  00C1               	movwf	(sprintf@s^(0+128)+1)
 10395  0C71  3045               	movlw	low (STR_34| (0+32768))
 10396  0C72  00C2               	movwf	sprintf@fmt^(0+128)
 10397  0C73  30A8               	movlw	high (STR_34| (0+32768))
 10398  0C74  00C3               	movwf	(sprintf@fmt^(0+128)+1)
 10399  0C75  0025               	movlb	5	; select bank5
 10400  0C76  084A               	movf	(_lcd_disp_param$2750+1)^(0+640),w
 10401  0C77  0021               	movlb	1	; select bank1
 10402  0C78  00C5               	movwf	((low ((?_sprintf| 0+4))+1))^(0+128)
 10403  0C79  0025               	movlb	5	; select bank5
 10404  0C7A  0849               	movf	_lcd_disp_param$2750^(0+640),w
 10405  0C7B  0021               	movlb	1	; select bank1
 10406  0C7C  00C4               	movwf	(low ((?_sprintf| 0+4)))^(0+128)
 10407  0C7D  0025               	movlb	5	; select bank5
 10408  0C7E  0841               	movf	(_lcd_disp_param$2751+1)^(0+640),w
 10409  0C7F  0021               	movlb	1	; select bank1
 10410  0C80  00C7               	movwf	((low ((?_sprintf| 0+6))+1))^(0+128)
 10411  0C81  0025               	movlb	5	; select bank5
 10412  0C82  0840               	movf	_lcd_disp_param$2751^(0+640),w
 10413  0C83  0021               	movlb	1	; select bank1
 10414  0C84  00C6               	movwf	(low ((?_sprintf| 0+6)))^(0+128)
 10415  0C85  319B  2342  318B   	fcall	_sprintf
 10416                           
 10417                           ;disp_param.c: 52:     i2c_lcd_puts(lcdbuff);
 10418  0C88  3020               	movlw	low _lcdbuff
 10419  0C89  0020               	movlb	0	; select bank0
 10420  0C8A  00B7               	movwf	i2c_lcd_puts@s
 10421  0C8B  3003               	movlw	high _lcdbuff
 10422  0C8C  00B8               	movwf	i2c_lcd_puts@s+1
 10423  0C8D  3199  2130  318B   	fcall	_i2c_lcd_puts
 10424                           
 10425                           ;disp_param.c: 54:     pfspo = i2c_read1ByteRegister(0x40, 0x38);
 10426  0C90  3038               	movlw	56
 10427  0C91  0021               	movlb	1	; select bank1
 10428  0C92  00DA               	movwf	??_lcd_disp_param^(0+128)
 10429  0C93  085A               	movf	??_lcd_disp_param^(0+128),w
 10430  0C94  0020               	movlb	0	; select bank0
 10431  0C95  00AC               	movwf	i2c_read1ByteRegister@reg
 10432  0C96  3040               	movlw	64
 10433  0C97  319D  259F  318B   	fcall	_i2c_read1ByteRegister
 10434  0C9A  0021               	movlb	1	; select bank1
 10435  0C9B  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
 10436  0C9C  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10437  0C9D  0025               	movlb	5	; select bank5
 10438  0C9E  00C2               	movwf	lcd_disp_param@pfspo^(0+640)
 10439                           
 10440                           ;disp_param.c: 55:     i2c_lcd_set_cursor_pos(0, 2);
 10441  0C9F  3002               	movlw	2
 10442  0CA0  0021               	movlb	1	; select bank1
 10443  0CA1  00DA               	movwf	??_lcd_disp_param^(0+128)
 10444  0CA2  085A               	movf	??_lcd_disp_param^(0+128),w
 10445  0CA3  0020               	movlb	0	; select bank0
 10446  0CA4  00B7               	movwf	i2c_lcd_set_cursor_pos@line
 10447  0CA5  3000               	movlw	0
 10448  0CA6  319D  252B  318B   	fcall	_i2c_lcd_set_cursor_pos
 10449                           
 10450                           ;disp_param.c: 56:     sprintf(lcdbuff,"VOL:%3d BAL:%2d %s",current_volume, (signed char
      +                          )current_balance, lcd_fs_name[(0x0F &pfspo)]);
 10451  0CA9  0025               	movlb	5	; select bank5
 10452  0CAA  0842               	movf	lcd_disp_param@pfspo^(0+640),w
 10453  0CAB  390F               	andlw	15
 10454  0CAC  0021               	movlb	1	; select bank1
 10455  0CAD  00DA               	movwf	??_lcd_disp_param^(0+128)
 10456  0CAE  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
 10457  0CAF  085A               	movf	??_lcd_disp_param^(0+128),w
 10458  0CB0  0020               	movlb	0	; select bank0
 10459  0CB1  00A9               	movwf	___wmul@multiplier
 10460  0CB2  0021               	movlb	1	; select bank1
 10461  0CB3  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10462  0CB4  0020               	movlb	0	; select bank0
 10463  0CB5  00AA               	movwf	___wmul@multiplier+1
 10464  0CB6  3007               	movlw	7
 10465  0CB7  00AB               	movwf	___wmul@multiplicand
 10466  0CB8  3000               	movlw	0
 10467  0CB9  00AC               	movwf	___wmul@multiplicand+1
 10468  0CBA  319A  226E  318B   	fcall	___wmul
 10469  0CBD  3000               	movlw	low (_lcd_fs_name| (0+32768))
 10470  0CBE  0021               	movlb	1	; select bank1
 10471  0CBF  00DC               	movwf	(??_lcd_disp_param+2)^(0+128)
 10472  0CC0  3098               	movlw	high (_lcd_fs_name| (0+32768))
 10473  0CC1  00DD               	movwf	((??_lcd_disp_param+2)^(0+128)+1)
 10474  0CC2  0020               	movlb	0	; select bank0
 10475  0CC3  0829               	movf	?___wmul,w
 10476  0CC4  0021               	movlb	1	; select bank1
 10477  0CC5  075C               	addwf	(??_lcd_disp_param+2)^(0+128),w
 10478  0CC6  0025               	movlb	5	; select bank5
 10479  0CC7  00C9               	movwf	_lcd_disp_param$2750^(0+640)
 10480  0CC8  0020               	movlb	0	; select bank0
 10481  0CC9  082A               	movf	?___wmul+1,w
 10482  0CCA  0021               	movlb	1	; select bank1
 10483  0CCB  3D5D               	addwfc	(??_lcd_disp_param+3)^(0+128),w
 10484  0CCC  0025               	movlb	5	; select bank5
 10485  0CCD  00CA               	movwf	(_lcd_disp_param$2750+1)^(0+640)
 10486                           
 10487                           ;disp_param.c: 56:     sprintf(lcdbuff,"VOL:%3d BAL:%2d %s",current_volume, (signed char
      +                          )current_balance, lcd_fs_name[(0x0F &pfspo)]);
 10488  0CCE  3020               	movlw	low _lcdbuff
 10489  0CCF  0021               	movlb	1	; select bank1
 10490  0CD0  00C0               	movwf	sprintf@s^(0+128)
 10491  0CD1  3003               	movlw	high _lcdbuff
 10492  0CD2  00C1               	movwf	(sprintf@s^(0+128)+1)
 10493  0CD3  3014               	movlw	low (STR_35| (0+32768))
 10494  0CD4  00C2               	movwf	sprintf@fmt^(0+128)
 10495  0CD5  30A8               	movlw	high (STR_35| (0+32768))
 10496  0CD6  00C3               	movwf	(sprintf@fmt^(0+128)+1)
 10497  0CD7  0020               	banksel	_current_volume
 10498  0CD8  086C               	movf	_current_volume& (0+127),w
 10499  0CD9  0021               	movlb	1	; select bank1
 10500  0CDA  00DA               	movwf	??_lcd_disp_param^(0+128)
 10501  0CDB  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
 10502  0CDC  085A               	movf	??_lcd_disp_param^(0+128),w
 10503  0CDD  00C4               	movwf	(?_sprintf^(0+128)+4)
 10504  0CDE  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10505  0CDF  00C5               	movwf	((?_sprintf+1)^(0+128)+4)
 10506  0CE0  0020               	banksel	_current_balance
 10507  0CE1  086B               	movf	_current_balance& (0+127),w
 10508  0CE2  0021               	movlb	1	; select bank1
 10509  0CE3  00C6               	movwf	(?_sprintf^(0+128)+6)
 10510  0CE4  01C7               	clrf	((?_sprintf+1)^(0+128)+6)
 10511  0CE5  1BC6               	btfsc	(?_sprintf^(0+128)+6),7
 10512  0CE6  03C7               	decf	((?_sprintf+1)^(0+128)+6),f
 10513  0CE7  0025               	movlb	5	; select bank5
 10514  0CE8  084A               	movf	(_lcd_disp_param$2750+1)^(0+640),w
 10515  0CE9  0021               	movlb	1	; select bank1
 10516  0CEA  00C9               	movwf	((low ((?_sprintf| 0+8))+1))^(0+128)
 10517  0CEB  0025               	movlb	5	; select bank5
 10518  0CEC  0849               	movf	_lcd_disp_param$2750^(0+640),w
 10519  0CED  0021               	movlb	1	; select bank1
 10520  0CEE  00C8               	movwf	(low ((?_sprintf| 0+8)))^(0+128)
 10521  0CEF  319B  2342  318B   	fcall	_sprintf
 10522                           
 10523                           ;disp_param.c: 57:     i2c_lcd_puts(lcdbuff);
 10524  0CF2  3020               	movlw	low _lcdbuff
 10525  0CF3  0020               	movlb	0	; select bank0
 10526  0CF4  00B7               	movwf	i2c_lcd_puts@s
 10527  0CF5  3003               	movlw	high _lcdbuff
 10528  0CF6  00B8               	movwf	i2c_lcd_puts@s+1
 10529  0CF7  3199  2130  318B   	fcall	_i2c_lcd_puts
 10530                           
 10531                           ;disp_param.c: 59:     ocdc = i2c_read1ByteRegister(0x6a, 0x10);
 10532  0CFA  3010               	movlw	16
 10533  0CFB  0021               	movlb	1	; select bank1
 10534  0CFC  00DA               	movwf	??_lcd_disp_param^(0+128)
 10535  0CFD  085A               	movf	??_lcd_disp_param^(0+128),w
 10536  0CFE  0020               	movlb	0	; select bank0
 10537  0CFF  00AC               	movwf	i2c_read1ByteRegister@reg
 10538  0D00  306A               	movlw	106
 10539  0D01  319D  259F  318B   	fcall	_i2c_read1ByteRegister
 10540  0D04  0021               	movlb	1	; select bank1
 10541  0D05  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
 10542  0D06  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10543  0D07  0025               	movlb	5	; select bank5
 10544  0D08  00C3               	movwf	lcd_disp_param@ocdc^(0+640)
 10545                           
 10546                           ;disp_param.c: 60:     otwarn = i2c_read1ByteRegister(0x6a, 0x13);
 10547  0D09  3013               	movlw	19
 10548  0D0A  0021               	movlb	1	; select bank1
 10549  0D0B  00DA               	movwf	??_lcd_disp_param^(0+128)
 10550  0D0C  085A               	movf	??_lcd_disp_param^(0+128),w
 10551  0D0D  0020               	movlb	0	; select bank0
 10552  0D0E  00AC               	movwf	i2c_read1ByteRegister@reg
 10553  0D0F  306A               	movlw	106
 10554  0D10  319D  259F  318B   	fcall	_i2c_read1ByteRegister
 10555  0D13  0021               	movlb	1	; select bank1
 10556  0D14  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
 10557  0D15  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10558  0D16  0025               	movlb	5	; select bank5
 10559  0D17  00C5               	movwf	lcd_disp_param@otwarn^(0+640)
 10560                           
 10561                           ;disp_param.c: 61:     clip = i2c_read1ByteRegister(0x6a, 0x24);
 10562  0D18  3024               	movlw	36
 10563  0D19  0021               	movlb	1	; select bank1
 10564  0D1A  00DA               	movwf	??_lcd_disp_param^(0+128)
 10565  0D1B  085A               	movf	??_lcd_disp_param^(0+128),w
 10566  0D1C  0020               	movlb	0	; select bank0
 10567  0D1D  00AC               	movwf	i2c_read1ByteRegister@reg
 10568  0D1E  306A               	movlw	106
 10569  0D1F  319D  259F  318B   	fcall	_i2c_read1ByteRegister
 10570  0D22  0021               	movlb	1	; select bank1
 10571  0D23  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
 10572  0D24  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10573  0D25  0025               	movlb	5	; select bank5
 10574  0D26  00C6               	movwf	lcd_disp_param@clip^(0+640)
 10575                           
 10576                           ;disp_param.c: 62:     ilim = i2c_read1ByteRegister(0x6a, 0x25);
 10577  0D27  3025               	movlw	37
 10578  0D28  0021               	movlb	1	; select bank1
 10579  0D29  00DA               	movwf	??_lcd_disp_param^(0+128)
 10580  0D2A  085A               	movf	??_lcd_disp_param^(0+128),w
 10581  0D2B  0020               	movlb	0	; select bank0
 10582  0D2C  00AC               	movwf	i2c_read1ByteRegister@reg
 10583  0D2D  306A               	movlw	106
 10584  0D2E  319D  259F  318B   	fcall	_i2c_read1ByteRegister
 10585  0D31  0021               	movlb	1	; select bank1
 10586  0D32  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
 10587  0D33  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10588  0D34  0025               	movlb	5	; select bank5
 10589  0D35  00C7               	movwf	lcd_disp_param@ilim^(0+640)
 10590                           
 10591                           ;disp_param.c: 63:     otshut = i2c_read1ByteRegister(0x6a, 0x12);
 10592  0D36  3012               	movlw	18
 10593  0D37  0021               	movlb	1	; select bank1
 10594  0D38  00DA               	movwf	??_lcd_disp_param^(0+128)
 10595  0D39  085A               	movf	??_lcd_disp_param^(0+128),w
 10596  0D3A  0020               	movlb	0	; select bank0
 10597  0D3B  00AC               	movwf	i2c_read1ByteRegister@reg
 10598  0D3C  306A               	movlw	106
 10599  0D3D  319D  259F  318B   	fcall	_i2c_read1ByteRegister
 10600  0D40  0021               	movlb	1	; select bank1
 10601  0D41  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
 10602  0D42  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10603  0D43  0025               	movlb	5	; select bank5
 10604  0D44  00C4               	movwf	lcd_disp_param@otshut^(0+640)
 10605                           
 10606                           ;disp_param.c: 64:     prail = i2c_read1ByteRegister(0x6a, 0x11);
 10607  0D45  3011               	movlw	17
 10608  0D46  0021               	movlb	1	; select bank1
 10609  0D47  00DA               	movwf	??_lcd_disp_param^(0+128)
 10610  0D48  085A               	movf	??_lcd_disp_param^(0+128),w
 10611  0D49  0020               	movlb	0	; select bank0
 10612  0D4A  00AC               	movwf	i2c_read1ByteRegister@reg
 10613  0D4B  306A               	movlw	106
 10614  0D4C  319D  259F  318B   	fcall	_i2c_read1ByteRegister
 10615  0D4F  0021               	movlb	1	; select bank1
 10616  0D50  00DB               	movwf	(??_lcd_disp_param+1)^(0+128)
 10617  0D51  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10618  0D52  0025               	movlb	5	; select bank5
 10619  0D53  00C8               	movwf	lcd_disp_param@prail^(0+640)
 10620                           
 10621                           ;disp_param.c: 65:  i2c_lcd_set_cursor_pos(0, 3);
 10622  0D54  3003               	movlw	3
 10623  0D55  0021               	movlb	1	; select bank1
 10624  0D56  00DA               	movwf	??_lcd_disp_param^(0+128)
 10625  0D57  085A               	movf	??_lcd_disp_param^(0+128),w
 10626  0D58  0020               	movlb	0	; select bank0
 10627  0D59  00B7               	movwf	i2c_lcd_set_cursor_pos@line
 10628  0D5A  3000               	movlw	0
 10629  0D5B  319D  252B  318B   	fcall	_i2c_lcd_set_cursor_pos
 10630                           
 10631                           ;disp_param.c: 66:     sprintf(lcdbuff,"WAR:%02X %02X %02X %02X %02X%02X",ocdc, otshut, 
      +                          otwarn,clip,ilim,prail);
 10632  0D5E  3020               	movlw	low _lcdbuff
 10633  0D5F  0021               	movlb	1	; select bank1
 10634  0D60  00C0               	movwf	sprintf@s^(0+128)
 10635  0D61  3003               	movlw	high _lcdbuff
 10636  0D62  00C1               	movwf	(sprintf@s^(0+128)+1)
 10637  0D63  308C               	movlw	low (STR_36| (0+32768))
 10638  0D64  00C2               	movwf	sprintf@fmt^(0+128)
 10639  0D65  30A0               	movlw	high (STR_36| (0+32768))
 10640  0D66  00C3               	movwf	(sprintf@fmt^(0+128)+1)
 10641  0D67  0025               	movlb	5	; select bank5
 10642  0D68  0843               	movf	lcd_disp_param@ocdc^(0+640),w
 10643  0D69  0021               	movlb	1	; select bank1
 10644  0D6A  00DA               	movwf	??_lcd_disp_param^(0+128)
 10645  0D6B  01DB               	clrf	(??_lcd_disp_param^(0+128)+1)
 10646  0D6C  085A               	movf	??_lcd_disp_param^(0+128),w
 10647  0D6D  00C4               	movwf	(?_sprintf^(0+128)+4)
 10648  0D6E  085B               	movf	(??_lcd_disp_param+1)^(0+128),w
 10649  0D6F  00C5               	movwf	((?_sprintf+1)^(0+128)+4)
 10650  0D70  0025               	movlb	5	; select bank5
 10651  0D71  0844               	movf	lcd_disp_param@otshut^(0+640),w
 10652  0D72  0021               	movlb	1	; select bank1
 10653  0D73  00DC               	movwf	(??_lcd_disp_param+2)^(0+128)
 10654  0D74  01DD               	clrf	((??_lcd_disp_param+2)^(0+128)+1)
 10655  0D75  085C               	movf	(??_lcd_disp_param+2)^(0+128),w
 10656  0D76  00C6               	movwf	(?_sprintf^(0+128)+6)
 10657  0D77  085D               	movf	(??_lcd_disp_param+3)^(0+128),w
 10658  0D78  00C7               	movwf	((?_sprintf+1)^(0+128)+6)
 10659  0D79  0025               	movlb	5	; select bank5
 10660  0D7A  0845               	movf	lcd_disp_param@otwarn^(0+640),w
 10661  0D7B  0021               	movlb	1	; select bank1
 10662  0D7C  00DE               	movwf	(??_lcd_disp_param+4)^(0+128)
 10663  0D7D  01DF               	clrf	((??_lcd_disp_param+4)^(0+128)+1)
 10664  0D7E  085E               	movf	(??_lcd_disp_param+4)^(0+128),w
 10665  0D7F  00C8               	movwf	(?_sprintf^(0+128)+8)
 10666  0D80  085F               	movf	(??_lcd_disp_param+5)^(0+128),w
 10667  0D81  00C9               	movwf	((?_sprintf+1)^(0+128)+8)
 10668  0D82  0025               	movlb	5	; select bank5
 10669  0D83  0846               	movf	lcd_disp_param@clip^(0+640),w
 10670  0D84  0021               	movlb	1	; select bank1
 10671  0D85  00E0               	movwf	(??_lcd_disp_param+6)^(0+128)
 10672  0D86  01E1               	clrf	((??_lcd_disp_param+6)^(0+128)+1)
 10673  0D87  0860               	movf	(??_lcd_disp_param+6)^(0+128),w
 10674  0D88  00CA               	movwf	(?_sprintf^(0+128)+10)
 10675  0D89  0861               	movf	(??_lcd_disp_param+7)^(0+128),w
 10676  0D8A  00CB               	movwf	((?_sprintf+1)^(0+128)+10)
 10677  0D8B  0025               	movlb	5	; select bank5
 10678  0D8C  0847               	movf	lcd_disp_param@ilim^(0+640),w
 10679  0D8D  0021               	movlb	1	; select bank1
 10680  0D8E  00E2               	movwf	(??_lcd_disp_param+8)^(0+128)
 10681  0D8F  01E3               	clrf	((??_lcd_disp_param+8)^(0+128)+1)
 10682  0D90  0862               	movf	(??_lcd_disp_param+8)^(0+128),w
 10683  0D91  00CC               	movwf	(?_sprintf^(0+128)+12)
 10684  0D92  0863               	movf	(??_lcd_disp_param+9)^(0+128),w
 10685  0D93  00CD               	movwf	((?_sprintf+1)^(0+128)+12)
 10686  0D94  0025               	movlb	5	; select bank5
 10687  0D95  0848               	movf	lcd_disp_param@prail^(0+640),w
 10688  0D96  0021               	movlb	1	; select bank1
 10689  0D97  00E4               	movwf	(??_lcd_disp_param+10)^(0+128)
 10690  0D98  01E5               	clrf	((??_lcd_disp_param+10)^(0+128)+1)
 10691  0D99  0864               	movf	(??_lcd_disp_param+10)^(0+128),w
 10692  0D9A  00CE               	movwf	(?_sprintf^(0+128)+14)
 10693  0D9B  0865               	movf	(??_lcd_disp_param+11)^(0+128),w
 10694  0D9C  00CF               	movwf	((?_sprintf+1)^(0+128)+14)
 10695  0D9D  319B  2342  318B   	fcall	_sprintf
 10696                           
 10697                           ;disp_param.c: 67:     i2c_lcd_puts(lcdbuff);
 10698  0DA0  3020               	movlw	low _lcdbuff
 10699  0DA1  0020               	movlb	0	; select bank0
 10700  0DA2  00B7               	movwf	i2c_lcd_puts@s
 10701  0DA3  3003               	movlw	high _lcdbuff
 10702  0DA4  00B8               	movwf	i2c_lcd_puts@s+1
 10703  0DA5  3199  2130         	fcall	_i2c_lcd_puts
 10704  0DA7  0008               	return
 10705  0DA8                     __end_of_lcd_disp_param:
 10706                           
 10707                           	psect	text11
 10708  1B42                     __ptext11:	
 10709 ;; *************** function _sprintf *****************
 10710 ;; Defined at:
 10711 ;;		line 9 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/nf_sprintf.c"
 10712 ;; Parameters:    Size  Location     Type
 10713 ;;  s               2   32[BANK1 ] PTR unsigned char 
 10714 ;;		 -> lcdbuff(0), lcdbuff(41), ledstr(0), ledbuff(0), 
 10715 ;;  fmt             2   34[BANK1 ] PTR const unsigned char 
 10716 ;;		 -> STR_36(33), STR_35(19), STR_34(14), STR_33(10), 
 10717 ;;		 -> STR_20(5), STR_19(5), STR_13(20), STR_11(4), 
 10718 ;;		 -> STR_8(4), STR_5(4), STR_2(4), 
 10719 ;; Auto vars:     Size  Location     Type
 10720 ;;  f               6   52[BANK1 ] struct _IO_FILE
 10721 ;;  ret             2    0        int 
 10722 ;;  ap              1   51[BANK1 ] PTR void [1]
 10723 ;;		 -> ?_sprintf(2), 
 10724 ;; Return value:  Size  Location     Type
 10725 ;;                  2   32[BANK1 ] int 
 10726 ;; Registers used:
 10727 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10728 ;; Tracked objects:
 10729 ;;		On entry : 1F/1
 10730 ;;		On exit  : 1F/1
 10731 ;;		Unchanged: 0/0
 10732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10733 ;;      Params:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10734 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10735 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10736 ;;      Totals:         0       0      26       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10737 ;;Total ram usage:       26 bytes
 10738 ;; Hardware stack levels used:    1
 10739 ;; Hardware stack levels required when called:   14
 10740 ;; This function calls:
 10741 ;;		_vfprintf
 10742 ;; This function is called by:
 10743 ;;		_set_gainstr
 10744 ;;		_show_uolstr
 10745 ;;		_main
 10746 ;;		_lcd_disp_param
 10747 ;; This function uses a non-reentrant model
 10748 ;;
 10749                           
 10750                           
 10751                           ;psect for function _sprintf
 10752  1B42                     _sprintf:
 10753                           
 10754                           ;incstack = 0
 10755                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10756  1B42  30C4               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
 10757  1B43  00D0               	movwf	??_sprintf^(0+128)
 10758  1B44  0850               	movf	??_sprintf^(0+128),w
 10759  1B45  00D3               	movwf	sprintf@ap^(0+128)
 10760  1B46  0841               	movf	(sprintf@s+1)^(0+128),w
 10761  1B47  00D5               	movwf	(sprintf@f+1)^(0+128)
 10762  1B48  0840               	movf	sprintf@s^(0+128),w
 10763  1B49  00D4               	movwf	sprintf@f^(0+128)
 10764  1B4A  01D6               	clrf	(sprintf@f^(0+128)+2)
 10765  1B4B  01D7               	clrf	((sprintf@f+1)^(0+128)+2)
 10766  1B4C  01D8               	clrf	(sprintf@f^(0+128)+4)
 10767  1B4D  01D9               	clrf	((sprintf@f+1)^(0+128)+4)
 10768  1B4E  0843               	movf	(sprintf@fmt+1)^(0+128),w
 10769  1B4F  00B9               	movwf	(vfprintf@fmt+1)^(0+128)
 10770  1B50  0842               	movf	sprintf@fmt^(0+128),w
 10771  1B51  00B8               	movwf	vfprintf@fmt^(0+128)
 10772  1B52  30D3               	movlw	(low (sprintf@ap| 0))& (0+255)
 10773  1B53  00D0               	movwf	??_sprintf^(0+128)
 10774  1B54  0850               	movf	??_sprintf^(0+128),w
 10775  1B55  00BA               	movwf	vfprintf@ap^(0+128)
 10776  1B56  30D4               	movlw	(low (sprintf@f| 0))& (0+255)
 10777  1B57  319C  24FA         	fcall	_vfprintf
 10778  1B59  3002               	movlw	2
 10779  1B5A  3ED4               	addlw	(low (sprintf@f| 0))& (0+255)
 10780  1B5B  0086               	movwf	6
 10781  1B5C  0187               	clrf	7
 10782  1B5D  3F40               	moviw [0]fsr1
 10783  1B5E  0740               	addwf	sprintf@s^(0+128),w
 10784  1B5F  0084               	movwf	4
 10785  1B60  3F41               	moviw [1]fsr1
 10786  1B61  3D41               	addwfc	(sprintf@s+1)^(0+128),w
 10787  1B62  0085               	movwf	5
 10788  1B63  0180               	clrf	0
 10789  1B64  0008               	return
 10790  1B65                     __end_of_sprintf:
 10791                           
 10792                           	psect	text12
 10793  1CFA                     __ptext12:	
 10794 ;; *************** function _vfprintf *****************
 10795 ;; Defined at:
 10796 ;;		line 1390 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 10797 ;; Parameters:    Size  Location     Type
 10798 ;;  fp              1    wreg     PTR struct _IO_FILE
 10799 ;;		 -> sprintf@f(6), 
 10800 ;;  fmt             2   24[BANK1 ] PTR const unsigned char 
 10801 ;;		 -> STR_36(33), STR_35(19), STR_34(14), STR_33(10), 
 10802 ;;		 -> STR_20(5), STR_19(5), STR_13(20), STR_11(4), 
 10803 ;;		 -> STR_8(4), STR_5(4), STR_2(4), 
 10804 ;;  ap              1   26[BANK1 ] PTR PTR void 
 10805 ;;		 -> sprintf@ap(1), 
 10806 ;; Auto vars:     Size  Location     Type
 10807 ;;  fp              1   29[BANK1 ] PTR struct _IO_FILE
 10808 ;;		 -> sprintf@f(6), 
 10809 ;;  cfmt            2   30[BANK1 ] PTR unsigned char 
 10810 ;;		 -> STR_36(33), STR_35(19), STR_34(14), STR_33(10), 
 10811 ;;		 -> STR_20(5), STR_19(5), STR_13(20), STR_11(4), 
 10812 ;;		 -> STR_8(4), STR_5(4), STR_2(4), 
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  2   24[BANK1 ] int 
 10815 ;; Registers used:
 10816 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 1F/1
 10819 ;;		On exit  : 1F/1
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10822 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10823 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10824 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10825 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10826 ;;Total ram usage:        8 bytes
 10827 ;; Hardware stack levels used:    1
 10828 ;; Hardware stack levels required when called:   13
 10829 ;; This function calls:
 10830 ;;		_vfpfcnvrt
 10831 ;; This function is called by:
 10832 ;;		_sprintf
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           
 10836                           
 10837                           ;psect for function _vfprintf
 10838  1CFA                     _vfprintf:
 10839                           
 10840                           ;incstack = 0
 10841                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10842                           ;vfprintf@fp stored from wreg
 10843  1CFA  00BD               	movwf	vfprintf@fp^(0+128)
 10844                           
 10845                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(F
      +                          ILE *fp, const char *fmt, va_list ap);/Applications/microchip/xc8/v2.30/pic/sources/c99/
      +                          common/doprnt.c: 1391: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt
      +                          .c: 1393:     char *cfmt;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprn
      +                          t.c: 1395:     cfmt = (char *)fmt;
 10846  1CFB  0839               	movf	(vfprintf@fmt+1)^(0+128),w
 10847  1CFC  00BF               	movwf	(vfprintf@cfmt+1)^(0+128)
 10848  1CFD  0838               	movf	vfprintf@fmt^(0+128),w
 10849  1CFE  00BE               	movwf	vfprintf@cfmt^(0+128)
 10850                           
 10851                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
 10852  1CFF  0023               	movlb	3	; select bank3
 10853  1D00  01EB               	clrf	_nout^(0+384)
 10854  1D01  01EC               	clrf	(_nout+1)^(0+384)
 10855  1D02                     l7729:	
 10856                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
 10857                           
 10858                           
 10859                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1397:     while (*cf
      +                          mt) {
 10860  1D02  0021               	movlb	1	; select bank1
 10861  1D03  083E               	movf	vfprintf@cfmt^(0+128),w
 10862  1D04  0084               	movwf	4
 10863  1D05  083F               	movf	(vfprintf@cfmt+1)^(0+128),w
 10864  1D06  0085               	movwf	5
 10865  1D07  0012               	moviw fsr0++
 10866  1D08  1903               	btfsc	3,2
 10867  1D09  2D22               	goto	l7731
 10868                           
 10869                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1398:         nout +
      +                          = vfpfcnvrt(fp, &cfmt, ap);
 10870  1D0A  30BE               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 10871  1D0B  00BB               	movwf	??_vfprintf^(0+128)
 10872  1D0C  083B               	movf	??_vfprintf^(0+128),w
 10873  1D0D  0020               	movlb	0	; select bank0
 10874  1D0E  00E2               	movwf	vfpfcnvrt@fmt
 10875  1D0F  0021               	movlb	1	; select bank1
 10876  1D10  083A               	movf	vfprintf@ap^(0+128),w
 10877  1D11  00BC               	movwf	(??_vfprintf+1)^(0+128)
 10878  1D12  083C               	movf	(??_vfprintf+1)^(0+128),w
 10879  1D13  0020               	movlb	0	; select bank0
 10880  1D14  00E3               	movwf	vfpfcnvrt@ap
 10881  1D15  0021               	movlb	1	; select bank1
 10882  1D16  083D               	movf	vfprintf@fp^(0+128),w
 10883  1D17  318D  25A8  319C   	fcall	_vfpfcnvrt
 10884  1D1A  0862               	movf	?_vfpfcnvrt,w
 10885  1D1B  0023               	movlb	3	; select bank3
 10886  1D1C  07EB               	addwf	_nout^(0+384),f
 10887  1D1D  0020               	movlb	0	; select bank0
 10888  1D1E  0863               	movf	?_vfpfcnvrt+1,w
 10889  1D1F  0023               	movlb	3	; select bank3
 10890  1D20  3DEC               	addwfc	(_nout+1)^(0+384),f
 10891  1D21  2D02               	goto	l7729
 10892  1D22                     l7731:
 10893                           
 10894                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1400:     return nou
      +                          t;
 10895  1D22  0023               	movlb	3	; select bank3
 10896  1D23  086C               	movf	(_nout+1)^(0+384),w
 10897  1D24  0021               	movlb	1	; select bank1
 10898  1D25  00B9               	movwf	(?_vfprintf+1)^(0+128)
 10899  1D26  0023               	movlb	3	; select bank3
 10900  1D27  086B               	movf	_nout^(0+384),w
 10901  1D28  0021               	movlb	1	; select bank1
 10902  1D29  00B8               	movwf	?_vfprintf^(0+128)
 10903  1D2A  0008               	return
 10904  1D2B                     __end_of_vfprintf:
 10905                           
 10906                           	psect	text13
 10907  0DA8                     __ptext13:	
 10908 ;; *************** function _vfpfcnvrt *****************
 10909 ;; Defined at:
 10910 ;;		line 692 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 10911 ;; Parameters:    Size  Location     Type
 10912 ;;  fp              1    wreg     PTR struct _IO_FILE
 10913 ;;		 -> sprintf@f(6), 
 10914 ;;  fmt             1   66[BANK0 ] PTR PTR unsigned char 
 10915 ;;		 -> vfprintf@cfmt(2), 
 10916 ;;  ap              1   67[BANK0 ] PTR PTR void 
 10917 ;;		 -> sprintf@ap(1), 
 10918 ;; Auto vars:     Size  Location     Type
 10919 ;;  fp              1   23[BANK1 ] PTR struct _IO_FILE
 10920 ;;		 -> sprintf@f(6), 
 10921 ;;  llu             8    8[BANK1 ] unsigned long long 
 10922 ;;  ll              8    0[BANK1 ] long long 
 10923 ;;  f               4    0        long long 
 10924 ;;  ct              3    0        unsigned char [3]
 10925 ;;  done            2   19[BANK1 ] int 
 10926 ;;  cp              2   16[BANK1 ] PTR unsigned char 
 10927 ;;		 -> ?_sprintf(2), lcd_fs_name(112), lcd_hpf_fc(63), lcd_aux_name(14), 
 10928 ;;		 -> lcd_src_name(40), 
 10929 ;;  vp              2    0        PTR void 
 10930 ;;  i               2    0        int 
 10931 ;;  c               1   18[BANK1 ] unsigned char 
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  2   66[BANK0 ] int 
 10934 ;; Registers used:
 10935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10936 ;; Tracked objects:
 10937 ;;		On entry : 1F/1
 10938 ;;		On exit  : 1F/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10941 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10942 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10943 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10944 ;;      Totals:         0       8      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10945 ;;Total ram usage:       32 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:   12
 10948 ;; This function calls:
 10949 ;;		_atoi
 10950 ;;		_dtoa
 10951 ;;		_fputc
 10952 ;;		_isdigit
 10953 ;;		_stoa
 10954 ;;		_xtoa
 10955 ;; This function is called by:
 10956 ;;		_vfprintf
 10957 ;; This function uses a non-reentrant model
 10958 ;;
 10959                           
 10960                           
 10961                           ;psect for function _vfpfcnvrt
 10962  0DA8                     _vfpfcnvrt:
 10963                           
 10964                           ;incstack = 0
 10965                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10966                           ;vfpfcnvrt@fp stored from wreg
 10967  0DA8  00B7               	movwf	vfpfcnvrt@fp^(0+128)
 10968                           
 10969                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 692: static int vfpf
      +                          cnvrt(FILE *fp, char *fmt[], va_list ap);/Applications/microchip/xc8/v2.30/pic/sources/c
      +                          99/common/doprnt.c: 693: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/dopr
      +                          nt.c: 694:     char c, *cp, ct[3];;/Applications/microchip/xc8/v2.30/pic/sources/c99/com
      +                          mon/doprnt.c: 695:     int done, i;;/Applications/microchip/xc8/v2.30/pic/sources/c99/co
      +                          mmon/doprnt.c: 696:     long long ll;;/Applications/microchip/xc8/v2.30/pic/sources/c99/
      +                          common/doprnt.c: 697:     unsigned long long llu;
 10970  0DA9  0020               	movlb	0	; select bank0
 10971  0DAA  0862               	movf	vfpfcnvrt@fmt,w
 10972  0DAB  0086               	movwf	6
 10973  0DAC  0187               	clrf	7
 10974  0DAD  3F40               	moviw [0]fsr1
 10975  0DAE  00E4               	movwf	??_vfpfcnvrt
 10976  0DAF  3F41               	moviw [1]fsr1
 10977  0DB0  00E5               	movwf	??_vfpfcnvrt+1
 10978  0DB1  0864               	movf	??_vfpfcnvrt,w
 10979  0DB2  0084               	movwf	4
 10980  0DB3  0865               	movf	??_vfpfcnvrt+1,w
 10981  0DB4  0085               	movwf	5
 10982  0DB5  0012               	moviw fsr0++
 10983  0DB6  3A25               	xorlw	37
 10984  0DB7  1D03               	btfss	3,2
 10985  0DB8  2FDB               	goto	l7557
 10986                           
 10987                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
 10988  0DB9  0862               	movf	vfpfcnvrt@fmt,w
 10989  0DBA  0086               	movwf	6
 10990  0DBB  0187               	clrf	7
 10991  0DBC  3001               	movlw	1
 10992  0DBD  0781               	addwf	1,f
 10993  0DBE  3141               	addfsr 1,1
 10994  0DBF  1803               	skipnc
 10995  0DC0  0A81               	incf	1,f
 10996                           
 10997                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 705:         flags =
      +                           width = 0;
 10998  0DC1  0022               	movlb	2	; select bank2
 10999  0DC2  01A6               	clrf	_width^(0+256)
 11000  0DC3  01A7               	clrf	(_width+1)^(0+256)
 11001  0DC4  01AA               	clrf	_flags^(0+256)
 11002  0DC5  01AB               	clrf	(_flags+1)^(0+256)
 11003                           
 11004                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 706:         prec = 
      +                          -1;
 11005  0DC6  30FF               	movlw	255
 11006  0DC7  00A8               	movwf	_prec^(0+256)
 11007  0DC8  30FF               	movlw	255
 11008  0DC9  00A9               	movwf	(_prec^(0+256)+1)
 11009                           
 11010                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 710:         done = 
      +                          0;
 11011  0DCA  0021               	movlb	1	; select bank1
 11012  0DCB  01B3               	clrf	vfpfcnvrt@done^(0+128)
 11013  0DCC  01B4               	clrf	(vfpfcnvrt@done+1)^(0+128)
 11014                           
 11015                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 711:         while (
      +                          !done) {
 11016  0DCD  2DEB               	goto	l7479
 11017  0DCE                     l2092:	
 11018                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 713:                
      +                           case '-' :
 11019                           
 11020                           
 11021                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 714:                
      +                               flags |= (1 << 0);
 11022  0DCE  0022               	movlb	2	; select bank2
 11023  0DCF  142A               	bsf	_flags^(0+256),0
 11024  0DD0                     l7463:
 11025                           
 11026                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 715:                
      +                               ++*fmt;
 11027  0DD0  0020               	movlb	0	; select bank0
 11028  0DD1  0862               	movf	vfpfcnvrt@fmt,w
 11029  0DD2  0086               	movwf	6
 11030  0DD3  0187               	clrf	7
 11031  0DD4  3001               	movlw	1
 11032  0DD5  0781               	addwf	1,f
 11033  0DD6  3141               	addfsr 1,1
 11034  0DD7  1803               	skipnc
 11035  0DD8  0A81               	incf	1,f
 11036                           
 11037                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 716:                
      +                               break;
 11038  0DD9  2DEB               	goto	l7479
 11039  0DDA                     l2094:	
 11040                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 717:                
      +                           case '0' :
 11041                           
 11042                           
 11043                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 718:                
      +                               flags |= (1 << 1);
 11044  0DDA  0022               	movlb	2	; select bank2
 11045  0DDB  14AA               	bsf	_flags^(0+256),1
 11046  0DDC  2DD0               	goto	l7463
 11047  0DDD                     l2095:	
 11048                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 721:                
      +                           case '+' :
 11049                           
 11050                           
 11051                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 722:                
      +                               flags |= (1 << 2);
 11052  0DDD  0022               	movlb	2	; select bank2
 11053  0DDE  152A               	bsf	_flags^(0+256),2
 11054  0DDF  2DD0               	goto	l7463
 11055  0DE0                     l2096:	
 11056                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 725:                
      +                           case ' ' :
 11057                           
 11058                           
 11059                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 726:                
      +                               flags |= (1 << 3);
 11060  0DE0  0022               	movlb	2	; select bank2
 11061  0DE1  15AA               	bsf	_flags^(0+256),3
 11062  0DE2  2DD0               	goto	l7463
 11063  0DE3                     l2097:	
 11064                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 729:                
      +                           case '#' :
 11065                           
 11066                           
 11067                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 730:                
      +                               flags |= (1 << 4);
 11068  0DE3  0022               	movlb	2	; select bank2
 11069  0DE4  162A               	bsf	_flags^(0+256),4
 11070  0DE5  2DD0               	goto	l7463
 11071  0DE6                     l7473:
 11072                           
 11073                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 734:                
      +                               done = 1;
 11074  0DE6  3001               	movlw	1
 11075  0DE7  0021               	movlb	1	; select bank1
 11076  0DE8  00B3               	movwf	vfpfcnvrt@done^(0+128)
 11077  0DE9  3000               	movlw	0
 11078  0DEA  00B4               	movwf	(vfpfcnvrt@done^(0+128)+1)
 11079  0DEB                     l7479:	
 11080                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 735:                
      +                               break;
 11081                           
 11082                           
 11083                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 711:         while (
      +                          !done) {
 11084  0DEB  0021               	movlb	1	; select bank1
 11085  0DEC  0833               	movf	vfpfcnvrt@done^(0+128),w
 11086  0DED  0434               	iorwf	(vfpfcnvrt@done+1)^(0+128),w
 11087  0DEE  1D03               	btfss	3,2
 11088  0DEF  2E16               	goto	l2099
 11089  0DF0  0020               	movlb	0	; select bank0
 11090  0DF1  0862               	movf	vfpfcnvrt@fmt,w
 11091  0DF2  0086               	movwf	6
 11092  0DF3  0187               	clrf	7
 11093  0DF4  3F40               	moviw [0]fsr1
 11094  0DF5  00E4               	movwf	??_vfpfcnvrt
 11095  0DF6  3F41               	moviw [1]fsr1
 11096  0DF7  00E5               	movwf	??_vfpfcnvrt+1
 11097  0DF8  0864               	movf	??_vfpfcnvrt,w
 11098  0DF9  0084               	movwf	4
 11099  0DFA  0865               	movf	??_vfpfcnvrt+1,w
 11100  0DFB  0085               	movwf	5
 11101  0DFC  0800               	movf	0,w	;code access
 11102  0DFD  00E6               	movwf	??_vfpfcnvrt+2
 11103  0DFE  01E7               	clrf	??_vfpfcnvrt+3
 11104                           
 11105                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11106                           ; Switch size 1, requested type "simple"
 11107                           ; Number of cases is 1, Range of values is 0 to 0
 11108                           ; switch strategies available:
 11109                           ; Name         Instructions Cycles
 11110                           ; simple_byte            4     3 (average)
 11111                           ; direct_byte            8     6 (fixed)
 11112                           ; jumptable            260     6 (fixed)
 11113                           ;	Chosen strategy is simple_byte
 11114  0DFF  0867               	movf	??_vfpfcnvrt+3,w
 11115  0E00  3A00               	xorlw	0	; case 0
 11116  0E01  1903               	skipnz
 11117  0E02  2E04               	goto	l8681
 11118  0E03  2DE6               	goto	l7473
 11119  0E04                     l8681:
 11120                           
 11121                           ; Switch size 1, requested type "simple"
 11122                           ; Number of cases is 5, Range of values is 32 to 48
 11123                           ; switch strategies available:
 11124                           ; Name         Instructions Cycles
 11125                           ; simple_byte           16     9 (average)
 11126                           ; direct_byte           43     9 (fixed)
 11127                           ; jumptable            263     9 (fixed)
 11128                           ;	Chosen strategy is simple_byte
 11129  0E04  0866               	movf	??_vfpfcnvrt+2,w
 11130  0E05  3A20               	xorlw	32	; case 32
 11131  0E06  1903               	skipnz
 11132  0E07  2DE0               	goto	l2096
 11133  0E08  3A03               	xorlw	3	; case 35
 11134  0E09  1903               	skipnz
 11135  0E0A  2DE3               	goto	l2097
 11136  0E0B  3A08               	xorlw	8	; case 43
 11137  0E0C  1903               	skipnz
 11138  0E0D  2DDD               	goto	l2095
 11139  0E0E  3A06               	xorlw	6	; case 45
 11140  0E0F  1903               	skipnz
 11141  0E10  2DCE               	goto	l2092
 11142  0E11  3A1D               	xorlw	29	; case 48
 11143  0E12  1903               	skipnz
 11144  0E13  2DDA               	goto	l2094
 11145  0E14  2DE6               	goto	l7473
 11146  0E15  2DEB               	goto	l7479
 11147  0E16                     l2099:
 11148                           
 11149                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 738:         if (fla
      +                          gs & (1 << 0)) {
 11150  0E16  0022               	movlb	2	; select bank2
 11151  0E17  1C2A               	btfss	_flags^(0+256),0
 11152  0E18  2E1D               	goto	l7483
 11153                           
 11154                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 739:             fla
      +                          gs &= ~(1 << 1);
 11155  0E19  30FD               	movlw	253
 11156  0E1A  05AA               	andwf	_flags^(0+256),f
 11157  0E1B  30FF               	movlw	255
 11158  0E1C  05AB               	andwf	(_flags+1)^(0+256),f
 11159  0E1D                     l7483:
 11160                           
 11161                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 745:         if ((*f
      +                          mt)[0] == '*') {
 11162  0E1D  0020               	movlb	0	; select bank0
 11163  0E1E  0862               	movf	vfpfcnvrt@fmt,w
 11164  0E1F  0086               	movwf	6
 11165  0E20  0187               	clrf	7
 11166  0E21  3F40               	moviw [0]fsr1
 11167  0E22  00E4               	movwf	??_vfpfcnvrt
 11168  0E23  3F41               	moviw [1]fsr1
 11169  0E24  00E5               	movwf	??_vfpfcnvrt+1
 11170  0E25  0864               	movf	??_vfpfcnvrt,w
 11171  0E26  0084               	movwf	4
 11172  0E27  0865               	movf	??_vfpfcnvrt+1,w
 11173  0E28  0085               	movwf	5
 11174  0E29  0012               	moviw fsr0++
 11175  0E2A  3A2A               	xorlw	42
 11176  0E2B  1D03               	btfss	3,2
 11177  0E2C  2E4B               	goto	l7495
 11178                           
 11179                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 746:             ++*
      +                          fmt;
 11180  0E2D  0862               	movf	vfpfcnvrt@fmt,w
 11181  0E2E  0086               	movwf	6
 11182  0E2F  0187               	clrf	7
 11183  0E30  3001               	movlw	1
 11184  0E31  0781               	addwf	1,f
 11185  0E32  3141               	addfsr 1,1
 11186  0E33  1803               	skipnc
 11187  0E34  0A81               	incf	1,f
 11188                           
 11189                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 747:             wid
      +                          th = (*(int *)__va_arg(*(int **)ap, (int)0));
 11190  0E35  0863               	movf	vfpfcnvrt@ap,w
 11191  0E36  0086               	movwf	6
 11192  0E37  0187               	clrf	7
 11193  0E38  0801               	movf	1,w
 11194  0E39  0084               	movwf	4
 11195  0E3A  0185               	clrf	5
 11196  0E3B  3002               	movlw	2
 11197  0E3C  0781               	addwf	1,f
 11198  0E3D  3F00               	moviw [0]fsr0
 11199  0E3E  0022               	movlb	2	; select bank2
 11200  0E3F  00A6               	movwf	_width^(0+256)
 11201  0E40  3F01               	moviw [1]fsr0
 11202  0E41  00A7               	movwf	(_width+1)^(0+256)
 11203                           
 11204                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 748:             if 
      +                          (width < 0) {
 11205  0E42  1FA7               	btfss	(_width+1)^(0+256),7
 11206  0E43  2E90               	goto	l7505
 11207                           
 11208                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 749:                
      +                           flags |= (1 << 0);
 11209  0E44  142A               	bsf	_flags^(0+256),0
 11210                           
 11211                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 750:                
      +                           width = -width;
 11212  0E45  09A6               	comf	_width^(0+256),f
 11213  0E46  09A7               	comf	(_width+1)^(0+256),f
 11214  0E47  0AA6               	incf	_width^(0+256),f
 11215  0E48  1903               	skipnz
 11216  0E49  0AA7               	incf	(_width+1)^(0+256),f
 11217  0E4A  2E90               	goto	l7505
 11218  0E4B                     l7495:
 11219                           
 11220                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 753:             wid
      +                          th = atoi(*fmt);
 11221  0E4B  0862               	movf	vfpfcnvrt@fmt,w
 11222  0E4C  0086               	movwf	6
 11223  0E4D  0187               	clrf	7
 11224  0E4E  3F40               	moviw [0]fsr1
 11225  0E4F  00AF               	movwf	atoi@s
 11226  0E50  3F41               	moviw [1]fsr1
 11227  0E51  00B0               	movwf	atoi@s+1
 11228  0E52  3193  230C  318D   	fcall	_atoi
 11229  0E55  0830               	movf	?_atoi+1,w
 11230  0E56  0022               	movlb	2	; select bank2
 11231  0E57  00A7               	movwf	(_width+1)^(0+256)
 11232  0E58  0020               	movlb	0	; select bank0
 11233  0E59  082F               	movf	?_atoi,w
 11234  0E5A  0022               	movlb	2	; select bank2
 11235  0E5B  00A6               	movwf	_width^(0+256)
 11236                           
 11237                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 754:             whi
      +                          le ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11238  0E5C  2E66               	goto	l7499
 11239  0E5D                     l7497:
 11240                           
 11241                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 755:                
      +                           ++*fmt;
 11242  0E5D  0020               	movlb	0	; select bank0
 11243  0E5E  0862               	movf	vfpfcnvrt@fmt,w
 11244  0E5F  0086               	movwf	6
 11245  0E60  0187               	clrf	7
 11246  0E61  3001               	movlw	1
 11247  0E62  0781               	addwf	1,f
 11248  0E63  3141               	addfsr 1,1
 11249  0E64  1803               	skipnc
 11250  0E65  0A81               	incf	1,f
 11251  0E66                     l7499:
 11252  0E66  0020               	movlb	0	; select bank0
 11253  0E67  0862               	movf	vfpfcnvrt@fmt,w
 11254  0E68  0086               	movwf	6
 11255  0E69  0187               	clrf	7
 11256  0E6A  3F40               	moviw [0]fsr1
 11257  0E6B  00E4               	movwf	??_vfpfcnvrt
 11258  0E6C  3F41               	moviw [1]fsr1
 11259  0E6D  00E5               	movwf	??_vfpfcnvrt+1
 11260  0E6E  0864               	movf	??_vfpfcnvrt,w
 11261  0E6F  0084               	movwf	4
 11262  0E70  0865               	movf	??_vfpfcnvrt+1,w
 11263  0E71  0085               	movwf	5
 11264  0E72  0800               	movf	0,w	;code access
 11265  0E73  3ED0               	addlw	208
 11266  0E74  00E6               	movwf	??_vfpfcnvrt+2
 11267  0E75  30FF               	movlw	255
 11268  0E76  1803               	skipnc
 11269  0E77  3000               	movlw	0
 11270  0E78  00E7               	movwf	??_vfpfcnvrt+3
 11271  0E79  3000               	movlw	0
 11272  0E7A  0267               	subwf	??_vfpfcnvrt+3,w
 11273  0E7B  300A               	movlw	10
 11274  0E7C  1903               	skipnz
 11275  0E7D  0266               	subwf	??_vfpfcnvrt+2,w
 11276  0E7E  1803               	btfsc	3,0
 11277  0E7F  2E82               	goto	u5540
 11278  0E80  3001               	movlw	1
 11279  0E81  2E83               	goto	u5550
 11280  0E82                     u5540:
 11281  0E82  3000               	movlw	0
 11282  0E83                     u5550:
 11283  0E83  00E8               	movwf	??_vfpfcnvrt+4
 11284  0E84  01E9               	clrf	??_vfpfcnvrt+5
 11285  0E85  0868               	movf	??_vfpfcnvrt+4,w
 11286  0E86  0021               	movlb	1	; select bank1
 11287  0E87  00B5               	movwf	_vfpfcnvrt$2249^(0+128)
 11288  0E88  0020               	movlb	0	; select bank0
 11289  0E89  0869               	movf	??_vfpfcnvrt+5,w
 11290  0E8A  0021               	movlb	1	; select bank1
 11291  0E8B  00B6               	movwf	(_vfpfcnvrt$2249+1)^(0+128)
 11292  0E8C  0835               	movf	_vfpfcnvrt$2249^(0+128),w
 11293  0E8D  0436               	iorwf	(_vfpfcnvrt$2249+1)^(0+128),w
 11294  0E8E  1D03               	btfss	3,2
 11295  0E8F  2E5D               	goto	l7497
 11296  0E90                     l7505:
 11297                           
 11298                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 847:         if ((*f
      +                          mt[0] == 'd') || (*fmt[0] == 'i')) {
 11299  0E90  0020               	movlb	0	; select bank0
 11300  0E91  0862               	movf	vfpfcnvrt@fmt,w
 11301  0E92  0086               	movwf	6
 11302  0E93  0187               	clrf	7
 11303  0E94  3F40               	moviw [0]fsr1
 11304  0E95  00E4               	movwf	??_vfpfcnvrt
 11305  0E96  3F41               	moviw [1]fsr1
 11306  0E97  00E5               	movwf	??_vfpfcnvrt+1
 11307  0E98  0864               	movf	??_vfpfcnvrt,w
 11308  0E99  0084               	movwf	4
 11309  0E9A  0865               	movf	??_vfpfcnvrt+1,w
 11310  0E9B  0085               	movwf	5
 11311  0E9C  0012               	moviw fsr0++
 11312  0E9D  3A64               	xorlw	100
 11313  0E9E  1903               	btfsc	3,2
 11314  0E9F  2EAF               	goto	l7509
 11315  0EA0  0862               	movf	vfpfcnvrt@fmt,w
 11316  0EA1  0086               	movwf	6
 11317  0EA2  0187               	clrf	7
 11318  0EA3  3F40               	moviw [0]fsr1
 11319  0EA4  00E4               	movwf	??_vfpfcnvrt
 11320  0EA5  3F41               	moviw [1]fsr1
 11321  0EA6  00E5               	movwf	??_vfpfcnvrt+1
 11322  0EA7  0864               	movf	??_vfpfcnvrt,w
 11323  0EA8  0084               	movwf	4
 11324  0EA9  0865               	movf	??_vfpfcnvrt+1,w
 11325  0EAA  0085               	movwf	5
 11326  0EAB  0012               	moviw fsr0++
 11327  0EAC  3A69               	xorlw	105
 11328  0EAD  1D03               	btfss	3,2
 11329  0EAE  2EFB               	goto	l7517
 11330  0EAF                     l7509:
 11331                           
 11332                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 849:             ++*
      +                          fmt;
 11333  0EAF  0862               	movf	vfpfcnvrt@fmt,w
 11334  0EB0  0086               	movwf	6
 11335  0EB1  0187               	clrf	7
 11336  0EB2  3001               	movlw	1
 11337  0EB3  0781               	addwf	1,f
 11338  0EB4  3141               	addfsr 1,1
 11339  0EB5  1803               	skipnc
 11340  0EB6  0A81               	incf	1,f
 11341                           
 11342                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 850:             ll 
      +                          = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11343  0EB7  0863               	movf	vfpfcnvrt@ap,w
 11344  0EB8  0086               	movwf	6
 11345  0EB9  0187               	clrf	7
 11346  0EBA  0801               	movf	1,w
 11347  0EBB  0084               	movwf	4
 11348  0EBC  0185               	clrf	5
 11349  0EBD  3002               	movlw	2
 11350  0EBE  0781               	addwf	1,f
 11351  0EBF  3F00               	moviw [0]fsr0
 11352  0EC0  00E4               	movwf	??_vfpfcnvrt
 11353  0EC1  3F01               	moviw [1]fsr0
 11354  0EC2  00E5               	movwf	??_vfpfcnvrt+1
 11355  0EC3  0864               	movf	??_vfpfcnvrt,w
 11356  0EC4  0021               	movlb	1	; select bank1
 11357  0EC5  00A0               	movwf	vfpfcnvrt@ll^(0+128)
 11358  0EC6  0020               	movlb	0	; select bank0
 11359  0EC7  0865               	movf	??_vfpfcnvrt+1,w
 11360  0EC8  0021               	movlb	1	; select bank1
 11361  0EC9  00A1               	movwf	(vfpfcnvrt@ll+1)^(0+128)
 11362  0ECA  0D89               	rlf	9,f
 11363  0ECB  3B89               	subwfb	9,f
 11364  0ECC  0989               	comf	9,f
 11365  0ECD  00A2               	movwf	(vfpfcnvrt@ll+2)^(0+128)
 11366  0ECE  00A3               	movwf	(vfpfcnvrt@ll+3)^(0+128)
 11367  0ECF  00A4               	movwf	(vfpfcnvrt@ll+4)^(0+128)
 11368  0ED0  00A5               	movwf	(vfpfcnvrt@ll+5)^(0+128)
 11369  0ED1  00A6               	movwf	(vfpfcnvrt@ll+6)^(0+128)
 11370  0ED2  00A7               	movwf	(vfpfcnvrt@ll+7)^(0+128)
 11371                           
 11372                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 852:             ret
      +                          urn dtoa(fp, ll);
 11373  0ED3  0820               	movf	vfpfcnvrt@ll^(0+128),w
 11374  0ED4  0020               	movlb	0	; select bank0
 11375  0ED5  00BE               	movwf	dtoa@d
 11376  0ED6  0021               	movlb	1	; select bank1
 11377  0ED7  0821               	movf	(vfpfcnvrt@ll+1)^(0+128),w
 11378  0ED8  0020               	movlb	0	; select bank0
 11379  0ED9  00BF               	movwf	dtoa@d+1
 11380  0EDA  0021               	movlb	1	; select bank1
 11381  0EDB  0822               	movf	(vfpfcnvrt@ll+2)^(0+128),w
 11382  0EDC  0020               	movlb	0	; select bank0
 11383  0EDD  00C0               	movwf	dtoa@d+2
 11384  0EDE  0021               	movlb	1	; select bank1
 11385  0EDF  0823               	movf	(vfpfcnvrt@ll+3)^(0+128),w
 11386  0EE0  0020               	movlb	0	; select bank0
 11387  0EE1  00C1               	movwf	dtoa@d+3
 11388  0EE2  0021               	movlb	1	; select bank1
 11389  0EE3  0824               	movf	(vfpfcnvrt@ll+4)^(0+128),w
 11390  0EE4  0020               	movlb	0	; select bank0
 11391  0EE5  00C2               	movwf	dtoa@d+4
 11392  0EE6  0021               	movlb	1	; select bank1
 11393  0EE7  0825               	movf	(vfpfcnvrt@ll+5)^(0+128),w
 11394  0EE8  0020               	movlb	0	; select bank0
 11395  0EE9  00C3               	movwf	dtoa@d+5
 11396  0EEA  0021               	movlb	1	; select bank1
 11397  0EEB  0826               	movf	(vfpfcnvrt@ll+6)^(0+128),w
 11398  0EEC  0020               	movlb	0	; select bank0
 11399  0EED  00C4               	movwf	dtoa@d+6
 11400  0EEE  0021               	movlb	1	; select bank1
 11401  0EEF  0827               	movf	(vfpfcnvrt@ll+7)^(0+128),w
 11402  0EF0  0020               	movlb	0	; select bank0
 11403  0EF1  00C5               	movwf	dtoa@d+7
 11404  0EF2  0021               	movlb	1	; select bank1
 11405  0EF3  0837               	movf	vfpfcnvrt@fp^(0+128),w
 11406  0EF4  3189  2149         	fcall	_dtoa
 11407  0EF6  083F               	movf	?_dtoa+1,w
 11408  0EF7  00E3               	movwf	?_vfpfcnvrt+1
 11409  0EF8  083E               	movf	?_dtoa,w
 11410  0EF9  00E2               	movwf	?_vfpfcnvrt
 11411  0EFA  0008               	return
 11412  0EFB                     l7517:
 11413                           
 11414                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1171:         if (*f
      +                          mt[0] == 's') {
 11415  0EFB  0862               	movf	vfpfcnvrt@fmt,w
 11416  0EFC  0086               	movwf	6
 11417  0EFD  0187               	clrf	7
 11418  0EFE  3F40               	moviw [0]fsr1
 11419  0EFF  00E4               	movwf	??_vfpfcnvrt
 11420  0F00  3F41               	moviw [1]fsr1
 11421  0F01  00E5               	movwf	??_vfpfcnvrt+1
 11422  0F02  0864               	movf	??_vfpfcnvrt,w
 11423  0F03  0084               	movwf	4
 11424  0F04  0865               	movf	??_vfpfcnvrt+1,w
 11425  0F05  0085               	movwf	5
 11426  0F06  0012               	moviw fsr0++
 11427  0F07  3A73               	xorlw	115
 11428  0F08  1D03               	btfss	3,2
 11429  0F09  2F2F               	goto	l7527
 11430                           
 11431                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1173:             ++
      +                          *fmt;
 11432  0F0A  0862               	movf	vfpfcnvrt@fmt,w
 11433  0F0B  0086               	movwf	6
 11434  0F0C  0187               	clrf	7
 11435  0F0D  3001               	movlw	1
 11436  0F0E  0781               	addwf	1,f
 11437  0F0F  3141               	addfsr 1,1
 11438  0F10  1803               	skipnc
 11439  0F11  0A81               	incf	1,f
 11440                           
 11441                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1174:             cp
      +                           = (*(char * *)__va_arg(*(char * **)ap, (char *)0));
 11442  0F12  0863               	movf	vfpfcnvrt@ap,w
 11443  0F13  0086               	movwf	6
 11444  0F14  0187               	clrf	7
 11445  0F15  0801               	movf	1,w
 11446  0F16  0084               	movwf	4
 11447  0F17  0185               	clrf	5
 11448  0F18  3002               	movlw	2
 11449  0F19  0781               	addwf	1,f
 11450  0F1A  3F00               	moviw [0]fsr0
 11451  0F1B  0021               	movlb	1	; select bank1
 11452  0F1C  00B0               	movwf	vfpfcnvrt@cp^(0+128)
 11453  0F1D  3F01               	moviw [1]fsr0
 11454  0F1E  00B1               	movwf	(vfpfcnvrt@cp+1)^(0+128)
 11455                           
 11456                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1176:             re
      +                          turn stoa(fp, cp);
 11457  0F1F  0831               	movf	(vfpfcnvrt@cp+1)^(0+128),w
 11458  0F20  0020               	movlb	0	; select bank0
 11459  0F21  00AC               	movwf	stoa@s+1
 11460  0F22  0021               	movlb	1	; select bank1
 11461  0F23  0830               	movf	vfpfcnvrt@cp^(0+128),w
 11462  0F24  0020               	movlb	0	; select bank0
 11463  0F25  00AB               	movwf	stoa@s
 11464  0F26  0021               	movlb	1	; select bank1
 11465  0F27  0837               	movf	vfpfcnvrt@fp^(0+128),w
 11466  0F28  3196  265D         	fcall	_stoa
 11467  0F2A  082C               	movf	?_stoa+1,w
 11468  0F2B  00E3               	movwf	?_vfpfcnvrt+1
 11469  0F2C  082B               	movf	?_stoa,w
 11470  0F2D  00E2               	movwf	?_vfpfcnvrt
 11471  0F2E  0008               	return
 11472  0F2F                     l7527:
 11473                           
 11474                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1296:         if ((*
      +                          fmt[0] == 'x') || (*fmt[0] == 'X')) {
 11475  0F2F  0862               	movf	vfpfcnvrt@fmt,w
 11476  0F30  0086               	movwf	6
 11477  0F31  0187               	clrf	7
 11478  0F32  3F40               	moviw [0]fsr1
 11479  0F33  00E4               	movwf	??_vfpfcnvrt
 11480  0F34  3F41               	moviw [1]fsr1
 11481  0F35  00E5               	movwf	??_vfpfcnvrt+1
 11482  0F36  0864               	movf	??_vfpfcnvrt,w
 11483  0F37  0084               	movwf	4
 11484  0F38  0865               	movf	??_vfpfcnvrt+1,w
 11485  0F39  0085               	movwf	5
 11486  0F3A  0012               	moviw fsr0++
 11487  0F3B  3A78               	xorlw	120
 11488  0F3C  1903               	btfsc	3,2
 11489  0F3D  2F4D               	goto	l7531
 11490  0F3E  0862               	movf	vfpfcnvrt@fmt,w
 11491  0F3F  0086               	movwf	6
 11492  0F40  0187               	clrf	7
 11493  0F41  3F40               	moviw [0]fsr1
 11494  0F42  00E4               	movwf	??_vfpfcnvrt
 11495  0F43  3F41               	moviw [1]fsr1
 11496  0F44  00E5               	movwf	??_vfpfcnvrt+1
 11497  0F45  0864               	movf	??_vfpfcnvrt,w
 11498  0F46  0084               	movwf	4
 11499  0F47  0865               	movf	??_vfpfcnvrt+1,w
 11500  0F48  0085               	movwf	5
 11501  0F49  0012               	moviw fsr0++
 11502  0F4A  3A58               	xorlw	88
 11503  0F4B  1D03               	btfss	3,2
 11504  0F4C  2FA7               	goto	l7541
 11505  0F4D                     l7531:
 11506                           
 11507                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1298:             c 
      +                          = (*fmt)[0];
 11508  0F4D  0862               	movf	vfpfcnvrt@fmt,w
 11509  0F4E  0086               	movwf	6
 11510  0F4F  0187               	clrf	7
 11511  0F50  3F40               	moviw [0]fsr1
 11512  0F51  00E4               	movwf	??_vfpfcnvrt
 11513  0F52  3F41               	moviw [1]fsr1
 11514  0F53  00E5               	movwf	??_vfpfcnvrt+1
 11515  0F54  0864               	movf	??_vfpfcnvrt,w
 11516  0F55  0084               	movwf	4
 11517  0F56  0865               	movf	??_vfpfcnvrt+1,w
 11518  0F57  0085               	movwf	5
 11519  0F58  0800               	movf	0,w	;code access
 11520  0F59  00E6               	movwf	??_vfpfcnvrt+2
 11521  0F5A  0866               	movf	??_vfpfcnvrt+2,w
 11522  0F5B  0021               	movlb	1	; select bank1
 11523  0F5C  00B2               	movwf	vfpfcnvrt@c^(0+128)
 11524                           
 11525                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1299:             ++
      +                          *fmt;
 11526  0F5D  0020               	movlb	0	; select bank0
 11527  0F5E  0862               	movf	vfpfcnvrt@fmt,w
 11528  0F5F  0086               	movwf	6
 11529  0F60  0187               	clrf	7
 11530  0F61  3001               	movlw	1
 11531  0F62  0781               	addwf	1,f
 11532  0F63  3141               	addfsr 1,1
 11533  0F64  1803               	skipnc
 11534  0F65  0A81               	incf	1,f
 11535                           
 11536                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1300:             ll
      +                          u = (unsigned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0
      +                          ));
 11537  0F66  0863               	movf	vfpfcnvrt@ap,w
 11538  0F67  0086               	movwf	6
 11539  0F68  0187               	clrf	7
 11540  0F69  0801               	movf	1,w
 11541  0F6A  0084               	movwf	4
 11542  0F6B  0185               	clrf	5
 11543  0F6C  3002               	movlw	2
 11544  0F6D  0781               	addwf	1,f
 11545  0F6E  3F00               	moviw [0]fsr0
 11546  0F6F  0021               	movlb	1	; select bank1
 11547  0F70  00A8               	movwf	vfpfcnvrt@llu^(0+128)
 11548  0F71  3F01               	moviw [1]fsr0
 11549  0F72  00A9               	movwf	(vfpfcnvrt@llu+1)^(0+128)
 11550  0F73  01AA               	clrf	(vfpfcnvrt@llu+2)^(0+128)
 11551  0F74  01AB               	clrf	(vfpfcnvrt@llu+3)^(0+128)
 11552  0F75  01AC               	clrf	(vfpfcnvrt@llu+4)^(0+128)
 11553  0F76  01AD               	clrf	(vfpfcnvrt@llu+5)^(0+128)
 11554  0F77  01AE               	clrf	(vfpfcnvrt@llu+6)^(0+128)
 11555  0F78  01AF               	clrf	(vfpfcnvrt@llu+7)^(0+128)
 11556                           
 11557                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1302:             re
      +                          turn xtoa(fp, llu, c);
 11558  0F79  0828               	movf	vfpfcnvrt@llu^(0+128),w
 11559  0F7A  0020               	movlb	0	; select bank0
 11560  0F7B  00BC               	movwf	xtoa@d
 11561  0F7C  0021               	movlb	1	; select bank1
 11562  0F7D  0829               	movf	(vfpfcnvrt@llu+1)^(0+128),w
 11563  0F7E  0020               	movlb	0	; select bank0
 11564  0F7F  00BD               	movwf	xtoa@d+1
 11565  0F80  0021               	movlb	1	; select bank1
 11566  0F81  082A               	movf	(vfpfcnvrt@llu+2)^(0+128),w
 11567  0F82  0020               	movlb	0	; select bank0
 11568  0F83  00BE               	movwf	xtoa@d+2
 11569  0F84  0021               	movlb	1	; select bank1
 11570  0F85  082B               	movf	(vfpfcnvrt@llu+3)^(0+128),w
 11571  0F86  0020               	movlb	0	; select bank0
 11572  0F87  00BF               	movwf	xtoa@d+3
 11573  0F88  0021               	movlb	1	; select bank1
 11574  0F89  082C               	movf	(vfpfcnvrt@llu+4)^(0+128),w
 11575  0F8A  0020               	movlb	0	; select bank0
 11576  0F8B  00C0               	movwf	xtoa@d+4
 11577  0F8C  0021               	movlb	1	; select bank1
 11578  0F8D  082D               	movf	(vfpfcnvrt@llu+5)^(0+128),w
 11579  0F8E  0020               	movlb	0	; select bank0
 11580  0F8F  00C1               	movwf	xtoa@d+5
 11581  0F90  0021               	movlb	1	; select bank1
 11582  0F91  082E               	movf	(vfpfcnvrt@llu+6)^(0+128),w
 11583  0F92  0020               	movlb	0	; select bank0
 11584  0F93  00C2               	movwf	xtoa@d+6
 11585  0F94  0021               	movlb	1	; select bank1
 11586  0F95  082F               	movf	(vfpfcnvrt@llu+7)^(0+128),w
 11587  0F96  0020               	movlb	0	; select bank0
 11588  0F97  00C3               	movwf	xtoa@d+7
 11589  0F98  0021               	movlb	1	; select bank1
 11590  0F99  0832               	movf	vfpfcnvrt@c^(0+128),w
 11591  0F9A  0020               	movlb	0	; select bank0
 11592  0F9B  00E4               	movwf	??_vfpfcnvrt
 11593  0F9C  0864               	movf	??_vfpfcnvrt,w
 11594  0F9D  00C4               	movwf	xtoa@x
 11595  0F9E  0021               	movlb	1	; select bank1
 11596  0F9F  0837               	movf	vfpfcnvrt@fp^(0+128),w
 11597  0FA0  318A  2297         	fcall	_xtoa
 11598  0FA2  083D               	movf	?_xtoa+1,w
 11599  0FA3  00E3               	movwf	?_vfpfcnvrt+1
 11600  0FA4  083C               	movf	?_xtoa,w
 11601  0FA5  00E2               	movwf	?_vfpfcnvrt
 11602  0FA6  0008               	return
 11603  0FA7                     l7541:
 11604                           
 11605                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1372:         if ((*
      +                          fmt)[0] == '%') {
 11606  0FA7  0862               	movf	vfpfcnvrt@fmt,w
 11607  0FA8  0086               	movwf	6
 11608  0FA9  0187               	clrf	7
 11609  0FAA  3F40               	moviw [0]fsr1
 11610  0FAB  00E4               	movwf	??_vfpfcnvrt
 11611  0FAC  3F41               	moviw [1]fsr1
 11612  0FAD  00E5               	movwf	??_vfpfcnvrt+1
 11613  0FAE  0864               	movf	??_vfpfcnvrt,w
 11614  0FAF  0084               	movwf	4
 11615  0FB0  0865               	movf	??_vfpfcnvrt+1,w
 11616  0FB1  0085               	movwf	5
 11617  0FB2  0012               	moviw fsr0++
 11618  0FB3  3A25               	xorlw	37
 11619  0FB4  1D03               	btfss	3,2
 11620  0FB5  2FD0               	goto	l7551
 11621                           
 11622                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1373:             ++
      +                          *fmt;
 11623  0FB6  0862               	movf	vfpfcnvrt@fmt,w
 11624  0FB7  0086               	movwf	6
 11625  0FB8  0187               	clrf	7
 11626  0FB9  3001               	movlw	1
 11627  0FBA  0781               	addwf	1,f
 11628  0FBB  3141               	addfsr 1,1
 11629  0FBC  1803               	skipnc
 11630  0FBD  0A81               	incf	1,f
 11631                           
 11632                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1374:             fp
      +                          utc((int)'%', fp);
 11633  0FBE  3025               	movlw	37
 11634  0FBF  00A3               	movwf	fputc@c
 11635  0FC0  3000               	movlw	0
 11636  0FC1  00A4               	movwf	fputc@c+1
 11637  0FC2  0021               	movlb	1	; select bank1
 11638  0FC3  0837               	movf	vfpfcnvrt@fp^(0+128),w
 11639  0FC4  0020               	movlb	0	; select bank0
 11640  0FC5  00E4               	movwf	??_vfpfcnvrt
 11641  0FC6  0864               	movf	??_vfpfcnvrt,w
 11642  0FC7  00A5               	movwf	fputc@fp
 11643  0FC8  319E  26C3         	fcall	_fputc
 11644  0FCA                     l7547:
 11645                           
 11646                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1375:             re
      +                          turn 1;
 11647  0FCA  3001               	movlw	1
 11648  0FCB  0020               	movlb	0	; select bank0
 11649  0FCC  00E2               	movwf	?_vfpfcnvrt
 11650  0FCD  3000               	movlw	0
 11651  0FCE  00E3               	movwf	?_vfpfcnvrt+1
 11652  0FCF  0008               	return
 11653  0FD0                     l7551:
 11654                           
 11655                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt
      +                          ;
 11656  0FD0  0862               	movf	vfpfcnvrt@fmt,w
 11657  0FD1  0086               	movwf	6
 11658  0FD2  0187               	clrf	7
 11659  0FD3  3001               	movlw	1
 11660  0FD4  0781               	addwf	1,f
 11661  0FD5  3141               	addfsr 1,1
 11662  0FD6  1803               	skipnc
 11663  0FD7  0A81               	incf	1,f
 11664                           
 11665                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1380:         return
      +                           0;
 11666  0FD8  01E2               	clrf	?_vfpfcnvrt
 11667  0FD9  01E3               	clrf	?_vfpfcnvrt+1
 11668  0FDA  0008               	return
 11669  0FDB                     l7557:
 11670                           
 11671                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1384:     fputc((int
      +                          )(*fmt)[0], fp);
 11672  0FDB  0862               	movf	vfpfcnvrt@fmt,w
 11673  0FDC  0086               	movwf	6
 11674  0FDD  0187               	clrf	7
 11675  0FDE  3F40               	moviw [0]fsr1
 11676  0FDF  00E4               	movwf	??_vfpfcnvrt
 11677  0FE0  3F41               	moviw [1]fsr1
 11678  0FE1  00E5               	movwf	??_vfpfcnvrt+1
 11679  0FE2  0864               	movf	??_vfpfcnvrt,w
 11680  0FE3  0084               	movwf	4
 11681  0FE4  0865               	movf	??_vfpfcnvrt+1,w
 11682  0FE5  0085               	movwf	5
 11683  0FE6  0800               	movf	0,w	;code access
 11684  0FE7  00E6               	movwf	??_vfpfcnvrt+2
 11685  0FE8  01E7               	clrf	??_vfpfcnvrt+3
 11686  0FE9  0866               	movf	??_vfpfcnvrt+2,w
 11687  0FEA  00A3               	movwf	fputc@c
 11688  0FEB  0867               	movf	??_vfpfcnvrt+3,w
 11689  0FEC  00A4               	movwf	fputc@c+1
 11690  0FED  0021               	movlb	1	; select bank1
 11691  0FEE  0837               	movf	vfpfcnvrt@fp^(0+128),w
 11692  0FEF  0020               	movlb	0	; select bank0
 11693  0FF0  00E8               	movwf	??_vfpfcnvrt+4
 11694  0FF1  0868               	movf	??_vfpfcnvrt+4,w
 11695  0FF2  00A5               	movwf	fputc@fp
 11696  0FF3  319E  26C3  318D   	fcall	_fputc
 11697                           
 11698                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
 11699  0FF6  0020               	movlb	0	; select bank0
 11700  0FF7  0862               	movf	vfpfcnvrt@fmt,w
 11701  0FF8  0086               	movwf	6
 11702  0FF9  0187               	clrf	7
 11703  0FFA  3001               	movlw	1
 11704  0FFB  0781               	addwf	1,f
 11705  0FFC  3141               	addfsr 1,1
 11706  0FFD  1803               	skipnc
 11707  0FFE  0A81               	incf	1,f
 11708  0FFF  2FCA               	goto	l7547
 11709  1000                     __end_of_vfpfcnvrt:
 11710                           
 11711                           	psect	text14
 11712  0A97                     __ptext14:	
 11713 ;; *************** function _xtoa *****************
 11714 ;; Defined at:
 11715 ;;		line 645 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;  fp              1    wreg     PTR struct _IO_FILE
 11718 ;;		 -> sprintf@f(6), 
 11719 ;;  d               8   28[BANK0 ] unsigned long long 
 11720 ;;  x               1   36[BANK0 ] unsigned char 
 11721 ;; Auto vars:     Size  Location     Type
 11722 ;;  fp              1   45[BANK0 ] PTR struct _IO_FILE
 11723 ;;		 -> sprintf@f(6), 
 11724 ;;  n               8   54[BANK0 ] unsigned long long 
 11725 ;;  c               2   64[BANK0 ] int 
 11726 ;;  i               2   62[BANK0 ] int 
 11727 ;;  w               2   52[BANK0 ] int 
 11728 ;;  p               2   50[BANK0 ] int 
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  2   28[BANK0 ] int 
 11731 ;; Registers used:
 11732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11733 ;; Tracked objects:
 11734 ;;		On entry : 1F/1
 11735 ;;		On exit  : 1F/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11738 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11739 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11740 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11741 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11742 ;;Total ram usage:       38 bytes
 11743 ;; Hardware stack levels used:    1
 11744 ;; Hardware stack levels required when called:   11
 11745 ;; This function calls:
 11746 ;;		_isalpha
 11747 ;;		_isupper
 11748 ;;		_pad
 11749 ;;		_toupper
 11750 ;; This function is called by:
 11751 ;;		_vfpfcnvrt
 11752 ;; This function uses a non-reentrant model
 11753 ;;
 11754                           
 11755                           
 11756                           ;psect for function _xtoa
 11757  0A97                     _xtoa:
 11758                           
 11759                           ;incstack = 0
 11760                           ; Regs used in _xtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11761                           ;xtoa@fp stored from wreg
 11762  0A97  0020               	movlb	0	; select bank0
 11763  0A98  00CD               	movwf	xtoa@fp
 11764                           
 11765                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 645: static int xtoa
      +                          (FILE *fp, unsigned long long d, char x);/Applications/microchip/xc8/v2.30/pic/sources/c
      +                          99/common/doprnt.c: 646: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/dopr
      +                          nt.c: 647:     int c, i, p, w;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/
      +                          doprnt.c: 648:     unsigned long long n;;/Applications/microchip/xc8/v2.30/pic/sources/c
      +                          99/common/doprnt.c: 651:     if (!(prec < 0)) {
 11766  0A99  0022               	movlb	2	; select bank2
 11767  0A9A  1BA9               	btfsc	(_prec+1)^(0+256),7
 11768  0A9B  2AA0               	goto	l2058
 11769                           
 11770                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 652:         flags &
      +                          = ~(1 << 1);
 11771  0A9C  30FD               	movlw	253
 11772  0A9D  05AA               	andwf	_flags^(0+256),f
 11773  0A9E  30FF               	movlw	255
 11774  0A9F  05AB               	andwf	(_flags+1)^(0+256),f
 11775  0AA0                     l2058:	
 11776                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 653:     }
 11777                           
 11778                           
 11779                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 654:     p = (0 < pr
      +                          ec) ? prec : 1;
 11780  0AA0  0829               	movf	(_prec+1)^(0+256),w
 11781  0AA1  3A80               	xorlw	128
 11782  0AA2  0020               	movlb	0	; select bank0
 11783  0AA3  00C5               	movwf	??_xtoa
 11784  0AA4  3080               	movlw	128
 11785  0AA5  0245               	subwf	??_xtoa,w
 11786  0AA6  1D03               	skipz
 11787  0AA7  2AAB               	goto	u5235
 11788  0AA8  3001               	movlw	1
 11789  0AA9  0022               	movlb	2	; select bank2
 11790  0AAA  0228               	subwf	_prec^(0+256),w
 11791  0AAB                     u5235:
 11792  0AAB  1803               	skipnc
 11793  0AAC  2AB3               	goto	l7257
 11794  0AAD  3001               	movlw	1
 11795  0AAE  0020               	movlb	0	; select bank0
 11796  0AAF  00D2               	movwf	xtoa@p
 11797  0AB0  3000               	movlw	0
 11798  0AB1  00D3               	movwf	xtoa@p+1
 11799  0AB2  2ABB               	goto	l2062
 11800  0AB3                     l7257:
 11801  0AB3  0022               	movlb	2	; select bank2
 11802  0AB4  0829               	movf	(_prec+1)^(0+256),w
 11803  0AB5  0020               	movlb	0	; select bank0
 11804  0AB6  00D3               	movwf	xtoa@p+1
 11805  0AB7  0022               	movlb	2	; select bank2
 11806  0AB8  0828               	movf	_prec^(0+256),w
 11807  0AB9  0020               	movlb	0	; select bank0
 11808  0ABA  00D2               	movwf	xtoa@p
 11809  0ABB                     l2062:
 11810                           
 11811                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 655:     w = width;
 11812  0ABB  0022               	movlb	2	; select bank2
 11813  0ABC  0827               	movf	(_width+1)^(0+256),w
 11814  0ABD  0020               	movlb	0	; select bank0
 11815  0ABE  00D5               	movwf	xtoa@w+1
 11816  0ABF  0022               	movlb	2	; select bank2
 11817  0AC0  0826               	movf	_width^(0+256),w
 11818  0AC1  0020               	movlb	0	; select bank0
 11819  0AC2  00D4               	movwf	xtoa@w
 11820                           
 11821                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 656:     if (flags &
      +                           (1 << 4)) {
 11822  0AC3  0022               	movlb	2	; select bank2
 11823  0AC4  1E2A               	btfss	_flags^(0+256),4
 11824  0AC5  2ACB               	goto	l7263
 11825                           
 11826                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 657:         w -= 2;
 11827  0AC6  30FE               	movlw	254
 11828  0AC7  0020               	movlb	0	; select bank0
 11829  0AC8  07D4               	addwf	xtoa@w,f
 11830  0AC9  30FF               	movlw	255
 11831  0ACA  3DD5               	addwfc	xtoa@w+1,f
 11832  0ACB                     l7263:
 11833                           
 11834                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 661:     n = d;
 11835  0ACB  0020               	movlb	0	; select bank0
 11836  0ACC  083C               	movf	xtoa@d,w
 11837  0ACD  00D6               	movwf	xtoa@n
 11838  0ACE  083D               	movf	xtoa@d+1,w
 11839  0ACF  00D7               	movwf	xtoa@n+1
 11840  0AD0  083E               	movf	xtoa@d+2,w
 11841  0AD1  00D8               	movwf	xtoa@n+2
 11842  0AD2  083F               	movf	xtoa@d+3,w
 11843  0AD3  00D9               	movwf	xtoa@n+3
 11844  0AD4  0840               	movf	xtoa@d+4,w
 11845  0AD5  00DA               	movwf	xtoa@n+4
 11846  0AD6  0841               	movf	xtoa@d+5,w
 11847  0AD7  00DB               	movwf	xtoa@n+5
 11848  0AD8  0842               	movf	xtoa@d+6,w
 11849  0AD9  00DC               	movwf	xtoa@n+6
 11850  0ADA  0843               	movf	xtoa@d+7,w
 11851  0ADB  00DD               	movwf	xtoa@n+7
 11852                           
 11853                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 662:     i = sizeof(
      +                          dbuf) - 1;
 11854  0ADC  301F               	movlw	31
 11855  0ADD  00DE               	movwf	xtoa@i
 11856  0ADE  3000               	movlw	0
 11857  0ADF  00DF               	movwf	xtoa@i+1
 11858                           
 11859                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 663:     dbuf[i] = '
      +                          \0';
 11860  0AE0  0025               	movlb	5	; select bank5
 11861  0AE1  01BF               	clrf	(_dbuf^(0+640)+31)
 11862                           
 11863                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 664:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11864  0AE2  2B8C               	goto	l7295
 11865  0AE3                     l7267:
 11866                           
 11867                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 665:         --i;
 11868  0AE3  30FF               	movlw	255
 11869  0AE4  0020               	movlb	0	; select bank0
 11870  0AE5  07DE               	addwf	xtoa@i,f
 11871  0AE6  30FF               	movlw	255
 11872  0AE7  3DDF               	addwfc	xtoa@i+1,f
 11873                           
 11874                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 666:         c = n &
      +                           0x0f;
 11875  0AE8  300F               	movlw	15
 11876  0AE9  0556               	andwf	xtoa@n,w
 11877  0AEA  00E0               	movwf	xtoa@c
 11878  0AEB  3000               	movlw	0
 11879  0AEC  0557               	andwf	xtoa@n+1,w
 11880  0AED  00E1               	movwf	xtoa@c+1
 11881                           
 11882                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 667:         c = (c 
      +                          < 10) ? (int)'0' + c : (int)'a' + (c - 10);
 11883  0AEE  0861               	movf	xtoa@c+1,w
 11884  0AEF  3A80               	xorlw	128
 11885  0AF0  00C5               	movwf	??_xtoa
 11886  0AF1  3080               	movlw	128
 11887  0AF2  0245               	subwf	??_xtoa,w
 11888  0AF3  1D03               	skipz
 11889  0AF4  2AF7               	goto	u5255
 11890  0AF5  300A               	movlw	10
 11891  0AF6  0260               	subwf	xtoa@c,w
 11892  0AF7                     u5255:
 11893  0AF7  1C03               	skipc
 11894  0AF8  2AFD               	goto	l7271
 11895  0AF9  0020               	movlb	0	; select bank0
 11896  0AFA  0860               	movf	xtoa@c,w
 11897  0AFB  3E57               	addlw	87
 11898  0AFC  2B00               	goto	L5
 11899  0AFD                     l7271:
 11900  0AFD  0020               	movlb	0	; select bank0
 11901  0AFE  0860               	movf	xtoa@c,w
 11902  0AFF  3E30               	addlw	48
 11903  0B00                     L5:
 11904  0B00  00E0               	movwf	xtoa@c
 11905  0B01  3000               	movlw	0
 11906  0B02  3D61               	addwfc	xtoa@c+1,w
 11907  0B03  00E1               	movwf	xtoa@c+1
 11908  0B04  0844               	movf	xtoa@x,w
 11909  0B05  3EBF               	addlw	191
 11910  0B06  00C5               	movwf	??_xtoa
 11911  0B07  30FF               	movlw	255
 11912  0B08  1803               	skipnc
 11913  0B09  3000               	movlw	0
 11914  0B0A  00C6               	movwf	??_xtoa+1
 11915  0B0B  3000               	movlw	0
 11916  0B0C  0246               	subwf	??_xtoa+1,w
 11917  0B0D  301A               	movlw	26
 11918  0B0E  1903               	skipnz
 11919  0B0F  0245               	subwf	??_xtoa,w
 11920  0B10  1803               	btfsc	3,0
 11921  0B11  2B14               	goto	u5260
 11922  0B12  3001               	movlw	1
 11923  0B13  2B15               	goto	u5270
 11924  0B14                     u5260:
 11925  0B14  3000               	movlw	0
 11926  0B15                     u5270:
 11927  0B15  00C7               	movwf	??_xtoa+2
 11928  0B16  01C8               	clrf	??_xtoa+3
 11929  0B17  0847               	movf	??_xtoa+2,w
 11930  0B18  00CE               	movwf	_xtoa$2234
 11931  0B19  0848               	movf	??_xtoa+3,w
 11932  0B1A  00CF               	movwf	_xtoa$2234+1
 11933  0B1B  084E               	movf	_xtoa$2234,w
 11934  0B1C  044F               	iorwf	_xtoa$2234+1,w
 11935  0B1D  1903               	btfsc	3,2
 11936  0B1E  2B4A               	goto	l7287
 11937  0B1F  3020               	movlw	32
 11938  0B20  0460               	iorwf	xtoa@c,w
 11939  0B21  00C5               	movwf	??_xtoa
 11940  0B22  3000               	movlw	0
 11941  0B23  0461               	iorwf	xtoa@c+1,w
 11942  0B24  00C6               	movwf	??_xtoa+1
 11943  0B25  0845               	movf	??_xtoa,w
 11944  0B26  3E9F               	addlw	159
 11945  0B27  00C7               	movwf	??_xtoa+2
 11946  0B28  30FF               	movlw	255
 11947  0B29  3D46               	addwfc	??_xtoa+1,w
 11948  0B2A  00C8               	movwf	??_xtoa+3
 11949  0B2B  3000               	movlw	0
 11950  0B2C  0248               	subwf	??_xtoa+3,w
 11951  0B2D  301A               	movlw	26
 11952  0B2E  1903               	skipnz
 11953  0B2F  0247               	subwf	??_xtoa+2,w
 11954  0B30  1803               	btfsc	3,0
 11955  0B31  2B34               	goto	u5290
 11956  0B32  3001               	movlw	1
 11957  0B33  2B35               	goto	u5300
 11958  0B34                     u5290:
 11959  0B34  3000               	movlw	0
 11960  0B35                     u5300:
 11961  0B35  00C9               	movwf	??_xtoa+4
 11962  0B36  01CA               	clrf	??_xtoa+5
 11963  0B37  0849               	movf	??_xtoa+4,w
 11964  0B38  00D0               	movwf	_xtoa$2235
 11965  0B39  084A               	movf	??_xtoa+5,w
 11966  0B3A  00D1               	movwf	_xtoa$2235+1
 11967  0B3B  0850               	movf	_xtoa$2235,w
 11968  0B3C  0451               	iorwf	_xtoa$2235+1,w
 11969  0B3D  1903               	btfsc	3,2
 11970  0B3E  2B4A               	goto	l7287
 11971                           
 11972                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 669:             c =
      +                           toupper(c);
 11973  0B3F  0861               	movf	xtoa@c+1,w
 11974  0B40  00AA               	movwf	toupper@c+1
 11975  0B41  0860               	movf	xtoa@c,w
 11976  0B42  00A9               	movwf	toupper@c
 11977  0B43  319B  2321  318A   	fcall	_toupper
 11978  0B46  082A               	movf	?_toupper+1,w
 11979  0B47  00E1               	movwf	xtoa@c+1
 11980  0B48  0829               	movf	?_toupper,w
 11981  0B49  00E0               	movwf	xtoa@c
 11982  0B4A                     l7287:
 11983                           
 11984                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 671:         dbuf[i]
      +                           = (char)c;
 11985  0B4A  0860               	movf	xtoa@c,w
 11986  0B4B  00C5               	movwf	??_xtoa
 11987  0B4C  085E               	movf	xtoa@i,w
 11988  0B4D  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 11989  0B4E  0086               	movwf	6
 11990  0B4F  3002               	movlw	2	; select bank5/6
 11991  0B50  0087               	movwf	7
 11992  0B51  0845               	movf	??_xtoa,w
 11993  0B52  0081               	movwf	1
 11994                           
 11995                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 672:         --p;
 11996  0B53  30FF               	movlw	255
 11997  0B54  07D2               	addwf	xtoa@p,f
 11998  0B55  30FF               	movlw	255
 11999  0B56  3DD3               	addwfc	xtoa@p+1,f
 12000                           
 12001                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 673:         --w;
 12002  0B57  30FF               	movlw	255
 12003  0B58  07D4               	addwf	xtoa@w,f
 12004  0B59  30FF               	movlw	255
 12005  0B5A  3DD5               	addwfc	xtoa@w+1,f
 12006                           
 12007                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 674:         n = n >
      +                          > 4;
 12008  0B5B  3056               	movlw	low xtoa@n
 12009  0B5C  0086               	movwf	6
 12010  0B5D  3000               	movlw	high xtoa@n
 12011  0B5E  0087               	movwf	7
 12012  0B5F  3F40               	moviw [0]fsr1
 12013  0B60  00C5               	movwf	??_xtoa
 12014  0B61  3F41               	moviw [1]fsr1
 12015  0B62  00C6               	movwf	??_xtoa+1
 12016  0B63  3F42               	moviw [2]fsr1
 12017  0B64  00C7               	movwf	??_xtoa+2
 12018  0B65  3F43               	moviw [3]fsr1
 12019  0B66  00C8               	movwf	??_xtoa+3
 12020  0B67  3F44               	moviw [4]fsr1
 12021  0B68  00C9               	movwf	??_xtoa+4
 12022  0B69  3F45               	moviw [5]fsr1
 12023  0B6A  00CA               	movwf	??_xtoa+5
 12024  0B6B  3F46               	moviw [6]fsr1
 12025  0B6C  00CB               	movwf	??_xtoa+6
 12026  0B6D  3F47               	moviw [7]fsr1
 12027  0B6E  00CC               	movwf	??_xtoa+7
 12028  0B6F  3004               	movlw	4
 12029  0B70                     u5325:
 12030  0B70  0020               	movlb	0	; select bank0
 12031  0B71  36CC               	lsrf	??_xtoa+7,f
 12032  0B72  0CCB               	rrf	??_xtoa+6,f
 12033  0B73  0CCA               	rrf	??_xtoa+5,f
 12034  0B74  0CC9               	rrf	??_xtoa+4,f
 12035  0B75  0CC8               	rrf	??_xtoa+3,f
 12036  0B76  0CC7               	rrf	??_xtoa+2,f
 12037  0B77  0CC6               	rrf	??_xtoa+1,f
 12038  0B78  0CC5               	rrf	??_xtoa,f
 12039  0B79  0B89               	decfsz	9,f
 12040  0B7A  2B70               	goto	u5325
 12041  0B7B  0020               	movlb	0	; select bank0
 12042  0B7C  084C               	movf	??_xtoa+7,w
 12043  0B7D  00DD               	movwf	xtoa@n+7
 12044  0B7E  084B               	movf	??_xtoa+6,w
 12045  0B7F  00DC               	movwf	xtoa@n+6
 12046  0B80  084A               	movf	??_xtoa+5,w
 12047  0B81  00DB               	movwf	xtoa@n+5
 12048  0B82  0849               	movf	??_xtoa+4,w
 12049  0B83  00DA               	movwf	xtoa@n+4
 12050  0B84  0848               	movf	??_xtoa+3,w
 12051  0B85  00D9               	movwf	xtoa@n+3
 12052  0B86  0847               	movf	??_xtoa+2,w
 12053  0B87  00D8               	movwf	xtoa@n+2
 12054  0B88  0846               	movf	??_xtoa+1,w
 12055  0B89  00D7               	movwf	xtoa@n+1
 12056  0B8A  0845               	movf	??_xtoa,w
 12057  0B8B  00D6               	movwf	xtoa@n
 12058  0B8C                     l7295:
 12059                           
 12060                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 664:     while (!(i 
      +                          < 2) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12061  0B8C  0020               	movlb	0	; select bank0
 12062  0B8D  085F               	movf	xtoa@i+1,w
 12063  0B8E  3A80               	xorlw	128
 12064  0B8F  00C5               	movwf	??_xtoa
 12065  0B90  3080               	movlw	128
 12066  0B91  0245               	subwf	??_xtoa,w
 12067  0B92  1D03               	skipz
 12068  0B93  2B96               	goto	u5335
 12069  0B94  3002               	movlw	2
 12070  0B95  025E               	subwf	xtoa@i,w
 12071  0B96                     u5335:
 12072  0B96  1C03               	skipc
 12073  0B97  2BBD               	goto	l2083
 12074  0B98  0020               	movlb	0	; select bank0
 12075  0B99  0856               	movf	xtoa@n,w
 12076  0B9A  0457               	iorwf	xtoa@n+1,w
 12077  0B9B  0458               	iorwf	xtoa@n+2,w
 12078  0B9C  0459               	iorwf	xtoa@n+3,w
 12079  0B9D  045A               	iorwf	xtoa@n+4,w
 12080  0B9E  045B               	iorwf	xtoa@n+5,w
 12081  0B9F  045C               	iorwf	xtoa@n+6,w
 12082  0BA0  045D               	iorwf	xtoa@n+7,w
 12083  0BA1  1D03               	skipz
 12084  0BA2  2AE3               	goto	l7267
 12085  0BA3  0853               	movf	xtoa@p+1,w
 12086  0BA4  3A80               	xorlw	128
 12087  0BA5  00C5               	movwf	??_xtoa
 12088  0BA6  3080               	movlw	128
 12089  0BA7  0245               	subwf	??_xtoa,w
 12090  0BA8  1D03               	skipz
 12091  0BA9  2BAC               	goto	u5355
 12092  0BAA  3001               	movlw	1
 12093  0BAB  0252               	subwf	xtoa@p,w
 12094  0BAC                     u5355:
 12095  0BAC  1803               	skipnc
 12096  0BAD  2AE3               	goto	l7267
 12097  0BAE  0020               	movlb	0	; select bank0
 12098  0BAF  0855               	movf	xtoa@w+1,w
 12099  0BB0  3A80               	xorlw	128
 12100  0BB1  00C5               	movwf	??_xtoa
 12101  0BB2  3080               	movlw	128
 12102  0BB3  0245               	subwf	??_xtoa,w
 12103  0BB4  1D03               	skipz
 12104  0BB5  2BB8               	goto	u5365
 12105  0BB6  3001               	movlw	1
 12106  0BB7  0254               	subwf	xtoa@w,w
 12107  0BB8                     u5365:
 12108  0BB8  1C03               	skipc
 12109  0BB9  2BBD               	goto	l2083
 12110  0BBA  0022               	movlb	2	; select bank2
 12111  0BBB  18AA               	btfsc	_flags^(0+256),1
 12112  0BBC  2AE3               	goto	l7267
 12113  0BBD                     l2083:
 12114                           
 12115                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 678:     if (flags &
      +                           (1 << 4)) {
 12116  0BBD  0022               	movlb	2	; select bank2
 12117  0BBE  1E2A               	btfss	_flags^(0+256),4
 12118  0BBF  2BDB               	goto	l7311
 12119                           
 12120                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 679:         --i;
 12121  0BC0  30FF               	movlw	255
 12122  0BC1  0020               	movlb	0	; select bank0
 12123  0BC2  07DE               	addwf	xtoa@i,f
 12124  0BC3  30FF               	movlw	255
 12125  0BC4  3DDF               	addwfc	xtoa@i+1,f
 12126                           
 12127                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 680:         dbuf[i]
      +                           = x;
 12128  0BC5  0844               	movf	xtoa@x,w
 12129  0BC6  00C5               	movwf	??_xtoa
 12130  0BC7  085E               	movf	xtoa@i,w
 12131  0BC8  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12132  0BC9  0086               	movwf	6
 12133  0BCA  3002               	movlw	2	; select bank5/6
 12134  0BCB  0087               	movwf	7
 12135  0BCC  0845               	movf	??_xtoa,w
 12136  0BCD  0081               	movwf	1
 12137                           
 12138                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 681:         --i;
 12139  0BCE  30FF               	movlw	255
 12140  0BCF  07DE               	addwf	xtoa@i,f
 12141  0BD0  30FF               	movlw	255
 12142  0BD1  3DDF               	addwfc	xtoa@i+1,f
 12143                           
 12144                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 682:         dbuf[i]
      +                           = '0';
 12145  0BD2  3030               	movlw	48
 12146  0BD3  00C5               	movwf	??_xtoa
 12147  0BD4  085E               	movf	xtoa@i,w
 12148  0BD5  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12149  0BD6  0086               	movwf	6
 12150  0BD7  3002               	movlw	2	; select bank5/6
 12151  0BD8  0087               	movwf	7
 12152  0BD9  0845               	movf	??_xtoa,w
 12153  0BDA  0081               	movwf	1
 12154  0BDB                     l7311:
 12155                           
 12156                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 686:     return pad(
      +                          fp, &dbuf[i], w);
 12157  0BDB  0020               	movlb	0	; select bank0
 12158  0BDC  085E               	movf	xtoa@i,w
 12159  0BDD  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 12160  0BDE  00C5               	movwf	??_xtoa
 12161  0BDF  0845               	movf	??_xtoa,w
 12162  0BE0  00B3               	movwf	pad@buf
 12163  0BE1  0855               	movf	xtoa@w+1,w
 12164  0BE2  00B5               	movwf	pad@p+1
 12165  0BE3  0854               	movf	xtoa@w,w
 12166  0BE4  00B4               	movwf	pad@p
 12167  0BE5  084D               	movf	xtoa@fp,w
 12168  0BE6  319F  275E         	fcall	_pad
 12169  0BE8  0834               	movf	?_pad+1,w
 12170  0BE9  00BD               	movwf	?_xtoa+1
 12171  0BEA  0833               	movf	?_pad,w
 12172  0BEB  00BC               	movwf	?_xtoa
 12173  0BEC  0008               	return
 12174  0BED                     __end_of_xtoa:
 12175                           
 12176                           	psect	text15
 12177  1B21                     __ptext15:	
 12178 ;; *************** function _toupper *****************
 12179 ;; Defined at:
 12180 ;;		line 4 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/toupper.c"
 12181 ;; Parameters:    Size  Location     Type
 12182 ;;  c               2    9[BANK0 ] int 
 12183 ;; Auto vars:     Size  Location     Type
 12184 ;;		None
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  2    9[BANK0 ] int 
 12187 ;; Registers used:
 12188 ;;		wreg, status,2, status,0
 12189 ;; Tracked objects:
 12190 ;;		On entry : 1F/0
 12191 ;;		On exit  : 1F/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12195 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12196 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12197 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12198 ;;Total ram usage:        8 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; Hardware stack levels required when called:    8
 12201 ;; This function calls:
 12202 ;;		_islower
 12203 ;; This function is called by:
 12204 ;;		_xtoa
 12205 ;; This function uses a non-reentrant model
 12206 ;;
 12207                           
 12208                           
 12209                           ;psect for function _toupper
 12210  1B21                     _toupper:
 12211                           
 12212                           ;incstack = 0
 12213                           ; Regs used in _toupper: [wreg+status,2+status,0]
 12214  1B21  0829               	movf	toupper@c,w
 12215  1B22  3E9F               	addlw	159
 12216  1B23  00AB               	movwf	??_toupper
 12217  1B24  30FF               	movlw	255
 12218  1B25  3D2A               	addwfc	toupper@c+1,w
 12219  1B26  00AC               	movwf	??_toupper+1
 12220  1B27  3000               	movlw	0
 12221  1B28  022C               	subwf	??_toupper+1,w
 12222  1B29  301A               	movlw	26
 12223  1B2A  1903               	skipnz
 12224  1B2B  022B               	subwf	??_toupper,w
 12225  1B2C  1803               	btfsc	3,0
 12226  1B2D  2B30               	goto	u4870
 12227  1B2E  3001               	movlw	1
 12228  1B2F  2B31               	goto	u4880
 12229  1B30                     u4870:
 12230  1B30  3000               	movlw	0
 12231  1B31                     u4880:
 12232  1B31  00AD               	movwf	??_toupper+2
 12233  1B32  01AE               	clrf	??_toupper+3
 12234  1B33  082D               	movf	??_toupper+2,w
 12235  1B34  00AF               	movwf	_toupper$2364
 12236  1B35  082E               	movf	??_toupper+3,w
 12237  1B36  00B0               	movwf	_toupper$2364+1
 12238  1B37  082F               	movf	_toupper$2364,w
 12239  1B38  0430               	iorwf	_toupper$2364+1,w
 12240  1B39  1903               	btfsc	3,2
 12241  1B3A  0008               	return
 12242  1B3B  305F               	movlw	95
 12243  1B3C  0529               	andwf	toupper@c,w
 12244  1B3D  00A9               	movwf	?_toupper
 12245  1B3E  3000               	movlw	0
 12246  1B3F  052A               	andwf	toupper@c+1,w
 12247  1B40  00AA               	movwf	?_toupper+1
 12248  1B41  0008               	return
 12249  1B42                     __end_of_toupper:
 12250                           
 12251                           	psect	text16
 12252  19BA                     __ptext16:	
 12253 ;; *************** function _islower *****************
 12254 ;; Defined at:
 12255 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/islower.c"
 12256 ;; Parameters:    Size  Location     Type
 12257 ;;  c               2    3[BANK0 ] int 
 12258 ;; Auto vars:     Size  Location     Type
 12259 ;;		None
 12260 ;; Return value:  Size  Location     Type
 12261 ;;                  2    3[BANK0 ] int 
 12262 ;; Registers used:
 12263 ;;		wreg, status,2, status,0
 12264 ;; Tracked objects:
 12265 ;;		On entry : 0/0
 12266 ;;		On exit  : 1F/0
 12267 ;;		Unchanged: 0/0
 12268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12269 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12271 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12272 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12273 ;;Total ram usage:        6 bytes
 12274 ;; Hardware stack levels used:    1
 12275 ;; Hardware stack levels required when called:    7
 12276 ;; This function calls:
 12277 ;;		Nothing
 12278 ;; This function is called by:
 12279 ;;		_toupper
 12280 ;; This function uses a non-reentrant model
 12281 ;;
 12282                           
 12283                           
 12284                           ;psect for function _islower
 12285  19BA                     _islower:
 12286                           
 12287                           ;incstack = 0
 12288                           ; Regs used in _islower: [wreg+status,2+status,0]
 12289  19BA  0020               	movlb	0	; select bank0
 12290  19BB  0823               	movf	islower@c,w
 12291  19BC  3E9F               	addlw	159
 12292  19BD  00A5               	movwf	??_islower
 12293  19BE  30FF               	movlw	255
 12294  19BF  3D24               	addwfc	islower@c+1,w
 12295  19C0  00A6               	movwf	??_islower+1
 12296  19C1  3000               	movlw	0
 12297  19C2  0226               	subwf	??_islower+1,w
 12298  19C3  301A               	movlw	26
 12299  19C4  1903               	skipnz
 12300  19C5  0225               	subwf	??_islower,w
 12301  19C6  1803               	btfsc	3,0
 12302  19C7  29CA               	goto	u4470
 12303  19C8  3001               	movlw	1
 12304  19C9  29CB               	goto	u4480
 12305  19CA                     u4470:
 12306  19CA  3000               	movlw	0
 12307  19CB                     u4480:
 12308  19CB  00A7               	movwf	??_islower+2
 12309  19CC  01A8               	clrf	??_islower+3
 12310  19CD  0827               	movf	??_islower+2,w
 12311  19CE  00A3               	movwf	?_islower
 12312  19CF  0828               	movf	??_islower+3,w
 12313  19D0  00A4               	movwf	?_islower+1
 12314  19D1  0008               	return
 12315  19D2                     __end_of_islower:
 12316                           
 12317                           	psect	text17
 12318  19A2                     __ptext17:	
 12319 ;; *************** function _isupper *****************
 12320 ;; Defined at:
 12321 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/isupper.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;  c               2    3[BANK0 ] int 
 12324 ;; Auto vars:     Size  Location     Type
 12325 ;;		None
 12326 ;; Return value:  Size  Location     Type
 12327 ;;                  2    3[BANK0 ] int 
 12328 ;; Registers used:
 12329 ;;		wreg, status,2, status,0
 12330 ;; Tracked objects:
 12331 ;;		On entry : 0/0
 12332 ;;		On exit  : 1F/0
 12333 ;;		Unchanged: 0/0
 12334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12335 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12337 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12338 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12339 ;;Total ram usage:        6 bytes
 12340 ;; Hardware stack levels used:    1
 12341 ;; Hardware stack levels required when called:    7
 12342 ;; This function calls:
 12343 ;;		Nothing
 12344 ;; This function is called by:
 12345 ;;		_xtoa
 12346 ;; This function uses a non-reentrant model
 12347 ;;
 12348                           
 12349                           
 12350                           ;psect for function _isupper
 12351  19A2                     _isupper:
 12352                           
 12353                           ;incstack = 0
 12354                           ; Regs used in _isupper: [wreg+status,2+status,0]
 12355  19A2  0020               	movlb	0	; select bank0
 12356  19A3  0823               	movf	isupper@c,w
 12357  19A4  3EBF               	addlw	191
 12358  19A5  00A5               	movwf	??_isupper
 12359  19A6  30FF               	movlw	255
 12360  19A7  3D24               	addwfc	isupper@c+1,w
 12361  19A8  00A6               	movwf	??_isupper+1
 12362  19A9  3000               	movlw	0
 12363  19AA  0226               	subwf	??_isupper+1,w
 12364  19AB  301A               	movlw	26
 12365  19AC  1903               	skipnz
 12366  19AD  0225               	subwf	??_isupper,w
 12367  19AE  1803               	btfsc	3,0
 12368  19AF  29B2               	goto	u4830
 12369  19B0  3001               	movlw	1
 12370  19B1  29B3               	goto	u4840
 12371  19B2                     u4830:
 12372  19B2  3000               	movlw	0
 12373  19B3                     u4840:
 12374  19B3  00A7               	movwf	??_isupper+2
 12375  19B4  01A8               	clrf	??_isupper+3
 12376  19B5  0827               	movf	??_isupper+2,w
 12377  19B6  00A3               	movwf	?_isupper
 12378  19B7  0828               	movf	??_isupper+3,w
 12379  19B8  00A4               	movwf	?_isupper+1
 12380  19B9  0008               	return
 12381  19BA                     __end_of_isupper:
 12382                           
 12383                           	psect	text18
 12384  1AC2                     __ptext18:	
 12385 ;; *************** function _isalpha *****************
 12386 ;; Defined at:
 12387 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/isalpha.c"
 12388 ;; Parameters:    Size  Location     Type
 12389 ;;  c               2    3[BANK0 ] int 
 12390 ;; Auto vars:     Size  Location     Type
 12391 ;;		None
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  2    3[BANK0 ] int 
 12394 ;; Registers used:
 12395 ;;		wreg, status,2, status,0
 12396 ;; Tracked objects:
 12397 ;;		On entry : 0/0
 12398 ;;		On exit  : 1F/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12401 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12403 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12404 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12405 ;;Total ram usage:        8 bytes
 12406 ;; Hardware stack levels used:    1
 12407 ;; Hardware stack levels required when called:    7
 12408 ;; This function calls:
 12409 ;;		Nothing
 12410 ;; This function is called by:
 12411 ;;		_xtoa
 12412 ;; This function uses a non-reentrant model
 12413 ;;
 12414                           
 12415                           
 12416                           ;psect for function _isalpha
 12417  1AC2                     _isalpha:
 12418                           
 12419                           ;incstack = 0
 12420                           ; Regs used in _isalpha: [wreg+status,2+status,0]
 12421  1AC2  3020               	movlw	32
 12422  1AC3  0020               	movlb	0	; select bank0
 12423  1AC4  0423               	iorwf	isalpha@c,w
 12424  1AC5  00A5               	movwf	??_isalpha
 12425  1AC6  3000               	movlw	0
 12426  1AC7  0424               	iorwf	isalpha@c+1,w
 12427  1AC8  00A6               	movwf	??_isalpha+1
 12428  1AC9  0825               	movf	??_isalpha,w
 12429  1ACA  3E9F               	addlw	159
 12430  1ACB  00A7               	movwf	??_isalpha+2
 12431  1ACC  30FF               	movlw	255
 12432  1ACD  3D26               	addwfc	??_isalpha+1,w
 12433  1ACE  00A8               	movwf	??_isalpha+3
 12434  1ACF  3000               	movlw	0
 12435  1AD0  0228               	subwf	??_isalpha+3,w
 12436  1AD1  301A               	movlw	26
 12437  1AD2  1903               	skipnz
 12438  1AD3  0227               	subwf	??_isalpha+2,w
 12439  1AD4  1803               	btfsc	3,0
 12440  1AD5  2AD8               	goto	u4850
 12441  1AD6  3001               	movlw	1
 12442  1AD7  2AD9               	goto	u4860
 12443  1AD8                     u4850:
 12444  1AD8  3000               	movlw	0
 12445  1AD9                     u4860:
 12446  1AD9  00A9               	movwf	??_isalpha+4
 12447  1ADA  01AA               	clrf	??_isalpha+5
 12448  1ADB  0829               	movf	??_isalpha+4,w
 12449  1ADC  00A3               	movwf	?_isalpha
 12450  1ADD  082A               	movf	??_isalpha+5,w
 12451  1ADE  00A4               	movwf	?_isalpha+1
 12452  1ADF  0008               	return
 12453  1AE0                     __end_of_isalpha:
 12454                           
 12455                           	psect	text19
 12456  165D                     __ptext19:	
 12457 ;; *************** function _stoa *****************
 12458 ;; Defined at:
 12459 ;;		line 568 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;  fp              1    wreg     PTR struct _IO_FILE
 12462 ;;		 -> sprintf@f(6), 
 12463 ;;  s               2   11[BANK0 ] PTR unsigned char 
 12464 ;;		 -> ?_sprintf(2), lcd_fs_name(112), lcd_hpf_fc(63), lcd_aux_name(14), 
 12465 ;;		 -> lcd_src_name(40), 
 12466 ;; Auto vars:     Size  Location     Type
 12467 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 12468 ;;		 -> sprintf@f(6), 
 12469 ;;  nuls            7   16[BANK0 ] unsigned char [7]
 12470 ;;  l               2   32[BANK0 ] int 
 12471 ;;  p               2   30[BANK0 ] int 
 12472 ;;  cp              2   28[BANK0 ] PTR unsigned char 
 12473 ;;		 -> stoa@nuls(7), ?_sprintf(2), lcd_fs_name(112), lcd_hpf_fc(63), 
 12474 ;;		 -> lcd_aux_name(14), lcd_src_name(40), 
 12475 ;;  w               2   25[BANK0 ] int 
 12476 ;;  i               2   23[BANK0 ] int 
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  2   11[BANK0 ] int 
 12479 ;; Registers used:
 12480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12481 ;; Tracked objects:
 12482 ;;		On entry : 1F/1
 12483 ;;		On exit  : 1F/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12486 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12487 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12488 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12489 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12490 ;;Total ram usage:       23 bytes
 12491 ;; Hardware stack levels used:    1
 12492 ;; Hardware stack levels required when called:    9
 12493 ;; This function calls:
 12494 ;;		_fputc
 12495 ;;		_strlen
 12496 ;; This function is called by:
 12497 ;;		_vfpfcnvrt
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           
 12502                           ;psect for function _stoa
 12503  165D                     _stoa:
 12504                           
 12505                           ;incstack = 0
 12506                           ; Regs used in _stoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12507                           ;stoa@fp stored from wreg
 12508  165D  0020               	movlb	0	; select bank0
 12509  165E  00BB               	movwf	stoa@fp
 12510                           
 12511                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 568: static int stoa
      +                          (FILE *fp, char *s);/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 5
      +                          69: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 570:     char *
      +                          cp, nuls[] = "(null)";
 12512  165F  3020               	movlw	low stoa@F1141
 12513  1660  0086               	movwf	6
 12514  1661  3002               	movlw	high stoa@F1141
 12515  1662  0087               	movwf	7
 12516  1663  3030               	movlw	low stoa@nuls
 12517  1664  0084               	movwf	4
 12518  1665  3000               	movlw	high stoa@nuls
 12519  1666  0085               	movwf	5
 12520  1667  3007               	movlw	7
 12521  1668  00AD               	movwf	??_stoa
 12522  1669                     u5130:
 12523  1669  0016               	moviw fsr1++
 12524  166A  001A               	movwi fsr0++
 12525  166B  0BAD               	decfsz	??_stoa,f
 12526  166C  2E69               	goto	u5130
 12527                           
 12528                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 571:     int i, l, p
      +                          , w;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 574:     cp = s;
 12529  166D  082C               	movf	stoa@s+1,w
 12530  166E  00BD               	movwf	stoa@cp+1
 12531  166F  082B               	movf	stoa@s,w
 12532  1670  00BC               	movwf	stoa@cp
 12533                           
 12534                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 575:     if (!cp) {
 12535  1671  083C               	movf	stoa@cp,w
 12536  1672  043D               	iorwf	stoa@cp+1,w
 12537  1673  1D03               	btfss	3,2
 12538  1674  2E79               	goto	l7209
 12539                           
 12540                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 576:         cp = nu
      +                          ls;
 12541  1675  3030               	movlw	low stoa@nuls
 12542  1676  00BC               	movwf	stoa@cp
 12543  1677  3000               	movlw	high stoa@nuls
 12544  1678  00BD               	movwf	stoa@cp+1
 12545  1679                     l7209:
 12546                           
 12547                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 580:     l = (int)st
      +                          rlen(cp);
 12548  1679  083D               	movf	stoa@cp+1,w
 12549  167A  00A4               	movwf	strlen@s+1
 12550  167B  083C               	movf	stoa@cp,w
 12551  167C  00A3               	movwf	strlen@s
 12552  167D  3199  215B  3196   	fcall	_strlen
 12553  1680  0824               	movf	?_strlen+1,w
 12554  1681  00C1               	movwf	stoa@l+1
 12555  1682  0823               	movf	?_strlen,w
 12556  1683  00C0               	movwf	stoa@l
 12557                           
 12558                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 581:     p = prec;
 12559  1684  0022               	movlb	2	; select bank2
 12560  1685  0829               	movf	(_prec+1)^(0+256),w
 12561  1686  0020               	movlb	0	; select bank0
 12562  1687  00BF               	movwf	stoa@p+1
 12563  1688  0022               	movlb	2	; select bank2
 12564  1689  0828               	movf	_prec^(0+256),w
 12565  168A  0020               	movlb	0	; select bank0
 12566  168B  00BE               	movwf	stoa@p
 12567                           
 12568                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 582:     l = (!(p < 
      +                          0) && (p < l)) ? p : l;
 12569  168C  1BBF               	btfsc	stoa@p+1,7
 12570  168D  2E9F               	goto	l2041
 12571  168E  083F               	movf	stoa@p+1,w
 12572  168F  3A80               	xorlw	128
 12573  1690  00AD               	movwf	??_stoa
 12574  1691  0841               	movf	stoa@l+1,w
 12575  1692  3A80               	xorlw	128
 12576  1693  022D               	subwf	??_stoa,w
 12577  1694  1D03               	skipz
 12578  1695  2E98               	goto	u5165
 12579  1696  0840               	movf	stoa@l,w
 12580  1697  023E               	subwf	stoa@p,w
 12581  1698                     u5165:
 12582  1698  1803               	btfsc	3,0
 12583  1699  2E9F               	goto	l2041
 12584  169A  0020               	movlb	0	; select bank0
 12585  169B  083F               	movf	stoa@p+1,w
 12586  169C  00C1               	movwf	stoa@l+1
 12587  169D  083E               	movf	stoa@p,w
 12588  169E  00C0               	movwf	stoa@l
 12589  169F                     l2041:
 12590                           
 12591                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 583:     p = l;
 12592  169F  0020               	movlb	0	; select bank0
 12593  16A0  0841               	movf	stoa@l+1,w
 12594  16A1  00BF               	movwf	stoa@p+1
 12595  16A2  0840               	movf	stoa@l,w
 12596  16A3  00BE               	movwf	stoa@p
 12597                           
 12598                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 584:     w = width;
 12599  16A4  0022               	movlb	2	; select bank2
 12600  16A5  0827               	movf	(_width+1)^(0+256),w
 12601  16A6  0020               	movlb	0	; select bank0
 12602  16A7  00BA               	movwf	stoa@w+1
 12603  16A8  0022               	movlb	2	; select bank2
 12604  16A9  0826               	movf	_width^(0+256),w
 12605  16AA  0020               	movlb	0	; select bank0
 12606  16AB  00B9               	movwf	stoa@w
 12607                           
 12608                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 587:     if (!(flags
      +                           & (1 << 0))) {
 12609  16AC  0022               	movlb	2	; select bank2
 12610  16AD  1C2A               	btfss	_flags^(0+256),0
 12611  16AE  2EC1               	goto	l7227
 12612  16AF  2ECE               	goto	l7229
 12613  16B0                     l7223:
 12614                           
 12615                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 589:             fpu
      +                          tc(' ', fp);
 12616  16B0  3020               	movlw	32
 12617  16B1  0020               	movlb	0	; select bank0
 12618  16B2  00A3               	movwf	fputc@c
 12619  16B3  3000               	movlw	0
 12620  16B4  00A4               	movwf	fputc@c+1
 12621  16B5  083B               	movf	stoa@fp,w
 12622  16B6  00AD               	movwf	??_stoa
 12623  16B7  082D               	movf	??_stoa,w
 12624  16B8  00A5               	movwf	fputc@fp
 12625  16B9  319E  26C3  3196   	fcall	_fputc
 12626                           
 12627                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 590:             ++l
      +                          ;
 12628  16BC  3001               	movlw	1
 12629  16BD  0020               	movlb	0	; select bank0
 12630  16BE  07C0               	addwf	stoa@l,f
 12631  16BF  3000               	movlw	0
 12632  16C0  3DC1               	addwfc	stoa@l+1,f
 12633  16C1                     l7227:
 12634                           
 12635                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 588:         while (
      +                          l < w) {
 12636  16C1  0020               	movlb	0	; select bank0
 12637  16C2  0841               	movf	stoa@l+1,w
 12638  16C3  3A80               	xorlw	128
 12639  16C4  00AD               	movwf	??_stoa
 12640  16C5  083A               	movf	stoa@w+1,w
 12641  16C6  3A80               	xorlw	128
 12642  16C7  022D               	subwf	??_stoa,w
 12643  16C8  1D03               	skipz
 12644  16C9  2ECC               	goto	u5185
 12645  16CA  0839               	movf	stoa@w,w
 12646  16CB  0240               	subwf	stoa@l,w
 12647  16CC                     u5185:
 12648  16CC  1C03               	skipc
 12649  16CD  2EB0               	goto	l7223
 12650  16CE                     l7229:
 12651                           
 12652                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 595:     i = 0;
 12653  16CE  0020               	movlb	0	; select bank0
 12654  16CF  01B7               	clrf	stoa@i
 12655  16D0  01B8               	clrf	stoa@i+1
 12656  16D1                     l7237:	
 12657                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 596:     while (i < 
      +                          p) {
 12658                           
 12659                           
 12660                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 596:     while (i < 
      +                          p) {
 12661  16D1  0838               	movf	stoa@i+1,w
 12662  16D2  3A80               	xorlw	128
 12663  16D3  00AD               	movwf	??_stoa
 12664  16D4  083F               	movf	stoa@p+1,w
 12665  16D5  3A80               	xorlw	128
 12666  16D6  022D               	subwf	??_stoa,w
 12667  16D7  1D03               	skipz
 12668  16D8  2EDB               	goto	u5195
 12669  16D9  083E               	movf	stoa@p,w
 12670  16DA  0237               	subwf	stoa@i,w
 12671  16DB                     u5195:
 12672  16DB  1803               	btfsc	3,0
 12673  16DC  2EFA               	goto	l2050
 12674                           
 12675                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 597:         fputc(*
      +                          cp, fp);
 12676  16DD  0020               	movlb	0	; select bank0
 12677  16DE  083C               	movf	stoa@cp,w
 12678  16DF  0084               	movwf	4
 12679  16E0  083D               	movf	stoa@cp+1,w
 12680  16E1  0085               	movwf	5
 12681  16E2  0800               	movf	0,w	;code access
 12682  16E3  00AD               	movwf	??_stoa
 12683  16E4  01AE               	clrf	??_stoa+1
 12684  16E5  082D               	movf	??_stoa,w
 12685  16E6  00A3               	movwf	fputc@c
 12686  16E7  082E               	movf	??_stoa+1,w
 12687  16E8  00A4               	movwf	fputc@c+1
 12688  16E9  083B               	movf	stoa@fp,w
 12689  16EA  00AF               	movwf	??_stoa+2
 12690  16EB  082F               	movf	??_stoa+2,w
 12691  16EC  00A5               	movwf	fputc@fp
 12692  16ED  319E  26C3  3196   	fcall	_fputc
 12693                           
 12694                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 598:         ++cp;
 12695  16F0  3001               	movlw	1
 12696  16F1  0020               	movlb	0	; select bank0
 12697  16F2  07BC               	addwf	stoa@cp,f
 12698  16F3  3000               	movlw	0
 12699  16F4  3DBD               	addwfc	stoa@cp+1,f
 12700                           
 12701                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 599:         ++i;
 12702  16F5  3001               	movlw	1
 12703  16F6  07B7               	addwf	stoa@i,f
 12704  16F7  3000               	movlw	0
 12705  16F8  3DB8               	addwfc	stoa@i+1,f
 12706  16F9  2ED1               	goto	l7237
 12707  16FA                     l2050:
 12708                           
 12709                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 603:     if (flags &
      +                           (1 << 0)) {
 12710  16FA  0022               	movlb	2	; select bank2
 12711  16FB  182A               	btfsc	_flags^(0+256),0
 12712  16FC  2F0F               	goto	l7245
 12713  16FD  2F1C               	goto	l7247
 12714  16FE                     l7241:
 12715                           
 12716                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 605:             fpu
      +                          tc(' ', fp);
 12717  16FE  3020               	movlw	32
 12718  16FF  0020               	movlb	0	; select bank0
 12719  1700  00A3               	movwf	fputc@c
 12720  1701  3000               	movlw	0
 12721  1702  00A4               	movwf	fputc@c+1
 12722  1703  083B               	movf	stoa@fp,w
 12723  1704  00AD               	movwf	??_stoa
 12724  1705  082D               	movf	??_stoa,w
 12725  1706  00A5               	movwf	fputc@fp
 12726  1707  319E  26C3  3196   	fcall	_fputc
 12727                           
 12728                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 606:             ++l
      +                          ;
 12729  170A  3001               	movlw	1
 12730  170B  0020               	movlb	0	; select bank0
 12731  170C  07C0               	addwf	stoa@l,f
 12732  170D  3000               	movlw	0
 12733  170E  3DC1               	addwfc	stoa@l+1,f
 12734  170F                     l7245:
 12735                           
 12736                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 604:         while (
      +                          l < w) {
 12737  170F  0020               	movlb	0	; select bank0
 12738  1710  0841               	movf	stoa@l+1,w
 12739  1711  3A80               	xorlw	128
 12740  1712  00AD               	movwf	??_stoa
 12741  1713  083A               	movf	stoa@w+1,w
 12742  1714  3A80               	xorlw	128
 12743  1715  022D               	subwf	??_stoa,w
 12744  1716  1D03               	skipz
 12745  1717  2F1A               	goto	u5215
 12746  1718  0839               	movf	stoa@w,w
 12747  1719  0240               	subwf	stoa@l,w
 12748  171A                     u5215:
 12749  171A  1C03               	skipc
 12750  171B  2EFE               	goto	l7241
 12751  171C                     l7247:
 12752                           
 12753                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 610:     return l;
 12754  171C  0020               	movlb	0	; select bank0
 12755  171D  0841               	movf	stoa@l+1,w
 12756  171E  00AC               	movwf	?_stoa+1
 12757  171F  0840               	movf	stoa@l,w
 12758  1720  00AB               	movwf	?_stoa
 12759  1721  0008               	return
 12760  1722                     __end_of_stoa:
 12761                           
 12762                           	psect	text20
 12763  0949                     __ptext20:	
 12764 ;; *************** function _dtoa *****************
 12765 ;; Defined at:
 12766 ;;		line 287 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 12767 ;; Parameters:    Size  Location     Type
 12768 ;;  fp              1    wreg     PTR struct _IO_FILE
 12769 ;;		 -> sprintf@f(6), 
 12770 ;;  d               8   30[BANK0 ] long long 
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;  fp              1   41[BANK0 ] PTR struct _IO_FILE
 12773 ;;		 -> sprintf@f(6), 
 12774 ;;  n               8   50[BANK0 ] long long 
 12775 ;;  i               2   58[BANK0 ] int 
 12776 ;;  s               2   48[BANK0 ] int 
 12777 ;;  w               2   46[BANK0 ] int 
 12778 ;;  p               2   44[BANK0 ] int 
 12779 ;; Return value:  Size  Location     Type
 12780 ;;                  2   30[BANK0 ] int 
 12781 ;; Registers used:
 12782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12783 ;; Tracked objects:
 12784 ;;		On entry : 1F/1
 12785 ;;		On exit  : 1F/0
 12786 ;;		Unchanged: 0/0
 12787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12788 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12789 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12790 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12791 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12792 ;;Total ram usage:       30 bytes
 12793 ;; Hardware stack levels used:    1
 12794 ;; Hardware stack levels required when called:   11
 12795 ;; This function calls:
 12796 ;;		___aodiv
 12797 ;;		___aomod
 12798 ;;		_abs
 12799 ;;		_pad
 12800 ;; This function is called by:
 12801 ;;		_vfpfcnvrt
 12802 ;; This function uses a non-reentrant model
 12803 ;;
 12804                           
 12805                           
 12806                           ;psect for function _dtoa
 12807  0949                     _dtoa:
 12808                           
 12809                           ;incstack = 0
 12810                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12811                           ;dtoa@fp stored from wreg
 12812  0949  0020               	movlb	0	; select bank0
 12813  094A  00C9               	movwf	dtoa@fp
 12814                           
 12815                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 287: static int dtoa
      +                          (FILE *fp, long long d);/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.
      +                          c: 288: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 289:     in
      +                          t i, p, s, w;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 290:   
      +                            long long n;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 293:  
      +                             n = d;
 12816  094B  083E               	movf	dtoa@d,w
 12817  094C  00D2               	movwf	dtoa@n
 12818  094D  083F               	movf	dtoa@d+1,w
 12819  094E  00D3               	movwf	dtoa@n+1
 12820  094F  0840               	movf	dtoa@d+2,w
 12821  0950  00D4               	movwf	dtoa@n+2
 12822  0951  0841               	movf	dtoa@d+3,w
 12823  0952  00D5               	movwf	dtoa@n+3
 12824  0953  0842               	movf	dtoa@d+4,w
 12825  0954  00D6               	movwf	dtoa@n+4
 12826  0955  0843               	movf	dtoa@d+5,w
 12827  0956  00D7               	movwf	dtoa@n+5
 12828  0957  0844               	movf	dtoa@d+6,w
 12829  0958  00D8               	movwf	dtoa@n+6
 12830  0959  0845               	movf	dtoa@d+7,w
 12831  095A  00D9               	movwf	dtoa@n+7
 12832                           
 12833                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ?
      +                           1 : 0;
 12834  095B  3052               	movlw	low dtoa@n
 12835  095C  0086               	movwf	6
 12836  095D  3000               	movlw	high dtoa@n
 12837  095E  0087               	movwf	7
 12838  095F  3F47               	moviw [7]fsr1
 12839  0960  00C6               	movwf	??_dtoa
 12840  0961  1FC6               	btfss	??_dtoa,7
 12841  0962  2965               	goto	u4970
 12842  0963  3001               	movlw	1
 12843  0964  2966               	goto	u4980
 12844  0965                     u4970:
 12845  0965  3000               	movlw	0
 12846  0966                     u4980:
 12847  0966  0020               	movlb	0	; select bank0
 12848  0967  00C7               	movwf	??_dtoa+1
 12849  0968  01C8               	clrf	??_dtoa+2
 12850  0969  0847               	movf	??_dtoa+1,w
 12851  096A  00D0               	movwf	dtoa@s
 12852  096B  0848               	movf	??_dtoa+2,w
 12853  096C  00D1               	movwf	dtoa@s+1
 12854                           
 12855                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 295:     if (s) {
 12856  096D  0850               	movf	dtoa@s,w
 12857  096E  0451               	iorwf	dtoa@s+1,w
 12858  096F  1903               	btfsc	3,2
 12859  0970  298F               	goto	l2009
 12860                           
 12861                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 296:         n = -n;
 12862  0971  09D2               	comf	dtoa@n,f
 12863  0972  09D3               	comf	dtoa@n+1,f
 12864  0973  09D4               	comf	dtoa@n+2,f
 12865  0974  09D5               	comf	dtoa@n+3,f
 12866  0975  09D6               	comf	dtoa@n+4,f
 12867  0976  09D7               	comf	dtoa@n+5,f
 12868  0977  09D8               	comf	dtoa@n+6,f
 12869  0978  09D9               	comf	dtoa@n+7,f
 12870  0979  0AD2               	incf	dtoa@n,f
 12871  097A  1D03               	skipz
 12872  097B  298F               	goto	l2009
 12873  097C  0AD3               	incf	dtoa@n+1,f
 12874  097D  1D03               	skipz
 12875  097E  298F               	goto	l2009
 12876  097F  0AD4               	incf	dtoa@n+2,f
 12877  0980  1D03               	skipz
 12878  0981  298F               	goto	l2009
 12879  0982  0AD5               	incf	dtoa@n+3,f
 12880  0983  1D03               	skipz
 12881  0984  298F               	goto	l2009
 12882  0985  0AD6               	incf	dtoa@n+4,f
 12883  0986  1D03               	skipz
 12884  0987  298F               	goto	l2009
 12885  0988  0AD7               	incf	dtoa@n+5,f
 12886  0989  1D03               	skipz
 12887  098A  298F               	goto	l2009
 12888  098B  0AD8               	incf	dtoa@n+6,f
 12889  098C  1D03               	skipz
 12890  098D  298F               	goto	l2009
 12891  098E  0AD9               	incf	dtoa@n+7,f
 12892  098F                     l2009:	
 12893                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 297:     }
 12894                           
 12895                           
 12896                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 300:     if (!(prec 
      +                          < 0)) {
 12897  098F  0022               	movlb	2	; select bank2
 12898  0990  1BA9               	btfsc	(_prec+1)^(0+256),7
 12899  0991  2996               	goto	l2010
 12900                           
 12901                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 301:         flags &
      +                          = ~(1 << 1);
 12902  0992  30FD               	movlw	253
 12903  0993  05AA               	andwf	_flags^(0+256),f
 12904  0994  30FF               	movlw	255
 12905  0995  05AB               	andwf	(_flags+1)^(0+256),f
 12906  0996                     l2010:	
 12907                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 302:     }
 12908                           
 12909                           
 12910                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 303:     p = (0 < pr
      +                          ec) ? prec : 1;
 12911  0996  0829               	movf	(_prec+1)^(0+256),w
 12912  0997  3A80               	xorlw	128
 12913  0998  0020               	movlb	0	; select bank0
 12914  0999  00C6               	movwf	??_dtoa
 12915  099A  3080               	movlw	128
 12916  099B  0246               	subwf	??_dtoa,w
 12917  099C  1D03               	skipz
 12918  099D  29A1               	goto	u5025
 12919  099E  3001               	movlw	1
 12920  099F  0022               	movlb	2	; select bank2
 12921  09A0  0228               	subwf	_prec^(0+256),w
 12922  09A1                     u5025:
 12923  09A1  1803               	skipnc
 12924  09A2  29A9               	goto	l7155
 12925  09A3  3001               	movlw	1
 12926  09A4  0020               	movlb	0	; select bank0
 12927  09A5  00CC               	movwf	dtoa@p
 12928  09A6  3000               	movlw	0
 12929  09A7  00CD               	movwf	dtoa@p+1
 12930  09A8  29B1               	goto	l2014
 12931  09A9                     l7155:
 12932  09A9  0022               	movlb	2	; select bank2
 12933  09AA  0829               	movf	(_prec+1)^(0+256),w
 12934  09AB  0020               	movlb	0	; select bank0
 12935  09AC  00CD               	movwf	dtoa@p+1
 12936  09AD  0022               	movlb	2	; select bank2
 12937  09AE  0828               	movf	_prec^(0+256),w
 12938  09AF  0020               	movlb	0	; select bank0
 12939  09B0  00CC               	movwf	dtoa@p
 12940  09B1                     l2014:
 12941                           
 12942                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 304:     w = width;
 12943  09B1  0022               	movlb	2	; select bank2
 12944  09B2  0827               	movf	(_width+1)^(0+256),w
 12945  09B3  0020               	movlb	0	; select bank0
 12946  09B4  00CF               	movwf	dtoa@w+1
 12947  09B5  0022               	movlb	2	; select bank2
 12948  09B6  0826               	movf	_width^(0+256),w
 12949  09B7  0020               	movlb	0	; select bank0
 12950  09B8  00CE               	movwf	dtoa@w
 12951                           
 12952                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 305:     if (s || (f
      +                          lags & (1 << 2))) {
 12953  09B9  0850               	movf	dtoa@s,w
 12954  09BA  0451               	iorwf	dtoa@s+1,w
 12955  09BB  1D03               	btfss	3,2
 12956  09BC  29C0               	goto	l7161
 12957  09BD  0022               	movlb	2	; select bank2
 12958  09BE  1D2A               	btfss	_flags^(0+256),2
 12959  09BF  29C5               	goto	l2015
 12960  09C0                     l7161:
 12961                           
 12962                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 306:         --w;
 12963  09C0  30FF               	movlw	255
 12964  09C1  0020               	movlb	0	; select bank0
 12965  09C2  07CE               	addwf	dtoa@w,f
 12966  09C3  30FF               	movlw	255
 12967  09C4  3DCF               	addwfc	dtoa@w+1,f
 12968  09C5                     l2015:	
 12969                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 307:     }
 12970                           
 12971                           
 12972                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(
      +                          dbuf) - 1;
 12973  09C5  301F               	movlw	31
 12974  09C6  0020               	movlb	0	; select bank0
 12975  09C7  00DA               	movwf	dtoa@i
 12976  09C8  3000               	movlw	0
 12977  09C9  00DB               	movwf	dtoa@i+1
 12978                           
 12979                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '
      +                          \0';
 12980  09CA  0025               	movlb	5	; select bank5
 12981  09CB  01BF               	clrf	(_dbuf^(0+640)+31)
 12982                           
 12983                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12984  09CC  2A59               	goto	l2018
 12985  09CD                     l7175:
 12986  09CD  0020               	movlb	0	; select bank0
 12987  09CE  0852               	movf	dtoa@n,w
 12988  09CF  0453               	iorwf	dtoa@n+1,w
 12989  09D0  0454               	iorwf	dtoa@n+2,w
 12990  09D1  0455               	iorwf	dtoa@n+3,w
 12991  09D2  0456               	iorwf	dtoa@n+4,w
 12992  09D3  0457               	iorwf	dtoa@n+5,w
 12993  09D4  0458               	iorwf	dtoa@n+6,w
 12994  09D5  0459               	iorwf	dtoa@n+7,w
 12995  09D6  1D03               	skipz
 12996  09D7  29F2               	goto	l7165
 12997  09D8  084D               	movf	dtoa@p+1,w
 12998  09D9  3A80               	xorlw	128
 12999  09DA  00C6               	movwf	??_dtoa
 13000  09DB  3080               	movlw	128
 13001  09DC  0246               	subwf	??_dtoa,w
 13002  09DD  1D03               	skipz
 13003  09DE  29E1               	goto	u5075
 13004  09DF  3001               	movlw	1
 13005  09E0  024C               	subwf	dtoa@p,w
 13006  09E1                     u5075:
 13007  09E1  1803               	skipnc
 13008  09E2  29F2               	goto	l7165
 13009  09E3  0020               	movlb	0	; select bank0
 13010  09E4  084F               	movf	dtoa@w+1,w
 13011  09E5  3A80               	xorlw	128
 13012  09E6  00C6               	movwf	??_dtoa
 13013  09E7  3080               	movlw	128
 13014  09E8  0246               	subwf	??_dtoa,w
 13015  09E9  1D03               	skipz
 13016  09EA  29ED               	goto	u5085
 13017  09EB  3001               	movlw	1
 13018  09EC  024E               	subwf	dtoa@w,w
 13019  09ED                     u5085:
 13020  09ED  1C03               	skipc
 13021  09EE  2A65               	goto	l7183
 13022  09EF  0022               	movlb	2	; select bank2
 13023  09F0  1CAA               	btfss	_flags^(0+256),1
 13024  09F1  2A65               	goto	l7183
 13025  09F2                     l7165:
 13026                           
 13027                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 313:         --i;
 13028  09F2  30FF               	movlw	255
 13029  09F3  0020               	movlb	0	; select bank0
 13030  09F4  07DA               	addwf	dtoa@i,f
 13031  09F5  30FF               	movlw	255
 13032  09F6  3DDB               	addwfc	dtoa@i+1,f
 13033                           
 13034                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 314:         dbuf[i]
      +                           = (char)((int)'0' + abs(n % 10));
 13035  09F7  300A               	movlw	10
 13036  09F8  00A3               	movwf	___aomod@divisor
 13037  09F9  01A4               	clrf	___aomod@divisor+1
 13038  09FA  01A5               	clrf	___aomod@divisor+2
 13039  09FB  01A6               	clrf	___aomod@divisor+3
 13040  09FC  01A7               	clrf	___aomod@divisor+4
 13041  09FD  01A8               	clrf	___aomod@divisor+5
 13042  09FE  01A9               	clrf	___aomod@divisor+6
 13043  09FF  01AA               	clrf	___aomod@divisor+7
 13044  0A00  0852               	movf	dtoa@n,w
 13045  0A01  00AB               	movwf	___aomod@dividend
 13046  0A02  0853               	movf	dtoa@n+1,w
 13047  0A03  00AC               	movwf	___aomod@dividend+1
 13048  0A04  0854               	movf	dtoa@n+2,w
 13049  0A05  00AD               	movwf	___aomod@dividend+2
 13050  0A06  0855               	movf	dtoa@n+3,w
 13051  0A07  00AE               	movwf	___aomod@dividend+3
 13052  0A08  0856               	movf	dtoa@n+4,w
 13053  0A09  00AF               	movwf	___aomod@dividend+4
 13054  0A0A  0857               	movf	dtoa@n+5,w
 13055  0A0B  00B0               	movwf	___aomod@dividend+5
 13056  0A0C  0858               	movf	dtoa@n+6,w
 13057  0A0D  00B1               	movwf	___aomod@dividend+6
 13058  0A0E  0859               	movf	dtoa@n+7,w
 13059  0A0F  00B2               	movwf	___aomod@dividend+7
 13060  0A10  3197  2722  3189   	fcall	___aomod
 13061  0A13  0824               	movf	?___aomod+1,w
 13062  0A14  00B7               	movwf	abs@a+1
 13063  0A15  0823               	movf	?___aomod,w
 13064  0A16  00B6               	movwf	abs@a
 13065  0A17  3199  218A  3189   	fcall	_abs
 13066  0A1A  0020               	movlb	0	; select bank0
 13067  0A1B  0836               	movf	?_abs,w
 13068  0A1C  3E30               	addlw	48
 13069  0A1D  00C6               	movwf	??_dtoa
 13070  0A1E  085A               	movf	dtoa@i,w
 13071  0A1F  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13072  0A20  0086               	movwf	6
 13073  0A21  3002               	movlw	2	; select bank5/6
 13074  0A22  0087               	movwf	7
 13075  0A23  0846               	movf	??_dtoa,w
 13076  0A24  0081               	movwf	1
 13077                           
 13078                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 315:         --p;
 13079  0A25  30FF               	movlw	255
 13080  0A26  07CC               	addwf	dtoa@p,f
 13081  0A27  30FF               	movlw	255
 13082  0A28  3DCD               	addwfc	dtoa@p+1,f
 13083                           
 13084                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 316:         --w;
 13085  0A29  30FF               	movlw	255
 13086  0A2A  07CE               	addwf	dtoa@w,f
 13087  0A2B  30FF               	movlw	255
 13088  0A2C  3DCF               	addwfc	dtoa@w+1,f
 13089                           
 13090                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 317:         n = n /
      +                           10;
 13091  0A2D  300A               	movlw	10
 13092  0A2E  00A3               	movwf	___aodiv@divisor
 13093  0A2F  01A4               	clrf	___aodiv@divisor+1
 13094  0A30  01A5               	clrf	___aodiv@divisor+2
 13095  0A31  01A6               	clrf	___aodiv@divisor+3
 13096  0A32  01A7               	clrf	___aodiv@divisor+4
 13097  0A33  01A8               	clrf	___aodiv@divisor+5
 13098  0A34  01A9               	clrf	___aodiv@divisor+6
 13099  0A35  01AA               	clrf	___aodiv@divisor+7
 13100  0A36  0852               	movf	dtoa@n,w
 13101  0A37  00AB               	movwf	___aodiv@dividend
 13102  0A38  0853               	movf	dtoa@n+1,w
 13103  0A39  00AC               	movwf	___aodiv@dividend+1
 13104  0A3A  0854               	movf	dtoa@n+2,w
 13105  0A3B  00AD               	movwf	___aodiv@dividend+2
 13106  0A3C  0855               	movf	dtoa@n+3,w
 13107  0A3D  00AE               	movwf	___aodiv@dividend+3
 13108  0A3E  0856               	movf	dtoa@n+4,w
 13109  0A3F  00AF               	movwf	___aodiv@dividend+4
 13110  0A40  0857               	movf	dtoa@n+5,w
 13111  0A41  00B0               	movwf	___aodiv@dividend+5
 13112  0A42  0858               	movf	dtoa@n+6,w
 13113  0A43  00B1               	movwf	___aodiv@dividend+6
 13114  0A44  0859               	movf	dtoa@n+7,w
 13115  0A45  00B2               	movwf	___aodiv@dividend+7
 13116  0A46  3186  26F7  3189   	fcall	___aodiv
 13117  0A49  0823               	movf	?___aodiv,w
 13118  0A4A  00D2               	movwf	dtoa@n
 13119  0A4B  0824               	movf	?___aodiv+1,w
 13120  0A4C  00D3               	movwf	dtoa@n+1
 13121  0A4D  0825               	movf	?___aodiv+2,w
 13122  0A4E  00D4               	movwf	dtoa@n+2
 13123  0A4F  0826               	movf	?___aodiv+3,w
 13124  0A50  00D5               	movwf	dtoa@n+3
 13125  0A51  0827               	movf	?___aodiv+4,w
 13126  0A52  00D6               	movwf	dtoa@n+4
 13127  0A53  0828               	movf	?___aodiv+5,w
 13128  0A54  00D7               	movwf	dtoa@n+5
 13129  0A55  0829               	movf	?___aodiv+6,w
 13130  0A56  00D8               	movwf	dtoa@n+6
 13131  0A57  082A               	movf	?___aodiv+7,w
 13132  0A58  00D9               	movwf	dtoa@n+7
 13133  0A59                     l2018:	
 13134                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 318:     }
 13135                           
 13136                           
 13137                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 312:     while (!(i 
      +                          < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13138  0A59  0020               	movlb	0	; select bank0
 13139  0A5A  085B               	movf	dtoa@i+1,w
 13140  0A5B  3A80               	xorlw	128
 13141  0A5C  00C6               	movwf	??_dtoa
 13142  0A5D  3080               	movlw	128
 13143  0A5E  0246               	subwf	??_dtoa,w
 13144  0A5F  1D03               	skipz
 13145  0A60  2A63               	goto	u5055
 13146  0A61  3001               	movlw	1
 13147  0A62  025A               	subwf	dtoa@i,w
 13148  0A63                     u5055:
 13149  0A63  1803               	btfsc	3,0
 13150  0A64  29CD               	goto	l7175
 13151  0A65                     l7183:
 13152                           
 13153                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 321:     if (s || (f
      +                          lags & (1 << 2))) {
 13154  0A65  0020               	movlb	0	; select bank0
 13155  0A66  0850               	movf	dtoa@s,w
 13156  0A67  0451               	iorwf	dtoa@s+1,w
 13157  0A68  1D03               	btfss	3,2
 13158  0A69  2A6D               	goto	l7187
 13159  0A6A  0022               	movlb	2	; select bank2
 13160  0A6B  1D2A               	btfss	_flags^(0+256),2
 13161  0A6C  2A85               	goto	l7197
 13162  0A6D                     l7187:
 13163                           
 13164                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 322:         --i;
 13165  0A6D  30FF               	movlw	255
 13166  0A6E  0020               	movlb	0	; select bank0
 13167  0A6F  07DA               	addwf	dtoa@i,f
 13168  0A70  30FF               	movlw	255
 13169  0A71  3DDB               	addwfc	dtoa@i+1,f
 13170                           
 13171                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 323:         dbuf[i]
      +                           = s ? '-' : '+';
 13172  0A72  0850               	movf	dtoa@s,w
 13173  0A73  0451               	iorwf	dtoa@s+1,w
 13174  0A74  1D03               	btfss	3,2
 13175  0A75  2A78               	goto	l7193
 13176  0A76  302B               	movlw	43
 13177  0A77  2A79               	goto	L6
 13178  0A78                     l7193:
 13179  0A78  302D               	movlw	45
 13180  0A79                     L6:
 13181  0A79  00CA               	movwf	_dtoa$2213
 13182  0A7A  3000               	movlw	0
 13183  0A7B  00CB               	movwf	_dtoa$2213+1
 13184  0A7C  084A               	movf	_dtoa$2213,w
 13185  0A7D  00C6               	movwf	??_dtoa
 13186  0A7E  085A               	movf	dtoa@i,w
 13187  0A7F  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13188  0A80  0086               	movwf	6
 13189  0A81  3002               	movlw	2	; select bank5/6
 13190  0A82  0087               	movwf	7
 13191  0A83  0846               	movf	??_dtoa,w
 13192  0A84  0081               	movwf	1
 13193  0A85                     l7197:
 13194                           
 13195                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 327:     return pad(
      +                          fp, &dbuf[i], w);
 13196  0A85  0020               	movlb	0	; select bank0
 13197  0A86  085A               	movf	dtoa@i,w
 13198  0A87  3EA0               	addlw	(low (_dbuf| (0+512)))& (0+255)
 13199  0A88  00C6               	movwf	??_dtoa
 13200  0A89  0846               	movf	??_dtoa,w
 13201  0A8A  00B3               	movwf	pad@buf
 13202  0A8B  084F               	movf	dtoa@w+1,w
 13203  0A8C  00B5               	movwf	pad@p+1
 13204  0A8D  084E               	movf	dtoa@w,w
 13205  0A8E  00B4               	movwf	pad@p
 13206  0A8F  0849               	movf	dtoa@fp,w
 13207  0A90  319F  275E         	fcall	_pad
 13208  0A92  0834               	movf	?_pad+1,w
 13209  0A93  00BF               	movwf	?_dtoa+1
 13210  0A94  0833               	movf	?_pad,w
 13211  0A95  00BE               	movwf	?_dtoa
 13212  0A96  0008               	return
 13213  0A97                     __end_of_dtoa:
 13214                           
 13215                           	psect	text21
 13216  1F5E                     __ptext21:	
 13217 ;; *************** function _pad *****************
 13218 ;; Defined at:
 13219 ;;		line 72 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c"
 13220 ;; Parameters:    Size  Location     Type
 13221 ;;  fp              1    wreg     PTR struct _IO_FILE
 13222 ;;		 -> sprintf@f(6), 
 13223 ;;  buf             1   19[BANK0 ] PTR unsigned char 
 13224 ;;		 -> dbuf(32), 
 13225 ;;  p               2   20[BANK0 ] int 
 13226 ;; Auto vars:     Size  Location     Type
 13227 ;;  fp              1   27[BANK0 ] PTR struct _IO_FILE
 13228 ;;		 -> sprintf@f(6), 
 13229 ;;  w               2   25[BANK0 ] int 
 13230 ;;  i               2   23[BANK0 ] int 
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  2   19[BANK0 ] int 
 13233 ;; Registers used:
 13234 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13235 ;; Tracked objects:
 13236 ;;		On entry : 1F/0
 13237 ;;		On exit  : 1F/0
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13240 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13241 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13242 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13243 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13244 ;;Total ram usage:        9 bytes
 13245 ;; Hardware stack levels used:    1
 13246 ;; Hardware stack levels required when called:   10
 13247 ;; This function calls:
 13248 ;;		_fputc
 13249 ;;		_fputs
 13250 ;;		_strlen
 13251 ;; This function is called by:
 13252 ;;		_dtoa
 13253 ;;		_xtoa
 13254 ;; This function uses a non-reentrant model
 13255 ;;
 13256                           
 13257                           
 13258                           ;psect for function _pad
 13259  1F5E                     _pad:
 13260                           
 13261                           ;incstack = 0
 13262                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13263                           ;pad@fp stored from wreg
 13264  1F5E  00BB               	movwf	pad@fp
 13265                           
 13266                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 72: static int pad(F
      +                          ILE *fp, char *buf, int p);/Applications/microchip/xc8/v2.30/pic/sources/c99/common/dopr
      +                          nt.c: 73: {;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 74:     i
      +                          nt i, w;;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 77:     if (
      +                          flags & (1 << 0)) {
 13267  1F5F  0022               	movlb	2	; select bank2
 13268  1F60  1C2A               	btfss	_flags^(0+256),0
 13269  1F61  2F6B               	goto	l7025
 13270                           
 13271                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 78:         fputs((c
      +                          onst char *)buf, fp);
 13272  1F62  0020               	movlb	0	; select bank0
 13273  1F63  083B               	movf	pad@fp,w
 13274  1F64  00B6               	movwf	??_pad
 13275  1F65  0836               	movf	??_pad,w
 13276  1F66  00AB               	movwf	fputs@fp
 13277  1F67  0833               	movf	pad@buf,w
 13278  1F68  319B  23AF  319F   	fcall	_fputs
 13279  1F6B                     l7025:
 13280                           
 13281                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) 
      +                          ? 0 : p;
 13282  1F6B  0020               	movlb	0	; select bank0
 13283  1F6C  1BB5               	btfsc	pad@p+1,7
 13284  1F6D  2F73               	goto	l7029
 13285  1F6E  0835               	movf	pad@p+1,w
 13286  1F6F  00BA               	movwf	pad@w+1
 13287  1F70  0834               	movf	pad@p,w
 13288  1F71  00B9               	movwf	pad@w
 13289  1F72  2F75               	goto	l2001
 13290  1F73                     l7029:
 13291  1F73  01B9               	clrf	pad@w
 13292  1F74  01BA               	clrf	pad@w+1
 13293  1F75                     l2001:
 13294                           
 13295                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 13296  1F75  01B7               	clrf	pad@i
 13297  1F76  01B8               	clrf	pad@i+1
 13298  1F77                     l7035:	
 13299                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 13300                           
 13301                           
 13302                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 84:     while (i < w
      +                          ) {
 13303  1F77  0838               	movf	pad@i+1,w
 13304  1F78  3A80               	xorlw	128
 13305  1F79  00B6               	movwf	??_pad
 13306  1F7A  083A               	movf	pad@w+1,w
 13307  1F7B  3A80               	xorlw	128
 13308  1F7C  0236               	subwf	??_pad,w
 13309  1F7D  1D03               	skipz
 13310  1F7E  2F81               	goto	u4815
 13311  1F7F  0839               	movf	pad@w,w
 13312  1F80  0237               	subwf	pad@i,w
 13313  1F81                     u4815:
 13314  1F81  1803               	btfsc	3,0
 13315  1F82  2F95               	goto	l2004
 13316                           
 13317                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 85:         fputc(' 
      +                          ', fp);
 13318  1F83  3020               	movlw	32
 13319  1F84  0020               	movlb	0	; select bank0
 13320  1F85  00A3               	movwf	fputc@c
 13321  1F86  3000               	movlw	0
 13322  1F87  00A4               	movwf	fputc@c+1
 13323  1F88  083B               	movf	pad@fp,w
 13324  1F89  00B6               	movwf	??_pad
 13325  1F8A  0836               	movf	??_pad,w
 13326  1F8B  00A5               	movwf	fputc@fp
 13327  1F8C  319E  26C3  319F   	fcall	_fputc
 13328                           
 13329                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 86:         ++i;
 13330  1F8F  3001               	movlw	1
 13331  1F90  0020               	movlb	0	; select bank0
 13332  1F91  07B7               	addwf	pad@i,f
 13333  1F92  3000               	movlw	0
 13334  1F93  3DB8               	addwfc	pad@i+1,f
 13335  1F94  2F77               	goto	l7035
 13336  1F95                     l2004:
 13337                           
 13338                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 90:     if (!(flags 
      +                          & (1 << 0))) {
 13339  1F95  0022               	movlb	2	; select bank2
 13340  1F96  182A               	btfsc	_flags^(0+256),0
 13341  1F97  2FA1               	goto	l7039
 13342                           
 13343                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 91:         fputs((c
      +                          onst char *)buf, fp);
 13344  1F98  0020               	movlb	0	; select bank0
 13345  1F99  083B               	movf	pad@fp,w
 13346  1F9A  00B6               	movwf	??_pad
 13347  1F9B  0836               	movf	??_pad,w
 13348  1F9C  00AB               	movwf	fputs@fp
 13349  1F9D  0833               	movf	pad@buf,w
 13350  1F9E  319B  23AF  319F   	fcall	_fputs
 13351  1FA1                     l7039:
 13352                           
 13353                           ;/Applications/microchip/xc8/v2.30/pic/sources/c99/common/doprnt.c: 94:     return (int)
      +                          (strlen(buf) + (size_t)w);
 13354  1FA1  0020               	movlb	0	; select bank0
 13355  1FA2  0833               	movf	pad@buf,w
 13356  1FA3  00A3               	movwf	strlen@s
 13357  1FA4  3002               	movlw	2
 13358  1FA5  00A4               	movwf	strlen@s+1
 13359  1FA6  3199  215B         	fcall	_strlen
 13360  1FA8  0839               	movf	pad@w,w
 13361  1FA9  0723               	addwf	?_strlen,w
 13362  1FAA  00B3               	movwf	?_pad
 13363  1FAB  083A               	movf	pad@w+1,w
 13364  1FAC  3D24               	addwfc	?_strlen+1,w
 13365  1FAD  00B4               	movwf	?_pad+1
 13366  1FAE  0008               	return
 13367  1FAF                     __end_of_pad:
 13368                           
 13369                           	psect	text22
 13370  195B                     __ptext22:	
 13371 ;; *************** function _strlen *****************
 13372 ;; Defined at:
 13373 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/strlen.c"
 13374 ;; Parameters:    Size  Location     Type
 13375 ;;  s               2    3[BANK0 ] PTR const unsigned char 
 13376 ;;		 -> stoa@nuls(7), dbuf(32), ?_sprintf(2), lcd_fs_name(112), 
 13377 ;;		 -> lcd_hpf_fc(63), lcd_aux_name(14), lcd_src_name(40), ledstr(0), 
 13378 ;; Auto vars:     Size  Location     Type
 13379 ;;  a               2    6[BANK0 ] PTR const unsigned char 
 13380 ;;		 -> stoa@nuls(7), dbuf(32), ?_sprintf(2), lcd_fs_name(112), 
 13381 ;;		 -> lcd_hpf_fc(63), lcd_aux_name(14), lcd_src_name(40), ledstr(0), 
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  2    3[BANK0 ] unsigned int 
 13384 ;; Registers used:
 13385 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 13386 ;; Tracked objects:
 13387 ;;		On entry : 1F/4900000
 13388 ;;		On exit  : 1F/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13391 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13392 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13393 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13394 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13395 ;;Total ram usage:        5 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:    7
 13398 ;; This function calls:
 13399 ;;		Nothing
 13400 ;; This function is called by:
 13401 ;;		_pad
 13402 ;;		_stoa
 13403 ;;		_strcat
 13404 ;; This function uses a non-reentrant model
 13405 ;;
 13406                           
 13407                           
 13408                           ;psect for function _strlen
 13409  195B                     _strlen:
 13410                           
 13411                           ;incstack = 0
 13412                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 13413  195B  0824               	movf	strlen@s+1,w
 13414  195C  00A7               	movwf	strlen@a+1
 13415  195D  0823               	movf	strlen@s,w
 13416  195E  00A6               	movwf	strlen@a
 13417  195F                     l6875:
 13418  195F  0823               	movf	strlen@s,w
 13419  1960  0084               	movwf	4
 13420  1961  0824               	movf	strlen@s+1,w
 13421  1962  0085               	movwf	5
 13422  1963  0012               	moviw fsr0++
 13423  1964  1903               	btfsc	3,2
 13424  1965  296B               	goto	l6877
 13425  1966  3001               	movlw	1
 13426  1967  07A3               	addwf	strlen@s,f
 13427  1968  3000               	movlw	0
 13428  1969  3DA4               	addwfc	strlen@s+1,f
 13429  196A  295F               	goto	l6875
 13430  196B                     l6877:
 13431  196B  0826               	movf	strlen@a,w
 13432  196C  0223               	subwf	strlen@s,w
 13433  196D  00A3               	movwf	?_strlen
 13434  196E  0827               	movf	strlen@a+1,w
 13435  196F  3B24               	subwfb	strlen@s+1,w
 13436  1970  00A4               	movwf	?_strlen+1
 13437  1971  0008               	return
 13438  1972                     __end_of_strlen:
 13439                           
 13440                           	psect	text23
 13441  1BAF                     __ptext23:	
 13442 ;; *************** function _fputs *****************
 13443 ;; Defined at:
 13444 ;;		line 8 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputs.c"
 13445 ;; Parameters:    Size  Location     Type
 13446 ;;  s               1    wreg     PTR const unsigned char 
 13447 ;;		 -> dbuf(32), 
 13448 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 13449 ;;		 -> sprintf@f(6), 
 13450 ;; Auto vars:     Size  Location     Type
 13451 ;;  s               1   18[BANK0 ] PTR const unsigned char 
 13452 ;;		 -> dbuf(32), 
 13453 ;;  i               2   16[BANK0 ] int 
 13454 ;;  c               1   15[BANK0 ] unsigned char 
 13455 ;; Return value:  Size  Location     Type
 13456 ;;                  2   11[BANK0 ] int 
 13457 ;; Registers used:
 13458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13459 ;; Tracked objects:
 13460 ;;		On entry : 1F/0
 13461 ;;		On exit  : 1F/0
 13462 ;;		Unchanged: 0/0
 13463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13464 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13465 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13466 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13467 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13468 ;;Total ram usage:        8 bytes
 13469 ;; Hardware stack levels used:    1
 13470 ;; Hardware stack levels required when called:    9
 13471 ;; This function calls:
 13472 ;;		_fputc
 13473 ;; This function is called by:
 13474 ;;		_pad
 13475 ;; This function uses a non-reentrant model
 13476 ;;
 13477                           
 13478                           
 13479                           ;psect for function _fputs
 13480  1BAF                     _fputs:
 13481                           
 13482                           ;incstack = 0
 13483                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13484                           ;fputs@s stored from wreg
 13485  1BAF  00B2               	movwf	fputs@s
 13486  1BB0  01B0               	clrf	fputs@i
 13487  1BB1  01B1               	clrf	fputs@i+1
 13488  1BB2                     l6869:
 13489  1BB2  0830               	movf	fputs@i,w
 13490  1BB3  0732               	addwf	fputs@s,w
 13491  1BB4  00AC               	movwf	??_fputs
 13492  1BB5  082C               	movf	??_fputs,w
 13493  1BB6  0086               	movwf	6
 13494  1BB7  3002               	movlw	2	; select bank4/5
 13495  1BB8  0087               	movwf	7
 13496  1BB9  0801               	movf	1,w
 13497  1BBA  00AD               	movwf	??_fputs+1
 13498  1BBB  082D               	movf	??_fputs+1,w
 13499  1BBC  00AF               	movwf	fputs@c
 13500  1BBD  082F               	movf	fputs@c,w
 13501  1BBE  1903               	btfsc	3,2
 13502  1BBF  0008               	return
 13503  1BC0  082F               	movf	fputs@c,w
 13504  1BC1  00AC               	movwf	??_fputs
 13505  1BC2  01AD               	clrf	??_fputs+1
 13506  1BC3  082C               	movf	??_fputs,w
 13507  1BC4  00A3               	movwf	fputc@c
 13508  1BC5  082D               	movf	??_fputs+1,w
 13509  1BC6  00A4               	movwf	fputc@c+1
 13510  1BC7  082B               	movf	fputs@fp,w
 13511  1BC8  00AE               	movwf	??_fputs+2
 13512  1BC9  082E               	movf	??_fputs+2,w
 13513  1BCA  00A5               	movwf	fputc@fp
 13514  1BCB  319E  26C3  319B   	fcall	_fputc
 13515  1BCE  3001               	movlw	1
 13516  1BCF  0020               	movlb	0	; select bank0
 13517  1BD0  07B0               	addwf	fputs@i,f
 13518  1BD1  3000               	movlw	0
 13519  1BD2  3DB1               	addwfc	fputs@i+1,f
 13520  1BD3  2BB2               	goto	l6869
 13521  1BD4                     __end_of_fputs:
 13522                           
 13523                           	psect	text24
 13524  1EC3                     __ptext24:	
 13525 ;; *************** function _fputc *****************
 13526 ;; Defined at:
 13527 ;;		line 8 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/nf_fputc.c"
 13528 ;; Parameters:    Size  Location     Type
 13529 ;;  c               2    3[BANK0 ] int 
 13530 ;;  fp              1    5[BANK0 ] PTR struct _IO_FILE
 13531 ;;		 -> sprintf@f(6), 
 13532 ;; Auto vars:     Size  Location     Type
 13533 ;;		None
 13534 ;; Return value:  Size  Location     Type
 13535 ;;                  2    3[BANK0 ] int 
 13536 ;; Registers used:
 13537 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13538 ;; Tracked objects:
 13539 ;;		On entry : 1F/0
 13540 ;;		On exit  : 0/0
 13541 ;;		Unchanged: 0/0
 13542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13543 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13545 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13546 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13547 ;;Total ram usage:        8 bytes
 13548 ;; Hardware stack levels used:    1
 13549 ;; Hardware stack levels required when called:    8
 13550 ;; This function calls:
 13551 ;;		_putch
 13552 ;; This function is called by:
 13553 ;;		_pad
 13554 ;;		_stoa
 13555 ;;		_vfpfcnvrt
 13556 ;;		_fputs
 13557 ;; This function uses a non-reentrant model
 13558 ;;
 13559                           
 13560                           
 13561                           ;psect for function _fputc
 13562  1EC3                     _fputc:
 13563                           
 13564                           ;incstack = 0
 13565                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13566  1EC3  0825               	movf	fputc@fp,w
 13567  1EC4  1D03               	btfss	3,2
 13568  1EC5  0825               	movf	fputc@fp,w
 13569  1EC6  1D03               	btfss	3,2
 13570  1EC7  2ECC               	goto	l6851
 13571  1EC8  0823               	movf	fputc@c,w
 13572  1EC9  3187  27FF         	fcall	_putch
 13573  1ECB  0008               	return
 13574  1ECC                     l6851:
 13575  1ECC  0825               	movf	fputc@fp,w
 13576  1ECD  3E04               	addlw	4
 13577  1ECE  0086               	movwf	6
 13578  1ECF  0187               	clrf	7
 13579  1ED0  0016               	moviw fsr1++
 13580  1ED1  0401               	iorwf	1,w
 13581  1ED2  1903               	btfsc	3,2
 13582  1ED3  2EF0               	goto	l6855
 13583  1ED4  0825               	movf	fputc@fp,w
 13584  1ED5  3E04               	addlw	4
 13585  1ED6  0086               	movwf	6
 13586  1ED7  0187               	clrf	7
 13587  1ED8  3F40               	moviw [0]fsr1
 13588  1ED9  00A6               	movwf	??_fputc
 13589  1EDA  3F41               	moviw [1]fsr1
 13590  1EDB  00A7               	movwf	??_fputc+1
 13591  1EDC  0825               	movf	fputc@fp,w
 13592  1EDD  3E02               	addlw	2
 13593  1EDE  0086               	movwf	6
 13594  1EDF  0187               	clrf	7
 13595  1EE0  3F40               	moviw [0]fsr1
 13596  1EE1  00A8               	movwf	??_fputc+2
 13597  1EE2  3F41               	moviw [1]fsr1
 13598  1EE3  00A9               	movwf	??_fputc+3
 13599  1EE4  0829               	movf	??_fputc+3,w
 13600  1EE5  3A80               	xorlw	128
 13601  1EE6  00AA               	movwf	??_fputc+4
 13602  1EE7  0827               	movf	??_fputc+1,w
 13603  1EE8  3A80               	xorlw	128
 13604  1EE9  022A               	subwf	??_fputc+4,w
 13605  1EEA  1D03               	skipz
 13606  1EEB  2EEE               	goto	u4445
 13607  1EEC  0826               	movf	??_fputc,w
 13608  1EED  0228               	subwf	??_fputc+2,w
 13609  1EEE                     u4445:
 13610  1EEE  1803               	skipnc
 13611  1EEF  0008               	return
 13612  1EF0                     l6855:
 13613  1EF0  0020               	movlb	0	; select bank0
 13614  1EF1  0825               	movf	fputc@fp,w
 13615  1EF2  3E02               	addlw	2
 13616  1EF3  0086               	movwf	6
 13617  1EF4  0187               	clrf	7
 13618  1EF5  0825               	movf	fputc@fp,w
 13619  1EF6  0084               	movwf	4
 13620  1EF7  0185               	clrf	5
 13621  1EF8  3F40               	moviw [0]fsr1
 13622  1EF9  0700               	addwf	0,w
 13623  1EFA  00A6               	movwf	??_fputc
 13624  1EFB  3101               	addfsr 0,1
 13625  1EFC  3F41               	moviw [1]fsr1
 13626  1EFD  3D00               	addwfc	0,w
 13627  1EFE  00A7               	movwf	??_fputc+1
 13628  1EFF  0826               	movf	??_fputc,w
 13629  1F00  0086               	movwf	6
 13630  1F01  0827               	movf	??_fputc+1,w
 13631  1F02  0087               	movwf	7
 13632  1F03  0823               	movf	fputc@c,w
 13633  1F04  0081               	movwf	1
 13634  1F05  0825               	movf	fputc@fp,w
 13635  1F06  3E02               	addlw	2
 13636  1F07  0086               	movwf	6
 13637  1F08  0187               	clrf	7
 13638  1F09  3001               	movlw	1
 13639  1F0A  0781               	addwf	1,f
 13640  1F0B  3141               	addfsr 1,1
 13641  1F0C  1803               	skipnc
 13642  1F0D  0A81               	incf	1,f
 13643  1F0E  0008               	return
 13644  1F0F                     __end_of_fputc:
 13645                           
 13646                           	psect	text25
 13647  07FF                     __ptext25:	
 13648 ;; *************** function _putch *****************
 13649 ;; Defined at:
 13650 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/putch.c"
 13651 ;; Parameters:    Size  Location     Type
 13652 ;;  c               1    wreg     unsigned char 
 13653 ;; Auto vars:     Size  Location     Type
 13654 ;;  c               1    0[COMMON] unsigned char 
 13655 ;; Return value:  Size  Location     Type
 13656 ;;                  1    wreg      void 
 13657 ;; Registers used:
 13658 ;;		wreg
 13659 ;; Tracked objects:
 13660 ;;		On entry : 1F/0
 13661 ;;		On exit  : 1F/0
 13662 ;;		Unchanged: 1F/0
 13663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13668 ;;Total ram usage:        0 bytes
 13669 ;; Hardware stack levels used:    1
 13670 ;; Hardware stack levels required when called:    7
 13671 ;; This function calls:
 13672 ;;		Nothing
 13673 ;; This function is called by:
 13674 ;;		_fputc
 13675 ;; This function uses a non-reentrant model
 13676 ;;
 13677                           
 13678                           
 13679                           ;psect for function _putch
 13680  07FF                     _putch:
 13681                           
 13682                           ;incstack = 0
 13683                           ; Regs used in _putch: [wreg]
 13684  07FF  0008               	return
 13685  0800                     __end_of_putch:
 13686                           
 13687                           	psect	text26
 13688  198A                     __ptext26:	
 13689 ;; *************** function _abs *****************
 13690 ;; Defined at:
 13691 ;;		line 1 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/abs.c"
 13692 ;; Parameters:    Size  Location     Type
 13693 ;;  a               2   22[BANK0 ] int 
 13694 ;; Auto vars:     Size  Location     Type
 13695 ;;		None
 13696 ;; Return value:  Size  Location     Type
 13697 ;;                  2   22[BANK0 ] int 
 13698 ;; Registers used:
 13699 ;;		wreg, status,2, status,0
 13700 ;; Tracked objects:
 13701 ;;		On entry : 1F/4A00000
 13702 ;;		On exit  : 0/0
 13703 ;;		Unchanged: 0/0
 13704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13705 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13707 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13708 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13709 ;;Total ram usage:        4 bytes
 13710 ;; Hardware stack levels used:    1
 13711 ;; Hardware stack levels required when called:    7
 13712 ;; This function calls:
 13713 ;;		Nothing
 13714 ;; This function is called by:
 13715 ;;		_set_gains
 13716 ;;		_dtoa
 13717 ;; This function uses a non-reentrant model
 13718 ;;
 13719                           
 13720                           
 13721                           ;psect for function _abs
 13722  198A                     _abs:
 13723                           
 13724                           ;incstack = 0
 13725                           ; Regs used in _abs: [wreg+status,2+status,0]
 13726  198A  0837               	movf	abs@a+1,w
 13727  198B  3A80               	xorlw	128
 13728  198C  00B8               	movwf	??_abs
 13729  198D  3080               	movlw	128
 13730  198E  0238               	subwf	??_abs,w
 13731  198F  1D03               	skipz
 13732  1990  2993               	goto	u4535
 13733  1991  3001               	movlw	1
 13734  1992  0236               	subwf	abs@a,w
 13735  1993                     u4535:
 13736  1993  1803               	skipnc
 13737  1994  0008               	return
 13738  1995  0020               	movlb	0	; select bank0
 13739  1996  0936               	comf	abs@a,w
 13740  1997  00B8               	movwf	??_abs
 13741  1998  0937               	comf	abs@a+1,w
 13742  1999  00B9               	movwf	??_abs+1
 13743  199A  0AB8               	incf	??_abs,f
 13744  199B  1903               	skipnz
 13745  199C  0AB9               	incf	??_abs+1,f
 13746  199D  0838               	movf	??_abs,w
 13747  199E  00B6               	movwf	?_abs
 13748  199F  0839               	movf	??_abs+1,w
 13749  19A0  00B7               	movwf	?_abs+1
 13750  19A1  0008               	return
 13751  19A2                     __end_of_abs:
 13752                           
 13753                           	psect	text27
 13754  1722                     __ptext27:	
 13755 ;; *************** function ___aomod *****************
 13756 ;; Defined at:
 13757 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/aomod.c"
 13758 ;; Parameters:    Size  Location     Type
 13759 ;;  divisor         8    3[BANK0 ] long long 
 13760 ;;  dividend        8   11[BANK0 ] long long 
 13761 ;; Auto vars:     Size  Location     Type
 13762 ;;  sign            1   21[BANK0 ] unsigned char 
 13763 ;;  counter         1   20[BANK0 ] unsigned char 
 13764 ;; Return value:  Size  Location     Type
 13765 ;;                  8    3[BANK0 ] long long 
 13766 ;; Registers used:
 13767 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13768 ;; Tracked objects:
 13769 ;;		On entry : 1F/0
 13770 ;;		On exit  : 1F/0
 13771 ;;		Unchanged: 0/0
 13772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13773 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13774 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13775 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13776 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13777 ;;Total ram usage:       19 bytes
 13778 ;; Hardware stack levels used:    1
 13779 ;; Hardware stack levels required when called:    7
 13780 ;; This function calls:
 13781 ;;		Nothing
 13782 ;; This function is called by:
 13783 ;;		_dtoa
 13784 ;; This function uses a non-reentrant model
 13785 ;;
 13786                           
 13787                           
 13788                           ;psect for function ___aomod
 13789  1722                     ___aomod:
 13790                           
 13791                           ;incstack = 0
 13792                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 13793  1722  01B5               	clrf	___aomod@sign
 13794  1723  302B               	movlw	low ___aomod@dividend
 13795  1724  0086               	movwf	6
 13796  1725  3000               	movlw	high ___aomod@dividend
 13797  1726  0087               	movwf	7
 13798  1727  3F47               	moviw [7]fsr1
 13799  1728  00B3               	movwf	??___aomod
 13800  1729  1FB3               	btfss	??___aomod,7
 13801  172A  2F4D               	goto	l6997
 13802  172B  0020               	movlb	0	; select bank0
 13803  172C  09AB               	comf	___aomod@dividend,f
 13804  172D  09AC               	comf	___aomod@dividend+1,f
 13805  172E  09AD               	comf	___aomod@dividend+2,f
 13806  172F  09AE               	comf	___aomod@dividend+3,f
 13807  1730  09AF               	comf	___aomod@dividend+4,f
 13808  1731  09B0               	comf	___aomod@dividend+5,f
 13809  1732  09B1               	comf	___aomod@dividend+6,f
 13810  1733  09B2               	comf	___aomod@dividend+7,f
 13811  1734  0AAB               	incf	___aomod@dividend,f
 13812  1735  1D03               	skipz
 13813  1736  2F4A               	goto	u470lld
 13814  1737  0AAC               	incf	___aomod@dividend+1,f
 13815  1738  1D03               	skipz
 13816  1739  2F4A               	goto	u470lld
 13817  173A  0AAD               	incf	___aomod@dividend+2,f
 13818  173B  1D03               	skipz
 13819  173C  2F4A               	goto	u470lld
 13820  173D  0AAE               	incf	___aomod@dividend+3,f
 13821  173E  1D03               	skipz
 13822  173F  2F4A               	goto	u470lld
 13823  1740  0AAF               	incf	___aomod@dividend+4,f
 13824  1741  1D03               	skipz
 13825  1742  2F4A               	goto	u470lld
 13826  1743  0AB0               	incf	___aomod@dividend+5,f
 13827  1744  1D03               	skipz
 13828  1745  2F4A               	goto	u470lld
 13829  1746  0AB1               	incf	___aomod@dividend+6,f
 13830  1747  1D03               	skipz
 13831  1748  2F4A               	goto	u470lld
 13832  1749  0AB2               	incf	___aomod@dividend+7,f
 13833  174A                     u470lld:
 13834  174A  0020               	movlb	0	; select bank0
 13835  174B  01B5               	clrf	___aomod@sign
 13836  174C  0AB5               	incf	___aomod@sign,f
 13837  174D                     l6997:
 13838  174D  3023               	movlw	low ___aomod@divisor
 13839  174E  0086               	movwf	6
 13840  174F  3000               	movlw	high ___aomod@divisor
 13841  1750  0087               	movwf	7
 13842  1751  3F47               	moviw [7]fsr1
 13843  1752  0020               	movlb	0	; select bank0
 13844  1753  00B3               	movwf	??___aomod
 13845  1754  1FB3               	btfss	??___aomod,7
 13846  1755  2F75               	goto	l7001
 13847  1756  0020               	movlb	0	; select bank0
 13848  1757  09A3               	comf	___aomod@divisor,f
 13849  1758  09A4               	comf	___aomod@divisor+1,f
 13850  1759  09A5               	comf	___aomod@divisor+2,f
 13851  175A  09A6               	comf	___aomod@divisor+3,f
 13852  175B  09A7               	comf	___aomod@divisor+4,f
 13853  175C  09A8               	comf	___aomod@divisor+5,f
 13854  175D  09A9               	comf	___aomod@divisor+6,f
 13855  175E  09AA               	comf	___aomod@divisor+7,f
 13856  175F  0AA3               	incf	___aomod@divisor,f
 13857  1760  1D03               	skipz
 13858  1761  2F75               	goto	l7001
 13859  1762  0AA4               	incf	___aomod@divisor+1,f
 13860  1763  1D03               	skipz
 13861  1764  2F75               	goto	l7001
 13862  1765  0AA5               	incf	___aomod@divisor+2,f
 13863  1766  1D03               	skipz
 13864  1767  2F75               	goto	l7001
 13865  1768  0AA6               	incf	___aomod@divisor+3,f
 13866  1769  1D03               	skipz
 13867  176A  2F75               	goto	l7001
 13868  176B  0AA7               	incf	___aomod@divisor+4,f
 13869  176C  1D03               	skipz
 13870  176D  2F75               	goto	l7001
 13871  176E  0AA8               	incf	___aomod@divisor+5,f
 13872  176F  1D03               	skipz
 13873  1770  2F75               	goto	l7001
 13874  1771  0AA9               	incf	___aomod@divisor+6,f
 13875  1772  1D03               	skipz
 13876  1773  2F75               	goto	l7001
 13877  1774  0AAA               	incf	___aomod@divisor+7,f
 13878  1775                     l7001:
 13879  1775  0020               	movlb	0	; select bank0
 13880  1776  0823               	movf	___aomod@divisor,w
 13881  1777  0424               	iorwf	___aomod@divisor+1,w
 13882  1778  0425               	iorwf	___aomod@divisor+2,w
 13883  1779  0426               	iorwf	___aomod@divisor+3,w
 13884  177A  0427               	iorwf	___aomod@divisor+4,w
 13885  177B  0428               	iorwf	___aomod@divisor+5,w
 13886  177C  0429               	iorwf	___aomod@divisor+6,w
 13887  177D  042A               	iorwf	___aomod@divisor+7,w
 13888  177E  1903               	skipnz
 13889  177F  2FCD               	goto	l7017
 13890  1780  01B4               	clrf	___aomod@counter
 13891  1781  0AB4               	incf	___aomod@counter,f
 13892  1782                     l7009:
 13893  1782  1BAA               	btfsc	___aomod@divisor+7,7
 13894  1783  2F91               	goto	l7011
 13895  1784  35A3               	lslf	___aomod@divisor,f
 13896  1785  0DA4               	rlf	___aomod@divisor+1,f
 13897  1786  0DA5               	rlf	___aomod@divisor+2,f
 13898  1787  0DA6               	rlf	___aomod@divisor+3,f
 13899  1788  0DA7               	rlf	___aomod@divisor+4,f
 13900  1789  0DA8               	rlf	___aomod@divisor+5,f
 13901  178A  0DA9               	rlf	___aomod@divisor+6,f
 13902  178B  0DAA               	rlf	___aomod@divisor+7,f
 13903  178C  3001               	movlw	1
 13904  178D  00B3               	movwf	??___aomod
 13905  178E  0833               	movf	??___aomod,w
 13906  178F  07B4               	addwf	___aomod@counter,f
 13907  1790  2F82               	goto	l7009
 13908  1791                     l7011:
 13909  1791  082A               	movf	___aomod@divisor+7,w
 13910  1792  0232               	subwf	___aomod@dividend+7,w
 13911  1793  1D03               	skipz
 13912  1794  2FAF               	goto	u4755
 13913  1795  0829               	movf	___aomod@divisor+6,w
 13914  1796  0231               	subwf	___aomod@dividend+6,w
 13915  1797  1D03               	skipz
 13916  1798  2FAF               	goto	u4755
 13917  1799  0828               	movf	___aomod@divisor+5,w
 13918  179A  0230               	subwf	___aomod@dividend+5,w
 13919  179B  1D03               	skipz
 13920  179C  2FAF               	goto	u4755
 13921  179D  0827               	movf	___aomod@divisor+4,w
 13922  179E  022F               	subwf	___aomod@dividend+4,w
 13923  179F  1D03               	skipz
 13924  17A0  2FAF               	goto	u4755
 13925  17A1  0826               	movf	___aomod@divisor+3,w
 13926  17A2  022E               	subwf	___aomod@dividend+3,w
 13927  17A3  1D03               	skipz
 13928  17A4  2FAF               	goto	u4755
 13929  17A5  0825               	movf	___aomod@divisor+2,w
 13930  17A6  022D               	subwf	___aomod@dividend+2,w
 13931  17A7  1D03               	skipz
 13932  17A8  2FAF               	goto	u4755
 13933  17A9  0824               	movf	___aomod@divisor+1,w
 13934  17AA  022C               	subwf	___aomod@dividend+1,w
 13935  17AB  1D03               	skipz
 13936  17AC  2FAF               	goto	u4755
 13937  17AD  0823               	movf	___aomod@divisor,w
 13938  17AE  022B               	subwf	___aomod@dividend,w
 13939  17AF                     u4755:
 13940  17AF  1C03               	skipc
 13941  17B0  2FC1               	goto	l7015
 13942  17B1  0823               	movf	___aomod@divisor,w
 13943  17B2  02AB               	subwf	___aomod@dividend,f
 13944  17B3  0824               	movf	___aomod@divisor+1,w
 13945  17B4  3BAC               	subwfb	___aomod@dividend+1,f
 13946  17B5  0825               	movf	___aomod@divisor+2,w
 13947  17B6  3BAD               	subwfb	___aomod@dividend+2,f
 13948  17B7  0826               	movf	___aomod@divisor+3,w
 13949  17B8  3BAE               	subwfb	___aomod@dividend+3,f
 13950  17B9  0827               	movf	___aomod@divisor+4,w
 13951  17BA  3BAF               	subwfb	___aomod@dividend+4,f
 13952  17BB  0828               	movf	___aomod@divisor+5,w
 13953  17BC  3BB0               	subwfb	___aomod@dividend+5,f
 13954  17BD  0829               	movf	___aomod@divisor+6,w
 13955  17BE  3BB1               	subwfb	___aomod@dividend+6,f
 13956  17BF  082A               	movf	___aomod@divisor+7,w
 13957  17C0  3BB2               	subwfb	___aomod@dividend+7,f
 13958  17C1                     l7015:
 13959  17C1  36AA               	lsrf	___aomod@divisor+7,f
 13960  17C2  0CA9               	rrf	___aomod@divisor+6,f
 13961  17C3  0CA8               	rrf	___aomod@divisor+5,f
 13962  17C4  0CA7               	rrf	___aomod@divisor+4,f
 13963  17C5  0CA6               	rrf	___aomod@divisor+3,f
 13964  17C6  0CA5               	rrf	___aomod@divisor+2,f
 13965  17C7  0CA4               	rrf	___aomod@divisor+1,f
 13966  17C8  0CA3               	rrf	___aomod@divisor,f
 13967  17C9  3001               	movlw	1
 13968  17CA  02B4               	subwf	___aomod@counter,f
 13969  17CB  1D03               	btfss	3,2
 13970  17CC  2F91               	goto	l7011
 13971  17CD                     l7017:
 13972  17CD  0835               	movf	___aomod@sign,w
 13973  17CE  1903               	btfsc	3,2
 13974  17CF  2FEE               	goto	l1607
 13975  17D0  09AB               	comf	___aomod@dividend,f
 13976  17D1  09AC               	comf	___aomod@dividend+1,f
 13977  17D2  09AD               	comf	___aomod@dividend+2,f
 13978  17D3  09AE               	comf	___aomod@dividend+3,f
 13979  17D4  09AF               	comf	___aomod@dividend+4,f
 13980  17D5  09B0               	comf	___aomod@dividend+5,f
 13981  17D6  09B1               	comf	___aomod@dividend+6,f
 13982  17D7  09B2               	comf	___aomod@dividend+7,f
 13983  17D8  0AAB               	incf	___aomod@dividend,f
 13984  17D9  1D03               	skipz
 13985  17DA  2FEE               	goto	l1607
 13986  17DB  0AAC               	incf	___aomod@dividend+1,f
 13987  17DC  1D03               	skipz
 13988  17DD  2FEE               	goto	l1607
 13989  17DE  0AAD               	incf	___aomod@dividend+2,f
 13990  17DF  1D03               	skipz
 13991  17E0  2FEE               	goto	l1607
 13992  17E1  0AAE               	incf	___aomod@dividend+3,f
 13993  17E2  1D03               	skipz
 13994  17E3  2FEE               	goto	l1607
 13995  17E4  0AAF               	incf	___aomod@dividend+4,f
 13996  17E5  1D03               	skipz
 13997  17E6  2FEE               	goto	l1607
 13998  17E7  0AB0               	incf	___aomod@dividend+5,f
 13999  17E8  1D03               	skipz
 14000  17E9  2FEE               	goto	l1607
 14001  17EA  0AB1               	incf	___aomod@dividend+6,f
 14002  17EB  1D03               	skipz
 14003  17EC  2FEE               	goto	l1607
 14004  17ED  0AB2               	incf	___aomod@dividend+7,f
 14005  17EE                     l1607:
 14006  17EE  0020               	movlb	0	; select bank0
 14007  17EF  082B               	movf	___aomod@dividend,w
 14008  17F0  00A3               	movwf	?___aomod
 14009  17F1  082C               	movf	___aomod@dividend+1,w
 14010  17F2  00A4               	movwf	?___aomod+1
 14011  17F3  082D               	movf	___aomod@dividend+2,w
 14012  17F4  00A5               	movwf	?___aomod+2
 14013  17F5  082E               	movf	___aomod@dividend+3,w
 14014  17F6  00A6               	movwf	?___aomod+3
 14015  17F7  082F               	movf	___aomod@dividend+4,w
 14016  17F8  00A7               	movwf	?___aomod+4
 14017  17F9  0830               	movf	___aomod@dividend+5,w
 14018  17FA  00A8               	movwf	?___aomod+5
 14019  17FB  0831               	movf	___aomod@dividend+6,w
 14020  17FC  00A9               	movwf	?___aomod+6
 14021  17FD  0832               	movf	___aomod@dividend+7,w
 14022  17FE  00AA               	movwf	?___aomod+7
 14023  17FF  0008               	return
 14024  1800                     __end_of___aomod:
 14025                           
 14026                           	psect	text28
 14027  06F7                     __ptext28:	
 14028 ;; *************** function ___aodiv *****************
 14029 ;; Defined at:
 14030 ;;		line 7 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/aodiv.c"
 14031 ;; Parameters:    Size  Location     Type
 14032 ;;  divisor         8    3[BANK0 ] long long 
 14033 ;;  dividend        8   11[BANK0 ] long long 
 14034 ;; Auto vars:     Size  Location     Type
 14035 ;;  quotient        8   22[BANK0 ] long long 
 14036 ;;  sign            1   21[BANK0 ] unsigned char 
 14037 ;;  counter         1   20[BANK0 ] unsigned char 
 14038 ;; Return value:  Size  Location     Type
 14039 ;;                  8    3[BANK0 ] long long 
 14040 ;; Registers used:
 14041 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14042 ;; Tracked objects:
 14043 ;;		On entry : 1F/0
 14044 ;;		On exit  : 1F/0
 14045 ;;		Unchanged: 0/0
 14046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14047 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14048 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14049 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14050 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14051 ;;Total ram usage:       27 bytes
 14052 ;; Hardware stack levels used:    1
 14053 ;; Hardware stack levels required when called:    7
 14054 ;; This function calls:
 14055 ;;		Nothing
 14056 ;; This function is called by:
 14057 ;;		_dtoa
 14058 ;; This function uses a non-reentrant model
 14059 ;;
 14060                           
 14061                           
 14062                           ;psect for function ___aodiv
 14063  06F7                     ___aodiv:
 14064                           
 14065                           ;incstack = 0
 14066                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 14067  06F7  01B5               	clrf	___aodiv@sign
 14068  06F8  3023               	movlw	low ___aodiv@divisor
 14069  06F9  0086               	movwf	6
 14070  06FA  3000               	movlw	high ___aodiv@divisor
 14071  06FB  0087               	movwf	7
 14072  06FC  3F47               	moviw [7]fsr1
 14073  06FD  00B3               	movwf	??___aodiv
 14074  06FE  1FB3               	btfss	??___aodiv,7
 14075  06FF  2F22               	goto	l6959
 14076  0700  0020               	movlb	0	; select bank0
 14077  0701  09A3               	comf	___aodiv@divisor,f
 14078  0702  09A4               	comf	___aodiv@divisor+1,f
 14079  0703  09A5               	comf	___aodiv@divisor+2,f
 14080  0704  09A6               	comf	___aodiv@divisor+3,f
 14081  0705  09A7               	comf	___aodiv@divisor+4,f
 14082  0706  09A8               	comf	___aodiv@divisor+5,f
 14083  0707  09A9               	comf	___aodiv@divisor+6,f
 14084  0708  09AA               	comf	___aodiv@divisor+7,f
 14085  0709  0AA3               	incf	___aodiv@divisor,f
 14086  070A  1D03               	skipz
 14087  070B  2F1F               	goto	u459lld
 14088  070C  0AA4               	incf	___aodiv@divisor+1,f
 14089  070D  1D03               	skipz
 14090  070E  2F1F               	goto	u459lld
 14091  070F  0AA5               	incf	___aodiv@divisor+2,f
 14092  0710  1D03               	skipz
 14093  0711  2F1F               	goto	u459lld
 14094  0712  0AA6               	incf	___aodiv@divisor+3,f
 14095  0713  1D03               	skipz
 14096  0714  2F1F               	goto	u459lld
 14097  0715  0AA7               	incf	___aodiv@divisor+4,f
 14098  0716  1D03               	skipz
 14099  0717  2F1F               	goto	u459lld
 14100  0718  0AA8               	incf	___aodiv@divisor+5,f
 14101  0719  1D03               	skipz
 14102  071A  2F1F               	goto	u459lld
 14103  071B  0AA9               	incf	___aodiv@divisor+6,f
 14104  071C  1D03               	skipz
 14105  071D  2F1F               	goto	u459lld
 14106  071E  0AAA               	incf	___aodiv@divisor+7,f
 14107  071F                     u459lld:
 14108  071F  0020               	movlb	0	; select bank0
 14109  0720  01B5               	clrf	___aodiv@sign
 14110  0721  0AB5               	incf	___aodiv@sign,f
 14111  0722                     l6959:
 14112  0722  302B               	movlw	low ___aodiv@dividend
 14113  0723  0086               	movwf	6
 14114  0724  3000               	movlw	high ___aodiv@dividend
 14115  0725  0087               	movwf	7
 14116  0726  3F47               	moviw [7]fsr1
 14117  0727  0020               	movlb	0	; select bank0
 14118  0728  00B3               	movwf	??___aodiv
 14119  0729  1FB3               	btfss	??___aodiv,7
 14120  072A  2F4F               	goto	l6965
 14121  072B  0020               	movlb	0	; select bank0
 14122  072C  09AB               	comf	___aodiv@dividend,f
 14123  072D  09AC               	comf	___aodiv@dividend+1,f
 14124  072E  09AD               	comf	___aodiv@dividend+2,f
 14125  072F  09AE               	comf	___aodiv@dividend+3,f
 14126  0730  09AF               	comf	___aodiv@dividend+4,f
 14127  0731  09B0               	comf	___aodiv@dividend+5,f
 14128  0732  09B1               	comf	___aodiv@dividend+6,f
 14129  0733  09B2               	comf	___aodiv@dividend+7,f
 14130  0734  0AAB               	incf	___aodiv@dividend,f
 14131  0735  1D03               	skipz
 14132  0736  2F4A               	goto	l6963
 14133  0737  0AAC               	incf	___aodiv@dividend+1,f
 14134  0738  1D03               	skipz
 14135  0739  2F4A               	goto	l6963
 14136  073A  0AAD               	incf	___aodiv@dividend+2,f
 14137  073B  1D03               	skipz
 14138  073C  2F4A               	goto	l6963
 14139  073D  0AAE               	incf	___aodiv@dividend+3,f
 14140  073E  1D03               	skipz
 14141  073F  2F4A               	goto	l6963
 14142  0740  0AAF               	incf	___aodiv@dividend+4,f
 14143  0741  1D03               	skipz
 14144  0742  2F4A               	goto	l6963
 14145  0743  0AB0               	incf	___aodiv@dividend+5,f
 14146  0744  1D03               	skipz
 14147  0745  2F4A               	goto	l6963
 14148  0746  0AB1               	incf	___aodiv@dividend+6,f
 14149  0747  1D03               	skipz
 14150  0748  2F4A               	goto	l6963
 14151  0749  0AB2               	incf	___aodiv@dividend+7,f
 14152  074A                     l6963:
 14153  074A  3001               	movlw	1
 14154  074B  0020               	movlb	0	; select bank0
 14155  074C  00B3               	movwf	??___aodiv
 14156  074D  0833               	movf	??___aodiv,w
 14157  074E  06B5               	xorwf	___aodiv@sign,f
 14158  074F                     l6965:
 14159  074F  3036               	movlw	low ___aodiv@quotient
 14160  0750  0086               	movwf	6
 14161  0751  3000               	movlw	high ___aodiv@quotient
 14162  0752  0087               	movwf	7
 14163  0753  3008               	movlw	8
 14164  0754  0020               	movlb	0	; select bank0
 14165  0755  00B3               	movwf	??___aodiv
 14166  0756  3000               	movlw	0
 14167  0757                     u4620:
 14168  0757  001E               	movwi fsr1++
 14169  0758  0BB3               	decfsz	??___aodiv,f
 14170  0759  2F57               	goto	u4620
 14171  075A  0823               	movf	___aodiv@divisor,w
 14172  075B  0424               	iorwf	___aodiv@divisor+1,w
 14173  075C  0425               	iorwf	___aodiv@divisor+2,w
 14174  075D  0426               	iorwf	___aodiv@divisor+3,w
 14175  075E  0427               	iorwf	___aodiv@divisor+4,w
 14176  075F  0428               	iorwf	___aodiv@divisor+5,w
 14177  0760  0429               	iorwf	___aodiv@divisor+6,w
 14178  0761  042A               	iorwf	___aodiv@divisor+7,w
 14179  0762  1903               	skipnz
 14180  0763  2FBA               	goto	l6987
 14181  0764  01B4               	clrf	___aodiv@counter
 14182  0765  0AB4               	incf	___aodiv@counter,f
 14183  0766                     l6975:
 14184  0766  1BAA               	btfsc	___aodiv@divisor+7,7
 14185  0767  2F75               	goto	l6977
 14186  0768  35A3               	lslf	___aodiv@divisor,f
 14187  0769  0DA4               	rlf	___aodiv@divisor+1,f
 14188  076A  0DA5               	rlf	___aodiv@divisor+2,f
 14189  076B  0DA6               	rlf	___aodiv@divisor+3,f
 14190  076C  0DA7               	rlf	___aodiv@divisor+4,f
 14191  076D  0DA8               	rlf	___aodiv@divisor+5,f
 14192  076E  0DA9               	rlf	___aodiv@divisor+6,f
 14193  076F  0DAA               	rlf	___aodiv@divisor+7,f
 14194  0770  3001               	movlw	1
 14195  0771  00B3               	movwf	??___aodiv
 14196  0772  0833               	movf	??___aodiv,w
 14197  0773  07B4               	addwf	___aodiv@counter,f
 14198  0774  2F66               	goto	l6975
 14199  0775                     l6977:
 14200  0775  35B6               	lslf	___aodiv@quotient,f
 14201  0776  0DB7               	rlf	___aodiv@quotient+1,f
 14202  0777  0DB8               	rlf	___aodiv@quotient+2,f
 14203  0778  0DB9               	rlf	___aodiv@quotient+3,f
 14204  0779  0DBA               	rlf	___aodiv@quotient+4,f
 14205  077A  0DBB               	rlf	___aodiv@quotient+5,f
 14206  077B  0DBC               	rlf	___aodiv@quotient+6,f
 14207  077C  0DBD               	rlf	___aodiv@quotient+7,f
 14208  077D  082A               	movf	___aodiv@divisor+7,w
 14209  077E  0232               	subwf	___aodiv@dividend+7,w
 14210  077F  1D03               	skipz
 14211  0780  2F9B               	goto	u4655
 14212  0781  0829               	movf	___aodiv@divisor+6,w
 14213  0782  0231               	subwf	___aodiv@dividend+6,w
 14214  0783  1D03               	skipz
 14215  0784  2F9B               	goto	u4655
 14216  0785  0828               	movf	___aodiv@divisor+5,w
 14217  0786  0230               	subwf	___aodiv@dividend+5,w
 14218  0787  1D03               	skipz
 14219  0788  2F9B               	goto	u4655
 14220  0789  0827               	movf	___aodiv@divisor+4,w
 14221  078A  022F               	subwf	___aodiv@dividend+4,w
 14222  078B  1D03               	skipz
 14223  078C  2F9B               	goto	u4655
 14224  078D  0826               	movf	___aodiv@divisor+3,w
 14225  078E  022E               	subwf	___aodiv@dividend+3,w
 14226  078F  1D03               	skipz
 14227  0790  2F9B               	goto	u4655
 14228  0791  0825               	movf	___aodiv@divisor+2,w
 14229  0792  022D               	subwf	___aodiv@dividend+2,w
 14230  0793  1D03               	skipz
 14231  0794  2F9B               	goto	u4655
 14232  0795  0824               	movf	___aodiv@divisor+1,w
 14233  0796  022C               	subwf	___aodiv@dividend+1,w
 14234  0797  1D03               	skipz
 14235  0798  2F9B               	goto	u4655
 14236  0799  0823               	movf	___aodiv@divisor,w
 14237  079A  022B               	subwf	___aodiv@dividend,w
 14238  079B                     u4655:
 14239  079B  1C03               	skipc
 14240  079C  2FAE               	goto	l6985
 14241  079D  0823               	movf	___aodiv@divisor,w
 14242  079E  02AB               	subwf	___aodiv@dividend,f
 14243  079F  0824               	movf	___aodiv@divisor+1,w
 14244  07A0  3BAC               	subwfb	___aodiv@dividend+1,f
 14245  07A1  0825               	movf	___aodiv@divisor+2,w
 14246  07A2  3BAD               	subwfb	___aodiv@dividend+2,f
 14247  07A3  0826               	movf	___aodiv@divisor+3,w
 14248  07A4  3BAE               	subwfb	___aodiv@dividend+3,f
 14249  07A5  0827               	movf	___aodiv@divisor+4,w
 14250  07A6  3BAF               	subwfb	___aodiv@dividend+4,f
 14251  07A7  0828               	movf	___aodiv@divisor+5,w
 14252  07A8  3BB0               	subwfb	___aodiv@dividend+5,f
 14253  07A9  0829               	movf	___aodiv@divisor+6,w
 14254  07AA  3BB1               	subwfb	___aodiv@dividend+6,f
 14255  07AB  082A               	movf	___aodiv@divisor+7,w
 14256  07AC  3BB2               	subwfb	___aodiv@dividend+7,f
 14257  07AD  1436               	bsf	___aodiv@quotient,0
 14258  07AE                     l6985:
 14259  07AE  36AA               	lsrf	___aodiv@divisor+7,f
 14260  07AF  0CA9               	rrf	___aodiv@divisor+6,f
 14261  07B0  0CA8               	rrf	___aodiv@divisor+5,f
 14262  07B1  0CA7               	rrf	___aodiv@divisor+4,f
 14263  07B2  0CA6               	rrf	___aodiv@divisor+3,f
 14264  07B3  0CA5               	rrf	___aodiv@divisor+2,f
 14265  07B4  0CA4               	rrf	___aodiv@divisor+1,f
 14266  07B5  0CA3               	rrf	___aodiv@divisor,f
 14267  07B6  3001               	movlw	1
 14268  07B7  02B4               	subwf	___aodiv@counter,f
 14269  07B8  1D03               	btfss	3,2
 14270  07B9  2F75               	goto	l6977
 14271  07BA                     l6987:
 14272  07BA  0835               	movf	___aodiv@sign,w
 14273  07BB  1903               	btfsc	3,2
 14274  07BC  2FDB               	goto	l1594
 14275  07BD  09B6               	comf	___aodiv@quotient,f
 14276  07BE  09B7               	comf	___aodiv@quotient+1,f
 14277  07BF  09B8               	comf	___aodiv@quotient+2,f
 14278  07C0  09B9               	comf	___aodiv@quotient+3,f
 14279  07C1  09BA               	comf	___aodiv@quotient+4,f
 14280  07C2  09BB               	comf	___aodiv@quotient+5,f
 14281  07C3  09BC               	comf	___aodiv@quotient+6,f
 14282  07C4  09BD               	comf	___aodiv@quotient+7,f
 14283  07C5  0AB6               	incf	___aodiv@quotient,f
 14284  07C6  1D03               	skipz
 14285  07C7  2FDB               	goto	l1594
 14286  07C8  0AB7               	incf	___aodiv@quotient+1,f
 14287  07C9  1D03               	skipz
 14288  07CA  2FDB               	goto	l1594
 14289  07CB  0AB8               	incf	___aodiv@quotient+2,f
 14290  07CC  1D03               	skipz
 14291  07CD  2FDB               	goto	l1594
 14292  07CE  0AB9               	incf	___aodiv@quotient+3,f
 14293  07CF  1D03               	skipz
 14294  07D0  2FDB               	goto	l1594
 14295  07D1  0ABA               	incf	___aodiv@quotient+4,f
 14296  07D2  1D03               	skipz
 14297  07D3  2FDB               	goto	l1594
 14298  07D4  0ABB               	incf	___aodiv@quotient+5,f
 14299  07D5  1D03               	skipz
 14300  07D6  2FDB               	goto	l1594
 14301  07D7  0ABC               	incf	___aodiv@quotient+6,f
 14302  07D8  1D03               	skipz
 14303  07D9  2FDB               	goto	l1594
 14304  07DA  0ABD               	incf	___aodiv@quotient+7,f
 14305  07DB                     l1594:
 14306  07DB  0020               	movlb	0	; select bank0
 14307  07DC  0836               	movf	___aodiv@quotient,w
 14308  07DD  00A3               	movwf	?___aodiv
 14309  07DE  0837               	movf	___aodiv@quotient+1,w
 14310  07DF  00A4               	movwf	?___aodiv+1
 14311  07E0  0838               	movf	___aodiv@quotient+2,w
 14312  07E1  00A5               	movwf	?___aodiv+2
 14313  07E2  0839               	movf	___aodiv@quotient+3,w
 14314  07E3  00A6               	movwf	?___aodiv+3
 14315  07E4  083A               	movf	___aodiv@quotient+4,w
 14316  07E5  00A7               	movwf	?___aodiv+4
 14317  07E6  083B               	movf	___aodiv@quotient+5,w
 14318  07E7  00A8               	movwf	?___aodiv+5
 14319  07E8  083C               	movf	___aodiv@quotient+6,w
 14320  07E9  00A9               	movwf	?___aodiv+6
 14321  07EA  083D               	movf	___aodiv@quotient+7,w
 14322  07EB  00AA               	movwf	?___aodiv+7
 14323  07EC  0008               	return
 14324  07ED                     __end_of___aodiv:
 14325                           
 14326                           	psect	text29
 14327  130C                     __ptext29:	
 14328 ;; *************** function _atoi *****************
 14329 ;; Defined at:
 14330 ;;		line 4 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/atoi.c"
 14331 ;; Parameters:    Size  Location     Type
 14332 ;;  s               2   15[BANK0 ] PTR const unsigned char 
 14333 ;;		 -> STR_36(33), STR_35(19), STR_34(14), STR_33(10), 
 14334 ;;		 -> STR_20(5), STR_19(5), STR_13(20), STR_11(4), 
 14335 ;;		 -> STR_8(4), STR_5(4), STR_2(4), 
 14336 ;; Auto vars:     Size  Location     Type
 14337 ;;  n               2   28[BANK0 ] int 
 14338 ;;  neg             2   21[BANK0 ] int 
 14339 ;; Return value:  Size  Location     Type
 14340 ;;                  2   15[BANK0 ] int 
 14341 ;; Registers used:
 14342 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14343 ;; Tracked objects:
 14344 ;;		On entry : 1F/0
 14345 ;;		On exit  : 1F/0
 14346 ;;		Unchanged: 0/0
 14347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14348 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14349 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14350 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14351 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14352 ;;Total ram usage:       15 bytes
 14353 ;; Hardware stack levels used:    1
 14354 ;; Hardware stack levels required when called:    8
 14355 ;; This function calls:
 14356 ;;		___wmul
 14357 ;;		_isdigit
 14358 ;;		_isspace
 14359 ;; This function is called by:
 14360 ;;		_vfpfcnvrt
 14361 ;; This function uses a non-reentrant model
 14362 ;;
 14363                           
 14364                           
 14365                           ;psect for function _atoi
 14366  130C                     _atoi:
 14367                           
 14368                           ;incstack = 0
 14369                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14370  130C  01BC               	clrf	atoi@n
 14371  130D  01BD               	clrf	atoi@n+1
 14372  130E  01B5               	clrf	atoi@neg
 14373  130F  01B6               	clrf	atoi@neg+1
 14374  1310                     l7319:
 14375  1310  01BB               	clrf	_atoi$2270
 14376  1311  0ABB               	incf	_atoi$2270,f
 14377  1312  082F               	movf	atoi@s,w
 14378  1313  0084               	movwf	4
 14379  1314  0830               	movf	atoi@s+1,w
 14380  1315  0085               	movwf	5
 14381  1316  0012               	moviw fsr0++
 14382  1317  3A20               	xorlw	32
 14383  1318  1903               	btfsc	3,2
 14384  1319  2B2C               	goto	l7327
 14385  131A  082F               	movf	atoi@s,w
 14386  131B  0084               	movwf	4
 14387  131C  0830               	movf	atoi@s+1,w
 14388  131D  0085               	movwf	5
 14389  131E  0800               	movf	0,w	;code access
 14390  131F  3EF7               	addlw	247
 14391  1320  00B1               	movwf	??_atoi
 14392  1321  30FF               	movlw	255
 14393  1322  1803               	skipnc
 14394  1323  3000               	movlw	0
 14395  1324  00B2               	movwf	??_atoi+1
 14396  1325  3000               	movlw	0
 14397  1326  0232               	subwf	??_atoi+1,w
 14398  1327  3005               	movlw	5
 14399  1328  1903               	skipnz
 14400  1329  0231               	subwf	??_atoi,w
 14401  132A  1803               	btfsc	3,0
 14402  132B  01BB               	clrf	_atoi$2270
 14403  132C                     l7327:
 14404  132C  083B               	movf	_atoi$2270,w
 14405  132D  00B1               	movwf	??_atoi
 14406  132E  01B2               	clrf	??_atoi+1
 14407  132F  0831               	movf	??_atoi,w
 14408  1330  00B7               	movwf	_atoi$2269
 14409  1331  0832               	movf	??_atoi+1,w
 14410  1332  00B8               	movwf	_atoi$2269+1
 14411  1333  0837               	movf	_atoi$2269,w
 14412  1334  0438               	iorwf	_atoi$2269+1,w
 14413  1335  1903               	btfsc	3,2
 14414  1336  2B41               	goto	l7335
 14415  1337  3001               	movlw	1
 14416  1338  07AF               	addwf	atoi@s,f
 14417  1339  3000               	movlw	0
 14418  133A  3DB0               	addwfc	atoi@s+1,f
 14419  133B  2B10               	goto	l7319
 14420  133C                     l7333:
 14421  133C  3001               	movlw	1
 14422  133D  00B5               	movwf	atoi@neg
 14423  133E  3000               	movlw	0
 14424  133F  00B6               	movwf	atoi@neg+1
 14425  1340  2B73               	goto	l2143
 14426  1341                     l7335:
 14427  1341  082F               	movf	atoi@s,w
 14428  1342  0084               	movwf	4
 14429  1343  0830               	movf	atoi@s+1,w
 14430  1344  0085               	movwf	5
 14431  1345  0800               	movf	0,w	;code access
 14432  1346  00B1               	movwf	??_atoi
 14433  1347  01B2               	clrf	??_atoi+1
 14434                           
 14435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14436                           ; Switch size 1, requested type "simple"
 14437                           ; Number of cases is 1, Range of values is 0 to 0
 14438                           ; switch strategies available:
 14439                           ; Name         Instructions Cycles
 14440                           ; simple_byte            4     3 (average)
 14441                           ; direct_byte            8     6 (fixed)
 14442                           ; jumptable            260     6 (fixed)
 14443                           ;	Chosen strategy is simple_byte
 14444  1348  0832               	movf	??_atoi+1,w
 14445  1349  3A00               	xorlw	0	; case 0
 14446  134A  1903               	skipnz
 14447  134B  2B4D               	goto	l8683
 14448  134C  2B77               	goto	l7341
 14449  134D                     l8683:
 14450                           
 14451                           ; Switch size 1, requested type "simple"
 14452                           ; Number of cases is 2, Range of values is 43 to 45
 14453                           ; switch strategies available:
 14454                           ; Name         Instructions Cycles
 14455                           ; simple_byte            7     4 (average)
 14456                           ; direct_byte           15     9 (fixed)
 14457                           ; jumptable            263     9 (fixed)
 14458                           ;	Chosen strategy is simple_byte
 14459  134D  0831               	movf	??_atoi,w
 14460  134E  3A2B               	xorlw	43	; case 43
 14461  134F  1903               	skipnz
 14462  1350  2B73               	goto	l2143
 14463  1351  3A06               	xorlw	6	; case 45
 14464  1352  1903               	skipnz
 14465  1353  2B3C               	goto	l7333
 14466  1354  2B77               	goto	l7341
 14467  1355                     l7337:
 14468  1355  082F               	movf	atoi@s,w
 14469  1356  0084               	movwf	4
 14470  1357  0830               	movf	atoi@s+1,w
 14471  1358  0085               	movwf	5
 14472  1359  0800               	movf	0,w	;code access
 14473  135A  00B1               	movwf	??_atoi
 14474  135B  083D               	movf	atoi@n+1,w
 14475  135C  00AA               	movwf	___wmul@multiplier+1
 14476  135D  083C               	movf	atoi@n,w
 14477  135E  00A9               	movwf	___wmul@multiplier
 14478  135F  300A               	movlw	10
 14479  1360  00AB               	movwf	___wmul@multiplicand
 14480  1361  3000               	movlw	0
 14481  1362  00AC               	movwf	___wmul@multiplicand+1
 14482  1363  319A  226E  3193   	fcall	___wmul
 14483  1366  082A               	movf	?___wmul+1,w
 14484  1367  00B3               	movwf	??_atoi+2
 14485  1368  0831               	movf	??_atoi,w
 14486  1369  0229               	subwf	?___wmul,w
 14487  136A  00B2               	movwf	??_atoi+1
 14488  136B  1C03               	skipc
 14489  136C  03B3               	decf	??_atoi+2,f
 14490  136D  0832               	movf	??_atoi+1,w
 14491  136E  3E30               	addlw	48
 14492  136F  00BC               	movwf	atoi@n
 14493  1370  3000               	movlw	0
 14494  1371  3D33               	addwfc	??_atoi+2,w
 14495  1372  00BD               	movwf	atoi@n+1
 14496  1373                     l2143:
 14497  1373  3001               	movlw	1
 14498  1374  07AF               	addwf	atoi@s,f
 14499  1375  3000               	movlw	0
 14500  1376  3DB0               	addwfc	atoi@s+1,f
 14501  1377                     l7341:
 14502  1377  082F               	movf	atoi@s,w
 14503  1378  0084               	movwf	4
 14504  1379  0830               	movf	atoi@s+1,w
 14505  137A  0085               	movwf	5
 14506  137B  0800               	movf	0,w	;code access
 14507  137C  3ED0               	addlw	208
 14508  137D  00B1               	movwf	??_atoi
 14509  137E  30FF               	movlw	255
 14510  137F  1803               	skipnc
 14511  1380  3000               	movlw	0
 14512  1381  00B2               	movwf	??_atoi+1
 14513  1382  3000               	movlw	0
 14514  1383  0232               	subwf	??_atoi+1,w
 14515  1384  300A               	movlw	10
 14516  1385  1903               	skipnz
 14517  1386  0231               	subwf	??_atoi,w
 14518  1387  1803               	btfsc	3,0
 14519  1388  2B8B               	goto	u5420
 14520  1389  3001               	movlw	1
 14521  138A  2B8C               	goto	u5430
 14522  138B                     u5420:
 14523  138B  3000               	movlw	0
 14524  138C                     u5430:
 14525  138C  00B3               	movwf	??_atoi+2
 14526  138D  01B4               	clrf	??_atoi+3
 14527  138E  0833               	movf	??_atoi+2,w
 14528  138F  00B9               	movwf	_atoi$2271
 14529  1390  0834               	movf	??_atoi+3,w
 14530  1391  00BA               	movwf	_atoi$2271+1
 14531  1392  0839               	movf	_atoi$2271,w
 14532  1393  043A               	iorwf	_atoi$2271+1,w
 14533  1394  1D03               	btfss	3,2
 14534  1395  2B55               	goto	l7337
 14535  1396  0835               	movf	atoi@neg,w
 14536  1397  0436               	iorwf	atoi@neg+1,w
 14537  1398  1D03               	btfss	3,2
 14538  1399  2BA6               	goto	l7351
 14539  139A  093C               	comf	atoi@n,w
 14540  139B  00B1               	movwf	??_atoi
 14541  139C  093D               	comf	atoi@n+1,w
 14542  139D  00B2               	movwf	??_atoi+1
 14543  139E  0AB1               	incf	??_atoi,f
 14544  139F  1903               	skipnz
 14545  13A0  0AB2               	incf	??_atoi+1,f
 14546  13A1  0831               	movf	??_atoi,w
 14547  13A2  00AF               	movwf	?_atoi
 14548  13A3  0832               	movf	??_atoi+1,w
 14549  13A4  00B0               	movwf	?_atoi+1
 14550  13A5  0008               	return
 14551  13A6                     l7351:
 14552  13A6  083D               	movf	atoi@n+1,w
 14553  13A7  00B0               	movwf	?_atoi+1
 14554  13A8  083C               	movf	atoi@n,w
 14555  13A9  00AF               	movwf	?_atoi
 14556  13AA  0008               	return
 14557  13AB                     __end_of_atoi:
 14558                           
 14559                           	psect	text30
 14560  1AA5                     __ptext30:	
 14561 ;; *************** function _isspace *****************
 14562 ;; Defined at:
 14563 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/isspace.c"
 14564 ;; Parameters:    Size  Location     Type
 14565 ;;  c               2    3[BANK0 ] int 
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;		None
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  2    3[BANK0 ] int 
 14570 ;; Registers used:
 14571 ;;		wreg, status,2, status,0
 14572 ;; Tracked objects:
 14573 ;;		On entry : 0/0
 14574 ;;		On exit  : 1F/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14577 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14578 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14579 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14580 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14581 ;;Total ram usage:        5 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:    7
 14584 ;; This function calls:
 14585 ;;		Nothing
 14586 ;; This function is called by:
 14587 ;;		_atoi
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           
 14592                           ;psect for function _isspace
 14593  1AA5                     _isspace:
 14594                           
 14595                           ;incstack = 0
 14596                           ; Regs used in _isspace: [wreg+status,2+status,0]
 14597  1AA5  0020               	movlb	0	; select bank0
 14598  1AA6  01A7               	clrf	_isspace$2296
 14599  1AA7  0AA7               	incf	_isspace$2296,f
 14600  1AA8  3020               	movlw	32
 14601  1AA9  0623               	xorwf	isspace@c,w
 14602  1AAA  0424               	iorwf	isspace@c+1,w
 14603  1AAB  1903               	btfsc	3,2
 14604  1AAC  2ABA               	goto	l7073
 14605  1AAD  0823               	movf	isspace@c,w
 14606  1AAE  3EF7               	addlw	247
 14607  1AAF  00A5               	movwf	??_isspace
 14608  1AB0  30FF               	movlw	255
 14609  1AB1  3D24               	addwfc	isspace@c+1,w
 14610  1AB2  00A6               	movwf	??_isspace+1
 14611  1AB3  3000               	movlw	0
 14612  1AB4  0226               	subwf	??_isspace+1,w
 14613  1AB5  3005               	movlw	5
 14614  1AB6  1903               	skipnz
 14615  1AB7  0225               	subwf	??_isspace,w
 14616  1AB8  1803               	btfsc	3,0
 14617  1AB9  01A7               	clrf	_isspace$2296
 14618  1ABA                     l7073:
 14619  1ABA  0827               	movf	_isspace$2296,w
 14620  1ABB  00A5               	movwf	??_isspace
 14621  1ABC  01A6               	clrf	??_isspace+1
 14622  1ABD  0825               	movf	??_isspace,w
 14623  1ABE  00A3               	movwf	?_isspace
 14624  1ABF  0826               	movf	??_isspace+1,w
 14625  1AC0  00A4               	movwf	?_isspace+1
 14626  1AC1  0008               	return
 14627  1AC2                     __end_of_isspace:
 14628                           
 14629                           	psect	text31
 14630  1972                     __ptext31:	
 14631 ;; *************** function _isdigit *****************
 14632 ;; Defined at:
 14633 ;;		line 5 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/isdigit.c"
 14634 ;; Parameters:    Size  Location     Type
 14635 ;;  c               2    3[BANK0 ] int 
 14636 ;; Auto vars:     Size  Location     Type
 14637 ;;		None
 14638 ;; Return value:  Size  Location     Type
 14639 ;;                  2    3[BANK0 ] int 
 14640 ;; Registers used:
 14641 ;;		wreg, status,2, status,0
 14642 ;; Tracked objects:
 14643 ;;		On entry : 0/0
 14644 ;;		On exit  : 1F/0
 14645 ;;		Unchanged: 0/0
 14646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14647 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14649 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14650 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14651 ;;Total ram usage:        6 bytes
 14652 ;; Hardware stack levels used:    1
 14653 ;; Hardware stack levels required when called:    7
 14654 ;; This function calls:
 14655 ;;		Nothing
 14656 ;; This function is called by:
 14657 ;;		_vfpfcnvrt
 14658 ;;		_atoi
 14659 ;; This function uses a non-reentrant model
 14660 ;;
 14661                           
 14662                           
 14663                           ;psect for function _isdigit
 14664  1972                     _isdigit:
 14665                           
 14666                           ;incstack = 0
 14667                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14668  1972  0020               	movlb	0	; select bank0
 14669  1973  0823               	movf	isdigit@c,w
 14670  1974  3ED0               	addlw	208
 14671  1975  00A5               	movwf	??_isdigit
 14672  1976  30FF               	movlw	255
 14673  1977  3D24               	addwfc	isdigit@c+1,w
 14674  1978  00A6               	movwf	??_isdigit+1
 14675  1979  3000               	movlw	0
 14676  197A  0226               	subwf	??_isdigit+1,w
 14677  197B  300A               	movlw	10
 14678  197C  1903               	skipnz
 14679  197D  0225               	subwf	??_isdigit,w
 14680  197E  1803               	btfsc	3,0
 14681  197F  2982               	goto	u4900
 14682  1980  3001               	movlw	1
 14683  1981  2983               	goto	u4910
 14684  1982                     u4900:
 14685  1982  3000               	movlw	0
 14686  1983                     u4910:
 14687  1983  00A7               	movwf	??_isdigit+2
 14688  1984  01A8               	clrf	??_isdigit+3
 14689  1985  0827               	movf	??_isdigit+2,w
 14690  1986  00A3               	movwf	?_isdigit
 14691  1987  0828               	movf	??_isdigit+3,w
 14692  1988  00A4               	movwf	?_isdigit+1
 14693  1989  0008               	return
 14694  198A                     __end_of_isdigit:
 14695                           
 14696                           	psect	text32
 14697  1A6E                     __ptext32:	
 14698 ;; *************** function ___wmul *****************
 14699 ;; Defined at:
 14700 ;;		line 15 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/Umul16.c"
 14701 ;; Parameters:    Size  Location     Type
 14702 ;;  multiplier      2    9[BANK0 ] unsigned int 
 14703 ;;  multiplicand    2   11[BANK0 ] unsigned int 
 14704 ;; Auto vars:     Size  Location     Type
 14705 ;;  product         2   13[BANK0 ] unsigned int 
 14706 ;; Return value:  Size  Location     Type
 14707 ;;                  2    9[BANK0 ] unsigned int 
 14708 ;; Registers used:
 14709 ;;		wreg, status,2, status,0
 14710 ;; Tracked objects:
 14711 ;;		On entry : 1F/4900000
 14712 ;;		On exit  : 1F/0
 14713 ;;		Unchanged: 0/0
 14714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14715 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14718 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14719 ;;Total ram usage:        6 bytes
 14720 ;; Hardware stack levels used:    1
 14721 ;; Hardware stack levels required when called:    7
 14722 ;; This function calls:
 14723 ;;		Nothing
 14724 ;; This function is called by:
 14725 ;;		_main
 14726 ;;		_lcd_disp_param
 14727 ;;		_atoi
 14728 ;; This function uses a non-reentrant model
 14729 ;;
 14730                           
 14731                           
 14732                           ;psect for function ___wmul
 14733  1A6E                     ___wmul:
 14734                           
 14735                           ;incstack = 0
 14736                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14737  1A6E  01AD               	clrf	___wmul@product
 14738  1A6F  01AE               	clrf	___wmul@product+1
 14739  1A70                     l6941:
 14740  1A70  1C29               	btfss	___wmul@multiplier,0
 14741  1A71  2A76               	goto	l1494
 14742  1A72  082B               	movf	___wmul@multiplicand,w
 14743  1A73  07AD               	addwf	___wmul@product,f
 14744  1A74  082C               	movf	___wmul@multiplicand+1,w
 14745  1A75  3DAE               	addwfc	___wmul@product+1,f
 14746  1A76                     l1494:
 14747  1A76  3001               	movlw	1
 14748  1A77                     u4555:
 14749  1A77  35AB               	lslf	___wmul@multiplicand,f
 14750  1A78  0DAC               	rlf	___wmul@multiplicand+1,f
 14751  1A79  0B89               	decfsz	9,f
 14752  1A7A  2A77               	goto	u4555
 14753  1A7B  3001               	movlw	1
 14754  1A7C                     u4565:
 14755  1A7C  36AA               	lsrf	___wmul@multiplier+1,f
 14756  1A7D  0CA9               	rrf	___wmul@multiplier,f
 14757  1A7E  0B89               	decfsz	9,f
 14758  1A7F  2A7C               	goto	u4565
 14759  1A80  0829               	movf	___wmul@multiplier,w
 14760  1A81  042A               	iorwf	___wmul@multiplier+1,w
 14761  1A82  1D03               	btfss	3,2
 14762  1A83  2A70               	goto	l6941
 14763  1A84  082E               	movf	___wmul@product+1,w
 14764  1A85  00AA               	movwf	?___wmul+1
 14765  1A86  082D               	movf	___wmul@product,w
 14766  1A87  00A9               	movwf	?___wmul
 14767  1A88  0008               	return
 14768  1A89                     __end_of___wmul:
 14769                           
 14770                           	psect	text33
 14771  1D2B                     __ptext33:	
 14772 ;; *************** function _i2c_lcd_set_cursor_pos *****************
 14773 ;; Defined at:
 14774 ;;		line 190 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;  col             1    wreg     unsigned char 
 14777 ;;  line            1   23[BANK0 ] unsigned char 
 14778 ;; Auto vars:     Size  Location     Type
 14779 ;;  col             1   27[BANK0 ] unsigned char 
 14780 ;;  pos             1   26[BANK0 ] unsigned char 
 14781 ;; Return value:  Size  Location     Type
 14782 ;;                  1    wreg      void 
 14783 ;; Registers used:
 14784 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14785 ;; Tracked objects:
 14786 ;;		On entry : 1F/4C00000
 14787 ;;		On exit  : 0/0
 14788 ;;		Unchanged: 0/0
 14789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14790 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14791 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14792 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14793 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14794 ;;Total ram usage:        5 bytes
 14795 ;; Hardware stack levels used:    1
 14796 ;; Hardware stack levels required when called:   12
 14797 ;; This function calls:
 14798 ;;		_i2c_lcd_send_command
 14799 ;; This function is called by:
 14800 ;;		_lcd_disp_param
 14801 ;; This function uses a non-reentrant model
 14802 ;;
 14803                           
 14804                           
 14805                           ;psect for function _i2c_lcd_set_cursor_pos
 14806  1D2B                     _i2c_lcd_set_cursor_pos:
 14807                           
 14808                           ;incstack = 0
 14809                           ; Regs used in _i2c_lcd_set_cursor_pos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14810                           ;i2c_lcd_set_cursor_pos@col stored from wreg
 14811  1D2B  00BB               	movwf	i2c_lcd_set_cursor_pos@col
 14812                           
 14813                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 195:    unsigned char pos;;lcd_driver_files/i2
      +                          c-lcdlib-ceg003400.c: 197:     switch( line )
 14814  1D2C  2D3B               	goto	l7763
 14815  1D2D                     l7755:
 14816  1D2D  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 14817  1D2E  2D37               	goto	L9
 14818  1D2F                     l7757:	
 14819                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 200:                     break;
 14820                           
 14821  1D2F  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 14822  1D30  3E40               	addlw	64
 14823  1D31  2D37               	goto	L9
 14824  1D32                     l7759:	
 14825                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 202:                     break;
 14826                           
 14827  1D32  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 14828  1D33  3E14               	addlw	20
 14829  1D34  2D37               	goto	L9
 14830  1D35                     l7761:	
 14831                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 204:                     break;
 14832                           
 14833  1D35  083B               	movf	i2c_lcd_set_cursor_pos@col,w
 14834  1D36  3E54               	addlw	84
 14835  1D37                     L9:
 14836  1D37  00B8               	movwf	??_i2c_lcd_set_cursor_pos
 14837  1D38  0838               	movf	??_i2c_lcd_set_cursor_pos,w
 14838  1D39  00BA               	movwf	i2c_lcd_set_cursor_pos@pos
 14839                           
 14840                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 206:     }
 14841  1D3A  2D51               	goto	l7765
 14842  1D3B                     l7763:
 14843  1D3B  0837               	movf	i2c_lcd_set_cursor_pos@line,w
 14844  1D3C  00B8               	movwf	??_i2c_lcd_set_cursor_pos
 14845  1D3D  01B9               	clrf	??_i2c_lcd_set_cursor_pos+1
 14846                           
 14847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14848                           ; Switch size 1, requested type "simple"
 14849                           ; Number of cases is 1, Range of values is 0 to 0
 14850                           ; switch strategies available:
 14851                           ; Name         Instructions Cycles
 14852                           ; simple_byte            4     3 (average)
 14853                           ; direct_byte            8     6 (fixed)
 14854                           ; jumptable            260     6 (fixed)
 14855                           ;	Chosen strategy is simple_byte
 14856  1D3E  0839               	movf	??_i2c_lcd_set_cursor_pos+1,w
 14857  1D3F  3A00               	xorlw	0	; case 0
 14858  1D40  1903               	skipnz
 14859  1D41  2D43               	goto	l8685
 14860  1D42  2D51               	goto	l7765
 14861  1D43                     l8685:
 14862                           
 14863                           ; Switch size 1, requested type "simple"
 14864                           ; Number of cases is 4, Range of values is 0 to 3
 14865                           ; switch strategies available:
 14866                           ; Name         Instructions Cycles
 14867                           ; simple_byte           13     7 (average)
 14868                           ; direct_byte           14     6 (fixed)
 14869                           ; jumptable            260     6 (fixed)
 14870                           ;	Chosen strategy is simple_byte
 14871  1D43  0838               	movf	??_i2c_lcd_set_cursor_pos,w
 14872  1D44  3A00               	xorlw	0	; case 0
 14873  1D45  1903               	skipnz
 14874  1D46  2D2D               	goto	l7755
 14875  1D47  3A01               	xorlw	1	; case 1
 14876  1D48  1903               	skipnz
 14877  1D49  2D2F               	goto	l7757
 14878  1D4A  3A03               	xorlw	3	; case 2
 14879  1D4B  1903               	skipnz
 14880  1D4C  2D32               	goto	l7759
 14881  1D4D  3A01               	xorlw	1	; case 3
 14882  1D4E  1903               	skipnz
 14883  1D4F  2D35               	goto	l7761
 14884  1D50  2D51               	goto	l7765
 14885  1D51                     l7765:
 14886                           
 14887                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 207:     pos += 0x80;
 14888  1D51  3080               	movlw	128
 14889  1D52  00B8               	movwf	??_i2c_lcd_set_cursor_pos
 14890  1D53  0838               	movf	??_i2c_lcd_set_cursor_pos,w
 14891  1D54  07BA               	addwf	i2c_lcd_set_cursor_pos@pos,f
 14892                           
 14893                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 208:   i2c_lcd_send_command(pos);
 14894  1D55  083A               	movf	i2c_lcd_set_cursor_pos@pos,w
 14895  1D56  3190  2079  319D   	fcall	_i2c_lcd_send_command
 14896                           
 14897                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 209:   _delay((unsigned long)((10)*(4000000/40
      +                          00000.0)));
 14898  1D59  3003               	movlw	3
 14899  1D5A                     u6187:
 14900  1D5A  0B89               	decfsz	9,f
 14901  1D5B  2D5A               	goto	u6187
 14902  1D5C  0000               	nop
 14903  1D5D  0008               	return
 14904  1D5E                     __end_of_i2c_lcd_set_cursor_pos:
 14905                           
 14906                           	psect	text34
 14907  1930                     __ptext34:	
 14908 ;; *************** function _i2c_lcd_puts *****************
 14909 ;; Defined at:
 14910 ;;		line 156 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 14911 ;; Parameters:    Size  Location     Type
 14912 ;;  s               2   23[BANK0 ] PTR unsigned char 
 14913 ;;		 -> lcdbuff(0), lcdbuff(41), 
 14914 ;; Auto vars:     Size  Location     Type
 14915 ;;		None
 14916 ;; Return value:  Size  Location     Type
 14917 ;;                  1    wreg      void 
 14918 ;; Registers used:
 14919 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14920 ;; Tracked objects:
 14921 ;;		On entry : 1F/0
 14922 ;;		On exit  : 1F/0
 14923 ;;		Unchanged: 0/0
 14924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14925 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14929 ;;Total ram usage:        2 bytes
 14930 ;; Hardware stack levels used:    1
 14931 ;; Hardware stack levels required when called:   12
 14932 ;; This function calls:
 14933 ;;		_i2c_lcd_send_data
 14934 ;; This function is called by:
 14935 ;;		_main
 14936 ;;		_lcd_disp_param
 14937 ;; This function uses a non-reentrant model
 14938 ;;
 14939                           
 14940                           
 14941                           ;psect for function _i2c_lcd_puts
 14942  1930                     _i2c_lcd_puts:
 14943  1930                     l7751:	
 14944                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 157:     while(*s)
 14945                           
 14946                           ;incstack = 0
 14947                           ; Regs used in _i2c_lcd_puts: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14948                           
 14949                           
 14950                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 157:     while(*s)
 14951  1930  0837               	movf	i2c_lcd_puts@s,w
 14952  1931  0086               	movwf	6
 14953  1932  0838               	movf	i2c_lcd_puts@s+1,w
 14954  1933  0087               	movwf	7
 14955  1934  0801               	movf	1,w
 14956  1935  1903               	btfsc	3,2
 14957  1936  0008               	return
 14958                           
 14959                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 158:         i2c_lcd_send_data(*s++);
 14960  1937  0837               	movf	i2c_lcd_puts@s,w
 14961  1938  0086               	movwf	6
 14962  1939  0838               	movf	i2c_lcd_puts@s+1,w
 14963  193A  0087               	movwf	7
 14964  193B  0801               	movf	1,w
 14965  193C  3190  2024  3199   	fcall	_i2c_lcd_send_data
 14966  193F  3001               	movlw	1
 14967  1940  0020               	movlb	0	; select bank0
 14968  1941  07B7               	addwf	i2c_lcd_puts@s,f
 14969  1942  3000               	movlw	0
 14970  1943  3DB8               	addwfc	i2c_lcd_puts@s+1,f
 14971  1944  2930               	goto	l7751
 14972  1945                     __end_of_i2c_lcd_puts:
 14973                           
 14974                           	psect	text35
 14975  1024                     __ptext35:	
 14976 ;; *************** function _i2c_lcd_send_data *****************
 14977 ;; Defined at:
 14978 ;;		line 92 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 14979 ;; Parameters:    Size  Location     Type
 14980 ;;  data            1    wreg     unsigned char 
 14981 ;; Auto vars:     Size  Location     Type
 14982 ;;  data            1   18[BANK0 ] unsigned char 
 14983 ;;  lowerdata       1   22[BANK0 ] unsigned char 
 14984 ;;  upperdata       1   21[BANK0 ] unsigned char 
 14985 ;;  lowerdata_en    1   20[BANK0 ] unsigned char 
 14986 ;;  upperdata_en    1   19[BANK0 ] unsigned char 
 14987 ;; Return value:  Size  Location     Type
 14988 ;;                  1    wreg      void 
 14989 ;; Registers used:
 14990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14991 ;; Tracked objects:
 14992 ;;		On entry : 1F/0
 14993 ;;		On exit  : 0/0
 14994 ;;		Unchanged: 0/0
 14995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14997 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14998 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14999 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15000 ;;Total ram usage:        7 bytes
 15001 ;; Hardware stack levels used:    1
 15002 ;; Hardware stack levels required when called:   11
 15003 ;; This function calls:
 15004 ;;		_I2C1_WriteNBytes
 15005 ;; This function is called by:
 15006 ;;		_i2c_lcd_puts
 15007 ;; This function uses a non-reentrant model
 15008 ;;
 15009                           
 15010                           
 15011                           ;psect for function _i2c_lcd_send_data
 15012  1024                     _i2c_lcd_send_data:
 15013                           
 15014                           ;incstack = 0
 15015                           ; Regs used in _i2c_lcd_send_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15016                           ;i2c_lcd_send_data@data stored from wreg
 15017  1024  00B2               	movwf	i2c_lcd_send_data@data
 15018                           
 15019                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 92: void i2c_lcd_send_data(unsigned char data)
      +                          ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 93: {;lcd_driver_files/i2c-lcdlib-ceg003400.c:
      +                           94:    unsigned char upperdata, upperdata_en, lowerdata, lowerdata_en;;lcd_driver_files
      +                          /i2c-lcdlib-ceg003400.c: 97:     upperdata = (data & 0xf0) | 0b00001000 | 0b00000001;
 15020  1025  0832               	movf	i2c_lcd_send_data@data,w
 15021  1026  39F0               	andlw	240
 15022  1027  3809               	iorlw	9
 15023  1028  00B0               	movwf	??_i2c_lcd_send_data
 15024  1029  0830               	movf	??_i2c_lcd_send_data,w
 15025  102A  00B5               	movwf	i2c_lcd_send_data@upperdata
 15026                           
 15027                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 98:     upperdata_en = upperdata | 0b00000100;
 15028  102B  0835               	movf	i2c_lcd_send_data@upperdata,w
 15029  102C  3804               	iorlw	4
 15030  102D  00B0               	movwf	??_i2c_lcd_send_data
 15031  102E  0830               	movf	??_i2c_lcd_send_data,w
 15032  102F  00B3               	movwf	i2c_lcd_send_data@upperdata_en
 15033                           
 15034                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 99:     lowerdata = ((data << 4) & 0xf0) | 0b0
      +                          0001000 | 0b00000001 ;
 15035  1030  0832               	movf	i2c_lcd_send_data@data,w
 15036  1031  00B0               	movwf	??_i2c_lcd_send_data
 15037  1032  3003               	movlw	3
 15038  1033                     u5645:
 15039  1033  35B0               	lslf	??_i2c_lcd_send_data,f
 15040  1034  3EFF               	addlw	-1
 15041  1035  1D03               	skipz
 15042  1036  2833               	goto	u5645
 15043  1037  3530               	lslf	??_i2c_lcd_send_data,w
 15044  1038  39F0               	andlw	240
 15045  1039  3809               	iorlw	9
 15046  103A  00B1               	movwf	??_i2c_lcd_send_data+1
 15047  103B  0831               	movf	??_i2c_lcd_send_data+1,w
 15048  103C  00B6               	movwf	i2c_lcd_send_data@lowerdata
 15049                           
 15050                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 100:     lowerdata_en = lowerdata | 0b00000100
      +                          ;
 15051  103D  0836               	movf	i2c_lcd_send_data@lowerdata,w
 15052  103E  3804               	iorlw	4
 15053  103F  00B0               	movwf	??_i2c_lcd_send_data
 15054  1040  0830               	movf	??_i2c_lcd_send_data,w
 15055  1041  00B4               	movwf	i2c_lcd_send_data@lowerdata_en
 15056                           
 15057                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 101:       I2C1_WriteNBytes(0x25, &upperdata_e
      +                          n,1);
 15058  1042  3033               	movlw	(low (i2c_lcd_send_data@upperdata_en| 0))& (0+255)
 15059  1043  00B0               	movwf	??_i2c_lcd_send_data
 15060  1044  0830               	movf	??_i2c_lcd_send_data,w
 15061  1045  00AC               	movwf	I2C1_WriteNBytes@data
 15062  1046  3001               	movlw	1
 15063  1047  00AD               	movwf	I2C1_WriteNBytes@len
 15064  1048  3000               	movlw	0
 15065  1049  00AE               	movwf	I2C1_WriteNBytes@len+1
 15066  104A  3025               	movlw	37
 15067  104B  319B  2365  3190   	fcall	_I2C1_WriteNBytes
 15068                           
 15069                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 102:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 15070  104E  0000               	nop
 15071                           
 15072                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 104:      I2C1_WriteNBytes(0x25, &upperdata, 1
      +                          );
 15073  104F  3035               	movlw	(low (i2c_lcd_send_data@upperdata| 0))& (0+255)
 15074  1050  0020               	movlb	0	; select bank0
 15075  1051  00B0               	movwf	??_i2c_lcd_send_data
 15076  1052  0830               	movf	??_i2c_lcd_send_data,w
 15077  1053  00AC               	movwf	I2C1_WriteNBytes@data
 15078  1054  3001               	movlw	1
 15079  1055  00AD               	movwf	I2C1_WriteNBytes@len
 15080  1056  3000               	movlw	0
 15081  1057  00AE               	movwf	I2C1_WriteNBytes@len+1
 15082  1058  3025               	movlw	37
 15083  1059  319B  2365  3190   	fcall	_I2C1_WriteNBytes
 15084                           
 15085                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 105:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 15086  105C  0000               	nop
 15087                           
 15088                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 109:     I2C1_WriteNBytes(0x25, &lowerdata_en,
      +                           1);
 15089  105D  3034               	movlw	(low (i2c_lcd_send_data@lowerdata_en| 0))& (0+255)
 15090  105E  0020               	movlb	0	; select bank0
 15091  105F  00B0               	movwf	??_i2c_lcd_send_data
 15092  1060  0830               	movf	??_i2c_lcd_send_data,w
 15093  1061  00AC               	movwf	I2C1_WriteNBytes@data
 15094  1062  3001               	movlw	1
 15095  1063  00AD               	movwf	I2C1_WriteNBytes@len
 15096  1064  3000               	movlw	0
 15097  1065  00AE               	movwf	I2C1_WriteNBytes@len+1
 15098  1066  3025               	movlw	37
 15099  1067  319B  2365  3190   	fcall	_I2C1_WriteNBytes
 15100                           
 15101                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 110:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 15102  106A  0000               	nop
 15103                           
 15104                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 112:     I2C1_WriteNBytes(0x25, &lowerdata, 1)
      +                          ;
 15105  106B  3036               	movlw	(low (i2c_lcd_send_data@lowerdata| 0))& (0+255)
 15106  106C  0020               	movlb	0	; select bank0
 15107  106D  00B0               	movwf	??_i2c_lcd_send_data
 15108  106E  0830               	movf	??_i2c_lcd_send_data,w
 15109  106F  00AC               	movwf	I2C1_WriteNBytes@data
 15110  1070  3001               	movlw	1
 15111  1071  00AD               	movwf	I2C1_WriteNBytes@len
 15112  1072  3000               	movlw	0
 15113  1073  00AE               	movwf	I2C1_WriteNBytes@len+1
 15114  1074  3025               	movlw	37
 15115  1075  319B  2365         	fcall	_I2C1_WriteNBytes
 15116                           
 15117                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 113:      _delay((unsigned long)((1)*(4000000/
      +                          4000000.0)));
 15118  1077  0000               	nop
 15119  1078  0008               	return
 15120  1079                     __end_of_i2c_lcd_send_data:
 15121                           
 15122                           	psect	text36
 15123  1AE0                     __ptext36:	
 15124 ;; *************** function ___lbmod *****************
 15125 ;; Defined at:
 15126 ;;		line 4 in file "/Applications/microchip/xc8/v2.30/pic/sources/c99/common/lbmod.c"
 15127 ;; Parameters:    Size  Location     Type
 15128 ;;  dividend        1    wreg     unsigned char 
 15129 ;;  divisor         1    3[BANK0 ] unsigned char 
 15130 ;; Auto vars:     Size  Location     Type
 15131 ;;  dividend        1    6[BANK0 ] unsigned char 
 15132 ;;  rem             1    8[BANK0 ] unsigned char 
 15133 ;;  counter         1    7[BANK0 ] unsigned char 
 15134 ;; Return value:  Size  Location     Type
 15135 ;;                  1    wreg      unsigned char 
 15136 ;; Registers used:
 15137 ;;		wreg, status,2, status,0
 15138 ;; Tracked objects:
 15139 ;;		On entry : 0/4900002
 15140 ;;		On exit  : 1F/0
 15141 ;;		Unchanged: 0/0
 15142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15143 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15144 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15146 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15147 ;;Total ram usage:        6 bytes
 15148 ;; Hardware stack levels used:    1
 15149 ;; Hardware stack levels required when called:    7
 15150 ;; This function calls:
 15151 ;;		Nothing
 15152 ;; This function is called by:
 15153 ;;		_set_source
 15154 ;;		_main
 15155 ;;		_lcd_disp_param
 15156 ;; This function uses a non-reentrant model
 15157 ;;
 15158                           
 15159                           
 15160                           ;psect for function ___lbmod
 15161  1AE0                     ___lbmod:
 15162                           
 15163                           ;incstack = 0
 15164                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 15165                           ;___lbmod@dividend stored from wreg
 15166  1AE0  0020               	movlb	0	; select bank0
 15167  1AE1  00A6               	movwf	___lbmod@dividend
 15168  1AE2  3008               	movlw	8
 15169  1AE3  00A4               	movwf	??___lbmod
 15170  1AE4  0824               	movf	??___lbmod,w
 15171  1AE5  00A7               	movwf	___lbmod@counter
 15172  1AE6  01A8               	clrf	___lbmod@rem
 15173  1AE7                     l7845:
 15174  1AE7  0826               	movf	___lbmod@dividend,w
 15175  1AE8  00A4               	movwf	??___lbmod
 15176  1AE9  3007               	movlw	7
 15177  1AEA                     u5785:
 15178  1AEA  36A4               	lsrf	??___lbmod,f
 15179  1AEB  0B89               	decfsz	9,f
 15180  1AEC  2AEA               	goto	u5785
 15181  1AED  3528               	lslf	___lbmod@rem,w
 15182  1AEE  0424               	iorwf	??___lbmod,w
 15183  1AEF  00A5               	movwf	??___lbmod+1
 15184  1AF0  0825               	movf	??___lbmod+1,w
 15185  1AF1  00A8               	movwf	___lbmod@rem
 15186  1AF2  1003               	clrc
 15187  1AF3  0DA6               	rlf	___lbmod@dividend,f
 15188  1AF4  0823               	movf	___lbmod@divisor,w
 15189  1AF5  0228               	subwf	___lbmod@rem,w
 15190  1AF6  1C03               	skipc
 15191  1AF7  2AFA               	goto	l1712
 15192  1AF8  0823               	movf	___lbmod@divisor,w
 15193  1AF9  02A8               	subwf	___lbmod@rem,f
 15194  1AFA                     l1712:
 15195  1AFA  3001               	movlw	1
 15196  1AFB  02A7               	subwf	___lbmod@counter,f
 15197  1AFC  1D03               	btfss	3,2
 15198  1AFD  2AE7               	goto	l7845
 15199  1AFE  0828               	movf	___lbmod@rem,w
 15200  1AFF  0008               	return
 15201  1B00                     __end_of___lbmod:
 15202                           
 15203                           	psect	text37
 15204  1125                     __ptext37:	
 15205 ;; *************** function _init_tas6422 *****************
 15206 ;; Defined at:
 15207 ;;		line 324 in file "main.c"
 15208 ;; Parameters:    Size  Location     Type
 15209 ;;		None
 15210 ;; Auto vars:     Size  Location     Type
 15211 ;;		None
 15212 ;; Return value:  Size  Location     Type
 15213 ;;                  1    wreg      void 
 15214 ;; Registers used:
 15215 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15216 ;; Tracked objects:
 15217 ;;		On entry : 1F/0
 15218 ;;		On exit  : 1F/2
 15219 ;;		Unchanged: 0/0
 15220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15224 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15225 ;;Total ram usage:        1 bytes
 15226 ;; Hardware stack levels used:    1
 15227 ;; Hardware stack levels required when called:   11
 15228 ;; This function calls:
 15229 ;;		_DELAY_milliseconds
 15230 ;;		_i2c_writeNBytes
 15231 ;; This function is called by:
 15232 ;;		_main
 15233 ;; This function uses a non-reentrant model
 15234 ;;
 15235                           
 15236                           
 15237                           ;psect for function _init_tas6422
 15238  1125                     _init_tas6422:
 15239                           
 15240                           ;main.c: 326: i2c_writeNBytes(0x6a,&TAS_RESET, 2 );
 15241                           
 15242                           ;incstack = 0
 15243                           ; Regs used in _init_tas6422: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15244  1125  30C3               	movlw	(low (_TAS_RESET| (0+256)))& (0+255)
 15245  1126  00B0               	movwf	??_init_tas6422
 15246  1127  0830               	movf	??_init_tas6422,w
 15247  1128  00AC               	movwf	i2c_writeNBytes@data
 15248  1129  3002               	movlw	2
 15249  112A  00AD               	movwf	i2c_writeNBytes@len
 15250  112B  3000               	movlw	0
 15251  112C  00AE               	movwf	i2c_writeNBytes@len+1
 15252  112D  306A               	movlw	106
 15253  112E  319B  238A  3191   	fcall	_i2c_writeNBytes
 15254                           
 15255                           ;main.c: 327:   DELAY_milliseconds(5);
 15256  1131  3005               	movlw	5
 15257  1132  00A3               	movwf	DELAY_milliseconds@milliseconds
 15258  1133  3000               	movlw	0
 15259  1134  00A4               	movwf	DELAY_milliseconds@milliseconds+1
 15260  1135  31A7  276F  3191   	fcall	_DELAY_milliseconds
 15261                           
 15262                           ;main.c: 328: i2c_writeNBytes(0x6a,&TAS_RUN, 2 );
 15263  1138  30ED               	movlw	(low (_TAS_RUN| (0+256)))& (0+255)
 15264  1139  00B0               	movwf	??_init_tas6422
 15265  113A  0830               	movf	??_init_tas6422,w
 15266  113B  00AC               	movwf	i2c_writeNBytes@data
 15267  113C  3002               	movlw	2
 15268  113D  00AD               	movwf	i2c_writeNBytes@len
 15269  113E  3000               	movlw	0
 15270  113F  00AE               	movwf	i2c_writeNBytes@len+1
 15271  1140  306A               	movlw	106
 15272  1141  319B  238A  3191   	fcall	_i2c_writeNBytes
 15273                           
 15274                           ;main.c: 330: i2c_writeNBytes(0x6a,&TAS_DCDIAG_CLEAR, 2 );
 15275  1144  30C1               	movlw	(low (_TAS_DCDIAG_CLEAR| (0+256)))& (0+255)
 15276  1145  00B0               	movwf	??_init_tas6422
 15277  1146  0830               	movf	??_init_tas6422,w
 15278  1147  00AC               	movwf	i2c_writeNBytes@data
 15279  1148  3002               	movlw	2
 15280  1149  00AD               	movwf	i2c_writeNBytes@len
 15281  114A  3000               	movlw	0
 15282  114B  00AE               	movwf	i2c_writeNBytes@len+1
 15283  114C  306A               	movlw	106
 15284  114D  319B  238A  3191   	fcall	_i2c_writeNBytes
 15285                           
 15286                           ;main.c: 331: i2c_writeNBytes(0x6a,&TAS_FS96K, 2 );
 15287  1150  3055               	movlw	(low (_TAS_FS96K| (0+256)))& (0+255)
 15288  1151  00B0               	movwf	??_init_tas6422
 15289  1152  0830               	movf	??_init_tas6422,w
 15290  1153  00AC               	movwf	i2c_writeNBytes@data
 15291  1154  3002               	movlw	2
 15292  1155  00AD               	movwf	i2c_writeNBytes@len
 15293  1156  3000               	movlw	0
 15294  1157  00AE               	movwf	i2c_writeNBytes@len+1
 15295  1158  306A               	movlw	106
 15296  1159  319B  238A  3191   	fcall	_i2c_writeNBytes
 15297                           
 15298                           ;main.c: 332: i2c_writeNBytes(0x6a,&TAS_AC, 2 );
 15299  115C  3057               	movlw	(low (_TAS_AC| (0+256)))& (0+255)
 15300  115D  00B0               	movwf	??_init_tas6422
 15301  115E  0830               	movf	??_init_tas6422,w
 15302  115F  00AC               	movwf	i2c_writeNBytes@data
 15303  1160  3002               	movlw	2
 15304  1161  00AD               	movwf	i2c_writeNBytes@len
 15305  1162  3000               	movlw	0
 15306  1163  00AE               	movwf	i2c_writeNBytes@len+1
 15307  1164  306A               	movlw	106
 15308  1165  319B  238A  3191   	fcall	_i2c_writeNBytes
 15309                           
 15310                           ;main.c: 333: i2c_writeNBytes(0x6a,&TAS_CHK_RAILS, 2 );
 15311  1168  30B7               	movlw	(low (_TAS_CHK_RAILS| (0+256)))& (0+255)
 15312  1169  00B0               	movwf	??_init_tas6422
 15313  116A  0830               	movf	??_init_tas6422,w
 15314  116B  00AC               	movwf	i2c_writeNBytes@data
 15315  116C  3002               	movlw	2
 15316  116D  00AD               	movwf	i2c_writeNBytes@len
 15317  116E  3000               	movlw	0
 15318  116F  00AE               	movwf	i2c_writeNBytes@len+1
 15319  1170  306A               	movlw	106
 15320  1171  319B  238A  3191   	fcall	_i2c_writeNBytes
 15321                           
 15322                           ;main.c: 334: i2c_writeNBytes(0x6a,&TAS_CLEAR_FALT, 2 );
 15323  1174  3051               	movlw	(low (_TAS_CLEAR_FALT| (0+256)))& (0+255)
 15324  1175  00B0               	movwf	??_init_tas6422
 15325  1176  0830               	movf	??_init_tas6422,w
 15326  1177  00AC               	movwf	i2c_writeNBytes@data
 15327  1178  3002               	movlw	2
 15328  1179  00AD               	movwf	i2c_writeNBytes@len
 15329  117A  3000               	movlw	0
 15330  117B  00AE               	movwf	i2c_writeNBytes@len+1
 15331  117C  306A               	movlw	106
 15332  117D  319B  238A  3191   	fcall	_i2c_writeNBytes
 15333                           
 15334                           ;main.c: 335: i2c_writeNBytes(0x6a,&TAS_NORMAL, 2 );
 15335  1180  304F               	movlw	(low (_TAS_NORMAL| (0+256)))& (0+255)
 15336  1181  00B0               	movwf	??_init_tas6422
 15337  1182  0830               	movf	??_init_tas6422,w
 15338  1183  00AC               	movwf	i2c_writeNBytes@data
 15339  1184  3002               	movlw	2
 15340  1185  00AD               	movwf	i2c_writeNBytes@len
 15341  1186  3000               	movlw	0
 15342  1187  00AE               	movwf	i2c_writeNBytes@len+1
 15343  1188  306A               	movlw	106
 15344  1189  319B  238A         	fcall	_i2c_writeNBytes
 15345  118B  0022               	movlb	2	; select bank2
 15346  118C  178D               	bsf	13,7	;volatile
 15347  118D  0008               	return
 15348  118E                     __end_of_init_tas6422:
 15349                           
 15350                           	psect	text38
 15351  276F                     __ptext38:	
 15352 ;; *************** function _DELAY_milliseconds *****************
 15353 ;; Defined at:
 15354 ;;		line 27 in file "mcc_generated_files/delay.c"
 15355 ;; Parameters:    Size  Location     Type
 15356 ;;  milliseconds    2    3[BANK0 ] unsigned short 
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;		None
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  1    wreg      void 
 15361 ;; Registers used:
 15362 ;;		wreg, status,2, status,0
 15363 ;; Tracked objects:
 15364 ;;		On entry : 1F/0
 15365 ;;		On exit  : 1F/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15370 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15371 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15372 ;;Total ram usage:        3 bytes
 15373 ;; Hardware stack levels used:    1
 15374 ;; Hardware stack levels required when called:    7
 15375 ;; This function calls:
 15376 ;;		Nothing
 15377 ;; This function is called by:
 15378 ;;		_init_tas6422
 15379 ;;		_set_source
 15380 ;;		_main
 15381 ;; This function uses a non-reentrant model
 15382 ;;
 15383                           
 15384                           
 15385                           ;psect for function _DELAY_milliseconds
 15386  276F                     _DELAY_milliseconds:
 15387  276F                     l5809:	
 15388                           ;mcc_generated_files/delay.c: 28:     while(milliseconds--){
 15389                           
 15390                           ;incstack = 0
 15391                           ; Regs used in _DELAY_milliseconds: [wreg+status,2+status,0]
 15392                           
 15393                           
 15394                           ;mcc_generated_files/delay.c: 28:     while(milliseconds--){
 15395  276F  3001               	movlw	1
 15396  2770  0020               	movlb	0	; select bank0
 15397  2771  02A3               	subwf	DELAY_milliseconds@milliseconds,f
 15398  2772  3000               	movlw	0
 15399  2773  3BA4               	subwfb	DELAY_milliseconds@milliseconds+1,f
 15400  2774  0A23               	incf	DELAY_milliseconds@milliseconds,w
 15401  2775  1903               	btfsc	3,2
 15402  2776  0A24               	incf	DELAY_milliseconds@milliseconds+1,w
 15403  2777  1903               	btfsc	3,2
 15404  2778  0008               	return
 15405                           
 15406                           ;mcc_generated_files/delay.c: 29:         _delay((unsigned long)((1)*(32000000/4000.0)))
      +                          ;
 15407  2779  300B               	movlw	11
 15408  277A  0020               	movlb	0	; select bank0
 15409  277B  00A5               	movwf	??_DELAY_milliseconds
 15410  277C  3062               	movlw	98
 15411  277D                     u6197:
 15412  277D  0B89               	decfsz	9,f
 15413  277E  2F7D               	goto	u6197
 15414  277F  0BA5               	decfsz	??_DELAY_milliseconds,f
 15415  2780  2F7D               	goto	u6197
 15416  2781  0000               	nop
 15417  2782  2F6F               	goto	l5809
 15418  2783                     __end_of_DELAY_milliseconds:
 15419                           
 15420                           	psect	text39
 15421  14E9                     __ptext39:	
 15422 ;; *************** function _init_pcm9211 *****************
 15423 ;; Defined at:
 15424 ;;		line 296 in file "main.c"
 15425 ;; Parameters:    Size  Location     Type
 15426 ;;		None
 15427 ;; Auto vars:     Size  Location     Type
 15428 ;;		None
 15429 ;; Return value:  Size  Location     Type
 15430 ;;                  1    wreg      void 
 15431 ;; Registers used:
 15432 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15433 ;; Tracked objects:
 15434 ;;		On entry : 1F/0
 15435 ;;		On exit  : 1F/0
 15436 ;;		Unchanged: 0/0
 15437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15440 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15441 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15442 ;;Total ram usage:        1 bytes
 15443 ;; Hardware stack levels used:    1
 15444 ;; Hardware stack levels required when called:   11
 15445 ;; This function calls:
 15446 ;;		_i2c_writeNBytes
 15447 ;; This function is called by:
 15448 ;;		_main
 15449 ;; This function uses a non-reentrant model
 15450 ;;
 15451                           
 15452                           
 15453                           ;psect for function _init_pcm9211
 15454  14E9                     _init_pcm9211:
 15455                           
 15456                           ;main.c: 298: i2c_writeNBytes(0x40,&INIT9211_20, 2 );
 15457                           
 15458                           ;incstack = 0
 15459                           ; Regs used in _init_pcm9211: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15460  14E9  30CF               	movlw	(low (_INIT9211_20| (0+256)))& (0+255)
 15461  14EA  00B0               	movwf	??_init_pcm9211
 15462  14EB  0830               	movf	??_init_pcm9211,w
 15463  14EC  00AC               	movwf	i2c_writeNBytes@data
 15464  14ED  3002               	movlw	2
 15465  14EE  00AD               	movwf	i2c_writeNBytes@len
 15466  14EF  3000               	movlw	0
 15467  14F0  00AE               	movwf	i2c_writeNBytes@len+1
 15468  14F1  3040               	movlw	64
 15469  14F2  319B  238A  3194   	fcall	_i2c_writeNBytes
 15470                           
 15471                           ;main.c: 299: i2c_writeNBytes(0x40,&INIT9211_26, 2 );
 15472  14F5  30C9               	movlw	(low (_INIT9211_26| (0+256)))& (0+255)
 15473  14F6  00B0               	movwf	??_init_pcm9211
 15474  14F7  0830               	movf	??_init_pcm9211,w
 15475  14F8  00AC               	movwf	i2c_writeNBytes@data
 15476  14F9  3002               	movlw	2
 15477  14FA  00AD               	movwf	i2c_writeNBytes@len
 15478  14FB  3000               	movlw	0
 15479  14FC  00AE               	movwf	i2c_writeNBytes@len+1
 15480  14FD  3040               	movlw	64
 15481  14FE  319B  238A  3194   	fcall	_i2c_writeNBytes
 15482                           
 15483                           ;main.c: 300: i2c_writeNBytes(0x40,&INIT9211_27, 2 );
 15484  1501  30C7               	movlw	(low (_INIT9211_27| (0+256)))& (0+255)
 15485  1502  00B0               	movwf	??_init_pcm9211
 15486  1503  0830               	movf	??_init_pcm9211,w
 15487  1504  00AC               	movwf	i2c_writeNBytes@data
 15488  1505  3002               	movlw	2
 15489  1506  00AD               	movwf	i2c_writeNBytes@len
 15490  1507  3000               	movlw	0
 15491  1508  00AE               	movwf	i2c_writeNBytes@len+1
 15492  1509  3040               	movlw	64
 15493  150A  319B  238A  3194   	fcall	_i2c_writeNBytes
 15494                           
 15495                           ;main.c: 301: i2c_writeNBytes(0x40,&INIT9211_2E, 2 );
 15496  150D  30CD               	movlw	(low (_INIT9211_2E| (0+256)))& (0+255)
 15497  150E  00B0               	movwf	??_init_pcm9211
 15498  150F  0830               	movf	??_init_pcm9211,w
 15499  1510  00AC               	movwf	i2c_writeNBytes@data
 15500  1511  3002               	movlw	2
 15501  1512  00AD               	movwf	i2c_writeNBytes@len
 15502  1513  3000               	movlw	0
 15503  1514  00AE               	movwf	i2c_writeNBytes@len+1
 15504  1515  3040               	movlw	64
 15505  1516  319B  238A  3194   	fcall	_i2c_writeNBytes
 15506                           
 15507                           ;main.c: 302: i2c_writeNBytes(0x40,&INIT9211_2B, 2 );
 15508  1519  30CB               	movlw	(low (_INIT9211_2B| (0+256)))& (0+255)
 15509  151A  00B0               	movwf	??_init_pcm9211
 15510  151B  0830               	movf	??_init_pcm9211,w
 15511  151C  00AC               	movwf	i2c_writeNBytes@data
 15512  151D  3002               	movlw	2
 15513  151E  00AD               	movwf	i2c_writeNBytes@len
 15514  151F  3000               	movlw	0
 15515  1520  00AE               	movwf	i2c_writeNBytes@len+1
 15516  1521  3040               	movlw	64
 15517  1522  319B  238A  3194   	fcall	_i2c_writeNBytes
 15518                           
 15519                           ;main.c: 303: i2c_writeNBytes(0x40,&INIT9211_31, 2 );
 15520  1525  30C5               	movlw	(low (_INIT9211_31| (0+256)))& (0+255)
 15521  1526  00B0               	movwf	??_init_pcm9211
 15522  1527  0830               	movf	??_init_pcm9211,w
 15523  1528  00AC               	movwf	i2c_writeNBytes@data
 15524  1529  3002               	movlw	2
 15525  152A  00AD               	movwf	i2c_writeNBytes@len
 15526  152B  3000               	movlw	0
 15527  152C  00AE               	movwf	i2c_writeNBytes@len+1
 15528  152D  3040               	movlw	64
 15529  152E  319B  238A  3194   	fcall	_i2c_writeNBytes
 15530                           
 15531                           ;main.c: 304:  if( current_direction == 1)
 15532  1531  037D               	decf	_current_direction,w
 15533  1532  1D03               	btfss	3,2
 15534  1533  2D36               	goto	l7957
 15535                           
 15536                           ;main.c: 305:            i2c_writeNBytes(0x40,&I2S_OUT, 2 );
 15537  1534  3067               	movlw	(low (_I2S_OUT| (0+256)))& (0+255)
 15538  1535  2D37               	goto	L10
 15539  1536                     l7957:
 15540  1536  3065               	movlw	(low (_I2S_IN| (0+256)))& (0+255)
 15541  1537                     L10:
 15542  1537  00B0               	movwf	??_init_pcm9211
 15543  1538  0830               	movf	??_init_pcm9211,w
 15544  1539  00AC               	movwf	i2c_writeNBytes@data
 15545  153A  3002               	movlw	2
 15546  153B  00AD               	movwf	i2c_writeNBytes@len
 15547  153C  3000               	movlw	0
 15548  153D  00AE               	movwf	i2c_writeNBytes@len+1
 15549  153E  3040               	movlw	64
 15550  153F  319B  238A  3194   	fcall	_i2c_writeNBytes
 15551                           
 15552                           ;main.c: 307:  i2c_writeNBytes(0x40,&ADC_96K, 2 );
 15553  1542  30D1               	movlw	(low (_ADC_96K| (0+256)))& (0+255)
 15554  1543  00B0               	movwf	??_init_pcm9211
 15555  1544  0830               	movf	??_init_pcm9211,w
 15556  1545  00AC               	movwf	i2c_writeNBytes@data
 15557  1546  3002               	movlw	2
 15558  1547  00AD               	movwf	i2c_writeNBytes@len
 15559  1548  3000               	movlw	0
 15560  1549  00AE               	movwf	i2c_writeNBytes@len+1
 15561  154A  3040               	movlw	64
 15562  154B  319B  238A  3194   	fcall	_i2c_writeNBytes
 15563                           
 15564                           ;main.c: 308:  i2c_writeNBytes(0x40,&ADC_DC, 2 );
 15565  154E  30D3               	movlw	(low (_ADC_DC| (0+256)))& (0+255)
 15566  154F  00B0               	movwf	??_init_pcm9211
 15567  1550  0830               	movf	??_init_pcm9211,w
 15568  1551  00AC               	movwf	i2c_writeNBytes@data
 15569  1552  3002               	movlw	2
 15570  1553  00AD               	movwf	i2c_writeNBytes@len
 15571  1554  3000               	movlw	0
 15572  1555  00AE               	movwf	i2c_writeNBytes@len+1
 15573  1556  3040               	movlw	64
 15574  1557  319B  238A  3194   	fcall	_i2c_writeNBytes
 15575                           
 15576                           ;main.c: 309: i2c_writeNBytes(0x40,&ADC_ATTL_3dB, 2 );
 15577  155A  30DB               	movlw	(low (_ADC_ATTL_3dB| (0+256)))& (0+255)
 15578  155B  00B0               	movwf	??_init_pcm9211
 15579  155C  0830               	movf	??_init_pcm9211,w
 15580  155D  00AC               	movwf	i2c_writeNBytes@data
 15581  155E  3002               	movlw	2
 15582  155F  00AD               	movwf	i2c_writeNBytes@len
 15583  1560  3000               	movlw	0
 15584  1561  00AE               	movwf	i2c_writeNBytes@len+1
 15585  1562  3040               	movlw	64
 15586  1563  319B  238A  3194   	fcall	_i2c_writeNBytes
 15587                           
 15588                           ;main.c: 310: i2c_writeNBytes(0x40,&ADC_ATTR_3dB, 2 );
 15589  1566  30D9               	movlw	(low (_ADC_ATTR_3dB| (0+256)))& (0+255)
 15590  1567  00B0               	movwf	??_init_pcm9211
 15591  1568  0830               	movf	??_init_pcm9211,w
 15592  1569  00AC               	movwf	i2c_writeNBytes@data
 15593  156A  3002               	movlw	2
 15594  156B  00AD               	movwf	i2c_writeNBytes@len
 15595  156C  3000               	movlw	0
 15596  156D  00AE               	movwf	i2c_writeNBytes@len+1
 15597  156E  3040               	movlw	64
 15598  156F  319B  238A  3194   	fcall	_i2c_writeNBytes
 15599                           
 15600                           ;main.c: 311:  i2c_writeNBytes(0x40,&SRC_ADC, 2 );
 15601  1572  3061               	movlw	(low (_SRC_ADC| (0+256)))& (0+255)
 15602  1573  00B0               	movwf	??_init_pcm9211
 15603  1574  0830               	movf	??_init_pcm9211,w
 15604  1575  00AC               	movwf	i2c_writeNBytes@data
 15605  1576  3002               	movlw	2
 15606  1577  00AD               	movwf	i2c_writeNBytes@len
 15607  1578  3000               	movlw	0
 15608  1579  00AE               	movwf	i2c_writeNBytes@len+1
 15609  157A  3040               	movlw	64
 15610  157B  319B  238A  3194   	fcall	_i2c_writeNBytes
 15611                           
 15612                           ;main.c: 312:  i2c_writeNBytes(0x40,&DIR_OPT, 2 );
 15613  157E  305D               	movlw	(low (_DIR_OPT| (0+256)))& (0+255)
 15614  157F  00B0               	movwf	??_init_pcm9211
 15615  1580  0830               	movf	??_init_pcm9211,w
 15616  1581  00AC               	movwf	i2c_writeNBytes@data
 15617  1582  3002               	movlw	2
 15618  1583  00AD               	movwf	i2c_writeNBytes@len
 15619  1584  3000               	movlw	0
 15620  1585  00AE               	movwf	i2c_writeNBytes@len+1
 15621  1586  3040               	movlw	64
 15622  1587  319B  238A  3194   	fcall	_i2c_writeNBytes
 15623                           
 15624                           ;main.c: 313:  i2c_writeNBytes(0x40,&DIT_ADC, 2 );
 15625  158A  3059               	movlw	(low (_DIT_ADC| (0+256)))& (0+255)
 15626  158B  00B0               	movwf	??_init_pcm9211
 15627  158C  0830               	movf	??_init_pcm9211,w
 15628  158D  00AC               	movwf	i2c_writeNBytes@data
 15629  158E  3002               	movlw	2
 15630  158F  00AD               	movwf	i2c_writeNBytes@len
 15631  1590  3000               	movlw	0
 15632  1591  00AE               	movwf	i2c_writeNBytes@len+1
 15633  1592  3040               	movlw	64
 15634  1593  319B  238A  3194   	fcall	_i2c_writeNBytes
 15635                           
 15636                           ;main.c: 314:  i2c_writeNBytes(0x40,&CALC_MOUT, 2);
 15637  1596  30DD               	movlw	(low (_CALC_MOUT| (0+256)))& (0+255)
 15638  1597  00B0               	movwf	??_init_pcm9211
 15639  1598  0830               	movf	??_init_pcm9211,w
 15640  1599  00AC               	movwf	i2c_writeNBytes@data
 15641  159A  3002               	movlw	2
 15642  159B  00AD               	movwf	i2c_writeNBytes@len
 15643  159C  3000               	movlw	0
 15644  159D  00AE               	movwf	i2c_writeNBytes@len+1
 15645  159E  3040               	movlw	64
 15646  159F  319B  238A         	fcall	_i2c_writeNBytes
 15647  15A1  0008               	return
 15648  15A2                     __end_of_init_pcm9211:
 15649                           
 15650                           	psect	text40
 15651  1B8A                     __ptext40:	
 15652 ;; *************** function _i2c_writeNBytes *****************
 15653 ;; Defined at:
 15654 ;;		line 48 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 15655 ;; Parameters:    Size  Location     Type
 15656 ;;  address         1    wreg     unsigned char 
 15657 ;;  data            1   12[BANK0 ] PTR void 
 15658 ;;		 -> tasbuff(2), write_tas6422@buffer(2), TAS_NORMAL(2), TAS_CLEAR_FALT(2), 
 15659 ;;		 -> TAS_CHK_RAILS(2), TAS_PLAY(2), TAS_MUTE(2), TAS_FS96K(2), 
 15660 ;;		 -> TAS_FS48K(2), TAS_FS44K(2), TAS_AC(2), TAS_DC(2), 
 15661 ;;		 -> TAS_DCDIAG_CLEAR(2), TAS_RUN(2), TAS_RESET(2), INIT9211_31(2), 
 15662 ;;		 -> INIT9211_27(2), INIT9211_26(2), INIT9211_2B(2), INIT9211_2E(2), 
 15663 ;;		 -> INIT9211_20(2), ADC_96K(2), ADC_DC(2), DIT_I2S(2), 
 15664 ;;		 -> DIT_LVDS(2), DIT_ADC(2), DIT_DIR(2), ADC_ATTR_3dB(2), 
 15665 ;;		 -> ADC_ATTL_3dB(2), CALC_MOUT(2), DIR_COAX(2), DIR_OPT(2), 
 15666 ;;		 -> AUXSRC_LVDS(2), AUXSRC_ADC(2), AUXSRC_DIR(2), AUXSRC_AUTO(2), 
 15667 ;;		 -> SRC_I2S(2), SRC_LVDS(2), SRC_ADC(2), SRC_DIR(2), 
 15668 ;;		 -> I2S_IN(2), I2S_OUT(2), 
 15669 ;;  len             2   13[BANK0 ] unsigned int 
 15670 ;; Auto vars:     Size  Location     Type
 15671 ;;  address         1   15[BANK0 ] unsigned char 
 15672 ;; Return value:  Size  Location     Type
 15673 ;;                  1    wreg      void 
 15674 ;; Registers used:
 15675 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15676 ;; Tracked objects:
 15677 ;;		On entry : 1F/4A00000
 15678 ;;		On exit  : 1F/0
 15679 ;;		Unchanged: 0/0
 15680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15681 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15682 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15684 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15685 ;;Total ram usage:        4 bytes
 15686 ;; Hardware stack levels used:    1
 15687 ;; Hardware stack levels required when called:   10
 15688 ;; This function calls:
 15689 ;;		_I2C1_Close
 15690 ;;		_I2C1_MasterWrite
 15691 ;;		_I2C1_Open
 15692 ;;		_I2C1_SetAddressNackCallback
 15693 ;;		_I2C1_SetBuffer
 15694 ;; This function is called by:
 15695 ;;		_init_pcm9211
 15696 ;;		_write_tas6422
 15697 ;;		_init_tas6422
 15698 ;;		_set_gains
 15699 ;;		_set_source
 15700 ;;		_main
 15701 ;; This function uses a non-reentrant model
 15702 ;;
 15703                           
 15704                           
 15705                           ;psect for function _i2c_writeNBytes
 15706  1B8A                     _i2c_writeNBytes:
 15707                           
 15708                           ;incstack = 0
 15709                           ; Regs used in _i2c_writeNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15710                           ;i2c_writeNBytes@address stored from wreg
 15711  1B8A  00AF               	movwf	i2c_writeNBytes@address
 15712  1B8B                     l7777:	
 15713                           ;mcc_generated_files/drivers/i2c_simple_master.c: 48: void i2c_writeNBytes(i2c1_address_
      +                          t address, void* data, size_t len);mcc_generated_files/drivers/i2c_simple_master.c: 49: 
      +                          {;mcc_generated_files/drivers/i2c_simple_master.c: 50:     while(!I2C1_Open(address));
 15714                           
 15715  1B8B  082F               	movf	i2c_writeNBytes@address,w
 15716  1B8C  319D  25E6  319B   	fcall	_I2C1_Open
 15717  1B8F  3A00               	xorlw	0
 15718  1B90  1903               	skipnz
 15719  1B91  2B8B               	goto	l7777
 15720                           
 15721                           ;mcc_generated_files/drivers/i2c_simple_master.c: 51:     I2C1_SetBuffer(data,len);
 15722  1B92  082C               	movf	i2c_writeNBytes@data,w
 15723  1B93  00A3               	movwf	I2C1_SetBuffer@buffer
 15724  1B94  3001               	movlw	1
 15725  1B95  00A4               	movwf	I2C1_SetBuffer@buffer+1
 15726  1B96  082E               	movf	i2c_writeNBytes@len+1,w
 15727  1B97  00A6               	movwf	I2C1_SetBuffer@bufferSize+1
 15728  1B98  082D               	movf	i2c_writeNBytes@len,w
 15729  1B99  00A5               	movwf	I2C1_SetBuffer@bufferSize
 15730  1B9A  3199  211B  319B   	fcall	_I2C1_SetBuffer
 15731                           
 15732                           ;mcc_generated_files/drivers/i2c_simple_master.c: 52:     I2C1_SetAddressNackCallback(((
      +                          void*)0),((void*)0));
 15733  1B9D  3000               	movlw	0
 15734  1B9E  0020               	movlb	0	; select bank0
 15735  1B9F  00A8               	movwf	I2C1_SetAddressNackCallback@cb
 15736  1BA0  00A9               	movwf	I2C1_SetAddressNackCallback@cb+1
 15737  1BA1  01AA               	clrf	I2C1_SetAddressNackCallback@ptr
 15738  1BA2  31A6  26FD  319B   	fcall	_I2C1_SetAddressNackCallback
 15739                           
 15740                           ;mcc_generated_files/drivers/i2c_simple_master.c: 53:     I2C1_MasterWrite();
 15741  1BA5  31A6  267C  319B   	fcall	_I2C1_MasterWrite
 15742  1BA8                     l7785:	
 15743                           ;mcc_generated_files/drivers/i2c_simple_master.c: 54:     while(I2C1_BUSY == I2C1_Close(
      +                          ));
 15744                           
 15745  1BA8  319A  2289  319B   	fcall	_I2C1_Close
 15746  1BAB  3A01               	xorlw	1
 15747  1BAC  1D03               	btfss	3,2
 15748  1BAD  0008               	return
 15749  1BAE  2BA8               	goto	l7785
 15750  1BAF                     __end_of_i2c_writeNBytes:
 15751                           
 15752                           	psect	text41
 15753  273E                     __ptext41:	
 15754 ;; *************** function _i2c_lcd_ulcursor_off *****************
 15755 ;; Defined at:
 15756 ;;		line 185 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 15757 ;; Parameters:    Size  Location     Type
 15758 ;;		None
 15759 ;; Auto vars:     Size  Location     Type
 15760 ;;		None
 15761 ;; Return value:  Size  Location     Type
 15762 ;;                  1    wreg      void 
 15763 ;; Registers used:
 15764 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15765 ;; Tracked objects:
 15766 ;;		On entry : 0/2
 15767 ;;		On exit  : 0/0
 15768 ;;		Unchanged: 0/0
 15769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15773 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15774 ;;Total ram usage:        1 bytes
 15775 ;; Hardware stack levels used:    1
 15776 ;; Hardware stack levels required when called:   12
 15777 ;; This function calls:
 15778 ;;		_i2c_lcd_send_command
 15779 ;; This function is called by:
 15780 ;;		_main
 15781 ;; This function uses a non-reentrant model
 15782 ;;
 15783                           
 15784                           
 15785                           ;psect for function _i2c_lcd_ulcursor_off
 15786  273E                     _i2c_lcd_ulcursor_off:
 15787                           
 15788                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 186:    i2c_lcd_send_command(0x0c);
 15789                           
 15790                           ;incstack = 0
 15791                           ; Regs used in _i2c_lcd_ulcursor_off: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15792  273E  300C               	movlw	12
 15793  273F  3190  2079  31A7   	fcall	_i2c_lcd_send_command
 15794                           
 15795                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 187:     _delay((unsigned long)((2)*(4000000/4
      +                          000.0)));
 15796  2742  3003               	movlw	3
 15797  2743  0020               	movlb	0	; select bank0
 15798  2744  00B7               	movwf	??_i2c_lcd_ulcursor_off
 15799  2745  3097               	movlw	151
 15800  2746                     u6207:
 15801  2746  0B89               	decfsz	9,f
 15802  2747  2F46               	goto	u6207
 15803  2748  0BB7               	decfsz	??_i2c_lcd_ulcursor_off,f
 15804  2749  2F46               	goto	u6207
 15805  274A  3200               	nop2
 15806  274B  0008               	return
 15807  274C                     __end_of_i2c_lcd_ulcursor_off:
 15808                           
 15809                           	psect	text42
 15810  10CF                     __ptext42:	
 15811 ;; *************** function _i2c_lcd_init *****************
 15812 ;; Defined at:
 15813 ;;		line 117 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 15814 ;; Parameters:    Size  Location     Type
 15815 ;;		None
 15816 ;; Auto vars:     Size  Location     Type
 15817 ;;		None
 15818 ;; Return value:  Size  Location     Type
 15819 ;;                  1    wreg      void 
 15820 ;; Registers used:
 15821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15822 ;; Tracked objects:
 15823 ;;		On entry : 1F/2
 15824 ;;		On exit  : 0/0
 15825 ;;		Unchanged: 0/0
 15826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15829 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15830 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15831 ;;Total ram usage:        1 bytes
 15832 ;; Hardware stack levels used:    1
 15833 ;; Hardware stack levels required when called:   12
 15834 ;; This function calls:
 15835 ;;		_i2c_lcd_send_command
 15836 ;;		_i2c_lcd_send_upper4bit
 15837 ;; This function is called by:
 15838 ;;		_main
 15839 ;; This function uses a non-reentrant model
 15840 ;;
 15841                           
 15842                           
 15843                           ;psect for function _i2c_lcd_init
 15844  10CF                     _i2c_lcd_init:
 15845                           
 15846                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 119:     _delay((unsigned long)((100)*(4000000
      +                          /4000.0)));
 15847                           
 15848                           ;incstack = 0
 15849                           ; Regs used in _i2c_lcd_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 15850  10CF  3082               	movlw	130
 15851  10D0  0020               	movlb	0	; select bank0
 15852  10D1  00B7               	movwf	??_i2c_lcd_init
 15853  10D2  30DD               	movlw	221
 15854  10D3                     u6217:
 15855  10D3  0B89               	decfsz	9,f
 15856  10D4  28D3               	goto	u6217
 15857  10D5  0BB7               	decfsz	??_i2c_lcd_init,f
 15858  10D6  28D3               	goto	u6217
 15859  10D7  3200               	nop2
 15860                           
 15861                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 121:     i2c_lcd_send_upper4bit(0x30);
 15862  10D8  3030               	movlw	48
 15863  10D9  319C  2424  3190   	fcall	_i2c_lcd_send_upper4bit
 15864                           
 15865                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 123:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 15866  10DC  3007               	movlw	7
 15867  10DD  0020               	movlb	0	; select bank0
 15868  10DE  00B7               	movwf	??_i2c_lcd_init
 15869  10DF  307D               	movlw	125
 15870  10E0                     u6227:
 15871  10E0  0B89               	decfsz	9,f
 15872  10E1  28E0               	goto	u6227
 15873  10E2  0BB7               	decfsz	??_i2c_lcd_init,f
 15874  10E3  28E0               	goto	u6227
 15875                           
 15876                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 125:     i2c_lcd_send_upper4bit(0x30);
 15877  10E4  3030               	movlw	48
 15878  10E5  319C  2424  3190   	fcall	_i2c_lcd_send_upper4bit
 15879                           
 15880                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 127:     _delay((unsigned long)((200)*(4000000
      +                          /4000000.0)));
 15881  10E8  3042               	movlw	66
 15882  10E9                     u6237:
 15883  10E9  0B89               	decfsz	9,f
 15884  10EA  28E9               	goto	u6237
 15885  10EB  3200               	nop2
 15886                           
 15887                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 129:     i2c_lcd_send_upper4bit(0x30);
 15888  10EC  3030               	movlw	48
 15889  10ED  319C  2424  3190   	fcall	_i2c_lcd_send_upper4bit
 15890                           
 15891                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 131:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 15892  10F0  3021               	movlw	33
 15893  10F1                     u6247:
 15894  10F1  0B89               	decfsz	9,f
 15895  10F2  28F1               	goto	u6247
 15896  10F3  0000               	nop
 15897                           
 15898                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 133:     i2c_lcd_send_upper4bit(0x20);
 15899  10F4  3020               	movlw	32
 15900  10F5  319C  2424  3190   	fcall	_i2c_lcd_send_upper4bit
 15901                           
 15902                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 134:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 15903  10F8  3021               	movlw	33
 15904  10F9                     u6257:
 15905  10F9  0B89               	decfsz	9,f
 15906  10FA  28F9               	goto	u6257
 15907  10FB  0000               	nop
 15908                           
 15909                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 136:     i2c_lcd_send_command(0x28);
 15910  10FC  3028               	movlw	40
 15911  10FD  3190  2079  3190   	fcall	_i2c_lcd_send_command
 15912                           
 15913                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 137:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 15914  1100  3021               	movlw	33
 15915  1101                     u6267:
 15916  1101  0B89               	decfsz	9,f
 15917  1102  2901               	goto	u6267
 15918  1103  0000               	nop
 15919                           
 15920                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 139:     i2c_lcd_send_command(0x0C);
 15921  1104  300C               	movlw	12
 15922  1105  3190  2079  3190   	fcall	_i2c_lcd_send_command
 15923                           
 15924                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 140:     _delay((unsigned long)((100)*(4000000
      +                          /4000000.0)));
 15925  1108  3021               	movlw	33
 15926  1109                     u6277:
 15927  1109  0B89               	decfsz	9,f
 15928  110A  2909               	goto	u6277
 15929  110B  0000               	nop
 15930                           
 15931                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 142:     i2c_lcd_send_command(0x01);
 15932  110C  3001               	movlw	1
 15933  110D  3190  2079  3190   	fcall	_i2c_lcd_send_command
 15934                           
 15935                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 143:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 15936  1110  3007               	movlw	7
 15937  1111  0020               	movlb	0	; select bank0
 15938  1112  00B7               	movwf	??_i2c_lcd_init
 15939  1113  307D               	movlw	125
 15940  1114                     u6287:
 15941  1114  0B89               	decfsz	9,f
 15942  1115  2914               	goto	u6287
 15943  1116  0BB7               	decfsz	??_i2c_lcd_init,f
 15944  1117  2914               	goto	u6287
 15945                           
 15946                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 145:     i2c_lcd_send_command(0x06);
 15947  1118  3006               	movlw	6
 15948  1119  3190  2079  3190   	fcall	_i2c_lcd_send_command
 15949                           
 15950                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 146:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 15951  111C  3007               	movlw	7
 15952  111D  0020               	movlb	0	; select bank0
 15953  111E  00B7               	movwf	??_i2c_lcd_init
 15954  111F  307D               	movlw	125
 15955  1120                     u6297:
 15956  1120  0B89               	decfsz	9,f
 15957  1121  2920               	goto	u6297
 15958  1122  0BB7               	decfsz	??_i2c_lcd_init,f
 15959  1123  2920               	goto	u6297
 15960  1124  0008               	return
 15961  1125                     __end_of_i2c_lcd_init:
 15962                           
 15963                           	psect	text43
 15964  1C24                     __ptext43:	
 15965 ;; *************** function _i2c_lcd_send_upper4bit *****************
 15966 ;; Defined at:
 15967 ;;		line 75 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;  data            1    wreg     unsigned char 
 15970 ;; Auto vars:     Size  Location     Type
 15971 ;;  data            1   17[BANK0 ] unsigned char 
 15972 ;;  upperdata       1   19[BANK0 ] unsigned char 
 15973 ;;  upperdata_en    1   18[BANK0 ] unsigned char 
 15974 ;; Return value:  Size  Location     Type
 15975 ;;                  1    wreg      void 
 15976 ;; Registers used:
 15977 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15978 ;; Tracked objects:
 15979 ;;		On entry : 0/2
 15980 ;;		On exit  : 0/0
 15981 ;;		Unchanged: 0/0
 15982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15984 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15985 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15986 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15987 ;;Total ram usage:        4 bytes
 15988 ;; Hardware stack levels used:    1
 15989 ;; Hardware stack levels required when called:   11
 15990 ;; This function calls:
 15991 ;;		_I2C1_WriteNBytes
 15992 ;; This function is called by:
 15993 ;;		_i2c_lcd_init
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997                           
 15998                           ;psect for function _i2c_lcd_send_upper4bit
 15999  1C24                     _i2c_lcd_send_upper4bit:
 16000                           
 16001                           ;incstack = 0
 16002                           ; Regs used in _i2c_lcd_send_upper4bit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstac
      +                          k]
 16003                           ;i2c_lcd_send_upper4bit@data stored from wreg
 16004  1C24  0020               	movlb	0	; select bank0
 16005  1C25  00B1               	movwf	i2c_lcd_send_upper4bit@data
 16006                           
 16007                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 75: void i2c_lcd_send_upper4bit(unsigned char 
      +                          data);lcd_driver_files/i2c-lcdlib-ceg003400.c: 76:     {;lcd_driver_files/i2c-lcdlib-ceg
      +                          003400.c: 77:     unsigned char upperdata, upperdata_en;;lcd_driver_files/i2c-lcdlib-ceg
      +                          003400.c: 80:     upperdata = (data & 0xf0) | 0b00001000;
 16008  1C26  0831               	movf	i2c_lcd_send_upper4bit@data,w
 16009  1C27  39F0               	andlw	240
 16010  1C28  3808               	iorlw	8
 16011  1C29  00B0               	movwf	??_i2c_lcd_send_upper4bit
 16012  1C2A  0830               	movf	??_i2c_lcd_send_upper4bit,w
 16013  1C2B  00B3               	movwf	i2c_lcd_send_upper4bit@upperdata
 16014                           
 16015                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 81:     upperdata_en = upperdata | 0b00000100;
 16016  1C2C  0833               	movf	i2c_lcd_send_upper4bit@upperdata,w
 16017  1C2D  3804               	iorlw	4
 16018  1C2E  00B0               	movwf	??_i2c_lcd_send_upper4bit
 16019  1C2F  0830               	movf	??_i2c_lcd_send_upper4bit,w
 16020  1C30  00B2               	movwf	i2c_lcd_send_upper4bit@upperdata_en
 16021                           
 16022                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 82:       I2C1_WriteNBytes(0x25, &upperdata_en
      +                           ,1);
 16023  1C31  3032               	movlw	(low (i2c_lcd_send_upper4bit@upperdata_en| 0))& (0+255)
 16024  1C32  00B0               	movwf	??_i2c_lcd_send_upper4bit
 16025  1C33  0830               	movf	??_i2c_lcd_send_upper4bit,w
 16026  1C34  00AC               	movwf	I2C1_WriteNBytes@data
 16027  1C35  3001               	movlw	1
 16028  1C36  00AD               	movwf	I2C1_WriteNBytes@len
 16029  1C37  3000               	movlw	0
 16030  1C38  00AE               	movwf	I2C1_WriteNBytes@len+1
 16031  1C39  3025               	movlw	37
 16032  1C3A  319B  2365  319C   	fcall	_I2C1_WriteNBytes
 16033                           
 16034                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 83:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 16035  1C3D  0000               	nop
 16036                           
 16037                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 85:      I2C1_WriteNBytes(0x25, &upperdata, 1)
      +                          ;
 16038  1C3E  3033               	movlw	(low (i2c_lcd_send_upper4bit@upperdata| 0))& (0+255)
 16039  1C3F  0020               	movlb	0	; select bank0
 16040  1C40  00B0               	movwf	??_i2c_lcd_send_upper4bit
 16041  1C41  0830               	movf	??_i2c_lcd_send_upper4bit,w
 16042  1C42  00AC               	movwf	I2C1_WriteNBytes@data
 16043  1C43  3001               	movlw	1
 16044  1C44  00AD               	movwf	I2C1_WriteNBytes@len
 16045  1C45  3000               	movlw	0
 16046  1C46  00AE               	movwf	I2C1_WriteNBytes@len+1
 16047  1C47  3025               	movlw	37
 16048  1C48  319B  2365         	fcall	_I2C1_WriteNBytes
 16049                           
 16050                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 86:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 16051  1C4A  0000               	nop
 16052  1C4B  0008               	return
 16053  1C4C                     __end_of_i2c_lcd_send_upper4bit:
 16054                           
 16055                           	psect	text44
 16056  18CF                     __ptext44:	
 16057 ;; *************** function _i2c_lcd_home *****************
 16058 ;; Defined at:
 16059 ;;		line 174 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;		None
 16062 ;; Auto vars:     Size  Location     Type
 16063 ;;		None
 16064 ;; Return value:  Size  Location     Type
 16065 ;;                  1    wreg      void 
 16066 ;; Registers used:
 16067 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16068 ;; Tracked objects:
 16069 ;;		On entry : 0/2
 16070 ;;		On exit  : 0/0
 16071 ;;		Unchanged: 0/0
 16072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16075 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16076 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16077 ;;Total ram usage:        1 bytes
 16078 ;; Hardware stack levels used:    1
 16079 ;; Hardware stack levels required when called:   12
 16080 ;; This function calls:
 16081 ;;		_i2c_lcd_send_command
 16082 ;; This function is called by:
 16083 ;;		_main
 16084 ;; This function uses a non-reentrant model
 16085 ;;
 16086                           
 16087                           
 16088                           ;psect for function _i2c_lcd_home
 16089  18CF                     _i2c_lcd_home:
 16090                           
 16091                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 175:     i2c_lcd_send_command(0x02);
 16092                           
 16093                           ;incstack = 0
 16094                           ; Regs used in _i2c_lcd_home: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16095  18CF  3002               	movlw	2
 16096  18D0  3190  2079  3198   	fcall	_i2c_lcd_send_command
 16097                           
 16098                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 176:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 16099  18D3  3007               	movlw	7
 16100  18D4  0020               	movlb	0	; select bank0
 16101  18D5  00B7               	movwf	??_i2c_lcd_home
 16102  18D6  307D               	movlw	125
 16103  18D7                     u6307:
 16104  18D7  0B89               	decfsz	9,f
 16105  18D8  28D7               	goto	u6307
 16106  18D9  0BB7               	decfsz	??_i2c_lcd_home,f
 16107  18DA  28D7               	goto	u6307
 16108  18DB  0008               	return
 16109  18DC                     __end_of_i2c_lcd_home:
 16110                           
 16111                           	psect	text45
 16112  2715                     __ptext45:	
 16113 ;; *************** function _i2c_lcd_clear *****************
 16114 ;; Defined at:
 16115 ;;		line 168 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 16116 ;; Parameters:    Size  Location     Type
 16117 ;;		None
 16118 ;; Auto vars:     Size  Location     Type
 16119 ;;		None
 16120 ;; Return value:  Size  Location     Type
 16121 ;;                  1    wreg      void 
 16122 ;; Registers used:
 16123 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16124 ;; Tracked objects:
 16125 ;;		On entry : 1F/0
 16126 ;;		On exit  : 0/0
 16127 ;;		Unchanged: 0/0
 16128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16131 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16132 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16133 ;;Total ram usage:        1 bytes
 16134 ;; Hardware stack levels used:    1
 16135 ;; Hardware stack levels required when called:   12
 16136 ;; This function calls:
 16137 ;;		_i2c_lcd_send_command
 16138 ;; This function is called by:
 16139 ;;		_main
 16140 ;; This function uses a non-reentrant model
 16141 ;;
 16142                           
 16143                           
 16144                           ;psect for function _i2c_lcd_clear
 16145  2715                     _i2c_lcd_clear:
 16146                           
 16147                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 169:     i2c_lcd_send_command(0x01);
 16148                           
 16149                           ;incstack = 0
 16150                           ; Regs used in _i2c_lcd_clear: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16151  2715  3001               	movlw	1
 16152  2716  3190  2079  31A7   	fcall	_i2c_lcd_send_command
 16153                           
 16154                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 170:     _delay((unsigned long)((5)*(4000000/4
      +                          000.0)));
 16155  2719  3007               	movlw	7
 16156  271A  0020               	movlb	0	; select bank0
 16157  271B  00B7               	movwf	??_i2c_lcd_clear
 16158  271C  307D               	movlw	125
 16159  271D                     u6317:
 16160  271D  0B89               	decfsz	9,f
 16161  271E  2F1D               	goto	u6317
 16162  271F  0BB7               	decfsz	??_i2c_lcd_clear,f
 16163  2720  2F1D               	goto	u6317
 16164  2721  0008               	return
 16165  2722                     __end_of_i2c_lcd_clear:
 16166                           
 16167                           	psect	text46
 16168  1079                     __ptext46:	
 16169 ;; *************** function _i2c_lcd_send_command *****************
 16170 ;; Defined at:
 16171 ;;		line 49 in file "lcd_driver_files/i2c-lcdlib-ceg003400.c"
 16172 ;; Parameters:    Size  Location     Type
 16173 ;;  data            1    wreg     unsigned char 
 16174 ;; Auto vars:     Size  Location     Type
 16175 ;;  data            1   18[BANK0 ] unsigned char 
 16176 ;;  lowerdata       1   22[BANK0 ] unsigned char 
 16177 ;;  upperdata       1   21[BANK0 ] unsigned char 
 16178 ;;  lowerdata_en    1   20[BANK0 ] unsigned char 
 16179 ;;  upperdata_en    1   19[BANK0 ] unsigned char 
 16180 ;; Return value:  Size  Location     Type
 16181 ;;                  1    wreg      void 
 16182 ;; Registers used:
 16183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16184 ;; Tracked objects:
 16185 ;;		On entry : 0/4C00000
 16186 ;;		On exit  : 0/0
 16187 ;;		Unchanged: 0/0
 16188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16190 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16191 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16192 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16193 ;;Total ram usage:        7 bytes
 16194 ;; Hardware stack levels used:    1
 16195 ;; Hardware stack levels required when called:   11
 16196 ;; This function calls:
 16197 ;;		_I2C1_WriteNBytes
 16198 ;; This function is called by:
 16199 ;;		_i2c_lcd_init
 16200 ;;		_i2c_lcd_clear
 16201 ;;		_i2c_lcd_home
 16202 ;;		_i2c_lcd_ulcursor_off
 16203 ;;		_i2c_lcd_set_cursor_pos
 16204 ;; This function uses a non-reentrant model
 16205 ;;
 16206                           
 16207                           
 16208                           ;psect for function _i2c_lcd_send_command
 16209  1079                     _i2c_lcd_send_command:
 16210                           
 16211                           ;incstack = 0
 16212                           ; Regs used in _i2c_lcd_send_command: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16213                           ;i2c_lcd_send_command@data stored from wreg
 16214  1079  0020               	movlb	0	; select bank0
 16215  107A  00B2               	movwf	i2c_lcd_send_command@data
 16216                           
 16217                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 49: void i2c_lcd_send_command(unsigned char da
      +                          ta);lcd_driver_files/i2c-lcdlib-ceg003400.c: 50:     {;lcd_driver_files/i2c-lcdlib-ceg00
      +                          3400.c: 51:     unsigned char upperdata, upperdata_en, lowerdata, lowerdata_en;;lcd_driv
      +                          er_files/i2c-lcdlib-ceg003400.c: 54:     upperdata = (data & 0xf0) | 0b00001000;
 16218  107B  0832               	movf	i2c_lcd_send_command@data,w
 16219  107C  39F0               	andlw	240
 16220  107D  3808               	iorlw	8
 16221  107E  00B0               	movwf	??_i2c_lcd_send_command
 16222  107F  0830               	movf	??_i2c_lcd_send_command,w
 16223  1080  00B5               	movwf	i2c_lcd_send_command@upperdata
 16224                           
 16225                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 55:     upperdata_en = upperdata | 0b00000100;
 16226  1081  0835               	movf	i2c_lcd_send_command@upperdata,w
 16227  1082  3804               	iorlw	4
 16228  1083  00B0               	movwf	??_i2c_lcd_send_command
 16229  1084  0830               	movf	??_i2c_lcd_send_command,w
 16230  1085  00B3               	movwf	i2c_lcd_send_command@upperdata_en
 16231                           
 16232                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 56:     lowerdata = ((data << 4) & 0xf0) | 0b0
      +                          0001000 ;
 16233  1086  0832               	movf	i2c_lcd_send_command@data,w
 16234  1087  00B0               	movwf	??_i2c_lcd_send_command
 16235  1088  3003               	movlw	3
 16236  1089                     u5635:
 16237  1089  35B0               	lslf	??_i2c_lcd_send_command,f
 16238  108A  3EFF               	addlw	-1
 16239  108B  1D03               	skipz
 16240  108C  2889               	goto	u5635
 16241  108D  3530               	lslf	??_i2c_lcd_send_command,w
 16242  108E  39F0               	andlw	240
 16243  108F  3808               	iorlw	8
 16244  1090  00B1               	movwf	??_i2c_lcd_send_command+1
 16245  1091  0831               	movf	??_i2c_lcd_send_command+1,w
 16246  1092  00B6               	movwf	i2c_lcd_send_command@lowerdata
 16247                           
 16248                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 57:     lowerdata_en = lowerdata | 0b00000100;
 16249  1093  0836               	movf	i2c_lcd_send_command@lowerdata,w
 16250  1094  3804               	iorlw	4
 16251  1095  00B0               	movwf	??_i2c_lcd_send_command
 16252  1096  0830               	movf	??_i2c_lcd_send_command,w
 16253  1097  00B4               	movwf	i2c_lcd_send_command@lowerdata_en
 16254                           
 16255                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 58:       I2C1_WriteNBytes(0x25, &upperdata_en
      +                          ,1);
 16256  1098  3033               	movlw	(low (i2c_lcd_send_command@upperdata_en| 0))& (0+255)
 16257  1099  00B0               	movwf	??_i2c_lcd_send_command
 16258  109A  0830               	movf	??_i2c_lcd_send_command,w
 16259  109B  00AC               	movwf	I2C1_WriteNBytes@data
 16260  109C  3001               	movlw	1
 16261  109D  00AD               	movwf	I2C1_WriteNBytes@len
 16262  109E  3000               	movlw	0
 16263  109F  00AE               	movwf	I2C1_WriteNBytes@len+1
 16264  10A0  3025               	movlw	37
 16265  10A1  319B  2365  3190   	fcall	_I2C1_WriteNBytes
 16266                           
 16267                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 59:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 16268  10A4  0000               	nop
 16269                           
 16270                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 61:      I2C1_WriteNBytes(0x25, &upperdata, 1)
      +                          ;
 16271  10A5  3035               	movlw	(low (i2c_lcd_send_command@upperdata| 0))& (0+255)
 16272  10A6  0020               	movlb	0	; select bank0
 16273  10A7  00B0               	movwf	??_i2c_lcd_send_command
 16274  10A8  0830               	movf	??_i2c_lcd_send_command,w
 16275  10A9  00AC               	movwf	I2C1_WriteNBytes@data
 16276  10AA  3001               	movlw	1
 16277  10AB  00AD               	movwf	I2C1_WriteNBytes@len
 16278  10AC  3000               	movlw	0
 16279  10AD  00AE               	movwf	I2C1_WriteNBytes@len+1
 16280  10AE  3025               	movlw	37
 16281  10AF  319B  2365  3190   	fcall	_I2C1_WriteNBytes
 16282                           
 16283                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 62:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 16284  10B2  0000               	nop
 16285                           
 16286                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 66:     I2C1_WriteNBytes(0x25, &lowerdata_en, 
      +                          1);
 16287  10B3  3034               	movlw	(low (i2c_lcd_send_command@lowerdata_en| 0))& (0+255)
 16288  10B4  0020               	movlb	0	; select bank0
 16289  10B5  00B0               	movwf	??_i2c_lcd_send_command
 16290  10B6  0830               	movf	??_i2c_lcd_send_command,w
 16291  10B7  00AC               	movwf	I2C1_WriteNBytes@data
 16292  10B8  3001               	movlw	1
 16293  10B9  00AD               	movwf	I2C1_WriteNBytes@len
 16294  10BA  3000               	movlw	0
 16295  10BB  00AE               	movwf	I2C1_WriteNBytes@len+1
 16296  10BC  3025               	movlw	37
 16297  10BD  319B  2365  3190   	fcall	_I2C1_WriteNBytes
 16298                           
 16299                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 67:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 16300  10C0  0000               	nop
 16301                           
 16302                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 69:     I2C1_WriteNBytes(0x25, &lowerdata, 1);
 16303  10C1  3036               	movlw	(low (i2c_lcd_send_command@lowerdata| 0))& (0+255)
 16304  10C2  0020               	movlb	0	; select bank0
 16305  10C3  00B0               	movwf	??_i2c_lcd_send_command
 16306  10C4  0830               	movf	??_i2c_lcd_send_command,w
 16307  10C5  00AC               	movwf	I2C1_WriteNBytes@data
 16308  10C6  3001               	movlw	1
 16309  10C7  00AD               	movwf	I2C1_WriteNBytes@len
 16310  10C8  3000               	movlw	0
 16311  10C9  00AE               	movwf	I2C1_WriteNBytes@len+1
 16312  10CA  3025               	movlw	37
 16313  10CB  319B  2365         	fcall	_I2C1_WriteNBytes
 16314                           
 16315                           ;lcd_driver_files/i2c-lcdlib-ceg003400.c: 70:      _delay((unsigned long)((1)*(4000000/4
      +                          000000.0)));
 16316  10CD  0000               	nop
 16317  10CE  0008               	return
 16318  10CF                     __end_of_i2c_lcd_send_command:
 16319                           
 16320                           	psect	text47
 16321  1B65                     __ptext47:	
 16322 ;; *************** function _I2C1_WriteNBytes *****************
 16323 ;; Defined at:
 16324 ;;		line 111 in file "mcc_generated_files/examples/i2c1_master_example.c"
 16325 ;; Parameters:    Size  Location     Type
 16326 ;;  address         1    wreg     unsigned char 
 16327 ;;  data            1   12[BANK0 ] PTR unsigned char 
 16328 ;;		 -> i2c_lcd_send_data@lowerdata_en(1), i2c_lcd_send_data@lowerdata(1), i2c_lcd_send_data@upperdata_en(1), i2c_lcd_se
      +nd_data@upperdata(1), 
 16329 ;;		 -> i2c_lcd_send_upper4bit@upperdata_en(1), i2c_lcd_send_upper4bit@upperdata(1), i2c_lcd_send_command@lowerdata_en(1
      +), i2c_lcd_send_command@lowerdata(1), 
 16330 ;;		 -> i2c_lcd_send_command@upperdata_en(1), i2c_lcd_send_command@upperdata(1), 
 16331 ;;  len             2   13[BANK0 ] unsigned int 
 16332 ;; Auto vars:     Size  Location     Type
 16333 ;;  address         1   15[BANK0 ] unsigned char 
 16334 ;; Return value:  Size  Location     Type
 16335 ;;                  1    wreg      void 
 16336 ;; Registers used:
 16337 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16338 ;; Tracked objects:
 16339 ;;		On entry : 1F/0
 16340 ;;		On exit  : 1F/0
 16341 ;;		Unchanged: 0/0
 16342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16343 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16344 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16346 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16347 ;;Total ram usage:        4 bytes
 16348 ;; Hardware stack levels used:    1
 16349 ;; Hardware stack levels required when called:   10
 16350 ;; This function calls:
 16351 ;;		_I2C1_Close
 16352 ;;		_I2C1_MasterWrite
 16353 ;;		_I2C1_Open
 16354 ;;		_I2C1_SetAddressNackCallback
 16355 ;;		_I2C1_SetBuffer
 16356 ;; This function is called by:
 16357 ;;		_i2c_lcd_send_command
 16358 ;;		_i2c_lcd_send_upper4bit
 16359 ;;		_i2c_lcd_send_data
 16360 ;; This function uses a non-reentrant model
 16361 ;;
 16362                           
 16363                           
 16364                           ;psect for function _I2C1_WriteNBytes
 16365  1B65                     _I2C1_WriteNBytes:
 16366                           
 16367                           ;incstack = 0
 16368                           ; Regs used in _I2C1_WriteNBytes: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16369                           ;I2C1_WriteNBytes@address stored from wreg
 16370  1B65  00AF               	movwf	I2C1_WriteNBytes@address
 16371  1B66                     l7367:	
 16372                           ;mcc_generated_files/examples/i2c1_master_example.c: 111: void I2C1_WriteNBytes(i2c1_add
      +                          ress_t address, uint8_t* data, size_t len);mcc_generated_files/examples/i2c1_master_exam
      +                          ple.c: 112: {;mcc_generated_files/examples/i2c1_master_example.c: 113:     while(!I2C1_O
      +                          pen(address));
 16373                           
 16374  1B66  082F               	movf	I2C1_WriteNBytes@address,w
 16375  1B67  319D  25E6  319B   	fcall	_I2C1_Open
 16376  1B6A  3A00               	xorlw	0
 16377  1B6B  1903               	skipnz
 16378  1B6C  2B66               	goto	l7367
 16379                           
 16380                           ;mcc_generated_files/examples/i2c1_master_example.c: 114:     I2C1_SetBuffer(data,len);
 16381  1B6D  082C               	movf	I2C1_WriteNBytes@data,w
 16382  1B6E  00A3               	movwf	I2C1_SetBuffer@buffer
 16383  1B6F  3000               	movlw	0
 16384  1B70  00A4               	movwf	I2C1_SetBuffer@buffer+1
 16385  1B71  082E               	movf	I2C1_WriteNBytes@len+1,w
 16386  1B72  00A6               	movwf	I2C1_SetBuffer@bufferSize+1
 16387  1B73  082D               	movf	I2C1_WriteNBytes@len,w
 16388  1B74  00A5               	movwf	I2C1_SetBuffer@bufferSize
 16389  1B75  3199  211B  319B   	fcall	_I2C1_SetBuffer
 16390                           
 16391                           ;mcc_generated_files/examples/i2c1_master_example.c: 115:     I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 16392  1B78  3000               	movlw	0
 16393  1B79  0020               	movlb	0	; select bank0
 16394  1B7A  00A8               	movwf	I2C1_SetAddressNackCallback@cb
 16395  1B7B  00A9               	movwf	I2C1_SetAddressNackCallback@cb+1
 16396  1B7C  01AA               	clrf	I2C1_SetAddressNackCallback@ptr
 16397  1B7D  31A6  26FD  319B   	fcall	_I2C1_SetAddressNackCallback
 16398                           
 16399                           ;mcc_generated_files/examples/i2c1_master_example.c: 116:     I2C1_MasterWrite();
 16400  1B80  31A6  267C  319B   	fcall	_I2C1_MasterWrite
 16401  1B83                     l7375:	
 16402                           ;mcc_generated_files/examples/i2c1_master_example.c: 117:     while(I2C1_BUSY == I2C1_Cl
      +                          ose());
 16403                           
 16404  1B83  319A  2289  319B   	fcall	_I2C1_Close
 16405  1B86  3A01               	xorlw	1
 16406  1B87  1D03               	btfss	3,2
 16407  1B88  0008               	return
 16408  1B89  2B83               	goto	l7375
 16409  1B8A                     __end_of_I2C1_WriteNBytes:
 16410                           
 16411                           	psect	text48
 16412  1276                     __ptext48:	
 16413 ;; *************** function _chk6422warning *****************
 16414 ;; Defined at:
 16415 ;;		line 339 in file "main.c"
 16416 ;; Parameters:    Size  Location     Type
 16417 ;;		None
 16418 ;; Auto vars:     Size  Location     Type
 16419 ;;		None
 16420 ;; Return value:  Size  Location     Type
 16421 ;;                  1    wreg      unsigned char 
 16422 ;; Registers used:
 16423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16424 ;; Tracked objects:
 16425 ;;		On entry : 1F/4A00000
 16426 ;;		On exit  : 1D/0
 16427 ;;		Unchanged: 0/0
 16428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16431 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16432 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16433 ;;Total ram usage:       18 bytes
 16434 ;; Hardware stack levels used:    1
 16435 ;; Hardware stack levels required when called:   11
 16436 ;; This function calls:
 16437 ;;		_i2c_read1ByteRegister
 16438 ;; This function is called by:
 16439 ;;		_main
 16440 ;; This function uses a non-reentrant model
 16441 ;;
 16442                           
 16443                           
 16444                           ;psect for function _chk6422warning
 16445  1276                     _chk6422warning:
 16446                           
 16447                           ;main.c: 341: static uint8_t lasttime, ocdc, otshut, otwarn,clip,ilim,prail;;main.c: 342
      +                          :     ocdc = i2c_read1ByteRegister(0x6a, 0x10);
 16448                           
 16449                           ;incstack = 0
 16450                           ; Regs used in _chk6422warning: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16451  1276  3010               	movlw	16
 16452  1277  00B3               	movwf	??_chk6422warning
 16453  1278  0833               	movf	??_chk6422warning,w
 16454  1279  00AC               	movwf	i2c_read1ByteRegister@reg
 16455  127A  306A               	movlw	106
 16456  127B  319D  259F  3192   	fcall	_i2c_read1ByteRegister
 16457  127E  00B4               	movwf	??_chk6422warning+1
 16458  127F  0834               	movf	??_chk6422warning+1,w
 16459  1280  0022               	movlb	2	; select bank2
 16460  1281  00BA               	movwf	chk6422warning@ocdc^(0+256)
 16461                           
 16462                           ;main.c: 343:     otwarn = i2c_read1ByteRegister(0x6a, 0x13);
 16463  1282  3013               	movlw	19
 16464  1283  0020               	movlb	0	; select bank0
 16465  1284  00B3               	movwf	??_chk6422warning
 16466  1285  0833               	movf	??_chk6422warning,w
 16467  1286  00AC               	movwf	i2c_read1ByteRegister@reg
 16468  1287  306A               	movlw	106
 16469  1288  319D  259F  3192   	fcall	_i2c_read1ByteRegister
 16470  128B  00B4               	movwf	??_chk6422warning+1
 16471  128C  0834               	movf	??_chk6422warning+1,w
 16472  128D  0022               	movlb	2	; select bank2
 16473  128E  00B8               	movwf	chk6422warning@otwarn^(0+256)
 16474                           
 16475                           ;main.c: 344:     clip = i2c_read1ByteRegister(0x6a, 0x24);
 16476  128F  3024               	movlw	36
 16477  1290  0020               	movlb	0	; select bank0
 16478  1291  00B3               	movwf	??_chk6422warning
 16479  1292  0833               	movf	??_chk6422warning,w
 16480  1293  00AC               	movwf	i2c_read1ByteRegister@reg
 16481  1294  306A               	movlw	106
 16482  1295  319D  259F  3192   	fcall	_i2c_read1ByteRegister
 16483  1298  00B4               	movwf	??_chk6422warning+1
 16484  1299  0834               	movf	??_chk6422warning+1,w
 16485  129A  0022               	movlb	2	; select bank2
 16486  129B  00B7               	movwf	chk6422warning@clip^(0+256)
 16487                           
 16488                           ;main.c: 345:     ilim = i2c_read1ByteRegister(0x6a, 0x25);
 16489  129C  3025               	movlw	37
 16490  129D  0020               	movlb	0	; select bank0
 16491  129E  00B3               	movwf	??_chk6422warning
 16492  129F  0833               	movf	??_chk6422warning,w
 16493  12A0  00AC               	movwf	i2c_read1ByteRegister@reg
 16494  12A1  306A               	movlw	106
 16495  12A2  319D  259F  3192   	fcall	_i2c_read1ByteRegister
 16496  12A5  00B4               	movwf	??_chk6422warning+1
 16497  12A6  0834               	movf	??_chk6422warning+1,w
 16498  12A7  0022               	movlb	2	; select bank2
 16499  12A8  00B6               	movwf	chk6422warning@ilim^(0+256)
 16500                           
 16501                           ;main.c: 346:     otshut = i2c_read1ByteRegister(0x6a, 0x12);
 16502  12A9  3012               	movlw	18
 16503  12AA  0020               	movlb	0	; select bank0
 16504  12AB  00B3               	movwf	??_chk6422warning
 16505  12AC  0833               	movf	??_chk6422warning,w
 16506  12AD  00AC               	movwf	i2c_read1ByteRegister@reg
 16507  12AE  306A               	movlw	106
 16508  12AF  319D  259F  3192   	fcall	_i2c_read1ByteRegister
 16509  12B2  00B4               	movwf	??_chk6422warning+1
 16510  12B3  0834               	movf	??_chk6422warning+1,w
 16511  12B4  0022               	movlb	2	; select bank2
 16512  12B5  00B9               	movwf	chk6422warning@otshut^(0+256)
 16513                           
 16514                           ;main.c: 347:     prail = i2c_read1ByteRegister(0x6a, 0x11);
 16515  12B6  3011               	movlw	17
 16516  12B7  0020               	movlb	0	; select bank0
 16517  12B8  00B3               	movwf	??_chk6422warning
 16518  12B9  0833               	movf	??_chk6422warning,w
 16519  12BA  00AC               	movwf	i2c_read1ByteRegister@reg
 16520  12BB  306A               	movlw	106
 16521  12BC  319D  259F  3192   	fcall	_i2c_read1ByteRegister
 16522  12BF  00B4               	movwf	??_chk6422warning+1
 16523  12C0  0834               	movf	??_chk6422warning+1,w
 16524  12C1  0022               	movlb	2	; select bank2
 16525  12C2  00B5               	movwf	chk6422warning@prail^(0+256)
 16526                           
 16527                           ;main.c: 348:     if(lasttime == (ocdc + otshut + otwarn + clip +ilim + prail ))
 16528  12C3  0835               	movf	chk6422warning@prail^(0+256),w
 16529  12C4  0020               	movlb	0	; select bank0
 16530  12C5  00B3               	movwf	??_chk6422warning
 16531  12C6  01B4               	clrf	??_chk6422warning+1
 16532  12C7  0022               	movlb	2	; select bank2
 16533  12C8  0836               	movf	chk6422warning@ilim^(0+256),w
 16534  12C9  0020               	movlb	0	; select bank0
 16535  12CA  00B5               	movwf	??_chk6422warning+2
 16536  12CB  01B6               	clrf	??_chk6422warning+3
 16537  12CC  0022               	movlb	2	; select bank2
 16538  12CD  0837               	movf	chk6422warning@clip^(0+256),w
 16539  12CE  0020               	movlb	0	; select bank0
 16540  12CF  00B7               	movwf	??_chk6422warning+4
 16541  12D0  01B8               	clrf	??_chk6422warning+5
 16542  12D1  0022               	movlb	2	; select bank2
 16543  12D2  0838               	movf	chk6422warning@otwarn^(0+256),w
 16544  12D3  0020               	movlb	0	; select bank0
 16545  12D4  00B9               	movwf	??_chk6422warning+6
 16546  12D5  01BA               	clrf	??_chk6422warning+7
 16547  12D6  0022               	movlb	2	; select bank2
 16548  12D7  083A               	movf	chk6422warning@ocdc^(0+256),w
 16549  12D8  0739               	addwf	chk6422warning@otshut^(0+256),w
 16550  12D9  0020               	movlb	0	; select bank0
 16551  12DA  00BB               	movwf	??_chk6422warning+8
 16552  12DB  01BC               	clrf	??_chk6422warning+9
 16553  12DC  0DBC               	rlf	??_chk6422warning+9,f
 16554  12DD  0839               	movf	??_chk6422warning+6,w
 16555  12DE  073B               	addwf	??_chk6422warning+8,w
 16556  12DF  00BD               	movwf	??_chk6422warning+10
 16557  12E0  083A               	movf	??_chk6422warning+7,w
 16558  12E1  3D3C               	addwfc	??_chk6422warning+9,w
 16559  12E2  00BE               	movwf	??_chk6422warning+11
 16560  12E3  0837               	movf	??_chk6422warning+4,w
 16561  12E4  073D               	addwf	??_chk6422warning+10,w
 16562  12E5  00BF               	movwf	??_chk6422warning+12
 16563  12E6  0838               	movf	??_chk6422warning+5,w
 16564  12E7  3D3E               	addwfc	??_chk6422warning+11,w
 16565  12E8  00C0               	movwf	??_chk6422warning+13
 16566  12E9  0835               	movf	??_chk6422warning+2,w
 16567  12EA  073F               	addwf	??_chk6422warning+12,w
 16568  12EB  00C1               	movwf	??_chk6422warning+14
 16569  12EC  0836               	movf	??_chk6422warning+3,w
 16570  12ED  3D40               	addwfc	??_chk6422warning+13,w
 16571  12EE  00C2               	movwf	??_chk6422warning+15
 16572  12EF  0833               	movf	??_chk6422warning,w
 16573  12F0  0741               	addwf	??_chk6422warning+14,w
 16574  12F1  00C3               	movwf	??_chk6422warning+16
 16575  12F2  0834               	movf	??_chk6422warning+1,w
 16576  12F3  3D42               	addwfc	??_chk6422warning+15,w
 16577  12F4  00C4               	movwf	??_chk6422warning+17
 16578  12F5  0022               	movlb	2	; select bank2
 16579  12F6  083B               	movf	chk6422warning@lasttime^(0+256),w
 16580  12F7  0020               	movlb	0	; select bank0
 16581  12F8  0643               	xorwf	??_chk6422warning+16,w
 16582  12F9  0444               	iorwf	??_chk6422warning+17,w
 16583  12FA  1D03               	skipz
 16584  12FB  2AFE               	goto	l7993
 16585                           
 16586                           ;main.c: 349:              return(0);
 16587  12FC  3000               	movlw	0
 16588  12FD  0008               	return
 16589  12FE                     l7993:
 16590                           
 16591                           ;main.c: 351:      {;main.c: 352:       lasttime = ocdc + otshut + otwarn + clip +ilim +
      +                           prail ;
 16592  12FE  0022               	movlb	2	; select bank2
 16593  12FF  083A               	movf	chk6422warning@ocdc^(0+256),w
 16594  1300  0739               	addwf	chk6422warning@otshut^(0+256),w
 16595  1301  0738               	addwf	chk6422warning@otwarn^(0+256),w
 16596  1302  0737               	addwf	chk6422warning@clip^(0+256),w
 16597  1303  0736               	addwf	chk6422warning@ilim^(0+256),w
 16598  1304  0735               	addwf	chk6422warning@prail^(0+256),w
 16599  1305  0020               	movlb	0	; select bank0
 16600  1306  00B3               	movwf	??_chk6422warning
 16601  1307  0833               	movf	??_chk6422warning,w
 16602  1308  0022               	movlb	2	; select bank2
 16603  1309  00BB               	movwf	chk6422warning@lasttime^(0+256)
 16604                           
 16605                           ;main.c: 353:       return(1);
 16606  130A  3001               	movlw	1
 16607  130B  0008               	return
 16608  130C                     __end_of_chk6422warning:
 16609                           
 16610                           	psect	text49
 16611  1D9F                     __ptext49:	
 16612 ;; *************** function _i2c_read1ByteRegister *****************
 16613 ;; Defined at:
 16614 ;;		line 65 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 16615 ;; Parameters:    Size  Location     Type
 16616 ;;  address         1    wreg     unsigned char 
 16617 ;;  reg             1   12[BANK0 ] unsigned char 
 16618 ;; Auto vars:     Size  Location     Type
 16619 ;;  address         1   14[BANK0 ] unsigned char 
 16620 ;;  x               2   16[BANK0 ] int 
 16621 ;;  d2              1   18[BANK0 ] unsigned char 
 16622 ;;  e               1   15[BANK0 ] enum E355
 16623 ;; Return value:  Size  Location     Type
 16624 ;;                  1    wreg      unsigned char 
 16625 ;; Registers used:
 16626 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16627 ;; Tracked objects:
 16628 ;;		On entry : 1F/4A00000
 16629 ;;		On exit  : 1F/0
 16630 ;;		Unchanged: 0/0
 16631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16632 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16633 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16634 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16635 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16636 ;;Total ram usage:        7 bytes
 16637 ;; Hardware stack levels used:    1
 16638 ;; Hardware stack levels required when called:   10
 16639 ;; This function calls:
 16640 ;;		_I2C1_Close
 16641 ;;		_I2C1_MasterWrite
 16642 ;;		_I2C1_Open
 16643 ;;		_I2C1_SetAddressNackCallback
 16644 ;;		_I2C1_SetBuffer
 16645 ;;		_I2C1_SetDataCompleteCallback
 16646 ;; This function is called by:
 16647 ;;		_chk6422warning
 16648 ;;		_main
 16649 ;;		_lcd_disp_param
 16650 ;; This function uses a non-reentrant model
 16651 ;;
 16652                           
 16653                           
 16654                           ;psect for function _i2c_read1ByteRegister
 16655  1D9F                     _i2c_read1ByteRegister:
 16656                           
 16657                           ;incstack = 0
 16658                           ; Regs used in _i2c_read1ByteRegister: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 16659                           ;i2c_read1ByteRegister@address stored from wreg
 16660  1D9F  00AE               	movwf	i2c_read1ByteRegister@address
 16661                           
 16662                           ;mcc_generated_files/drivers/i2c_simple_master.c: 65: uint8_t i2c_read1ByteRegister(i2c1
      +                          _address_t address, uint8_t reg);mcc_generated_files/drivers/i2c_simple_master.c: 66: {;
      +                          mcc_generated_files/drivers/i2c_simple_master.c: 67:     uint8_t d2=42;
 16663  1DA0  302A               	movlw	42
 16664  1DA1  00AD               	movwf	??_i2c_read1ByteRegister
 16665  1DA2  082D               	movf	??_i2c_read1ByteRegister,w
 16666  1DA3  00B2               	movwf	i2c_read1ByteRegister@d2
 16667                           
 16668                           ;mcc_generated_files/drivers/i2c_simple_master.c: 68:     i2c1_error_t e;;mcc_generated_
      +                          files/drivers/i2c_simple_master.c: 69:     int x;;mcc_generated_files/drivers/i2c_simple
      +                          _master.c: 71:     for(x = 2; x != 0; x--)
 16669  1DA4  3002               	movlw	2
 16670  1DA5  00B0               	movwf	i2c_read1ByteRegister@x
 16671  1DA6  3000               	movlw	0
 16672  1DA7  00B1               	movwf	i2c_read1ByteRegister@x+1
 16673  1DA8                     l7793:
 16674  1DA8  082E               	movf	i2c_read1ByteRegister@address,w
 16675  1DA9  319D  25E6  319D   	fcall	_I2C1_Open
 16676  1DAC  3A00               	xorlw	0
 16677  1DAD  1903               	skipnz
 16678  1DAE  2DA8               	goto	l7793
 16679                           
 16680                           ;mcc_generated_files/drivers/i2c_simple_master.c: 74:         I2C1_SetDataCompleteCallba
      +                          ck(rd1RegCompleteHandler,&d2);
 16681  1DAF  30C1               	movlw	low _rd1RegCompleteHandler
 16682  1DB0  00A8               	movwf	I2C1_SetDataCompleteCallback@cb
 16683  1DB1  3027               	movlw	high _rd1RegCompleteHandler
 16684  1DB2  00A9               	movwf	I2C1_SetDataCompleteCallback@cb+1
 16685  1DB3  3032               	movlw	(low (i2c_read1ByteRegister@d2| 0))& (0+255)
 16686  1DB4  00AD               	movwf	??_i2c_read1ByteRegister
 16687  1DB5  082D               	movf	??_i2c_read1ByteRegister,w
 16688  1DB6  00AA               	movwf	I2C1_SetDataCompleteCallback@ptr
 16689  1DB7  31A7  2709  319D   	fcall	_I2C1_SetDataCompleteCallback
 16690                           
 16691                           ;mcc_generated_files/drivers/i2c_simple_master.c: 75:         I2C1_SetBuffer(&reg,1);
 16692  1DBA  302C               	movlw	low i2c_read1ByteRegister@reg
 16693  1DBB  00A3               	movwf	I2C1_SetBuffer@buffer
 16694  1DBC  3000               	movlw	high i2c_read1ByteRegister@reg
 16695  1DBD  00A4               	movwf	I2C1_SetBuffer@buffer+1
 16696  1DBE  3001               	movlw	1
 16697  1DBF  00A5               	movwf	I2C1_SetBuffer@bufferSize
 16698  1DC0  3000               	movlw	0
 16699  1DC1  00A6               	movwf	I2C1_SetBuffer@bufferSize+1
 16700  1DC2  3199  211B  319D   	fcall	_I2C1_SetBuffer
 16701                           
 16702                           ;mcc_generated_files/drivers/i2c_simple_master.c: 76:         I2C1_SetAddressNackCallbac
      +                          k(((void*)0),((void*)0));
 16703  1DC5  3000               	movlw	0
 16704  1DC6  0020               	movlb	0	; select bank0
 16705  1DC7  00A8               	movwf	I2C1_SetAddressNackCallback@cb
 16706  1DC8  00A9               	movwf	I2C1_SetAddressNackCallback@cb+1
 16707  1DC9  01AA               	clrf	I2C1_SetAddressNackCallback@ptr
 16708  1DCA  31A6  26FD  319D   	fcall	_I2C1_SetAddressNackCallback
 16709                           
 16710                           ;mcc_generated_files/drivers/i2c_simple_master.c: 77:         I2C1_MasterWrite();
 16711  1DCD  31A6  267C  319D   	fcall	_I2C1_MasterWrite
 16712  1DD0                     l7801:	
 16713                           ;mcc_generated_files/drivers/i2c_simple_master.c: 78:         while(I2C1_BUSY == (e = I2
      +                          C1_Close()));
 16714                           
 16715  1DD0  319A  2289  319D   	fcall	_I2C1_Close
 16716  1DD3  00AD               	movwf	??_i2c_read1ByteRegister
 16717  1DD4  082D               	movf	??_i2c_read1ByteRegister,w
 16718  1DD5  00AF               	movwf	i2c_read1ByteRegister@e
 16719  1DD6  032F               	decf	i2c_read1ByteRegister@e,w
 16720  1DD7  1903               	btfsc	3,2
 16721  1DD8  2DD0               	goto	l7801
 16722                           
 16723                           ;mcc_generated_files/drivers/i2c_simple_master.c: 79:         if(e==I2C1_NOERR) break;
 16724  1DD9  082F               	movf	i2c_read1ByteRegister@e,w
 16725  1DDA  1903               	btfsc	3,2
 16726  1DDB  2DE4               	goto	l7811
 16727                           
 16728                           ;mcc_generated_files/drivers/i2c_simple_master.c: 80:     }
 16729  1DDC  30FF               	movlw	255
 16730  1DDD  07B0               	addwf	i2c_read1ByteRegister@x,f
 16731  1DDE  30FF               	movlw	255
 16732  1DDF  3DB1               	addwfc	i2c_read1ByteRegister@x+1,f
 16733  1DE0  0830               	movf	i2c_read1ByteRegister@x,w
 16734  1DE1  0431               	iorwf	i2c_read1ByteRegister@x+1,w
 16735  1DE2  1D03               	btfss	3,2
 16736  1DE3  2DA8               	goto	l7793
 16737  1DE4                     l7811:
 16738                           
 16739                           ;mcc_generated_files/drivers/i2c_simple_master.c: 83:     return d2;
 16740  1DE4  0832               	movf	i2c_read1ByteRegister@d2,w
 16741  1DE5  0008               	return
 16742  1DE6                     __end_of_i2c_read1ByteRegister:
 16743                           
 16744                           	psect	text50
 16745  2709                     __ptext50:	
 16746 ;; *************** function _I2C1_SetDataCompleteCallback *****************
 16747 ;; Defined at:
 16748 ;;		line 275 in file "mcc_generated_files/i2c1_master.c"
 16749 ;; Parameters:    Size  Location     Type
 16750 ;;  cb              2    8[BANK0 ] PTR FTN(PTR void ,)enum 
 16751 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 16752 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 16753 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 16754 ;;  ptr             1   10[BANK0 ] PTR void 
 16755 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 16756 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 16757 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16758 ;; Auto vars:     Size  Location     Type
 16759 ;;		None
 16760 ;; Return value:  Size  Location     Type
 16761 ;;                  1    wreg      void 
 16762 ;; Registers used:
 16763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16764 ;; Tracked objects:
 16765 ;;		On entry : 1F/4A00000
 16766 ;;		On exit  : 1F/0
 16767 ;;		Unchanged: 0/0
 16768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16769 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16771 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16772 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16773 ;;Total ram usage:        4 bytes
 16774 ;; Hardware stack levels used:    1
 16775 ;; Hardware stack levels required when called:    8
 16776 ;; This function calls:
 16777 ;;		_I2C1_SetCallback
 16778 ;; This function is called by:
 16779 ;;		_i2c_read1ByteRegister
 16780 ;; This function uses a non-reentrant model
 16781 ;;
 16782                           
 16783                           
 16784                           ;psect for function _I2C1_SetDataCompleteCallback
 16785  2709                     _I2C1_SetDataCompleteCallback:
 16786                           
 16787                           ;mcc_generated_files/i2c1_master.c: 275: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 276: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 277:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 16788                           
 16789                           ;incstack = 0
 16790                           ; Regs used in _I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
 16791  2709  0829               	movf	I2C1_SetDataCompleteCallback@cb+1,w
 16792  270A  00A4               	movwf	I2C1_SetCallback@cb+1
 16793  270B  0828               	movf	I2C1_SetDataCompleteCallback@cb,w
 16794  270C  00A3               	movwf	I2C1_SetCallback@cb
 16795  270D  082A               	movf	I2C1_SetDataCompleteCallback@ptr,w
 16796  270E  00AB               	movwf	??_I2C1_SetDataCompleteCallback
 16797  270F  082B               	movf	??_I2C1_SetDataCompleteCallback,w
 16798  2710  00A5               	movwf	I2C1_SetCallback@ptr
 16799  2711  3000               	movlw	0
 16800  2712  319B  23FC         	fcall	_I2C1_SetCallback
 16801  2714  0008               	return
 16802  2715                     __end_of_I2C1_SetDataCompleteCallback:
 16803                           
 16804                           	psect	text51
 16805  191B                     __ptext51:	
 16806 ;; *************** function _I2C1_SetBuffer *****************
 16807 ;; Defined at:
 16808 ;;		line 265 in file "mcc_generated_files/i2c1_master.c"
 16809 ;; Parameters:    Size  Location     Type
 16810 ;;  buffer          2    3[BANK0 ] PTR void 
 16811 ;;		 -> tasbuff(2), write_tas6422@buffer(2), TAS_NORMAL(2), TAS_CLEAR_FALT(2), 
 16812 ;;		 -> TAS_CHK_RAILS(2), TAS_PLAY(2), TAS_MUTE(2), TAS_FS96K(2), 
 16813 ;;		 -> TAS_FS48K(2), TAS_FS44K(2), TAS_AC(2), TAS_DC(2), 
 16814 ;;		 -> TAS_DCDIAG_CLEAR(2), TAS_RUN(2), TAS_RESET(2), INIT9211_31(2), 
 16815 ;;		 -> INIT9211_27(2), INIT9211_26(2), INIT9211_2B(2), INIT9211_2E(2), 
 16816 ;;		 -> INIT9211_20(2), ADC_96K(2), ADC_DC(2), DIT_I2S(2), 
 16817 ;;		 -> DIT_LVDS(2), DIT_ADC(2), DIT_DIR(2), ADC_ATTR_3dB(2), 
 16818 ;;		 -> ADC_ATTL_3dB(2), CALC_MOUT(2), DIR_COAX(2), DIR_OPT(2), 
 16819 ;;		 -> AUXSRC_LVDS(2), AUXSRC_ADC(2), AUXSRC_DIR(2), AUXSRC_AUTO(2), 
 16820 ;;		 -> SRC_I2S(2), SRC_LVDS(2), SRC_ADC(2), SRC_DIR(2), 
 16821 ;;		 -> I2S_IN(2), I2S_OUT(2), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), 
 16822 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 16823 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 16824 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 16825 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 16826 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), i2c_lcd_send_data@lowerdata_en(1), 
 16827 ;;		 -> i2c_lcd_send_data@lowerdata(1), i2c_lcd_send_data@upperdata_en(1), i2c_lcd_send_data@upperdata(1), i2c_lcd_send_
      +upper4bit@upperdata_en(1), 
 16828 ;;		 -> i2c_lcd_send_upper4bit@upperdata(1), i2c_lcd_send_command@lowerdata_en(1), i2c_lcd_send_command@lowerdata(1), i2
      +c_lcd_send_command@upperdata_en(1), 
 16829 ;;		 -> i2c_lcd_send_command@upperdata(1), 
 16830 ;;  bufferSize      2    5[BANK0 ] unsigned int 
 16831 ;; Auto vars:     Size  Location     Type
 16832 ;;		None
 16833 ;; Return value:  Size  Location     Type
 16834 ;;                  1    wreg      void 
 16835 ;; Registers used:
 16836 ;;		wreg
 16837 ;; Tracked objects:
 16838 ;;		On entry : 1F/4A00000
 16839 ;;		On exit  : 1F/4
 16840 ;;		Unchanged: 0/0
 16841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16842 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16845 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16846 ;;Total ram usage:        4 bytes
 16847 ;; Hardware stack levels used:    1
 16848 ;; Hardware stack levels required when called:    7
 16849 ;; This function calls:
 16850 ;;		Nothing
 16851 ;; This function is called by:
 16852 ;;		_i2c_writeNBytes
 16853 ;;		_i2c_read1ByteRegister
 16854 ;;		_I2C1_WriteNBytes
 16855 ;; This function uses a non-reentrant model
 16856 ;;
 16857                           
 16858                           
 16859                           ;psect for function _I2C1_SetBuffer
 16860  191B                     _I2C1_SetBuffer:
 16861                           
 16862                           ;mcc_generated_files/i2c1_master.c: 265: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 266: {;mcc_generated_files/i2c1_master.c: 267: 
      +                              if(I2C1_Status.bufferFree)
 16863                           
 16864                           ;incstack = 0
 16865                           ; Regs used in _I2C1_SetBuffer: [wreg]
 16866  191B  0024               	movlb	4	; select bank4
 16867  191C  1DEB               	btfss	(_I2C1_Status^(0+512)+29),3
 16868  191D  0008               	return
 16869                           
 16870                           ;mcc_generated_files/i2c1_master.c: 268:     {;mcc_generated_files/i2c1_master.c: 269:  
      +                                 I2C1_Status.data_ptr = buffer;
 16871  191E  0020               	movlb	0	; select bank0
 16872  191F  0824               	movf	I2C1_SetBuffer@buffer+1,w
 16873  1920  0024               	movlb	4	; select bank4
 16874  1921  00E6               	movwf	((low ((_I2C1_Status| (0+512)+23))+1))^0
 16875  1922  0020               	movlb	0	; select bank0
 16876  1923  0823               	movf	I2C1_SetBuffer@buffer,w
 16877  1924  0024               	movlb	4	; select bank4
 16878  1925  00E5               	movwf	(low ((_I2C1_Status| (0+512)+23)))^0
 16879                           
 16880                           ;mcc_generated_files/i2c1_master.c: 270:         I2C1_Status.data_length = bufferSize;
 16881  1926  0020               	movlb	0	; select bank0
 16882  1927  0826               	movf	I2C1_SetBuffer@bufferSize+1,w
 16883  1928  0024               	movlb	4	; select bank4
 16884  1929  00E8               	movwf	((_I2C1_Status+1)^(0+512)+25)
 16885  192A  0020               	movlb	0	; select bank0
 16886  192B  0825               	movf	I2C1_SetBuffer@bufferSize,w
 16887  192C  0024               	movlb	4	; select bank4
 16888  192D  00E7               	movwf	(_I2C1_Status^(0+512)+25)
 16889                           
 16890                           ;mcc_generated_files/i2c1_master.c: 271:         I2C1_Status.bufferFree = 0;
 16891  192E  11EB               	bcf	(_I2C1_Status^(0+512)+29),3
 16892  192F  0008               	return
 16893  1930                     __end_of_I2C1_SetBuffer:
 16894                           
 16895                           	psect	text52
 16896  26FD                     __ptext52:	
 16897 ;; *************** function _I2C1_SetAddressNackCallback *****************
 16898 ;; Defined at:
 16899 ;;		line 285 in file "mcc_generated_files/i2c1_master.c"
 16900 ;; Parameters:    Size  Location     Type
 16901 ;;  cb              2    8[BANK0 ] PTR FTN(PTR void ,)enum 
 16902 ;;		 -> Absolute function(1), 
 16903 ;;  ptr             1   10[BANK0 ] PTR void 
 16904 ;;		 -> NULL(0), 
 16905 ;; Auto vars:     Size  Location     Type
 16906 ;;		None
 16907 ;; Return value:  Size  Location     Type
 16908 ;;                  1    wreg      void 
 16909 ;; Registers used:
 16910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16911 ;; Tracked objects:
 16912 ;;		On entry : 1F/4A00000
 16913 ;;		On exit  : 1F/0
 16914 ;;		Unchanged: 0/0
 16915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16916 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16918 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16919 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16920 ;;Total ram usage:        4 bytes
 16921 ;; Hardware stack levels used:    1
 16922 ;; Hardware stack levels required when called:    8
 16923 ;; This function calls:
 16924 ;;		_I2C1_SetCallback
 16925 ;; This function is called by:
 16926 ;;		_i2c_writeNBytes
 16927 ;;		_i2c_read1ByteRegister
 16928 ;;		_I2C1_WriteNBytes
 16929 ;; This function uses a non-reentrant model
 16930 ;;
 16931                           
 16932                           
 16933                           ;psect for function _I2C1_SetAddressNackCallback
 16934  26FD                     _I2C1_SetAddressNackCallback:
 16935                           
 16936                           ;mcc_generated_files/i2c1_master.c: 285: void I2C1_SetAddressNackCallback(i2c1_callback_
      +                          t cb, void *ptr);mcc_generated_files/i2c1_master.c: 286: {;mcc_generated_files/i2c1_mast
      +                          er.c: 287:     I2C1_SetCallback(I2C1_ADDR_NACK, cb, ptr);
 16937                           
 16938                           ;incstack = 0
 16939                           ; Regs used in _I2C1_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
 16940  26FD  0829               	movf	I2C1_SetAddressNackCallback@cb+1,w
 16941  26FE  00A4               	movwf	I2C1_SetCallback@cb+1
 16942  26FF  0828               	movf	I2C1_SetAddressNackCallback@cb,w
 16943  2700  00A3               	movwf	I2C1_SetCallback@cb
 16944  2701  082A               	movf	I2C1_SetAddressNackCallback@ptr,w
 16945  2702  00AB               	movwf	??_I2C1_SetAddressNackCallback
 16946  2703  082B               	movf	??_I2C1_SetAddressNackCallback,w
 16947  2704  00A5               	movwf	I2C1_SetCallback@ptr
 16948  2705  3002               	movlw	2
 16949  2706  319B  23FC         	fcall	_I2C1_SetCallback
 16950  2708  0008               	return
 16951  2709                     __end_of_I2C1_SetAddressNackCallback:
 16952                           
 16953                           	psect	text53
 16954  1BFC                     __ptext53:	
 16955 ;; *************** function _I2C1_SetCallback *****************
 16956 ;; Defined at:
 16957 ;;		line 305 in file "mcc_generated_files/i2c1_master.c"
 16958 ;; Parameters:    Size  Location     Type
 16959 ;;  idx             1    wreg     enum E7176
 16960 ;;  cb              2    3[BANK0 ] PTR FTN(PTR void ,)enum 
 16961 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 16962 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 16963 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 16964 ;;  ptr             1    5[BANK0 ] PTR void 
 16965 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 16966 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 16967 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 16968 ;; Auto vars:     Size  Location     Type
 16969 ;;  idx             1    7[BANK0 ] enum E7176
 16970 ;; Return value:  Size  Location     Type
 16971 ;;                  1    wreg      void 
 16972 ;; Registers used:
 16973 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16974 ;; Tracked objects:
 16975 ;;		On entry : 1F/4A00000
 16976 ;;		On exit  : 1F/0
 16977 ;;		Unchanged: 0/0
 16978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16979 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16982 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16983 ;;Total ram usage:        5 bytes
 16984 ;; Hardware stack levels used:    1
 16985 ;; Hardware stack levels required when called:    7
 16986 ;; This function calls:
 16987 ;;		Nothing
 16988 ;; This function is called by:
 16989 ;;		_I2C1_SetDataCompleteCallback
 16990 ;;		_I2C1_SetAddressNackCallback
 16991 ;; This function uses a non-reentrant model
 16992 ;;
 16993                           
 16994                           
 16995                           ;psect for function _I2C1_SetCallback
 16996  1BFC                     _I2C1_SetCallback:
 16997                           
 16998                           ;incstack = 0
 16999                           ; Regs used in _I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 17000                           ;I2C1_SetCallback@idx stored from wreg
 17001  1BFC  00A7               	movwf	I2C1_SetCallback@idx
 17002                           
 17003                           ;mcc_generated_files/i2c1_master.c: 305: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 306: {;mcc_gen
      +                          erated_files/i2c1_master.c: 307:     if(cb)
 17004  1BFD  0823               	movf	I2C1_SetCallback@cb,w
 17005  1BFE  0424               	iorwf	I2C1_SetCallback@cb+1,w
 17006  1BFF  1903               	btfsc	3,2
 17007  1C00  2C14               	goto	l6933
 17008                           
 17009                           ;mcc_generated_files/i2c1_master.c: 308:     {;mcc_generated_files/i2c1_master.c: 309:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 17010  1C01  3527               	lslf	I2C1_SetCallback@idx,w
 17011  1C02  3E4E               	addlw	(low (_I2C1_Status| (0+512)))& (0+255)
 17012  1C03  0086               	movwf	6
 17013  1C04  3002               	movlw	2	; select bank4/5
 17014  1C05  0087               	movwf	7
 17015  1C06  0823               	movf	I2C1_SetCallback@cb,w
 17016  1C07  3FC0               	movwi [0]fsr1
 17017  1C08  0824               	movf	I2C1_SetCallback@cb+1,w
 17018  1C09  3FC1               	movwi [1]fsr1
 17019                           
 17020                           ;mcc_generated_files/i2c1_master.c: 310:         I2C1_Status.callbackPayload[idx] = ptr;
 17021  1C0A  0825               	movf	I2C1_SetCallback@ptr,w
 17022  1C0B  00A6               	movwf	??_I2C1_SetCallback
 17023  1C0C  0827               	movf	I2C1_SetCallback@idx,w
 17024  1C0D  3E5A               	addlw	(low ((_I2C1_Status| (0+512)+12)))& (0+255)
 17025  1C0E  0086               	movwf	6
 17026  1C0F  3002               	movlw	2	; select bank4/5
 17027  1C10  0087               	movwf	7
 17028  1C11  0826               	movf	??_I2C1_SetCallback,w
 17029  1C12  0081               	movwf	1
 17030                           
 17031                           ;mcc_generated_files/i2c1_master.c: 311:     }
 17032  1C13  0008               	return
 17033  1C14                     l6933:
 17034                           
 17035                           ;mcc_generated_files/i2c1_master.c: 313:     {;mcc_generated_files/i2c1_master.c: 314:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 17036  1C14  3527               	lslf	I2C1_SetCallback@idx,w
 17037  1C15  3E4E               	addlw	(low (_I2C1_Status| (0+512)))& (0+255)
 17038  1C16  0086               	movwf	6
 17039  1C17  3002               	movlw	2	; select bank4/5
 17040  1C18  0087               	movwf	7
 17041  1C19  302C               	movlw	low _I2C1_CallbackReturnStop
 17042  1C1A  3FC0               	movwi [0]fsr1
 17043  1C1B  3026               	movlw	high _I2C1_CallbackReturnStop
 17044  1C1C  3FC1               	movwi [1]fsr1
 17045                           
 17046                           ;mcc_generated_files/i2c1_master.c: 315:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 17047  1C1D  0827               	movf	I2C1_SetCallback@idx,w
 17048  1C1E  3E5A               	addlw	(low ((_I2C1_Status| (0+512)+12)))& (0+255)
 17049  1C1F  0086               	movwf	6
 17050  1C20  3002               	movlw	2	; select bank4/5
 17051  1C21  0087               	movwf	7
 17052  1C22  0181               	clrf	1
 17053  1C23  0008               	return
 17054  1C24                     __end_of_I2C1_SetCallback:
 17055                           
 17056                           	psect	text54
 17057  1DE6                     __ptext54:	
 17058 ;; *************** function _I2C1_Open *****************
 17059 ;; Defined at:
 17060 ;;		line 177 in file "mcc_generated_files/i2c1_master.c"
 17061 ;; Parameters:    Size  Location     Type
 17062 ;;  address         1    wreg     unsigned char 
 17063 ;; Auto vars:     Size  Location     Type
 17064 ;;  address         1    6[BANK0 ] unsigned char 
 17065 ;;  returnValue     1    7[BANK0 ] enum E355
 17066 ;; Return value:  Size  Location     Type
 17067 ;;                  1    wreg      enum E355
 17068 ;; Registers used:
 17069 ;;		wreg, status,2, status,0, pclath, cstack
 17070 ;; Tracked objects:
 17071 ;;		On entry : 1F/4A00000
 17072 ;;		On exit  : 1F/0
 17073 ;;		Unchanged: 0/0
 17074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17076 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17077 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17078 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17079 ;;Total ram usage:        3 bytes
 17080 ;; Hardware stack levels used:    1
 17081 ;; Hardware stack levels required when called:    8
 17082 ;; This function calls:
 17083 ;;		_I2C1_MasterClearIrq
 17084 ;;		_I2C1_MasterEnableIrq
 17085 ;;		_I2C1_MasterOpen
 17086 ;;		_I2C1_SetInterruptHandler
 17087 ;; This function is called by:
 17088 ;;		_i2c_writeNBytes
 17089 ;;		_i2c_read1ByteRegister
 17090 ;;		_I2C1_WriteNBytes
 17091 ;; This function uses a non-reentrant model
 17092 ;;
 17093                           
 17094                           
 17095                           ;psect for function _I2C1_Open
 17096  1DE6                     _I2C1_Open:
 17097                           
 17098                           ;incstack = 0
 17099                           ; Regs used in _I2C1_Open: [wreg+status,2+status,0+pclath+cstack]
 17100                           ;I2C1_Open@address stored from wreg
 17101  1DE6  00A6               	movwf	I2C1_Open@address
 17102                           
 17103                           ;mcc_generated_files/i2c1_master.c: 177: i2c1_error_t I2C1_Open(i2c1_address_t address);
      +                          mcc_generated_files/i2c1_master.c: 178: {;mcc_generated_files/i2c1_master.c: 179:     i2
      +                          c1_error_t returnValue = I2C1_BUSY;
 17104  1DE7  01A7               	clrf	I2C1_Open@returnValue
 17105  1DE8  0AA7               	incf	I2C1_Open@returnValue,f
 17106                           
 17107                           ;mcc_generated_files/i2c1_master.c: 181:     if(!I2C1_Status.inUse)
 17108  1DE9  0024               	movlb	4	; select bank4
 17109  1DEA  196B               	btfsc	(_I2C1_Status^(0+512)+29),2
 17110  1DEB  2E2B               	goto	l7115
 17111                           
 17112                           ;mcc_generated_files/i2c1_master.c: 182:     {;mcc_generated_files/i2c1_master.c: 183:  
      +                                 I2C1_Status.address = address;
 17113  1DEC  0020               	movlb	0	; select bank0
 17114  1DED  0826               	movf	I2C1_Open@address,w
 17115  1DEE  00A5               	movwf	??_I2C1_Open
 17116  1DEF  0825               	movf	??_I2C1_Open,w
 17117  1DF0  0024               	movlb	4	; select bank4
 17118  1DF1  00E4               	movwf	(_I2C1_Status^(0+512)+22)
 17119                           
 17120                           ;mcc_generated_files/i2c1_master.c: 184:         I2C1_Status.busy = 0;
 17121  1DF2  10EB               	bcf	(_I2C1_Status^(0+512)+29),1
 17122                           
 17123                           ;mcc_generated_files/i2c1_master.c: 185:         I2C1_Status.inUse = 1;
 17124  1DF3  156B               	bsf	(_I2C1_Status^(0+512)+29),2
 17125                           
 17126                           ;mcc_generated_files/i2c1_master.c: 186:         I2C1_Status.addressNackCheck = 0;
 17127  1DF4  106B               	bcf	(_I2C1_Status^(0+512)+29),0
 17128                           
 17129                           ;mcc_generated_files/i2c1_master.c: 187:         I2C1_Status.state = I2C1_RESET;
 17130  1DF5  300E               	movlw	14
 17131  1DF6  0020               	movlb	0	; select bank0
 17132  1DF7  00A5               	movwf	??_I2C1_Open
 17133  1DF8  0825               	movf	??_I2C1_Open,w
 17134  1DF9  0024               	movlb	4	; select bank4
 17135  1DFA  00E9               	movwf	(_I2C1_Status^(0+512)+27)
 17136                           
 17137                           ;mcc_generated_files/i2c1_master.c: 188:         I2C1_Status.time_out_value = 500;
 17138  1DFB  30F4               	movlw	244
 17139  1DFC  00E2               	movwf	(_I2C1_Status^(0+512)+20)
 17140  1DFD  3001               	movlw	1
 17141  1DFE  00E3               	movwf	(_I2C1_Status^(0+512)+21)
 17142                           
 17143                           ;mcc_generated_files/i2c1_master.c: 189:         I2C1_Status.bufferFree = 1;
 17144  1DFF  15EB               	bsf	(_I2C1_Status^(0+512)+29),3
 17145                           
 17146                           ;mcc_generated_files/i2c1_master.c: 192:         I2C1_Status.callbackTable[I2C1_DATA_COM
      +                          PLETE]=I2C1_CallbackReturnStop;
 17147  1E00  302C               	movlw	low _I2C1_CallbackReturnStop
 17148  1E01  00CE               	movwf	_I2C1_Status^(0+512)
 17149  1E02  3026               	movlw	high _I2C1_CallbackReturnStop
 17150  1E03  00CF               	movwf	(_I2C1_Status^(0+512)+1)
 17151                           
 17152                           ;mcc_generated_files/i2c1_master.c: 193:         I2C1_Status.callbackPayload[I2C1_DATA_C
      +                          OMPLETE] = ((void*)0);
 17153  1E04  01DA               	clrf	(low ((_I2C1_Status| (0+512)+12)))^0
 17154                           
 17155                           ;mcc_generated_files/i2c1_master.c: 194:         I2C1_Status.callbackTable[I2C1_WRITE_CO
      +                          LLISION]=I2C1_CallbackReturnStop;
 17156  1E05  302C               	movlw	low _I2C1_CallbackReturnStop
 17157  1E06  00D0               	movwf	(low ((_I2C1_Status| (0+512)+2)))^0
 17158  1E07  3026               	movlw	high _I2C1_CallbackReturnStop
 17159  1E08  00D1               	movwf	((low ((_I2C1_Status| (0+512)+2)))^0+1)
 17160                           
 17161                           ;mcc_generated_files/i2c1_master.c: 195:         I2C1_Status.callbackPayload[I2C1_WRITE_
      +                          COLLISION] = ((void*)0);
 17162  1E09  01DB               	clrf	(low ((_I2C1_Status| (0+512)+13)))^0
 17163                           
 17164                           ;mcc_generated_files/i2c1_master.c: 196:         I2C1_Status.callbackTable[I2C1_ADDR_NAC
      +                          K]=I2C1_CallbackReturnStop;
 17165  1E0A  302C               	movlw	low _I2C1_CallbackReturnStop
 17166  1E0B  00D2               	movwf	(low ((_I2C1_Status| (0+512)+4)))^0
 17167  1E0C  3026               	movlw	high _I2C1_CallbackReturnStop
 17168  1E0D  00D3               	movwf	((low ((_I2C1_Status| (0+512)+4)))^0+1)
 17169                           
 17170                           ;mcc_generated_files/i2c1_master.c: 197:         I2C1_Status.callbackPayload[I2C1_ADDR_N
      +                          ACK] = ((void*)0);
 17171  1E0E  01DC               	clrf	(low ((_I2C1_Status| (0+512)+14)))^0
 17172                           
 17173                           ;mcc_generated_files/i2c1_master.c: 198:         I2C1_Status.callbackTable[I2C1_DATA_NAC
      +                          K]=I2C1_CallbackReturnStop;
 17174  1E0F  302C               	movlw	low _I2C1_CallbackReturnStop
 17175  1E10  00D4               	movwf	(low ((_I2C1_Status| (0+512)+6)))^0
 17176  1E11  3026               	movlw	high _I2C1_CallbackReturnStop
 17177  1E12  00D5               	movwf	((low ((_I2C1_Status| (0+512)+6)))^0+1)
 17178                           
 17179                           ;mcc_generated_files/i2c1_master.c: 199:         I2C1_Status.callbackPayload[I2C1_DATA_N
      +                          ACK] = ((void*)0);
 17180  1E13  01DD               	clrf	(low ((_I2C1_Status| (0+512)+15)))^0
 17181                           
 17182                           ;mcc_generated_files/i2c1_master.c: 200:         I2C1_Status.callbackTable[I2C1_TIMEOUT]
      +                          =I2C1_CallbackReturnReset;
 17183  1E14  302E               	movlw	low _I2C1_CallbackReturnReset
 17184  1E15  00D6               	movwf	(low ((_I2C1_Status| (0+512)+8)))^0
 17185  1E16  3026               	movlw	high _I2C1_CallbackReturnReset
 17186  1E17  00D7               	movwf	((low ((_I2C1_Status| (0+512)+8)))^0+1)
 17187                           
 17188                           ;mcc_generated_files/i2c1_master.c: 201:         I2C1_Status.callbackPayload[I2C1_TIMEOU
      +                          T] = ((void*)0);
 17189  1E18  01DE               	clrf	(low ((_I2C1_Status| (0+512)+16)))^0
 17190                           
 17191                           ;mcc_generated_files/i2c1_master.c: 203:         I2C1_SetInterruptHandler(I2C1_MasterIsr
      +                          );
 17192  1E19  3041               	movlw	low _I2C1_MasterIsr
 17193  1E1A  0020               	movlb	0	; select bank0
 17194  1E1B  00A3               	movwf	I2C1_SetInterruptHandler@InterruptHandler
 17195  1E1C  3026               	movlw	high _I2C1_MasterIsr
 17196  1E1D  00A4               	movwf	I2C1_SetInterruptHandler@InterruptHandler+1
 17197  1E1E  31A6  26C1  319D   	fcall	_I2C1_SetInterruptHandler
 17198                           
 17199                           ;mcc_generated_files/i2c1_master.c: 204:         I2C1_MasterClearIrq();
 17200  1E21  31A6  2644  319D   	fcall	_I2C1_MasterClearIrq
 17201                           
 17202                           ;mcc_generated_files/i2c1_master.c: 205:         I2C1_MasterOpen();
 17203  1E24  31A7  2730  319D   	fcall	_I2C1_MasterOpen
 17204                           
 17205                           ;mcc_generated_files/i2c1_master.c: 206:         I2C1_MasterEnableIrq();
 17206  1E27  31A6  264D         	fcall	_I2C1_MasterEnableIrq
 17207                           
 17208                           ;mcc_generated_files/i2c1_master.c: 207:         returnValue = I2C1_NOERR;
 17209  1E29  0020               	movlb	0	; select bank0
 17210  1E2A  01A7               	clrf	I2C1_Open@returnValue
 17211  1E2B                     l7115:
 17212                           
 17213                           ;mcc_generated_files/i2c1_master.c: 209:     return returnValue;
 17214  1E2B  0020               	movlb	0	; select bank0
 17215  1E2C  0827               	movf	I2C1_Open@returnValue,w
 17216  1E2D  0008               	return
 17217  1E2E                     __end_of_I2C1_Open:
 17218                           
 17219                           	psect	text55
 17220  26C1                     __ptext55:	
 17221 ;; *************** function _I2C1_SetInterruptHandler *****************
 17222 ;; Defined at:
 17223 ;;		line 300 in file "mcc_generated_files/i2c1_master.c"
 17224 ;; Parameters:    Size  Location     Type
 17225 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 17226 ;;		 -> I2C1_MasterIsr(1), 
 17227 ;; Auto vars:     Size  Location     Type
 17228 ;;		None
 17229 ;; Return value:  Size  Location     Type
 17230 ;;                  1    wreg      void 
 17231 ;; Registers used:
 17232 ;;		wreg
 17233 ;; Tracked objects:
 17234 ;;		On entry : 1F/4A00000
 17235 ;;		On exit  : 1F/2
 17236 ;;		Unchanged: 0/0
 17237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17238 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17241 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17242 ;;Total ram usage:        2 bytes
 17243 ;; Hardware stack levels used:    1
 17244 ;; Hardware stack levels required when called:    7
 17245 ;; This function calls:
 17246 ;;		Nothing
 17247 ;; This function is called by:
 17248 ;;		_I2C1_Open
 17249 ;; This function uses a non-reentrant model
 17250 ;;
 17251                           
 17252                           
 17253                           ;psect for function _I2C1_SetInterruptHandler
 17254  26C1                     _I2C1_SetInterruptHandler:
 17255                           
 17256                           ;mcc_generated_files/i2c1_master.c: 300: void I2C1_SetInterruptHandler(void (* Interrupt
      +                          Handler)(void));mcc_generated_files/i2c1_master.c: 301: {;mcc_generated_files/i2c1_maste
      +                          r.c: 302:     MSSP1_InterruptHandler = InterruptHandler;
 17257                           
 17258                           ;incstack = 0
 17259                           ; Regs used in _I2C1_SetInterruptHandler: [wreg]
 17260  26C1  0824               	movf	I2C1_SetInterruptHandler@InterruptHandler+1,w
 17261  26C2  0022               	movlb	2	; select bank2
 17262  26C3  00B3               	movwf	(_MSSP1_InterruptHandler+1)^(0+256)
 17263  26C4  0020               	movlb	0	; select bank0
 17264  26C5  0823               	movf	I2C1_SetInterruptHandler@InterruptHandler,w
 17265  26C6  0022               	movlb	2	; select bank2
 17266  26C7  00B2               	movwf	_MSSP1_InterruptHandler^(0+256)
 17267  26C8  0008               	return
 17268  26C9                     __end_of_I2C1_SetInterruptHandler:
 17269                           
 17270                           	psect	text56
 17271  2730                     __ptext56:	
 17272 ;; *************** function _I2C1_MasterOpen *****************
 17273 ;; Defined at:
 17274 ;;		line 545 in file "mcc_generated_files/i2c1_master.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;		None
 17277 ;; Auto vars:     Size  Location     Type
 17278 ;;		None
 17279 ;; Return value:  Size  Location     Type
 17280 ;;                  1    wreg      _Bool 
 17281 ;; Registers used:
 17282 ;;		wreg, status,2
 17283 ;; Tracked objects:
 17284 ;;		On entry : 1F/4A00000
 17285 ;;		On exit  : 1F/4
 17286 ;;		Unchanged: 0/0
 17287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17292 ;;Total ram usage:        0 bytes
 17293 ;; Hardware stack levels used:    1
 17294 ;; Hardware stack levels required when called:    7
 17295 ;; This function calls:
 17296 ;;		Nothing
 17297 ;; This function is called by:
 17298 ;;		_I2C1_Open
 17299 ;; This function uses a non-reentrant model
 17300 ;;
 17301                           
 17302                           
 17303                           ;psect for function _I2C1_MasterOpen
 17304  2730                     _I2C1_MasterOpen:
 17305                           
 17306                           ;mcc_generated_files/i2c1_master.c: 547:     if(!SSP1CON1bits.SSPEN)
 17307                           
 17308                           ;incstack = 0
 17309                           ; Regs used in _I2C1_MasterOpen: [wreg+status,2]
 17310  2730  0024               	movlb	4	; select bank4
 17311  2731  1A95               	btfsc	21,5	;volatile
 17312  2732  0008               	return
 17313                           
 17314                           ;mcc_generated_files/i2c1_master.c: 548:     {;mcc_generated_files/i2c1_master.c: 549:  
      +                                 SSP1STAT = 0x00;
 17315  2733  0194               	clrf	20	;volatile
 17316                           
 17317                           ;mcc_generated_files/i2c1_master.c: 550:         SSP1CON1 = 0x38;
 17318  2734  3038               	movlw	56
 17319  2735  0095               	movwf	21	;volatile
 17320                           
 17321                           ;mcc_generated_files/i2c1_master.c: 551:         SSP1CON2 = 0x1F;
 17322  2736  301F               	movlw	31
 17323  2737  0096               	movwf	22	;volatile
 17324                           
 17325                           ;mcc_generated_files/i2c1_master.c: 552:         SSP1CON3 = 0x60;
 17326  2738  3060               	movlw	96
 17327  2739  0097               	movwf	23	;volatile
 17328                           
 17329                           ;mcc_generated_files/i2c1_master.c: 553:         SSP1ADD = 0x27;
 17330  273A  3027               	movlw	39
 17331  273B  0092               	movwf	18	;volatile
 17332                           
 17333                           ;mcc_generated_files/i2c1_master.c: 554:         SSP1CON1bits.SSPEN = 1;
 17334  273C  1695               	bsf	21,5	;volatile
 17335  273D  0008               	return
 17336  273E                     __end_of_I2C1_MasterOpen:
 17337                           
 17338                           	psect	text57
 17339  264D                     __ptext57:	
 17340 ;; *************** function _I2C1_MasterEnableIrq *****************
 17341 ;; Defined at:
 17342 ;;		line 629 in file "mcc_generated_files/i2c1_master.c"
 17343 ;; Parameters:    Size  Location     Type
 17344 ;;		None
 17345 ;; Auto vars:     Size  Location     Type
 17346 ;;		None
 17347 ;; Return value:  Size  Location     Type
 17348 ;;                  1    wreg      void 
 17349 ;; Registers used:
 17350 ;;		None
 17351 ;; Tracked objects:
 17352 ;;		On entry : 1F/4A00004
 17353 ;;		On exit  : 1F/1
 17354 ;;		Unchanged: 0/0
 17355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17360 ;;Total ram usage:        0 bytes
 17361 ;; Hardware stack levels used:    1
 17362 ;; Hardware stack levels required when called:    7
 17363 ;; This function calls:
 17364 ;;		Nothing
 17365 ;; This function is called by:
 17366 ;;		_I2C1_Open
 17367 ;; This function uses a non-reentrant model
 17368 ;;
 17369                           
 17370                           
 17371                           ;psect for function _I2C1_MasterEnableIrq
 17372  264D                     _I2C1_MasterEnableIrq:
 17373                           
 17374                           ;mcc_generated_files/i2c1_master.c: 631:     PIE1bits.SSP1IE = 1;
 17375                           
 17376                           ;incstack = 0
 17377                           ; Regs used in _I2C1_MasterEnableIrq: []
 17378  264D  0021               	movlb	1	; select bank1
 17379  264E  1591               	bsf	17,3	;volatile
 17380  264F  0008               	return
 17381  2650                     __end_of_I2C1_MasterEnableIrq:
 17382                           
 17383                           	psect	text58
 17384  267C                     __ptext58:	
 17385 ;; *************** function _I2C1_MasterWrite *****************
 17386 ;; Defined at:
 17387 ;;		line 253 in file "mcc_generated_files/i2c1_master.c"
 17388 ;; Parameters:    Size  Location     Type
 17389 ;;		None
 17390 ;; Auto vars:     Size  Location     Type
 17391 ;;		None
 17392 ;; Return value:  Size  Location     Type
 17393 ;;                  1    wreg      enum E355
 17394 ;; Registers used:
 17395 ;;		wreg, status,2, status,0, pclath, cstack
 17396 ;; Tracked objects:
 17397 ;;		On entry : 1F/4A00000
 17398 ;;		On exit  : 1F/0
 17399 ;;		Unchanged: 0/0
 17400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17405 ;;Total ram usage:        0 bytes
 17406 ;; Hardware stack levels used:    1
 17407 ;; Hardware stack levels required when called:    9
 17408 ;; This function calls:
 17409 ;;		_I2C1_MasterOperation
 17410 ;; This function is called by:
 17411 ;;		_i2c_writeNBytes
 17412 ;;		_i2c_read1ByteRegister
 17413 ;;		_I2C1_WriteNBytes
 17414 ;; This function uses a non-reentrant model
 17415 ;;
 17416                           
 17417                           
 17418                           ;psect for function _I2C1_MasterWrite
 17419  267C                     _I2C1_MasterWrite:
 17420                           
 17421                           ;mcc_generated_files/i2c1_master.c: 255:     return I2C1_MasterOperation(0);;	Return val
      +                          ue of _I2C1_MasterWrite is never used
 17422                           
 17423                           ;incstack = 0
 17424                           ; Regs used in _I2C1_MasterWrite: [wreg+status,2+status,0+pclath+cstack]
 17425  267C  3000               	movlw	0
 17426  267D  319A  221F         	fcall	_I2C1_MasterOperation
 17427  267F  0008               	return
 17428  2680                     __end_of_I2C1_MasterWrite:
 17429                           
 17430                           	psect	text59
 17431  1A1F                     __ptext59:	
 17432 ;; *************** function _I2C1_MasterOperation *****************
 17433 ;; Defined at:
 17434 ;;		line 227 in file "mcc_generated_files/i2c1_master.c"
 17435 ;; Parameters:    Size  Location     Type
 17436 ;;  read            1    wreg     _Bool 
 17437 ;; Auto vars:     Size  Location     Type
 17438 ;;  read            1    4[BANK0 ] _Bool 
 17439 ;;  returnValue     1    5[BANK0 ] enum E355
 17440 ;; Return value:  Size  Location     Type
 17441 ;;                  1    wreg      enum E355
 17442 ;; Registers used:
 17443 ;;		wreg, status,2, status,0, pclath, cstack
 17444 ;; Tracked objects:
 17445 ;;		On entry : 1F/4A00000
 17446 ;;		On exit  : 1F/0
 17447 ;;		Unchanged: 0/0
 17448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17450 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17451 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17452 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17453 ;;Total ram usage:        3 bytes
 17454 ;; Hardware stack levels used:    1
 17455 ;; Hardware stack levels required when called:    8
 17456 ;; This function calls:
 17457 ;;		_I2C1_MasterStart
 17458 ;; This function is called by:
 17459 ;;		_I2C1_MasterWrite
 17460 ;; This function uses a non-reentrant model
 17461 ;;
 17462                           
 17463                           
 17464                           ;psect for function _I2C1_MasterOperation
 17465  1A1F                     _I2C1_MasterOperation:
 17466                           
 17467                           ;incstack = 0
 17468                           ; Regs used in _I2C1_MasterOperation: [wreg+status,2+status,0+pclath+cstack]
 17469                           ;I2C1_MasterOperation@read stored from wreg
 17470  1A1F  00A4               	movwf	I2C1_MasterOperation@read
 17471                           
 17472                           ;mcc_generated_files/i2c1_master.c: 227: i2c1_error_t I2C1_MasterOperation(_Bool read);m
      +                          cc_generated_files/i2c1_master.c: 228: {;mcc_generated_files/i2c1_master.c: 229:     i2c
      +                          1_error_t returnValue = I2C1_BUSY;
 17473  1A20  01A5               	clrf	I2C1_MasterOperation@returnValue
 17474  1A21  0AA5               	incf	I2C1_MasterOperation@returnValue,f
 17475                           
 17476                           ;mcc_generated_files/i2c1_master.c: 230:     if(!I2C1_Status.busy)
 17477  1A22  0024               	movlb	4	; select bank4
 17478  1A23  18EB               	btfsc	(_I2C1_Status^(0+512)+29),1
 17479  1A24  2A36               	goto	l6925
 17480                           
 17481                           ;mcc_generated_files/i2c1_master.c: 231:     {;mcc_generated_files/i2c1_master.c: 232:  
      +                                 I2C1_Status.busy = 1;
 17482  1A25  14EB               	bsf	(_I2C1_Status^(0+512)+29),1
 17483                           
 17484                           ;mcc_generated_files/i2c1_master.c: 233:         returnValue = I2C1_NOERR;
 17485  1A26  0020               	movlb	0	; select bank0
 17486  1A27  01A5               	clrf	I2C1_MasterOperation@returnValue
 17487                           
 17488                           ;mcc_generated_files/i2c1_master.c: 235:         if(read)
 17489  1A28  0824               	movf	I2C1_MasterOperation@read,w
 17490  1A29  1903               	btfsc	3,2
 17491  1A2A  2A2F               	goto	l6921
 17492                           
 17493                           ;mcc_generated_files/i2c1_master.c: 236:         {;mcc_generated_files/i2c1_master.c: 23
      +                          7:             I2C1_Status.state = I2C1_SEND_ADR_READ;
 17494  1A2B  0024               	movlb	4	; select bank4
 17495  1A2C  01E9               	clrf	(_I2C1_Status^(0+512)+27)
 17496  1A2D  0AE9               	incf	(_I2C1_Status^(0+512)+27),f
 17497                           
 17498                           ;mcc_generated_files/i2c1_master.c: 238:         }
 17499  1A2E  2A34               	goto	l6923
 17500  1A2F                     l6921:
 17501                           
 17502                           ;mcc_generated_files/i2c1_master.c: 240:         {;mcc_generated_files/i2c1_master.c: 24
      +                          1:             I2C1_Status.state = I2C1_SEND_ADR_WRITE;
 17503  1A2F  3002               	movlw	2
 17504  1A30  00A3               	movwf	??_I2C1_MasterOperation
 17505  1A31  0823               	movf	??_I2C1_MasterOperation,w
 17506  1A32  0024               	movlb	4	; select bank4
 17507  1A33  00E9               	movwf	(_I2C1_Status^(0+512)+27)
 17508  1A34                     l6923:
 17509                           
 17510                           ;mcc_generated_files/i2c1_master.c: 243:         I2C1_MasterStart();
 17511  1A34  3180  2002         	fcall	_I2C1_MasterStart
 17512  1A36                     l6925:
 17513                           
 17514                           ;mcc_generated_files/i2c1_master.c: 245:     return returnValue;
 17515  1A36  0020               	movlb	0	; select bank0
 17516  1A37  0825               	movf	I2C1_MasterOperation@returnValue,w
 17517  1A38  0008               	return
 17518  1A39                     __end_of_I2C1_MasterOperation:
 17519                           
 17520                           	psect	text60
 17521  0002                     __ptext60:	
 17522 ;; *************** function _I2C1_MasterStart *****************
 17523 ;; Defined at:
 17524 ;;		line 591 in file "mcc_generated_files/i2c1_master.c"
 17525 ;; Parameters:    Size  Location     Type
 17526 ;;		None
 17527 ;; Auto vars:     Size  Location     Type
 17528 ;;		None
 17529 ;; Return value:  Size  Location     Type
 17530 ;;                  1    wreg      void 
 17531 ;; Registers used:
 17532 ;;		None
 17533 ;; Tracked objects:
 17534 ;;		On entry : 1F/4A00004
 17535 ;;		On exit  : 1F/4
 17536 ;;		Unchanged: 0/0
 17537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17542 ;;Total ram usage:        0 bytes
 17543 ;; Hardware stack levels used:    1
 17544 ;; Hardware stack levels required when called:    7
 17545 ;; This function calls:
 17546 ;;		Nothing
 17547 ;; This function is called by:
 17548 ;;		_I2C1_MasterOperation
 17549 ;; This function uses a non-reentrant model
 17550 ;;
 17551                           
 17552                           
 17553                           ;psect for function _I2C1_MasterStart
 17554  0002                     _I2C1_MasterStart:
 17555                           
 17556                           ;mcc_generated_files/i2c1_master.c: 593:     SSP1CON2bits.SEN = 1;
 17557                           
 17558                           ;incstack = 0
 17559                           ; Regs used in _I2C1_MasterStart: []
 17560  0002  1416               	bsf	22,0	;volatile
 17561  0003  0008               	return
 17562  0004                     __end_of_I2C1_MasterStart:
 17563                           
 17564                           	psect	text61
 17565  1A89                     __ptext61:	
 17566 ;; *************** function _I2C1_Close *****************
 17567 ;; Defined at:
 17568 ;;		line 212 in file "mcc_generated_files/i2c1_master.c"
 17569 ;; Parameters:    Size  Location     Type
 17570 ;;		None
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;  returnValue     1    4[BANK0 ] enum E355
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  1    wreg      enum E355
 17575 ;; Registers used:
 17576 ;;		wreg, status,2, status,0, pclath, cstack
 17577 ;; Tracked objects:
 17578 ;;		On entry : 1F/4A00000
 17579 ;;		On exit  : 1F/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17583 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17584 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17585 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17586 ;;Total ram usage:        2 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; Hardware stack levels required when called:    8
 17589 ;; This function calls:
 17590 ;;		_I2C1_MasterClearIrq
 17591 ;;		_I2C1_MasterClose
 17592 ;;		_I2C1_MasterDisableIrq
 17593 ;; This function is called by:
 17594 ;;		_i2c_writeNBytes
 17595 ;;		_i2c_read1ByteRegister
 17596 ;;		_I2C1_WriteNBytes
 17597 ;; This function uses a non-reentrant model
 17598 ;;
 17599                           
 17600                           
 17601                           ;psect for function _I2C1_Close
 17602  1A89                     _I2C1_Close:
 17603                           
 17604                           ;mcc_generated_files/i2c1_master.c: 214:     i2c1_error_t returnValue = I2C1_BUSY;
 17605                           
 17606                           ;incstack = 0
 17607                           ; Regs used in _I2C1_Close: [wreg+status,2+status,0+pclath+cstack]
 17608  1A89  01A4               	clrf	I2C1_Close@returnValue
 17609  1A8A  0AA4               	incf	I2C1_Close@returnValue,f
 17610                           
 17611                           ;mcc_generated_files/i2c1_master.c: 215:     if(!I2C1_Status.busy)
 17612  1A8B  0024               	movlb	4	; select bank4
 17613  1A8C  18EB               	btfsc	(_I2C1_Status^(0+512)+29),1
 17614  1A8D  2AA2               	goto	l7139
 17615                           
 17616                           ;mcc_generated_files/i2c1_master.c: 216:     {;mcc_generated_files/i2c1_master.c: 217:  
      +                                 I2C1_Status.inUse = 0;
 17617  1A8E  116B               	bcf	(_I2C1_Status^(0+512)+29),2
 17618                           
 17619                           ;mcc_generated_files/i2c1_master.c: 218:         I2C1_Status.address = 0xff;
 17620  1A8F  30FF               	movlw	255
 17621  1A90  0020               	movlb	0	; select bank0
 17622  1A91  00A3               	movwf	??_I2C1_Close
 17623  1A92  0823               	movf	??_I2C1_Close,w
 17624  1A93  0024               	movlb	4	; select bank4
 17625  1A94  00E4               	movwf	(_I2C1_Status^(0+512)+22)
 17626                           
 17627                           ;mcc_generated_files/i2c1_master.c: 219:         I2C1_MasterClearIrq();
 17628  1A95  31A6  2644  319A   	fcall	_I2C1_MasterClearIrq
 17629                           
 17630                           ;mcc_generated_files/i2c1_master.c: 220:         I2C1_MasterDisableIrq();
 17631  1A98  31A6  264A  319A   	fcall	_I2C1_MasterDisableIrq
 17632                           
 17633                           ;mcc_generated_files/i2c1_master.c: 221:         I2C1_MasterClose();
 17634  1A9B  31A6  2647         	fcall	_I2C1_MasterClose
 17635                           
 17636                           ;mcc_generated_files/i2c1_master.c: 222:         returnValue = I2C1_Status.error;
 17637  1A9D  086A               	movf	(_I2C1_Status^(0+512)+28),w
 17638  1A9E  0020               	movlb	0	; select bank0
 17639  1A9F  00A3               	movwf	??_I2C1_Close
 17640  1AA0  0823               	movf	??_I2C1_Close,w
 17641  1AA1  00A4               	movwf	I2C1_Close@returnValue
 17642  1AA2                     l7139:
 17643                           
 17644                           ;mcc_generated_files/i2c1_master.c: 224:     return returnValue;
 17645  1AA2  0020               	movlb	0	; select bank0
 17646  1AA3  0824               	movf	I2C1_Close@returnValue,w
 17647  1AA4  0008               	return
 17648  1AA5                     __end_of_I2C1_Close:
 17649                           
 17650                           	psect	text62
 17651  264A                     __ptext62:	
 17652 ;; *************** function _I2C1_MasterDisableIrq *****************
 17653 ;; Defined at:
 17654 ;;		line 639 in file "mcc_generated_files/i2c1_master.c"
 17655 ;; Parameters:    Size  Location     Type
 17656 ;;		None
 17657 ;; Auto vars:     Size  Location     Type
 17658 ;;		None
 17659 ;; Return value:  Size  Location     Type
 17660 ;;                  1    wreg      void 
 17661 ;; Registers used:
 17662 ;;		None
 17663 ;; Tracked objects:
 17664 ;;		On entry : 1F/4A00000
 17665 ;;		On exit  : 1F/1
 17666 ;;		Unchanged: 0/0
 17667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17672 ;;Total ram usage:        0 bytes
 17673 ;; Hardware stack levels used:    1
 17674 ;; Hardware stack levels required when called:    7
 17675 ;; This function calls:
 17676 ;;		Nothing
 17677 ;; This function is called by:
 17678 ;;		_I2C1_Close
 17679 ;; This function uses a non-reentrant model
 17680 ;;
 17681                           
 17682                           
 17683                           ;psect for function _I2C1_MasterDisableIrq
 17684  264A                     _I2C1_MasterDisableIrq:
 17685                           
 17686                           ;mcc_generated_files/i2c1_master.c: 641:     PIE1bits.SSP1IE = 0;
 17687                           
 17688                           ;incstack = 0
 17689                           ; Regs used in _I2C1_MasterDisableIrq: []
 17690  264A  0021               	movlb	1	; select bank1
 17691  264B  1191               	bcf	17,3	;volatile
 17692  264C  0008               	return
 17693  264D                     __end_of_I2C1_MasterDisableIrq:
 17694                           
 17695                           	psect	text63
 17696  2647                     __ptext63:	
 17697 ;; *************** function _I2C1_MasterClose *****************
 17698 ;; Defined at:
 17699 ;;		line 560 in file "mcc_generated_files/i2c1_master.c"
 17700 ;; Parameters:    Size  Location     Type
 17701 ;;		None
 17702 ;; Auto vars:     Size  Location     Type
 17703 ;;		None
 17704 ;; Return value:  Size  Location     Type
 17705 ;;                  1    wreg      void 
 17706 ;; Registers used:
 17707 ;;		None
 17708 ;; Tracked objects:
 17709 ;;		On entry : 1F/4A00001
 17710 ;;		On exit  : 1F/4
 17711 ;;		Unchanged: 0/0
 17712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17717 ;;Total ram usage:        0 bytes
 17718 ;; Hardware stack levels used:    1
 17719 ;; Hardware stack levels required when called:    7
 17720 ;; This function calls:
 17721 ;;		Nothing
 17722 ;; This function is called by:
 17723 ;;		_I2C1_Close
 17724 ;; This function uses a non-reentrant model
 17725 ;;
 17726                           
 17727                           
 17728                           ;psect for function _I2C1_MasterClose
 17729  2647                     _I2C1_MasterClose:
 17730                           
 17731                           ;mcc_generated_files/i2c1_master.c: 563:     SSP1CON1bits.SSPEN = 0;
 17732                           
 17733                           ;incstack = 0
 17734                           ; Regs used in _I2C1_MasterClose: []
 17735  2647  0024               	movlb	4	; select bank4
 17736  2648  1295               	bcf	21,5	;volatile
 17737  2649  0008               	return
 17738  264A                     __end_of_I2C1_MasterClose:
 17739                           
 17740                           	psect	text64
 17741  2644                     __ptext64:	
 17742 ;; *************** function _I2C1_MasterClearIrq *****************
 17743 ;; Defined at:
 17744 ;;		line 644 in file "mcc_generated_files/i2c1_master.c"
 17745 ;; Parameters:    Size  Location     Type
 17746 ;;		None
 17747 ;; Auto vars:     Size  Location     Type
 17748 ;;		None
 17749 ;; Return value:  Size  Location     Type
 17750 ;;                  1    wreg      void 
 17751 ;; Registers used:
 17752 ;;		None
 17753 ;; Tracked objects:
 17754 ;;		On entry : 19/4A00002
 17755 ;;		On exit  : 1F/0
 17756 ;;		Unchanged: 0/0
 17757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17762 ;;Total ram usage:        0 bytes
 17763 ;; Hardware stack levels used:    1
 17764 ;; Hardware stack levels required when called:    7
 17765 ;; This function calls:
 17766 ;;		Nothing
 17767 ;; This function is called by:
 17768 ;;		_I2C1_Open
 17769 ;;		_I2C1_Close
 17770 ;; This function uses a non-reentrant model
 17771 ;;
 17772                           
 17773                           
 17774                           ;psect for function _I2C1_MasterClearIrq
 17775  2644                     _I2C1_MasterClearIrq:
 17776                           
 17777                           ;mcc_generated_files/i2c1_master.c: 646:     PIR1bits.SSP1IF = 0;
 17778                           
 17779                           ;incstack = 0
 17780                           ; Regs used in _I2C1_MasterClearIrq: []
 17781  2644  0020               	movlb	0	; select bank0
 17782  2645  1191               	bcf	17,3	;volatile
 17783  2646  0008               	return
 17784  2647                     __end_of_I2C1_MasterClearIrq:
 17785                           
 17786                           	psect	text65
 17787  0800                     __ptext65:	
 17788 ;; *************** function _TMR1_StartTimer *****************
 17789 ;; Defined at:
 17790 ;;		line 212 in file "mcc_generated_files/tmr1.c"
 17791 ;; Parameters:    Size  Location     Type
 17792 ;;		None
 17793 ;; Auto vars:     Size  Location     Type
 17794 ;;		None
 17795 ;; Return value:  Size  Location     Type
 17796 ;;                  1    wreg      void 
 17797 ;; Registers used:
 17798 ;;		None
 17799 ;; Tracked objects:
 17800 ;;		On entry : 1F/0
 17801 ;;		On exit  : 1F/0
 17802 ;;		Unchanged: 0/0
 17803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17808 ;;Total ram usage:        0 bytes
 17809 ;; Hardware stack levels used:    1
 17810 ;; Hardware stack levels required when called:    7
 17811 ;; This function calls:
 17812 ;;		Nothing
 17813 ;; This function is called by:
 17814 ;;		_main
 17815 ;; This function uses a non-reentrant model
 17816 ;;
 17817                           
 17818                           
 17819                           ;psect for function _TMR1_StartTimer
 17820  0800                     _TMR1_StartTimer:
 17821                           
 17822                           ;mcc_generated_files/tmr1.c: 215:     T1CONbits.TMR1ON = 1;
 17823                           
 17824                           ;incstack = 0
 17825                           ; Regs used in _TMR1_StartTimer: []
 17826  0800  141B               	bsf	27,0	;volatile
 17827  0801  0008               	return
 17828  0802                     __end_of_TMR1_StartTimer:
 17829                           
 17830                           	psect	text66
 17831  07ED                     __ptext66:	
 17832 ;; *************** function _SYSTEM_Initialize *****************
 17833 ;; Defined at:
 17834 ;;		line 50 in file "mcc_generated_files/mcc.c"
 17835 ;; Parameters:    Size  Location     Type
 17836 ;;		None
 17837 ;; Auto vars:     Size  Location     Type
 17838 ;;		None
 17839 ;; Return value:  Size  Location     Type
 17840 ;;                  1    wreg      void 
 17841 ;; Registers used:
 17842 ;;		wreg, status,2, status,0, pclath, cstack
 17843 ;; Tracked objects:
 17844 ;;		On entry : B1F/0
 17845 ;;		On exit  : 1F/0
 17846 ;;		Unchanged: 0/0
 17847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17852 ;;Total ram usage:        0 bytes
 17853 ;; Hardware stack levels used:    1
 17854 ;; Hardware stack levels required when called:    9
 17855 ;; This function calls:
 17856 ;;		_I2C1_Initialize
 17857 ;;		_OSCILLATOR_Initialize
 17858 ;;		_PIN_MANAGER_Initialize
 17859 ;;		_PMD_Initialize
 17860 ;;		_TMR1_Initialize
 17861 ;;		_WDT_Initialize
 17862 ;; This function is called by:
 17863 ;;		_main
 17864 ;; This function uses a non-reentrant model
 17865 ;;
 17866                           
 17867                           
 17868                           ;psect for function _SYSTEM_Initialize
 17869  07ED                     _SYSTEM_Initialize:
 17870                           
 17871                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 17872                           
 17873                           ;incstack = 0
 17874                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17875  07ED  31A6  26B1  3187   	fcall	_PMD_Initialize
 17876                           
 17877                           ;mcc_generated_files/mcc.c: 54:     I2C1_Initialize();
 17878  07F0  31A6  26C9  3187   	fcall	_I2C1_Initialize
 17879                           
 17880                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 17881  07F3  3188  2002  3187   	fcall	_PIN_MANAGER_Initialize
 17882                           
 17883                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 17884  07F6  31A6  26DB  3187   	fcall	_OSCILLATOR_Initialize
 17885                           
 17886                           ;mcc_generated_files/mcc.c: 57:     WDT_Initialize();
 17887  07F9  31A6  2678  3187   	fcall	_WDT_Initialize
 17888                           
 17889                           ;mcc_generated_files/mcc.c: 58:     TMR1_Initialize();
 17890  07FC  319A  2253         	fcall	_TMR1_Initialize
 17891  07FE  0008               	return
 17892  07FF                     __end_of_SYSTEM_Initialize:
 17893                           
 17894                           	psect	text67
 17895  2678                     __ptext67:	
 17896 ;; *************** function _WDT_Initialize *****************
 17897 ;; Defined at:
 17898 ;;		line 79 in file "mcc_generated_files/mcc.c"
 17899 ;; Parameters:    Size  Location     Type
 17900 ;;		None
 17901 ;; Auto vars:     Size  Location     Type
 17902 ;;		None
 17903 ;; Return value:  Size  Location     Type
 17904 ;;                  1    wreg      void 
 17905 ;; Registers used:
 17906 ;;		wreg
 17907 ;; Tracked objects:
 17908 ;;		On entry : B1F/12
 17909 ;;		On exit  : B1F/1
 17910 ;;		Unchanged: B00/0
 17911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17916 ;;Total ram usage:        0 bytes
 17917 ;; Hardware stack levels used:    1
 17918 ;; Hardware stack levels required when called:    7
 17919 ;; This function calls:
 17920 ;;		Nothing
 17921 ;; This function is called by:
 17922 ;;		_SYSTEM_Initialize
 17923 ;; This function uses a non-reentrant model
 17924 ;;
 17925                           
 17926                           
 17927                           ;psect for function _WDT_Initialize
 17928  2678                     _WDT_Initialize:
 17929                           
 17930                           ;mcc_generated_files/mcc.c: 82:     WDTCON = 0x16;
 17931                           
 17932                           ;incstack = 0
 17933                           ; Regs used in _WDT_Initialize: [wreg]
 17934  2678  3016               	movlw	22
 17935  2679  0021               	movlb	1	; select bank1
 17936  267A  0097               	movwf	23	;volatile
 17937  267B  0008               	return
 17938  267C                     __end_of_WDT_Initialize:
 17939                           
 17940                           	psect	text68
 17941  1A53                     __ptext68:	
 17942 ;; *************** function _TMR1_Initialize *****************
 17943 ;; Defined at:
 17944 ;;		line 184 in file "mcc_generated_files/tmr1.c"
 17945 ;; Parameters:    Size  Location     Type
 17946 ;;		None
 17947 ;; Auto vars:     Size  Location     Type
 17948 ;;		None
 17949 ;; Return value:  Size  Location     Type
 17950 ;;                  1    wreg      void 
 17951 ;; Registers used:
 17952 ;;		wreg, status,2, status,0, pclath, cstack
 17953 ;; Tracked objects:
 17954 ;;		On entry : 1E/0
 17955 ;;		On exit  : 1F/0
 17956 ;;		Unchanged: 0/0
 17957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17962 ;;Total ram usage:        0 bytes
 17963 ;; Hardware stack levels used:    1
 17964 ;; Hardware stack levels required when called:    8
 17965 ;; This function calls:
 17966 ;;		_TMR1_SetInterruptHandler
 17967 ;; This function is called by:
 17968 ;;		_SYSTEM_Initialize
 17969 ;;		_main
 17970 ;; This function uses a non-reentrant model
 17971 ;;
 17972                           
 17973                           
 17974                           ;psect for function _TMR1_Initialize
 17975  1A53                     _TMR1_Initialize:
 17976                           
 17977                           ;mcc_generated_files/tmr1.c: 189:     T1GCON = 0x00;
 17978                           
 17979                           ;incstack = 0
 17980                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 17981  1A53  0020               	movlb	0	; select bank0
 17982  1A54  019C               	clrf	28	;volatile
 17983                           
 17984                           ;mcc_generated_files/tmr1.c: 192:     TMR1H = 0xBd;
 17985  1A55  30BD               	movlw	189
 17986  1A56  009A               	movwf	26	;volatile
 17987                           
 17988                           ;mcc_generated_files/tmr1.c: 193:     TMR1L = 0xDC;
 17989  1A57  30DC               	movlw	220
 17990  1A58  0099               	movwf	25	;volatile
 17991                           
 17992                           ;mcc_generated_files/tmr1.c: 197:     PIR1bits.TMR1IF = 0;
 17993  1A59  1011               	bcf	17,0	;volatile
 17994                           
 17995                           ;mcc_generated_files/tmr1.c: 200:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 17996  1A5A  081A               	movf	26,w	;volatile
 17997  1A5B  0022               	movlb	2	; select bank2
 17998  1A5C  00B1               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
 17999  1A5D  0020               	movlb	0	; select bank0
 18000  1A5E  0819               	movf	25,w	;volatile
 18001  1A5F  0022               	movlb	2	; select bank2
 18002  1A60  00B0               	movwf	_timer1ReloadVal^(0+256)	;volatile
 18003                           
 18004                           ;mcc_generated_files/tmr1.c: 203:     PIE1bits.TMR1IE = 1;
 18005  1A61  0021               	movlb	1	; select bank1
 18006  1A62  1411               	bsf	17,0	;volatile
 18007                           
 18008                           ;mcc_generated_files/tmr1.c: 206:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHand
      +                          ler);
 18009  1A63  30A2               	movlw	low _TMR1_DefaultInterruptHandler
 18010  1A64  0020               	movlb	0	; select bank0
 18011  1A65  00A3               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 18012  1A66  3015               	movlw	high _TMR1_DefaultInterruptHandler
 18013  1A67  00A4               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 18014  1A68  31A6  26B9         	fcall	_TMR1_SetInterruptHandler
 18015                           
 18016                           ;mcc_generated_files/tmr1.c: 208:      T1CON = 0x01;
 18017  1A6A  3001               	movlw	1
 18018  1A6B  0020               	movlb	0	; select bank0
 18019  1A6C  009B               	movwf	27	;volatile
 18020  1A6D  0008               	return
 18021  1A6E                     __end_of_TMR1_Initialize:
 18022                           
 18023                           	psect	text69
 18024  26B9                     __ptext69:	
 18025 ;; *************** function _TMR1_SetInterruptHandler *****************
 18026 ;; Defined at:
 18027 ;;		line 367 in file "mcc_generated_files/tmr1.c"
 18028 ;; Parameters:    Size  Location     Type
 18029 ;;  InterruptHan    2    3[BANK0 ] PTR FTN()void 
 18030 ;;		 -> TMR1_DefaultInterruptHandler(1), 
 18031 ;; Auto vars:     Size  Location     Type
 18032 ;;		None
 18033 ;; Return value:  Size  Location     Type
 18034 ;;                  1    wreg      void 
 18035 ;; Registers used:
 18036 ;;		wreg
 18037 ;; Tracked objects:
 18038 ;;		On entry : 1F/0
 18039 ;;		On exit  : 1F/2
 18040 ;;		Unchanged: 0/0
 18041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18042 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18045 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18046 ;;Total ram usage:        2 bytes
 18047 ;; Hardware stack levels used:    1
 18048 ;; Hardware stack levels required when called:    7
 18049 ;; This function calls:
 18050 ;;		Nothing
 18051 ;; This function is called by:
 18052 ;;		_TMR1_Initialize
 18053 ;; This function uses a non-reentrant model
 18054 ;;
 18055                           
 18056                           
 18057                           ;psect for function _TMR1_SetInterruptHandler
 18058  26B9                     _TMR1_SetInterruptHandler:
 18059                           
 18060                           ;mcc_generated_files/tmr1.c: 368:     TMR1_InterruptHandler = InterruptHandler;
 18061                           
 18062                           ;incstack = 0
 18063                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 18064  26B9  0824               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 18065  26BA  0022               	movlb	2	; select bank2
 18066  26BB  00AF               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
 18067  26BC  0020               	movlb	0	; select bank0
 18068  26BD  0823               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 18069  26BE  0022               	movlb	2	; select bank2
 18070  26BF  00AE               	movwf	_TMR1_InterruptHandler^(0+256)
 18071  26C0  0008               	return
 18072  26C1                     __end_of_TMR1_SetInterruptHandler:
 18073                           
 18074                           	psect	text70
 18075  26B1                     __ptext70:	
 18076 ;; *************** function _PMD_Initialize *****************
 18077 ;; Defined at:
 18078 ;;		line 85 in file "mcc_generated_files/mcc.c"
 18079 ;; Parameters:    Size  Location     Type
 18080 ;;		None
 18081 ;; Auto vars:     Size  Location     Type
 18082 ;;		None
 18083 ;; Return value:  Size  Location     Type
 18084 ;;                  1    wreg      void 
 18085 ;; Registers used:
 18086 ;;		status,2
 18087 ;; Tracked objects:
 18088 ;;		On entry : B1F/0
 18089 ;;		On exit  : B1F/12
 18090 ;;		Unchanged: B00/0
 18091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18096 ;;Total ram usage:        0 bytes
 18097 ;; Hardware stack levels used:    1
 18098 ;; Hardware stack levels required when called:    7
 18099 ;; This function calls:
 18100 ;;		Nothing
 18101 ;; This function is called by:
 18102 ;;		_SYSTEM_Initialize
 18103 ;; This function uses a non-reentrant model
 18104 ;;
 18105                           
 18106                           
 18107                           ;psect for function _PMD_Initialize
 18108  26B1                     _PMD_Initialize:
 18109                           
 18110                           ;mcc_generated_files/mcc.c: 88:     PMD0 = 0x00;
 18111                           
 18112                           ;incstack = 0
 18113                           ; Regs used in _PMD_Initialize: [status,2]
 18114  26B1  0032               	movlb	18	; select bank18
 18115  26B2  0191               	clrf	17	;volatile
 18116                           
 18117                           ;mcc_generated_files/mcc.c: 90:     PMD1 = 0x00;
 18118  26B3  0192               	clrf	18	;volatile
 18119                           
 18120                           ;mcc_generated_files/mcc.c: 92:     PMD2 = 0x00;
 18121  26B4  0193               	clrf	19	;volatile
 18122                           
 18123                           ;mcc_generated_files/mcc.c: 94:     PMD3 = 0x00;
 18124  26B5  0194               	clrf	20	;volatile
 18125                           
 18126                           ;mcc_generated_files/mcc.c: 96:     PMD4 = 0x00;
 18127  26B6  0195               	clrf	21	;volatile
 18128                           
 18129                           ;mcc_generated_files/mcc.c: 98:     PMD5 = 0x00;
 18130  26B7  0196               	clrf	22	;volatile
 18131  26B8  0008               	return
 18132  26B9                     __end_of_PMD_Initialize:
 18133                           
 18134                           	psect	text71
 18135  0802                     __ptext71:	
 18136 ;; *************** function _PIN_MANAGER_Initialize *****************
 18137 ;; Defined at:
 18138 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 18139 ;; Parameters:    Size  Location     Type
 18140 ;;		None
 18141 ;; Auto vars:     Size  Location     Type
 18142 ;;		None
 18143 ;; Return value:  Size  Location     Type
 18144 ;;                  1    wreg      void 
 18145 ;; Registers used:
 18146 ;;		wreg, status,2
 18147 ;; Tracked objects:
 18148 ;;		On entry : B1F/4
 18149 ;;		On exit  : B1F/1C
 18150 ;;		Unchanged: B00/0
 18151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18156 ;;Total ram usage:        0 bytes
 18157 ;; Hardware stack levels used:    1
 18158 ;; Hardware stack levels required when called:    7
 18159 ;; This function calls:
 18160 ;;		Nothing
 18161 ;; This function is called by:
 18162 ;;		_SYSTEM_Initialize
 18163 ;; This function uses a non-reentrant model
 18164 ;;
 18165                           
 18166                           
 18167                           ;psect for function _PIN_MANAGER_Initialize
 18168  0802                     _PIN_MANAGER_Initialize:
 18169                           
 18170                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
 18171                           
 18172                           ;incstack = 0
 18173                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 18174  0802  0022               	movlb	2	; select bank2
 18175  0803  018C               	clrf	12	;volatile
 18176                           
 18177                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x80;
 18178  0804  3080               	movlw	128
 18179  0805  008D               	movwf	13	;volatile
 18180                           
 18181                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
 18182  0806  018E               	clrf	14	;volatile
 18183                           
 18184                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x38;
 18185  0807  3038               	movlw	56
 18186  0808  0021               	movlb	1	; select bank1
 18187  0809  008C               	movwf	12	;volatile
 18188                           
 18189                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
 18190  080A  3070               	movlw	112
 18191  080B  008D               	movwf	13	;volatile
 18192                           
 18193                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x00;
 18194  080C  018E               	clrf	14	;volatile
 18195                           
 18196                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x00;
 18197  080D  0023               	movlb	3	; select bank3
 18198  080E  018E               	clrf	14	;volatile
 18199                           
 18200                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
 18201  080F  018D               	clrf	13	;volatile
 18202                           
 18203                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x00;
 18204  0810  018C               	clrf	12	;volatile
 18205                           
 18206                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0xF0;
 18207  0811  30F0               	movlw	240
 18208  0812  0024               	movlb	4	; select bank4
 18209  0813  008D               	movwf	13	;volatile
 18210                           
 18211                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x38;
 18212  0814  3038               	movlw	56
 18213  0815  008C               	movwf	12	;volatile
 18214                           
 18215                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
 18216  0816  018E               	clrf	14	;volatile
 18217                           
 18218                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
 18219  0817  0025               	movlb	5	; select bank5
 18220  0818  018C               	clrf	12	;volatile
 18221                           
 18222                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0xD0;
 18223  0819  30D0               	movlw	208
 18224  081A  008D               	movwf	13	;volatile
 18225                           
 18226                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
 18227  081B  018E               	clrf	14	;volatile
 18228                           
 18229                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x38;
 18230  081C  3038               	movlw	56
 18231  081D  0026               	movlb	6	; select bank6
 18232  081E  008C               	movwf	12	;volatile
 18233                           
 18234                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
 18235  081F  30F0               	movlw	240
 18236  0820  008D               	movwf	13	;volatile
 18237                           
 18238                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
 18239  0821  30FF               	movlw	255
 18240  0822  008E               	movwf	14	;volatile
 18241                           
 18242                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
 18243  0823  303F               	movlw	63
 18244  0824  0027               	movlb	7	; select bank7
 18245  0825  008C               	movwf	12	;volatile
 18246                           
 18247                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
 18248  0826  30F0               	movlw	240
 18249  0827  008D               	movwf	13	;volatile
 18250                           
 18251                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
 18252  0828  30FF               	movlw	255
 18253  0829  008E               	movwf	14	;volatile
 18254                           
 18255                           ;mcc_generated_files/pin_manager.c: 110:     SSP1CLKPPS = 0x0E;
 18256  082A  300E               	movlw	14
 18257  082B  003C               	movlb	28	; select bank28
 18258  082C  00A0               	movwf	32	;volatile
 18259                           
 18260                           ;mcc_generated_files/pin_manager.c: 111:     RB6PPS = 0x18;
 18261  082D  3018               	movlw	24
 18262  082E  003D               	movlb	29	; select bank29
 18263  082F  009E               	movwf	30	;volatile
 18264                           
 18265                           ;mcc_generated_files/pin_manager.c: 112:     RB4PPS = 0x19;
 18266  0830  3019               	movlw	25
 18267  0831  009C               	movwf	28	;volatile
 18268                           
 18269                           ;mcc_generated_files/pin_manager.c: 113:     SSP1DATPPS = 0x0C;
 18270  0832  300C               	movlw	12
 18271  0833  003C               	movlb	28	; select bank28
 18272  0834  00A1               	movwf	33	;volatile
 18273  0835  0008               	return
 18274  0836                     __end_of_PIN_MANAGER_Initialize:
 18275                           
 18276                           	psect	text72
 18277  26DB                     __ptext72:	
 18278 ;; *************** function _OSCILLATOR_Initialize *****************
 18279 ;; Defined at:
 18280 ;;		line 61 in file "mcc_generated_files/mcc.c"
 18281 ;; Parameters:    Size  Location     Type
 18282 ;;		None
 18283 ;; Auto vars:     Size  Location     Type
 18284 ;;		None
 18285 ;; Return value:  Size  Location     Type
 18286 ;;                  1    wreg      void 
 18287 ;; Registers used:
 18288 ;;		wreg, status,2
 18289 ;; Tracked objects:
 18290 ;;		On entry : B1F/1C
 18291 ;;		On exit  : B1F/12
 18292 ;;		Unchanged: B00/0
 18293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18298 ;;Total ram usage:        0 bytes
 18299 ;; Hardware stack levels used:    1
 18300 ;; Hardware stack levels required when called:    7
 18301 ;; This function calls:
 18302 ;;		Nothing
 18303 ;; This function is called by:
 18304 ;;		_SYSTEM_Initialize
 18305 ;; This function uses a non-reentrant model
 18306 ;;
 18307                           
 18308                           
 18309                           ;psect for function _OSCILLATOR_Initialize
 18310  26DB                     _OSCILLATOR_Initialize:
 18311                           
 18312                           ;mcc_generated_files/mcc.c: 64:     OSCCON1 = 0x00;
 18313                           
 18314                           ;incstack = 0
 18315                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 18316  26DB  0032               	movlb	18	; select bank18
 18317  26DC  0199               	clrf	25	;volatile
 18318                           
 18319                           ;mcc_generated_files/mcc.c: 66:     OSCCON3 = 0x00;
 18320  26DD  019B               	clrf	27	;volatile
 18321                           
 18322                           ;mcc_generated_files/mcc.c: 68:     OSCEN = 0x00;
 18323  26DE  019D               	clrf	29	;volatile
 18324                           
 18325                           ;mcc_generated_files/mcc.c: 70:     OSCFRQ = 0x06;
 18326  26DF  3006               	movlw	6
 18327  26E0  009F               	movwf	31	;volatile
 18328                           
 18329                           ;mcc_generated_files/mcc.c: 72:     OSCTUNE = 0x00;
 18330  26E1  019E               	clrf	30	;volatile
 18331  26E2                     l850:	
 18332                           ;mcc_generated_files/mcc.c: 75:     {;mcc_generated_files/mcc.c: 76:     }
 18333                           
 18334                           
 18335                           ;mcc_generated_files/mcc.c: 74:     while(PLLR == 0)
 18336  26E2  181C               	btfsc	28,0	;volatile
 18337  26E3  0008               	return
 18338  26E4  2EE2               	goto	l850
 18339  26E5                     __end_of_OSCILLATOR_Initialize:
 18340                           
 18341                           	psect	text73
 18342  26C9                     __ptext73:	
 18343 ;; *************** function _I2C1_Initialize *****************
 18344 ;; Defined at:
 18345 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 18346 ;; Parameters:    Size  Location     Type
 18347 ;;		None
 18348 ;; Auto vars:     Size  Location     Type
 18349 ;;		None
 18350 ;; Return value:  Size  Location     Type
 18351 ;;                  1    wreg      void 
 18352 ;; Registers used:
 18353 ;;		wreg, status,2
 18354 ;; Tracked objects:
 18355 ;;		On entry : B1F/12
 18356 ;;		On exit  : B1F/4
 18357 ;;		Unchanged: B00/0
 18358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18363 ;;Total ram usage:        0 bytes
 18364 ;; Hardware stack levels used:    1
 18365 ;; Hardware stack levels required when called:    7
 18366 ;; This function calls:
 18367 ;;		Nothing
 18368 ;; This function is called by:
 18369 ;;		_SYSTEM_Initialize
 18370 ;; This function uses a non-reentrant model
 18371 ;;
 18372                           
 18373                           
 18374                           ;psect for function _I2C1_Initialize
 18375  26C9                     _I2C1_Initialize:
 18376                           
 18377                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 18378                           
 18379                           ;incstack = 0
 18380                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 18381  26C9  0024               	movlb	4	; select bank4
 18382  26CA  0194               	clrf	20	;volatile
 18383                           
 18384                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 18385  26CB  3008               	movlw	8
 18386  26CC  0095               	movwf	21	;volatile
 18387                           
 18388                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 18389  26CD  0196               	clrf	22	;volatile
 18390                           
 18391                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1ADD = 0x4F;
 18392  26CE  304F               	movlw	79
 18393  26CF  0092               	movwf	18	;volatile
 18394                           
 18395                           ;mcc_generated_files/i2c1_master.c: 174:     SSP1CON1bits.SSPEN = 0;
 18396  26D0  1295               	bcf	21,5	;volatile
 18397  26D1  0008               	return
 18398  26D2                     __end_of_I2C1_Initialize:
 18399                           
 18400                           	psect	text74
 18401  1B00                     __ptext74:	
 18402 ;; *************** function _DATAEE_WriteByte *****************
 18403 ;; Defined at:
 18404 ;;		line 180 in file "mcc_generated_files/memory.c"
 18405 ;; Parameters:    Size  Location     Type
 18406 ;;  bAdd            2    9[BANK0 ] unsigned short 
 18407 ;;  bData           1   11[BANK0 ] unsigned char 
 18408 ;; Auto vars:     Size  Location     Type
 18409 ;;  GIEBitValue     1   12[BANK0 ] unsigned char 
 18410 ;; Return value:  Size  Location     Type
 18411 ;;                  1    wreg      void 
 18412 ;; Registers used:
 18413 ;;		wreg, status,2, status,0
 18414 ;; Tracked objects:
 18415 ;;		On entry : 1F/0
 18416 ;;		On exit  : 1F/0
 18417 ;;		Unchanged: 0/0
 18418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18419 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18420 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18422 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18423 ;;Total ram usage:        4 bytes
 18424 ;; Hardware stack levels used:    1
 18425 ;; Hardware stack levels required when called:    7
 18426 ;; This function calls:
 18427 ;;		Nothing
 18428 ;; This function is called by:
 18429 ;;		_main
 18430 ;; This function uses a non-reentrant model
 18431 ;;
 18432                           
 18433                           
 18434                           ;psect for function _DATAEE_WriteByte
 18435  1B00                     _DATAEE_WriteByte:
 18436                           
 18437                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 18438                           
 18439                           ;incstack = 0
 18440                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 18441  1B00  3000               	movlw	0
 18442  1B01  1B8B               	btfsc	11,7	;volatile
 18443  1B02  3001               	movlw	1
 18444  1B03  00AC               	movwf	DATAEE_WriteByte@GIEBitValue
 18445                           
 18446                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 18447  1B04  082A               	movf	DATAEE_WriteByte@bAdd+1,w
 18448  1B05  0031               	movlb	17	; select bank17
 18449  1B06  0092               	movwf	18	;volatile
 18450                           
 18451                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 18452  1B07  0020               	movlb	0	; select bank0
 18453  1B08  0829               	movf	DATAEE_WriteByte@bAdd,w
 18454  1B09  0031               	movlb	17	; select bank17
 18455  1B0A  0091               	movwf	17	;volatile
 18456                           
 18457                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 18458  1B0B  0020               	movlb	0	; select bank0
 18459  1B0C  082B               	movf	DATAEE_WriteByte@bData,w
 18460  1B0D  0031               	movlb	17	; select bank17
 18461  1B0E  0093               	movwf	19	;volatile
 18462                           
 18463                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 18464  1B0F  1715               	bsf	21,6	;volsfr
 18465                           
 18466                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 18467  1B10  1515               	bsf	21,2	;volsfr
 18468                           
 18469                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 18470  1B11  138B               	bcf	11,7	;volatile
 18471                           
 18472                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 18473  1B12  3055               	movlw	85
 18474  1B13  0096               	movwf	22	;volsfr
 18475                           
 18476                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 18477  1B14  30AA               	movlw	170
 18478  1B15  0096               	movwf	22	;volsfr
 18479                           
 18480                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 18481  1B16  1495               	bsf	21,1	;volsfr
 18482  1B17                     l956:	
 18483                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 18484                           
 18485                           
 18486                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 18487  1B17  1895               	btfsc	21,1	;volsfr
 18488  1B18  2B17               	goto	l956
 18489                           
 18490                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 18491  1B19  1115               	bcf	21,2	;volsfr
 18492                           
 18493                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 18494  1B1A  0020               	movlb	0	; select bank0
 18495  1B1B  0C2C               	rrf	DATAEE_WriteByte@GIEBitValue,w
 18496  1B1C  1C03               	skipc
 18497  1B1D  138B               	bcf	11,7	;volatile
 18498  1B1E  1803               	skipnc
 18499  1B1F  178B               	bsf	11,7	;volatile
 18500  1B20  0008               	return
 18501  1B21                     __end_of_DATAEE_WriteByte:
 18502                           
 18503                           	psect	text75
 18504  2722                     __ptext75:	
 18505 ;; *************** function _DATAEE_ReadByte *****************
 18506 ;; Defined at:
 18507 ;;		line 202 in file "mcc_generated_files/memory.c"
 18508 ;; Parameters:    Size  Location     Type
 18509 ;;  bAdd            2    3[BANK0 ] unsigned short 
 18510 ;; Auto vars:     Size  Location     Type
 18511 ;;		None
 18512 ;; Return value:  Size  Location     Type
 18513 ;;                  1    wreg      unsigned char 
 18514 ;; Registers used:
 18515 ;;		wreg
 18516 ;; Tracked objects:
 18517 ;;		On entry : 1F/0
 18518 ;;		On exit  : 1F/11
 18519 ;;		Unchanged: 0/0
 18520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18521 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18525 ;;Total ram usage:        2 bytes
 18526 ;; Hardware stack levels used:    1
 18527 ;; Hardware stack levels required when called:    7
 18528 ;; This function calls:
 18529 ;;		Nothing
 18530 ;; This function is called by:
 18531 ;;		_main
 18532 ;; This function uses a non-reentrant model
 18533 ;;
 18534                           
 18535                           
 18536                           ;psect for function _DATAEE_ReadByte
 18537  2722                     _DATAEE_ReadByte:
 18538                           
 18539                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 18540                           
 18541                           ;incstack = 0
 18542                           ; Regs used in _DATAEE_ReadByte: [wreg]
 18543  2722  0824               	movf	DATAEE_ReadByte@bAdd+1,w
 18544  2723  0031               	movlb	17	; select bank17
 18545  2724  0092               	movwf	18	;volatile
 18546                           
 18547                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 18548  2725  0020               	movlb	0	; select bank0
 18549  2726  0823               	movf	DATAEE_ReadByte@bAdd,w
 18550  2727  0031               	movlb	17	; select bank17
 18551  2728  0091               	movwf	17	;volatile
 18552                           
 18553                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 18554  2729  1715               	bsf	21,6	;volsfr
 18555                           
 18556                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 18557  272A  1415               	bsf	21,0	;volsfr
 18558                           
 18559                           ;mcc_generated_files/memory.c: 208:     __nop();
 18560  272B  0000               	nop
 18561                           
 18562                           ;mcc_generated_files/memory.c: 209:     __nop();
 18563  272C  0000               	nop
 18564                           
 18565                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 18566  272D  0031               	movlb	17	; select bank17
 18567  272E  0813               	movf	19,w	;volatile
 18568  272F  0008               	return
 18569  2730                     __end_of_DATAEE_ReadByte:
 18570                           
 18571                           	psect	intentry
 18572  0004                     __pintentry:	
 18573 ;; *************** function _INTERRUPT_InterruptManager *****************
 18574 ;; Defined at:
 18575 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18576 ;; Parameters:    Size  Location     Type
 18577 ;;		None
 18578 ;; Auto vars:     Size  Location     Type
 18579 ;;		None
 18580 ;; Return value:  Size  Location     Type
 18581 ;;                  1    wreg      void 
 18582 ;; Registers used:
 18583 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18584 ;; Tracked objects:
 18585 ;;		On entry : 0/0
 18586 ;;		On exit  : 0/0
 18587 ;;		Unchanged: 0/0
 18588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18593 ;;Total ram usage:        0 bytes
 18594 ;; Hardware stack levels used:    1
 18595 ;; Hardware stack levels required when called:    6
 18596 ;; This function calls:
 18597 ;;		Absolute function
 18598 ;;		_I2C1_MasterIsr
 18599 ;;		_TMR1_ISR
 18600 ;; This function is called by:
 18601 ;;		Interrupt level 1
 18602 ;; This function uses a non-reentrant model
 18603 ;;
 18604                           
 18605  0004                     _INTERRUPT_InterruptManager:
 18606                           
 18607                           ;incstack = 0
 18608  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 18609                           
 18610                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18611  0005  3180               	pagesel	$
 18612                           
 18613                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 18614  0006  1F0B               	btfss	11,6	;volatile
 18615  0007  2823               	goto	i1l804
 18616                           
 18617                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
 18618  0008  0021               	movlb	1	; select bank1
 18619  0009  1C11               	btfss	17,0	;volatile
 18620  000A  2812               	goto	i1l797
 18621  000B  0020               	movlb	0	; select bank0
 18622  000C  1C11               	btfss	17,0	;volatile
 18623  000D  2812               	goto	i1l797
 18624                           
 18625                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 18626  000E  31A7  275B  3180   	fcall	_TMR1_ISR
 18627                           
 18628                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 18629  0011  2823               	goto	i1l804
 18630  0012                     i1l797:	
 18631                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.SSP1IE == 1 && PI
      +                          R1bits.SSP1IF == 1)
 18632                           
 18633  0012  0021               	movlb	1	; select bank1
 18634  0013  1991               	btfsc	17,3	;volatile
 18635  0014  0020               	movlb	0	; select bank0
 18636  0015  1991               	btfsc	17,3	;volatile
 18637  0016  281D               	goto	i1l8103
 18638                           
 18639                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.BCL1IE == 1 && PI
      +                          R1bits.BCL1IF == 1)
 18640                           
 18641                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 18642  0017  0021               	movlb	1	; select bank1
 18643  0018  1D11               	btfss	17,2	;volatile
 18644  0019  2823               	goto	i1l804
 18645  001A  0020               	movlb	0	; select bank0
 18646  001B  1D11               	btfss	17,2	;volatile
 18647  001C  2823               	goto	i1l804
 18648  001D                     i1l8103:
 18649                           
 18650                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             MSSP1_InterruptHandler();
 18651  001D  0022               	movlb	2	; select bank2
 18652  001E  0833               	movf	(_MSSP1_InterruptHandler+1)^(0+256),w
 18653  001F  008A               	movwf	10
 18654  0020  0832               	movf	_MSSP1_InterruptHandler^(0+256),w
 18655  0021  000A               	callw
 18656  0022  3180               	pagesel	$
 18657  0023                     i1l804:	
 18658                           ;mcc_generated_files/interrupt_manager.c: 73:     }
 18659                           
 18660  0023  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 18661  0024  0009               	retfie
 18662  0025                     __end_of_INTERRUPT_InterruptManager:
 18663                           
 18664                           	psect	text77
 18665  275B                     __ptext77:	
 18666 ;; *************** function _TMR1_ISR *****************
 18667 ;; Defined at:
 18668 ;;		line 353 in file "mcc_generated_files/tmr1.c"
 18669 ;; Parameters:    Size  Location     Type
 18670 ;;		None
 18671 ;; Auto vars:     Size  Location     Type
 18672 ;;		None
 18673 ;; Return value:  Size  Location     Type
 18674 ;;                  1    wreg      void 
 18675 ;; Registers used:
 18676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18677 ;; Tracked objects:
 18678 ;;		On entry : 1F/0
 18679 ;;		On exit  : 0/0
 18680 ;;		Unchanged: 0/0
 18681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18686 ;;Total ram usage:        0 bytes
 18687 ;; Hardware stack levels used:    1
 18688 ;; Hardware stack levels required when called:    2
 18689 ;; This function calls:
 18690 ;;		Absolute function
 18691 ;;		_TMR1_DefaultInterruptHandler
 18692 ;;		_TMR1_WriteTimer
 18693 ;; This function is called by:
 18694 ;;		_INTERRUPT_InterruptManager
 18695 ;; This function uses a non-reentrant model
 18696 ;;
 18697                           
 18698                           
 18699                           ;psect for function _TMR1_ISR
 18700  275B                     _TMR1_ISR:
 18701                           
 18702                           ;mcc_generated_files/tmr1.c: 357:     PIR1bits.TMR1IF = 0;
 18703                           
 18704                           ;incstack = 0
 18705                           ; Regs used in _TMR1_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18706  275B  1011               	bcf	17,0	;volatile
 18707                           
 18708                           ;mcc_generated_files/tmr1.c: 358:     TMR1_WriteTimer(timer1ReloadVal);
 18709  275C  0022               	movlb	2	; select bank2
 18710  275D  0831               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 18711  275E  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 18712  275F  0830               	movf	_timer1ReloadVal^(0+256),w	;volatile
 18713  2760  00F0               	movwf	TMR1_WriteTimer@timerVal
 18714  2761  31A7  274C  31A7   	fcall	_TMR1_WriteTimer
 18715                           
 18716                           ;mcc_generated_files/tmr1.c: 360:     if(TMR1_InterruptHandler)
 18717  2764  0022               	movlb	2	; select bank2
 18718  2765  082E               	movf	_TMR1_InterruptHandler^(0+256),w
 18719  2766  042F               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 18720  2767  1903               	btfsc	3,2
 18721  2768  0008               	return
 18722                           
 18723                           ;mcc_generated_files/tmr1.c: 361:     {;mcc_generated_files/tmr1.c: 362:         TMR1_In
      +                          terruptHandler();
 18724  2769  082F               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 18725  276A  008A               	movwf	10
 18726  276B  082E               	movf	_TMR1_InterruptHandler^(0+256),w
 18727  276C  000A               	callw
 18728  276D  31A7               	pagesel	$
 18729  276E  0008               	return
 18730  276F                     __end_of_TMR1_ISR:
 18731                           
 18732                           	psect	text78
 18733  274C                     __ptext78:	
 18734 ;; *************** function _TMR1_WriteTimer *****************
 18735 ;; Defined at:
 18736 ;;		line 239 in file "mcc_generated_files/tmr1.c"
 18737 ;; Parameters:    Size  Location     Type
 18738 ;;  timerVal        2    0[COMMON] unsigned short 
 18739 ;; Auto vars:     Size  Location     Type
 18740 ;;		None
 18741 ;; Return value:  Size  Location     Type
 18742 ;;                  1    wreg      void 
 18743 ;; Registers used:
 18744 ;;		wreg
 18745 ;; Tracked objects:
 18746 ;;		On entry : 1F/2
 18747 ;;		On exit  : 1F/0
 18748 ;;		Unchanged: 0/0
 18749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18753 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18754 ;;Total ram usage:        2 bytes
 18755 ;; Hardware stack levels used:    1
 18756 ;; This function calls:
 18757 ;;		Nothing
 18758 ;; This function is called by:
 18759 ;;		_TMR1_ISR
 18760 ;; This function uses a non-reentrant model
 18761 ;;
 18762                           
 18763                           
 18764                           ;psect for function _TMR1_WriteTimer
 18765  274C                     _TMR1_WriteTimer:
 18766                           
 18767                           ;mcc_generated_files/tmr1.c: 239: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 240: {;mcc_generated_files/tmr1.c: 241:     if (T1CONbits.T1SYNC == 1)
 18768                           
 18769                           ;incstack = 0
 18770                           ; Regs used in _TMR1_WriteTimer: [wreg]
 18771  274C  0020               	movlb	0	; select bank0
 18772  274D  1D1B               	btfss	27,2	;volatile
 18773  274E  2F56               	goto	i1l5709
 18774                           
 18775                           ;mcc_generated_files/tmr1.c: 242:     {;mcc_generated_files/tmr1.c: 244:         T1CONbi
      +                          ts.TMR1ON = 0;
 18776  274F  101B               	bcf	27,0	;volatile
 18777                           
 18778                           ;mcc_generated_files/tmr1.c: 247:         TMR1H = (timerVal >> 8);
 18779  2750  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18780  2751  009A               	movwf	26	;volatile
 18781                           
 18782                           ;mcc_generated_files/tmr1.c: 248:         TMR1L = timerVal;
 18783  2752  0870               	movf	TMR1_WriteTimer@timerVal,w
 18784  2753  0099               	movwf	25	;volatile
 18785                           
 18786                           ;mcc_generated_files/tmr1.c: 251:         T1CONbits.TMR1ON =1;
 18787  2754  141B               	bsf	27,0	;volatile
 18788                           
 18789                           ;mcc_generated_files/tmr1.c: 252:     }
 18790  2755  0008               	return
 18791  2756                     i1l5709:
 18792                           
 18793                           ;mcc_generated_files/tmr1.c: 254:     {;mcc_generated_files/tmr1.c: 256:         TMR1H =
      +                           (timerVal >> 8);
 18794  2756  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18795  2757  009A               	movwf	26	;volatile
 18796                           
 18797                           ;mcc_generated_files/tmr1.c: 257:         TMR1L = timerVal;
 18798  2758  0870               	movf	TMR1_WriteTimer@timerVal,w
 18799  2759  0099               	movwf	25	;volatile
 18800  275A  0008               	return
 18801  275B                     __end_of_TMR1_WriteTimer:
 18802                           
 18803                           	psect	text79
 18804  15A2                     __ptext79:	
 18805 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18806 ;; Defined at:
 18807 ;;		line 372 in file "mcc_generated_files/tmr1.c"
 18808 ;; Parameters:    Size  Location     Type
 18809 ;;		None
 18810 ;; Auto vars:     Size  Location     Type
 18811 ;;		None
 18812 ;; Return value:  Size  Location     Type
 18813 ;;                  1    wreg      void 
 18814 ;; Registers used:
 18815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18816 ;; Tracked objects:
 18817 ;;		On entry : 1F/2
 18818 ;;		On exit  : 1F/2
 18819 ;;		Unchanged: 0/0
 18820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18823 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18824 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18825 ;;Total ram usage:        2 bytes
 18826 ;; Hardware stack levels used:    1
 18827 ;; Hardware stack levels required when called:    1
 18828 ;; This function calls:
 18829 ;;		_get7seg_font
 18830 ;;		_read_clickRE
 18831 ;; This function is called by:
 18832 ;;		_TMR1_Initialize
 18833 ;;		_TMR1_ISR
 18834 ;; This function uses a non-reentrant model
 18835 ;;
 18836                           
 18837                           
 18838                           ;psect for function _TMR1_DefaultInterruptHandler
 18839  15A2                     _TMR1_DefaultInterruptHandler:
 18840                           
 18841                           ;mcc_generated_files/tmr1.c: 376: static unsigned char led_blink[]={0, 0, 0};;mcc_genera
      +                          ted_files/tmr1.c: 377: static unsigned char intcnt;;mcc_generated_files/tmr1.c: 378: sta
      +                          tic unsigned int pushcnt = 0;;mcc_generated_files/tmr1.c: 379: static unsigned char push
      +                          stat = 0;;mcc_generated_files/tmr1.c: 380: static signed char RE_offset;;mcc_generated_f
      +                          iles/tmr1.c: 382: switch ( intcnt++)
 18842                           
 18843                           ;incstack = 0
 18844                           ; Regs used in _TMR1_DefaultInterruptHandler: [wreg-fsr0h+status,2+status,0+pclath+cstac
      +                          k]
 18845  15A2  2DD9               	goto	i1l5727
 18846  15A3                     i1l377:	
 18847                           ;mcc_generated_files/tmr1.c: 385:             {;mcc_generated_files/tmr1.c: 386:        
      +                                do { LATAbits.LATA2 = 0; } while(0);
 18848                           
 18849  15A3  110C               	bcf	12,2	;volatile
 18850                           
 18851                           ;mcc_generated_files/tmr1.c: 387:              if(led_blink[0] < 0xc0)
 18852  15A4  30C0               	movlw	192
 18853  15A5  0220               	subwf	TMR1_DefaultInterruptHandler@led_blink^(0+256),w
 18854  15A6  1803               	skipnc
 18855  15A7  2DAA               	goto	i1l383
 18856                           
 18857                           ;mcc_generated_files/tmr1.c: 388:                     do { LATAbits.LATA0 = 1; } while(0
      +                          );
 18858  15A8  140C               	bsf	12,0	;volatile
 18859  15A9  2DAB               	goto	i1l5715
 18860  15AA                     i1l383:
 18861  15AA  100C               	bcf	12,0	;volatile
 18862  15AB                     i1l5715:
 18863                           
 18864                           ;mcc_generated_files/tmr1.c: 390:             PORTC = led_dot[0] & get7seg_font(ledbuff[
      +                          0]);
 18865  15AB  0024               	movlb	4	; select bank4
 18866  15AC  082C               	movf	_ledbuff^(0+512),w
 18867  15AD  3199  2145  3195   	fcall	_get7seg_font
 18868  15B0  0023               	movlb	3	; select bank3
 18869  15B1  0520               	andwf	_led_dot^(0+384),w
 18870  15B2  2DC2               	goto	L11
 18871  15B3                     i1l387:	
 18872                           ;mcc_generated_files/tmr1.c: 394:            {;mcc_generated_files/tmr1.c: 395:         
      +                             do { LATAbits.LATA0 = 0; } while(0);
 18873                           
 18874                           ;mcc_generated_files/tmr1.c: 391:             break;
 18875                           
 18876  15B3  100C               	bcf	12,0	;volatile
 18877                           
 18878                           ;mcc_generated_files/tmr1.c: 396:            if(led_blink[1] < 0xc0)
 18879  15B4  30C0               	movlw	192
 18880  15B5  0221               	subwf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+1),w
 18881  15B6  1803               	skipnc
 18882  15B7  2DBA               	goto	i1l393
 18883                           
 18884                           ;mcc_generated_files/tmr1.c: 397:                       do { LATAbits.LATA1 = 1; } while
      +                          (0);
 18885  15B8  148C               	bsf	12,1	;volatile
 18886  15B9  2DBB               	goto	i1l5719
 18887  15BA                     i1l393:
 18888  15BA  108C               	bcf	12,1	;volatile
 18889  15BB                     i1l5719:
 18890                           
 18891                           ;mcc_generated_files/tmr1.c: 399:             PORTC = led_dot[1] & get7seg_font(ledbuff[
      +                          1]);
 18892  15BB  0024               	movlb	4	; select bank4
 18893  15BC  082D               	movf	(_ledbuff^(0+512)+1),w
 18894  15BD  3199  2145  3195   	fcall	_get7seg_font
 18895  15C0  0023               	movlb	3	; select bank3
 18896  15C1  0521               	andwf	(_led_dot^(0+384)+1),w
 18897  15C2                     L11:
 18898  15C2  0020               	movlb	0	; select bank0
 18899  15C3  008E               	movwf	14	;volatile
 18900                           
 18901                           ;mcc_generated_files/tmr1.c: 400:             break;
 18902  15C4  2DED               	goto	i1l5729
 18903  15C5                     i1l396:	
 18904                           ;mcc_generated_files/tmr1.c: 403:            {;mcc_generated_files/tmr1.c: 404:         
      +                             do { LATAbits.LATA1 = 0; } while(0);
 18905                           
 18906  15C5  108C               	bcf	12,1	;volatile
 18907                           
 18908                           ;mcc_generated_files/tmr1.c: 405:            if(led_blink[0] < 0xc0)
 18909  15C6  30C0               	movlw	192
 18910  15C7  0220               	subwf	TMR1_DefaultInterruptHandler@led_blink^(0+256),w
 18911  15C8  1803               	skipnc
 18912  15C9  2DCC               	goto	i1l402
 18913                           
 18914                           ;mcc_generated_files/tmr1.c: 406:                       do { LATAbits.LATA2 = 1; } while
      +                          (0);
 18915  15CA  150C               	bsf	12,2	;volatile
 18916  15CB  2DCD               	goto	i1l5723
 18917  15CC                     i1l402:
 18918  15CC  110C               	bcf	12,2	;volatile
 18919  15CD                     i1l5723:
 18920                           
 18921                           ;mcc_generated_files/tmr1.c: 408:             PORTC = led_dot[2] & get7seg_font(ledbuff[
      +                          2]);
 18922  15CD  0024               	movlb	4	; select bank4
 18923  15CE  082E               	movf	(_ledbuff^(0+512)+2),w
 18924  15CF  3199  2145  3195   	fcall	_get7seg_font
 18925  15D2  0023               	movlb	3	; select bank3
 18926  15D3  0522               	andwf	(_led_dot^(0+384)+2),w
 18927  15D4  0020               	movlb	0	; select bank0
 18928  15D5  008E               	movwf	14	;volatile
 18929  15D6                     i1l5725:
 18930                           
 18931                           ;mcc_generated_files/tmr1.c: 411:           intcnt = 0;
 18932  15D6  0022               	movlb	2	; select bank2
 18933  15D7  01C4               	clrf	TMR1_DefaultInterruptHandler@intcnt^(0+256)
 18934                           
 18935                           ;mcc_generated_files/tmr1.c: 412:         }
 18936  15D8  2DED               	goto	i1l5729
 18937  15D9                     i1l5727:
 18938  15D9  0844               	movf	TMR1_DefaultInterruptHandler@intcnt^(0+256),w
 18939  15DA  0AC4               	incf	TMR1_DefaultInterruptHandler@intcnt^(0+256),f
 18940  15DB  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 18941  15DC  01F6               	clrf	??_TMR1_DefaultInterruptHandler+1
 18942                           
 18943                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18944                           ; Switch size 1, requested type "simple"
 18945                           ; Number of cases is 1, Range of values is 0 to 0
 18946                           ; switch strategies available:
 18947                           ; Name         Instructions Cycles
 18948                           ; simple_byte            4     3 (average)
 18949                           ; direct_byte            8     6 (fixed)
 18950                           ; jumptable            260     6 (fixed)
 18951                           ;	Chosen strategy is simple_byte
 18952  15DD  0876               	movf	??_TMR1_DefaultInterruptHandler+1,w
 18953  15DE  3A00               	xorlw	0	; case 0
 18954  15DF  1903               	skipnz
 18955  15E0  2DE2               	goto	i1l8687
 18956  15E1  2DD6               	goto	i1l5725
 18957  15E2                     i1l8687:
 18958                           
 18959                           ; Switch size 1, requested type "simple"
 18960                           ; Number of cases is 3, Range of values is 0 to 2
 18961                           ; switch strategies available:
 18962                           ; Name         Instructions Cycles
 18963                           ; simple_byte           10     6 (average)
 18964                           ; direct_byte           12     6 (fixed)
 18965                           ; jumptable            260     6 (fixed)
 18966                           ;	Chosen strategy is simple_byte
 18967  15E2  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 18968  15E3  3A00               	xorlw	0	; case 0
 18969  15E4  1903               	skipnz
 18970  15E5  2DA3               	goto	i1l377
 18971  15E6  3A01               	xorlw	1	; case 1
 18972  15E7  1903               	skipnz
 18973  15E8  2DB3               	goto	i1l387
 18974  15E9  3A03               	xorlw	3	; case 2
 18975  15EA  1903               	skipnz
 18976  15EB  2DC5               	goto	i1l396
 18977  15EC  2DD6               	goto	i1l5725
 18978  15ED                     i1l5729:
 18979                           
 18980                           ;mcc_generated_files/tmr1.c: 413: RE_offset =read_clickRE();
 18981  15ED  319E  262E  3195   	fcall	_read_clickRE
 18982  15F0  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 18983  15F1  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 18984  15F2  00C2               	movwf	TMR1_DefaultInterruptHandler@RE_offset^(0+256)
 18985                           
 18986                           ;mcc_generated_files/tmr1.c: 414: if (RE_offset > 0)
 18987  15F3  0842               	movf	TMR1_DefaultInterruptHandler@RE_offset^(0+256),w
 18988  15F4  3A80               	xorlw	128
 18989  15F5  3E7F               	addlw	-129
 18990  15F6  1C03               	skipc
 18991  15F7  2E0D               	goto	i1l5741
 18992                           
 18993                           ;mcc_generated_files/tmr1.c: 415:          {;mcc_generated_files/tmr1.c: 416:          i
      +                          f (RE_pos > 247)
 18994  15F8  30F8               	movlw	248
 18995  15F9  024A               	subwf	_RE_pos^(0+256),w
 18996  15FA  1C03               	skipc
 18997  15FB  2E08               	goto	i1l5739
 18998                           
 18999                           ;mcc_generated_files/tmr1.c: 417:                 {;mcc_generated_files/tmr1.c: 418:    
      +                                       if (238> (unsigned char)(RE_pos + RE_offset))
 19000  15FC  084A               	movf	_RE_pos^(0+256),w
 19001  15FD  0742               	addwf	TMR1_DefaultInterruptHandler@RE_offset^(0+256),w
 19002  15FE  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 19003  15FF  30EE               	movlw	238
 19004  1600  0275               	subwf	??_TMR1_DefaultInterruptHandler,w
 19005  1601  1803               	skipnc
 19006  1602  2E18               	goto	i1l409
 19007                           
 19008                           ;mcc_generated_files/tmr1.c: 419:                     RE_pos =255;
 19009  1603  30FF               	movlw	255
 19010  1604  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 19011  1605  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 19012  1606  00CA               	movwf	_RE_pos^(0+256)
 19013  1607  2E18               	goto	i1l409
 19014  1608                     i1l5739:
 19015  1608  0842               	movf	TMR1_DefaultInterruptHandler@RE_offset^(0+256),w
 19016  1609  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 19017  160A  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 19018  160B  07CA               	addwf	_RE_pos^(0+256),f
 19019  160C  2E18               	goto	i1l409
 19020  160D                     i1l5741:
 19021                           
 19022                           ;mcc_generated_files/tmr1.c: 424:        {;mcc_generated_files/tmr1.c: 425:          if 
      +                          (RE_pos < 8)
 19023  160D  3008               	movlw	8
 19024  160E  024A               	subwf	_RE_pos^(0+256),w
 19025  160F  1803               	skipnc
 19026  1610  2E08               	goto	i1l5739
 19027                           
 19028                           ;mcc_generated_files/tmr1.c: 426:                 {;mcc_generated_files/tmr1.c: 427:    
      +                                       if (17 < (unsigned char)(RE_pos + RE_offset))
 19029  1611  084A               	movf	_RE_pos^(0+256),w
 19030  1612  0742               	addwf	TMR1_DefaultInterruptHandler@RE_offset^(0+256),w
 19031  1613  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 19032  1614  3012               	movlw	18
 19033  1615  0275               	subwf	??_TMR1_DefaultInterruptHandler,w
 19034  1616  1803               	btfsc	3,0
 19035                           
 19036                           ;mcc_generated_files/tmr1.c: 428:                     RE_pos =0;
 19037  1617  01CA               	clrf	_RE_pos^(0+256)
 19038  1618                     i1l409:	
 19039                           ;mcc_generated_files/tmr1.c: 432:         }
 19040                           
 19041                           
 19042                           ;mcc_generated_files/tmr1.c: 436:  if(blink_rate[0])
 19043  1618  0823               	movf	_blink_rate^(0+256),w
 19044  1619  1903               	btfsc	3,2
 19045  161A  2E20               	goto	i1l5751
 19046                           
 19047                           ;mcc_generated_files/tmr1.c: 437:          led_blink[0] += blink_rate[0];
 19048  161B  0823               	movf	_blink_rate^(0+256),w
 19049  161C  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 19050  161D  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 19051  161E  07A0               	addwf	TMR1_DefaultInterruptHandler@led_blink^(0+256),f
 19052  161F  2E21               	goto	i1l5753
 19053  1620                     i1l5751:
 19054  1620  01A0               	clrf	TMR1_DefaultInterruptHandler@led_blink^(0+256)
 19055  1621                     i1l5753:
 19056                           
 19057                           ;mcc_generated_files/tmr1.c: 439: if(blink_rate[1])
 19058  1621  0824               	movf	(_blink_rate^(0+256)+1),w
 19059  1622  1903               	btfsc	3,2
 19060  1623  2E29               	goto	i1l5757
 19061                           
 19062                           ;mcc_generated_files/tmr1.c: 440:         led_blink[1] += blink_rate[1];
 19063  1624  0824               	movf	(_blink_rate^(0+256)+1),w
 19064  1625  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 19065  1626  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 19066  1627  07A1               	addwf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+1),f
 19067  1628  2E2A               	goto	i1l5759
 19068  1629                     i1l5757:
 19069  1629  01A1               	clrf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+1)
 19070  162A                     i1l5759:
 19071                           
 19072                           ;mcc_generated_files/tmr1.c: 442: if(blink_rate[2])
 19073  162A  0825               	movf	(_blink_rate^(0+256)+2),w
 19074  162B  1903               	btfsc	3,2
 19075  162C  2E32               	goto	i1l5763
 19076                           
 19077                           ;mcc_generated_files/tmr1.c: 443:         led_blink[2] += blink_rate[2];
 19078  162D  0825               	movf	(_blink_rate^(0+256)+2),w
 19079  162E  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 19080  162F  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 19081  1630  07A2               	addwf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+2),f
 19082  1631  2E33               	goto	i1l5765
 19083  1632                     i1l5763:
 19084  1632  01A2               	clrf	(TMR1_DefaultInterruptHandler@led_blink^(0+256)+2)
 19085  1633                     i1l5765:
 19086                           
 19087                           ;mcc_generated_files/tmr1.c: 446: if (PORTAbits.RA3 == 1)
 19088  1633  0020               	movlb	0	; select bank0
 19089  1634  1D8C               	btfss	12,3	;volatile
 19090  1635  2E43               	goto	i1l5775
 19091                           
 19092                           ;mcc_generated_files/tmr1.c: 447:     {;mcc_generated_files/tmr1.c: 448:     if (pushsta
      +                          t !=0)
 19093  1636  0022               	movlb	2	; select bank2
 19094  1637  0843               	movf	TMR1_DefaultInterruptHandler@pushstat^(0+256),w
 19095  1638  1903               	btfsc	3,2
 19096  1639  2E40               	goto	i1l5773
 19097                           
 19098                           ;mcc_generated_files/tmr1.c: 449:         {;mcc_generated_files/tmr1.c: 450:         but
      +                          ton1 = pushstat;
 19099  163A  0843               	movf	TMR1_DefaultInterruptHandler@pushstat^(0+256),w
 19100  163B  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 19101  163C  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 19102  163D  00C9               	movwf	_button1^(0+256)
 19103                           
 19104                           ;mcc_generated_files/tmr1.c: 451:         pushstat = 0;
 19105  163E  01C3               	clrf	TMR1_DefaultInterruptHandler@pushstat^(0+256)
 19106                           
 19107                           ;mcc_generated_files/tmr1.c: 452:         }
 19108  163F  0008               	return
 19109  1640                     i1l5773:
 19110                           
 19111                           ;mcc_generated_files/tmr1.c: 454:         {;mcc_generated_files/tmr1.c: 455:          pu
      +                          shcnt =0;
 19112  1640  01AC               	clrf	TMR1_DefaultInterruptHandler@pushcnt^(0+256)
 19113  1641  01AD               	clrf	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256)
 19114  1642  0008               	return
 19115  1643                     i1l5775:
 19116                           
 19117                           ;mcc_generated_files/tmr1.c: 459:     {;mcc_generated_files/tmr1.c: 460:     ++pushcnt;
 19118  1643  3001               	movlw	1
 19119  1644  0022               	movlb	2	; select bank2
 19120  1645  07AC               	addwf	TMR1_DefaultInterruptHandler@pushcnt^(0+256),f
 19121  1646  3000               	movlw	0
 19122  1647  3DAD               	addwfc	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256),f
 19123                           
 19124                           ;mcc_generated_files/tmr1.c: 461:     if (pushcnt > 10)
 19125  1648  3000               	movlw	0
 19126  1649  022D               	subwf	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256),w
 19127  164A  300B               	movlw	11
 19128  164B  1903               	skipnz
 19129  164C  022C               	subwf	TMR1_DefaultInterruptHandler@pushcnt^(0+256),w
 19130  164D  1C03               	skipc
 19131  164E  0008               	return
 19132                           
 19133                           ;mcc_generated_files/tmr1.c: 462:         {;mcc_generated_files/tmr1.c: 463:         pus
      +                          hstat = 1;
 19134  164F  01C3               	clrf	TMR1_DefaultInterruptHandler@pushstat^(0+256)
 19135  1650  0AC3               	incf	TMR1_DefaultInterruptHandler@pushstat^(0+256),f
 19136                           
 19137                           ;mcc_generated_files/tmr1.c: 464:         if (pushcnt > 500)
 19138  1651  3001               	movlw	1
 19139  1652  022D               	subwf	(TMR1_DefaultInterruptHandler@pushcnt+1)^(0+256),w
 19140  1653  30F5               	movlw	245
 19141  1654  1903               	skipnz
 19142  1655  022C               	subwf	TMR1_DefaultInterruptHandler@pushcnt^(0+256),w
 19143  1656  1C03               	skipc
 19144  1657  0008               	return
 19145                           
 19146                           ;mcc_generated_files/tmr1.c: 465:              pushstat = 2;
 19147  1658  3002               	movlw	2
 19148  1659  00F5               	movwf	??_TMR1_DefaultInterruptHandler
 19149  165A  0875               	movf	??_TMR1_DefaultInterruptHandler,w
 19150  165B  00C3               	movwf	TMR1_DefaultInterruptHandler@pushstat^(0+256)
 19151  165C  0008               	return
 19152  165D                     __end_of_TMR1_DefaultInterruptHandler:
 19153                           
 19154                           	psect	text80
 19155  1E2E                     __ptext80:	
 19156 ;; *************** function _read_clickRE *****************
 19157 ;; Defined at:
 19158 ;;		line 325 in file "mcc_generated_files/tmr1.c"
 19159 ;; Parameters:    Size  Location     Type
 19160 ;;		None
 19161 ;; Auto vars:     Size  Location     Type
 19162 ;;  current         1    4[COMMON] char 
 19163 ;; Return value:  Size  Location     Type
 19164 ;;                  1    wreg      char 
 19165 ;; Registers used:
 19166 ;;		wreg, status,2, status,0
 19167 ;; Tracked objects:
 19168 ;;		On entry : 1D/0
 19169 ;;		On exit  : 1F/2
 19170 ;;		Unchanged: 0/0
 19171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19173 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19174 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19175 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19176 ;;Total ram usage:        5 bytes
 19177 ;; Hardware stack levels used:    1
 19178 ;; This function calls:
 19179 ;;		Nothing
 19180 ;; This function is called by:
 19181 ;;		_TMR1_DefaultInterruptHandler
 19182 ;; This function uses a non-reentrant model
 19183 ;;
 19184                           
 19185                           
 19186                           ;psect for function _read_clickRE
 19187  1E2E                     _read_clickRE:
 19188                           
 19189                           ;mcc_generated_files/tmr1.c: 326:   static unsigned char index, interval;;mcc_generated_
      +                          files/tmr1.c: 327:      signed char current;;mcc_generated_files/tmr1.c: 329:      curre
      +                          nt = PORTAbits.RA5;
 19190                           
 19191                           ;incstack = 0
 19192                           ; Regs used in _read_clickRE: [wreg+status,2+status,0]
 19193  1E2E  3000               	movlw	0
 19194  1E2F  0020               	movlb	0	; select bank0
 19195  1E30  1A8C               	btfsc	12,5	;volatile
 19196  1E31  3001               	movlw	1
 19197  1E32  00F4               	movwf	read_clickRE@current
 19198                           
 19199                           ;mcc_generated_files/tmr1.c: 330:    if((current != index) && (current== 0))
 19200  1E33  0874               	movf	read_clickRE@current,w
 19201  1E34  00F0               	movwf	??_read_clickRE
 19202  1E35  01F1               	clrf	??_read_clickRE+1
 19203  1E36  1BF0               	btfsc	??_read_clickRE,7
 19204  1E37  03F1               	decf	??_read_clickRE+1,f
 19205  1E38  0022               	movlb	2	; select bank2
 19206  1E39  0846               	movf	read_clickRE@index^(0+256),w
 19207  1E3A  0670               	xorwf	??_read_clickRE,w
 19208  1E3B  0471               	iorwf	??_read_clickRE+1,w
 19209  1E3C  1903               	skipnz
 19210  1E3D  2E69               	goto	i1l5421
 19211  1E3E  0874               	movf	read_clickRE@current,w
 19212  1E3F  1D03               	btfss	3,2
 19213  1E40  2E69               	goto	i1l5421
 19214                           
 19215                           ;mcc_generated_files/tmr1.c: 331:         {;mcc_generated_files/tmr1.c: 332:         ind
      +                          ex =current;
 19216  1E41  0874               	movf	read_clickRE@current,w
 19217  1E42  00F0               	movwf	??_read_clickRE
 19218  1E43  0870               	movf	??_read_clickRE,w
 19219  1E44  00C6               	movwf	read_clickRE@index^(0+256)
 19220                           
 19221                           ;mcc_generated_files/tmr1.c: 333:         current = PORTAbits.RA4 ? 1 : -1;
 19222  1E45  0020               	movlb	0	; select bank0
 19223  1E46  1A0C               	btfsc	12,4	;volatile
 19224  1E47  2E4C               	goto	i1l5411
 19225  1E48  30FF               	movlw	255
 19226  1E49  00F2               	movwf	_read_clickRE$506
 19227  1E4A  30FF               	movlw	255
 19228  1E4B  2E4F               	goto	L12
 19229  1E4C                     i1l5411:
 19230  1E4C  3001               	movlw	1
 19231  1E4D  00F2               	movwf	_read_clickRE$506
 19232  1E4E  3000               	movlw	0
 19233  1E4F                     L12:
 19234  1E4F  00F3               	movwf	_read_clickRE$506+1
 19235  1E50  0872               	movf	_read_clickRE$506,w
 19236  1E51  00F0               	movwf	??_read_clickRE
 19237  1E52  0870               	movf	??_read_clickRE,w
 19238  1E53  00F4               	movwf	read_clickRE@current
 19239                           
 19240                           ;mcc_generated_files/tmr1.c: 334:         if (interval <5)
 19241  1E54  3005               	movlw	5
 19242  1E55  0022               	movlb	2	; select bank2
 19243  1E56  0245               	subwf	read_clickRE@interval^(0+256),w
 19244  1E57  1803               	skipnc
 19245  1E58  2E5B               	goto	i1l350
 19246                           
 19247                           ;mcc_generated_files/tmr1.c: 335:            current *=2;
 19248  1E59  1003               	clrc
 19249  1E5A  0DF4               	rlf	read_clickRE@current,f
 19250  1E5B                     i1l350:
 19251                           
 19252                           ;mcc_generated_files/tmr1.c: 336:         if (interval <12)
 19253  1E5B  300C               	movlw	12
 19254  1E5C  0245               	subwf	read_clickRE@interval^(0+256),w
 19255  1E5D  1803               	skipnc
 19256  1E5E  2E61               	goto	i1l351
 19257                           
 19258                           ;mcc_generated_files/tmr1.c: 337:            current *=2;
 19259  1E5F  1003               	clrc
 19260  1E60  0DF4               	rlf	read_clickRE@current,f
 19261  1E61                     i1l351:
 19262                           
 19263                           ;mcc_generated_files/tmr1.c: 338:         if (interval <20)
 19264  1E61  3014               	movlw	20
 19265  1E62  0245               	subwf	read_clickRE@interval^(0+256),w
 19266  1E63  1803               	skipnc
 19267  1E64  2E67               	goto	i1l5419
 19268                           
 19269                           ;mcc_generated_files/tmr1.c: 339:            current *=2;
 19270  1E65  1003               	clrc
 19271  1E66  0DF4               	rlf	read_clickRE@current,f
 19272  1E67                     i1l5419:
 19273                           
 19274                           ;mcc_generated_files/tmr1.c: 340:         interval =0;
 19275  1E67  01C5               	clrf	read_clickRE@interval^(0+256)
 19276                           
 19277                           ;mcc_generated_files/tmr1.c: 341:         }
 19278  1E68  2E76               	goto	i1l5429
 19279  1E69                     i1l5421:
 19280                           
 19281                           ;mcc_generated_files/tmr1.c: 343:         {;mcc_generated_files/tmr1.c: 344:         ind
      +                          ex = current;
 19282  1E69  0874               	movf	read_clickRE@current,w
 19283  1E6A  00F0               	movwf	??_read_clickRE
 19284  1E6B  0870               	movf	??_read_clickRE,w
 19285  1E6C  00C6               	movwf	read_clickRE@index^(0+256)
 19286                           
 19287                           ;mcc_generated_files/tmr1.c: 345:         current = 0;
 19288  1E6D  01F4               	clrf	read_clickRE@current
 19289                           
 19290                           ;mcc_generated_files/tmr1.c: 346:         if (interval <127)
 19291  1E6E  307F               	movlw	127
 19292  1E6F  0245               	subwf	read_clickRE@interval^(0+256),w
 19293  1E70  1803               	skipnc
 19294  1E71  2E76               	goto	i1l5429
 19295                           
 19296                           ;mcc_generated_files/tmr1.c: 347:             ++interval;
 19297  1E72  3001               	movlw	1
 19298  1E73  00F0               	movwf	??_read_clickRE
 19299  1E74  0870               	movf	??_read_clickRE,w
 19300  1E75  07C5               	addwf	read_clickRE@interval^(0+256),f
 19301  1E76                     i1l5429:
 19302                           
 19303                           ;mcc_generated_files/tmr1.c: 349:  return(current);
 19304  1E76  0874               	movf	read_clickRE@current,w
 19305  1E77  0008               	return
 19306  1E78                     __end_of_read_clickRE:
 19307                           
 19308                           	psect	text81
 19309  1945                     __ptext81:	
 19310 ;; *************** function _get7seg_font *****************
 19311 ;; Defined at:
 19312 ;;		line 280 in file "mcc_generated_files/tmr1.c"
 19313 ;; Parameters:    Size  Location     Type
 19314 ;;  cdata           1    wreg     unsigned char 
 19315 ;; Auto vars:     Size  Location     Type
 19316 ;;  cdata           1    2[COMMON] unsigned char 
 19317 ;;  fontdata        1    1[COMMON] unsigned char 
 19318 ;; Return value:  Size  Location     Type
 19319 ;;                  1    wreg      unsigned char 
 19320 ;; Registers used:
 19321 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 19322 ;; Tracked objects:
 19323 ;;		On entry : 1F/4
 19324 ;;		On exit  : 1F/4
 19325 ;;		Unchanged: 1F/0
 19326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19330 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19331 ;;Total ram usage:        3 bytes
 19332 ;; Hardware stack levels used:    1
 19333 ;; This function calls:
 19334 ;;		Nothing
 19335 ;; This function is called by:
 19336 ;;		_TMR1_DefaultInterruptHandler
 19337 ;; This function uses a non-reentrant model
 19338 ;;
 19339                           
 19340                           
 19341                           ;psect for function _get7seg_font
 19342  1945                     _get7seg_font:
 19343                           
 19344                           ;incstack = 0
 19345                           ; Regs used in _get7seg_font: [wreg-fsr0h+status,2+status,0+pclath]
 19346                           ;get7seg_font@cdata stored from wreg
 19347  1945  00F2               	movwf	get7seg_font@cdata
 19348                           
 19349                           ;mcc_generated_files/tmr1.c: 280: unsigned char get7seg_font(char cdata);mcc_generated_f
      +                          iles/tmr1.c: 281: {;mcc_generated_files/tmr1.c: 282: unsigned char fontdata;;mcc_generat
      +                          ed_files/tmr1.c: 284:     if (cdata >= 0x20)
 19350  1946  3020               	movlw	32
 19351  1947  0272               	subwf	get7seg_font@cdata,w
 19352  1948  1C03               	skipc
 19353  1949  2955               	goto	i1l5395
 19354                           
 19355                           ;mcc_generated_files/tmr1.c: 285:         {;mcc_generated_files/tmr1.c: 286:         cda
      +                          ta -= 0x20;
 19356  194A  3020               	movlw	32
 19357  194B  02F2               	subwf	get7seg_font@cdata,f
 19358                           
 19359                           ;mcc_generated_files/tmr1.c: 287:         fontdata = font7seg[cdata];
 19360  194C  0872               	movf	get7seg_font@cdata,w
 19361  194D  3E70               	addlw	low (_font7seg| (0+32768))
 19362  194E  0084               	movwf	4
 19363  194F  3098               	movlw	high (_font7seg| (0+32768))
 19364  1950  1803               	skipnc
 19365  1951  3E01               	addlw	1
 19366  1952  0085               	movwf	5
 19367  1953  0800               	movf	0,w	;code access
 19368  1954  2956               	goto	L13
 19369  1955                     i1l5395:	
 19370                           ;mcc_generated_files/tmr1.c: 288:          }
 19371                           
 19372                           
 19373                           ;mcc_generated_files/tmr1.c: 290:         fontdata = 0xff;
 19374  1955  30FF               	movlw	255
 19375  1956                     L13:
 19376  1956  00F0               	movwf	??_get7seg_font
 19377  1957  0870               	movf	??_get7seg_font,w
 19378  1958  00F1               	movwf	get7seg_font@fontdata
 19379                           
 19380                           ;mcc_generated_files/tmr1.c: 291: return(fontdata);
 19381  1959  0871               	movf	get7seg_font@fontdata,w
 19382  195A  0008               	return
 19383  195B                     __end_of_get7seg_font:
 19384                           
 19385                           	psect	text82
 19386  2641                     __ptext82:	
 19387 ;; *************** function _I2C1_MasterIsr *****************
 19388 ;; Defined at:
 19389 ;;		line 319 in file "mcc_generated_files/i2c1_master.c"
 19390 ;; Parameters:    Size  Location     Type
 19391 ;;		None
 19392 ;; Auto vars:     Size  Location     Type
 19393 ;;		None
 19394 ;; Return value:  Size  Location     Type
 19395 ;;                  1    wreg      void 
 19396 ;; Registers used:
 19397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19398 ;; Tracked objects:
 19399 ;;		On entry : 1F/2
 19400 ;;		On exit  : 1F/4
 19401 ;;		Unchanged: 0/0
 19402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19407 ;;Total ram usage:        0 bytes
 19408 ;; Hardware stack levels used:    1
 19409 ;; Hardware stack levels required when called:    5
 19410 ;; This function calls:
 19411 ;;		_I2C1_MasterFsm
 19412 ;; This function is called by:
 19413 ;;		_I2C1_Open
 19414 ;;		_INTERRUPT_InterruptManager
 19415 ;; This function uses a non-reentrant model
 19416 ;;
 19417                           
 19418                           
 19419                           ;psect for function _I2C1_MasterIsr
 19420  2641                     _I2C1_MasterIsr:
 19421                           
 19422                           ;mcc_generated_files/i2c1_master.c: 321:     I2C1_MasterFsm();
 19423                           
 19424                           ;incstack = 0
 19425                           ; Regs used in _I2C1_MasterIsr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19426  2641  319C  244C         	fcall	_I2C1_MasterFsm
 19427  2643  0008               	return
 19428  2644                     __end_of_I2C1_MasterIsr:
 19429                           
 19430                           	psect	text83
 19431  1C4C                     __ptext83:	
 19432 ;; *************** function _I2C1_MasterFsm *****************
 19433 ;; Defined at:
 19434 ;;		line 324 in file "mcc_generated_files/i2c1_master.c"
 19435 ;; Parameters:    Size  Location     Type
 19436 ;;		None
 19437 ;; Auto vars:     Size  Location     Type
 19438 ;;		None
 19439 ;; Return value:  Size  Location     Type
 19440 ;;                  1    wreg      void 
 19441 ;; Registers used:
 19442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19443 ;; Tracked objects:
 19444 ;;		On entry : 1F/2
 19445 ;;		On exit  : 1F/4
 19446 ;;		Unchanged: 0/0
 19447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19450 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19451 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19452 ;;Total ram usage:        3 bytes
 19453 ;; Hardware stack levels used:    1
 19454 ;; Hardware stack levels required when called:    4
 19455 ;; This function calls:
 19456 ;;		_I2C1_DO_ADDRESS_NACK
 19457 ;;		_I2C1_DO_IDLE
 19458 ;;		_I2C1_DO_RCEN
 19459 ;;		_I2C1_DO_RESET
 19460 ;;		_I2C1_DO_RX
 19461 ;;		_I2C1_DO_RX_ACK
 19462 ;;		_I2C1_DO_RX_NACK_RESTART
 19463 ;;		_I2C1_DO_RX_NACK_STOP
 19464 ;;		_I2C1_DO_SEND_ADR_READ
 19465 ;;		_I2C1_DO_SEND_ADR_WRITE
 19466 ;;		_I2C1_DO_SEND_RESTART
 19467 ;;		_I2C1_DO_SEND_RESTART_READ
 19468 ;;		_I2C1_DO_SEND_RESTART_WRITE
 19469 ;;		_I2C1_DO_SEND_STOP
 19470 ;;		_I2C1_DO_TX
 19471 ;;		_I2C1_DO_TX_EMPTY
 19472 ;;		_I2C1_MasterIsNack
 19473 ;;		i1_I2C1_MasterClearIrq
 19474 ;; This function is called by:
 19475 ;;		_I2C1_MasterIsr
 19476 ;; This function uses a non-reentrant model
 19477 ;;
 19478                           
 19479                           
 19480                           ;psect for function _I2C1_MasterFsm
 19481  1C4C                     _I2C1_MasterFsm:
 19482                           
 19483                           ;mcc_generated_files/i2c1_master.c: 326:     I2C1_MasterClearIrq();
 19484                           
 19485                           ;incstack = 0
 19486                           ; Regs used in _I2C1_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19487  1C4C  31A6  263E  319C   	fcall	i1_I2C1_MasterClearIrq
 19488                           
 19489                           ;mcc_generated_files/i2c1_master.c: 328:     if(I2C1_Status.addressNackCheck && I2C1_Mas
      +                          terIsNack())
 19490  1C4F  0024               	movlb	4	; select bank4
 19491  1C50  1C6B               	btfss	(_I2C1_Status^(0+512)+29),0
 19492  1C51  2C5E               	goto	i1l7823
 19493  1C52  31A6  268A  319C   	fcall	_I2C1_MasterIsNack
 19494  1C55  3A00               	xorlw	0
 19495  1C56  1903               	skipnz
 19496  1C57  2C5E               	goto	i1l7823
 19497                           
 19498                           ;mcc_generated_files/i2c1_master.c: 329:     {;mcc_generated_files/i2c1_master.c: 330:  
      +                                 I2C1_Status.state = I2C1_ADDRESS_NACK;
 19499  1C58  300F               	movlw	15
 19500  1C59  0020               	movlb	0	; select bank0
 19501  1C5A  00A0               	movwf	??_I2C1_MasterFsm
 19502  1C5B  0820               	movf	??_I2C1_MasterFsm,w
 19503  1C5C  0024               	movlb	4	; select bank4
 19504  1C5D  00E9               	movwf	(_I2C1_Status^(0+512)+27)
 19505  1C5E                     i1l7823:
 19506                           
 19507                           ;mcc_generated_files/i2c1_master.c: 332:     I2C1_Status.state = fsmStateTable[I2C1_Stat
      +                          us.state]();
 19508  1C5E  0869               	movf	(_I2C1_Status^(0+512)+27),w
 19509  1C5F  0020               	movlb	0	; select bank0
 19510  1C60  00A0               	movwf	??_I2C1_MasterFsm
 19511  1C61  01A1               	clrf	??_I2C1_MasterFsm+1
 19512  1C62  35A0               	lslf	??_I2C1_MasterFsm,f
 19513  1C63  0DA1               	rlf	??_I2C1_MasterFsm+1,f
 19514  1C64  3022               	movlw	low (_fsmStateTable| (0+32768))
 19515  1C65  0720               	addwf	??_I2C1_MasterFsm,w
 19516  1C66  0084               	movwf	4
 19517  1C67  30A1               	movlw	high (_fsmStateTable| (0+32768))
 19518  1C68  3D21               	addwfc	??_I2C1_MasterFsm+1,w
 19519  1C69  0085               	movwf	5
 19520  1C6A  3F01               	moviw [1]fsr0
 19521  1C6B  008A               	movwf	10
 19522  1C6C  3F00               	moviw [0]fsr0
 19523  1C6D  000A               	callw
 19524  1C6E  319C               	pagesel	$
 19525  1C6F  0020               	movlb	0	; select bank0
 19526  1C70  00A2               	movwf	??_I2C1_MasterFsm+2
 19527  1C71  0822               	movf	??_I2C1_MasterFsm+2,w
 19528  1C72  0024               	movlb	4	; select bank4
 19529  1C73  00E9               	movwf	(_I2C1_Status^(0+512)+27)
 19530  1C74  0008               	return
 19531  1C75                     __end_of_I2C1_MasterFsm:
 19532                           
 19533                           	psect	text84
 19534  263E                     __ptext84:	
 19535 ;; *************** function i1_I2C1_MasterClearIrq *****************
 19536 ;; Defined at:
 19537 ;;		line 644 in file "mcc_generated_files/i2c1_master.c"
 19538 ;; Parameters:    Size  Location     Type
 19539 ;;		None
 19540 ;; Auto vars:     Size  Location     Type
 19541 ;;		None
 19542 ;; Return value:  Size  Location     Type
 19543 ;;                  1    wreg      void 
 19544 ;; Registers used:
 19545 ;;		None
 19546 ;; Tracked objects:
 19547 ;;		On entry : 1F/2
 19548 ;;		On exit  : 1F/0
 19549 ;;		Unchanged: 0/0
 19550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19555 ;;Total ram usage:        0 bytes
 19556 ;; Hardware stack levels used:    1
 19557 ;; This function calls:
 19558 ;;		Nothing
 19559 ;; This function is called by:
 19560 ;;		_I2C1_MasterFsm
 19561 ;; This function uses a non-reentrant model
 19562 ;;
 19563                           
 19564                           
 19565                           ;psect for function i1_I2C1_MasterClearIrq
 19566  263E                     i1_I2C1_MasterClearIrq:
 19567                           
 19568                           ;mcc_generated_files/i2c1_master.c: 646:     PIR1bits.SSP1IF = 0;
 19569                           
 19570                           ;incstack = 0
 19571                           ; Regs used in i1_I2C1_MasterClearIrq: []
 19572  263E  0020               	movlb	0	; select bank0
 19573  263F  1191               	bcf	17,3	;volatile
 19574  2640  0008               	return
 19575  2641                     __end_ofi1_I2C1_MasterClearIrq:
 19576                           
 19577                           	psect	text85
 19578  1C75                     __ptext85:	
 19579 ;; *************** function _I2C1_DO_ADDRESS_NACK *****************
 19580 ;; Defined at:
 19581 ;;		line 502 in file "mcc_generated_files/i2c1_master.c"
 19582 ;; Parameters:    Size  Location     Type
 19583 ;;		None
 19584 ;; Auto vars:     Size  Location     Type
 19585 ;;		None
 19586 ;; Return value:  Size  Location     Type
 19587 ;;                  1    wreg      enum E7158
 19588 ;; Registers used:
 19589 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19590 ;; Tracked objects:
 19591 ;;		On entry : 1F/0
 19592 ;;		On exit  : 1F/4
 19593 ;;		Unchanged: 0/0
 19594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19597 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19598 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19599 ;;Total ram usage:        3 bytes
 19600 ;; Hardware stack levels used:    1
 19601 ;; Hardware stack levels required when called:    3
 19602 ;; This function calls:
 19603 ;;		Absolute function
 19604 ;;		_I2C1_CallbackReturnReset
 19605 ;;		_I2C1_CallbackReturnStop
 19606 ;;		_I2C1_DO_SEND_RESTART
 19607 ;;		_I2C1_DO_SEND_STOP
 19608 ;;		_rd1RegCompleteHandler
 19609 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 19610 ;;		_rd2RegCompleteHandler
 19611 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 19612 ;;		_rdBlkRegCompleteHandler
 19613 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 19614 ;;		_wr1RegCompleteHandler
 19615 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 19616 ;;		_wr2RegCompleteHandler
 19617 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 19618 ;; This function is called by:
 19619 ;;		_I2C1_MasterFsm
 19620 ;; This function uses a non-reentrant model
 19621 ;;
 19622                           
 19623                           
 19624                           ;psect for function _I2C1_DO_ADDRESS_NACK
 19625  1C75                     _I2C1_DO_ADDRESS_NACK:
 19626                           
 19627                           ;mcc_generated_files/i2c1_master.c: 504:     I2C1_Status.addressNackCheck = 0;
 19628                           
 19629                           ;incstack = 0
 19630                           ; Regs used in _I2C1_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19631  1C75  0024               	movlb	4	; select bank4
 19632  1C76  106B               	bcf	(_I2C1_Status^(0+512)+29),0
 19633                           
 19634                           ;mcc_generated_files/i2c1_master.c: 505:     I2C1_Status.error = I2C1_FAIL;
 19635  1C77  3002               	movlw	2
 19636  1C78  00FA               	movwf	??_I2C1_DO_ADDRESS_NACK
 19637  1C79  087A               	movf	??_I2C1_DO_ADDRESS_NACK,w
 19638  1C7A  00EA               	movwf	(_I2C1_Status^(0+512)+28)
 19639                           
 19640                           ;mcc_generated_files/i2c1_master.c: 506:     switch(I2C1_Status.callbackTable[I2C1_ADDR_
      +                          NACK](I2C1_Status.callbackPayload[I2C1_ADDR_NACK]))
 19641  1C7B  2C82               	goto	i1l7717
 19642  1C7C                     i1l7707:
 19643                           
 19644                           ;mcc_generated_files/i2c1_master.c: 510:             return I2C1_DO_SEND_RESTART();
 19645  1C7C  31A6  2664         	fcall	_I2C1_DO_SEND_RESTART
 19646  1C7E  0008               	return
 19647  1C7F                     i1l7711:
 19648                           
 19649                           ;mcc_generated_files/i2c1_master.c: 512:             return I2C1_DO_SEND_STOP();
 19650  1C7F  31A6  2668         	fcall	_I2C1_DO_SEND_STOP
 19651  1C81  0008               	return
 19652  1C82                     i1l7717:
 19653  1C82  085C               	movf	(low ((_I2C1_Status| (0+512)+14)))^0,w
 19654  1C83  00FA               	movwf	??_I2C1_DO_ADDRESS_NACK
 19655  1C84  087A               	movf	??_I2C1_DO_ADDRESS_NACK,w
 19656  1C85  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 19657  1C86  3004               	movlw	4
 19658  1C87  3E4E               	addlw	(low (_I2C1_Status| (0+512)))& (0+255)
 19659  1C88  0086               	movwf	6
 19660  1C89  3002               	movlw	2	; select bank4/5
 19661  1C8A  0087               	movwf	7
 19662  1C8B  3F41               	moviw [1]fsr1
 19663  1C8C  008A               	movwf	10
 19664  1C8D  3F40               	moviw [0]fsr1
 19665  1C8E  000A               	callw
 19666  1C8F  319C               	pagesel	$
 19667  1C90  00FB               	movwf	??_I2C1_DO_ADDRESS_NACK+1
 19668  1C91  01FC               	clrf	??_I2C1_DO_ADDRESS_NACK+2
 19669                           
 19670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19671                           ; Switch size 1, requested type "simple"
 19672                           ; Number of cases is 1, Range of values is 0 to 0
 19673                           ; switch strategies available:
 19674                           ; Name         Instructions Cycles
 19675                           ; simple_byte            4     3 (average)
 19676                           ; direct_byte            8     6 (fixed)
 19677                           ; jumptable            260     6 (fixed)
 19678                           ;	Chosen strategy is simple_byte
 19679  1C92  087C               	movf	??_I2C1_DO_ADDRESS_NACK+2,w
 19680  1C93  3A00               	xorlw	0	; case 0
 19681  1C94  1903               	skipnz
 19682  1C95  2C97               	goto	i1l8689
 19683  1C96  2C7F               	goto	i1l7711
 19684  1C97                     i1l8689:
 19685                           
 19686                           ; Switch size 1, requested type "simple"
 19687                           ; Number of cases is 2, Range of values is 2 to 3
 19688                           ; switch strategies available:
 19689                           ; Name         Instructions Cycles
 19690                           ; simple_byte            7     4 (average)
 19691                           ; direct_byte           13     9 (fixed)
 19692                           ; jumptable            263     9 (fixed)
 19693                           ;	Chosen strategy is simple_byte
 19694  1C97  087B               	movf	??_I2C1_DO_ADDRESS_NACK+1,w
 19695  1C98  3A02               	xorlw	2	; case 2
 19696  1C99  1903               	skipnz
 19697  1C9A  2C7C               	goto	i1l7707
 19698  1C9B  3A01               	xorlw	1	; case 3
 19699  1C9C  1903               	skipnz
 19700  1C9D  2C7C               	goto	i1l7707
 19701  1C9E  2C7F               	goto	i1l7711
 19702  1C9F  0008               	return
 19703  1CA0                     __end_of_I2C1_DO_ADDRESS_NACK:
 19704                           
 19705                           	psect	text86
 19706  2685                     __ptext86:	
 19707 ;; *************** function _I2C1_DO_RESET *****************
 19708 ;; Defined at:
 19709 ;;		line 496 in file "mcc_generated_files/i2c1_master.c"
 19710 ;; Parameters:    Size  Location     Type
 19711 ;;		None
 19712 ;; Auto vars:     Size  Location     Type
 19713 ;;		None
 19714 ;; Return value:  Size  Location     Type
 19715 ;;                  1    wreg      enum E7158
 19716 ;; Registers used:
 19717 ;;		wreg, status,2
 19718 ;; Tracked objects:
 19719 ;;		On entry : 1F/0
 19720 ;;		On exit  : 1F/4
 19721 ;;		Unchanged: 0/0
 19722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19727 ;;Total ram usage:        0 bytes
 19728 ;; Hardware stack levels used:    1
 19729 ;; This function calls:
 19730 ;;		Nothing
 19731 ;; This function is called by:
 19732 ;;		_I2C1_MasterFsm
 19733 ;; This function uses a non-reentrant model
 19734 ;;
 19735                           
 19736                           
 19737                           ;psect for function _I2C1_DO_RESET
 19738  2685                     _I2C1_DO_RESET:
 19739                           
 19740                           ;mcc_generated_files/i2c1_master.c: 498:     I2C1_Status.busy = 0;
 19741                           
 19742                           ;incstack = 0
 19743                           ; Regs used in _I2C1_DO_RESET: [wreg+status,2]
 19744  2685  0024               	movlb	4	; select bank4
 19745  2686  10EB               	bcf	(_I2C1_Status^(0+512)+29),1
 19746                           
 19747                           ;mcc_generated_files/i2c1_master.c: 499:     I2C1_Status.error = I2C1_NOERR;
 19748  2687  01EA               	clrf	(_I2C1_Status^(0+512)+28)
 19749                           
 19750                           ;mcc_generated_files/i2c1_master.c: 500:     return I2C1_RESET;
 19751  2688  300E               	movlw	14
 19752  2689  0008               	return
 19753  268A                     __end_of_I2C1_DO_RESET:
 19754                           
 19755                           	psect	text87
 19756  2674                     __ptext87:	
 19757 ;; *************** function _I2C1_DO_RX_NACK_RESTART *****************
 19758 ;; Defined at:
 19759 ;;		line 490 in file "mcc_generated_files/i2c1_master.c"
 19760 ;; Parameters:    Size  Location     Type
 19761 ;;		None
 19762 ;; Auto vars:     Size  Location     Type
 19763 ;;		None
 19764 ;; Return value:  Size  Location     Type
 19765 ;;                  1    wreg      enum E7158
 19766 ;; Registers used:
 19767 ;;		wreg, status,2, status,0, pclath, cstack
 19768 ;; Tracked objects:
 19769 ;;		On entry : 0/0
 19770 ;;		On exit  : 1F/4
 19771 ;;		Unchanged: 0/0
 19772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19777 ;;Total ram usage:        0 bytes
 19778 ;; Hardware stack levels used:    1
 19779 ;; Hardware stack levels required when called:    1
 19780 ;; This function calls:
 19781 ;;		_I2C1_MasterSendNack
 19782 ;; This function is called by:
 19783 ;;		_I2C1_DO_RX
 19784 ;;		_I2C1_MasterFsm
 19785 ;; This function uses a non-reentrant model
 19786 ;;
 19787                           
 19788                           
 19789                           ;psect for function _I2C1_DO_RX_NACK_RESTART
 19790  2674                     _I2C1_DO_RX_NACK_RESTART:
 19791                           
 19792                           ;mcc_generated_files/i2c1_master.c: 492:     I2C1_MasterSendNack();
 19793                           
 19794                           ;incstack = 0
 19795                           ; Regs used in _I2C1_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19796  2674  31A6  2650         	fcall	_I2C1_MasterSendNack
 19797                           
 19798                           ;mcc_generated_files/i2c1_master.c: 493:     return I2C1_SEND_RESTART;
 19799  2676  3009               	movlw	9
 19800  2677  0008               	return
 19801  2678                     __end_of_I2C1_DO_RX_NACK_RESTART:
 19802                           
 19803                           	psect	text88
 19804  2670                     __ptext88:	
 19805 ;; *************** function _I2C1_DO_RX_NACK_STOP *****************
 19806 ;; Defined at:
 19807 ;;		line 484 in file "mcc_generated_files/i2c1_master.c"
 19808 ;; Parameters:    Size  Location     Type
 19809 ;;		None
 19810 ;; Auto vars:     Size  Location     Type
 19811 ;;		None
 19812 ;; Return value:  Size  Location     Type
 19813 ;;                  1    wreg      enum E7158
 19814 ;; Registers used:
 19815 ;;		wreg, status,2, status,0, pclath, cstack
 19816 ;; Tracked objects:
 19817 ;;		On entry : 0/0
 19818 ;;		On exit  : 1F/4
 19819 ;;		Unchanged: 0/0
 19820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19825 ;;Total ram usage:        0 bytes
 19826 ;; Hardware stack levels used:    1
 19827 ;; Hardware stack levels required when called:    1
 19828 ;; This function calls:
 19829 ;;		_I2C1_MasterSendNack
 19830 ;; This function is called by:
 19831 ;;		_I2C1_DO_RX
 19832 ;;		_I2C1_MasterFsm
 19833 ;; This function uses a non-reentrant model
 19834 ;;
 19835                           
 19836                           
 19837                           ;psect for function _I2C1_DO_RX_NACK_STOP
 19838  2670                     _I2C1_DO_RX_NACK_STOP:
 19839                           
 19840                           ;mcc_generated_files/i2c1_master.c: 486:     I2C1_MasterSendNack();
 19841                           
 19842                           ;incstack = 0
 19843                           ; Regs used in _I2C1_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
 19844  2670  31A6  2650         	fcall	_I2C1_MasterSendNack
 19845                           
 19846                           ;mcc_generated_files/i2c1_master.c: 487:     return I2C1_SEND_STOP;
 19847  2672  300A               	movlw	10
 19848  2673  0008               	return
 19849  2674                     __end_of_I2C1_DO_RX_NACK_STOP:
 19850                           
 19851                           	psect	text89
 19852  266C                     __ptext89:	
 19853 ;; *************** function _I2C1_DO_RX_ACK *****************
 19854 ;; Defined at:
 19855 ;;		line 477 in file "mcc_generated_files/i2c1_master.c"
 19856 ;; Parameters:    Size  Location     Type
 19857 ;;		None
 19858 ;; Auto vars:     Size  Location     Type
 19859 ;;		None
 19860 ;; Return value:  Size  Location     Type
 19861 ;;                  1    wreg      enum E7158
 19862 ;; Registers used:
 19863 ;;		wreg, status,2, status,0, pclath, cstack
 19864 ;; Tracked objects:
 19865 ;;		On entry : 1F/0
 19866 ;;		On exit  : 1F/4
 19867 ;;		Unchanged: 0/0
 19868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19873 ;;Total ram usage:        0 bytes
 19874 ;; Hardware stack levels used:    1
 19875 ;; Hardware stack levels required when called:    1
 19876 ;; This function calls:
 19877 ;;		_I2C1_MasterSendAck
 19878 ;; This function is called by:
 19879 ;;		_I2C1_MasterFsm
 19880 ;; This function uses a non-reentrant model
 19881 ;;
 19882                           
 19883                           
 19884                           ;psect for function _I2C1_DO_RX_ACK
 19885  266C                     _I2C1_DO_RX_ACK:
 19886                           
 19887                           ;mcc_generated_files/i2c1_master.c: 479:     I2C1_MasterSendAck();
 19888                           
 19889                           ;incstack = 0
 19890                           ; Regs used in _I2C1_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
 19891  266C  31A6  2654         	fcall	_I2C1_MasterSendAck
 19892                           
 19893                           ;mcc_generated_files/i2c1_master.c: 480:     return I2C1_RCEN;
 19894  266E  3005               	movlw	5
 19895  266F  0008               	return
 19896  2670                     __end_of_I2C1_DO_RX_ACK:
 19897                           
 19898                           	psect	text90
 19899  2668                     __ptext90:	
 19900 ;; *************** function _I2C1_DO_SEND_STOP *****************
 19901 ;; Defined at:
 19902 ;;		line 471 in file "mcc_generated_files/i2c1_master.c"
 19903 ;; Parameters:    Size  Location     Type
 19904 ;;		None
 19905 ;; Auto vars:     Size  Location     Type
 19906 ;;		None
 19907 ;; Return value:  Size  Location     Type
 19908 ;;                  1    wreg      enum E7158
 19909 ;; Registers used:
 19910 ;;		wreg, status,2, status,0, pclath, cstack
 19911 ;; Tracked objects:
 19912 ;;		On entry : 0/0
 19913 ;;		On exit  : 1F/4
 19914 ;;		Unchanged: 0/0
 19915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19920 ;;Total ram usage:        0 bytes
 19921 ;; Hardware stack levels used:    1
 19922 ;; Hardware stack levels required when called:    1
 19923 ;; This function calls:
 19924 ;;		_I2C1_MasterStop
 19925 ;; This function is called by:
 19926 ;;		_I2C1_DO_TX
 19927 ;;		_I2C1_DO_TX_EMPTY
 19928 ;;		_I2C1_DO_ADDRESS_NACK
 19929 ;;		_I2C1_MasterFsm
 19930 ;; This function uses a non-reentrant model
 19931 ;;
 19932                           
 19933                           
 19934                           ;psect for function _I2C1_DO_SEND_STOP
 19935  2668                     _I2C1_DO_SEND_STOP:
 19936                           
 19937                           ;mcc_generated_files/i2c1_master.c: 473:     I2C1_MasterStop();
 19938                           
 19939                           ;incstack = 0
 19940                           ; Regs used in _I2C1_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
 19941  2668  31A6  2635         	fcall	_I2C1_MasterStop
 19942                           
 19943                           ;mcc_generated_files/i2c1_master.c: 474:     return I2C1_IDLE;
 19944  266A  3000               	movlw	0
 19945  266B  0008               	return
 19946  266C                     __end_of_I2C1_DO_SEND_STOP:
 19947                           
 19948                           	psect	text91
 19949  2664                     __ptext91:	
 19950 ;; *************** function _I2C1_DO_SEND_RESTART *****************
 19951 ;; Defined at:
 19952 ;;		line 465 in file "mcc_generated_files/i2c1_master.c"
 19953 ;; Parameters:    Size  Location     Type
 19954 ;;		None
 19955 ;; Auto vars:     Size  Location     Type
 19956 ;;		None
 19957 ;; Return value:  Size  Location     Type
 19958 ;;                  1    wreg      enum E7158
 19959 ;; Registers used:
 19960 ;;		wreg, status,2, status,0, pclath, cstack
 19961 ;; Tracked objects:
 19962 ;;		On entry : 0/0
 19963 ;;		On exit  : 1F/4
 19964 ;;		Unchanged: 0/0
 19965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19970 ;;Total ram usage:        0 bytes
 19971 ;; Hardware stack levels used:    1
 19972 ;; Hardware stack levels required when called:    1
 19973 ;; This function calls:
 19974 ;;		_I2C1_MasterEnableRestart
 19975 ;; This function is called by:
 19976 ;;		_I2C1_DO_TX_EMPTY
 19977 ;;		_I2C1_DO_ADDRESS_NACK
 19978 ;;		_I2C1_MasterFsm
 19979 ;; This function uses a non-reentrant model
 19980 ;;
 19981                           
 19982                           
 19983                           ;psect for function _I2C1_DO_SEND_RESTART
 19984  2664                     _I2C1_DO_SEND_RESTART:
 19985                           
 19986                           ;mcc_generated_files/i2c1_master.c: 467:     I2C1_MasterEnableRestart();
 19987                           
 19988                           ;incstack = 0
 19989                           ; Regs used in _I2C1_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
 19990  2664  31A6  2632         	fcall	_I2C1_MasterEnableRestart
 19991                           
 19992                           ;mcc_generated_files/i2c1_master.c: 468:     return I2C1_SEND_ADR_READ;
 19993  2666  3001               	movlw	1
 19994  2667  0008               	return
 19995  2668                     __end_of_I2C1_DO_SEND_RESTART:
 19996                           
 19997                           	psect	text92
 19998  2660                     __ptext92:	
 19999 ;; *************** function _I2C1_DO_SEND_RESTART_WRITE *****************
 20000 ;; Defined at:
 20001 ;;		line 458 in file "mcc_generated_files/i2c1_master.c"
 20002 ;; Parameters:    Size  Location     Type
 20003 ;;		None
 20004 ;; Auto vars:     Size  Location     Type
 20005 ;;		None
 20006 ;; Return value:  Size  Location     Type
 20007 ;;                  1    wreg      enum E7158
 20008 ;; Registers used:
 20009 ;;		wreg, status,2, status,0, pclath, cstack
 20010 ;; Tracked objects:
 20011 ;;		On entry : 0/0
 20012 ;;		On exit  : 1F/4
 20013 ;;		Unchanged: 0/0
 20014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20019 ;;Total ram usage:        0 bytes
 20020 ;; Hardware stack levels used:    1
 20021 ;; Hardware stack levels required when called:    1
 20022 ;; This function calls:
 20023 ;;		_I2C1_MasterEnableRestart
 20024 ;; This function is called by:
 20025 ;;		_I2C1_DO_TX
 20026 ;;		_I2C1_MasterFsm
 20027 ;; This function uses a non-reentrant model
 20028 ;;
 20029                           
 20030                           
 20031                           ;psect for function _I2C1_DO_SEND_RESTART_WRITE
 20032  2660                     _I2C1_DO_SEND_RESTART_WRITE:
 20033                           
 20034                           ;mcc_generated_files/i2c1_master.c: 460:     I2C1_MasterEnableRestart();
 20035                           
 20036                           ;incstack = 0
 20037                           ; Regs used in _I2C1_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20038  2660  31A6  2632         	fcall	_I2C1_MasterEnableRestart
 20039                           
 20040                           ;mcc_generated_files/i2c1_master.c: 461:     return I2C1_SEND_ADR_WRITE;
 20041  2662  3002               	movlw	2
 20042  2663  0008               	return
 20043  2664                     __end_of_I2C1_DO_SEND_RESTART_WRITE:
 20044                           
 20045                           	psect	text93
 20046  265C                     __ptext93:	
 20047 ;; *************** function _I2C1_DO_SEND_RESTART_READ *****************
 20048 ;; Defined at:
 20049 ;;		line 452 in file "mcc_generated_files/i2c1_master.c"
 20050 ;; Parameters:    Size  Location     Type
 20051 ;;		None
 20052 ;; Auto vars:     Size  Location     Type
 20053 ;;		None
 20054 ;; Return value:  Size  Location     Type
 20055 ;;                  1    wreg      enum E7158
 20056 ;; Registers used:
 20057 ;;		wreg, status,2, status,0, pclath, cstack
 20058 ;; Tracked objects:
 20059 ;;		On entry : 0/0
 20060 ;;		On exit  : 1F/4
 20061 ;;		Unchanged: 0/0
 20062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20067 ;;Total ram usage:        0 bytes
 20068 ;; Hardware stack levels used:    1
 20069 ;; Hardware stack levels required when called:    1
 20070 ;; This function calls:
 20071 ;;		_I2C1_MasterEnableRestart
 20072 ;; This function is called by:
 20073 ;;		_I2C1_DO_TX
 20074 ;;		_I2C1_MasterFsm
 20075 ;; This function uses a non-reentrant model
 20076 ;;
 20077                           
 20078                           
 20079                           ;psect for function _I2C1_DO_SEND_RESTART_READ
 20080  265C                     _I2C1_DO_SEND_RESTART_READ:
 20081                           
 20082                           ;mcc_generated_files/i2c1_master.c: 454:     I2C1_MasterEnableRestart();
 20083                           
 20084                           ;incstack = 0
 20085                           ; Regs used in _I2C1_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
 20086  265C  31A6  2632         	fcall	_I2C1_MasterEnableRestart
 20087                           
 20088                           ;mcc_generated_files/i2c1_master.c: 455:     return I2C1_SEND_ADR_READ;
 20089  265E  3001               	movlw	1
 20090  265F  0008               	return
 20091  2660                     __end_of_I2C1_DO_SEND_RESTART_READ:
 20092                           
 20093                           	psect	text94
 20094  2690                     __ptext94:	
 20095 ;; *************** function _I2C1_DO_RCEN *****************
 20096 ;; Defined at:
 20097 ;;		line 405 in file "mcc_generated_files/i2c1_master.c"
 20098 ;; Parameters:    Size  Location     Type
 20099 ;;		None
 20100 ;; Auto vars:     Size  Location     Type
 20101 ;;		None
 20102 ;; Return value:  Size  Location     Type
 20103 ;;                  1    wreg      enum E7158
 20104 ;; Registers used:
 20105 ;;		wreg, status,2, status,0, pclath, cstack
 20106 ;; Tracked objects:
 20107 ;;		On entry : 1F/0
 20108 ;;		On exit  : 1F/4
 20109 ;;		Unchanged: 0/0
 20110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20115 ;;Total ram usage:        0 bytes
 20116 ;; Hardware stack levels used:    1
 20117 ;; Hardware stack levels required when called:    1
 20118 ;; This function calls:
 20119 ;;		_I2C1_MasterStartRx
 20120 ;; This function is called by:
 20121 ;;		_I2C1_MasterFsm
 20122 ;; This function uses a non-reentrant model
 20123 ;;
 20124                           
 20125                           
 20126                           ;psect for function _I2C1_DO_RCEN
 20127  2690                     _I2C1_DO_RCEN:
 20128                           
 20129                           ;mcc_generated_files/i2c1_master.c: 407:     I2C1_Status.addressNackCheck = 0;
 20130                           
 20131                           ;incstack = 0
 20132                           ; Regs used in _I2C1_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
 20133  2690  0024               	movlb	4	; select bank4
 20134  2691  106B               	bcf	(_I2C1_Status^(0+512)+29),0
 20135                           
 20136                           ;mcc_generated_files/i2c1_master.c: 408:     I2C1_MasterStartRx();
 20137  2692  31A6  2630         	fcall	_I2C1_MasterStartRx
 20138                           
 20139                           ;mcc_generated_files/i2c1_master.c: 409:     return I2C1_RX;
 20140  2694  3004               	movlw	4
 20141  2695  0008               	return
 20142  2696                     __end_of_I2C1_DO_RCEN:
 20143                           
 20144                           	psect	text95
 20145  1D5E                     __ptext95:	
 20146 ;; *************** function _I2C1_DO_RX *****************
 20147 ;; Defined at:
 20148 ;;		line 381 in file "mcc_generated_files/i2c1_master.c"
 20149 ;; Parameters:    Size  Location     Type
 20150 ;;		None
 20151 ;; Auto vars:     Size  Location     Type
 20152 ;;		None
 20153 ;; Return value:  Size  Location     Type
 20154 ;;                  1    wreg      enum E7158
 20155 ;; Registers used:
 20156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20157 ;; Tracked objects:
 20158 ;;		On entry : 1F/0
 20159 ;;		On exit  : 1F/4
 20160 ;;		Unchanged: 0/0
 20161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20164 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20165 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20166 ;;Total ram usage:        3 bytes
 20167 ;; Hardware stack levels used:    1
 20168 ;; Hardware stack levels required when called:    3
 20169 ;; This function calls:
 20170 ;;		Absolute function
 20171 ;;		_I2C1_CallbackReturnReset
 20172 ;;		_I2C1_CallbackReturnStop
 20173 ;;		_I2C1_DO_RX_NACK_RESTART
 20174 ;;		_I2C1_DO_RX_NACK_STOP
 20175 ;;		_I2C1_MasterGetRxData
 20176 ;;		_I2C1_MasterSendAck
 20177 ;;		_rd1RegCompleteHandler
 20178 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 20179 ;;		_rd2RegCompleteHandler
 20180 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 20181 ;;		_rdBlkRegCompleteHandler
 20182 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 20183 ;;		_wr1RegCompleteHandler
 20184 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 20185 ;;		_wr2RegCompleteHandler
 20186 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 20187 ;; This function is called by:
 20188 ;;		_I2C1_MasterFsm
 20189 ;; This function uses a non-reentrant model
 20190 ;;
 20191                           
 20192                           
 20193                           ;psect for function _I2C1_DO_RX
 20194  1D5E                     _I2C1_DO_RX:
 20195                           
 20196                           ;mcc_generated_files/i2c1_master.c: 383:     *I2C1_Status.data_ptr++ = I2C1_MasterGetRxD
      +                          ata();
 20197                           
 20198                           ;incstack = 0
 20199                           ; Regs used in _I2C1_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20200  1D5E  31A6  2638  319D   	fcall	_I2C1_MasterGetRxData
 20201  1D61  00FA               	movwf	??_I2C1_DO_RX
 20202  1D62  0865               	movf	(low ((_I2C1_Status| (0+512)+23)))^0,w
 20203  1D63  0086               	movwf	6
 20204  1D64  0866               	movf	((low ((_I2C1_Status| (0+512)+23))+1))^0,w
 20205  1D65  0087               	movwf	7
 20206  1D66  087A               	movf	??_I2C1_DO_RX,w
 20207  1D67  0081               	movwf	1
 20208  1D68  3001               	movlw	1
 20209  1D69  07E5               	addwf	(low ((_I2C1_Status| (0+512)+23)))^0,f
 20210  1D6A  3000               	movlw	0
 20211  1D6B  3DE6               	addwfc	((low ((_I2C1_Status| (0+512)+23))+1))^0,f
 20212                           
 20213                           ;mcc_generated_files/i2c1_master.c: 384:     if(--I2C1_Status.data_length)
 20214  1D6C  3001               	movlw	1
 20215  1D6D  02E7               	subwf	(_I2C1_Status^(0+512)+25),f
 20216  1D6E  3000               	movlw	0
 20217  1D6F  3BE8               	subwfb	((_I2C1_Status+1)^(0+512)+25),f
 20218  1D70  0867               	movf	(_I2C1_Status^(0+512)+25),w
 20219  1D71  0468               	iorwf	((_I2C1_Status+1)^(0+512)+25),w
 20220  1D72  1903               	btfsc	3,2
 20221  1D73  2D78               	goto	i1l619
 20222                           
 20223                           ;mcc_generated_files/i2c1_master.c: 385:     {;mcc_generated_files/i2c1_master.c: 386:  
      +                                 I2C1_MasterSendAck();
 20224  1D74  31A6  2654         	fcall	_I2C1_MasterSendAck
 20225                           
 20226                           ;mcc_generated_files/i2c1_master.c: 387:         return I2C1_RCEN;
 20227  1D76  3005               	movlw	5
 20228  1D77  0008               	return
 20229  1D78                     i1l619:	
 20230                           ;mcc_generated_files/i2c1_master.c: 389:     else
 20231                           
 20232                           
 20233                           ;mcc_generated_files/i2c1_master.c: 390:     {;mcc_generated_files/i2c1_master.c: 391:  
      +                                 I2C1_Status.bufferFree = 1;
 20234  1D78  15EB               	bsf	(_I2C1_Status^(0+512)+29),3
 20235                           
 20236                           ;mcc_generated_files/i2c1_master.c: 392:         switch(I2C1_Status.callbackTable[I2C1_D
      +                          ATA_COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 20237  1D79  2D80               	goto	i1l7673
 20238  1D7A                     i1l7663:
 20239                           
 20240                           ;mcc_generated_files/i2c1_master.c: 396:                 return I2C1_DO_RX_NACK_RESTART(
      +                          );
 20241  1D7A  31A6  2674         	fcall	_I2C1_DO_RX_NACK_RESTART
 20242  1D7C  0008               	return
 20243  1D7D                     i1l7667:
 20244                           
 20245                           ;mcc_generated_files/i2c1_master.c: 400:                 return I2C1_DO_RX_NACK_STOP();
 20246  1D7D  31A6  2670         	fcall	_I2C1_DO_RX_NACK_STOP
 20247  1D7F  0008               	return
 20248  1D80                     i1l7673:
 20249  1D80  085A               	movf	(low ((_I2C1_Status| (0+512)+12)))^0,w
 20250  1D81  00FA               	movwf	??_I2C1_DO_RX
 20251  1D82  087A               	movf	??_I2C1_DO_RX,w
 20252  1D83  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 20253  1D84  084F               	movf	(_I2C1_Status+1)^(0+512),w
 20254  1D85  008A               	movwf	10
 20255  1D86  084E               	movf	_I2C1_Status^(0+512),w
 20256  1D87  000A               	callw
 20257  1D88  319D               	pagesel	$
 20258  1D89  00FB               	movwf	??_I2C1_DO_RX+1
 20259  1D8A  01FC               	clrf	??_I2C1_DO_RX+2
 20260                           
 20261                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20262                           ; Switch size 1, requested type "simple"
 20263                           ; Number of cases is 1, Range of values is 0 to 0
 20264                           ; switch strategies available:
 20265                           ; Name         Instructions Cycles
 20266                           ; simple_byte            4     3 (average)
 20267                           ; direct_byte            8     6 (fixed)
 20268                           ; jumptable            260     6 (fixed)
 20269                           ;	Chosen strategy is simple_byte
 20270  1D8B  087C               	movf	??_I2C1_DO_RX+2,w
 20271  1D8C  3A00               	xorlw	0	; case 0
 20272  1D8D  1903               	skipnz
 20273  1D8E  2D90               	goto	i1l8691
 20274  1D8F  2D7D               	goto	i1l7667
 20275  1D90                     i1l8691:
 20276                           
 20277                           ; Switch size 1, requested type "simple"
 20278                           ; Number of cases is 4, Range of values is 1 to 4
 20279                           ; switch strategies available:
 20280                           ; Name         Instructions Cycles
 20281                           ; simple_byte           13     7 (average)
 20282                           ; direct_byte           17     9 (fixed)
 20283                           ; jumptable            263     9 (fixed)
 20284                           ;	Chosen strategy is simple_byte
 20285  1D90  087B               	movf	??_I2C1_DO_RX+1,w
 20286  1D91  3A01               	xorlw	1	; case 1
 20287  1D92  1903               	skipnz
 20288  1D93  2D7D               	goto	i1l7667
 20289  1D94  3A03               	xorlw	3	; case 2
 20290  1D95  1903               	skipnz
 20291  1D96  2D7A               	goto	i1l7663
 20292  1D97  3A01               	xorlw	1	; case 3
 20293  1D98  1903               	skipnz
 20294  1D99  2D7A               	goto	i1l7663
 20295  1D9A  3A07               	xorlw	7	; case 4
 20296  1D9B  1903               	skipnz
 20297  1D9C  2D7D               	goto	i1l7667
 20298  1D9D  2D7D               	goto	i1l7667
 20299  1D9E  0008               	return
 20300  1D9F                     __end_of_I2C1_DO_RX:
 20301                           
 20302                           	psect	text96
 20303  1F0F                     __ptext96:	
 20304 ;; *************** function _I2C1_DO_TX *****************
 20305 ;; Defined at:
 20306 ;;		line 357 in file "mcc_generated_files/i2c1_master.c"
 20307 ;; Parameters:    Size  Location     Type
 20308 ;;		None
 20309 ;; Auto vars:     Size  Location     Type
 20310 ;;		None
 20311 ;; Return value:  Size  Location     Type
 20312 ;;                  1    wreg      enum E7158
 20313 ;; Registers used:
 20314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20315 ;; Tracked objects:
 20316 ;;		On entry : 1F/0
 20317 ;;		On exit  : 1F/4
 20318 ;;		Unchanged: 0/0
 20319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20322 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20323 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20324 ;;Total ram usage:        3 bytes
 20325 ;; Hardware stack levels used:    1
 20326 ;; Hardware stack levels required when called:    3
 20327 ;; This function calls:
 20328 ;;		Absolute function
 20329 ;;		_I2C1_CallbackReturnReset
 20330 ;;		_I2C1_CallbackReturnStop
 20331 ;;		_I2C1_DO_SEND_RESTART_READ
 20332 ;;		_I2C1_DO_SEND_RESTART_WRITE
 20333 ;;		_I2C1_DO_SEND_STOP
 20334 ;;		_I2C1_MasterIsNack
 20335 ;;		_I2C1_MasterSendTxData
 20336 ;;		_rd1RegCompleteHandler
 20337 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 20338 ;;		_rd2RegCompleteHandler
 20339 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 20340 ;;		_rdBlkRegCompleteHandler
 20341 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 20342 ;;		_wr1RegCompleteHandler
 20343 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 20344 ;;		_wr2RegCompleteHandler
 20345 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 20346 ;; This function is called by:
 20347 ;;		_I2C1_MasterFsm
 20348 ;; This function uses a non-reentrant model
 20349 ;;
 20350                           
 20351                           
 20352                           ;psect for function _I2C1_DO_TX
 20353  1F0F                     _I2C1_DO_TX:
 20354                           
 20355                           ;mcc_generated_files/i2c1_master.c: 359:     if(I2C1_MasterIsNack())
 20356                           
 20357                           ;incstack = 0
 20358                           ; Regs used in _I2C1_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20359  1F0F  31A6  268A  319F   	fcall	_I2C1_MasterIsNack
 20360  1F12  3A00               	xorlw	0
 20361  1F13  1D03               	btfss	3,2
 20362  1F14  2F1F               	goto	i1l7633
 20363  1F15  2F42               	goto	i1l603
 20364  1F16                     i1l7619:
 20365                           
 20366                           ;mcc_generated_files/i2c1_master.c: 364:                 return I2C1_DO_SEND_RESTART_REA
      +                          D();
 20367  1F16  31A6  265C         	fcall	_I2C1_DO_SEND_RESTART_READ
 20368  1F18  0008               	return
 20369  1F19                     i1l7623:
 20370                           
 20371                           ;mcc_generated_files/i2c1_master.c: 366:                   return I2C1_DO_SEND_RESTART_W
      +                          RITE();
 20372  1F19  31A6  2660         	fcall	_I2C1_DO_SEND_RESTART_WRITE
 20373  1F1B  0008               	return
 20374  1F1C                     i1l7627:
 20375                           
 20376                           ;mcc_generated_files/i2c1_master.c: 370:                 return I2C1_DO_SEND_STOP();
 20377  1F1C  31A6  2668         	fcall	_I2C1_DO_SEND_STOP
 20378  1F1E  0008               	return
 20379  1F1F                     i1l7633:
 20380  1F1F  085D               	movf	(low ((_I2C1_Status| (0+512)+15)))^0,w
 20381  1F20  00FA               	movwf	??_I2C1_DO_TX
 20382  1F21  087A               	movf	??_I2C1_DO_TX,w
 20383  1F22  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 20384  1F23  3006               	movlw	6
 20385  1F24  3E4E               	addlw	(low (_I2C1_Status| (0+512)))& (0+255)
 20386  1F25  0086               	movwf	6
 20387  1F26  3002               	movlw	2	; select bank4/5
 20388  1F27  0087               	movwf	7
 20389  1F28  3F41               	moviw [1]fsr1
 20390  1F29  008A               	movwf	10
 20391  1F2A  3F40               	moviw [0]fsr1
 20392  1F2B  000A               	callw
 20393  1F2C  319F               	pagesel	$
 20394  1F2D  00FB               	movwf	??_I2C1_DO_TX+1
 20395  1F2E  01FC               	clrf	??_I2C1_DO_TX+2
 20396                           
 20397                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20398                           ; Switch size 1, requested type "simple"
 20399                           ; Number of cases is 1, Range of values is 0 to 0
 20400                           ; switch strategies available:
 20401                           ; Name         Instructions Cycles
 20402                           ; simple_byte            4     3 (average)
 20403                           ; direct_byte            8     6 (fixed)
 20404                           ; jumptable            260     6 (fixed)
 20405                           ;	Chosen strategy is simple_byte
 20406  1F2F  087C               	movf	??_I2C1_DO_TX+2,w
 20407  1F30  3A00               	xorlw	0	; case 0
 20408  1F31  1903               	skipnz
 20409  1F32  2F34               	goto	i1l8693
 20410  1F33  2F1C               	goto	i1l7627
 20411  1F34                     i1l8693:
 20412                           
 20413                           ; Switch size 1, requested type "simple"
 20414                           ; Number of cases is 4, Range of values is 1 to 4
 20415                           ; switch strategies available:
 20416                           ; Name         Instructions Cycles
 20417                           ; simple_byte           13     7 (average)
 20418                           ; direct_byte           17     9 (fixed)
 20419                           ; jumptable            263     9 (fixed)
 20420                           ;	Chosen strategy is simple_byte
 20421  1F34  087B               	movf	??_I2C1_DO_TX+1,w
 20422  1F35  3A01               	xorlw	1	; case 1
 20423  1F36  1903               	skipnz
 20424  1F37  2F1C               	goto	i1l7627
 20425  1F38  3A03               	xorlw	3	; case 2
 20426  1F39  1903               	skipnz
 20427  1F3A  2F16               	goto	i1l7619
 20428  1F3B  3A01               	xorlw	1	; case 3
 20429  1F3C  1903               	skipnz
 20430  1F3D  2F19               	goto	i1l7623
 20431  1F3E  3A07               	xorlw	7	; case 4
 20432  1F3F  1903               	skipnz
 20433  1F40  2F1C               	goto	i1l7627
 20434  1F41  2F1C               	goto	i1l7627
 20435  1F42                     i1l603:	
 20436                           ;mcc_generated_files/i2c1_master.c: 373:     else
 20437                           
 20438                           
 20439                           ;mcc_generated_files/i2c1_master.c: 374:     {;mcc_generated_files/i2c1_master.c: 375:  
      +                                 I2C1_Status.addressNackCheck = 0;
 20440  1F42  106B               	bcf	(_I2C1_Status^(0+512)+29),0
 20441                           
 20442                           ;mcc_generated_files/i2c1_master.c: 376:         I2C1_MasterSendTxData(*I2C1_Status.data
      +                          _ptr++);
 20443  1F43  0866               	movf	((low ((_I2C1_Status| (0+512)+23))+1))^0,w
 20444  1F44  00FB               	movwf	??_I2C1_DO_TX+1
 20445  1F45  0865               	movf	(low ((_I2C1_Status| (0+512)+23)))^0,w
 20446  1F46  00FA               	movwf	??_I2C1_DO_TX
 20447  1F47  0AE5               	incf	(low ((_I2C1_Status| (0+512)+23)))^0,f
 20448  1F48  1903               	skipnz
 20449  1F49  0AE6               	incf	((low ((_I2C1_Status| (0+512)+23))+1))^0,f
 20450  1F4A  087A               	movf	??_I2C1_DO_TX,w
 20451  1F4B  0086               	movwf	6
 20452  1F4C  087B               	movf	??_I2C1_DO_TX+1,w
 20453  1F4D  0087               	movwf	7
 20454  1F4E  0801               	movf	1,w
 20455  1F4F  31A6  2658  319F   	fcall	_I2C1_MasterSendTxData
 20456                           
 20457                           ;mcc_generated_files/i2c1_master.c: 377:         return (--I2C1_Status.data_length)?I2C1
      +                          _TX:I2C1_TX_EMPTY;
 20458  1F52  3001               	movlw	1
 20459  1F53  02E7               	subwf	(_I2C1_Status^(0+512)+25),f
 20460  1F54  3000               	movlw	0
 20461  1F55  3BE8               	subwfb	((_I2C1_Status+1)^(0+512)+25),f
 20462  1F56  0867               	movf	(_I2C1_Status^(0+512)+25),w
 20463  1F57  0468               	iorwf	((_I2C1_Status+1)^(0+512)+25),w
 20464  1F58  1D03               	btfss	3,2
 20465  1F59  2F5C               	goto	i1l7641
 20466  1F5A  3006               	movlw	6
 20467  1F5B  0008               	return
 20468  1F5C                     i1l7641:
 20469  1F5C  3003               	movlw	3
 20470  1F5D  0008               	return
 20471  1F5E                     __end_of_I2C1_DO_TX:
 20472                           
 20473                           	psect	text97
 20474  26A2                     __ptext97:	
 20475 ;; *************** function _I2C1_DO_SEND_ADR_WRITE *****************
 20476 ;; Defined at:
 20477 ;;		line 350 in file "mcc_generated_files/i2c1_master.c"
 20478 ;; Parameters:    Size  Location     Type
 20479 ;;		None
 20480 ;; Auto vars:     Size  Location     Type
 20481 ;;		None
 20482 ;; Return value:  Size  Location     Type
 20483 ;;                  1    wreg      enum E7158
 20484 ;; Registers used:
 20485 ;;		wreg, status,2, status,0, pclath, cstack
 20486 ;; Tracked objects:
 20487 ;;		On entry : 1F/0
 20488 ;;		On exit  : 1F/4
 20489 ;;		Unchanged: 0/0
 20490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20495 ;;Total ram usage:        0 bytes
 20496 ;; Hardware stack levels used:    1
 20497 ;; Hardware stack levels required when called:    1
 20498 ;; This function calls:
 20499 ;;		_I2C1_MasterSendTxData
 20500 ;; This function is called by:
 20501 ;;		_I2C1_MasterFsm
 20502 ;; This function uses a non-reentrant model
 20503 ;;
 20504                           
 20505                           
 20506                           ;psect for function _I2C1_DO_SEND_ADR_WRITE
 20507  26A2                     _I2C1_DO_SEND_ADR_WRITE:
 20508                           
 20509                           ;mcc_generated_files/i2c1_master.c: 352:     I2C1_Status.addressNackCheck = 1;
 20510                           
 20511                           ;incstack = 0
 20512                           ; Regs used in _I2C1_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
 20513  26A2  0024               	movlb	4	; select bank4
 20514  26A3  146B               	bsf	(_I2C1_Status^(0+512)+29),0
 20515                           
 20516                           ;mcc_generated_files/i2c1_master.c: 353:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1);
 20517  26A4  3564               	lslf	(_I2C1_Status^(0+512)+22),w
 20518  26A5  31A6  2658         	fcall	_I2C1_MasterSendTxData
 20519                           
 20520                           ;mcc_generated_files/i2c1_master.c: 354:     return I2C1_TX;
 20521  26A7  3003               	movlw	3
 20522  26A8  0008               	return
 20523  26A9                     __end_of_I2C1_DO_SEND_ADR_WRITE:
 20524                           
 20525                           	psect	text98
 20526  26A9                     __ptext98:	
 20527 ;; *************** function _I2C1_DO_SEND_ADR_READ *****************
 20528 ;; Defined at:
 20529 ;;		line 343 in file "mcc_generated_files/i2c1_master.c"
 20530 ;; Parameters:    Size  Location     Type
 20531 ;;		None
 20532 ;; Auto vars:     Size  Location     Type
 20533 ;;		None
 20534 ;; Return value:  Size  Location     Type
 20535 ;;                  1    wreg      enum E7158
 20536 ;; Registers used:
 20537 ;;		wreg, status,2, status,0, pclath, cstack
 20538 ;; Tracked objects:
 20539 ;;		On entry : 1F/0
 20540 ;;		On exit  : 1F/4
 20541 ;;		Unchanged: 0/0
 20542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20547 ;;Total ram usage:        0 bytes
 20548 ;; Hardware stack levels used:    1
 20549 ;; Hardware stack levels required when called:    1
 20550 ;; This function calls:
 20551 ;;		_I2C1_MasterSendTxData
 20552 ;; This function is called by:
 20553 ;;		_I2C1_MasterFsm
 20554 ;; This function uses a non-reentrant model
 20555 ;;
 20556                           
 20557                           
 20558                           ;psect for function _I2C1_DO_SEND_ADR_READ
 20559  26A9                     _I2C1_DO_SEND_ADR_READ:
 20560                           
 20561                           ;mcc_generated_files/i2c1_master.c: 345:     I2C1_Status.addressNackCheck = 1;
 20562                           
 20563                           ;incstack = 0
 20564                           ; Regs used in _I2C1_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
 20565  26A9  0024               	movlb	4	; select bank4
 20566  26AA  146B               	bsf	(_I2C1_Status^(0+512)+29),0
 20567                           
 20568                           ;mcc_generated_files/i2c1_master.c: 346:     I2C1_MasterSendTxData(I2C1_Status.address <
      +                          < 1 | 1);
 20569  26AB  1403               	setc
 20570  26AC  0D64               	rlf	(_I2C1_Status^(0+512)+22),w
 20571  26AD  31A6  2658         	fcall	_I2C1_MasterSendTxData
 20572                           
 20573                           ;mcc_generated_files/i2c1_master.c: 347:     return I2C1_RCEN;
 20574  26AF  3005               	movlw	5
 20575  26B0  0008               	return
 20576  26B1                     __end_of_I2C1_DO_SEND_ADR_READ:
 20577                           
 20578                           	psect	text99
 20579  2680                     __ptext99:	
 20580 ;; *************** function _I2C1_DO_IDLE *****************
 20581 ;; Defined at:
 20582 ;;		line 336 in file "mcc_generated_files/i2c1_master.c"
 20583 ;; Parameters:    Size  Location     Type
 20584 ;;		None
 20585 ;; Auto vars:     Size  Location     Type
 20586 ;;		None
 20587 ;; Return value:  Size  Location     Type
 20588 ;;                  1    wreg      enum E7158
 20589 ;; Registers used:
 20590 ;;		wreg, status,2
 20591 ;; Tracked objects:
 20592 ;;		On entry : 1F/0
 20593 ;;		On exit  : 1F/4
 20594 ;;		Unchanged: 0/0
 20595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20600 ;;Total ram usage:        0 bytes
 20601 ;; Hardware stack levels used:    1
 20602 ;; This function calls:
 20603 ;;		Nothing
 20604 ;; This function is called by:
 20605 ;;		_I2C1_MasterFsm
 20606 ;; This function uses a non-reentrant model
 20607 ;;
 20608                           
 20609                           
 20610                           ;psect for function _I2C1_DO_IDLE
 20611  2680                     _I2C1_DO_IDLE:
 20612                           
 20613                           ;mcc_generated_files/i2c1_master.c: 338:     I2C1_Status.busy = 0;
 20614                           
 20615                           ;incstack = 0
 20616                           ; Regs used in _I2C1_DO_IDLE: [wreg+status,2]
 20617  2680  0024               	movlb	4	; select bank4
 20618  2681  10EB               	bcf	(_I2C1_Status^(0+512)+29),1
 20619                           
 20620                           ;mcc_generated_files/i2c1_master.c: 339:     I2C1_Status.error = I2C1_NOERR;
 20621  2682  01EA               	clrf	(_I2C1_Status^(0+512)+28)
 20622                           
 20623                           ;mcc_generated_files/i2c1_master.c: 340:     return I2C1_RESET;
 20624  2683  300E               	movlw	14
 20625  2684  0008               	return
 20626  2685                     __end_of_I2C1_DO_IDLE:
 20627                           
 20628                           	psect	text100
 20629  1CA0                     __ptext100:	
 20630 ;; *************** function _I2C1_DO_TX_EMPTY *****************
 20631 ;; Defined at:
 20632 ;;		line 412 in file "mcc_generated_files/i2c1_master.c"
 20633 ;; Parameters:    Size  Location     Type
 20634 ;;		None
 20635 ;; Auto vars:     Size  Location     Type
 20636 ;;		None
 20637 ;; Return value:  Size  Location     Type
 20638 ;;                  1    wreg      enum E7158
 20639 ;; Registers used:
 20640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20641 ;; Tracked objects:
 20642 ;;		On entry : 1F/0
 20643 ;;		On exit  : 1B/0
 20644 ;;		Unchanged: 0/0
 20645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20648 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20649 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20650 ;;Total ram usage:        3 bytes
 20651 ;; Hardware stack levels used:    1
 20652 ;; Hardware stack levels required when called:    3
 20653 ;; This function calls:
 20654 ;;		Absolute function
 20655 ;;		_I2C1_CallbackReturnReset
 20656 ;;		_I2C1_CallbackReturnStop
 20657 ;;		_I2C1_DO_SEND_RESTART
 20658 ;;		_I2C1_DO_SEND_STOP
 20659 ;;		_I2C1_MasterSetIrq
 20660 ;;		_rd1RegCompleteHandler
 20661 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 20662 ;;		_rd2RegCompleteHandler
 20663 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 20664 ;;		_rdBlkRegCompleteHandler
 20665 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 20666 ;;		_wr1RegCompleteHandler
 20667 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 20668 ;;		_wr2RegCompleteHandler
 20669 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 20670 ;; This function is called by:
 20671 ;;		_I2C1_MasterFsm
 20672 ;; This function uses a non-reentrant model
 20673 ;;
 20674                           
 20675                           
 20676                           ;psect for function _I2C1_DO_TX_EMPTY
 20677  1CA0                     _I2C1_DO_TX_EMPTY:
 20678                           
 20679                           ;mcc_generated_files/i2c1_master.c: 414:     I2C1_Status.bufferFree = 1;
 20680                           
 20681                           ;incstack = 0
 20682                           ; Regs used in _I2C1_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20683  1CA0  0024               	movlb	4	; select bank4
 20684  1CA1  15EB               	bsf	(_I2C1_Status^(0+512)+29),3
 20685                           
 20686                           ;mcc_generated_files/i2c1_master.c: 415:     switch(I2C1_Status.callbackTable[I2C1_DATA_
      +                          COMPLETE](I2C1_Status.callbackPayload[I2C1_DATA_COMPLETE]))
 20687  1CA2  2CAD               	goto	i1l7697
 20688  1CA3                     i1l7681:
 20689                           
 20690                           ;mcc_generated_files/i2c1_master.c: 419:             return I2C1_DO_SEND_RESTART();
 20691  1CA3  31A6  2664         	fcall	_I2C1_DO_SEND_RESTART
 20692  1CA5  0008               	return
 20693  1CA6                     i1l7685:
 20694                           
 20695                           ;mcc_generated_files/i2c1_master.c: 421:             I2C1_MasterSetIrq();
 20696  1CA6  31A6  263B         	fcall	_I2C1_MasterSetIrq
 20697                           
 20698                           ;mcc_generated_files/i2c1_master.c: 422:             return I2C1_TX;
 20699  1CA8  3003               	movlw	3
 20700  1CA9  0008               	return
 20701  1CAA                     i1l7691:
 20702                           
 20703                           ;mcc_generated_files/i2c1_master.c: 425:             return I2C1_DO_SEND_STOP();
 20704  1CAA  31A6  2668         	fcall	_I2C1_DO_SEND_STOP
 20705  1CAC  0008               	return
 20706  1CAD                     i1l7697:
 20707  1CAD  085A               	movf	(low ((_I2C1_Status| (0+512)+12)))^0,w
 20708  1CAE  00FA               	movwf	??_I2C1_DO_TX_EMPTY
 20709  1CAF  087A               	movf	??_I2C1_DO_TX_EMPTY,w
 20710  1CB0  00F9               	movwf	I2C1_CallbackReturnReset@funPtr
 20711  1CB1  084F               	movf	(_I2C1_Status+1)^(0+512),w
 20712  1CB2  008A               	movwf	10
 20713  1CB3  084E               	movf	_I2C1_Status^(0+512),w
 20714  1CB4  000A               	callw
 20715  1CB5  319C               	pagesel	$
 20716  1CB6  00FB               	movwf	??_I2C1_DO_TX_EMPTY+1
 20717  1CB7  01FC               	clrf	??_I2C1_DO_TX_EMPTY+2
 20718                           
 20719                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20720                           ; Switch size 1, requested type "simple"
 20721                           ; Number of cases is 1, Range of values is 0 to 0
 20722                           ; switch strategies available:
 20723                           ; Name         Instructions Cycles
 20724                           ; simple_byte            4     3 (average)
 20725                           ; direct_byte            8     6 (fixed)
 20726                           ; jumptable            260     6 (fixed)
 20727                           ;	Chosen strategy is simple_byte
 20728  1CB8  087C               	movf	??_I2C1_DO_TX_EMPTY+2,w
 20729  1CB9  3A00               	xorlw	0	; case 0
 20730  1CBA  1903               	skipnz
 20731  1CBB  2CBD               	goto	i1l8695
 20732  1CBC  2CAA               	goto	i1l7691
 20733  1CBD                     i1l8695:
 20734                           
 20735                           ; Switch size 1, requested type "simple"
 20736                           ; Number of cases is 4, Range of values is 1 to 4
 20737                           ; switch strategies available:
 20738                           ; Name         Instructions Cycles
 20739                           ; simple_byte           13     7 (average)
 20740                           ; direct_byte           17     9 (fixed)
 20741                           ; jumptable            263     9 (fixed)
 20742                           ;	Chosen strategy is simple_byte
 20743  1CBD  087B               	movf	??_I2C1_DO_TX_EMPTY+1,w
 20744  1CBE  3A01               	xorlw	1	; case 1
 20745  1CBF  1903               	skipnz
 20746  1CC0  2CAA               	goto	i1l7691
 20747  1CC1  3A03               	xorlw	3	; case 2
 20748  1CC2  1903               	skipnz
 20749  1CC3  2CA3               	goto	i1l7681
 20750  1CC4  3A01               	xorlw	1	; case 3
 20751  1CC5  1903               	skipnz
 20752  1CC6  2CA3               	goto	i1l7681
 20753  1CC7  3A07               	xorlw	7	; case 4
 20754  1CC8  1903               	skipnz
 20755  1CC9  2CA6               	goto	i1l7685
 20756  1CCA  2CAA               	goto	i1l7691
 20757  1CCB  0008               	return
 20758  1CCC                     __end_of_I2C1_DO_TX_EMPTY:
 20759                           
 20760                           	psect	text101
 20761  263B                     __ptext101:	
 20762 ;; *************** function _I2C1_MasterSetIrq *****************
 20763 ;; Defined at:
 20764 ;;		line 649 in file "mcc_generated_files/i2c1_master.c"
 20765 ;; Parameters:    Size  Location     Type
 20766 ;;		None
 20767 ;; Auto vars:     Size  Location     Type
 20768 ;;		None
 20769 ;; Return value:  Size  Location     Type
 20770 ;;                  1    wreg      void 
 20771 ;; Registers used:
 20772 ;;		None
 20773 ;; Tracked objects:
 20774 ;;		On entry : 0/4
 20775 ;;		On exit  : 1F/0
 20776 ;;		Unchanged: 0/0
 20777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20782 ;;Total ram usage:        0 bytes
 20783 ;; Hardware stack levels used:    1
 20784 ;; This function calls:
 20785 ;;		Nothing
 20786 ;; This function is called by:
 20787 ;;		_I2C1_DO_TX_EMPTY
 20788 ;; This function uses a non-reentrant model
 20789 ;;
 20790                           
 20791                           
 20792                           ;psect for function _I2C1_MasterSetIrq
 20793  263B                     _I2C1_MasterSetIrq:
 20794                           
 20795                           ;mcc_generated_files/i2c1_master.c: 651:     PIR1bits.SSP1IF = 1;
 20796                           
 20797                           ;incstack = 0
 20798                           ; Regs used in _I2C1_MasterSetIrq: []
 20799  263B  0020               	movlb	0	; select bank0
 20800  263C  1591               	bsf	17,3	;volatile
 20801  263D  0008               	return
 20802  263E                     __end_of_I2C1_MasterSetIrq:
 20803                           
 20804                           	psect	text102
 20805  268A                     __ptext102:	
 20806 ;; *************** function _I2C1_MasterIsNack *****************
 20807 ;; Defined at:
 20808 ;;		line 601 in file "mcc_generated_files/i2c1_master.c"
 20809 ;; Parameters:    Size  Location     Type
 20810 ;;		None
 20811 ;; Auto vars:     Size  Location     Type
 20812 ;;		None
 20813 ;; Return value:  Size  Location     Type
 20814 ;;                  1    wreg      _Bool 
 20815 ;; Registers used:
 20816 ;;		wreg, status,2, status,0
 20817 ;; Tracked objects:
 20818 ;;		On entry : 1B/4
 20819 ;;		On exit  : 1F/4
 20820 ;;		Unchanged: 0/0
 20821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20826 ;;Total ram usage:        0 bytes
 20827 ;; Hardware stack levels used:    1
 20828 ;; This function calls:
 20829 ;;		Nothing
 20830 ;; This function is called by:
 20831 ;;		_I2C1_MasterFsm
 20832 ;;		_I2C1_DO_TX
 20833 ;; This function uses a non-reentrant model
 20834 ;;
 20835                           
 20836                           
 20837                           ;psect for function _I2C1_MasterIsNack
 20838  268A                     _I2C1_MasterIsNack:
 20839                           
 20840                           ;mcc_generated_files/i2c1_master.c: 603:     return SSP1CON2bits.ACKSTAT;
 20841                           
 20842                           ;incstack = 0
 20843                           ; Regs used in _I2C1_MasterIsNack: [wreg+status,2+status,0]
 20844  268A  0024               	movlb	4	; select bank4
 20845  268B  0E16               	swapf	22,w	;volatile
 20846  268C  0C89               	rrf	9,f
 20847  268D  0C89               	rrf	9,f
 20848  268E  3901               	andlw	1
 20849  268F  0008               	return
 20850  2690                     __end_of_I2C1_MasterIsNack:
 20851                           
 20852                           	psect	text103
 20853  2658                     __ptext103:	
 20854 ;; *************** function _I2C1_MasterSendTxData *****************
 20855 ;; Defined at:
 20856 ;;		line 571 in file "mcc_generated_files/i2c1_master.c"
 20857 ;; Parameters:    Size  Location     Type
 20858 ;;  data            1    wreg     unsigned char 
 20859 ;; Auto vars:     Size  Location     Type
 20860 ;;  data            1    0[COMMON] unsigned char 
 20861 ;; Return value:  Size  Location     Type
 20862 ;;                  1    wreg      void 
 20863 ;; Registers used:
 20864 ;;		wreg
 20865 ;; Tracked objects:
 20866 ;;		On entry : 1F/4
 20867 ;;		On exit  : 1F/4
 20868 ;;		Unchanged: 0/0
 20869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20873 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20874 ;;Total ram usage:        1 bytes
 20875 ;; Hardware stack levels used:    1
 20876 ;; This function calls:
 20877 ;;		Nothing
 20878 ;; This function is called by:
 20879 ;;		_I2C1_DO_SEND_ADR_READ
 20880 ;;		_I2C1_DO_SEND_ADR_WRITE
 20881 ;;		_I2C1_DO_TX
 20882 ;; This function uses a non-reentrant model
 20883 ;;
 20884                           
 20885                           
 20886                           ;psect for function _I2C1_MasterSendTxData
 20887  2658                     _I2C1_MasterSendTxData:
 20888                           
 20889                           ;incstack = 0
 20890                           ; Regs used in _I2C1_MasterSendTxData: [wreg]
 20891                           ;I2C1_MasterSendTxData@data stored from wreg
 20892  2658  00F0               	movwf	I2C1_MasterSendTxData@data
 20893                           
 20894                           ;mcc_generated_files/i2c1_master.c: 571: static __attribute__((inline)) void I2C1_Master
      +                          SendTxData(uint8_t data);mcc_generated_files/i2c1_master.c: 572: {;mcc_generated_files/i
      +                          2c1_master.c: 573:     SSP1BUF = data;
 20895  2659  0870               	movf	I2C1_MasterSendTxData@data,w
 20896  265A  0091               	movwf	17	;volatile
 20897  265B  0008               	return
 20898  265C                     __end_of_I2C1_MasterSendTxData:
 20899                           
 20900                           	psect	text104
 20901  2654                     __ptext104:	
 20902 ;; *************** function _I2C1_MasterSendAck *****************
 20903 ;; Defined at:
 20904 ;;		line 606 in file "mcc_generated_files/i2c1_master.c"
 20905 ;; Parameters:    Size  Location     Type
 20906 ;;		None
 20907 ;; Auto vars:     Size  Location     Type
 20908 ;;		None
 20909 ;; Return value:  Size  Location     Type
 20910 ;;                  1    wreg      void 
 20911 ;; Registers used:
 20912 ;;		None
 20913 ;; Tracked objects:
 20914 ;;		On entry : 1B/0
 20915 ;;		On exit  : 1F/4
 20916 ;;		Unchanged: 0/0
 20917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20922 ;;Total ram usage:        0 bytes
 20923 ;; Hardware stack levels used:    1
 20924 ;; This function calls:
 20925 ;;		Nothing
 20926 ;; This function is called by:
 20927 ;;		_I2C1_DO_RX
 20928 ;;		_I2C1_DO_RX_ACK
 20929 ;; This function uses a non-reentrant model
 20930 ;;
 20931                           
 20932                           
 20933                           ;psect for function _I2C1_MasterSendAck
 20934  2654                     _I2C1_MasterSendAck:
 20935                           
 20936                           ;mcc_generated_files/i2c1_master.c: 608:     SSP1CON2bits.ACKDT = 0;
 20937                           
 20938                           ;incstack = 0
 20939                           ; Regs used in _I2C1_MasterSendAck: []
 20940  2654  0024               	movlb	4	; select bank4
 20941  2655  1296               	bcf	22,5	;volatile
 20942                           
 20943                           ;mcc_generated_files/i2c1_master.c: 609:     SSP1CON2bits.ACKEN = 1;
 20944  2656  1616               	bsf	22,4	;volatile
 20945  2657  0008               	return
 20946  2658                     __end_of_I2C1_MasterSendAck:
 20947                           
 20948                           	psect	text105
 20949  2638                     __ptext105:	
 20950 ;; *************** function _I2C1_MasterGetRxData *****************
 20951 ;; Defined at:
 20952 ;;		line 566 in file "mcc_generated_files/i2c1_master.c"
 20953 ;; Parameters:    Size  Location     Type
 20954 ;;		None
 20955 ;; Auto vars:     Size  Location     Type
 20956 ;;		None
 20957 ;; Return value:  Size  Location     Type
 20958 ;;                  1    wreg      unsigned char 
 20959 ;; Registers used:
 20960 ;;		wreg
 20961 ;; Tracked objects:
 20962 ;;		On entry : 1F/0
 20963 ;;		On exit  : 1F/4
 20964 ;;		Unchanged: 0/0
 20965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20970 ;;Total ram usage:        0 bytes
 20971 ;; Hardware stack levels used:    1
 20972 ;; This function calls:
 20973 ;;		Nothing
 20974 ;; This function is called by:
 20975 ;;		_I2C1_DO_RX
 20976 ;; This function uses a non-reentrant model
 20977 ;;
 20978                           
 20979                           
 20980                           ;psect for function _I2C1_MasterGetRxData
 20981  2638                     _I2C1_MasterGetRxData:
 20982                           
 20983                           ;mcc_generated_files/i2c1_master.c: 568:     return SSP1BUF;
 20984                           
 20985                           ;incstack = 0
 20986                           ; Regs used in _I2C1_MasterGetRxData: [wreg]
 20987  2638  0024               	movlb	4	; select bank4
 20988  2639  0811               	movf	17,w	;volatile
 20989  263A  0008               	return
 20990  263B                     __end_of_I2C1_MasterGetRxData:
 20991                           
 20992                           	psect	text106
 20993  2650                     __ptext106:	
 20994 ;; *************** function _I2C1_MasterSendNack *****************
 20995 ;; Defined at:
 20996 ;;		line 612 in file "mcc_generated_files/i2c1_master.c"
 20997 ;; Parameters:    Size  Location     Type
 20998 ;;		None
 20999 ;; Auto vars:     Size  Location     Type
 21000 ;;		None
 21001 ;; Return value:  Size  Location     Type
 21002 ;;                  1    wreg      void 
 21003 ;; Registers used:
 21004 ;;		None
 21005 ;; Tracked objects:
 21006 ;;		On entry : 0/0
 21007 ;;		On exit  : 1F/4
 21008 ;;		Unchanged: 0/0
 21009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21014 ;;Total ram usage:        0 bytes
 21015 ;; Hardware stack levels used:    1
 21016 ;; This function calls:
 21017 ;;		Nothing
 21018 ;; This function is called by:
 21019 ;;		_I2C1_DO_RX_NACK_STOP
 21020 ;;		_I2C1_DO_RX_NACK_RESTART
 21021 ;; This function uses a non-reentrant model
 21022 ;;
 21023                           
 21024                           
 21025                           ;psect for function _I2C1_MasterSendNack
 21026  2650                     _I2C1_MasterSendNack:
 21027                           
 21028                           ;mcc_generated_files/i2c1_master.c: 614:     SSP1CON2bits.ACKDT = 1;
 21029                           
 21030                           ;incstack = 0
 21031                           ; Regs used in _I2C1_MasterSendNack: []
 21032  2650  0024               	movlb	4	; select bank4
 21033  2651  1696               	bsf	22,5	;volatile
 21034                           
 21035                           ;mcc_generated_files/i2c1_master.c: 615:     SSP1CON2bits.ACKEN = 1;
 21036  2652  1616               	bsf	22,4	;volatile
 21037  2653  0008               	return
 21038  2654                     __end_of_I2C1_MasterSendNack:
 21039                           
 21040                           	psect	text107
 21041  2630                     __ptext107:	
 21042 ;; *************** function _I2C1_MasterStartRx *****************
 21043 ;; Defined at:
 21044 ;;		line 586 in file "mcc_generated_files/i2c1_master.c"
 21045 ;; Parameters:    Size  Location     Type
 21046 ;;		None
 21047 ;; Auto vars:     Size  Location     Type
 21048 ;;		None
 21049 ;; Return value:  Size  Location     Type
 21050 ;;                  1    wreg      void 
 21051 ;; Registers used:
 21052 ;;		None
 21053 ;; Tracked objects:
 21054 ;;		On entry : 1F/4
 21055 ;;		On exit  : 1F/4
 21056 ;;		Unchanged: 0/0
 21057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21062 ;;Total ram usage:        0 bytes
 21063 ;; Hardware stack levels used:    1
 21064 ;; This function calls:
 21065 ;;		Nothing
 21066 ;; This function is called by:
 21067 ;;		_I2C1_DO_RCEN
 21068 ;; This function uses a non-reentrant model
 21069 ;;
 21070                           
 21071                           
 21072                           ;psect for function _I2C1_MasterStartRx
 21073  2630                     _I2C1_MasterStartRx:
 21074                           
 21075                           ;mcc_generated_files/i2c1_master.c: 588:     SSP1CON2bits.RCEN = 1;
 21076                           
 21077                           ;incstack = 0
 21078                           ; Regs used in _I2C1_MasterStartRx: []
 21079  2630  1596               	bsf	22,3	;volatile
 21080  2631  0008               	return
 21081  2632                     __end_of_I2C1_MasterStartRx:
 21082                           
 21083                           	psect	text108
 21084  262E                     __ptext108:	
 21085 ;; *************** function _I2C1_CallbackReturnReset *****************
 21086 ;; Defined at:
 21087 ;;		line 527 in file "mcc_generated_files/i2c1_master.c"
 21088 ;; Parameters:    Size  Location     Type
 21089 ;;  funPtr          1    9[COMMON] PTR void 
 21090 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21091 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21092 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21093 ;; Auto vars:     Size  Location     Type
 21094 ;;		None
 21095 ;; Return value:  Size  Location     Type
 21096 ;;                  1    wreg      enum E360
 21097 ;; Registers used:
 21098 ;;		wreg
 21099 ;; Tracked objects:
 21100 ;;		On entry : 1F/4
 21101 ;;		On exit  : 1F/4
 21102 ;;		Unchanged: 1F/0
 21103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21104 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21108 ;;Total ram usage:        1 bytes
 21109 ;; Hardware stack levels used:    1
 21110 ;; This function calls:
 21111 ;;		Nothing
 21112 ;; This function is called by:
 21113 ;;		_I2C1_Open
 21114 ;;		_I2C1_DO_TX
 21115 ;;		_I2C1_DO_RX
 21116 ;;		_I2C1_DO_TX_EMPTY
 21117 ;;		_I2C1_DO_ADDRESS_NACK
 21118 ;; This function uses a non-reentrant model
 21119 ;;
 21120                           
 21121                           
 21122                           ;psect for function _I2C1_CallbackReturnReset
 21123  262E                     _I2C1_CallbackReturnReset:
 21124                           
 21125                           ;mcc_generated_files/i2c1_master.c: 527: i2c1_operations_t I2C1_CallbackReturnReset(void
      +                           *funPtr);mcc_generated_files/i2c1_master.c: 528: {;mcc_generated_files/i2c1_master.c: 5
      +                          29:     return I2C1_RESET_LINK;
 21126                           
 21127                           ;incstack = 0
 21128                           ; Regs used in _I2C1_CallbackReturnReset: [wreg]
 21129  262E  3005               	movlw	5
 21130  262F  0008               	return
 21131  2630                     __end_of_I2C1_CallbackReturnReset:
 21132                           
 21133                           	psect	text109
 21134  262C                     __ptext109:	
 21135 ;; *************** function _I2C1_CallbackReturnStop *****************
 21136 ;; Defined at:
 21137 ;;		line 522 in file "mcc_generated_files/i2c1_master.c"
 21138 ;; Parameters:    Size  Location     Type
 21139 ;;  funPtr          1    9[COMMON] PTR void 
 21140 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21141 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21142 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21143 ;; Auto vars:     Size  Location     Type
 21144 ;;		None
 21145 ;; Return value:  Size  Location     Type
 21146 ;;                  1    wreg      enum E360
 21147 ;; Registers used:
 21148 ;;		wreg
 21149 ;; Tracked objects:
 21150 ;;		On entry : 1F/4
 21151 ;;		On exit  : 1F/4
 21152 ;;		Unchanged: 1F/0
 21153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21154 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21157 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21158 ;;Total ram usage:        1 bytes
 21159 ;; Hardware stack levels used:    1
 21160 ;; This function calls:
 21161 ;;		Nothing
 21162 ;; This function is called by:
 21163 ;;		_I2C1_Open
 21164 ;;		_I2C1_SetCallback
 21165 ;;		i1_I2C1_SetCallback
 21166 ;;		_I2C1_DO_TX
 21167 ;;		_I2C1_DO_RX
 21168 ;;		_I2C1_DO_TX_EMPTY
 21169 ;;		_I2C1_DO_ADDRESS_NACK
 21170 ;; This function uses a non-reentrant model
 21171 ;;
 21172                           
 21173                           
 21174                           ;psect for function _I2C1_CallbackReturnStop
 21175  262C                     _I2C1_CallbackReturnStop:
 21176                           
 21177                           ;mcc_generated_files/i2c1_master.c: 522: i2c1_operations_t I2C1_CallbackReturnStop(void 
      +                          *funPtr);mcc_generated_files/i2c1_master.c: 523: {;mcc_generated_files/i2c1_master.c: 52
      +                          4:     return I2C1_STOP;
 21178                           
 21179                           ;incstack = 0
 21180                           ; Regs used in _I2C1_CallbackReturnStop: [wreg]
 21181  262C  3001               	movlw	1
 21182  262D  0008               	return
 21183  262E                     __end_of_I2C1_CallbackReturnStop:
 21184                           
 21185                           	psect	text110
 21186  1A05                     __ptext110:	
 21187 ;; *************** function _rdBlkRegCompleteHandler@i2c1_master_example$F229 *****************
 21188 ;; Defined at:
 21189 ;;		line 170 in file "mcc_generated_files/examples/i2c1_master_example.c"
 21190 ;; Parameters:    Size  Location     Type
 21191 ;;  ptr             1    9[COMMON] PTR void 
 21192 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21193 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21194 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21195 ;; Auto vars:     Size  Location     Type
 21196 ;;		None
 21197 ;; Return value:  Size  Location     Type
 21198 ;;                  1    wreg      enum E360
 21199 ;; Registers used:
 21200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21201 ;; Tracked objects:
 21202 ;;		On entry : 1F/4
 21203 ;;		On exit  : 1F/4
 21204 ;;		Unchanged: 0/0
 21205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21206 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21210 ;;Total ram usage:        1 bytes
 21211 ;; Hardware stack levels used:    1
 21212 ;; Hardware stack levels required when called:    2
 21213 ;; This function calls:
 21214 ;;		i1_I2C1_SetBuffer
 21215 ;;		i1_I2C1_SetDataCompleteCallback
 21216 ;; This function is called by:
 21217 ;;		_I2C1_DO_TX
 21218 ;;		_I2C1_DO_RX
 21219 ;;		_I2C1_DO_TX_EMPTY
 21220 ;;		_I2C1_DO_ADDRESS_NACK
 21221 ;; This function uses a non-reentrant model
 21222 ;;
 21223                           
 21224                           
 21225                           ;psect for function _rdBlkRegCompleteHandler@i2c1_master_example$F229
 21226  1A05                     _rdBlkRegCompleteHandler@i2c1_master_example$F229:
 21227                           
 21228                           ;mcc_generated_files/examples/i2c1_master_example.c: 170: static i2c1_operations_t rdBlk
      +                          RegCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 171: {
      +                          ;mcc_generated_files/examples/i2c1_master_example.c: 172:     I2C1_SetBuffer(((i2c1_buff
      +                          er_t *)ptr)->data,((i2c1_buffer_t*)ptr)->len);
 21229                           
 21230                           ;incstack = 0
 21231                           ; Regs used in _rdBlkRegCompleteHandler@i2c1_master_example$F229: [wreg+fsr1l+fsr1h+stat
      +                          us,2+status,0+pclath+cstack]
 21232  1A05  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr,w
 21233  1A06  3E02               	addlw	2
 21234  1A07  0086               	movwf	6
 21235  1A08  0187               	clrf	7
 21236  1A09  0801               	movf	1,w
 21237  1A0A  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21238  1A0B  3000               	movlw	0
 21239  1A0C  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21240  1A0D  0879               	movf	rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr,w
 21241  1A0E  0086               	movwf	6
 21242  1A0F  0187               	clrf	7
 21243  1A10  3F40               	moviw [0]fsr1
 21244  1A11  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21245  1A12  3F41               	moviw [1]fsr1
 21246  1A13  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21247  1A14  31A6  26E5  319A   	fcall	i1_I2C1_SetBuffer
 21248                           
 21249                           ;mcc_generated_files/examples/i2c1_master_example.c: 173:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21250  1A17  3000               	movlw	0
 21251  1A18  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21252  1A19  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21253  1A1A  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21254  1A1B  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21255                           
 21256                           ;mcc_generated_files/examples/i2c1_master_example.c: 174:     return I2C1_RESTART_READ;
 21257  1A1D  3002               	movlw	2
 21258  1A1E  0008               	return
 21259  1A1F                     __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F229:
 21260                           
 21261                           	psect	text111
 21262  1906                     __ptext111:	
 21263 ;; *************** function _wr1RegCompleteHandler@i2c1_master_example$F212 *****************
 21264 ;; Defined at:
 21265 ;;		line 156 in file "mcc_generated_files/examples/i2c1_master_example.c"
 21266 ;; Parameters:    Size  Location     Type
 21267 ;;  ptr             1    9[COMMON] PTR void 
 21268 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21269 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21270 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21271 ;; Auto vars:     Size  Location     Type
 21272 ;;		None
 21273 ;; Return value:  Size  Location     Type
 21274 ;;                  1    wreg      enum E360
 21275 ;; Registers used:
 21276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21277 ;; Tracked objects:
 21278 ;;		On entry : 1F/4
 21279 ;;		On exit  : 1F/4
 21280 ;;		Unchanged: 0/0
 21281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21282 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21286 ;;Total ram usage:        1 bytes
 21287 ;; Hardware stack levels used:    1
 21288 ;; Hardware stack levels required when called:    2
 21289 ;; This function calls:
 21290 ;;		i1_I2C1_SetBuffer
 21291 ;;		i1_I2C1_SetDataCompleteCallback
 21292 ;; This function is called by:
 21293 ;;		_I2C1_DO_TX
 21294 ;;		_I2C1_DO_RX
 21295 ;;		_I2C1_DO_TX_EMPTY
 21296 ;;		_I2C1_DO_ADDRESS_NACK
 21297 ;; This function uses a non-reentrant model
 21298 ;;
 21299                           
 21300                           
 21301                           ;psect for function _wr1RegCompleteHandler@i2c1_master_example$F212
 21302  1906                     _wr1RegCompleteHandler@i2c1_master_example$F212:
 21303                           
 21304                           ;mcc_generated_files/examples/i2c1_master_example.c: 156: static i2c1_operations_t wr1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 157: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 158:     I2C1_SetBuffer(ptr,1);
 21305                           
 21306                           ;incstack = 0
 21307                           ; Regs used in _wr1RegCompleteHandler@i2c1_master_example$F212: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 21308  1906  0879               	movf	wr1RegCompleteHandler@i2c1_master_example$F212@ptr,w
 21309  1907  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21310  1908  39FF               	andlw	255
 21311  1909  1D03               	skipz
 21312  190A  3000               	movlw	0
 21313  190B  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21314  190C  3001               	movlw	1
 21315  190D  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21316  190E  3000               	movlw	0
 21317  190F  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21318  1910  31A6  26E5  3199   	fcall	i1_I2C1_SetBuffer
 21319                           
 21320                           ;mcc_generated_files/examples/i2c1_master_example.c: 159:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21321  1913  3000               	movlw	0
 21322  1914  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21323  1915  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21324  1916  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21325  1917  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21326                           
 21327                           ;mcc_generated_files/examples/i2c1_master_example.c: 160:     return I2C1_CONTINUE;
 21328  1919  3004               	movlw	4
 21329  191A  0008               	return
 21330  191B                     __end_of_wr1RegCompleteHandler@i2c1_master_example$F212:
 21331                           
 21332                           	psect	text112
 21333  18F1                     __ptext112:	
 21334 ;; *************** function _rd2RegCompleteHandler@i2c1_master_example$F206 *****************
 21335 ;; Defined at:
 21336 ;;		line 149 in file "mcc_generated_files/examples/i2c1_master_example.c"
 21337 ;; Parameters:    Size  Location     Type
 21338 ;;  ptr             1    9[COMMON] PTR void 
 21339 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21340 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21341 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21342 ;; Auto vars:     Size  Location     Type
 21343 ;;		None
 21344 ;; Return value:  Size  Location     Type
 21345 ;;                  1    wreg      enum E360
 21346 ;; Registers used:
 21347 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21348 ;; Tracked objects:
 21349 ;;		On entry : 1F/4
 21350 ;;		On exit  : 1F/4
 21351 ;;		Unchanged: 0/0
 21352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21353 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21356 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21357 ;;Total ram usage:        1 bytes
 21358 ;; Hardware stack levels used:    1
 21359 ;; Hardware stack levels required when called:    2
 21360 ;; This function calls:
 21361 ;;		i1_I2C1_SetBuffer
 21362 ;;		i1_I2C1_SetDataCompleteCallback
 21363 ;; This function is called by:
 21364 ;;		_I2C1_DO_TX
 21365 ;;		_I2C1_DO_RX
 21366 ;;		_I2C1_DO_TX_EMPTY
 21367 ;;		_I2C1_DO_ADDRESS_NACK
 21368 ;; This function uses a non-reentrant model
 21369 ;;
 21370                           
 21371                           
 21372                           ;psect for function _rd2RegCompleteHandler@i2c1_master_example$F206
 21373  18F1                     _rd2RegCompleteHandler@i2c1_master_example$F206:
 21374                           
 21375                           ;mcc_generated_files/examples/i2c1_master_example.c: 149: static i2c1_operations_t rd2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 150: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 151:     I2C1_SetBuffer(ptr,2);
 21376                           
 21377                           ;incstack = 0
 21378                           ; Regs used in _rd2RegCompleteHandler@i2c1_master_example$F206: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 21379  18F1  0879               	movf	rd2RegCompleteHandler@i2c1_master_example$F206@ptr,w
 21380  18F2  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21381  18F3  39FF               	andlw	255
 21382  18F4  1D03               	skipz
 21383  18F5  3000               	movlw	0
 21384  18F6  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21385  18F7  3002               	movlw	2
 21386  18F8  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21387  18F9  3000               	movlw	0
 21388  18FA  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21389  18FB  31A6  26E5  3198   	fcall	i1_I2C1_SetBuffer
 21390                           
 21391                           ;mcc_generated_files/examples/i2c1_master_example.c: 152:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21392  18FE  3000               	movlw	0
 21393  18FF  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21394  1900  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21395  1901  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21396  1902  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21397                           
 21398                           ;mcc_generated_files/examples/i2c1_master_example.c: 153:     return I2C1_RESTART_READ;
 21399  1904  3002               	movlw	2
 21400  1905  0008               	return
 21401  1906                     __end_of_rd2RegCompleteHandler@i2c1_master_example$F206:
 21402                           
 21403                           	psect	text113
 21404  18DC                     __ptext113:	
 21405 ;; *************** function _rd1RegCompleteHandler@i2c1_master_example$F195 *****************
 21406 ;; Defined at:
 21407 ;;		line 142 in file "mcc_generated_files/examples/i2c1_master_example.c"
 21408 ;; Parameters:    Size  Location     Type
 21409 ;;  ptr             1    9[COMMON] PTR void 
 21410 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21411 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21412 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21413 ;; Auto vars:     Size  Location     Type
 21414 ;;		None
 21415 ;; Return value:  Size  Location     Type
 21416 ;;                  1    wreg      enum E360
 21417 ;; Registers used:
 21418 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21419 ;; Tracked objects:
 21420 ;;		On entry : 1F/4
 21421 ;;		On exit  : 1F/4
 21422 ;;		Unchanged: 0/0
 21423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21424 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21427 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21428 ;;Total ram usage:        1 bytes
 21429 ;; Hardware stack levels used:    1
 21430 ;; Hardware stack levels required when called:    2
 21431 ;; This function calls:
 21432 ;;		i1_I2C1_SetBuffer
 21433 ;;		i1_I2C1_SetDataCompleteCallback
 21434 ;; This function is called by:
 21435 ;;		_I2C1_DO_TX
 21436 ;;		_I2C1_DO_RX
 21437 ;;		_I2C1_DO_TX_EMPTY
 21438 ;;		_I2C1_DO_ADDRESS_NACK
 21439 ;; This function uses a non-reentrant model
 21440 ;;
 21441                           
 21442                           
 21443                           ;psect for function _rd1RegCompleteHandler@i2c1_master_example$F195
 21444  18DC                     _rd1RegCompleteHandler@i2c1_master_example$F195:
 21445                           
 21446                           ;mcc_generated_files/examples/i2c1_master_example.c: 142: static i2c1_operations_t rd1Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 143: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 144:     I2C1_SetBuffer(ptr,1);
 21447                           
 21448                           ;incstack = 0
 21449                           ; Regs used in _rd1RegCompleteHandler@i2c1_master_example$F195: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 21450  18DC  0879               	movf	rd1RegCompleteHandler@i2c1_master_example$F195@ptr,w
 21451  18DD  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21452  18DE  39FF               	andlw	255
 21453  18DF  1D03               	skipz
 21454  18E0  3000               	movlw	0
 21455  18E1  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21456  18E2  3001               	movlw	1
 21457  18E3  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21458  18E4  3000               	movlw	0
 21459  18E5  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21460  18E6  31A6  26E5  3198   	fcall	i1_I2C1_SetBuffer
 21461                           
 21462                           ;mcc_generated_files/examples/i2c1_master_example.c: 145:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21463  18E9  3000               	movlw	0
 21464  18EA  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21465  18EB  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21466  18EC  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21467  18ED  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21468                           
 21469                           ;mcc_generated_files/examples/i2c1_master_example.c: 146:     return I2C1_RESTART_READ;
 21470  18EF  3002               	movlw	2
 21471  18F0  0008               	return
 21472  18F1                     __end_of_rd1RegCompleteHandler@i2c1_master_example$F195:
 21473                           
 21474                           	psect	text114
 21475  19EB                     __ptext114:	
 21476 ;; *************** function _rdBlkRegCompleteHandler *****************
 21477 ;; Defined at:
 21478 ;;		line 134 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21479 ;; Parameters:    Size  Location     Type
 21480 ;;  p               1    9[COMMON] PTR void 
 21481 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21482 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21483 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21484 ;; Auto vars:     Size  Location     Type
 21485 ;;		None
 21486 ;; Return value:  Size  Location     Type
 21487 ;;                  1    wreg      enum E360
 21488 ;; Registers used:
 21489 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21490 ;; Tracked objects:
 21491 ;;		On entry : 1F/4
 21492 ;;		On exit  : 1F/4
 21493 ;;		Unchanged: 0/0
 21494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21495 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21498 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21499 ;;Total ram usage:        1 bytes
 21500 ;; Hardware stack levels used:    1
 21501 ;; Hardware stack levels required when called:    2
 21502 ;; This function calls:
 21503 ;;		i1_I2C1_SetBuffer
 21504 ;;		i1_I2C1_SetDataCompleteCallback
 21505 ;; This function is called by:
 21506 ;;		_I2C1_DO_TX
 21507 ;;		_I2C1_DO_RX
 21508 ;;		_I2C1_DO_TX_EMPTY
 21509 ;;		_I2C1_DO_ADDRESS_NACK
 21510 ;; This function uses a non-reentrant model
 21511 ;;
 21512                           
 21513                           
 21514                           ;psect for function _rdBlkRegCompleteHandler
 21515  19EB                     _rdBlkRegCompleteHandler:
 21516                           
 21517                           ;mcc_generated_files/drivers/i2c_simple_master.c: 134: static i2c1_operations_t rdBlkReg
      +                          CompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 135: {;mcc_gen
      +                          erated_files/drivers/i2c_simple_master.c: 136:     I2C1_SetBuffer(((buf_t *)p)->data,((b
      +                          uf_t*)p)->len);
 21518                           
 21519                           ;incstack = 0
 21520                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
 21521  19EB  0879               	movf	rdBlkRegCompleteHandler@p,w
 21522  19EC  3E02               	addlw	2
 21523  19ED  0086               	movwf	6
 21524  19EE  0187               	clrf	7
 21525  19EF  0801               	movf	1,w
 21526  19F0  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21527  19F1  3000               	movlw	0
 21528  19F2  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21529  19F3  0879               	movf	rdBlkRegCompleteHandler@p,w
 21530  19F4  0086               	movwf	6
 21531  19F5  0187               	clrf	7
 21532  19F6  3F40               	moviw [0]fsr1
 21533  19F7  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21534  19F8  3F41               	moviw [1]fsr1
 21535  19F9  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21536  19FA  31A6  26E5  3199   	fcall	i1_I2C1_SetBuffer
 21537                           
 21538                           ;mcc_generated_files/drivers/i2c_simple_master.c: 137:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 21539  19FD  3000               	movlw	0
 21540  19FE  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21541  19FF  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21542  1A00  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21543  1A01  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21544                           
 21545                           ;mcc_generated_files/drivers/i2c_simple_master.c: 138:     return I2C1_RESTART_READ;
 21546  1A03  3002               	movlw	2
 21547  1A04  0008               	return
 21548  1A05                     __end_of_rdBlkRegCompleteHandler:
 21549                           
 21550                           	psect	text115
 21551  27EB                     __ptext115:	
 21552 ;; *************** function _wr2RegCompleteHandler *****************
 21553 ;; Defined at:
 21554 ;;		line 110 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21555 ;; Parameters:    Size  Location     Type
 21556 ;;  p               1    9[COMMON] PTR void 
 21557 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21558 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21559 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21560 ;; Auto vars:     Size  Location     Type
 21561 ;;		None
 21562 ;; Return value:  Size  Location     Type
 21563 ;;                  1    wreg      enum E360
 21564 ;; Registers used:
 21565 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21566 ;; Tracked objects:
 21567 ;;		On entry : 1F/4
 21568 ;;		On exit  : 1F/4
 21569 ;;		Unchanged: 0/0
 21570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21571 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21575 ;;Total ram usage:        1 bytes
 21576 ;; Hardware stack levels used:    1
 21577 ;; Hardware stack levels required when called:    2
 21578 ;; This function calls:
 21579 ;;		i1_I2C1_SetBuffer
 21580 ;;		i1_I2C1_SetDataCompleteCallback
 21581 ;; This function is called by:
 21582 ;;		_I2C1_DO_TX
 21583 ;;		_I2C1_DO_RX
 21584 ;;		_I2C1_DO_TX_EMPTY
 21585 ;;		_I2C1_DO_ADDRESS_NACK
 21586 ;; This function uses a non-reentrant model
 21587 ;;
 21588                           
 21589                           
 21590                           ;psect for function _wr2RegCompleteHandler
 21591  27EB                     _wr2RegCompleteHandler:
 21592                           
 21593                           ;mcc_generated_files/drivers/i2c_simple_master.c: 110: static i2c1_operations_t wr2RegCo
      +                          mpleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 111: {;mcc_gener
      +                          ated_files/drivers/i2c_simple_master.c: 112:     I2C1_SetBuffer(p,2);
 21594                           
 21595                           ;incstack = 0
 21596                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21597  27EB  0879               	movf	wr2RegCompleteHandler@p,w
 21598  27EC  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21599  27ED  39FF               	andlw	255
 21600  27EE  1D03               	skipz
 21601  27EF  3000               	movlw	0
 21602  27F0  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21603  27F1  3002               	movlw	2
 21604  27F2  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21605  27F3  3000               	movlw	0
 21606  27F4  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21607  27F5  31A6  26E5  31A7   	fcall	i1_I2C1_SetBuffer
 21608                           
 21609                           ;mcc_generated_files/drivers/i2c_simple_master.c: 113:     I2C1_SetDataCompleteCallback(
      +                          ((void*)0),((void*)0));
 21610  27F8  3000               	movlw	0
 21611  27F9  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21612  27FA  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21613  27FB  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21614  27FC  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21615                           
 21616                           ;mcc_generated_files/drivers/i2c_simple_master.c: 114:     return I2C1_CONTINUE;
 21617  27FE  3004               	movlw	4
 21618  27FF  0008               	return
 21619  2800                     __end_of_wr2RegCompleteHandler:
 21620                           
 21621                           	psect	text116
 21622  27D6                     __ptext116:	
 21623 ;; *************** function _rd2RegCompleteHandler *****************
 21624 ;; Defined at:
 21625 ;;		line 87 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21626 ;; Parameters:    Size  Location     Type
 21627 ;;  p               1    9[COMMON] PTR void 
 21628 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21629 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21630 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21631 ;; Auto vars:     Size  Location     Type
 21632 ;;		None
 21633 ;; Return value:  Size  Location     Type
 21634 ;;                  1    wreg      enum E360
 21635 ;; Registers used:
 21636 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21637 ;; Tracked objects:
 21638 ;;		On entry : 1F/4
 21639 ;;		On exit  : 1F/4
 21640 ;;		Unchanged: 0/0
 21641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21642 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21645 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21646 ;;Total ram usage:        1 bytes
 21647 ;; Hardware stack levels used:    1
 21648 ;; Hardware stack levels required when called:    2
 21649 ;; This function calls:
 21650 ;;		i1_I2C1_SetBuffer
 21651 ;;		i1_I2C1_SetDataCompleteCallback
 21652 ;; This function is called by:
 21653 ;;		_I2C1_DO_TX
 21654 ;;		_I2C1_DO_RX
 21655 ;;		_I2C1_DO_TX_EMPTY
 21656 ;;		_I2C1_DO_ADDRESS_NACK
 21657 ;; This function uses a non-reentrant model
 21658 ;;
 21659                           
 21660                           
 21661                           ;psect for function _rd2RegCompleteHandler
 21662  27D6                     _rd2RegCompleteHandler:
 21663                           
 21664                           ;mcc_generated_files/drivers/i2c_simple_master.c: 87: static i2c1_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 88: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 89:     I2C1_SetBuffer(p,2);
 21665                           
 21666                           ;incstack = 0
 21667                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21668  27D6  0879               	movf	rd2RegCompleteHandler@p,w
 21669  27D7  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21670  27D8  39FF               	andlw	255
 21671  27D9  1D03               	skipz
 21672  27DA  3000               	movlw	0
 21673  27DB  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21674  27DC  3002               	movlw	2
 21675  27DD  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21676  27DE  3000               	movlw	0
 21677  27DF  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21678  27E0  31A6  26E5  31A7   	fcall	i1_I2C1_SetBuffer
 21679                           
 21680                           ;mcc_generated_files/drivers/i2c_simple_master.c: 90:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 21681  27E3  3000               	movlw	0
 21682  27E4  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21683  27E5  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21684  27E6  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21685  27E7  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21686                           
 21687                           ;mcc_generated_files/drivers/i2c_simple_master.c: 91:     return I2C1_RESTART_READ;
 21688  27E9  3002               	movlw	2
 21689  27EA  0008               	return
 21690  27EB                     __end_of_rd2RegCompleteHandler:
 21691                           
 21692                           	psect	text117
 21693  27C1                     __ptext117:	
 21694 ;; *************** function _rd1RegCompleteHandler *****************
 21695 ;; Defined at:
 21696 ;;		line 58 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21697 ;; Parameters:    Size  Location     Type
 21698 ;;  p               1    9[COMMON] PTR void 
 21699 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21700 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21701 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21702 ;; Auto vars:     Size  Location     Type
 21703 ;;		None
 21704 ;; Return value:  Size  Location     Type
 21705 ;;                  1    wreg      enum E360
 21706 ;; Registers used:
 21707 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21708 ;; Tracked objects:
 21709 ;;		On entry : 1F/4
 21710 ;;		On exit  : 1F/4
 21711 ;;		Unchanged: 0/0
 21712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21713 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21717 ;;Total ram usage:        1 bytes
 21718 ;; Hardware stack levels used:    1
 21719 ;; Hardware stack levels required when called:    2
 21720 ;; This function calls:
 21721 ;;		i1_I2C1_SetBuffer
 21722 ;;		i1_I2C1_SetDataCompleteCallback
 21723 ;; This function is called by:
 21724 ;;		_i2c_read1ByteRegister
 21725 ;;		_I2C1_DO_TX
 21726 ;;		_I2C1_DO_RX
 21727 ;;		_I2C1_DO_TX_EMPTY
 21728 ;;		_I2C1_DO_ADDRESS_NACK
 21729 ;; This function uses a non-reentrant model
 21730 ;;
 21731                           
 21732                           
 21733                           ;psect for function _rd1RegCompleteHandler
 21734  27C1                     _rd1RegCompleteHandler:
 21735                           
 21736                           ;mcc_generated_files/drivers/i2c_simple_master.c: 58: static i2c1_operations_t rd1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 59: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 60:     I2C1_SetBuffer(p,1);
 21737                           
 21738                           ;incstack = 0
 21739                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21740  27C1  0879               	movf	rd1RegCompleteHandler@p,w
 21741  27C2  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21742  27C3  39FF               	andlw	255
 21743  27C4  1D03               	skipz
 21744  27C5  3000               	movlw	0
 21745  27C6  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21746  27C7  3001               	movlw	1
 21747  27C8  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21748  27C9  3000               	movlw	0
 21749  27CA  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21750  27CB  31A6  26E5  31A7   	fcall	i1_I2C1_SetBuffer
 21751                           
 21752                           ;mcc_generated_files/drivers/i2c_simple_master.c: 61:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 21753  27CE  3000               	movlw	0
 21754  27CF  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21755  27D0  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21756  27D1  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21757  27D2  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21758                           
 21759                           ;mcc_generated_files/drivers/i2c_simple_master.c: 62:     return I2C1_RESTART_READ;
 21760  27D4  3002               	movlw	2
 21761  27D5  0008               	return
 21762  27D6                     __end_of_rd1RegCompleteHandler:
 21763                           
 21764                           	psect	text118
 21765  27AC                     __ptext118:	
 21766 ;; *************** function _wr1RegCompleteHandler *****************
 21767 ;; Defined at:
 21768 ;;		line 31 in file "mcc_generated_files/drivers/i2c_simple_master.c"
 21769 ;; Parameters:    Size  Location     Type
 21770 ;;  p               1    9[COMMON] PTR void 
 21771 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21772 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21773 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21774 ;; Auto vars:     Size  Location     Type
 21775 ;;		None
 21776 ;; Return value:  Size  Location     Type
 21777 ;;                  1    wreg      enum E360
 21778 ;; Registers used:
 21779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21780 ;; Tracked objects:
 21781 ;;		On entry : 1F/4
 21782 ;;		On exit  : 1F/4
 21783 ;;		Unchanged: 0/0
 21784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21785 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21789 ;;Total ram usage:        1 bytes
 21790 ;; Hardware stack levels used:    1
 21791 ;; Hardware stack levels required when called:    2
 21792 ;; This function calls:
 21793 ;;		i1_I2C1_SetBuffer
 21794 ;;		i1_I2C1_SetDataCompleteCallback
 21795 ;; This function is called by:
 21796 ;;		_I2C1_DO_TX
 21797 ;;		_I2C1_DO_RX
 21798 ;;		_I2C1_DO_TX_EMPTY
 21799 ;;		_I2C1_DO_ADDRESS_NACK
 21800 ;; This function uses a non-reentrant model
 21801 ;;
 21802                           
 21803                           
 21804                           ;psect for function _wr1RegCompleteHandler
 21805  27AC                     _wr1RegCompleteHandler:
 21806                           
 21807                           ;mcc_generated_files/drivers/i2c_simple_master.c: 31: static i2c1_operations_t wr1RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 32: {;mcc_generat
      +                          ed_files/drivers/i2c_simple_master.c: 33:     I2C1_SetBuffer(p,1);
 21808                           
 21809                           ;incstack = 0
 21810                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
 21811  27AC  0879               	movf	wr1RegCompleteHandler@p,w
 21812  27AD  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21813  27AE  39FF               	andlw	255
 21814  27AF  1D03               	skipz
 21815  27B0  3000               	movlw	0
 21816  27B1  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21817  27B2  3001               	movlw	1
 21818  27B3  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21819  27B4  3000               	movlw	0
 21820  27B5  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21821  27B6  31A6  26E5  31A7   	fcall	i1_I2C1_SetBuffer
 21822                           
 21823                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34:     I2C1_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
 21824  27B9  3000               	movlw	0
 21825  27BA  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21826  27BB  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21827  27BC  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21828  27BD  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21829                           
 21830                           ;mcc_generated_files/drivers/i2c_simple_master.c: 35:     return I2C1_CONTINUE;
 21831  27BF  3004               	movlw	4
 21832  27C0  0008               	return
 21833  27C1                     __end_of_wr1RegCompleteHandler:
 21834                           
 21835                           	psect	text119
 21836  2797                     __ptext119:	
 21837 ;; *************** function _wr2RegCompleteHandler@i2c1_master_example$F218 *****************
 21838 ;; Defined at:
 21839 ;;		line 163 in file "mcc_generated_files/examples/i2c1_master_example.c"
 21840 ;; Parameters:    Size  Location     Type
 21841 ;;  ptr             1    9[COMMON] PTR void 
 21842 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21843 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21844 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21845 ;; Auto vars:     Size  Location     Type
 21846 ;;		None
 21847 ;; Return value:  Size  Location     Type
 21848 ;;                  1    wreg      enum E360
 21849 ;; Registers used:
 21850 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21851 ;; Tracked objects:
 21852 ;;		On entry : 1F/4
 21853 ;;		On exit  : 1F/4
 21854 ;;		Unchanged: 0/0
 21855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21856 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21857 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21859 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21860 ;;Total ram usage:        1 bytes
 21861 ;; Hardware stack levels used:    1
 21862 ;; Hardware stack levels required when called:    2
 21863 ;; This function calls:
 21864 ;;		i1_I2C1_SetBuffer
 21865 ;;		i1_I2C1_SetDataCompleteCallback
 21866 ;; This function is called by:
 21867 ;;		_I2C1_DO_TX
 21868 ;;		_I2C1_DO_RX
 21869 ;;		_I2C1_DO_TX_EMPTY
 21870 ;;		_I2C1_DO_ADDRESS_NACK
 21871 ;; This function uses a non-reentrant model
 21872 ;;
 21873                           
 21874                           
 21875                           ;psect for function _wr2RegCompleteHandler@i2c1_master_example$F218
 21876  2797                     _wr2RegCompleteHandler@i2c1_master_example$F218:
 21877                           
 21878                           ;mcc_generated_files/examples/i2c1_master_example.c: 163: static i2c1_operations_t wr2Re
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c1_master_example.c: 164: {;m
      +                          cc_generated_files/examples/i2c1_master_example.c: 165:     I2C1_SetBuffer(ptr,2);
 21879                           
 21880                           ;incstack = 0
 21881                           ; Regs used in _wr2RegCompleteHandler@i2c1_master_example$F218: [wreg+fsr1l+fsr1h+status
      +                          ,2+status,0+pclath+cstack]
 21882  2797  0879               	movf	wr2RegCompleteHandler@i2c1_master_example$F218@ptr,w
 21883  2798  00F0               	movwf	i1I2C1_SetBuffer@buffer
 21884  2799  39FF               	andlw	255
 21885  279A  1D03               	skipz
 21886  279B  3000               	movlw	0
 21887  279C  00F1               	movwf	i1I2C1_SetBuffer@buffer+1
 21888  279D  3002               	movlw	2
 21889  279E  00F2               	movwf	i1I2C1_SetBuffer@bufferSize
 21890  279F  3000               	movlw	0
 21891  27A0  00F3               	movwf	i1I2C1_SetBuffer@bufferSize+1
 21892  27A1  31A6  26E5  31A7   	fcall	i1_I2C1_SetBuffer
 21893                           
 21894                           ;mcc_generated_files/examples/i2c1_master_example.c: 166:     I2C1_SetDataCompleteCallba
      +                          ck(((void*)0),((void*)0));
 21895  27A4  3000               	movlw	0
 21896  27A5  00F5               	movwf	i1I2C1_SetDataCompleteCallback@cb
 21897  27A6  00F6               	movwf	i1I2C1_SetDataCompleteCallback@cb+1
 21898  27A7  01F7               	clrf	i1I2C1_SetDataCompleteCallback@ptr
 21899  27A8  31A6  26F1         	fcall	i1_I2C1_SetDataCompleteCallback
 21900                           
 21901                           ;mcc_generated_files/examples/i2c1_master_example.c: 167:     return I2C1_CONTINUE;
 21902  27AA  3004               	movlw	4
 21903  27AB  0008               	return
 21904  27AC                     __end_of_wr2RegCompleteHandler@i2c1_master_example$F218:
 21905                           
 21906                           	psect	text120
 21907  26F1                     __ptext120:	
 21908 ;; *************** function i1_I2C1_SetDataCompleteCallback *****************
 21909 ;; Defined at:
 21910 ;;		line 275 in file "mcc_generated_files/i2c1_master.c"
 21911 ;; Parameters:    Size  Location     Type
 21912 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
 21913 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 21914 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 21915 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 21916 ;;  ptr             1    7[COMMON] PTR void 
 21917 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21918 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21919 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21920 ;; Auto vars:     Size  Location     Type
 21921 ;;		None
 21922 ;; Return value:  Size  Location     Type
 21923 ;;                  1    wreg      void 
 21924 ;; Registers used:
 21925 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21926 ;; Tracked objects:
 21927 ;;		On entry : 1F/4
 21928 ;;		On exit  : 1F/4
 21929 ;;		Unchanged: 1F/0
 21930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21931 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21933 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21934 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21935 ;;Total ram usage:        4 bytes
 21936 ;; Hardware stack levels used:    1
 21937 ;; Hardware stack levels required when called:    1
 21938 ;; This function calls:
 21939 ;;		i1_I2C1_SetCallback
 21940 ;; This function is called by:
 21941 ;;		_wr1RegCompleteHandler
 21942 ;;		_rd1RegCompleteHandler
 21943 ;;		_rd2RegCompleteHandler
 21944 ;;		_wr2RegCompleteHandler
 21945 ;;		_rdBlkRegCompleteHandler
 21946 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 21947 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 21948 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 21949 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 21950 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 21951 ;; This function uses a non-reentrant model
 21952 ;;
 21953                           
 21954                           
 21955                           ;psect for function i1_I2C1_SetDataCompleteCallback
 21956  26F1                     i1_I2C1_SetDataCompleteCallback:
 21957                           
 21958                           ;mcc_generated_files/i2c1_master.c: 275: void I2C1_SetDataCompleteCallback(i2c1_callback
      +                          _t cb, void *ptr);mcc_generated_files/i2c1_master.c: 276: {;mcc_generated_files/i2c1_mas
      +                          ter.c: 277:     I2C1_SetCallback(I2C1_DATA_COMPLETE, cb, ptr);
 21959                           
 21960                           ;incstack = 0
 21961                           ; Regs used in i1_I2C1_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
      +                          th+cstack]
 21962  26F1  0876               	movf	i1I2C1_SetDataCompleteCallback@cb+1,w
 21963  26F2  00F1               	movwf	i1I2C1_SetCallback@cb+1
 21964  26F3  0875               	movf	i1I2C1_SetDataCompleteCallback@cb,w
 21965  26F4  00F0               	movwf	i1I2C1_SetCallback@cb
 21966  26F5  0877               	movf	i1I2C1_SetDataCompleteCallback@ptr,w
 21967  26F6  00F8               	movwf	??i1_I2C1_SetDataCompleteCallback
 21968  26F7  0878               	movf	??i1_I2C1_SetDataCompleteCallback,w
 21969  26F8  00F2               	movwf	i1I2C1_SetCallback@ptr
 21970  26F9  3000               	movlw	0
 21971  26FA  319B  23D4         	fcall	i1_I2C1_SetCallback
 21972  26FC  0008               	return
 21973  26FD                     __end_ofi1_I2C1_SetDataCompleteCallback:
 21974                           
 21975                           	psect	text121
 21976  1BD4                     __ptext121:	
 21977 ;; *************** function i1_I2C1_SetCallback *****************
 21978 ;; Defined at:
 21979 ;;		line 305 in file "mcc_generated_files/i2c1_master.c"
 21980 ;; Parameters:    Size  Location     Type
 21981 ;;  idx             1    wreg     enum E7176
 21982 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
 21983 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c1_master_example$F229(1), wr2RegCompleteHandler@i2c1_master_exa
      +mple$F218(1), wr1RegCompleteHandler@i2c1_master_example$F212(1), 
 21984 ;;		 -> rd2RegCompleteHandler@i2c1_master_example$F206(1), rd1RegCompleteHandler@i2c1_master_example$F195(1), rdBlkRegCo
      +mpleteHandler(1), wr2RegCompleteHandler(1), 
 21985 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 21986 ;;  ptr             1    2[COMMON] PTR void 
 21987 ;;		 -> I2C1_ReadDataBlock@bufferBlock(3), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@data(1), I2C1_Read2B
      +yteRegister@returnValue(2), 
 21988 ;;		 -> I2C1_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegi
      +ster@result(2), 
 21989 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
 21990 ;; Auto vars:     Size  Location     Type
 21991 ;;  idx             1    4[COMMON] enum E7176
 21992 ;; Return value:  Size  Location     Type
 21993 ;;                  1    wreg      void 
 21994 ;; Registers used:
 21995 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 21996 ;; Tracked objects:
 21997 ;;		On entry : 1F/4
 21998 ;;		On exit  : 1F/4
 21999 ;;		Unchanged: 1F/0
 22000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22001 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22002 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22003 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22004 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22005 ;;Total ram usage:        5 bytes
 22006 ;; Hardware stack levels used:    1
 22007 ;; This function calls:
 22008 ;;		Nothing
 22009 ;; This function is called by:
 22010 ;;		i1_I2C1_SetDataCompleteCallback
 22011 ;; This function uses a non-reentrant model
 22012 ;;
 22013                           
 22014                           
 22015                           ;psect for function i1_I2C1_SetCallback
 22016  1BD4                     i1_I2C1_SetCallback:
 22017                           
 22018                           ;incstack = 0
 22019                           ; Regs used in i1_I2C1_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
 22020                           ;i1I2C1_SetCallback@idx stored from wreg
 22021  1BD4  00F4               	movwf	i1I2C1_SetCallback@idx
 22022                           
 22023                           ;mcc_generated_files/i2c1_master.c: 305: static void I2C1_SetCallback(i2c1_callbackIndex
      +                          _t idx, i2c1_callback_t cb, void *ptr);mcc_generated_files/i2c1_master.c: 306: {;mcc_gen
      +                          erated_files/i2c1_master.c: 307:     if(cb)
 22024  1BD5  0870               	movf	i1I2C1_SetCallback@cb,w
 22025  1BD6  0471               	iorwf	i1I2C1_SetCallback@cb+1,w
 22026  1BD7  1903               	btfsc	3,2
 22027  1BD8  2BEC               	goto	i1l4779
 22028                           
 22029                           ;mcc_generated_files/i2c1_master.c: 308:     {;mcc_generated_files/i2c1_master.c: 309:  
      +                                 I2C1_Status.callbackTable[idx] = cb;
 22030  1BD9  3574               	lslf	i1I2C1_SetCallback@idx,w
 22031  1BDA  3E4E               	addlw	(low (_I2C1_Status| (0+512)))& (0+255)
 22032  1BDB  0086               	movwf	6
 22033  1BDC  3002               	movlw	2	; select bank4/5
 22034  1BDD  0087               	movwf	7
 22035  1BDE  0870               	movf	i1I2C1_SetCallback@cb,w
 22036  1BDF  3FC0               	movwi [0]fsr1
 22037  1BE0  0871               	movf	i1I2C1_SetCallback@cb+1,w
 22038  1BE1  3FC1               	movwi [1]fsr1
 22039                           
 22040                           ;mcc_generated_files/i2c1_master.c: 310:         I2C1_Status.callbackPayload[idx] = ptr;
 22041  1BE2  0872               	movf	i1I2C1_SetCallback@ptr,w
 22042  1BE3  00F3               	movwf	??i1_I2C1_SetCallback
 22043  1BE4  0874               	movf	i1I2C1_SetCallback@idx,w
 22044  1BE5  3E5A               	addlw	(low ((_I2C1_Status| (0+512)+12)))& (0+255)
 22045  1BE6  0086               	movwf	6
 22046  1BE7  3002               	movlw	2	; select bank4/5
 22047  1BE8  0087               	movwf	7
 22048  1BE9  0873               	movf	??i1_I2C1_SetCallback,w
 22049  1BEA  0081               	movwf	1
 22050                           
 22051                           ;mcc_generated_files/i2c1_master.c: 311:     }
 22052  1BEB  0008               	return
 22053  1BEC                     i1l4779:
 22054                           
 22055                           ;mcc_generated_files/i2c1_master.c: 313:     {;mcc_generated_files/i2c1_master.c: 314:  
      +                                 I2C1_Status.callbackTable[idx] = I2C1_CallbackReturnStop;
 22056  1BEC  3574               	lslf	i1I2C1_SetCallback@idx,w
 22057  1BED  3E4E               	addlw	(low (_I2C1_Status| (0+512)))& (0+255)
 22058  1BEE  0086               	movwf	6
 22059  1BEF  3002               	movlw	2	; select bank4/5
 22060  1BF0  0087               	movwf	7
 22061  1BF1  302C               	movlw	low _I2C1_CallbackReturnStop
 22062  1BF2  3FC0               	movwi [0]fsr1
 22063  1BF3  3026               	movlw	high _I2C1_CallbackReturnStop
 22064  1BF4  3FC1               	movwi [1]fsr1
 22065                           
 22066                           ;mcc_generated_files/i2c1_master.c: 315:         I2C1_Status.callbackPayload[idx] = ((vo
      +                          id*)0);
 22067  1BF5  0874               	movf	i1I2C1_SetCallback@idx,w
 22068  1BF6  3E5A               	addlw	(low ((_I2C1_Status| (0+512)+12)))& (0+255)
 22069  1BF7  0086               	movwf	6
 22070  1BF8  3002               	movlw	2	; select bank4/5
 22071  1BF9  0087               	movwf	7
 22072  1BFA  0181               	clrf	1
 22073  1BFB  0008               	return
 22074  1BFC                     __end_ofi1_I2C1_SetCallback:
 22075                           
 22076                           	psect	text122
 22077  26E5                     __ptext122:	
 22078 ;; *************** function i1_I2C1_SetBuffer *****************
 22079 ;; Defined at:
 22080 ;;		line 265 in file "mcc_generated_files/i2c1_master.c"
 22081 ;; Parameters:    Size  Location     Type
 22082 ;;  buffer          2    0[COMMON] PTR void 
 22083 ;;		 -> tasbuff(2), write_tas6422@buffer(2), TAS_NORMAL(2), TAS_CLEAR_FALT(2), 
 22084 ;;		 -> TAS_CHK_RAILS(2), TAS_PLAY(2), TAS_MUTE(2), TAS_FS96K(2), 
 22085 ;;		 -> TAS_FS48K(2), TAS_FS44K(2), TAS_AC(2), TAS_DC(2), 
 22086 ;;		 -> TAS_DCDIAG_CLEAR(2), TAS_RUN(2), TAS_RESET(2), INIT9211_31(2), 
 22087 ;;		 -> INIT9211_27(2), INIT9211_26(2), INIT9211_2B(2), INIT9211_2E(2), 
 22088 ;;		 -> INIT9211_20(2), ADC_96K(2), ADC_DC(2), DIT_I2S(2), 
 22089 ;;		 -> DIT_LVDS(2), DIT_ADC(2), DIT_DIR(2), ADC_ATTR_3dB(2), 
 22090 ;;		 -> ADC_ATTL_3dB(2), CALC_MOUT(2), DIR_COAX(2), DIR_OPT(2), 
 22091 ;;		 -> AUXSRC_LVDS(2), AUXSRC_ADC(2), AUXSRC_DIR(2), AUXSRC_AUTO(2), 
 22092 ;;		 -> SRC_I2S(2), SRC_LVDS(2), SRC_ADC(2), SRC_DIR(2), 
 22093 ;;		 -> I2S_IN(2), I2S_OUT(2), I2C1_ReadDataBlock@reg(1), I2C1_ReadDataBlock@bufferBlock(3), 
 22094 ;;		 -> I2C1_Write2ByteRegister@reg(1), I2C1_Write2ByteRegister@data(2), I2C1_Write1ByteRegister@reg(1), I2C1_Write1Byte
      +Register@data(1), 
 22095 ;;		 -> I2C1_Read2ByteRegister@reg(1), I2C1_Read2ByteRegister@returnValue(2), I2C1_Read1ByteRegister@reg(1), I2C1_Read1B
      +yteRegister@returnValue(1), 
 22096 ;;		 -> i2c_readDataBlock@reg(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2),
      + 
 22097 ;;		 -> i2c_read2ByteRegister@reg(1), i2c_read2ByteRegister@result(2), i2c_read1ByteRegister@reg(1), i2c_read1ByteRegist
      +er@d2(1), 
 22098 ;;		 -> i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister@data(1), NULL(0), i2c_lcd_send_data@lowerdata_en(1), 
 22099 ;;		 -> i2c_lcd_send_data@lowerdata(1), i2c_lcd_send_data@upperdata_en(1), i2c_lcd_send_data@upperdata(1), i2c_lcd_send_
      +upper4bit@upperdata_en(1), 
 22100 ;;		 -> i2c_lcd_send_upper4bit@upperdata(1), i2c_lcd_send_command@lowerdata_en(1), i2c_lcd_send_command@lowerdata(1), i2
      +c_lcd_send_command@upperdata_en(1), 
 22101 ;;		 -> i2c_lcd_send_command@upperdata(1), 
 22102 ;;  bufferSize      2    2[COMMON] unsigned int 
 22103 ;; Auto vars:     Size  Location     Type
 22104 ;;		None
 22105 ;; Return value:  Size  Location     Type
 22106 ;;                  1    wreg      void 
 22107 ;; Registers used:
 22108 ;;		wreg
 22109 ;; Tracked objects:
 22110 ;;		On entry : 1F/4
 22111 ;;		On exit  : 1F/4
 22112 ;;		Unchanged: 0/0
 22113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22114 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22117 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22118 ;;Total ram usage:        4 bytes
 22119 ;; Hardware stack levels used:    1
 22120 ;; This function calls:
 22121 ;;		Nothing
 22122 ;; This function is called by:
 22123 ;;		_wr1RegCompleteHandler
 22124 ;;		_rd1RegCompleteHandler
 22125 ;;		_rd2RegCompleteHandler
 22126 ;;		_wr2RegCompleteHandler
 22127 ;;		_rdBlkRegCompleteHandler
 22128 ;;		_rd1RegCompleteHandler@i2c1_master_example$F195
 22129 ;;		_rd2RegCompleteHandler@i2c1_master_example$F206
 22130 ;;		_wr1RegCompleteHandler@i2c1_master_example$F212
 22131 ;;		_wr2RegCompleteHandler@i2c1_master_example$F218
 22132 ;;		_rdBlkRegCompleteHandler@i2c1_master_example$F229
 22133 ;; This function uses a non-reentrant model
 22134 ;;
 22135                           
 22136                           
 22137                           ;psect for function i1_I2C1_SetBuffer
 22138  26E5                     i1_I2C1_SetBuffer:
 22139                           
 22140                           ;mcc_generated_files/i2c1_master.c: 265: void I2C1_SetBuffer(void *buffer, size_t buffer
      +                          Size);mcc_generated_files/i2c1_master.c: 266: {;mcc_generated_files/i2c1_master.c: 267: 
      +                              if(I2C1_Status.bufferFree)
 22141                           
 22142                           ;incstack = 0
 22143                           ; Regs used in i1_I2C1_SetBuffer: [wreg]
 22144  26E5  1DEB               	btfss	(_I2C1_Status^(0+512)+29),3
 22145  26E6  0008               	return
 22146                           
 22147                           ;mcc_generated_files/i2c1_master.c: 268:     {;mcc_generated_files/i2c1_master.c: 269:  
      +                                 I2C1_Status.data_ptr = buffer;
 22148  26E7  0871               	movf	i1I2C1_SetBuffer@buffer+1,w
 22149  26E8  00E6               	movwf	((low ((_I2C1_Status| (0+512)+23))+1))^0
 22150  26E9  0870               	movf	i1I2C1_SetBuffer@buffer,w
 22151  26EA  00E5               	movwf	(low ((_I2C1_Status| (0+512)+23)))^0
 22152                           
 22153                           ;mcc_generated_files/i2c1_master.c: 270:         I2C1_Status.data_length = bufferSize;
 22154  26EB  0873               	movf	i1I2C1_SetBuffer@bufferSize+1,w
 22155  26EC  00E8               	movwf	((_I2C1_Status+1)^(0+512)+25)
 22156  26ED  0872               	movf	i1I2C1_SetBuffer@bufferSize,w
 22157  26EE  00E7               	movwf	(_I2C1_Status^(0+512)+25)
 22158                           
 22159                           ;mcc_generated_files/i2c1_master.c: 271:         I2C1_Status.bufferFree = 0;
 22160  26EF  11EB               	bcf	(_I2C1_Status^(0+512)+29),3
 22161  26F0  0008               	return
 22162  26F1                     __end_ofi1_I2C1_SetBuffer:
 22163                           
 22164                           	psect	text123
 22165  2635                     __ptext123:	
 22166 ;; *************** function _I2C1_MasterStop *****************
 22167 ;; Defined at:
 22168 ;;		line 596 in file "mcc_generated_files/i2c1_master.c"
 22169 ;; Parameters:    Size  Location     Type
 22170 ;;		None
 22171 ;; Auto vars:     Size  Location     Type
 22172 ;;		None
 22173 ;; Return value:  Size  Location     Type
 22174 ;;                  1    wreg      void 
 22175 ;; Registers used:
 22176 ;;		None
 22177 ;; Tracked objects:
 22178 ;;		On entry : 0/0
 22179 ;;		On exit  : 1F/4
 22180 ;;		Unchanged: 0/0
 22181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22186 ;;Total ram usage:        0 bytes
 22187 ;; Hardware stack levels used:    1
 22188 ;; This function calls:
 22189 ;;		Nothing
 22190 ;; This function is called by:
 22191 ;;		_I2C1_DO_SEND_STOP
 22192 ;; This function uses a non-reentrant model
 22193 ;;
 22194                           
 22195                           
 22196                           ;psect for function _I2C1_MasterStop
 22197  2635                     _I2C1_MasterStop:
 22198                           
 22199                           ;mcc_generated_files/i2c1_master.c: 598:     SSP1CON2bits.PEN = 1;
 22200                           
 22201                           ;incstack = 0
 22202                           ; Regs used in _I2C1_MasterStop: []
 22203  2635  0024               	movlb	4	; select bank4
 22204  2636  1516               	bsf	22,2	;volatile
 22205  2637  0008               	return
 22206  2638                     __end_of_I2C1_MasterStop:
 22207                           
 22208                           	psect	text124
 22209  2632                     __ptext124:	
 22210 ;; *************** function _I2C1_MasterEnableRestart *****************
 22211 ;; Defined at:
 22212 ;;		line 576 in file "mcc_generated_files/i2c1_master.c"
 22213 ;; Parameters:    Size  Location     Type
 22214 ;;		None
 22215 ;; Auto vars:     Size  Location     Type
 22216 ;;		None
 22217 ;; Return value:  Size  Location     Type
 22218 ;;                  1    wreg      void 
 22219 ;; Registers used:
 22220 ;;		None
 22221 ;; Tracked objects:
 22222 ;;		On entry : 0/0
 22223 ;;		On exit  : 1F/4
 22224 ;;		Unchanged: 0/0
 22225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22230 ;;Total ram usage:        0 bytes
 22231 ;; Hardware stack levels used:    1
 22232 ;; This function calls:
 22233 ;;		Nothing
 22234 ;; This function is called by:
 22235 ;;		_I2C1_DO_SEND_RESTART_READ
 22236 ;;		_I2C1_DO_SEND_RESTART_WRITE
 22237 ;;		_I2C1_DO_SEND_RESTART
 22238 ;; This function uses a non-reentrant model
 22239 ;;
 22240                           
 22241                           
 22242                           ;psect for function _I2C1_MasterEnableRestart
 22243  2632                     _I2C1_MasterEnableRestart:
 22244                           
 22245                           ;mcc_generated_files/i2c1_master.c: 578:     SSP1CON2bits.RSEN = 1;
 22246                           
 22247                           ;incstack = 0
 22248                           ; Regs used in _I2C1_MasterEnableRestart: []
 22249  2632  0024               	movlb	4	; select bank4
 22250  2633  1496               	bsf	22,1	;volatile
 22251  2634  0008               	return
 22252  2635                     __end_of_I2C1_MasterEnableRestart:
 22253  007E                     btemp	set	126	;btemp
 22254  007E                     int$flags	set	126
 22255  007E                     wtemp0	set	126
 22256                           
 22257                           	psect	config
 22258                           
 22259                           ;Config register CONFIG1 @ 0x8007
 22260                           ;	FEXTOSC External Oscillator mode Selection bits
 22261                           ;	FEXTOSC = OFF, Oscillator not enabled
 22262                           ;	Power-up default value for COSC bits
 22263                           ;	RSTOSC = HFINT32, HFINTOSC with 2x PLL (32MHz)
 22264                           ;	Clock Out Enable bit
 22265                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
 22266                           ;	Clock Switch Enable bit
 22267                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 22268                           ;	Fail-Safe Clock Monitor Enable
 22269                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 22270  8007                     	org	32775
 22271  8007  3F8C               	dw	16268
 22272                           
 22273                           ;Config register CONFIG2 @ 0x8008
 22274                           ;	Master Clear Enable bit
 22275                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input; MCLR internally disabled; Weak pu
      +                          ll-up under control of port pin's WPU control bit.
 22276                           ;	Power-up Timer Enable bit
 22277                           ;	PWRTE = OFF, PWRT disabled
 22278                           ;	Watchdog Timer Enable bits
 22279                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
 22280                           ;	Low-power BOR enable bit
 22281                           ;	LPBOREN = OFF, ULPBOR disabled
 22282                           ;	Brown-out Reset Enable bits
 22283                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
 22284                           ;	Brown-out Reset Voltage selection bit
 22285                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
 22286                           ;	PPSLOCK bit One-Way Set Enable bit
 22287                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
 22288                           ;	Stack Overflow/Underflow Reset Enable bit
 22289                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 22290                           ;	Debugger enable bit
 22291                           ;	DEBUG = OFF, Background debugger disabled
 22292  8008                     	org	32776
 22293  8008  3FF2               	dw	16370
 22294                           
 22295                           ;Config register CONFIG3 @ 0x8009
 22296                           ;	User NVM self-write protection bits
 22297                           ;	WRT = OFF, Write protection off
 22298                           ;	Low Voltage Programming Enable bit
 22299                           ;	LVP = OFF, High Voltage on MCLR/VPP must be used for programming.
 22300  8009                     	org	32777
 22301  8009  1FFF               	dw	8191
 22302                           
 22303                           ;Config register CONFIG4 @ 0x800A
 22304                           ;	User NVM Program Memory Code Protection bit
 22305                           ;	CP = OFF, User NVM code protection disabled
 22306                           ;	Data NVM Memory Code Protection bit
 22307                           ;	CPD = OFF, Data NVM code protection disabled
 22308  800A                     	org	32778
 22309  800A  3FFF               	dw	16383

Data Sizes:
    Strings     163
    Constant    526
    Data        156
    BSS         165
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     74      77
    BANK1            80     79      79
    BANK2            80      0      73
    BANK3            80      0      79
    BANK4            80      0      76
    BANK5            80     11      52
    BANK6            80      0      41
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$2753$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_DO_TX$2758	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_DO_TX$2753	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_MasterFsm$2752	const PTR FTN()enum E7158 size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    I2C1_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    lcd_disp_param$2751	PTR const unsigned char  size(2) Largest target is 63
		 -> lcd_hpf_fc(CODE[63]), 

    lcd_disp_param$2750	PTR const unsigned char  size(2) Largest target is 112
		 -> lcd_fs_name(CODE[112]), lcd_aux_name(CODE[14]), 

    S623$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 112
		 -> stoa@nuls(BANK0[7]), dbuf(BANK5[32]), ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), 
		 -> lcd_hpf_fc(CODE[63]), lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), ledstr(UNKNOWN), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 112
		 -> stoa@nuls(BANK0[7]), dbuf(BANK5[32]), ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), 
		 -> lcd_hpf_fc(CODE[63]), lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), ledstr(UNKNOWN), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 63
		 -> led_i2s_dir(CODE[14]), STR_27(CODE[4]), led_hpf_fc(CODE[63]), STR_12(CODE[2]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), STR_6(CODE[2]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_1(CODE[4]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 63
		 -> led_i2s_dir(CODE[14]), STR_27(CODE[4]), led_hpf_fc(CODE[63]), STR_12(CODE[2]), 
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_7(CODE[4]), STR_6(CODE[2]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_1(CODE[4]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_12(CODE[2]), STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[2]), 
		 -> STR_4(CODE[4]), STR_3(CODE[4]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK6[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_36(CODE[33]), STR_35(CODE[19]), STR_34(CODE[14]), STR_33(CODE[10]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_13(CODE[20]), STR_11(CODE[4]), 
		 -> STR_8(CODE[4]), STR_5(CODE[4]), STR_2(CODE[4]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_36(CODE[33]), STR_35(CODE[19]), STR_34(CODE[14]), STR_33(CODE[10]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_13(CODE[20]), STR_11(CODE[4]), 
		 -> STR_8(CODE[4]), STR_5(CODE[4]), STR_2(CODE[4]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 33
		 -> STR_36(CODE[33]), STR_35(CODE[19]), STR_34(CODE[14]), STR_33(CODE[10]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_13(CODE[20]), STR_11(CODE[4]), 
		 -> STR_8(CODE[4]), STR_5(CODE[4]), STR_2(CODE[4]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 112
		 -> ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), lcd_hpf_fc(CODE[63]), lcd_aux_name(CODE[14]), 
		 -> lcd_src_name(CODE[40]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 112
		 -> ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), lcd_hpf_fc(CODE[63]), lcd_aux_name(CODE[14]), 
		 -> lcd_src_name(CODE[40]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 112
		 -> stoa@nuls(BANK0[7]), ?_sprintf(BANK1[2]), lcd_fs_name(CODE[112]), lcd_hpf_fc(CODE[63]), 
		 -> lcd_aux_name(CODE[14]), lcd_src_name(CODE[40]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK5[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_36(CODE[33]), STR_35(CODE[19]), STR_34(CODE[14]), STR_33(CODE[10]), 
		 -> STR_20(CODE[5]), STR_19(CODE[5]), STR_13(CODE[20]), STR_11(CODE[4]), 
		 -> STR_8(CODE[4]), STR_5(CODE[4]), STR_2(CODE[4]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK6[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2119_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK6[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    f.buffer	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK6[41]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    srcset9211	PTR struct .[5] size(1) Largest target is 2
		 -> DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), SRC_I2S(BANK3[2]), SRC_LVDS(BANK3[2]), 
		 -> SRC_ADC(BANK2[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 0
		 -> ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    puts_led@str	PTR unsigned char  size(2) Largest target is 35
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), 
		 -> STR_28(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), STR_24(CODE[4]), 
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), led_src_name(CODE[35]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    puts_led@cpoint	PTR unsigned char  size(2) Largest target is 35
		 -> STR_32(CODE[4]), STR_31(CODE[4]), STR_30(CODE[4]), STR_29(CODE[4]), 
		 -> STR_28(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), STR_24(CODE[4]), 
		 -> STR_23(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), 
		 -> STR_17(CODE[4]), led_src_name(CODE[35]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), ledstr(UNKNOWN), ledbuff(UNKNOWN), 

    I2C1_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_MasterIsr(), 

    MSSP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C1_MasterIsr(), Absolute function(), 

    I2C1_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C1_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C1_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), 
		 -> rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C1_SetBuffer@buffer	PTR void  size(2) Largest target is 4
		 -> tasbuff(BANK2[2]), write_tas6422@buffer(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), 
		 -> TAS_CHK_RAILS(BANK3[2]), TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), 
		 -> TAS_FS48K(BANK3[2]), TAS_FS44K(BANK3[2]), TAS_AC(BANK2[2]), TAS_DC(BANK3[2]), 
		 -> TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), 
		 -> INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), 
		 -> INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), 
		 -> DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), DIT_DIR(BANK2[2]), ADC_ATTR_3dB(BANK3[2]), 
		 -> ADC_ATTL_3dB(BANK3[2]), CALC_MOUT(BANK3[2]), DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), 
		 -> AUXSRC_LVDS(BANK3[2]), AUXSRC_ADC(BANK3[2]), AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK3[2]), 
		 -> SRC_I2S(BANK3[2]), SRC_LVDS(BANK3[2]), SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), 
		 -> I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), i2c_lcd_send_data@lowerdata_en(BANK0[1]), 
		 -> i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), i2c_lcd_send_data@upperdata(BANK0[1]), i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), i2c_lcd_send_command@lowerdata(BANK0[1]), i2c_lcd_send_command@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_command@upperdata(BANK0[1]), 

    S623$data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> tasbuff(BANK2[2]), write_tas6422@buffer(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), 
		 -> TAS_CHK_RAILS(BANK3[2]), TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), 
		 -> TAS_FS48K(BANK3[2]), TAS_FS44K(BANK3[2]), TAS_AC(BANK2[2]), TAS_DC(BANK3[2]), 
		 -> TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), 
		 -> INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), 
		 -> INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), 
		 -> DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), DIT_DIR(BANK2[2]), ADC_ATTR_3dB(BANK3[2]), 
		 -> ADC_ATTL_3dB(BANK3[2]), CALC_MOUT(BANK3[2]), DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), 
		 -> AUXSRC_LVDS(BANK3[2]), AUXSRC_ADC(BANK3[2]), AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK3[2]), 
		 -> SRC_I2S(BANK3[2]), SRC_LVDS(BANK3[2]), SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), 
		 -> I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), i2c_lcd_send_data@lowerdata_en(BANK0[1]), 
		 -> i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), i2c_lcd_send_data@upperdata(BANK0[1]), i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), i2c_lcd_send_command@lowerdata(BANK0[1]), i2c_lcd_send_command@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_command@upperdata(BANK0[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(2) Largest target is 4
		 -> tasbuff(BANK2[2]), write_tas6422@buffer(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), 
		 -> TAS_CHK_RAILS(BANK3[2]), TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), 
		 -> TAS_FS48K(BANK3[2]), TAS_FS44K(BANK3[2]), TAS_AC(BANK2[2]), TAS_DC(BANK3[2]), 
		 -> TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), 
		 -> INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), 
		 -> INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), 
		 -> DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), DIT_DIR(BANK2[2]), ADC_ATTR_3dB(BANK3[2]), 
		 -> ADC_ATTL_3dB(BANK3[2]), CALC_MOUT(BANK3[2]), DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), 
		 -> AUXSRC_LVDS(BANK3[2]), AUXSRC_ADC(BANK3[2]), AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK3[2]), 
		 -> SRC_I2S(BANK3[2]), SRC_LVDS(BANK3[2]), SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), 
		 -> I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), 
		 -> i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), i2c_read1ByteRegister@reg(BANK0[1]), i2c_read1ByteRegister@d2(BANK0[1]), 
		 -> i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), i2c_lcd_send_data@lowerdata_en(BANK0[1]), 
		 -> i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), i2c_lcd_send_data@upperdata(BANK0[1]), i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), i2c_lcd_send_command@lowerdata(BANK0[1]), i2c_lcd_send_command@upperdata_en(BANK0[1]), 
		 -> i2c_lcd_send_command@upperdata(BANK0[1]), 

    S623$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S623$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c1_master_example$F229(), 
		 -> wr2RegCompleteHandler@i2c1_master_example$F218(), wr1RegCompleteHandler@i2c1_master_example$F212(), rd2RegCompleteHandler@i2c1_master_example$F206(), rd1RegCompleteHandler@i2c1_master_example$F195(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E7158[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c1_master_example$F218@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c1_master_example$F212@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c1_master_example$F206@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c1_master_example$F195@ptr	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_WriteNBytes@data	PTR unsigned char  size(1) Largest target is 1
		 -> i2c_lcd_send_data@lowerdata_en(BANK0[1]), i2c_lcd_send_data@lowerdata(BANK0[1]), i2c_lcd_send_data@upperdata_en(BANK0[1]), i2c_lcd_send_data@upperdata(BANK0[1]), 
		 -> i2c_lcd_send_upper4bit@upperdata_en(BANK0[1]), i2c_lcd_send_upper4bit@upperdata(BANK0[1]), i2c_lcd_send_command@lowerdata_en(BANK0[1]), i2c_lcd_send_command@lowerdata(BANK0[1]), 
		 -> i2c_lcd_send_command@upperdata_en(BANK0[1]), i2c_lcd_send_command@upperdata(BANK0[1]), 

    d.data	PTR unsigned char  size(1) Largest target is 0

    S124$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_writeNBytes@data	PTR void  size(1) Largest target is 2
		 -> tasbuff(BANK2[2]), write_tas6422@buffer(BANK2[2]), TAS_NORMAL(BANK2[2]), TAS_CLEAR_FALT(BANK2[2]), 
		 -> TAS_CHK_RAILS(BANK3[2]), TAS_PLAY(BANK2[2]), TAS_MUTE(BANK3[2]), TAS_FS96K(BANK2[2]), 
		 -> TAS_FS48K(BANK3[2]), TAS_FS44K(BANK3[2]), TAS_AC(BANK2[2]), TAS_DC(BANK3[2]), 
		 -> TAS_DCDIAG_CLEAR(BANK3[2]), TAS_RUN(BANK3[2]), TAS_RESET(BANK3[2]), INIT9211_31(BANK3[2]), 
		 -> INIT9211_27(BANK3[2]), INIT9211_26(BANK3[2]), INIT9211_2B(BANK3[2]), INIT9211_2E(BANK3[2]), 
		 -> INIT9211_20(BANK3[2]), ADC_96K(BANK3[2]), ADC_DC(BANK3[2]), DIT_I2S(BANK3[2]), 
		 -> DIT_LVDS(BANK3[2]), DIT_ADC(BANK2[2]), DIT_DIR(BANK2[2]), ADC_ATTR_3dB(BANK3[2]), 
		 -> ADC_ATTL_3dB(BANK3[2]), CALC_MOUT(BANK3[2]), DIR_COAX(BANK3[2]), DIR_OPT(BANK2[2]), 
		 -> AUXSRC_LVDS(BANK3[2]), AUXSRC_ADC(BANK3[2]), AUXSRC_DIR(BANK2[2]), AUXSRC_AUTO(BANK3[2]), 
		 -> SRC_I2S(BANK3[2]), SRC_LVDS(BANK3[2]), SRC_ADC(BANK2[2]), SRC_DIR(BANK2[2]), 
		 -> I2S_IN(BANK2[2]), I2S_OUT(BANK2[2]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C1_Read1ByteRegister@returnValue(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(BANK0[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    i2c_lcd_puts@s	PTR unsigned char  size(2) Largest target is 41
		 -> lcdbuff(UNKNOWN), lcdbuff(BANK6[41]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_ISR->_TMR1_DefaultInterruptHandler
    _TMR1_DefaultInterruptHandler->_read_clickRE
    _I2C1_MasterFsm->_I2C1_DO_ADDRESS_NACK
    _I2C1_MasterFsm->_I2C1_DO_RX
    _I2C1_MasterFsm->_I2C1_DO_TX
    _I2C1_MasterFsm->_I2C1_DO_TX_EMPTY
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnReset
    _I2C1_DO_TX_EMPTY->_I2C1_CallbackReturnStop
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C1_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C1_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c1_master_example$F218
    _I2C1_DO_TX->_I2C1_CallbackReturnReset
    _I2C1_DO_TX->_I2C1_CallbackReturnStop
    _I2C1_DO_TX->_rd1RegCompleteHandler
    _I2C1_DO_TX->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_TX->_rd2RegCompleteHandler
    _I2C1_DO_TX->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_TX->_rdBlkRegCompleteHandler
    _I2C1_DO_TX->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_TX->_wr1RegCompleteHandler
    _I2C1_DO_TX->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_TX->_wr2RegCompleteHandler
    _I2C1_DO_TX->_wr2RegCompleteHandler@i2c1_master_example$F218
    _I2C1_DO_SEND_ADR_WRITE->_I2C1_MasterSendTxData
    _I2C1_DO_RX->_I2C1_CallbackReturnReset
    _I2C1_DO_RX->_I2C1_CallbackReturnStop
    _I2C1_DO_RX->_rd1RegCompleteHandler
    _I2C1_DO_RX->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_RX->_rd2RegCompleteHandler
    _I2C1_DO_RX->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_RX->_rdBlkRegCompleteHandler
    _I2C1_DO_RX->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_RX->_wr1RegCompleteHandler
    _I2C1_DO_RX->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_RX->_wr2RegCompleteHandler
    _I2C1_DO_RX->_wr2RegCompleteHandler@i2c1_master_example$F218
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnReset
    _I2C1_DO_ADDRESS_NACK->_I2C1_CallbackReturnStop
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c1_master_example$F195
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c1_master_example$F206
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c1_master_example$F229
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c1_master_example$F212
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C1_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c1_master_example$F218
    _wr2RegCompleteHandler@i2c1_master_example$F218->i1_I2C1_SetDataCompleteCallback
    _wr2RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c1_master_example$F212->i1_I2C1_SetDataCompleteCallback
    _wr1RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c1_master_example$F229->i1_I2C1_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c1_master_example$F206->i1_I2C1_SetDataCompleteCallback
    _rd2RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c1_master_example$F195->i1_I2C1_SetDataCompleteCallback
    _rd1RegCompleteHandler->i1_I2C1_SetDataCompleteCallback
    i1_I2C1_SetDataCompleteCallback->i1_I2C1_SetCallback

Critical Paths under _main in BANK0

    _write_tas6422->_i2c_writeNBytes
    _set_source->_i2c_writeNBytes
    _strcat->_strcpy
    _strcpy->___wmul
    _puts_led->___wmul
    _set_gains->_abs
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _toupper->_islower
    _stoa->_fputc
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    ___wmul->___lbmod
    _i2c_lcd_set_cursor_pos->_i2c_lcd_send_command
    _i2c_lcd_puts->_i2c_lcd_send_data
    _i2c_lcd_send_data->_I2C1_WriteNBytes
    _init_tas6422->_i2c_writeNBytes
    _init_pcm9211->_i2c_writeNBytes
    _i2c_writeNBytes->_I2C1_SetAddressNackCallback
    _i2c_lcd_ulcursor_off->_i2c_lcd_send_command
    _i2c_lcd_init->_i2c_lcd_send_command
    _i2c_lcd_send_upper4bit->_I2C1_WriteNBytes
    _i2c_lcd_home->_i2c_lcd_send_command
    _i2c_lcd_clear->_i2c_lcd_send_command
    _i2c_lcd_send_command->_I2C1_WriteNBytes
    _I2C1_WriteNBytes->_I2C1_SetAddressNackCallback
    _chk6422warning->_i2c_read1ByteRegister
    _i2c_read1ByteRegister->_I2C1_SetAddressNackCallback
    _i2c_read1ByteRegister->_I2C1_SetDataCompleteCallback
    _I2C1_SetDataCompleteCallback->_I2C1_SetCallback
    _I2C1_SetAddressNackCallback->_I2C1_SetCallback
    _I2C1_Open->_I2C1_SetInterruptHandler
    _I2C1_MasterWrite->_I2C1_MasterOperation
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _DATAEE_WriteByte->___lbmod

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _I2C1_MasterIsr->_I2C1_MasterFsm

Critical Paths under _main in BANK1

    _main->_lcd_disp_param
    _show_uolstr->_sprintf
    _set_gainstr->_sprintf
    _lcd_disp_param->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    _main->_lcd_disp_param

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0  341944
                                             70 BANK1      9     9      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                 _DELAY_milliseconds
                  _SYSTEM_Initialize
                    _TMR1_Initialize
                    _TMR1_StartTimer
                            ___lbmod
                             ___wmul
                     _chk6422warning
                      _i2c_lcd_clear
                       _i2c_lcd_home
                       _i2c_lcd_init
                       _i2c_lcd_puts
               _i2c_lcd_ulcursor_off
              _i2c_read1ByteRegister
                    _i2c_writeNBytes
                       _init_pcm9211
                       _init_tas6422
                     _lcd_disp_param
                           _puts_led
                          _set_gains
                        _set_gainstr
                         _set_source
                        _show_uolstr
                            _sprintf
                             _strcpy
                      _write_tas6422
 ---------------------------------------------------------------------------------
 (1) _write_tas6422                                        3     2      1   17356
                                             16 BANK0      3     2      1
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _show_uolstr                                          2     2      0   34216
                                             58 BANK1      2     2      0
                            ___awdiv
                           _puts_led
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _set_source                                           4     4      0   19569
                                             16 BANK0      4     4      0
                 _DELAY_milliseconds
                            ___lbmod
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _set_gainstr                                          2     2      0   34216
                                             58 BANK1      2     2      0
                            ___awdiv
                           _puts_led
                            _sprintf
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcat                                               4     0      4    2892
                                             27 BANK0      4     0      4
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strcpy                                              12     8      4    1312
                                             15 BANK0     12     8      4
                             ___wmul (ARG)
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _puts_led                                             5     3      2    2288
                                             15 BANK0      5     3      2
                            ___lbmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     908
                                              3 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _set_gains                                            3     2      1   17694
                                             26 BANK0      3     2      1
                                _abs
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (1) _lcd_disp_param                                      23    23      0   58072
                                             58 BANK1     12    12      0
                                              0 BANK5     11    11      0
                            ___lbmod
                             ___wmul
                       _i2c_lcd_puts
             _i2c_lcd_set_cursor_pos
              _i2c_read1ByteRegister
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    10     16   26599
                                             32 BANK1     26    10     16
                            ___lbmod (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   24295
                                             24 BANK1      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   23795
                                             66 BANK0      8     6      2
                                              0 BANK1     24    24      0
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                38    29      9    6707
                                             28 BANK0     38    29      9
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              8     6      2     512
                                              9 BANK0      8     6      2
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              6     4      2     191
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     191
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              8     6      2     191
                                              3 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _stoa                                                23    21      2    2775
                                             11 BANK0     23    21      2
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    7033
                                             30 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    4731
                                             19 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     400
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1969
                                             11 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3    1577
                                              3 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     273
                                             22 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              3 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              3 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3849
                                             15 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              3 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              3 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2746
                                              9 BANK0      6     2      4
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_set_cursor_pos                               5     4      1    8431
                                             23 BANK0      5     4      1
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_puts                                         2     0      2    8385
                                             23 BANK0      2     0      2
                  _i2c_lcd_send_data
 ---------------------------------------------------------------------------------
 (3) _i2c_lcd_send_data                                    7     7      0    7870
                                             16 BANK0      7     7      0
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              6     5      1     682
                                              3 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _init_tas6422                                         1     1      0   18856
                                             16 BANK0      1     1      0
                 _DELAY_milliseconds
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _DELAY_milliseconds                                   3     1      2    1922
                                              3 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _init_pcm9211                                         1     1      0   16934
                                             16 BANK0      1     1      0
                    _i2c_writeNBytes
 ---------------------------------------------------------------------------------
 (2) _i2c_writeNBytes                                      4     1      3   16934
                                             12 BANK0      4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_ulcursor_off                                 1     1      0    7870
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_init                                         1     1      0   15592
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
             _i2c_lcd_send_upper4bit
 ---------------------------------------------------------------------------------
 (2) _i2c_lcd_send_upper4bit                               4     4      0    7722
                                             16 BANK0      4     4      0
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_home                                         1     1      0    7870
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (1) _i2c_lcd_clear                                        1     1      0    7870
                                             23 BANK0      1     1      0
               _i2c_lcd_send_command
 ---------------------------------------------------------------------------------
 (3) _i2c_lcd_send_command                                 7     7      0    7870
                                             16 BANK0      7     7      0
                   _I2C1_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C1_WriteNBytes                                     4     1      3    7574
                                             12 BANK0      4     1      3
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _chk6422warning                                      18    18      0   10889
                                             19 BANK0     18    18      0
              _i2c_read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _i2c_read1ByteRegister                                7     6      1   10889
                                             12 BANK0      7     6      1
                         _I2C1_Close
                   _I2C1_MasterWrite
                          _I2C1_Open
        _I2C1_SetAddressNackCallback
                     _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetDataCompleteCallback                         4     1      3    3599
                                              8 BANK0      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetBuffer                                       4     0      4    2528
                                              3 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _I2C1_SetAddressNackCallback                          4     1      3    2859
                                              8 BANK0      4     1      3
                   _I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetCallback                                     5     2      3     997
                                              3 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C1_Open                                            3     3      0     189
                                              5 BANK0      3     3      0
                _I2C1_MasterClearIrq
               _I2C1_MasterEnableIrq
                    _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _I2C1_SetInterruptHandler                             2     0      2     121
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOpen                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterEnableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_MasterWrite                                     0     0      0      68
               _I2C1_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterOperation                                 3     3      0      68
                                              3 BANK0      3     3      0
                   _I2C1_MasterStart
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterStart                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C1_Close                                           2     2      0      37
                                              3 BANK0      2     2      0
                _I2C1_MasterClearIrq
                   _I2C1_MasterClose
              _I2C1_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterDisableIrq                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClose                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C1_MasterClearIrq                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR1_SetInterruptHandler                             2     0      2      98
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3    2370
                                              9 BANK0      4     1      3
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     577
                                              3 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          0     0      0   51880
                   Absolute function *
                     _I2C1_MasterIsr *
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (11) _TMR1_ISR                                            0     0      0     438
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     229
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        2     2      0     209
                                              5 COMMON     2     2      0
                       _get7seg_font
                       _read_clickRE
 ---------------------------------------------------------------------------------
 (13) _read_clickRE                                        5     5      0     140
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (13) _get7seg_font                                        3     3      0      69
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (11) _I2C1_MasterIsr                                      0     0      0   51442
                     _I2C1_MasterFsm
 ---------------------------------------------------------------------------------
 (12) _I2C1_MasterFsm                                      3     3      0   51442
                                              0 BANK0      3     3      0
               _I2C1_DO_ADDRESS_NACK *
                       _I2C1_DO_IDLE *
                       _I2C1_DO_RCEN *
                      _I2C1_DO_RESET *
                         _I2C1_DO_RX *
                     _I2C1_DO_RX_ACK *
            _I2C1_DO_RX_NACK_RESTART *
               _I2C1_DO_RX_NACK_STOP *
              _I2C1_DO_SEND_ADR_READ *
             _I2C1_DO_SEND_ADR_WRITE *
               _I2C1_DO_SEND_RESTART *
          _I2C1_DO_SEND_RESTART_READ *
         _I2C1_DO_SEND_RESTART_WRITE *
                  _I2C1_DO_SEND_STOP *
                         _I2C1_DO_TX *
                   _I2C1_DO_TX_EMPTY *
                  _I2C1_MasterIsNack
              i1_I2C1_MasterClearIrq
 ---------------------------------------------------------------------------------
 (13) i1_I2C1_MasterClearIrq                               0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_TX_EMPTY                                    3     3      0   12844
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSetIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_TX                                          3     3      0   12866
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
          _I2C1_DO_SEND_RESTART_READ
         _I2C1_DO_SEND_RESTART_WRITE
                  _I2C1_DO_SEND_STOP
                  _I2C1_MasterIsNack
              _I2C1_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (13) _I2C1_MasterIsNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_RESTART_WRITE                          0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_RESTART_READ                           0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_ADR_WRITE                              0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_SEND_ADR_READ                               0     0      0      22
              _I2C1_MasterSendTxData
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSendTxData                               1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_ACK                                      0     0      0       0
                 _I2C1_MasterSendAck
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX                                          3     3      0   12844
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
            _I2C1_DO_RX_NACK_RESTART
               _I2C1_DO_RX_NACK_STOP
               _I2C1_MasterGetRxData
                 _I2C1_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSendAck                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterGetRxData                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_NACK_STOP                                0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RX_NACK_RESTART                             0     0      0       0
                _I2C1_MasterSendNack
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterSendNack                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RESET                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_RCEN                                        0     0      0       0
                 _I2C1_MasterStartRx
 ---------------------------------------------------------------------------------
 (14) _I2C1_MasterStartRx                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_IDLE                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _I2C1_DO_ADDRESS_NACK                                3     3      0   12844
                                             10 COMMON     3     3      0
                   Absolute function *
           _I2C1_CallbackReturnReset *
            _I2C1_CallbackReturnStop *
               _I2C1_DO_SEND_RESTART
                  _I2C1_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c1_master_e *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c1_master_e *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c1_master *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c1_master_e *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c1_master_e *
 ---------------------------------------------------------------------------------
 (14) _wr2RegCompleteHandler@i2c1_master_example$F218      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr2RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr1RegCompleteHandler@i2c1_master_example$F212      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _wr1RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rdBlkRegCompleteHandler@i2c1_master_example$F229    1     0      1    1284
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rdBlkRegCompleteHandler                             1     0      1    1284
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd2RegCompleteHandler@i2c1_master_example$F206      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd2RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd1RegCompleteHandler@i2c1_master_example$F195      1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (14) _rd1RegCompleteHandler                               1     0      1    1253
                                              9 COMMON     1     0      1
                   i1_I2C1_SetBuffer
     i1_I2C1_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (15) i1_I2C1_SetDataCompleteCallback                      4     1      3     770
                                              5 COMMON     4     1      3
                 i1_I2C1_SetCallback
 ---------------------------------------------------------------------------------
 (16) i1_I2C1_SetCallback                                  5     2      3     206
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (15) i1_I2C1_SetBuffer                                    4     0      4     452
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_STOP                                   0     0      0       0
                    _I2C1_MasterStop
 ---------------------------------------------------------------------------------
 (15) _I2C1_MasterStop                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_DO_SEND_RESTART                                0     0      0       0
           _I2C1_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (15) _I2C1_MasterEnableRestart                            0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _I2C1_CallbackReturnStop                             1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (14) _I2C1_CallbackReturnReset                            1     0      1     252
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
     ___lbmod (ARG)
   _DELAY_milliseconds
   _SYSTEM_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _WDT_Initialize
   _TMR1_Initialize
     _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   ___lbmod
   ___wmul
     ___lbmod (ARG)
   _chk6422warning
     _i2c_read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
   _i2c_lcd_clear
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_home
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_init
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
     _i2c_lcd_send_upper4bit
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_puts
     _i2c_lcd_send_data
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_lcd_ulcursor_off
     _i2c_lcd_send_command
       _I2C1_WriteNBytes
         _I2C1_Close
           _I2C1_MasterClearIrq
           _I2C1_MasterClose
           _I2C1_MasterDisableIrq
         _I2C1_MasterWrite
           _I2C1_MasterOperation
             _I2C1_MasterStart
         _I2C1_Open
           _I2C1_MasterClearIrq
           _I2C1_MasterEnableIrq
           _I2C1_MasterOpen
           _I2C1_SetInterruptHandler
         _I2C1_SetAddressNackCallback
           _I2C1_SetCallback
         _I2C1_SetBuffer
   _i2c_read1ByteRegister
     _I2C1_Close
       _I2C1_MasterClearIrq
       _I2C1_MasterClose
       _I2C1_MasterDisableIrq
     _I2C1_MasterWrite
       _I2C1_MasterOperation
         _I2C1_MasterStart
     _I2C1_Open
       _I2C1_MasterClearIrq
       _I2C1_MasterEnableIrq
       _I2C1_MasterOpen
       _I2C1_SetInterruptHandler
     _I2C1_SetAddressNackCallback
       _I2C1_SetCallback
     _I2C1_SetBuffer
     _I2C1_SetDataCompleteCallback
       _I2C1_SetCallback
   _i2c_writeNBytes
     _I2C1_Close
       _I2C1_MasterClearIrq
       _I2C1_MasterClose
       _I2C1_MasterDisableIrq
     _I2C1_MasterWrite
       _I2C1_MasterOperation
         _I2C1_MasterStart
     _I2C1_Open
       _I2C1_MasterClearIrq
       _I2C1_MasterEnableIrq
       _I2C1_MasterOpen
       _I2C1_SetInterruptHandler
     _I2C1_SetAddressNackCallback
       _I2C1_SetCallback
     _I2C1_SetBuffer
   _init_pcm9211
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _init_tas6422
     _DELAY_milliseconds
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _lcd_disp_param
     ___lbmod
     ___wmul
       ___lbmod (ARG)
     _i2c_lcd_puts
       _i2c_lcd_send_data
         _I2C1_WriteNBytes
           _I2C1_Close
             _I2C1_MasterClearIrq
             _I2C1_MasterClose
             _I2C1_MasterDisableIrq
           _I2C1_MasterWrite
             _I2C1_MasterOperation
               _I2C1_MasterStart
           _I2C1_Open
             _I2C1_MasterClearIrq
             _I2C1_MasterEnableIrq
             _I2C1_MasterOpen
             _I2C1_SetInterruptHandler
           _I2C1_SetAddressNackCallback
             _I2C1_SetCallback
           _I2C1_SetBuffer
     _i2c_lcd_set_cursor_pos
       _i2c_lcd_send_command
         _I2C1_WriteNBytes
           _I2C1_Close
             _I2C1_MasterClearIrq
             _I2C1_MasterClose
             _I2C1_MasterDisableIrq
           _I2C1_MasterWrite
             _I2C1_MasterOperation
               _I2C1_MasterStart
           _I2C1_Open
             _I2C1_MasterClearIrq
             _I2C1_MasterEnableIrq
             _I2C1_MasterOpen
             _I2C1_SetInterruptHandler
           _I2C1_SetAddressNackCallback
             _I2C1_SetCallback
           _I2C1_SetBuffer
     _i2c_read1ByteRegister
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
       _I2C1_SetDataCompleteCallback
         _I2C1_SetCallback
     _sprintf
       ___lbmod (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lbmod (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _stoa
             _fputc
               _putch
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
   _puts_led
     ___lbmod (ARG)
     ___wmul (ARG)
       ___lbmod (ARG)
   _set_gains
     _abs
       ___aomod (ARG)
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _set_gainstr
     ___awdiv
     _puts_led
       ___lbmod (ARG)
       ___wmul (ARG)
         ___lbmod (ARG)
     _sprintf
       ___lbmod (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lbmod (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _stoa
             _fputc
               _putch
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         ___wmul (ARG)
           ___lbmod (ARG)
         _strlen (ARG)
       _strlen
     _strcpy
       ___wmul (ARG)
         ___lbmod (ARG)
       _strlen (ARG)
   _set_source
     _DELAY_milliseconds
     ___lbmod
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer
   _show_uolstr
     ___awdiv
     _puts_led
       ___lbmod (ARG)
       ___wmul (ARG)
         ___lbmod (ARG)
     _sprintf
       ___lbmod (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _atoi
             ___wmul
               ___lbmod (ARG)
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
           _isdigit
           _stoa
             _fputc
               _putch
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _toupper
               _islower
     _strcat
       _strcpy
         ___wmul (ARG)
           ___lbmod (ARG)
         _strlen (ARG)
       _strlen
     _strcpy
       ___wmul (ARG)
         ___lbmod (ARG)
       _strlen (ARG)
   _sprintf
     ___lbmod (ARG)
     _vfprintf (ARG)
       _vfpfcnvrt
         _atoi
           ___wmul
             ___lbmod (ARG)
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
         _fputc
           _putch
         _isdigit
         _stoa
           _fputc
             _putch
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _toupper
             _islower
   _strcpy
     ___wmul (ARG)
       ___lbmod (ARG)
     _strlen (ARG)
   _write_tas6422
     _i2c_writeNBytes
       _I2C1_Close
         _I2C1_MasterClearIrq
         _I2C1_MasterClose
         _I2C1_MasterDisableIrq
       _I2C1_MasterWrite
         _I2C1_MasterOperation
           _I2C1_MasterStart
       _I2C1_Open
         _I2C1_MasterClearIrq
         _I2C1_MasterEnableIrq
         _I2C1_MasterOpen
         _I2C1_SetInterruptHandler
       _I2C1_SetAddressNackCallback
         _I2C1_SetCallback
       _I2C1_SetBuffer

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _I2C1_MasterIsr *
     _I2C1_MasterFsm
       _I2C1_DO_ADDRESS_NACK *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_DO_IDLE *
       _I2C1_DO_RCEN *
         _I2C1_MasterStartRx
       _I2C1_DO_RESET *
       _I2C1_DO_RX *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_RX_NACK_RESTART *
           _I2C1_MasterSendNack
         _I2C1_DO_RX_NACK_STOP *
           _I2C1_MasterSendNack
         _I2C1_MasterGetRxData *
         _I2C1_MasterSendAck *
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_DO_RX_ACK *
         _I2C1_MasterSendAck
       _I2C1_DO_RX_NACK_RESTART *
         _I2C1_MasterSendNack
       _I2C1_DO_RX_NACK_STOP *
         _I2C1_MasterSendNack
       _I2C1_DO_SEND_ADR_READ *
         _I2C1_MasterSendTxData
       _I2C1_DO_SEND_ADR_WRITE *
         _I2C1_MasterSendTxData
       _I2C1_DO_SEND_RESTART *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_RESTART_READ *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_RESTART_WRITE *
         _I2C1_MasterEnableRestart
       _I2C1_DO_SEND_STOP *
         _I2C1_MasterStop
       _I2C1_DO_TX *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART_READ *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_RESTART_WRITE *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _I2C1_MasterIsNack *
         _I2C1_MasterSendTxData *
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_DO_TX_EMPTY *
         Absolute function(Fake) *
         _I2C1_CallbackReturnReset *
         _I2C1_CallbackReturnStop *
         _I2C1_DO_SEND_RESTART *
           _I2C1_MasterEnableRestart
         _I2C1_DO_SEND_STOP *
           _I2C1_MasterStop
         _I2C1_MasterSetIrq *
         _rd1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd1RegCompleteHandler@i2c1_master_example$F195 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rd2RegCompleteHandler@i2c1_master_example$F206 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr1RegCompleteHandler@i2c1_master_example$F212 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
         _wr2RegCompleteHandler@i2c1_master_example$F218 *
           i1_I2C1_SetBuffer
           i1_I2C1_SetDataCompleteCallback
             i1_I2C1_SetCallback
       _I2C1_MasterIsNack *
       i1_I2C1_MasterClearIrq *
   _TMR1_ISR *
     Absolute function(Fake) *
     _TMR1_DefaultInterruptHandler *
       _get7seg_font
       _read_clickRE
     _TMR1_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4F      4F       7       98.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      49       9       91.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      4F      11       98.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      4C      13       95.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     1EB      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      B      34      16       65.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0      29      18       51.2%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     1EB      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              50      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22              50      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23              50      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24              50      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25              20      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 13 22:55:24 2020

                          __size_of_i2c_lcd_send_upper4bit 0028  
                                             ___awdiv@sign 0029  
                                      write_tas6422@buffer 014B  
                                      ___wmul@multiplicand 002B  
                                                      l850 26E2  
                                                      l956 1B17  
                                            _i2c_lcd_clear 2715  
                               __end_of_DELAY_milliseconds 2783  
                                    ?_I2C1_MasterOperation 0070  
                                          _timer1ReloadVal 0130  
                                                      _abs 198A  
                                                      _pad 1F5E  
                                  __size_of_PMD_Initialize 0008  
                                                      wreg 0009  
                                   ?_I2C1_MasterSendTxData 0070  
                        __size_of_I2C1_MasterEnableRestart 0003  
                                     _I2C1_DO_RX_NACK_STOP 2670  
                                ?_I2C1_MasterEnableRestart 0070  
                                     I2C1_SetBuffer@buffer 0023  
                                   ?i1_I2C1_MasterClearIrq 0070  
                            __size_of_i2c_lcd_send_command 0056  
                                                     l2001 1F75  
                                                     l2010 0996  
                                                     ?_abs 0036  
                                                     l2004 1F95  
                                  ??_rd2RegCompleteHandler 007A  
                                                     l2014 09B1  
                                                     l2015 09C5  
                                                     l1063 1442  
                                                     l2009 098F  
                                                     l2041 169F  
                                                     l2018 0A59  
                                                     l2050 16FA  
                                                     l1074 14E1  
                                                     l2062 0ABB  
                                                     l2143 1373  
                                                     l2058 0AA0  
                                                     l1290 04EB  
                                                     l2083 0BBD  
                                                     l2092 0DCE  
                                                     l2094 0DDA  
                                                     l1607 17EE  
                                                     l2095 0DDD  
                                                     l1712 1AFA  
                                                     l2096 0DE0  
                                                     l2097 0DE3  
                                                     l2099 0E16  
                                                     l1494 1A76  
                                                     l1594 07DB  
                                                     l7001 1775  
                                                     l7011 1791  
                                                     ?_pad 0033  
                                                     l7015 17C1  
                                                     l7009 1782  
                                                     l7017 17CD  
                                                     l7025 1F6B  
                                                     l7115 1E2B  
                                                     l7035 1F77  
                                                     l8011 11CB  
                                                     l7029 1F73  
                                                     l7039 1FA1  
                                                     l7223 16B0  
                                                     l7311 0BDB  
                                                     l8031 08C0  
                                                     l7073 1ABA  
                                                     l7161 09C0  
                                                     l7241 16FE  
                                                     l7209 1679  
                                                     l8033 08E5  
                                                     l8025 0839  
                                                     l7139 1AA2  
                                                     l7155 09A9  
                                                     l7227 16C1  
                                                     l8027 086A  
                                                     l7341 1377  
                                                     l7333 133C  
                                                     l7165 09F2  
                                                     l7245 170F  
                                                     l7237 16D1  
                                                     l7229 16CE  
                                                     l8029 089B  
                                                     l8037 090A  
                                                     l8141 0103  
                                                     l7351 13A6  
                                                     l7335 1341  
                                                     l7327 132C  
                                                     l7319 1310  
                                                     l7175 09CD  
                                                     l7183 0A65  
                                                     l7247 171C  
                                                     l7271 0AFD  
                                                     l7263 0ACB  
                                                     l8039 092A  
                                                     l8303 0423  
                                                     l8207 0220  
                                                     l8143 0157  
                                                     l5809 276F  
                                                     l7337 1355  
                                                     l7193 0A78  
                                                     l7257 0AB3  
                                                     l7505 0E90  
                                                     l8305 043B  
                                                     l8209 0264  
                                                     l7187 0A6D  
                                                     l7267 0AE3  
                                                     l7531 0F4D  
                                                     l8251 0331  
                                                     l8139 00FB  
                                                     l7197 0A85  
                                                     l7541 0FA7  
                                                     l7517 0EFB  
                                                     l7509 0EAF  
                                                     l5925 1FC4  
                                                     l5589 1008  
                                                     l8421 0644  
                                                     l8333 04B7  
                                                     l8229 02C1  
                                                     l7375 1B83  
                                                     l7367 1B66  
                                                     l7287 0B4A  
                                                     l7295 0B8C  
                                                     l7551 0FD0  
                                                     l7527 0F2F  
                                                     l7463 0DD0  
                                                     l5951 1FFB  
                                                     l5943 1FEA  
                                                     l5935 1FCC  
                                                     l5919 1FB9  
                                                     l5871 1221  
                                                     l8423 065C  
                                                     l8431 0678  
                                                     l8335 04C7  
                                                     l8407 0607  
                                                     l6921 1A2F  
                                                     l7801 1DD0  
                                                     l7473 0DE6  
                                                     l5937 1FD8  
                                                     l5873 1226  
                                                     l8441 06C8  
                                                     l8433 0699  
                                                     l8249 030B  
                                                     l8185 01E2  
                                                     l6923 1A34  
                                                     l7811 1DE4  
                                                     l6851 1ECC  
                                                     l7547 0FCA  
                                                     l7483 0E1D  
                                                     l7731 1D22  
                                                     l5947 1FF3  
                                                     l5883 124A  
                                                     l8419 062C  
                                                     l8371 053E  
                                                     l8291 03B4  
                                                     l6925 1A36  
                                                     l6933 1C14  
                                                     l6941 1A70  
                                                     l7557 0FDB  
                                                     l5893 126F  
                                                     l5885 1250  
                                                     l8373 057E  
                                                     l8293 03FC  
                                                     l7751 1930  
                                                     l6855 1EF0  
                                                     l7495 0E4B  
                                                     l7479 0DEB  
                                                     l8383 0596  
                                                     l7761 1D35  
                                                     l7497 0E5D  
                                                     l7729 1D02  
                                                     l7913 1401  
                                                     l7755 1D2D  
                                                     l7763 1D3B  
                                                     l6963 074A  
                                                     l6875 195F  
                                                     l7499 0E66  
                                                     l7915 140A  
                                                     l7845 1AE7  
                                                     l7757 1D2F  
                                                     l7765 1D51  
                                                     l6965 074F  
                                                     l6869 1BB2  
                                                     l6877 196B  
                                                     l7909 13F5  
                                                     l7941 14A0  
                                                     l7759 1D32  
                                                     l6975 0766  
                                                     l6959 0722  
                                                     l7943 14A9  
                                                     l7927 145D  
                                                     l7793 1DA8  
                                                     l7785 1BA8  
                                                     l7777 1B8B  
                                                     l6985 07AE  
                                                     l6977 0775  
                                                     l8681 0E04  
                                                     l7937 1494  
                                                     l8683 134D  
                                                     l6987 07BA  
                                                     l7957 1536  
                                                     l8685 1D43  
                                                     l6997 174D  
                                                     l8677 068B  
                                                     l8679 0919  
                                                     l7993 12FE  
                                                     l7899 13BE  
                                                     STR_1 2876  
                                                     STR_2 2892  
                                                     STR_3 2866  
                                                     STR_4 286A  
                                                     STR_5 2896  
                                                     STR_6 289E  
                                                     STR_7 288A  
                                                     STR_8 2892  
                                                     STR_9 2866  
                                            ?_i2c_lcd_home 0070  
                                            ?_i2c_lcd_init 0070  
                                                     _LATA 010C  
                                                     _LATB 010D  
                                                     _LATC 010E  
                                                     u5025 09A1  
                                                     u5130 1669  
                                                     u5300 0B35  
                                                     u5055 0A63  
                                                     u5215 171A  
                                                     u5075 09E1  
                                                     u5235 0AAB  
                                                     u5420 138B  
                                                     u4620 0757  
                                                     u5260 0B14  
                                                     _PMD0 0911  
                                                     u4445 1EEE  
                                                     u5085 09ED  
                                                     u5165 1698  
                                                     u5325 0B70  
                                                     _PMD1 0912  
                                                     u5430 138C  
                                                     u4470 19CA  
                                                     u5270 0B15  
                                                     _PMD2 0913  
                                                     u6207 2746  
                                                     u4535 1993  
                                                     u5335 0B96  
                                                     u5255 0AF7  
                                                     _PMD3 0914  
                                                     u4480 19CB  
                                                     _PMD4 0915  
                                                     u6217 10D3  
                                                     u5185 16CC  
                                                     _PMD5 0916  
                                                     u5290 0B34  
                                                     u6307 18D7  
                                                     u6227 10E0  
                                                     u4555 1A77  
                                                     u5195 16DB  
                                                     u5355 0BAC  
                                                     u4900 1982  
                                                     u5540 0E82  
                                                     u6317 271D  
                                                     u6237 10E9  
                                                     u4565 1A7C  
                                                     u5365 0BB8  
                                                     u3925 1FCF  
                                                     u4910 1983  
                                                     u4830 19B2  
                                                     u5550 0E83  
                                 ??_i2c_lcd_set_cursor_pos 0038  
                                                     u6247 10F1  
                                                     u4655 079B  
                                                     u4815 1F81  
                                                     u4840 19B3  
                                                     u6257 10F9  
                                                     u3945 1FD9  
                                                     u4850 1AD8  
                                                     u5635 1089  
                                                     u6267 1101  
                                                     u6187 1D5A  
                                                     u4755 17AF  
                                                     u3955 1FE3  
                                                     u4860 1AD9  
                                                     u6277 1109  
                                                     u6197 277D  
                                                     u5645 1033  
                                                     u3965 1FEB  
                                                     u4870 1B30  
                                                     u6287 1114  
                                                     u4880 1B31  
                                                     u6297 1120  
                                                     u4970 0965  
                                                     u4980 0966  
                                                     u5785 1AEA  
                                                     _PLLR 48E0  
                                            ?_i2c_lcd_puts 0037  
                                                     _WPUA 020C  
                                                     _WPUB 020D  
                                                     _WPUC 020E  
                                  ??_wr2RegCompleteHandler 007A  
                                         ??_I2C1_MasterFsm 0020  
                                         ??_I2C1_MasterIsr 007D  
                         __size_of_I2C1_DO_RX_NACK_RESTART 0004  
                                ??_I2C1_CallbackReturnStop 007A  
                                                     abs@a 0036  
                                                     _dbuf 02A0  
                                                     _gain 0141  
                       TMR1_DefaultInterruptHandler@intcnt 0144  
                                                     _atoi 130C  
                                                     _main 0083  
                                                     _dtoa 0949  
                                                     _prec 0128  
                                                     _nout 01EB  
                                                     pad@i 0037  
                                                     pad@p 0034  
                                                     fsr0h 0005  
                                                     fsr1h 0007  
                                                     indf0 0000  
                                                     fsr0l 0004  
                                                     indf1 0001  
                                                     fsr1l 0006  
                                                     pad@w 0039  
                                                     _stoa 165D  
                                                     btemp 007E  
                                                     _xtoa 0A97  
                                 __size_of_i2c_writeNBytes 0025  
                                                     start 0025  
                                         ??_I2C1_SetBuffer 0027  
                               ??_TMR1_SetInterruptHandler 0025  
                                             _ADC_ATTL_0dB 01A9  
                                             _ADC_ATTL_3dB 01DB  
                                     __end_of_get7seg_font 195B  
                                             _ADC_ATTL_6dB 01A5  
                                             _ADC_ATTR_0dB 01A7  
                                             _ADC_ATTR_3dB 01D9  
                                             _ADC_ATTR_6dB 01A3  
                         __size_of_rdBlkRegCompleteHandler 001A  
                            I2C1_CallbackReturnStop@funPtr 0079  
                                                    ??_abs 0038  
                                                    ??_pad 0036  
                                __size_of_DATAEE_WriteByte 0021  
                           __size_of_OSCILLATOR_Initialize 000A  
                            __end_of_OSCILLATOR_Initialize 26E5  
                                          __end_of___aodiv 07ED  
                                        __end_of_I2C1_Open 1E2E  
                                                    ?_atoi 002F  
                                                    ?_main 0070  
                                                    ?_dtoa 003E  
                                         ??_chk6422warning 0033  
                                          __end_of___aomod 1800  
                                           ?_i2c_lcd_clear 0070  
                                          __end_of___awdiv 2000  
                                                    STR_10 286A  
                                                    STR_11 2896  
                                                    STR_12 289E  
                                                    STR_20 285D  
                                                    STR_21 2862  
                                                    STR_13 2800  
                                                    STR_30 2862  
                                                    STR_22 287A  
                                                    STR_14 286E  
                                                    STR_31 2862  
                                                    STR_23 2862  
                                                    STR_15 2872  
                                                    STR_24 2862  
                                                    STR_32 289A  
                                                    STR_16 2862  
                                                    STR_25 2882  
                                                    STR_17 287E  
                                                    STR_33 2853  
                                                    STR_26 2862  
                                                    STR_18 2862  
                                                    STR_34 2845  
                                                    STR_27 288E  
                                                    STR_19 285D  
                                                    STR_35 2814  
                                                    STR_28 2862  
                                                    STR_36 208C  
                                                    STR_29 2886  
                                          __end_of___lbmod 1B00  
                                          _TMR1_StartTimer 0800  
                                                    ?_stoa 002B  
                                          ___awdiv@divisor 0023  
                                                    ?_xtoa 003C  
                                                    _T1CON 001B  
                                                    i1l402 15CC  
                                                    i1l350 1E5B  
                                                    i1l351 1E61  
                                                    i1l409 1618  
                                                    i1l603 1F42  
                                                    i1l383 15AA  
                                                    i1l393 15BA  
                                                    i1l377 15A3  
                                                    i1l619 1D78  
                                                    i1l387 15B3  
                                                    i1l396 15C5  
                                                    i1l804 0023  
                                                    i1l797 0012  
                                          ___awdiv@counter 0028  
                                                    _OSCEN 091D  
                                             vfpfcnvrt@fmt 0062  
                                   ??_I2C1_MasterEnableIrq 0023  
                                             vfpfcnvrt@llu 00A8  
                                                    _TMR1H 001A  
                                                    _TMR1L 0019  
                                                    _PORTC 000E  
                                                    _TRISA 008C  
                                                    _TRISB 008D  
                                                    _TRISC 008E  
                                   ??_I2C1_MasterGetRxData 0070  
                                    ?_I2C1_DO_RX_NACK_STOP 0070  
                               ??_I2C1_CallbackReturnReset 007A  
                                        ??_I2C1_MasterOpen 0023  
                                        ??_I2C1_MasterStop 0070  
                                        ??_I2C1_Initialize 0023  
                                         __end_of_TMR1_ISR 276F  
                                          _DATAEE_ReadByte 2722  
                                                    _flags 012A  
                                           _WDT_Initialize 2678  
                                                    _fputc 1EC3  
                                          __end_of_isalpha 1AE0  
                                                    _fputs 1BAF  
                                          __end_of_isdigit 198A  
                                   _i2c_lcd_send_upper4bit 1C24  
                                           ??_i2c_lcd_home 0037  
                                           ??_i2c_lcd_init 0037  
                               i2c_lcd_send_upper4bit@data 0031  
                                                    atoi@n 003C  
                                                    pad@fp 003B  
                                                    atoi@s 002F  
                                           ??_i2c_lcd_puts 0039  
                                                    _width 0126  
                                                    _putch 07FF  
                                    _i2c_read1ByteRegister 1D9F  
                                                    dtoa@d 003E  
                                                    dtoa@i 005A  
                                                    dtoa@n 0052  
                                                    dtoa@p 004C  
                                                    dtoa@s 0050  
                                                    dtoa@w 004E  
                                          __end_of_islower 19D2  
                                          __end_of_isspace 1AC2  
        wr1RegCompleteHandler@i2c1_master_example$F212@ptr 0079  
        rd2RegCompleteHandler@i2c1_master_example$F206@ptr 0079  
                                  __end_of_TMR1_Initialize 1A6E  
        wr2RegCompleteHandler@i2c1_master_example$F218@ptr 0079  
                                          __end_of_isupper 19BA  
                                                    pclath 000A  
      rdBlkRegCompleteHandler@i2c1_master_example$F229@ptr 0079  
        rd1RegCompleteHandler@i2c1_master_example$F195@ptr 0079  
                                           _TAS_CLEAR_FALT 0151  
                                                    stoa@i 0037  
                                                    stoa@l 0040  
                                                    stoa@p 003E  
                                                    stoa@s 002B  
                                                    stoa@w 0039  
                                                    status 0003  
                              __size_of_I2C1_MasterSendAck 0004  
                                                    wtemp0 007E  
                                          __end_of_sprintf 1B65  
                                             ??_I2C1_DO_RX 007A  
                                                    xtoa@c 0060  
                                             ??_I2C1_DO_TX 007A  
                                                    xtoa@d 003C  
                                                    xtoa@i 005E  
                                                    xtoa@n 0056  
                                                    xtoa@p 0052  
                                                    xtoa@w 0054  
                                                    xtoa@x 0044  
                                     i1I2C1_SetCallback@cb 0070  
                                          __end_of_toupper 1B42  
                                          _TMR1_WriteTimer 274C  
                                   ??_I2C1_DO_ADDRESS_NACK 007A  
                                             ??_I2C1_Close 0023  
                              __size_of_I2C1_MasterStartRx 0002  
                                             _toupper$2364 002F  
                                            _fsmStateTable 2122  
                                          __initialization 0027  
                                             __end_of_atoi 13AB  
                                             __end_of_main 06F7  
                                             __end_of_dtoa 0A97  
                                    i2c_lcd_send_data@data 0032  
                                             __end_of_stoa 1722  
                                             __end_of_xtoa 0BED  
                              ?_INTERRUPT_InterruptManager 0070  
                                                   ??_atoi 0031  
                                   ??_I2C1_MasterOperation 0023  
                                                   ??_main 00E6  
                                                   ??_dtoa 0046  
                                                   ??_stoa 002D  
                                                   ??_xtoa 0045  
                            __size_of_I2C1_DO_SEND_RESTART 0004  
                                       __end_of_I2C1_DO_RX 1D9F  
                                       __end_of_I2C1_DO_TX 1F5E  
                                   __end_of_WDT_Initialize 267C  
                                       _ADC_I2S_MASTER_256 024C  
                                       __end_of_I2C1_Close 1AA5  
                                 __end_of_I2C1_WriteNBytes 1B8A  
                                                   _ADC_AC 024A  
                                                   _ADC_DC 01D3  
                                                   ?_fputc 0023  
                                                   ?_fputs 002B  
                                         ___awdiv@dividend 0025  
                                                   _I2S_IN 0165  
                                            ?_init_pcm9211 0070  
                                                   _ANSELA 018C  
                                                   ?_putch 0070  
                                                   _ANSELB 018D  
                                                   _ANSELC 018E  
                                                   _T1GCON 001C  
                                                   _RB4PPS 0E9C  
                                  TMR1_WriteTimer@timerVal 0070  
                                                   _RB6PPS 0E9E  
                                                   _ODCONA 028C  
                                                   _ODCONB 028D  
                                                   _ODCONC 028E  
                                                   i1l5411 1E4C  
                                                   i1l5421 1E69  
                                                   i1l5419 1E67  
                                                   i1l5429 1E76  
                                                   i1l8103 001D  
                                                   i1l5395 1955  
                                                   i1l5723 15CD  
                                                   i1l5715 15AB  
                     __size_of_I2C1_SetAddressNackCallback 000C  
                                                   i1l5741 160D  
                                                   i1l5725 15D6  
                                                   i1l5709 2756  
                                                   i1l5751 1620  
                                                   i1l5719 15BB  
                                                   i1l5727 15D9  
                                                   i1l5753 1621  
                                                   i1l5729 15ED  
                                                   i1l4779 1BEC  
                                                   i1l5763 1632  
                                                   i1l5739 1608  
                                                   i1l5773 1640  
                                                   i1l5765 1633  
                                                   i1l5757 1629  
                                                   i1l7623 1F19  
                                                   i1l7711 1C7F  
                                                   i1l5775 1643  
                                                   i1l5759 162A  
                                            ?_init_tas6422 0070  
                                                   i1l7641 1F5C  
                                                   i1l7633 1F1F  
                                                   i1l7627 1F1C  
                                                   i1l7619 1F16  
                                                   i1l7707 1C7C  
                                                   i1l7717 1C82  
                                                   i1l7663 1D7A  
                                                   i1l7823 1C5E  
                                                   i1l7681 1CA3  
                                                   i1l7673 1D80  
                                                   _INLVLA 038C  
                                                   _INLVLB 038D  
                                                   i1l7691 1CAA  
                                                   i1l7667 1D7D  
                                                   _INLVLC 038E  
                                                   i1l7685 1CA6  
                                                   i1l7697 1CAD  
                                                   i1l8691 1D90  
                                                   i1l8693 1F34  
                                                   i1l8695 1CBD  
                                                   i1l8687 15E2  
                                                   i1l8689 1C97  
                          __size_of_i2c_lcd_set_cursor_pos 0033  
                                                   _OSCFRQ 091F  
                                            vfpfcnvrt@done 00B3  
                                                   _TAS_AC 0157  
                                                   _TAS_DC 01BF  
                                                   _WDTCON 0097  
                                        ?_I2C1_MasterClose 0070  
                                                   u470lld 174A  
                                                   u459lld 071F  
                                 rdBlkRegCompleteHandler@p 0079  
                                                   _RE_pos 014A  
                                         ??_lcd_disp_param 00DA  
                                  ??_I2C1_MasterDisableIrq 0023  
                                        ?_I2C1_MasterStart 0070  
                                        ?_I2C1_MasterWrite 0070  
                                             ?_set_gainstr 0070  
                                            ?_read_clickRE 0070  
                                       ??_I2C1_MasterClose 0023  
                                         _I2C1_DO_TX_EMPTY 1CA0  
                                       ??_I2C1_MasterStart 0023  
                                       ??_I2C1_MasterWrite 0026  
                     __end_of_TMR1_DefaultInterruptHandler 165D  
                    __size_of_TMR1_DefaultInterruptHandler 00BB  
                             _TMR1_DefaultInterruptHandler 15A2  
                                             vfprintf@cfmt 00BE  
                                  __end_of_TMR1_StartTimer 0802  
                                                ??___aodiv 0033  
                                         __end_of_font7seg 18CF  
                                                ??___aomod 0033  
                                                   ___wmul 1A6E  
                                                ??___awdiv 0027  
                                                ??___lbmod 0024  
                                        ??_i2c_writeNBytes 002F  
                                          readRE@RE_states 2827  
                                                   _ledstr 02CB  
                             __size_of_I2C1_MasterClearIrq 0003  
                                          ??_i2c_lcd_clear 0037  
                                 __end_ofi1_I2C1_SetBuffer 26F1  
                                         ___awdiv@quotient 002A  
                                     chk6422warning@otwarn 0138  
                            i2c_lcd_send_command@lowerdata 0036  
                                     chk6422warning@otshut 0139  
                                                   pad@buf 0033  
                                                   _strcat 2783  
                                                   dtoa@fp 0049  
                                 ??_I2C1_DO_SEND_ADR_WRITE 0071  
                                  __end_of_DATAEE_ReadByte 2730  
                                                   _strcpy 1000  
                                                   _strlen 195B  
                                        ?_I2C1_SetCallback 0023  
                                     __end_of_lcd_aux_name 2845  
                                   ??_I2C1_DO_RX_NACK_STOP 0070  
                         __end_of_I2C1_SetInterruptHandler 26C9  
                                      lcd_disp_param@pfspo 02C2  
                                      lcd_disp_param@prail 02C8  
                                    _I2C1_DO_SEND_ADR_READ 26A9  
                                                   fputc@c 0023  
                                           _PMD_Initialize 26B1  
                                                   fputs@c 002F  
                                                   fputs@i 0030  
                                                   fputs@s 0032  
                                                ??_isalpha 0025  
                                                ??_isdigit 0025  
                            ?_I2C1_SetDataCompleteCallback 0028  
                         ??i1_I2C1_SetDataCompleteCallback 0078  
                          ?i1_I2C1_SetDataCompleteCallback 0075  
                                       ??_I2C1_SetCallback 0026  
                                                ??_islower 0025  
                                                ??_isspace 0025  
                                          ?_WDT_Initialize 0070  
                                                ??_isupper 0025  
                                                   stoa@cp 003C  
                                                   stoa@fp 003B  
                                                   putch@c 0070  
                                         __end_of_vfprintf 1D2B  
                                   ?_i2c_read1ByteRegister 002C  
                                          _current_balance 006B  
                                           ??_init_pcm9211 0030  
                 I2C1_SetInterruptHandler@InterruptHandler 0023  
                 TMR1_SetInterruptHandler@InterruptHandler 0023  
                                                ??_sprintf 00D0  
                             __size_of_I2C1_MasterSendNack 0004  
                                         __end_of_puts_led 1276  
                                  __end_of_TMR1_WriteTimer 275B  
                                                   xtoa@fp 004D  
                                                ??_toupper 002B  
                                           ??_init_tas6422 0030  
                                  _I2C1_DO_RX_NACK_RESTART 2674  
                                    i1I2C1_SetCallback@idx 0074  
                                    i1I2C1_SetCallback@ptr 0072  
                                      I2C1_WriteNBytes@len 002D  
                                     __end_of_lcd_src_name 20FF  
                                         ?_TMR1_Initialize 0070  
                                        _SYSTEM_Initialize 07ED  
                           I2C1_SetDataCompleteCallback@cb 0028  
                                          ___lbmod@divisor 0023  
                            i2c_lcd_send_command@upperdata 0035  
                                  __end_of__initialization 007F  
                                             ?_show_uolstr 0070  
                                          ___lbmod@counter 0027  
                                    __size_of_get7seg_font 0016  
                          I2C1_MasterOperation@returnValue 0025  
                                       ?_SYSTEM_Initialize 0070  
                                           ??_read_clickRE 0070  
                            __size_of_i2c_lcd_ulcursor_off 000E  
                                  _rdBlkRegCompleteHandler 19EB  
                                           puts_led@cpoint 0032  
                                           __pcstackCOMMON 0070  
                                             __pidataBANK2 1A39  
                                             __pidataBANK3 1E78  
                                             __pidataBANK4 1CCC  
                                             __pidataBANK5 26D2  
                                      ??_SYSTEM_Initialize 0025  
                         __end_of_I2C1_MasterEnableRestart 2635  
                                                ?_TMR1_ISR 0070  
                            ?_TMR1_DefaultInterruptHandler 0070  
                                         _DATAEE_WriteByte 1B00  
                                             readRE@RE_old 0147  
                                            __end_of_fputc 1F0F  
                                            __end_of_fputs 1BD4  
                                     __end_of_i2c_lcd_home 18DC  
                                     __end_of_i2c_lcd_init 1125  
                                   _i2c_lcd_set_cursor_pos 1D2B  
                                     __end_of_i2c_lcd_puts 1945  
                                            __end_of_putch 0800  
                                     __end_of_led_src_name 2122  
                                            _stored_volume 013F  
                                   __end_of_PMD_Initialize 26B9  
                              __size_ofi1_I2C1_SetCallback 0028  
                             ??_I2C1_DO_SEND_RESTART_WRITE 0070  
                                  ??_I2C1_MasterSendTxData 0070  
                                   __size_of_write_tas6422 0019  
                            i2c_lcd_send_data@lowerdata_en 0034  
                                  ??i1_I2C1_MasterClearIrq 0070  
                                    __end_of_I2C1_DO_RESET 268A  
                                             _get7seg_font 1945  
                                       chk6422warning@clip 0137  
                                       chk6422warning@ocdc 013A  
                                       chk6422warning@ilim 0136  
                                i2c_lcd_set_cursor_pos@col 003B  
                          i2c_lcd_send_upper4bit@upperdata 0033  
                                i2c_lcd_set_cursor_pos@pos 003A  
                                                  ??_fputc 0026  
                                __end_of_SYSTEM_Initialize 07FF  
                                                  ??_fputs 002C  
                                                  ??_putch 0023  
                                               __pbssBANK0 006A  
                                               __pbssBANK2 0120  
                                               __pbssBANK3 01EB  
                                               __pbssBANK4 024E  
                                               __pbssBANK5 02A0  
                                               __pbssBANK6 0320  
                           __size_of_rd2RegCompleteHandler 0015  
                            __end_of_rd2RegCompleteHandler 27EB  
                                       _DELAY_milliseconds 276F  
                                         _TAS_DCDIAG_ABORT 0246  
                                     I2C1_Open@returnValue 0027  
                                         _TAS_DCDIAG_CLEAR 01C1  
                           __size_of_wr2RegCompleteHandler 0015  
                            __end_of_wr2RegCompleteHandler 2800  
                                    _rd1RegCompleteHandler 27C1  
                                            i2c_lcd_puts@s 0037  
                                  __end_ofreadRE@RE_states 2837  
                                        _I2C1_DO_SEND_STOP 2668  
                                    _wr1RegCompleteHandler 27AC  
                      __size_of_I2C1_DO_SEND_RESTART_WRITE 0004  
                                      ?_DELAY_milliseconds 0023  
                                               __pmaintext 0083  
                             __end_of_i2c_lcd_send_command 10CF  
                                       ?_I2C1_DO_SEND_STOP 0070  
                                                  ?___wmul 0029  
                                         ?_TMR1_StartTimer 0070  
                                               ??_TMR1_ISR 0077  
                                          _I2C1_MasterOpen 2730  
                                               __pintentry 0004  
                                               _blink_rate 0123  
                                          _I2C1_MasterStop 2635  
                                          _I2C1_Initialize 26C9  
                                                  _ADC_48K 0248  
                                                  _ADC_96K 01D1  
                                  __size_of_I2C1_DO_RX_ACK 0004  
                                                  _I2S_OUT 0167  
                                       __size_of_set_gains 006E  
                                          ?_PMD_Initialize 0070  
                                   ?_I2C1_DO_SEND_ADR_READ 0070  
                                                  ?_strcat 003B  
                                      ??_I2C1_DO_SEND_STOP 0070  
                                                  ?_strcpy 002F  
                                                  ?_strlen 0023  
                                                  _DIT_ADC 0159  
                                         ?_DATAEE_ReadByte 0023  
                                                  _DIT_I2S 01D5  
                                                  _DIT_DIR 015B  
                                                  _DIR_OPT 015D  
                          __size_of_I2C1_DO_SEND_ADR_WRITE 0007  
                                  ?_i2c_lcd_send_upper4bit 0070  
                                        _I2C1_MasterIsNack 268A  
                                               _lcd_hpf_fc 2000  
                                     ??_DELAY_milliseconds 0025  
                                                  _OSCCON1 0919  
                                                  _OSCCON3 091B  
                                                _I2C1_Open 1DE6  
                                       __size_of_vfpfcnvrt 0258  
                                ??_I2C1_DO_RX_NACK_RESTART 0070  
                                                  _NVMADRH 0892  
                                                  _NVMADRL 0891  
                                                  _TAS_FC4 0244  
                                                  _TAS_FC7 0242  
                                                  _OSCTUNE 091E  
                                                  _NVMDATL 0893  
                                                  _NVMCON2 0896  
                                        _I2C1_MasterSetIrq 263B  
                       __size_of_I2C1_DO_SEND_RESTART_READ 0004  
                                                  _SSP1ADD 0212  
                                                  _TAS_RUN 01ED  
                                                  _SLRCONA 030C  
                                                  _SLRCONB 030D  
                                                  _SLRCONC 030E  
                                                  _TAS_HiZ 0230  
                                                  _SSP1BUF 0211  
                                 _I2C1_SetInterruptHandler 26C1  
                                       ?_I2C1_MasterIsNack 0070  
                                                  _SRC_ADC 0161  
                                                  _SRC_I2S 01E7  
                                                  _SRC_DIR 0163  
                               ?_I2C1_DO_SEND_RESTART_READ 0070  
                                               _led_hpf_fc 203F  
                                          readRE@direction 0148  
                           ??_I2C1_SetDataCompleteCallback 002B  
                                         write_tas6422@adr 0032  
                                         ?_TMR1_WriteTimer 0070  
                                       ?_I2C1_MasterSetIrq 0070  
                                         write_tas6422@val 0030  
                                 i2c_lcd_send_command@data 0032  
                                     DATAEE_WriteByte@bAdd 0029  
                                                _CALC_MPIB 01AF  
                                                _CALC_MPOB 01AD  
                                      ??_I2C1_MasterIsNack 0070  
                                                _CALC_MOUT 01DD  
   __end_of_wr1RegCompleteHandler@i2c1_master_example$F212 191B  
  __size_of_wr1RegCompleteHandler@i2c1_master_example$F212 0015  
           _wr1RegCompleteHandler@i2c1_master_example$F212 1906  
   __end_of_rd2RegCompleteHandler@i2c1_master_example$F206 1906  
  __size_of_rd2RegCompleteHandler@i2c1_master_example$F206 0015  
           _rd2RegCompleteHandler@i2c1_master_example$F206 18F1  
   __end_of_wr2RegCompleteHandler@i2c1_master_example$F218 27AC  
  __size_of_wr2RegCompleteHandler@i2c1_master_example$F218 0015  
           _wr2RegCompleteHandler@i2c1_master_example$F218 2797  
 __end_of_rdBlkRegCompleteHandler@i2c1_master_example$F229 1A1F  
__size_of_rdBlkRegCompleteHandler@i2c1_master_example$F229 001A  
         _rdBlkRegCompleteHandler@i2c1_master_example$F229 1A05  
   __end_of_rd1RegCompleteHandler@i2c1_master_example$F195 18F1  
  __size_of_rd1RegCompleteHandler@i2c1_master_example$F195 0015  
           _rd1RegCompleteHandler@i2c1_master_example$F195 18DC  
                                __end_of_I2C1_DO_SEND_STOP 266C  
                                            _write_tas6422 19D2  
                                ??_rdBlkRegCompleteHandler 007A  
                                       I2C1_SetCallback@cb 0023  
                                      ??_I2C1_MasterSetIrq 0070  
                                     __size_of_set_gainstr 009F  
                                                  ___aodiv 06F7  
                                                  ___aomod 1722  
                                                  ___awdiv 1FAF  
                                                  ___lbmod 1AE0  
                                          __size_of___wmul 001B  
                                     __end_of_init_pcm9211 15A2  
                                                ?_vfprintf 00B8  
                                     __end_of_init_tas6422 118E  
                                               _current_fs 013D  
                                                ?_puts_led 002F  
                     TMR1_DefaultInterruptHandler@pushstat 0143  
                                            ?_I2C1_DO_IDLE 0070  
                                            ?_I2C1_DO_RCEN 0070  
                                   i2c_writeNBytes@address 002F  
                                                  __ptext1 19D2  
                                                  __ptext2 144A  
                                                  __ptext3 0836  
                                                  __ptext4 13AB  
                                                  __ptext5 2783  
                                                  __ptext6 1000  
                                                  __ptext7 11FC  
                                                  __ptext8 1FAF  
                                                  __ptext9 118E  
                                 _I2C1_MasterEnableRestart 2632  
                                                  _lcdbuff 0320  
                                                  _led_dot 01A0  
                           ??_TMR1_DefaultInterruptHandler 0075  
                                __end_of_I2C1_MasterIsNack 2690  
                             ?_I2C1_SetAddressNackCallback 0028  
                                                  _ledbuff 022C  
                                          __size_of_strcat 0014  
                           __end_of_i2c_lcd_send_upper4bit 1C4C  
                                          __size_of_strcpy 0024  
                                          __size_of_strlen 0017  
                                                _T1CONbits 001B  
                                    _OSCILLATOR_Initialize 26DB  
                                                  _button1 0149  
                                             __size_of_abs 0018  
                                             __size_of_pad 0051  
                                     __end_of_read_clickRE 1E78  
                                                  _isalpha 1AC2  
                                                  _isdigit 1972  
                                __end_of_I2C1_MasterSetIrq 263E  
                                 __end_of_I2C1_DO_TX_EMPTY 1CCC  
                        __size_of_TMR1_SetInterruptHandler 0008  
                                                  _islower 19BA  
                                 ??_PIN_MANAGER_Initialize 0023  
                                                  _isspace 1AA5  
                                ?_TMR1_SetInterruptHandler 0023  
                                               ?_I2C1_Open 0070  
                                                  _tasbuff 014D  
                                                  _isupper 19A2  
                            __size_of_I2C1_MasterEnableIrq 0003  
                            __size_of_I2C1_MasterGetRxData 0003  
                                                  atoi@neg 0035  
                                        _i2c_lcd_send_data 1024  
                                 ?_I2C1_CallbackReturnStop 0079  
                                        ?_I2C1_WriteNBytes 002C  
                               __size_of_SYSTEM_Initialize 0012  
                                  i2c_read1ByteRegister@d2 0032  
                                                  _sprintf 1B42  
                                                  clrloop0 2697  
                                                  _toupper 1B21  
                        __end_of_I2C1_DO_SEND_RESTART_READ 2660  
                                     end_of_initialization 007F  
                               __end_of_I2C1_MasterSendAck 2658  
                                       ?_i2c_lcd_send_data 0070  
                                      _I2C1_MasterClearIrq 2644  
                                       ??_I2C1_WriteNBytes 002F  
                                     lcd_disp_param@otwarn 02C5  
                                                  fputc@fp 0025  
                                     lcd_disp_param@otshut 02C4  
                                                  init_ram 269C  
                                           ?_write_tas6422 0030  
                                        __end_of_set_gains 11FC  
                               __end_of_I2C1_MasterStartRx 2632  
                                                  fputs@fp 002B  
                                   ?_rd1RegCompleteHandler 0079  
                                                  initloop 269D  
                                          _i2c_writeNBytes 1B8A  
                                   _I2C1_DO_SEND_ADR_WRITE 26A2  
                                             _lcd_aux_name 2837  
                             __end_of_I2C1_DO_SEND_RESTART 2668  
                                  __end_of_I2C1_MasterOpen 273E  
                                   ?_wr1RegCompleteHandler 0079  
                                  __end_of_I2C1_MasterStop 2638  
                                  __end_of_I2C1_Initialize 26D2  
                                     __size_of_show_uolstr 009F  
                                      ??_i2c_lcd_send_data 0030  
                        __size_of_I2C1_CallbackReturnReset 0002  
                           __size_of_I2C1_MasterDisableIrq 0003  
                                    __size_of_i2c_lcd_home 000D  
                                    __size_of_i2c_lcd_init 0056  
                                ?_I2C1_CallbackReturnReset 0079  
                            __end_of_I2C1_MasterDisableIrq 264D  
                                              _I2C1_Status 024E  
                                    __size_of_i2c_lcd_puts 0015  
                            __size_of_I2C1_DO_ADDRESS_NACK 002B  
                                        __end_of_vfpfcnvrt 1000  
                                                _TAS_FC118 023A  
                                                _TAS_FC235 0238  
                                                _TAS_FC463 0236  
                                                _TAS_FS44K 01BD  
                                                _TAS_FS48K 01BB  
                                                _TAS_FS96K 0155  
                                  __size_of_I2C1_MasterFsm 0029  
                                  __size_of_I2C1_MasterIsr 0003  
                                      _I2C1_MasterSendNack 2650  
                                               _set_source 0836  
                      __end_of_I2C1_SetAddressNackCallback 2709  
                              _I2C1_SetAddressNackCallback 26FD  
                                     read_clickRE@interval 0145  
                                                _TAS_OSR64 0234  
                                                _TAS_RESET 01C3  
                                               ??_vfprintf 00BB  
                                     ?_I2C1_MasterClearIrq 0070  
                                           ??_I2C1_DO_IDLE 0070  
                                           ??_I2C1_DO_RCEN 0070  
                       __end_of_I2C1_DO_SEND_RESTART_WRITE 2664  
                               _I2C1_DO_SEND_RESTART_WRITE 2660  
                                               ??_puts_led 0031  
                                                  strcpy@d 0039  
                                                  strlen@a 0026  
                                                  strcpy@s 0037  
                                                  strlen@s 0023  
                                             _lcd_src_name 20D7  
                                __size_of_I2C1_MasterClose 0003  
                                        ?i1_I2C1_SetBuffer 0070  
                                         ??_WDT_Initialize 0023  
                                                _PORTAbits 000C  
                                  __size_of_I2C1_SetBuffer 0015  
                          __end_of_rdBlkRegCompleteHandler 1A05  
                                __size_of_I2C1_MasterStart 0002  
                                __size_of_I2C1_MasterWrite 0004  
                                     I2C1_WriteNBytes@data 002C  
                                       ??i1_I2C1_SetBuffer 0074  
                                  ??_i2c_read1ByteRegister 002D  
                                               _srcset9211 0227  
                            __size_of_I2C1_MasterOperation 001A  
                            ??_I2C1_SetAddressNackCallback 002B  
                                __end_of_i2c_lcd_send_data 1079  
                                         ___lbmod@dividend 0026  
                          I2C1_SetDataCompleteCallback@ptr 002A  
                        i1I2C1_SetDataCompleteCallback@ptr 0077  
                           I2C1_CallbackReturnReset@funPtr 0079  
                                     ?_I2C1_MasterSendNack 0070  
                                     _i2c_lcd_send_command 1079  
                                 __end_of_DATAEE_WriteByte 1B21  
                                  __size_of_chk6422warning 0096  
                                             _i2c_lcd_home 18CF  
                                             _i2c_lcd_init 10CF  
                         i2c_lcd_send_command@lowerdata_en 0034  
                                             _i2c_lcd_puts 1930  
                                              ___lbmod@rem 0028  
                                             _led_src_name 20FF  
                                __size_of_I2C1_SetCallback 0028  
                               __size_of_I2C1_DO_SEND_STOP 0004  
                   __end_ofi1_I2C1_SetDataCompleteCallback 26FD  
                  __size_ofi1_I2C1_SetDataCompleteCallback 000C  
                           i1_I2C1_SetDataCompleteCallback 26F1  
                                  ?_i2c_lcd_set_cursor_pos 0037  
                                    ??_I2C1_MasterClearIrq 0023  
                                              vfpfcnvrt@ap 0063  
                                              vfpfcnvrt@cp 00B0  
                                              vfpfcnvrt@fp 00B7  
                                              vfpfcnvrt@ll 00A0  
                                           __end_of___wmul 1A89  
                                           _I2C1_DO_RX_ACK 266C  
                                        __size_of_TMR1_ISR 0014  
                                    __end_of_i2c_lcd_clear 2722  
                                   ?_OSCILLATOR_Initialize 0070  
                            i2c_lcd_send_data@upperdata_en 0033  
                               __size_of_I2C1_MasterIsNack 0006  
                          __end_of_I2C1_CallbackReturnStop 262E  
                           __size_of_I2C1_MasterSendTxData 0004  
                             __end_of_i2c_lcd_ulcursor_off 274C  
                            __end_of_I2C1_MasterSendTxData 265C  
                                           __end_of_strcat 2797  
                               __size_of_I2C1_MasterSetIrq 0003  
                                           __end_of_strcpy 1024  
                                           __end_of_strlen 1972  
                                      start_initialization 0027  
                                              ??_I2C1_Open 0025  
                            __size_of_I2C1_DO_RX_NACK_STOP 0004  
                           __size_ofi1_I2C1_MasterClearIrq 0003  
                          __size_of_PIN_MANAGER_Initialize 0034  
                                              __end_of_abs 19A2  
                                            _TAS_CHK_RAILS 01B7  
                            __end_ofi1_I2C1_MasterClearIrq 2641  
                                              __end_of_pad 1FAF  
                                    ??_I2C1_MasterSendNack 0070  
                                  __end_of_i2c_writeNBytes 1BAF  
                                    ?_i2c_lcd_send_command 0070  
                                          ??_write_tas6422 0031  
                    TMR1_DefaultInterruptHandler@RE_offset 0142  
                                         _read_clickRE$506 0072  
                                   rd1RegCompleteHandler@p 0079  
                                      DATAEE_ReadByte@bAdd 0023  
                                 I2C1_SetBuffer@bufferSize 0025  
                                         ?_I2C1_MasterOpen 0070  
                           __end_of_i2c_lcd_set_cursor_pos 1D5E  
                                    __size_of_init_pcm9211 00B9  
                                         ?_I2C1_MasterStop 0070  
                                         ?_I2C1_Initialize 0070  
                                    __size_of_init_tas6422 0069  
                                      __end_of_led_i2s_dir 208C  
                                 __size_of_TMR1_Initialize 001B  
                                              vfprintf@fmt 00B8  
                                         ??_PMD_Initialize 0023  
                             i2c_read1ByteRegister@address 002E  
                                   __end_of_I2C1_DO_RX_ACK 2670  
                                                 ??___wmul 002D  
                                        get7seg_font@cdata 0072  
                                              ?_set_source 0070  
                                      chk6422warning@prail 0135  
                                   wr1RegCompleteHandler@p 0079  
                               i2c_lcd_set_cursor_pos@line 0037  
                                  ??_I2C1_DO_SEND_ADR_READ 0070  
                               __end_ofi1_I2C1_SetCallback 1BFC  
                                       lcd_disp_param@clip 02C6  
                                      __end_of_lcd_fs_name 1870  
                                       lcd_disp_param@ocdc 02C3  
                                              __pdataBANK2 014F  
                                              __pdataBANK3 01A0  
                                              __pdataBANK4 0220  
                                       lcd_disp_param@ilim 02C7  
                                              __pdataBANK5 02CB  
                                    __size_of_read_clickRE 004A  
                                  __size_of_lcd_disp_param 01BB  
                                          show_uolstr@gval 00DB  
                               ??_I2C1_SetInterruptHandler 0025  
                                                 ??_strcat 003F  
                                                 ??_strcpy 0033  
                                                 ??_strlen 0025  
                                         I2C1_Open@address 0026  
                                      __end_of_led_fs_name 20D7  
                                              __pbssCOMMON 007D  
                               __size_of_i2c_lcd_send_data 0055  
                                     _I2C1_DO_SEND_RESTART 2664  
                                                ___latbits 0003  
                                            __pcstackBANK0 0020  
                                            __pcstackBANK1 00A0  
                                            __pcstackBANK5 02C0  
                                         ___aodiv@dividend 002B  
                                           _current_source 0140  
                                           _current_volume 006C  
                              ??_I2C1_DO_SEND_RESTART_READ 0070  
                               i1I2C1_SetBuffer@bufferSize 0072  
                                             _init_pcm9211 14E9  
                                     __end_of_I2C1_DO_IDLE 2685  
                                             _init_tas6422 1125  
                                     __end_of_I2C1_DO_RCEN 2696  
                            I2C1_SetAddressNackCallback@cb 0028  
                                                _atoi$2270 003B  
                                                _atoi$2271 0039  
                                                _atoi$2269 0037  
                                    _rd2RegCompleteHandler 27D6  
                                              puts_led@str 002F  
                                             _read_clickRE 1E2E  
                                    __end_of_fsmStateTable 2142  
                                   _PIN_MANAGER_Initialize 0802  
                                                _dtoa$2213 004A  
                                    _wr2RegCompleteHandler 27EB  
                                   _MSSP1_InterruptHandler 0132  
                               ??_I2C1_MasterEnableRestart 0070  
                                           _I2C1_MasterFsm 1C4C  
                                           _I2C1_MasterIsr 2641  
                         __end_of_TMR1_SetInterruptHandler 26C1  
                                   __size_of_I2C1_DO_RESET 0005  
                                                 ?___aodiv 0023  
                                                 ?___aomod 0023  
                                          ?_I2C1_DO_RX_ACK 0070  
                                                 ?___awdiv 0023  
                                                __ptext100 1CA0  
                                                __ptext101 263B  
                                                __ptext110 1A05  
                                                __ptext102 268A  
                                         ___aodiv@quotient 0036  
                                                __ptext111 1906  
                                                __ptext103 2658  
                                                __ptext120 26F1  
                                                __ptext112 18F1  
                                                __ptext104 2654  
                                                __ptext121 1BD4  
                                                __ptext113 18DC  
                                                __ptext105 2638  
                                                __ptext122 26E5  
                                                __ptext114 19EB  
                                                __ptext106 2650  
                                                __ptext123 2635  
                                                __ptext115 27EB  
                                                __ptext107 2630  
                                                __ptext124 2632  
                                                __ptext116 27D6  
                                                __ptext108 262E  
                                                __ptext117 27C1  
                                                __ptext109 262C  
                                                __ptext118 27AC  
                                                __ptext119 2797  
                                                 ?___lbmod 0023  
                                         _I2C1_MasterClose 2647  
                                        read_clickRE@index 0146  
                                           _I2C1_SetBuffer 191B  
                             ??_INTERRUPT_InterruptManager 007D  
                                         _I2C1_MasterStart 0002  
                                        __size_of_vfprintf 0031  
                                         _I2C1_MasterWrite 267C  
                                        __size_of_puts_led 007A  
                                                 _CALC_ADC 01B1  
                                                 _CALC_DIR 01B3  
                                                 _CALC_DIT 01AB  
                                 __size_of_TMR1_StartTimer 0002  
                                                 ?_isalpha 0023  
                                                 ?_isdigit 0023  
                                    ?_I2C1_DO_SEND_RESTART 0070  
                                                 ?_islower 0023  
                                                 ?_isspace 0023  
                                        ?_I2C1_DO_TX_EMPTY 0070  
                                                 ?_isupper 0023  
                                   ??_i2c_lcd_send_command 0030  
                              __size_of_DELAY_milliseconds 0014  
                         __end_of_I2C1_CallbackReturnReset 2630  
                                         ?_i2c_writeNBytes 002C  
                      TMR1_DefaultInterruptHandler@pushcnt 012C  
                                       ??_I2C1_DO_TX_EMPTY 007A  
                                                 ?_sprintf 00C0  
                                           __size_of_fputc 004C  
                                           __size_of_fputs 0025  
                                           _chk6422warning 1276  
                                 __size_of_DATAEE_ReadByte 000E  
                                  ??_rd1RegCompleteHandler 007A  
                                                 ?_toupper 0029  
                                  ?_I2C1_DO_SEND_ADR_WRITE 0070  
                                I2C1_MasterSendTxData@data 0070  
                                           __size_of_putch 0001  
                                                 _DIR_COAX 01DF  
                                      __size_of_set_source 0113  
                                                 _DIT_LVDS 01D7  
                                  ??_wr1RegCompleteHandler 007A  
                                              _INIT9211_20 01CF  
                                              _INIT9211_31 01C5  
                                              _INIT9211_26 01C9  
                                              _INIT9211_27 01C7  
                                              _INIT9211_2B 01CB  
                                              _INIT9211_2E 01CD  
                                              _led_i2s_dir 207E  
                                         _I2C1_SetCallback 1BFC  
                               i2c_lcd_send_data@lowerdata 0036  
                                           ___wmul@product 002D  
                                   i2c_read1ByteRegister@e 002F  
                                                 _LATAbits 010C  
                                                 _LATBbits 010D  
                                   i2c_read1ByteRegister@x 0030  
                                               _I2C1_DO_RX 1D5E  
                                               _I2C1_DO_TX 1F0F  
                                                clear_ram0 2696  
                                            ??_set_gainstr 00DA  
                                                 _PIE1bits 0091  
                                               _I2C1_Close 1A89  
                                              _lcd_fs_name 1800  
                                   __end_of_I2C1_MasterFsm 1C75  
                                   __end_of_I2C1_MasterIsr 2644  
                                 __size_of_TMR1_WriteTimer 000F  
                             __end_of_I2C1_MasterEnableIrq 2650  
                                     _i2c_lcd_ulcursor_off 273E  
                      __size_of_INTERRUPT_InterruptManager 0021  
                             __end_of_I2C1_MasterGetRxData 263B  
                                                _set_gains 118E  
                                                 _PIR1bits 0011  
                         __size_of_I2C1_CallbackReturnStop 0002  
                                                 _TAS_FC30 023E  
                                                 _TAS_FC15 0240  
                                                 _TAS_FC59 023C  
                                      read_clickRE@current 0074  
                                __size_of_I2C1_WriteNBytes 0025  
                                       _I2C1_MasterSendAck 2654  
                           DELAY_milliseconds@milliseconds 0023  
                                _I2C1_DO_SEND_RESTART_READ 265C  
                                                 _TAS_PLAY 0153  
                                                 _TAS_MUTE 01B9  
                                                 _SSP1CON1 0215  
                                                 _SSP1CON2 0216  
                                                 _SSP1CON3 0217  
                                                 _TMR1_ISR 275B  
                                   __end_of_I2C1_SetBuffer 1930  
                                                 _SSP1STAT 0214  
                                          set_gainstr@gval 00DB  
                     __end_of_I2C1_SetDataCompleteCallback 2715  
                    __size_of_I2C1_SetDataCompleteCallback 000C  
                             _I2C1_SetDataCompleteCallback 2709  
                                              _led_fs_name 20AD  
                                       _I2C1_MasterStartRx 2630  
                                                 _SRC_LVDS 01E9  
                                                _vfpfcnvrt 0DA8  
                              ?_I2C1_DO_SEND_RESTART_WRITE 0070  
                                                _xtoa$2234 004E  
                                                _xtoa$2235 0050  
                                        ??_TMR1_Initialize 0025  
                                              _AUXSRC_AUTO 01E5  
                               i2c_lcd_send_data@upperdata 0035  
                                              _AUXSRC_LVDS 01E1  
                                      ?_I2C1_MasterSendAck 0070  
                    TMR1_DefaultInterruptHandler@led_blink 0120  
                                        ___wmul@multiplier 0029  
                                 ?_I2C1_DO_RX_NACK_RESTART 0070  
                                                main@count 0134  
                                      ?_I2C1_MasterStartRx 0070  
                             __end_of_I2C1_DO_ADDRESS_NACK 1CA0  
                           __size_of_i2c_read1ByteRegister 0047  
                                   __end_of_chk6422warning 130C  
                                    DATAEE_WriteByte@bData 002B  
                            __end_of_i2c_read1ByteRegister 1DE6  
                                             _isspace$2296 0027  
                           __end_of_I2C1_DO_SEND_ADR_WRITE 26A9  
                                            _I2C1_DO_RESET 2685  
                                               vfpfcnvrt@c 00B2  
                         i2c_lcd_send_command@upperdata_en 0033  
                                    I2C1_Close@returnValue 0024  
                                 ?_rdBlkRegCompleteHandler 0079  
                                        ?_DATAEE_WriteByte 0029  
                                      I2C1_SetCallback@idx 0027  
                                __size_ofi1_I2C1_SetBuffer 000C  
                                      I2C1_SetCallback@ptr 0025  
                                            ??_show_uolstr 00DA  
                                     ??_I2C1_MasterSendAck 0070  
                                   ?_rd2RegCompleteHandler 0079  
                                       ??_DATAEE_WriteByte 002C  
                             __end_of_I2C1_MasterOperation 1A39  
                                   ?_wr2RegCompleteHandler 0079  
                                     ??_I2C1_MasterStartRx 0070  
                                    ?_i2c_lcd_ulcursor_off 0070  
                                          ?_I2C1_MasterFsm 0070  
                                          ?_I2C1_MasterIsr 0070  
                                               ?_set_gains 003A  
                                               vfprintf@ap 00BA  
                                               vfprintf@fp 00BD  
                                      i2c_writeNBytes@data 002C  
                                       __end_of_lcd_hpf_fc 203F  
                                    _I2C1_MasterDisableIrq 264A  
                                  ??_OSCILLATOR_Initialize 0023  
                                      __end_of_set_gainstr 144A  
                                          ?_I2C1_SetBuffer 0023  
                                         __size_of___aodiv 00F6  
                                         __size_of___aomod 00DE  
                                         __size_of___awdiv 0051  
                                           _lcd_disp_param 0BED  
                                         __size_of___lbmod 0020  
                                       __end_of_led_hpf_fc 207E  
                                               ?_vfpfcnvrt 0062  
                                          ___aodiv@divisor 0023  
                                 _TMR1_SetInterruptHandler 26B9  
                                          ___aodiv@counter 0034  
                                   ??_I2C1_DO_SEND_RESTART 0070  
                                    _TMR1_InterruptHandler 012E  
                                               sprintf@fmt 00C2  
                                              _current_aux 013E  
                                              _current_hpf 006A  
                                               strcat@dest 003B  
                                              _current_uol 013C  
                                         __size_of_isalpha 001E  
                                         __size_of_isdigit 0018  
                                            ?_get7seg_font 0070  
                                           ?_I2C1_DO_RESET 0070  
                                          ?_chk6422warning 0070  
                                    __size_of_I2C1_DO_IDLE 0005  
                                         __size_of_islower 0018  
                                    __size_of_I2C1_DO_RCEN 0006  
                                         __size_of_isspace 001D  
                                             set_gains@bal 003A  
                                                 __ptext10 0BED  
                                                 __ptext11 1B42  
                                                 __ptext20 0949  
                                                 __ptext12 1CFA  
                                                 __ptext21 1F5E  
                                                 __ptext13 0DA8  
                                                 __ptext30 1AA5  
                                                 __ptext22 195B  
                                                 __ptext14 0A97  
                                                 __ptext31 1972  
                                                 __ptext23 1BAF  
                                                 __ptext15 1B21  
                                                 __ptext40 1B8A  
                                                 __ptext32 1A6E  
                                                 __ptext24 1EC3  
                                                 __ptext16 19BA  
                                                 __ptext41 273E  
                                                 __ptext33 1D2B  
                                                 __ptext25 07FF  
                                                 __ptext17 19A2  
                                                 __ptext50 2709  
                                                 __ptext42 10CF  
                                                 __ptext34 1930  
                                                 __ptext26 198A  
                                                 __ptext18 1AC2  
                                                 __ptext51 191B  
                                                 __ptext43 1C24  
                                                 __ptext35 1024  
                                                 __ptext27 1722  
                                                 __ptext19 165D  
                                                 __ptext60 0002  
                                                 __ptext52 26FD  
                                                 __ptext44 18CF  
                                                 __ptext36 1AE0  
                                                 __ptext28 06F7  
                                                 __ptext61 1A89  
                                                 __ptext53 1BFC  
                                                 __ptext45 2715  
                                                 __ptext37 1125  
                                                 __ptext29 130C  
                                                 __ptext70 26B1  
                                                 __ptext62 264A  
                                                 __ptext54 1DE6  
                                                 __ptext46 1079  
                                                 __ptext38 276F  
                                                 __ptext71 0802  
                                                 __ptext63 2647  
                                                 __ptext55 26C1  
                                                 __ptext47 1B65  
                                                 __ptext39 14E9  
                                                 __ptext80 1E2E  
                                                 __ptext72 26DB  
                                                 __ptext64 2644  
                                                 __ptext56 2730  
                                                 __ptext48 1276  
                                                 __ptext81 1945  
                                                 __ptext73 26C9  
                                                 __ptext65 0800  
                                                 __ptext57 264D  
                                                 __ptext49 1D9F  
                                                 __ptext90 2668  
                                                 __ptext82 2641  
                                                 __ptext74 1B00  
                                                 __ptext66 07ED  
                                                 __ptext58 267C  
                                                 __ptext91 2664  
                                                 __ptext83 1C4C  
                                                 __ptext75 2722  
                                                 __ptext67 2678  
                                                 __ptext59 1A1F  
                                                 __ptext92 2660  
                                                 __ptext84 263E  
                                                 __ptext68 1A53  
                                                 __ptext93 265C  
                                                 __ptext85 1C75  
                                                 __ptext77 275B  
                                                 __ptext69 26B9  
                                                 __ptext94 2690  
                                                 __ptext86 2685  
                                                 __ptext78 274C  
                                                 __ptext95 1D5E  
                                                 __ptext87 2674  
                                                 __ptext79 15A2  
                                                 __ptext96 1F0F  
                                                 __ptext88 2670  
                                                 __ptext97 26A2  
                                                 __ptext89 266C  
                                                 __ptext98 26A9  
                                                 __ptext99 2680  
                                         __size_of_isupper 0018  
                                             set_gains@vol 003C  
                                             _SSP1CON1bits 0215  
                                             _SSP1CON2bits 0216  
                                        ??_TMR1_StartTimer 0023  
                                         __size_of_sprintf 0023  
                                                 _font7seg 1870  
                              DATAEE_WriteByte@GIEBitValue 002C  
                                               strcpy@dest 002F  
                                         __size_of_toupper 0021  
                                   chk6422warning@lasttime 013B  
                                 _I2C1_CallbackReturnReset 262E  
                                            __size_of_atoi 009F  
                                            __size_of_main 0674  
                                            __size_of_dtoa 014E  
                                              ?_I2C1_DO_RX 0070  
                                              ?_I2C1_DO_TX 0070  
                                            __size_of_stoa 00C5  
                                            __size_of_xtoa 0156  
                                        ??_DATAEE_ReadByte 0025  
                              __end_of_I2C1_MasterClearIrq 2647  
                             __end_of_I2C1_DO_RX_NACK_STOP 2674  
                                              ?_I2C1_Close 0070  
                                                stoa@F1141 0220  
                                      __end_of_show_uolstr 14E9  
                                   __end_of_lcd_disp_param 0DA8  
                                             ??_set_source 0030  
                                                 int$flags 007E  
                                 ??_i2c_lcd_send_upper4bit 0030  
                          __end_of_I2C1_DO_RX_NACK_RESTART 2678  
                                               _AUXSRC_ADC 01E3  
                                               _AUXSRC_I2S 01B5  
                                               _AUXSRC_DIR 015F  
                                 I2C1_MasterOperation@read 0024  
                                                 _vfprintf 1CFA  
                       __end_of_INTERRUPT_InterruptManager 0025  
                               _INTERRUPT_InterruptManager 0004  
                                        ??_TMR1_WriteTimer 0072  
                                                 _puts_led 11FC  
                           __size_of_I2C1_DO_SEND_ADR_READ 0008  
                                     get7seg_font@fontdata 0071  
                                 i2c_read1ByteRegister@reg 002C  
                            __end_of_I2C1_DO_SEND_ADR_READ 26B1  
                                             _I2C1_DO_IDLE 2680  
                                             _I2C1_DO_RCEN 2690  
                                         ___aomod@dividend 002B  
                              __end_of_I2C1_MasterSendNack 2654  
                                           _vfpfcnvrt$2249 00B5  
                                               _INTCONbits 000B  
                                           ??_get7seg_font 0070  
                                              _NVMCON1bits 0895  
                           I2C1_SetAddressNackCallback@ptr 002A  
                                     _I2C1_MasterEnableIrq 264D  
                                       i1_I2C1_SetCallback 1BD4  
                                       i2c_writeNBytes@len 002D  
                                           __pstringtext10 2837  
                                           __pstringtext11 207E  
                                           __pstringtext20 286E  
                                           __pstringtext12 2800  
                                           __pstringtext21 2872  
                                           __pstringtext13 2814  
                                           __pstringtext30 2896  
                                           __pstringtext22 2876  
                                           __pstringtext14 2845  
                                           __pstringtext31 289A  
                                           __pstringtext23 287A  
                                           __pstringtext15 2853  
                                           __pstringtext32 289E  
                                           __pstringtext24 287E  
                                           __pstringtext16 285D  
                                           __pstringtext33 0000  
                                           __pstringtext25 2882  
                                           __pstringtext17 2862  
                                           __pstringtext26 2886  
                                           __pstringtext18 2866  
                                           __pstringtext27 288A  
                                           __pstringtext19 286A  
                                           __pstringtext28 288E  
                                     _I2C1_MasterGetRxData 2638  
                                           __pstringtext29 2892  
                                    _I2C1_MasterSendTxData 2658  
                                                 isalpha@c 0023  
                                                 isdigit@c 0023  
                                  __size_of_WDT_Initialize 0004  
                                    i1_I2C1_MasterClearIrq 263E  
                                                 intlevel1 0000  
                                                sprintf@ap 00D3  
                                                strcat@src 003D  
                                       __end_of_set_source 0949  
                                 __end_of_I2C1_MasterClose 264A  
                                   rd2RegCompleteHandler@p 0079  
                                      ?i1_I2C1_SetCallback 0070  
                                    __end_of_write_tas6422 19EB  
                                                 islower@c 0023  
                                                 isspace@c 0023  
                                  ?_PIN_MANAGER_Initialize 0070  
                                 __end_of_I2C1_MasterStart 0004  
                                 __end_of_I2C1_MasterWrite 2680  
                                   ??_i2c_lcd_ulcursor_off 0037  
                                  I2C1_WriteNBytes@address 002F  
                                                strcpy@src 0031  
                                   __size_of_i2c_lcd_clear 000D  
                                         ??_I2C1_DO_RX_ACK 0070  
                                                 isupper@c 0023  
                                  _I2C1_CallbackReturnStop 262C  
                                              _set_gainstr 13AB  
                                              ??_set_gains 003B  
                                     _I2C1_DO_ADDRESS_NACK 1C75  
                                   ?_I2C1_MasterDisableIrq 0070  
                                         _I2C1_WriteNBytes 1B65  
                                          ?_lcd_disp_param 0070  
                                   wr2RegCompleteHandler@p 0079  
                                          ___aomod@divisor 0023  
                                              ??_vfpfcnvrt 0064  
                                                 stoa@nuls 0030  
                                          ___aomod@counter 0034  
                                      _lcd_disp_param$2750 02C9  
                                      _lcd_disp_param$2751 02C0  
                                 __size_of_I2C1_MasterOpen 000E  
                                   set_source@sourcenumber 0033  
                                 __size_of_I2C1_MasterStop 0003  
                                 __size_of_I2C1_Initialize 0009  
                                     ??i1_I2C1_SetCallback 0073  
                                            __pstringtext1 1870  
                                            __pstringtext2 20AD  
                                            __pstringtext3 2122  
                                            __pstringtext4 2827  
                                            __pstringtext5 1800  
                                            __pstringtext6 2000  
                                            __pstringtext7 203F  
                                            __pstringtext8 20D7  
                                         main@vol_move_cnt 00ED  
                                            __pstringtext9 20FF  
                                               _TAS_OSR128 0232  
                                 __end_of_I2C1_SetCallback 1C24  
                                               _TAS_NORMAL 014F  
                         i1I2C1_SetDataCompleteCallback@cb 0075  
                                                 sprintf@f 00D4  
                                                 sprintf@s 00C0  
                     ?_rd1RegCompleteHandler@islower$F2412 0079  
                     ?_wr1RegCompleteHandler@islower$F2404 0079  
                    ??_rd1RegCompleteHandler@islower$F2414 007A  
                    ??_wr1RegCompleteHandler@islower$F2406 007A  
                  ??_rdBlkRegCompleteHandler@islower$F2431 007A  
                     ?_wr2RegCompleteHandler@islower$F2423 0079  
                    ??_wr2RegCompleteHandler@islower$F2425 007A  
                     ?_rd2RegCompleteHandler@islower$F2417 0079  
                    ??_rd2RegCompleteHandler@islower$F2419 007A  
                   ?_rdBlkRegCompleteHandler@islower$F2429 0079  
                                               _SSP1DATPPS 0E21  
                                               _SSP1CLKPPS 0E20  
                                      __size_of_I2C1_DO_RX 0041  
                                      __size_of_I2C1_DO_TX 004F  
                                          ??_I2C1_DO_RESET 0070  
                                     _I2C1_MasterOperation 1A1F  
                                                 toupper@c 0029  
                                    ?_I2C1_MasterEnableIrq 0070  
                                      __size_of_I2C1_Close 001C  
                                    ?_I2C1_MasterGetRxData 0070  
                                   i1I2C1_SetBuffer@buffer 0070  
                       i2c_lcd_send_upper4bit@upperdata_en 0032  
                                             ___aodiv@sign 0035  
                                         i1_I2C1_SetBuffer 26E5  
                           __end_of_PIN_MANAGER_Initialize 0836  
                        __size_of_I2C1_SetInterruptHandler 0008  
                           __size_of_rd1RegCompleteHandler 0015  
                                ?_I2C1_SetInterruptHandler 0023  
                            __end_of_rd1RegCompleteHandler 27D6  
                                       __size_of_I2C1_Open 0048  
                                              _show_uolstr 144A  
                           __size_of_wr1RegCompleteHandler 0015  
                                        _current_direction 007D  
                            __end_of_wr1RegCompleteHandler 27C1  
                                             ___aomod@sign 0035  
                                __size_of_I2C1_DO_TX_EMPTY 002C  
                                          _TMR1_Initialize 1A53  
                                    ?_I2C1_DO_ADDRESS_NACK 0070  
